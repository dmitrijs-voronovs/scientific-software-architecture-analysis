quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"Okay this turned into quite the refactoring adventure. I am still not happy with the naming of the parameters, so they might change until release 11. But you can now do the following:; ```; mmseqs filterdb aln_result aln_filtered --beats-first --filter-column 2 --comparison-operator ip --comparison-value 0.8; ```; This means it keeps everything that it within 0.8 * alnScore of the first row. I'll update the documentation etc in a few days once I decide on names.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/249#issuecomment-562196896:32,refactor,refactoring,32,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/249#issuecomment-562196896,1,['refactor'],['refactoring']
Modifiability,"P 135849) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 28 (Thread 0x7f6e74ffc640 (LWP 135848) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 27 (Thread 0x7f6e757fd640 (LWP 135847) ""mmseqs""):; #0 0x00005f84645c3fe9 in PSSMCalculator::computeContextSpecificWeights(float*, float*, float*, unsigned long, unsigned long, char const**) (); #1 0x00005f84645c510c in PSSMCalculator::computePSSMFromMSA(unsigned long, unsigned lo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:33906,config,config,33906,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,Parallelization across compute nodes should work without issue by using MPI/OpenMP hybrid parallelization:; https://github.com/soedinglab/MMseqs2/wiki#how-to-run-mmseqs2-on-multiple-servers-using-mpi. (Setting the RUNNER environment variable with the mpirun envocation). Regarding the memory usage: MMseqs2 will use as much memory as the compute node has available. You can force it to split the target database into chunks to reduce the peak memory usage at the cost of slight increase in run time. Use either the `--split` or the `--split-memory-limit` for that.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-467835630:233,variab,variable,233,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-467835630,1,['variab'],['variable']
Modifiability,Please make sure you submit one MPI job per node. Thread parallelization still happens through OpenMP not MPI. Also how are you calling mmseqs2? Are you passing the relevant `mpirun` with the `RUNNER` env variable?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461532199:205,variab,variable,205,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461532199,1,['variab'],['variable']
Modifiability,"Replace the function with something like this:. ```; size_t Util::getTotalSystemMemory() {; char* memoryOverride = getenv(""MMSEQS_MEMORY_OVERRIDE"");; if (memoryOverride != NULL) {; return strtoull(memoryOverride, NULL, 10);; }. // check for real physical memory; long pages = getTotalMemoryPages();; long page_size = getPageSize();; uint64_t sysMemory = pages * page_size;; return sysMemory;; }; ```. Then you can use `MMSEQS_MEMORY_OVERRIDE` env variable to control the maximum memory. What are you trying to achieve? Manually setting `--split` would be my preferred solution, until we implement something better. That will work for all search modes (except target profile searches), but not for linclust and cascaded clustering.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359816047:447,variab,variable,447,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359816047,1,['variab'],['variable']
Modifiability,"Replacing the `util/regression/samtools/samtools.sh` with the following works:; ```; #!/bin/sh -e; SELF=""$( cd ""$(dirname ""$0"")"" ; pwd -P )""; SUFFIX=""""; case ""$(uname -m)"" in; arm*|aarch*) SUFFIX=""-aarch64"" ;;; ppc*) SUFFIX=""-ppc64le"" ;;; esac; case ""$(echo ""$OSTYPE"" | tr '[:upper:]' '[:lower:]')"" in; linux*) exec ""$SELF/samtools-linux$SUFFIX"" ""$@"" ;;; darwin*) exec ""$SELF/samtools-darwin"" ""$@"" ;;; msys*|cygwin*) exec ""$SELF/samtools-windows"" ""$@"" ;;; esac; samtools ""$@""; ```; I don't want to push that commit that right now since we are in the process of some bigger refactoring. `SLICEPROFILE` is a bit fickle about RAM available per core used. That seems to have been the problem:; ```; [=======mem_align could not allocate memory.; ```. I also fixed the bogus error messages in https://github.com/soedinglab/MMseqs2/commit/15ace29a276be54fee6b9aedd7a1e814a3c7769b",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414:573,refactor,refactoring,573,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414,1,['refactor'],['refactoring']
Modifiability,"Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (4160 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > Time for fill: 0 h 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Time for processing: 0 h 0 m 0s; > Rescore diagonals. However, I get the following error when there are some identical sequences:. > MMseqs Version: 	8c0c7fb86ce154b236d6fe294811de3b09850fba; > Sub Matrix 	blosum62.out; > Alphabet size 	13; > Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (3200 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > ~/tmp/2230240821590219627/linclust/10911929691229894817/linclust.sh: line 18: 28296 Segmentation fault (core dumped) $MMSEQS kmermatcher ""$INPUT"" ""$3/pref"" ${KMERMATCHER_PAR}; > Rescore diagonals. Has anyone seen this before? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282:1448,extend,extendable,1448,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282,1,['extend'],['extendable']
Modifiability,So far so good. The program is running smoothly and the kmermatcher step is ended without errors. . ```; kmermatcher data/02_geneclust/plass_assembly_noclust /mnt/lustre/scratch/aauladell/9518450204626139512/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.95 --kmer-per-seq 21 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-m; ode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 48 --compressed 0 -v 3. Database size: 823952135 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 263893 MB; Generate k-mers list for 1 split; [=================================================================] 823.95M 37m 20s 931ms; Sort kmer 0h 11m 29s 726ms; Sort by rep. sequence 0h 2m 46s 392ms; Time for fill: 0h 3m 48s 1ms; Time for merging files: 0h 4m 55s 350ms; Time for processing: 1h 13m 27s 843ms; ```. Thanks!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-499063090:436,extend,extendable,436,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-499063090,1,['extend'],['extendable']
Modifiability,So the `_N` suffix comes already form your FASTA files? ; If thats the case: We already have a feature request in #82 for being able to adapt the parsing logic for FASTA headers. However none had time to work on that yet. We will keep that in mind for the future.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/163#issuecomment-462779388:136,adapt,adapt,136,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/163#issuecomment-462779388,1,['adapt'],['adapt']
Modifiability,So you want the longest sequence to be the representative sequence. ; This can be done with `--cluster-mode 3`. . The closet result to CD-HIT can be achieved by the following command: . REASSIGN=TRUE mmseqs cluster seqDB clu tmp --cluster-mode 3. We will make the REASSIGN variable into a real MMseqs2 parameter.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/220#issuecomment-514829095:273,variab,variable,273,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/220#issuecomment-514829095,1,['variab'],['variable']
Modifiability,"Sorry for the delay, would you mind uploading the two FASTA files (with the 17 seq each)?. I started refactoring the code and think I know whats wrong.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-585777485:101,refactor,refactoring,101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-585777485,1,['refactor'],['refactoring']
Modifiability,"Sorry, that will not work (at least not without a lot of refactoring). Our error handling would just kill the whole python/r/julia process. You could hack our EXIT macro, but then you would be leaking memory. Do you want all-against-all exact Smith-Waterman alignments (like SWIPE) or also the prefiltering stage?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/81#issuecomment-381918443:57,refactor,refactoring,57,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/81#issuecomment-381918443,1,['refactor'],['refactoring']
Modifiability,"Sounds like a plan!. Building a plugin is a pretty big lift as it requires close integration with Qiime 2 [semantic types](https://docs.qiime2.org/2019.10/semantic-types/). But at least the [docs](https://docs.qiime2.org/2019.10/plugins/developing/) are good! . I don't think I'm the right person to lead development, but I would be happy to contribute methods to the plugin.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580295404:32,plugin,plugin,32,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-580295404,3,['plugin'],"['plugin', 'plugins']"
Modifiability,Thank you Antonio! Do you have any idea what caused this? @salvoc81 reported once a similar multi mmseqs2 instance issues. But this should have been fixed by removing the OMP_PROC_BIND flag. Is it possible that you have set this variable?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-509506612:229,variab,variable,229,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-509506612,1,['variab'],['variable']
Modifiability,"Thank you for quick response! ALP was indeed the missing piece in my puzzle. I am looking at `src/alignment/EvalueComputation.h` and I am a little confused about the default params for nucleotide alignment. From these lines I can see default gap open and extend penalties are 7 and 1:; https://github.com/soedinglab/MMseqs2/blob/f5f780acd64482cd59b46eae0a107f763cd17b4d/src/alignment/EvalueComputation.h#L56-L62. But the CLI help for `search` command shows 5 and 2:; ``` ; --gap-open TWIN Gap open cost [nucl:5,aa:11]; --gap-extend TWIN Gap extension cost [nucl:2,aa:1]; ```; Is it a bug or are those two unrelated?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-1638104817:255,extend,extend,255,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-1638104817,2,['extend'],['extend']
Modifiability,Thank you for the file. I can not reproduce the bug. ; Could you compile mmseqs2 with debug flags and send me the back trace? . cmake -DCMAKE_BUILD_TYPE=Debug ..; make -j 6; gdb --args mmseqs kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. After GDB started type `r` an after it crashed `bt`.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136#issuecomment-441411023:500,extend,extendable,500,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136#issuecomment-441411023,1,['extend'],['extendable']
Modifiability,"Thank you for your response. > -s doesn't do anything for nucleotide searches we don't have real substitution matrices so we cannot generate similar k-mers. I think the wiki misses this detail. The `mmseqs` manual even suggests that a substitution matrix is used for nucleotide k-mer generation (the part with `nucl:nucleotide.out`):. ```; --seed-sub-mat MAT Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]; ```. > but It might be to the --zdrop parameter which stops nucleotide alignments early. Unfortunately, increasing `--zdrop` does not fix the truncation. Actually, extending the alignment to the left should even increase the score because the next position would contain a match (`C` with `C`).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/327#issuecomment-654266176:606,extend,extending,606,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/327#issuecomment-654266176,1,['extend'],['extending']
Modifiability,Thank you very much. I will adapt the command and will explore the differences between cd-hit and mmseqs further. Hans,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/836#issuecomment-2097517929:28,adapt,adapt,28,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/836#issuecomment-2097517929,1,['adapt'],['adapt']
Modifiability,"Thanks @milot-mirdita , another problem I encounter with the apply command is that the variable $MMSEQS_ENTRY_NAME is empty.; Do you have any idea why?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/113#issuecomment-428857734:87,variab,variable,87,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/113#issuecomment-428857734,1,['variab'],['variable']
Modifiability,"Thanks a lot for the help, Milot!; Here is the gdb outputs:. $ gdb --args mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...(no debugging symbols found)...done.; (gdb) r; Starting program: /ebio/abt6_projects8/1001g_plus/code/Programs/miniconda3/envs/MMseqs2/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-exte",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:545,extend,extend,545,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840,2,"['config', 'extend']","['configured', 'extend']"
Modifiability,"Thanks for the pointer. I did not look at biocontainers before, cool to see that MMseqs2 is on there. As far as I can tell, biocontainer are optimized for application shipping aka. they only include the absolute bare minimum required for that application. In fact the containers built by biocontainer seem to be based on busybox, which makes it hard to extend them. Since my goal right now is to build a container that includes MMseqs2 + additional tooling, biocontainers is not an ideal solution for me. The only way I could use it is if I manage to extract the compiled MMseqs files from the container and include that into another one. However that might be rather fragile and complex. . An easier solution could be to add a Dockerfile recipe to biocontainers which will then build the docker image and push it to dockerhub (at least that is how I interpret it). ; Another potentially easy solution would be to use [github's container registry](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry) to publish containers directly there.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/541#issuecomment-1052123411:353,extend,extend,353,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541#issuecomment-1052123411,1,['extend'],['extend']
Modifiability,"Thanks for the quick response!. This is what I get with the gdb:. ```; gdb --args mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...done.; (gdb) r; Starting program: mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; convertalis /tmp//2989869989197200687/query /db",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:454,extend,extend,454,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628,4,"['config', 'extend']","['configuration', 'configured', 'extend']"
Modifiability,"Thanks for the suggestion. I'll do that for future runs to avoid the huge logfiles. Re: my original problem, I want to mention that I am using a Perl script (which parallel::forkmanager) to fork separate jobs for each sample in my list and then run each sample separately. I tried running mmseqs search with ""--threads 10"" using this same script, but I noticed that the intermediate steps in the command (extractorfs, align etc) all just used one process per sample. I am still trying to figure out if it is because of the parallel script or something to do with mmseqs itself. If I run the same search command on the terminal with ""--threads 10"" it goes fast. ________________________________; From: Martin Steinegger <notifications@github.com>; Sent: Thursday, July 11, 2019 12:55:59 PM; To: soedinglab/MMseqs2; Cc: Dhwani Desai; Mention; Subject: Re: [soedinglab/MMseqs2] Speed up mmseqs for large database and multiple large query sets by loading target into memory (#214). @milot-mirdita<https://github.com/milot-mirdita> noticed that the interactive progress bar could be a problem, in your case it produced at 13GB output. You can turn of the interactive progress bar by setting the environment variable to TTY=0. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/214?email_source=notifications&email_token=ABYZBDOM5JCFUYB7FDWEK7TP65JY7A5CNFSM4H333Q62YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODZXE5VI#issuecomment-510545621>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABYZBDMTYNMFATMDFBRTPR3P65JY7ANCNFSM4H333Q6Q>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-539001405:1202,variab,variable,1202,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-539001405,2,['variab'],['variable']
Modifiability,"Thanks, that was a pretty sloppy fix of mine. By default, we read the AC field from the STOCKHOLM header as the identifier in `convertmsa`.; I guess your profiles do not contain an AC field and the `identifier` variable remains empty, leading to a prepended space character. You can instead use `--identifier-field 0` in `convertmsa` to use the ID field, that always should exist. Then the code with the appended space makes sense. Without that space character (for PFAM at least) you would get a gibberish identifier like:; `PF10417.8S6ENI5_9CLOT/170-197`. I will think about how to make this better, i hope `convertmsa --identifier-field 0` is a good workaround.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/96#issuecomment-396646280:211,variab,variable,211,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96#issuecomment-396646280,1,['variab'],['variable']
Modifiability,"Thanks. This works fine. > mmseqs result2msa pbps.DB pbps.DB pbps.mergedDB pbps.mergedDB.msa. I used 0 of coverage and 20% of identity to cluster results. ; By checking the alignments, I realize that some sequences only keep a small region. I also saw the command `mmseqs expandaln` which makes me wonder if it can be used to extend sequences where alignment is filled with gaps. Since `mmseqs expandaln` require 4 DBs what is the fourth `<i:resultDB|ca3mDB>`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/153#issuecomment-459428531:326,extend,extend,326,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/153#issuecomment-459428531,1,['extend'],['extend']
Modifiability,"That looks already like an impressive amount of work for a PoC. . A few (disjointed) thoughts:. * How is error management handled in your project? We rely on `exit()` quite heavily as you have probably noticed already and in these cases we don't free memory or file handles anymore either. Refactoring that would be a major undertaking. * We would prefer to not give API/ABI stability guarantees, ideally we would only have to worry about keeping the command line interface as stable as possible. Personally, I would have tried auto-generating bindings by extracting information from `MMseqsBase.cpp` and `Parameters.h/cpp` and keep MMseqs2 as a separate binary around. * Another thing that we have only realized a few years after having started MMseqs2 is that we have essentially build a database management system for sequence data. I think if we had the chance to reimagine MMseqs2 as something new and consumable directly through APIs I would emphasize this aspect. * Do you have any experience with Python and Rust? There is a good chance we will add the first Rust dependency within the next half year or so and we are interesting in investigating something so new modules could be written in Rust instead of C++ (but continue to use the existing C++ classes). This might make the build system much more complicated in the near future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/450#issuecomment-834598461:290,Refactor,Refactoring,290,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450#issuecomment-834598461,1,['Refactor'],['Refactoring']
Modifiability,"That sounds like the binutils on your system are also very old. Forcing an SSE4.1 build by calling `cmake` with `cmake -DHAVE_SSE4_1=1 ...` should work. Alternatively, if you want to profit from the speedup that AVX2 would enable you need to compile a newer binutils on your own somehow and then set the CMAKE variables to the corresponding paths (CMAKE_AR, CMAKE_LINKER, ...). You don't have conda or linuxbrew on the system? Either option should come with their own set of standard libraries that might be compatible with older systems.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-726200095:310,variab,variables,310,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-726200095,1,['variab'],['variables']
Modifiability,That's a bit more complicated. We had a contribution to HH-suite to support PPCLE from @dmiller423 and subsequently improvements from @jhuber6. I wanted a different approach similar to `sse2neon` and adapted the code. To re-license the code we might need to ask two more people.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630832361:200,adapt,adapted,200,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630832361,1,['adapt'],['adapted']
Modifiability,The filtering step removes all 15 fragments extracted from this contig and passes an empty database to the normal prefiltering step. We need to more carefully handle empty input. This will require a bit of refactoring to fix.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/473#issuecomment-881031438:206,refactor,refactoring,206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473#issuecomment-881031438,1,['refactor'],['refactoring']
Modifiability,"The issue is basically that MMseqs2 cannot extract any putative protein ORFs from the nucleotide reads since the default minimum length threshold is too long. You can reduce this threshold with something like `--min-length 15` (15*3=45 nucl min length). The error message is pretty bad, we should fix this. Btw `plass` include a `mergereads` module to produce merged reads from paired reads and produces a sequence database that can then be read by `mmseqs search` that might be useful to extend some of the read lengths a bit and produce better annotations.; You can also first run the complete `plass` workflow to produce assembled proteins that can be better annotated. Plass will also struggle with the same parameter though and would also need a shorter `--min-length`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/325#issuecomment-652402322:489,extend,extend,489,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/325#issuecomment-652402322,1,['extend'],['extend']
Modifiability,"The next step would be to try a MMseqs2 build instrumented with ASan. Sadly ASan doesn't support static builds so you would have to compile MMseqs2 yourself:. ```; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2;; mkdir build; cd build; cmake -DHAVE_SANITIZER=1 -DCMAKE_BUILD_TYPE=ASan ..; make -j $(nproc --all); ```. The new binary in `src/mmseqs` would then hopefully be able to tell what is going wrong:. ```; Path-To-Where-You-Git-Clone/MMseqs2/build/src/mmseqs result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; ````",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814313609:1180,extend,extend,1180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814313609,1,['extend'],['extend']
Modifiability,The output is kind of mangled. Could you execute both runs with empty `tmp` directories and redirect the whole output to a file please? You might also want to set the `TTY=0` environment variable to disable the progress bar (not sure why it broke so badly in your output.; See: https://github.com/soedinglab/MMseqs2/wiki#environment-variables-used-by-mmseqs2,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824035474:187,variab,variable,187,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824035474,4,['variab'],"['variable', 'variables-used-by-']"
Modifiability,"The version of MMseqs2 is: MMseqs2 Version: 12.113e3. CD-HIT command is: ; `cd-hit -i all_protein_final_95_rep.fasta.1 -c 0.95 -aS 0.9 -d 200 -M 0 -T 40 -g 0 -l 30 -o all_protein_final_95_rep_95_1.fasta`. log of default linclust is; kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N01",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:783,extend,extendable,783,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['extend'],['extendable']
Modifiability,Things todo: ; 1.) find XSD to single file CPP converter (maybe https://www.codesynthesis.com/products/xsd/); 2.) find BLAST XSD (maybe https://github.com/lindenb/xsd-sandbox/blob/master/schemas/bio/ncbi/blast.xsd); 3.) add converter `convertalis`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/93#issuecomment-406567630:167,sandbox,sandbox,167,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/93#issuecomment-406567630,1,['sandbox'],['sandbox']
Modifiability,"This is the expected output. MMseqs2 creates one output file for each thread and skips the merging step if its not 100% required, since merging can be quite slow. You can just call `convertalis` on the basename and it will work as expected:; ```; mmseqs convertalis /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_query_db/mmseqs_B001_queryDB /Volumes/FireFly_Promise_Pegasus/Databases/mmseqs2_uniref90_db/UniRef90 /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db output.m8; ```. If you really want MMseqs2 to create a merged database you can set the `MMSEQS_FORCE_MERGE=1` environment variable. Though I would generally not recommend to do that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/579#issuecomment-1191364958:731,variab,variable,731,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/579#issuecomment-1191364958,1,['variab'],['variable']
Modifiability,This looks about right. MMseqs2 creates one output file per thread and doesn't bother merging them in the end if its not needed. You can use `easy-cluster` instead of `cluster` to generate human readable files instead of the internal MMseqs2 formats. You can also set the `MMSEQS_FORCE_MERGE=1` environment variable to make it merge all databases data splits into a single data files.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/716#issuecomment-1588564368:307,variab,variable,307,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/716#issuecomment-1588564368,1,['variab'],['variable']
Modifiability,"Update, I had just found 13aa length example, which is causing segfault: `TDPPIHIASLXRS`. Observation: after changing `X` to, for example `G` (`TDPPIHIASLGRS`), MMseqs2 will process example correctly. **EDIT**, another segfault example, this time much longer: `DPLVFFKXXFXXGGGGGAGCGGGGMKRT`, (observation, extended version will be processed correctly: `DPLVFFKXXFXXGGGGGAGCGGGGMKRTRRALPAN`)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/538#issuecomment-1044513847:306,extend,extended,306,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538#issuecomment-1044513847,1,['extend'],['extended']
Modifiability,"Using the search workflow (with --comp-bias-corr 0 --mask 0) and convertalis:. `search //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self //app/clustering/tmp -e 0 -s 1.0 --exact-kmer-matching 1 --sub-mat /app/matrices/blosum62-parasail.out --comp-bias-corr 0 --mask 0 `. `convertalis //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self_converted.tsv --format-output query,target,raw --gap-open 11 --gap-extend 1 --sub-mat /app/matrices/blosum62-parasail.out `. I now get values that seem to be within roundoff error (+-1) of parasail values (below). These values still don't give whole numbers when divided by 14, though they are at most 0.07 from whole numbers. Is there any way to get an exact match for Parasail values? I'm guessing at this point it might be a floating point arithmetic issue which may not be easily resolvable. . <html xmlns:v=""urn:schemas-microsoft-com:vml""; xmlns:o=""urn:schemas-microsoft-com:office:office""; xmlns:x=""urn:schemas-microsoft-com:office:excel""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=Excel.Sheet>; <meta name=Generator content=""Microsoft Excel 15"">; <link id=Main-File rel=Main-File; href=""file:///C:/Users/hr/AppData/Local/Temp/msohtmlclip1/01/clip.htm"">; <link rel=File-List; href=""file:///C:/Users/hr/AppData/Local/Temp/msohtmlclip1/01/clip_filelist.xml"">; <style>; <!--table; 	{mso-displayed-decimal-separator:""\."";; 	mso-displayed-thousand-separator:""\,"";}; @page; 	{margin:.75in .7in .75in .7in;; 	mso-header-margin:.3in;; 	mso-footer-margin:.3in;}; tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; br; 	{mso-data-placement:same-cell;}; td; 	{padding-top:1px;; 	padding-right:1px;; 	padd",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920245972:722,extend,extend,722,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920245972,1,['extend'],['extend']
Modifiability,Usually you should be able to just take e.g. the blosum62.out in the data folder and adapt it to your needs and pass that new file to `--sub-mat` and/or `--seed-sub-mat`. Sometimes MMseqs2 fails to compute the inverse of the matrix. In this case you can use the R script to compute the background probabilities (for which the inverse is needed). Make sure that the input to this script is already scaled to bit/2.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-496501408:85,adapt,adapt,85,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-496501408,1,['adapt'],['adapt']
Modifiability,"We do not have any code in mmseqs2 that writes this core dump file. This is a feature of Linux. Core dumps can be deactivated in Linux using ulimit -c 0 (see https://linux-audit.com/understand-and-configure-core-dumps-work-on-linux/). . Normally a core dump occurs because the software crashes. Did you see that MMseqs2 ended with a seg. fault? . If you want a set of stickers though (see https://twitter.com/thesteinegger/status/1201076220957315074), sent me your address via mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-565100808:197,config,configure-core-dumps-work-on-linux,197,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-565100808,1,['config'],['configure-core-dumps-work-on-linux']
Modifiability,"We have done some testing on finding very short proteins in our SpacePHARER manuscript (https://github.com/soedinglab/spacepharer, https://www.biorxiv.org/content/10.1101/2020.05.15.090266v1). The parameters we have found to work well are as follows:; `-k 6 --spaced-kmer-pattern 11011101 --seed-sub-mat VTML40.out --gap-open 16 --gap-extend 2 --min-length 9`. We'll eventually add a short fragment search mode to MMseqs2 itself in the form of setting presets or something like that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728166556:335,extend,extend,335,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728166556,1,['extend'],['extend']
Modifiability,What about to implement new command line option that would rewrite the output of `size_t Util::getTotalSystemMemory()` when set?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359791366:59,rewrite,rewrite,59,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359791366,1,['rewrite'],['rewrite']
Modifiability,"Without the CMakeLists patch, I get the following on aarch64:; cc: error: the clang compiler does not support '-march=native'; At any rate, when restricting an upstream build system, it's generally better to use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:338,variab,variable,338,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555,2,['variab'],['variable']
Modifiability,"Yes, that worked. I'd installed the prior MMseqs version using conda. I had to run through some system configuration before MMseqs would compile and run from source. I didn't track the steps, though. Once I had it installed, the new version wanted me to re-index the pfam database. Once that was done the search completed quickly. Thank you for the replies!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-572251733:103,config,configuration,103,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-572251733,1,['config'],['configuration']
Modifiability,"Yes, this would be perfect. . > Would you be interested to write that? I think extending `concatdbs` makes most sense. At the moment I am not able to assign any time on this, but I should have some new students soon that could be interested and it would be a great way to get familiar with MMseqs2 internals. I keep you posted. Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/269#issuecomment-581457899:79,extend,extending,79,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/269#issuecomment-581457899,1,['extend'],['extending']
Modifiability,You can download precompiled binaries for either the latest git commit at https://mmseqs.com/latest/ or for any previous git commit (that successfully compiled) at `mmseqs.com/archive/GIT_COMMIT`. For the commit you want the first commit that compiled after it is mmseqs.com/archive/03f0bcca33a6af3135082957f1cebf8baff7cc61. If you compile from source please follow the instructions in the wiki:; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux. ```; cd MMseqs2 # Go into the MMseqs2 directory after extraction; mkdir build # Create a build directory; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. # Configure the build with cmake; make -j16; make install; Setting the PATH; export PATH=$HOME/MMseqs2/build/bin:$PATH,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/886#issuecomment-2342446849:652,Config,Configure,652,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/886#issuecomment-2342446849,1,['Config'],['Configure']
Modifiability,"You can set the `MMSEQS_FORCE_MERGE` environment variable (e.g. `export MMSEQS_FORCE_MERGE=1`). The split databases are, however, an IO optimization and not related to memory. Merging after every module invocation can slow MMseqs2 down considerably.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279:49,variab,variable,49,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279,1,['variab'],['variable']
Modifiability,"You can try to use the parameters we used in our [SpacePHARER manuscript](https://academic.oup.com/bioinformatics/article/37/19/3364/6207963) for finding CRISPR spacers with MMseqs2 (see the supplement). These should correspond to the following parameters:; ```; -k 6 --spaced-kmer-mode 1 --spaced-kmer-pattern 11011101 --sub-mat VTML40.out --gap-open 16 --gap-extend 2; ```. As the matches are of similar length, these parameters should most likely work much better for your use-case. Though, I am not sure it will actually solve the weird number of req-seqs. This might be a separate issue. I think we might have some special-cased code for max-seq 1.0. But, I will have to take a closer look for that. Edit: Note that these parameters were used in SpacePHARER to search, not to cluster. However, I do expect that they should also work better for clustering.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/736#issuecomment-1674358317:361,extend,extend,361,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/736#issuecomment-1674358317,1,['extend'],['extend']
Modifiability,"[=================================================================] 100.00% 14 0s 4ms. Output database: tmp//10798751672030653963/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00% 284 0s 6ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 87ms; align tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/seq_wrong_assigned tmp//10798751672030653963/seq_wrong_assigned_pref_swaped tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 214 type: Aminoacid; Target database size: 14 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 29 0s 13ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 5ms; 41 alignments calculated; 32 sequence pairs passed the thresholds (0.780488 of overall calculated); 1.103448 hits per query sequence; Time for processing: 0h 0m 0s 56ms; filterdb tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 16 --compressed 0 -v 3. Filtering using regular expression; [=================================================================] 100.00% 29 0s 8ms; Time for merging to seq_wrong_assigned_pref_swaped_aln_ocol: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 51ms; mergedbs tmp//107987516720",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:30665,extend,extend,30665,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['extend'],['extend']
Modifiability,"[WIP] Add tutorial as notebook, and configure Binder",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/250:36,config,configure,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/250,1,['config'],['configure']
Modifiability,"_0: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 5ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/search/pref_0 /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --zdrop 40 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Compute score, coverage and sequence identity; mmseqs-web-worker_1 | Query database size: 1 type: Nucleotide; mmseqs-web-worker_1 | Target database size: 10754 type: Nucleotide; mmseqs-web-worker_1 | Calculation of alignments; mmseqs-web-worker_1 | [=================================================================] 1 0s 2ms; mmseqs-web-worker_1 | Time for merging to aln: 0h 0m 0s 0ms; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | 0 alignments calculated.; mmseqs-web-worker_1 | 0 sequence pairs passed the thresholds (-nan of overall calculated).; mmseqs-web-worker_1 | 0.000000 hits per query sequence.; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 37ms; mmseqs-web-worker_1 | Remove temporary files; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:25254,extend,extend,25254,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['extend'],['extend']
Modifiability,"``; (gdb) thread apply all bt. Thread 32 (Thread 0x7f6e65ffe640 (LWP 135852) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 31 (Thread 0x7f6e6cffc640 (LWP 135851) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 30 (Thread 0x7f6e6d7fd640 (LWP 135850) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:31316,config,config,31316,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"`dbtype` is a recent development that is going to help a lot with usability with some planned enhancements, such as automatic validation of input database types (which is a huge usability pitfall currently). `tsv2db` needs a flag to specify what the output dbtype is supposed to be. I'll add that soon. The requirement for the indexed database format (the file itself and the corresponding `.index` files) exist since the beginning of mmseqs' development. There is no other feasible solution to fast linear and random access in millions or billions of entries that we are currently handling. . How can we improve the user experience with regards to workflow management systems in your view?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/155#issuecomment-458961987:94,enhance,enhancements,94,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/155#issuecomment-458961987,2,['enhance'],['enhancements']
Modifiability,"abase cannot be combined with --createdb-mode 0; We recompute with --shuffle 0. Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 4m 46s 360ms; Create directory All_cohort_tmp//9948387321092861199/clu_tmp; linclust All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu All_cohort_tmp//9948387321092861199/clu_tmp --cluster-mode 2 --threads 56 -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --max-seq-len 10000 --spaced-kmer-mode 0 --remove-tmp-files 1 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . Database size: 440656032 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 440.66M 1m 58s 106ms; Sort kmer 0h 1m 9s 431ms; Sort by rep. sequence 0h 0m 39s 418ms; Time for fill: 0h 2m 31s 613ms; Time for merging to pref: 0h 0m 0s 1ms; Time for p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:4324,extend,extendable,4324,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['extend'],['extendable']
Modifiability,"able 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 160ms; rescorediagonal ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref tmp//538598962955004214/linclust/16628284907041385511/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:3822,extend,extendable,3822,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['extend'],['extendable']
Modifiability,"all50.mm.db experiments/tmp/ --min-seq-id 0.5; linclust experiments/small.mm.db experiments/small50.mm.db experiments/tmp/ --min-seq-id 0.5 . MMseqs Version: 	02be0c4ea6183fce9cf45521a8c145d10f3928c1; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Threads 	12; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:4057,extend,extendable,4057,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['extend'],['extendable']
Modifiability,"am.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 2 (Thread 0x7f6ec9fff640 (LWP 135794) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7f706900f200 (LWP 135793) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f706904f583 in GOMP_parallel (fn=0x5f846452bc00 <result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]>, data=0x7ffd18983490, num_threads=32, flags=0) at ../../../libgomp/parallel.c:178; #6 0x00005f8464531107 in result2profile(int, char const**, Command const&, bool) (); #7 0x00005f846423f8ba in runCommand(Command*, int, char const**) (); #8 0x00005f846422928f in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:56458,config,config,56458,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,6,['config'],['config']
Modifiability,"angjin/01_gene_cat/protein_cat/all_protein_final_95_rep /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep.fasta . MMseqs Version:	12.113e3; Use header DB	false; Verbosity 	3. Start writing file to /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep.fasta; Time for processing: 0h 54m 42s 51ms. log of linclust with `--kmer-per-seq to 80`. kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Not enough memory to process at once need to split; [=================================================================] 773.45M 1h 49m 44s 916ms; Process file into 1 parts; Generate k-mers list for 1 split; [====================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:9753,extend,extendable,9753,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['extend'],['extendable']
Modifiability,"anshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:1404,extend,extendable,1404,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['extend'],['extendable']
Modifiability,"as-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 160ms; rescorediagonal ../D",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:3344,extend,extendable,3344,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['extend'],['extendable']
Modifiability,"assign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:2466,extend,extend,2466,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['extend'],['extend']
Modifiability,atabase: tmp/6822607060114486044/pref; Computing offsets.; ................................................................................................... 1 Mio. sequences processed; ....................................; Reading results.; ................................................................................................... 1 Mio. sequences processed; ....................................; Output database: tmp/6822607060114486044/pref_swapped; .; Time for merging files: 0h 0m 0s 23ms; Time for processing: 0h 0m 46s 63ms; Program call:; align pfam_profile.idx pbps.neighbors.DB tmp/6822607060114486044/pref_swapped tmp/6822607060114486044/aln_swapped --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 10 --compressed 0 -v 3 . Init data structures...; Touch data file pbps.neighbors.DB ... Done.; Use index pfam_profile.idx; Index version: 15; Generated by: 8-fac81; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqType: Profile; Headers1: 1; Headers2: 0; ScoreMatrix: VTML80.out; Compute score and coverage.; Query database type: Profile; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; .Time for merging files: 0h 0m 0s 23ms. All sequences processed. 390452377 alignments calculated.; 1899900 sequence pairs passed the thresholds (0.00486589 of overall calculated).; 106.904 hits per query sequence.; Time for processing: 0h 32m 50s 752ms; Program call:; swapresults pfam_profile.idx pbps.neighbors.DB tmp/6822607060114486044/aln_swapped result --sub-mat blosum62.out -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 10 --compressed 0 --db-load-,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:5523,extend,extend,5523,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,1,['extend'],['extend']
Modifiability,"atch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to aln: 0h 0m 0s 3ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 15ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/aln /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/clust --cluster-mode 0 --max-iterations 1000 --sim",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:15032,extend,extend,15032,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['extend'],['extend']
Modifiability,"atches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 434ms; align profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 /tmp/15358673946673749737/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:5398,extend,extend,5398,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['extend'],['extend']
Modifiability,"ax-seqs300_2.db /tmp/test --kmer-per-seq 80 --max-seqs 300 --min-seq-id 0.8 -c 0.8 --threads 10 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Tmp /tmp/test folder does not exist or is not a directory.; Created dir /tmp/test; Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; panproteome.db /tmp/test/9465698490903227639/clu_redundancy /tmp/test/9465698490903227639/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:1598,extend,extendable,1598,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['extend'],['extendable']
Modifiability,"b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 64; Verbosity 3; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0.9; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Alphabet size 21; Kmer per sequence 21; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner. Set cluster mode SET COVER.; Program call:; /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp/13736030087838361561/pref /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp/13736030087838361561/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 -e 0.001 -c 0.8",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120:3503,extend,extendable,3503,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120,1,['extend'],['extendable']
Modifiability,"bstitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 96025 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 96.03K 0s 882ms . Adjusted k-mer length 17; Sort kmer 0h 0m 0s 257ms; Sort by rep. sequence 0h 0m 0s 133ms; Time for fill: 0h 0m 0s 107ms; Time for merging to pref: 0h 0m 0s 28",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:6048,extend,extendable,6048,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['extend'],['extendable']
Modifiability,"c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 156ms; rescorediagonal D",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:3249,extend,extendable,3249,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['extend'],['extendable']
Modifiability,"c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1396,config,configuration,1396,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['config'],['configuration']
Modifiability,"ca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:4034,extend,extendable,4034,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['extend'],['extendable']
Modifiability,"call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=0x00007fffffffadd8, num_threads=4)<ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)>(ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #16: 0x000000000043e399 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffaea8, begin=0x00000008012ffc40, end=0x00000008013647d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84), num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), int) at ips4o.hpp:128:9; frame #18: 0x000000000040d66a mmseqs`void ips4o::parallel::sort<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:6300,Extend,ExtendedConfig,6300,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758,4,"['Config', 'Extend']","['Config', 'ExtendedConfig']"
Modifiability,"ces with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 474ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to aln_step2: 0h 0m 0s 3ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 15ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step2 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3. Clustering mode: Set Cover; [===",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:31304,extend,extend,31304,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['extend'],['extend']
Modifiability,"ck_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/team.c:124; #5 0x00002aefd1060dc5 in start_thread (arg=0x2aefd1c45700) at pthread_create.c:308; #6 0x00002aefd136bced in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:113; ```. ### Last files to be created in temp directory:; ```; ls -lh /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/; total 506G; -rwx------ 1 dportik Domain Users 4.0K Mar 9 20:15 blastp.sh; -rw-r--r-- 1 dportik Domain Users 8.4G Mar 10 02:59 pref_0.0; -rw-r--r-- 1 dportik Domain Users 7.9G Mar 10 02:59 pref_0.1; -rw-r--r-- 1 dportik Domain Users 14G Mar 10 03:00 pref_0.10; -rw-r--r-- 1 dportik Domain Users 9.0G Mar 10 03:00 pref_0.11; -rw-r--r-- 1 dportik Domain Users 14G Mar 10 02:59 pref",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:36116,config,config,36116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['config'],['config']
Modifiability,"configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs/bin/mmseqs...done.; (gdb) r; Starting program: mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	3.40282e+38; Split memory limit 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	256; Compressed 	0; Preload mode 	0; Verbosity 	3. [New Thread 0x7fac59656700 (LWP 38112)]",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:1906,extend,extend,1906,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473,1,['extend'],['extend']
Modifiability,"context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 100000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00K 0s 853ms; Sort kmer 0h 0m 0s 789ms; Sort by rep. sequence 0h 0m 0s 951ms; Time for fill: 0h 0m 0s 155ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:10928,extend,extendable,10928,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extendable']
Modifiability,"corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 149ms; rescorediagonal a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:3568,extend,extendable,3568,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['extend'],['extendable']
Modifiability,"ct-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:2245,extend,extend,2245,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['extend'],['extend']
Modifiability,"d not occur. . In general, I keep getting `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` at various steps of the `mmseqs map` run (eg., at the end of `translatenucs`). The error is not very informative on what's going wrong, since I am providing the required input and output parameters. ## conda env:. ```; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## conda info. ```; active environment : plass; active env location : /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass; shell level : 1; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.5.11; conda-build version : 3.11.0; python version : 3.6.5.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://repo.anaconda.com/pkgs/pro/linux-64; https://repo.anaconda.com/pkgs/pro/noarch; https://conda.anaconda.org/leylabmpi/linux-64; https://conda.anaconda.org/leylabmpi/noarch; https://conda.anaconda.org/r/linux-64; https://conda.anaconda.org/r/noarch; https://conda.anaconda.org/qiime",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:6010,config,config,6010,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['config'],['config']
Modifiability,"d to both the master and slave nodes. . ## MMseqs Output (for bugs); ```; Program call:; /mnt/DB /mnt/clu /mnt/tmp . MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 20; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0.8; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 2; Verbosity 3; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Single step clustering true; Cascaded clustering steps 3; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; /mnt/DB /mnt/tmp/4359821638123540538/clu_redundancy /mnt/tmp/4359821638123540538/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 2 -; -sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:1794,extend,extendable,1794,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['extend'],['extendable']
Modifiability,"d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 27 (Thread 0x7f6e757fd640 (LWP 135847) ""mmseqs""):; #0 0x00005f84645c3fe9 in PSSMCalculator::computeContextSpecificWeights(float*, float*, float*, unsigned long, unsigned long, char const**) (); #1 0x00005f84645c510c in PSSMCalculator::computePSSMFromMSA(unsigned long, unsigned long, char const**, bool) (); #2 0x00005f846452d03c in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #3 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #4 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #5 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 26 (Thread 0x7f6e75ffe640 (LWP 135846) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 25 (Thread 0x7f6e7cffc640 (LWP 135845) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:35552,config,config,35552,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"dancy ./mmseqs_output/tmp/5351426679731834765/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:10371,extend,extendable,10371,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extendable']
Modifiability,"db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 22ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms ] 49.02% 76 eta 0s; Time for processing: 0h 0m 0s 76ms; align clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 34ms; Time for merging to aln: 0h 0m 0s 2ms; 154 alignments calculated; 154 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 142ms; clust clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 154 0s 8ms; Sort entries; Find missing connections; F",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:25125,extend,extend,25125,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extend']
Modifiability,"de 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.4; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb all_seq.fasta tmp/8115150149931881526/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [Multiline fasta can not be combined with --createdb-mode 0; We recompute with --createdb-mode 1; Time for merging to input_h: 0h 0m 0s 3ms; Time for merging to input: 0h 0m 0s 3ms; [=======; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 2ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 102ms; Create directory tmp/8115150149931881526/clu_tmp; linclust tmp/8115150",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:1627,extend,extendable,1627,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['extend'],['extendable']
Modifiability,"de only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-li",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:2709,extend,extendable,2709,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['extend'],['extendable']
Modifiability,"debug back trace:. >gdb -r --args mmseqs createdb dpann_cpr.faa dpann_cpr_mmseq_db/; GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1; Copyright (C) 2016 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...expanding to full symbols...done.; (gdb) r; Starting program: /home/disque2To/home/romain/logiciel/MMseqs2/build/bin/mmseqs createdb dpann_cpr.faa dpann_cpr_mmseq_db/; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; Program call:; createdb dpann_cpr.faa dpann_cpr_mmseq_db/ . MMseqs Version: 	a951e4dede7e9b52e514119d083ff4ca80ad1565; Max. sequence length 	65535; Split Seq. by len 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; .........................................................Time for merging files: 0h 0m 1s 184ms. Program received signal SIGSEGV, Segmentation fault.; __GI___fileno (fp=0x0) at fileno.c:35; 35	fileno.c: Aucun fichier ou dossier de ce type.; (gdb) bt; #0 __GI___fileno (fp=0x0) at fileno.c:35; #1 0x00000000005",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/141#issuecomment-445211494:451,config,configured,451,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/141#issuecomment-445211494,3,['config'],"['configuration', 'configured']"
Modifiability,"dl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/team.c:124; #5 0x00002aefd1060dc5 in start_thread (arg=0x2aefd1c45700) at pthread_create.c:308; #6 0x00002aefd136bced in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:113; ```. ### Last files to be created in temp directory:; ```; ls -lh /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/; total 506G; -rwx------ 1 dportik Domain Users 4.0K Mar 9 20:15 blastp.sh; -rw-r--r-- 1 dportik Domain Users 8.4G Mar 10 02:59 pref_0.0; -rw-r--r-- 1 dp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:35889,config,config,35889,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['config'],['config']
Modifiability,e 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	1; Search steps 	3; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Program call:; align /tmp/global2/nyoungblut/LLMGAG_27929269397/linclust/genes_db /ebio/abt3_projects/databases_no-backup/uniclust/uniclust90_2018_08_db /tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/tmp//15538800487586745695/tmp_hsp1/17220669400861690567/pref_1.000 /tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/tmp//15538800487586745695/tmp_hsp1/17220669400861690567/aln_1.000 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 -v 3. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id.	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3. Init data structures...; Compute score and coverage.; Touch data file /tmp/global2/nyoungblut/LLMGAG_27929269397/linclust/genes_db ... Done.; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust90_2018_08_db ... Done.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; ....................................................................,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032:6319,extend,extend,6319,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032,1,['extend'],['extend']
Modifiability,"e 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:3241,extend,extend,3241,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['extend'],['extend']
Modifiability,"e aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 144; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; /final/db_profile_vs_consensus/low_1/Genus02938/Genus02938_DB.dbtype exists already!; ```. Yes, `/final/db_profile_vs_consensus/low_1/Genus02938/Genus02938_DB.dbtype` already exists; it was created by `mmseqs search`. I'm not sure why `mmseqs clust` cares? Do you have any ideas - I can't figure this out. Many thanks!!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/844:2632,extend,extendable,2632,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/844,1,['extend'],['extendable']
Modifiability,"e free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...done.; (gdb) r; Starting program: mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen; Translation table 	1; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:1731,extend,extend,1731,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628,1,['extend'],['extend']
Modifiability,"e multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any sequence for key 62888288!; Add missing connections; [=================================================================] 100.00% 45.46M 1s 608ms; Time for read in: 0h 0m 28s 571ms; Total time: 0h 0m 40s 655ms; Size of the sequence database: 45461840; Size of the alignment datab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:2939,extend,extendable,2939,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['extend'],['extendable']
Modifiability,"e same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1258,config,configuration,1258,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['config'],['configuration']
Modifiability,"e temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:19024,extend,extend,19024,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extend']
Modifiability,"e, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x0000",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:2429,Extend,ExtendedConfig,2429,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758,8,"['Config', 'Extend']","['Config', 'ExtendedConfig']"
Modifiability,"e-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag directing the output of uniclust50 to uniclust30, which might not make it hierarchical. If I wan",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7147,extend,extendable,7147,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['extend'],['extendable']
Modifiability,"e-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:4375,extend,extendable,4375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['extend'],['extendable']
Modifiability,"e-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 76215872 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 76.22M 6m 32s 415ms; Sort kmer 0h 0m 14s 675ms; Sort by rep. sequence 0h 0m 0s 974ms; Time for fill: 0h 0m 13s 496ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 7m 46s 594ms; rescorediagonal uniref90-DB-wwmj uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref tmp//16518381706844811497/linclust/11898236; 85496030198/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov; -mode 2 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [=======",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:5358,extend,extendable,5358,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['extend'],['extendable']
Modifiability,"e; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 802ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 6712 type: Aminoacid; Target database size: 6712 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 6.71K 0s 264ms ; Time for merging to aln_step1: 0h 0m 0s 1ms; 13873 alignments calculated; 8509 sequence pairs passed the thresholds (0.613350 of overall calculated); 1.267729 hits per query sequence; Time for processing: 0h 0m 0s 270ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step1 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 6.71K 0s 8ms ; Sort entries; Find missi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:23845,extend,extend,23845,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['extend'],['extend']
Modifiability,"e; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 1; linclust uniref90-DB-wwmj tmp//16518381706844811497/clu_redundancy tmp//16518381706844811497/linclust --cluster-mode 3 --max-iterations 1000 --similarity; -type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignme; nt-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp; -bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,co; ntext:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.; 000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 -; -ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:4014,extend,extend,4014,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['extend'],['extend']
Modifiability,"e; join to DB ; Compute Positions ; Replace transitively . Filtering with a filter files.; ..............................................Time for merging files: 0h 0m 0s 668ms; Time for processing: 0h 0m 2s 11ms; Program call:; align contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/input_step_redundancy contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/52586018941986723; 32/input_step_redundancy contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/pref_filter2 contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601; 894198672332/aln --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.99 --seq-id-mode 0 --alt-ali 0 -c 0.6 --cov-mode 1 --max-seq-len 65535 --max-seqs 2147483647 --comp-bias-corr 0 --realign; 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 -v 3 . MMseqs Version: 7.4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0.99; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.6; Coverage Mode 1; Max. sequence length 65535; Max. results per query 2147483647; Compositional bias 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 128; Verbosity 3. Init data structures...; Compute score, coverage and sequence id.; Touch data file contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/input_step_redundancy ... Done.; Query database type: Nucleotide; Target database type: Nucleotide; **Calculation of Smith-Waterman alignments.; .contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/linclust.sh: ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/632:5834,extend,extend,5834,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632,1,['extend'],['extend']
Modifiability,"eads 24; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.8; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Weight file name ; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files true; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb /hps/nobackup/iqbal/dander/amira_panRG_pipeline/Escherichia_coli_panRG_c_0.8_l_0_train_AMR_alleles_removed_mmseqs2/all_sequences.fasta tmp/3198441352783276465/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [95951] 0s 927ms; Time for merging to input_h: 0h 0m 0s 47ms; Time for merging to input: 0h 0m 0s 25ms; Database type: Nucleotide; Time for processing: 0h 0m 1s 143ms; Create directory tmp/3198441352783276465/clu_tmp; cluster tmp/3198441352783276465/input tmp/3198441352783276465/clu tmp/3198441352783276465/clu_tmp --max-seqs 20 -c 0 --cov-mode 5 --spaced-kmer-mode 1 --threads 24 --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --cluster-mode 1 --cluster-reassign 1 --remove-tmp-files 1 . Set cluster sensitivity",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:3127,extend,extendable,3127,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['extend'],['extendable']
Modifiability,"eanup=<unavailable>) at crt1_c.c:75:7; (lldb) ; * thread #1, name = 'mmseqs'; * frame #0: 0x0000000800bea528 libc.so.7`__sys__umtx_op + 8; frame #1: 0x0000000000803044 mmseqs`__atomic_fetch_sub_16 [inlined] lock(l=0x000000000080c2e0) at atomic.c:72:5; frame #2: 0x000000000080301e mmseqs`__atomic_fetch_sub_16(ptr=0x00000008013723b0, val=1180591620717411303424, model=<unavailable>) at atomic.c:342; frame #3: 0x0000000000449273 mmseqs`std::__1::pair<long, long> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00000008013723b0)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::BucketPointers::decRead<true>() at bucket_pointers.hpp:106:28; frame #4: 0x0000000000449482 mmseqs`int ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:9444,Extend,ExtendedConfig,9444,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758,2,"['Config', 'Extend']","['Config', 'ExtendedConfig']"
Modifiability,"eb-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | rmdb /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/aln_merge -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | convertalis /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/result /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/alis_pdb_protein_sequence --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 0 --threads 2 --compressed 0 -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | [=================================================================] 1 0s 1ms; docker-compose-mmseqs-web-worker-1 | Time for merging to alis_pdb_protein_sequence: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 3ms; docker-compose-mmseqs-web-worker",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717:8587,extend,extend,8587,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717,1,['extend'],['extend']
Modifiability,"ecture set to: x86_64--freebsd13.0.; (lldb) bt; * thread #1, name = 'mmseqs'; * frame #0: 0x0000000800bea528 libc.so.7`__sys__umtx_op + 8; frame #1: 0x0000000000803044 mmseqs`__atomic_fetch_sub_16 [inlined] lock(l=0x000000000080c2e0) at atomic.c:72:5; frame #2: 0x000000000080301e mmseqs`__atomic_fetch_sub_16(ptr=0x00000008013723b0, val=1180591620717411303424, model=<unavailable>) at atomic.c:342; frame #3: 0x0000000000449273 mmseqs`std::__1::pair<long, long> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00000008013723b0)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::BucketPointers::decRead<true>() at bucket_pointers.hpp:106:28; frame #4: 0x0000000000449482 mmseqs`int ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::classifyAndReadBlock<false, true>(this=0x00007fffffffa8a8, read_bucket=29) at block_permutation.hpp:69:41; frame #5: 0x0000000000448403 mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::permuteBlocks<false, true>(this=0x00007fffffffa8a8) at block_permutation.hpp:137:31; frame #6: 0x0000000000447b4d mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, bucket_start=0x0000000801371000, shared=0x0000000801371000, my_id=0, num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:1614,Extend,ExtendedConfig,1614,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758,2,"['Config', 'Extend']","['Config', 'ExtendedConfig']"
Modifiability,"ed newer image for soedinglab/mmseqs2-app-frontend:version-5; Creating docker-compose_mmseqs-web-redis_1 ... ; Creating docker-compose_mmseqs-web-redis_1 ... done; Creating docker-compose_mmseqs-web-api_1 ... ; Creating docker-compose_mmseqs-web-api_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... done; Attaching to docker-compose_mmseqs-web-redis_1, docker-compose_mmseqs-web-api_1, docker-compose_mmseqs-web-worker_1, docker-compose_mmseqs-web-webserver_1; mmseqs-web-api_1 | 2022/09/22 16:09:10 MMseqs2 Webserver; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Redis version=7.0.4, bits=64, commit=00000000, modified=0, pid=1, just started; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.002 * monotonic clock: POSIX clock_gettime; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 * Running mode=standalone, port=6379.; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 # Server initialized; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 * Ready to accept connections; mmseqs-web-worker_1 | 2022/09/22 16:09:10 MMseqs2 worker; mmseqs-web-worker_1 | createdb /opt/mmseqs-web/databases/pdb_rna_sequence.fasta /opt/mmseqs-web/databases/pdb_rna_sequence ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | MMseqs Version: 	e1a1c1226e",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:9508,config,config,9508,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,2,['config'],['config']
Modifiability,"efiltering scores calculation (step 1 of 1); Query db start 1 to 416; Target db start 1 to 416; [=================================================================] 416 0s 20ms. 0.116417 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; Time for processing: 0h 0m 2s 35ms; align DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/pref_step0 DB_clustered/tmp/17526443716087640986/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 416 type: Aminoacid; Target database size: 416 type: Aminoacid; Calculation of alignments; [=================================================================] 416 0s 60ms; Time for merging to aln_step0: 0h 0m 0s 1ms. 464 alignments calculated.; 437 sequence pairs passed the thresholds (0.941810 of overall calculated).; 1.050481 hits per query sequence.; Time for processing: 0h 0m 0s 117ms; clust DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/aln_step0 DB_clustered/tmp/17526443716087640986/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 416 0s 3ms; Sort entries; Find missing connections; Found 1 new connections.; Reconstruct initial order; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:13270,extend,extend,13270,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['extend'],['extend']
Modifiability,"efiltering scores calculation (step 1 of 1); Query db start 1 to 8408; Target db start 1 to 756891; [=================================================================] 100.00% 8.41K 0s 981ms . 0.020249 k-mers per position; 72 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 8273 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 10ms; Time for processing: 0h 0m 11s 757ms; align IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 tmp/16138406286044646862/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 8408 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.41K 0s 647ms ; Time for merging to aln_0: 0h 0m 0s 8ms. 2061 alignments calculated.; 2061 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.245124 hits per query sequence.; Time for processing: 0h 0m 1s 887ms; createsubdb tmp/16138406286044646862/order_0 IP_DB/IP_DB tmp/16138406286044646862/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; prefilter tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:6174,extend,extend,6174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['extend'],['extend']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 10 (Thread 0x7f6ed8df0640 (LWP 135830) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 9 (Thread 0x7f6ed95f1640 (LWP 135829) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:49134,config,config,49134,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 11 (Thread 0x7f6ed85ef640 (LWP 135831) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 10 (Thread 0x7f6ed8df0640 (LWP 135830) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:48293,config,config,48293,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 12 (Thread 0x7f6ecbfa4640 (LWP 135832) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 11 (Thread 0x7f6ed85ef640 (LWP 135831) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:47452,config,config,47452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 13 (Thread 0x7f6ecb7a3640 (LWP 135833) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 12 (Thread 0x7f6ecbfa4640 (LWP 135832) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:46611,config,config,46611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 14 (Thread 0x7f6ecafa2640 (LWP 135834) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 13 (Thread 0x7f6ecb7a3640 (LWP 135833) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:45770,config,config,45770,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 15 (Thread 0x7f6e9424d640 (LWP 135835) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 14 (Thread 0x7f6ecafa2640 (LWP 135834) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:44929,config,config,44929,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 16 (Thread 0x7f6e9324b640 (LWP 135836) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 15 (Thread 0x7f6e9424d640 (LWP 135835) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:44088,config,config,44088,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 17 (Thread 0x7f6e92a4a640 (LWP 135837) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 16 (Thread 0x7f6e9324b640 (LWP 135836) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:43247,config,config,43247,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 18 (Thread 0x7f6e91a48640 (LWP 135838) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 17 (Thread 0x7f6e92a4a640 (LWP 135837) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:42406,config,config,42406,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 19 (Thread 0x7f6e8ca44640 (LWP 135839) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 18 (Thread 0x7f6e91a48640 (LWP 135838) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:41565,config,config,41565,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 20 (Thread 0x7f6e8c243640 (LWP 135840) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 19 (Thread 0x7f6e8ca44640 (LWP 135839) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:40724,config,config,40724,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 21 (Thread 0x7f6e8ba42640 (LWP 135841) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 20 (Thread 0x7f6e8c243640 (LWP 135840) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:39883,config,config,39883,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 22 (Thread 0x7f6e84a37640 (LWP 135842) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 21 (Thread 0x7f6e8ba42640 (LWP 135841) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:39042,config,config,39042,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 23 (Thread 0x7f6e7dffe640 (LWP 135843) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 22 (Thread 0x7f6e84a37640 (LWP 135842) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:38201,config,config,38201,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 24 (Thread 0x7f6e7d7fd640 (LWP 135844) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 23 (Thread 0x7f6e7dffe640 (LWP 135843) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:37360,config,config,37360,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 25 (Thread 0x7f6e7cffc640 (LWP 135845) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 24 (Thread 0x7f6e7d7fd640 (LWP 135844) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:36519,config,config,36519,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 29 (Thread 0x7f6e6dffe640 (LWP 135849) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 28 (Thread 0x7f6e74ffc640 (LWP 135848) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:33234,config,config,33234,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 30 (Thread 0x7f6e6d7fd640 (LWP 135850) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 29 (Thread 0x7f6e6dffe640 (LWP 135849) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:32393,config,config,32393,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 31 (Thread 0x7f6e6cffc640 (LWP 135851) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 30 (Thread 0x7f6e6d7fd640 (LWP 135850) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:31552,config,config,31552,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"eotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 278.90K 3m 30s 81ms; Time for merging to aln: 0h 0m 0s 79ms. 356498221 alignments calculated.; 350372623 sequence pairs passed the thresholds (0.982817 of overall calculated).; 1256.243652 hits per query sequence.; Time for processing: 0h 3m 35s 108ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 0s 344ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 278.90K 0s 550ms. Reading results.; [=================================================================] 278.90K 1s 198ms. Output database: /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap; [=================================================================] 69.22K 3s 47ms. Time for merging to aln_swap: 0h 0m 0s 21ms; Time for processing: 0h 0m 10s 409ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln -v 3 . Time for processing: 0h 0m 0s 938ms; mvdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 107ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:7133,extend,extend,7133,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['extend'],['extend']
Modifiability,"ep 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Context; Used the same db (hmmsearchDB) to cluster my sequences using mmseqs cluster. Now I'm trying to see what each cluster is comprised of by running a search against Uniref100. ## Your Environment. IBM SR650 ServerIntel Xeon Silver 4216, 2 CPUs, 2.1Ghz, 64 threads - 1TB DDR4 2933mhz RDIMM - HDD 12TB SAS. Titan X 3584 CUDA core, 12 GB GDDR5X, 480 GB/sec, 11 Tflops.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:5494,extend,extend,5494,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,1,['extend'],['extend']
Modifiability,"eps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:2753,extend,extend,2753,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['extend'],['extend']
Modifiability,"eq-id 0.90 --kmer-per-seq 40 -c 0.9. MMseqs Version: 290668474611312a94a868bf041b38c8618f5ef6; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 160; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:1450,extend,extendable,1450,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311,1,['extend'],['extendable']
Modifiability,"er mode GREEDY MEM.; kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 77298 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 77.30K 0s 41ms; Sort kmer 0h 0m 0s 46ms; Sort by rep. sequence 0h 0m 0s 22ms; Time for fill: 0h 0m 0s 11ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 225ms; rescorediagonal tmp/8115150149931881526/input tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [====",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:3787,extend,extendable,3787,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['extend'],['extendable']
Modifiability,"erator()(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)>(ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbbf0, num_threads=32) at ips4o.hpp:128:9; frame #20: 0x00000000003ee74f mmseqs`void ips4o::parallel::sort<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbc40) at ips4o.hpp:137:5; frame #21: 0x00000000003eaab7 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffd2b0, isSortedById=true) at DBReader.cpp:367:9; frame #22: 0x00000000003efebe mmseqs`DBReader<unsigned int>::open(this=0x00007fffffffd2b0, accessType=2) at DBReader.cpp:185:9; frame #23: 0x0000000000639482 mmseqs`offsetalignment(argc=20, argv=0x00007fffffffd8a8, command=0x0000000800f5a220) at offsetalignment.cpp:261:12; frame #24: 0x000000000038731f mmseqs`runCommand(p=0x0000000800f5a220, argc=20, argv=0x00007fffffffd8a8) at Application.cpp:38:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:4987,Config,Config,4987,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769,2,['Config'],['Config']
Modifiability,"es with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 25ms; Time for processing: 0h 0m 1s 533ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to aln_step1: 0h 0m 0s 4ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 17ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step1 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3. Clustering mode: Set Cover; [===",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:26253,extend,extend,26253,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['extend'],['extend']
Modifiability,"eshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (153016352 byte) of total memory (1886452531 byte); Process file into 1 parts; Generate k-mers list 0; ............; Time for fill: 0h 0m 1s 398ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 1s 345ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Prog",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:6489,extend,extendable,6489,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['extend'],['extendable']
Modifiability,"esult); 3 sequences passed prefiltering per query sequence; 4 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 4ms; Time for processing: 0h 0m 2s 431ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqsHits --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 1 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 34258 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to newSeqsHits: 0h 0m 0s 4ms. 1 alignments calculated.; 0 sequence pairs passed the thresholds (0.000000 of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 0s 20ms; swapdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqsHits /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqsHits.swapped.all. [=================================================================] 6 0s 23ms; Computing offsets.; [=================================================================] 6 0s 14ms. Reading results.; [=================================================================] 6 0s 2ms. Output da",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:5105,extend,extend,5105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['extend'],['extend']
Modifiability,"f 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12189231; Target db start 1 to 134985288; [] 5h 25m 52s 523ms. 5.520466 k-mers per position; 7748 DB matches per sequence; 0 overflows; 11 sequences passed prefiltering per query sequence; 8 median result list length; 2084890 sequences with 0 size result lists. Time for prefiltering scores calculation: 5h 25m 59s 596ms; Time for merging files: 0h 0m 17s 47ms; Time for processing: 5h 28m 30s 18ms; align tmp/15531098257495296432/q_orfs_aa /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx tmp/15531098257495296432/search/pref_0 tmp/15531098257495296432/aln --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 3 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 2 --compressed 0 -v 3 . Index version: 15; Generated by: 73ce3b88754987122b4fc5e69a721beeecd677d0; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 12189231 type: Aminoacid; Target database size: 134985288 type: Aminoacid; Calculation of alignments; [] 3h 56m 20s 209ms; Time for merging files: 0h 0m 13s 891ms. 138555514 alignments calculated.; 54047267 sequence pairs passed the thresholds (0.390077 of overall calculated).; 4.434018 hits per query sequence.; Time for processing: 3h 56m 39s 222ms; offsetalignment mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB tmp/15531098257495296432/q_orfs /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx tmp/15531098257495296432/aln mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB --chain-alignments 0 --merge-query 1 --search-type 0 --threads 2 --compressed 0 --db-load-mode 3 -v 3 . Index version: 15; Generated by: 73ce3b88754987122b4fc5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:6416,extend,extend,6416,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,1,['extend'],['extend']
Modifiability,"fact, the evalue seems to be the restrictive factor (which makes sense, given that the peptides are so small and the database so large). With the default evalue of `0.001`, only 26k out of 630k peptides generate a match (all of them *are* contained in the database at least once). ; * `--comp-bias-corr 0` and `--mask 0` seem to be advantageous. With a permissive evalue of `1e7`, `630467/630487` peptides are found if the both options are set to 0. If they are set to 1, only 594113/630487 peptides are found. On the first sight, the missing peptides do not look particularly low complexity (e.g. `LASLSSVFFFIISFI`, `LKEKLNRNRENSTAT`, `NEGCNSNSSTPRQNT`). ; * With a sensitivity of `s=1`, `--comp-bias-corr 0` and `--mask 0` and an evalue of `1e7` *almost all* perfect matches are found (`630467/630487`). With `s>=2` and otherwise same settings *all* perfect matches are found. . ---. For now, I will, therefore, use the following settings and see how that works out: ; ```bash; --seed-sub-mat VTML40.out ; -s 2 ; --comp-bias-corr 0 --mask 0; --gap-open 16 ; --gap-extend 2 ; --min-length 9 ; --spaced-kmer-pattern 11011101 ; -e 10000000; -k 6 ; ```. ---. Here are the raw counts of matches. `biascorr = 0` implies `mask = 0`. ; ```console; > wc -l * | sort -n ; 1283115 AE009951.2_sens1_biascorr0_eval0.001_mmseqs.tsv ; 1283126 AE009951.2_sens4_biascorr0_eval0.001_mmseqs.tsv; 1283235 AE009951.2_sens2_biascorr0_eval0.001_mmseqs.tsv; 1419374 AE009951.2_sens1_biascorr1_eval0.001_mmseqs.tsv; 1419971 AE009951.2_sens2_biascorr1_eval0.001_mmseqs.tsv; 1420095 AE009951.2_sens4_biascorr1_eval0.001_mmseqs.tsv; 155001100 AE009951.2_sens1_biascorr1_eval10000000_mmseqs.tsv; 198438767 AE009951.2_sens2_biascorr1_eval10000000_mmseqs.tsv; 212674670 AE009951.2_sens1_biascorr0_eval10000000_mmseqs.tsv; 237331138 AE009951.2_sens4_biascorr1_eval10000000_mmseqs.tsv; 247063054 AE009951.2_sens2_biascorr0_eval10000000_mmseqs.tsv; 249672852 AE009951.2_sens4_biascorr0_eval10000000_mmseqs.tsv; 1308290497 total; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160:1339,extend,extend,1339,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160,1,['extend'],['extend']
Modifiability,"files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1831648 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 1.83M 2m 36s 559ms. Adjusted k-mer length 17; Sort kmer 0h 0m 33s 753ms; Sort by rep. sequence 0h 0m 2s 503ms; Time for fill: 0h 0m 4s 992ms; Time for merging to pref: 0h 0m 0s 10ms; Time for processing: 0h 4m 21s 927ms; rescorediagonal 1831648_seqs.mmseqs2db 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref tmp/16479300059278292880/linclust/10067396915876818640/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.85 -a 0 --cov-mode 0 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 112 --compressed 0 -v 3 . [=================================================================] 1.83M 10s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:4600,extend,extendable,4600,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['extend'],['extendable']
Modifiability,"filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 split; [=================================================================] 100.00% 541.12M 11m 3s 10ms ; Sort kmer 0h 0m 24s 363ms; Sort by rep. sequence 0h 0m ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:5279,extend,extendable,5279,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['extend'],['extendable']
Modifiability,forge; libcurl 7.64.1 hda55be3_0 conda-forge; libdeflate 1.0 h14c3975_1 bioconda; libedit 3.1.20170329 hf8c457e_1001 conda-forge; libgcc-ng 8.2.0 hdf63c60_1; libssh2 1.8.2 h22169c7_2 conda-forge; libstdcxx-ng 8.2.0 hdf63c60_1; llvm-openmp 8.0.0 hc9558a2_0 conda-forge; mmseqs2 8.fac81 hf3e9acd_1 bioconda; ncurses 6.1 hf484d3e_1002 conda-forge; openmp 8.0.0 0 conda-forge; openssl 1.1.1b h14c3975_1 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h8571acd_11 bioconda; seqtk 1.3 h84994c4_1 bioconda; tk 8.6.9 h84994c4_1001 conda-forge; xz 5.2.4 h14c3975_1001 conda-forge; zlib 1.2.11 h14c3975_1004 conda-forge; ```. </p>; </details>. <details><summary>conda info</summary>; <p>. ```; active environment : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; active env location : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; shell level : 2; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.6.11; conda-build version : 3.11.0; python version : 3.6.7.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://conda.anaconda.org/leylabmpi/linux-64; https://conda.anaconda.org/leylabmpi/noarch; https://conda.anaconda.org/r/linux-64; https://conda.anaconda.org/r/noarch; https://conda.anaconda.org/qiime2/linux-64; https://conda.anaconda.org/qiime2/noarch; package cache : /ebio/abt3_project,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188:1600,config,config,1600,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188,1,['config'],['config']
Modifiability,"g k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:4294,extend,extendable,4294,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['extend'],['extendable']
Modifiability,"g k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:3693,extend,extendable,3693,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extendable']
Modifiability,"g produces less clusters in a single step clustering.; Please use --single-step-clusteringSet cluster iterations to 1; linclust tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/clu_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 5 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:5203,extend,extend,5203,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['extend'],['extend']
Modifiability,gap-open and gap-extend not taking effect,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201:17,extend,extend,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201,1,['extend'],['extend']
Modifiability,"get database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.29M 2h 10m 35s 557ms; Time for merging to aln: 0h 0m 13s 903ms; 12490036390 alignments calculated; 12287580750 sequence pairs passed the thresholds (0.983791 of overall calculated); 803.726868 hits per query sequence; Time for processing: 2h 10m 56s 695ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref -v 3 . Time for processing: 0h 0m 8s 279ms; swapresults /tmp/tmp_MMSeq2/17595625152138277869/search_tmp/17414849138893322762/target_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1.79769e+308 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 15.29M 2m 38s 69ms. Reading results.; [=================================================================] 15.29M 13m 33s 98ms. Output database: /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap; [=================================================================] 69.22K 37m 16s 381ms. Time for merging to aln_swap: 0h 0m 1s 553ms; Time for processing: 0h 54m 56s 451ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln -v 3 . Time for processing: 0h 0m 9s 464ms; mergedbs /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged_new /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged /tmp/tmp_MMSeq2//175956251521382",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:16339,extend,extend,16339,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['extend'],['extend']
Modifiability,"ging to input: 0h 15m 5s 407ms; Database type: Aminoacid; Time for processing: 0h 51m 25s 878ms; Tmp /export/scratch/SRC-50/8871099322051866948/clu_tmp folder does not exist or is not a directory.; Create dir /export/scratch/SRC-50/8871099322051866948/clu_tmp; linclust /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu /export/scratch/SRC-50/8871099322051866948/clu_tmp --cluster-mode 2 -e 0.001 --min-seq-id 0.5 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --split-memory-limit 500G --remove-tmp-files 1. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [==========================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:3603,extend,extendable,3603,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['extend'],['extendable']
Modifiability,"gth; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 38ms; Time for processing: 0h 0m 0s 251ms; lcaalign tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/first --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Compute score only; Query database size: 9 type: Aminoacid; Target database size: 713072 type: Aminoacid; [=================================================================] 100.00% 9 0s 44ms; Time for merging to first: 0h 0m 0s 37ms; 128 alignments calculated; 88 sequence pairs passed the thresholds (0.687500 of overall calculated); 9.777778 hits per query sequence; Time for processing: 0h 0m 0s 189ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 -v 3. Time for processing: 0h 0m 0s 18ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/aln_0 -v 3. Time for processing: 0h 0m 0s 2ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:11423,extend,extend,11423,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,1,['extend'],['extend']
Modifiability,"h 0m 0s 177ms; Time for processing: 0h 0m 0s 855ms; filterdb tmp/2730103712073724212/search/pref tmp/2730103712073724212/search/pref_filter --filter-file tmp/2730103712073724212/search/reverse_ungapaln --positive-filter 0 . Filtering with filter files.; [=================================================================] 323 0s 12ms; Time for merging into tmp/2730103712073724212/search/pref_filter by mergeResults: 0h 0m 0s 171ms; Time for processing: 0h 0m 0s 397ms; align /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/pref_filter tmp/2730103712073724212/search/reverse_aln --sub-mat nucl:nucleotide.out,aa:blos; um62.out -a 0 --alignment-mode 2 -e 100000 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2; 147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Compute score and coverage; Query database size: 561568 type: Aminoacid; Target database size: 14926 type: Aminoacid; Calculation of alignments; [=================================================================] 323 0s 62ms; Time for merging into tmp/2730103712073724212/search/reverse_aln by mergeResults: 0h 0m 0s 109ms. 335 alignments calculated.; 323 sequence pairs passed the thresholds (0.964179 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 427ms; swapresults /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/reverse_aln tmp/2730103712073724212/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out ; -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing offse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:4961,extend,extend,4961,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,1,['extend'],['extend']
Modifiability,"h 0m 0s 1ms; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 2ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/search/pref_0 /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/aln --sub-mat blosum62.out -a 1 --alignment-mode 3 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Compute score, coverage and sequence identity; mmseqs-web-worker_1 | Query database size: 2 type: Nucleotide; mmseqs-web-worker_1 | Target database size: 117752 type: Nucleotide; mmseqs-web-worker_1 | Calculation of alignments; [=================================================================] 100.00% 0.02 0s 0ms ] 0.00% 0.01 eta -; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | 0 alignments calculated.; mmseqs-web-worker_1 | 0 sequence pairs passed the thresholds (-nan of overall calculated).; mmseqs-web-worker_1 | 0.000000 hits per query sequence.; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 49ms; mmseqs-web-worker_1 | offsetalignment /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/query /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:9577,extend,extend,9577,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['extend'],['extend']
Modifiability,"hared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffba98, my_id=0, num_threads=32)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*)::'lambda'(int, int)::operator()(int, int) const at parallel.hpp:193:24; frame #11: 0x00000000003edd3f mmseqs`::.omp_outlined._debug__.121(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) &) at thread_pool.hpp:95:13; frame #12: 0x00000000003edd75 mmseqs`::.omp_outlined..122(.global_tid.=0x00007fffffffb6a0, .bound_tid.=0x00007fffffffb698, func=0x00007fffffffba98) at thread_pool.hpp:95:13; frame #13: 0x0000000800984653 libomp.so`__kmp_invoke_microtask + 147; frame #14: 0x0000000800963c82 libomp.so`___lldb_unnamed_symbol362$$libomp.so + 370; frame #15: 0x000000080095f4af libomp.so`__kmp_fork_call + 7423; frame #16: 0x0000000800965c96 libomp.so`__kmpc_fork_call + 310; frame #17: 0x0000000000435d3d mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffbb88, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:2639,Extend,ExtendedConfig,2639,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769,4,"['Config', 'Extend']","['Config', 'ExtendedConfig']"
Modifiability,"hen running the command you gave, I get the following error:. Command: ; ```; ~/data/dir/mmseqs2/build-mpi/bin/mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:1091,extend,extend,1091,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,1,['extend'],['extend']
Modifiability,"hift hash 67; Include only extendable false; Skip repeating k-mers false. Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterlinclust ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/clu_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:n",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:10112,extend,extend,10112,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extend']
Modifiability,"hort seq. needs to be at least x% of the other seq. length [0]; --max-rejected INT Maximum rejected alignments before alignment calculation for a query is stopped [2147483647]; --max-accept INT Maximum accepted alignments before alignment calculation for a query is stopped [2147483647]; --score-bias FLOAT Score bias when computing SW alignment (in bits) [0.000]; --realign BOOL Compute more conservative, shorter alignments (scores and E-values not changed) [0]; --realign-score-bias FLOAT Additional bias when computing realignment [-0.200]; --realign-max-seqs INT Maximum number of results to return in realignment [2147483647]; --corr-score-weight FLOAT Weight of backtrace correlation score that is added to the alignment score [0.000]; --gap-open TWIN Gap open cost [aa:11,nucl:5]; --gap-extend TWIN Gap extension cost [aa:1,nucl:2]; --zdrop INT Maximal allowed difference between score values before alignment is truncated (nucleotide alignment only) [40]; clust:; --cluster-mode INT 0: Set-Cover (greedy); 1: Connected component (BLASTclust); 2,3: Greedy clustering by sequence length (CDHIT) [0]; --max-iterations INT Maximum depth of breadth first search in connected component clustering [1000]; --similarity-type INT Type of score used for clustering. 1: alignment score 2: sequence identity [2]; kmermatcher:; --kmer-per-seq INT k-mers per sequence [21]; --kmer-per-seq-scale TWIN Scale k-mer per sequence based on sequence length as kmer-per-seq val + scale x seqlen [aa:0.000,nucl:0.200]; --adjust-kmer-len BOOL Adjust k-mer length based on specificity (only for nucleotides) [0]; --hash-shift INT Shift k-mer hash initialization [67]; --include-only-extendable BOOL Include only extendable [0]; --ignore-multi-kmer BOOL Skip k-mers occurring multiple times (>=2) [0]; profile:; --pca Pseudo count admixture strength []; --pcb Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) []; misc:; --rescore-mode INT Rescore diagonals with:; 0: Hamming distance; 1: local alignmen",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682:4029,extend,extend,4029,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682,1,['extend'],['extend']
Modifiability,"ilarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:6535,extend,extendable,6535,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['extend'],['extendable']
Modifiability,"ils.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...(no debugging symbols found)...done.; (gdb) r; Starting program: /ebio/abt6_projects8/1001g_plus/code/Programs/miniconda3/envs/MMseqs2/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . MMseqs Version: 	12.113e3; Substitution matrix	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	3.40282e+38; Split memory limit 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	256; Compressed 	0; Preload mode 	0; Verbosity 	3. [New Thread 0x7fac58648700 (LWP 183880)]; [New Thread 0x7fac57e47700 (L",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:1997,extend,extend,1997,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840,1,['extend'],['extend']
Modifiability,"ilter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 12ms; Time for processing: 0h 0m 0s 36ms; filterdb tmp/16437734971973434362/pref_filter1 tmp/16437734971973434362/pref_filter2 --filter-file tmp/16437734971973434362/order_redundancy. Filtering using file(s); [=================================================================] 140.16K 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 35ms; Time for processing: 0h 0m 0s 92ms; align tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/pref_filter2 tmp/16437734971973434362/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 30000000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 36 --compressed 0 -v 3. Compute score and coverage; Query database size: 140160 type: Nucleotide; Target database size: 140160 type: Nucleotide; Calculation of alignments; [============tmp/16437734971973434362/linclust.sh: line 75: 22654 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; ```; ## Context; I have a Fasta with about 140000 sequences which range from a few thousands nucleotides to about 20 millions. The memory consumption is fine throughout the mmseqs steps. But at some point during the align phase, a segmentation fault is thrown. It doesn't seem like a memory problem. I tried with the easy-clust workflow and the cluster module, both of which fail at the same point.; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:4338,extend,extend,4338,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['extend'],['extend']
Modifiability,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/567:5745,Config,Configuring,5745,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567,1,['Config'],['Configuring']
Modifiability,ing file to tmp_part-14/8093924424180559474/aligned; ....Time for merging files: 0h 0m 0s 186ms; Time for processing: 0h 0m 3s 851ms; Program call:; createsubdb tmp_part-14/8093924424180559474/aligned tmp_part-14/8093924424180559474/first tmp_part-14/8093924424180559474/first_sub. Start writing to database tmp_part-14/8093924424180559474/first_sub; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 279ms; Program call:; align tmp_part-14/8093924424180559474/aligned /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/first_sub tmp_part-14/8093924424180559474/round2 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3. Init data structures...; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus ... Done.; Compute score and coverage.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; ...Time for merging files: 0h 0m 0s 78ms. All sequences processed. 2760008 alignments calculated.; 2676553 sequence pairs passed the thresholds (0.969763 of overall calculated).; 84.362 hits per query sequence.; Time for processing: 0h 0m 15s 472ms; Program call:; mergedbs tmp_part-14/8093924424180559474/top1 tmp_part-14/8093924424180559474/merged tmp_part-14/8093924424180559474/top1 tmp_part-14/8093924424180559474/round2. Merging the results to tmp_part-14/8093924424180559474/merged; Done; Time for merging files: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 354ms; Program call:; filterdb tmp_part-14/8093924424180559474/merged tmp_part-14/8093924424180559474,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:16347,extend,extend,16347,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,1,['extend'],['extend']
Modifiability,ing works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFiles/microtar.dir/microtar.c.o; Linking C static library libmicrotar.a; [ 1%] Built target microtar; Scanning dependencies of target cacode; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 3%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; [ 3%] Built target cacode; Scanning dependencies of target alp; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 4%] Bui,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:3237,Config,Configuring,3237,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,1,['Config'],['Configuring']
Modifiability,"ing: 0h 0m 0s 23ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 11803 type: Aminoacid; Target database size: 11803 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 11.80K 1s 228ms ; Time for merging to aln: 0h 0m 0s 3ms; 15505 alignments calculated; 15076 sequence pairs passed the thresholds (0.972332 of overall calculated); 1.277302 hits per query sequence; Time for processing: 0h 0m 1s 238ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/aln /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 . Clustering mode: Set Cover; [=============================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:11788,extend,extend,11788,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['extend'],['extend']
Modifiability,"ist length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 265ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 9304 type: Aminoacid; Target database size: 9304 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 9.30K 1s 357ms ; Time for merging to aln_step0: 0h 0m 0s 2ms; 22013 alignments calculated; 18612 sequence pairs passed the thresholds (0.845500 of overall calculated); 2.000430 hits per query sequence; Time for processing: 0h 0m 1s 367ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 9.30K 0s 6ms ; Sort entries;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:18994,extend,extend,18994,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['extend'],['extend']
Modifiability,"k 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 result_query_20230412_142303/tmp/18292001434761310910/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:3370,extend,extend,3370,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['extend'],['extend']
Modifiability,"k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:19296,extend,extendable,19296,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extendable']
Modifiability,"l the `clust` module which implements the actual clustering algorithm, not the whole `cluster` workflow with the searches etc:; ```; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```; should be . ```; mmseqs clust $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```. For a 70% clustering you can adapt the 50% clustering strategy:. ```; # cluster down to 70%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust70"" \; --filter-column 3 --filter-regex '(0\.[7-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust70"" ""$TMPPATH/clu_uniclust70"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust70_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust70; ```. The idea here is to go directly from 90 to 30 to avoid any possible transitivity issues. In the MMseqs2 cascaded clustering you can get representative->member hits below the given thresholds after putting clusters from previous clustering steps together. You can reconstruct the 50 (and a 70) clustering from the 30% alignments, and that's what it does (it does it with a roundabout regex, because we didn't have expression filters back then).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067:1290,adapt,adapt,1290,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067,1,['adapt'],['adapt']
Modifiability,"l, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*, long*, ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData*, int, int) at partitioning.hpp:104:9; frame #7: 0x00000000004475fb mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffa8a8, begin=0x00000008012ffc40, end=0x00000008013647d0, shared=0x0000000801371000, num_threads=4, task_sorter=0x00007fffffffaed8)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::SharedData&, int, ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&) at parallel.hpp:114:26; frame #8: 0x0000000000447487 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffadd8, my_id=0, num_threads=4)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lamb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:3283,Extend,ExtendedConfig,3283,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758,14,"['Config', 'Extend']","['Config', 'ExtendedConfig']"
Modifiability,"l=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 2 (Thread 0x7f6ec9fff640 (LWP 135794) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7f706900f200 (LWP 135793) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:55728,config,config,55728,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"l=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 3 (Thread 0x7f6ec97fe640 (LWP 135795) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 2 (Thread 0x7f6ec9fff640 (LWP 135794) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:54888,config,config,54888,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"l=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 4 (Thread 0x7f6ec8ffd640 (LWP 135796) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 3 (Thread 0x7f6ec97fe640 (LWP 135795) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:54048,config,config,54048,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"l=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 5 (Thread 0x7f6e8b23b640 (LWP 135825) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 4 (Thread 0x7f6ec8ffd640 (LWP 135796) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:53208,config,config,53208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"l=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 6 (Thread 0x7f6e93a4c640 (LWP 135826) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 5 (Thread 0x7f6e8b23b640 (LWP 135825) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:52368,config,config,52368,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"l=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 7 (Thread 0x7f6e91247640 (LWP 135827) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 6 (Thread 0x7f6e93a4c640 (LWP 135826) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:51528,config,config,51528,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"l=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 8 (Thread 0x7f6e92249640 (LWP 135828) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 7 (Thread 0x7f6e91247640 (LWP 135827) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:50688,config,config,50688,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"l=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 9 (Thread 0x7f6ed95f1640 (LWP 135829) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 8 (Thread 0x7f6e92249640 (LWP 135828) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:49848,config,config,49848,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"lable>) at crt1.c:76:7; (lldb) ; * thread #1, name = 'mmseqs'; * frame #0: 0x000000080086f68c libthr.so.3`___lldb_unnamed_symbol190$$libthr.so.3 + 92; frame #1: 0x000000080086ccab libthr.so.3`___lldb_unnamed_symbol159$$libthr.so.3 + 491; frame #2: 0x000000080092ea3e libomp.so`___lldb_unnamed_symbol30$$libomp.so + 302; frame #3: 0x000000080096faaa libomp.so`___lldb_unnamed_symbol400$$libomp.so + 698; frame #4: 0x000000080096dd5c libomp.so`___lldb_unnamed_symbol392$$libomp.so + 604; frame #5: 0x000000080096aca7 libomp.so`___lldb_unnamed_symbol384$$libomp.so + 1095; frame #6: 0x0000000800966434 libomp.so`__kmpc_barrier + 308; frame #7: 0x0000000000408496 mmseqs`ips4o::OpenMPThreadPool::Sync::barrier(this=0x0000000802849038) const at thread_pool.hpp:63:1; frame #8: 0x0000000000436525 mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, bucket_start=0x0000000802842000, shared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelS",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:7120,Extend,ExtendedConfig,7120,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769,2,"['Config', 'Extend']","['Config', 'ExtendedConfig']"
Modifiability,"lation (step 1 of 1); Query db start 1 to 8273; Target db start 1 to 756891; [=================================================================] 100.00% 8.27K 1s 888ms . 7.501658 k-mers per position; 14614 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 5 sequences passed prefiltering per query sequence; 0 median result list length; 7780 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 6ms; Time for processing: 0h 0m 23s 645ms; align tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 tmp/16138406286044646862/aln_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 8273 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.27K 1s 879ms ; Time for merging to aln_1: 0h 0m 0s 9ms. 41734 alignments calculated.; 41734 sequence pairs passed the thresholds (1.000000 of overall calculated).; 5.044603 hits per query sequence.; Time for processing: 0h 0m 5s 83ms; mergedbs IP_DB/IP_DB tmp/16138406286044646862/aln_merge_new tmp/16138406286044646862/aln_0 tmp/16138406286044646862/aln_1 --compressed 0 -v 3 . Merging the results to tmp/16138406286044646862/aln_merge_new; Time for merging to aln_merge_new: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17ms; rmdb tmp/16138406286044646862/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; mvdb tmp/16138406286044646862/aln_merge_new tmp/1613840",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:8836,extend,extend,8836,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['extend'],['extend']
Modifiability,"ld be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:3642,extend,extendable,3642,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['extend'],['extendable']
Modifiability,"le k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:2519,extend,extendable,2519,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['extend'],['extendable']
Modifiability,"lign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 104664 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 0ms; Time for merging to result: 0h 0m 0s 0ms; 300 alignments calculated; 300 sequence pairs passed the thresholds (1.000000 of overall calculated); 300.000000 hits per query sequence; Time for processing: 0h 0m 0s 18ms; convertalis tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/result result.tsv --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --format-mode 4 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qseq,tseq --translation-table 1 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --db-output 0 --db-load-mode 0 --search-type 0 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; [=================================================================] 1 0s 0ms; Time for merging to result.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 9ms; ```. ## Context; * I would like to create a multiple sequence alignment FASTA file from the results from `easy-search` to use as input to other tools. ## Your Environment; * MMseqs2 Version: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32. * Operating system and version:. ```; uname -a; Linux lambda-servername 5.4.0-144-generic #161-Ubuntu SMP Fri Feb 3 14:49:04 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; ``",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:8133,extend,extend,8133,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['extend'],['extend']
Modifiability,"lit memory limit 	0; Coverage threshold 	0.99; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.99; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	1; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --ad",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:2415,extend,extendable,2415,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['extend'],['extendable']
Modifiability,"ll calculated); 8940.219727 hits per query sequence; Time for processing: 1h 41m 41s 324ms; rmdb tmp/5233442526903138997/pref -v 3 . Time for processing: 0h 0m 0s 616ms; mvdb tmp/5233442526903138997/aln tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 0ms; align /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/aln_merged tmp/5233442526903138997/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score and coverage; Query database size: 75233 type: Aminoacid; Target database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 9m 57s 768ms ; Time for merging to aln: 0h 0m 0s 17ms; 672599536 alignments calculated; 672599536 sequence pairs passed the thresholds (1.000000 of overall calculated); 8940.219727 hits per query sequence; Time for processing: 1h 9m 58s 713ms; rmdb tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 73ms; swapresults /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/aln alnment/alignment --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 1.79769e+308 --split-memory-limit 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --threads 16 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=========",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:7771,extend,extend,7771,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['extend'],['extend']
Modifiability,"llion of antibody sequences; cmd: easy-linclust ./DB.fasta clusterRes tmp --min-seq-id 0.95 -c 0.95. ## MMseqs Output (for bugs). MMseqs Version: 13.45111; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 32; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.95; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.95; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. linclust tmp/14608094218366142978/input tmp/14608094218366142978/clu tmp/14608094218366142978/clu_tmp -e 0.001 --min-seq-id 0.95 -c 0.95 --spaced-kmer-mode 0 --remove-tmp-files 1. Set cluster mode SET COVER.; Killed; Error: Rescore with hamming distance step died; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 13.45111; OS: Ubuntu 22.04; CPU: Intel(R) Core(TM) i9-13900K; Memory: 64GB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/730:1321,extend,extendable,1321,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/730,1,['extend'],['extendable']
Modifiability,"lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extend",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:1722,extend,extendable,1722,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['extend'],['extendable']
Modifiability,"ls for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<opti",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:35206,config,config,35206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['config'],['config']
Modifiability,"lse; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:3134,extend,extend,3134,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,2,['extend'],"['extend', 'extendable']"
Modifiability,"lse; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kme",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:2516,extend,extend,2516,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['extend'],['extend']
Modifiability,"lt lists; Time for merging to pref_step0: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 473ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 0ms; Time for merging to aln_step0: 0h 0m 0s 3ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 13ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3. Clustering mode: Set C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:21180,extend,extend,21180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['extend'],['extend']
Modifiability,"lter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 100000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00K 0s 853ms; Sort kmer 0h 0m 0s 789ms; Sort by rep. sequence 0h 0m 0s 951ms; Time for fill: 0h 0m 0s 155ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 3s 166ms; rescorediagonal ./mms_smallDB ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:11431,extend,extendable,11431,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extendable']
Modifiability,"lter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 170ms; rescorediagonal in/DB_in in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:4753,extend,extendable,4753,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extendable']
Modifiability,"lter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 172ms; rescorediagonal in/DB_in in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:20356,extend,extendable,20356,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extendable']
Modifiability,"lumn for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 11ms ] 54.55% 151 eta 0s; Time for processing: 0h 0m 0s 54ms; align tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/pref_rescore2 tmp//538598962955004214/linclust/16628284907041385511/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 97ms; Time for merging to aln: 0h 0m 0s 9ms; 276 alignments calculated; 276 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 117ms; clust tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/aln tmp//538598962955004214/linclust/16628284907041385511/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 276 0s 9ms; Sort entries; Find missing connections; Found 0 new connections.; Re",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:8564,extend,extend,8564,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['extend'],['extend']
Modifiability,"ly extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redundancy tmp//538598962955004214/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:2812,extend,extendable,2812,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['extend'],['extendable']
Modifiability,"m 0s 29ms; Writing results to: /tmp//2989869989197200687/result; [=================================================================] 514.46K 49s 642ms. Time for merging to result: 0h 0m 0s 988ms; Time for processing: 0h 0m 58s 569ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 32 --compressed 0 -v 3 . [====terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; **Error: Convert Alignments died**. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 1f302134aa1c6c7c4e2b9da272fd26af33860780; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD EPYC 7742 64-Core Processor; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:26130,extend,extend,26130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['extend'],['extend']
Modifiability,"mers per position; 3373560 DB matches per sequence; 626307 overflows; 21 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 601 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 657ms; Time for processing: 2h 32m 1s 811ms; align euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 euk72-90.profile_search2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 48 --compressed 0 -v 3 . Compute score and coverage; Query database size: 1270615 type: Profile; Target database size: 1270615 type: Aminoacid; Calculation of alignments; [=================================================================] 1.27M 33m 52s 295ms; Time for merging to euk72-90.profile_search2: 0h 0m 0s 650ms; 109004199 alignments calculated; 56769447 sequence pairs passed the thresholds (0.520801 of overall calculated); 44.678715 hits per query sequence; Time for processing: 0h 33m 55s 605ms; clust euk72-90.profile2 euk72-90.profile_search2 euk72-90.clust2 --threads 48 . MMseqs Version: 	aabc78c298f35cbc7a4136206c1a83adaa68695f; Cluster mode 	0; Max connected component depth	1000; Similarity type 	2; Threads 	48; Compressed 	0; Verbosity 	3. Clustering mode: Set Cover; [=================================================================] 1.27M 0s 909ms; Sort entries; Find missing connections; Found 12659367 new connections.; Re",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:10793,extend,extend,10793,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['extend'],['extend']
Modifiability,"min-seq-id 1.00 -c 0.90 -s 8 --max-seqs 1000 --cluster-mode 1 --threads 6; ```; the program crashes with:; ```; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007f4554305010 ***; ```; If I subselect some sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_ch",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:1154,extend,extendable,1154,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['extend'],['extendable']
Modifiability,"mory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; rescorediagonal DB_in DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:3972,extend,extendable,3972,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['extend'],['extendable']
Modifiability,"ms; Time for merging target splits: 0h 0m 0s 174ms; Time for merging to pref_0_tmp: 0h 0m 0s 45ms; Time for processing: 0h 6m 46s 299ms; lcaalign /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/pref_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=================================================================] 1.08K 0s 508ms; Time for merging to aln_0: 0h 0m 0s 8ms; 19048 alignments calculated; 15817 sequence pairs passed the thresholds (0.830376 of overall calculated); 14.713489 hits per query sequence; Time for processing: 0h 0m 54s 194ms; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:16148,extend,extend,16148,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,1,['extend'],['extend']
Modifiability,"multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 156ms; rescorediagonal DB_in/shuffle_in DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:3735,extend,extendable,3735,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['extend'],['extendable']
Modifiability,"multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:2354,extend,extend,2354,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,1,['extend'],['extend']
Modifiability,"n 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; rescorediagonal DB_in DB_in tmp//10798",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:3511,extend,extendable,3511,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['extend'],['extendable']
Modifiability,"n:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [======================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:4768,extend,extendable,4768,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['extend'],['extendable']
Modifiability,"nclude identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redundancy tmp//538598962955004214/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-e",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:1820,extend,extendable,1820,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['extend'],['extendable']
Modifiability,"nclude identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:2018,extend,extendable,2018,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['extend'],['extendable']
Modifiability,"nclude identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-on",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:2037,extend,extendable,2037,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['extend'],['extendable']
Modifiability,"nd aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag directing the output of uniclust50 to uniclust30, which might not make it hierarchical. If I want to also implement a ""uniclust70"" -> uniclust50 -> uniclust30, which line(s) should I look for? Let me know if I have missed anything.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7700,extend,extendable,7700,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,2,"['extend', 'variab']","['extendable', 'variable']"
Modifiability,"ng the discussion at: https://github.com/soedinglab/MMseqs2/issues/373; I have tried the following workflow:. ## Steps to Reproduce; `mmseqs createdb IP.fasta IP_DB/IP_DB`; `mmseqs createdb cryptic_DB.fasta Cryptic_DB/Cryptic_DB`. `mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0`; `mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0`. `mmseqs search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf -s 2 --spaced-kmer-pattern 11011101 --gap-open 16 --gap-extend 2 -k 6 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. This didn't find all the peptides. I have experimented with increasing gap penalties, variying k-mer sizes (5-7), and sensitivity. I have also tried explicitly stating --spaced-kmer-pattern and k-mer length during createindex step. ; The best result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; Thanks in advance,; Yehor. ## MMseqs Output; search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 --start-sens 1 --sens-steps 3 -s 12 --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.ou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:1401,extend,extend,1401,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['extend'],['extend']
Modifiability,"nscriptome as the query? For example taking into account the rather short contigs and splicing. I am not super familiar with transcriptomics datasets. Depending on the length of your queries you might want to turn of the early ORF filter (`--orf-filter 0`) as it can sometimes reject too many ORFs if the sequences are short. We also have a different project that deals with contamination: https://github.com/martin-steinegger/conterminator; Though that tool is currently only for all-vs-all genome contamination annotations. But Martin was planning to build a scan mode for one-vs-RefSeq/GenBank. > Second question: There are no genome assemblies form closely related species available. What are your thoughts regarding nucl-nucl search VS translated_nucl-prot search in this case?. Generally our nucl-nucl searching capabilities are less developed than than anything-prot. In the taxonomy assignment, nucl-nucl still uses top-hit taxon assignment instead of LCA. We haven't gotten around to thoroughly benchmark the nucl-nucl homology search and publish it (it does work quite well in the preliminary tests). And nucl-nucl homology search is limited to around ~80% sequence identity (which is usually more than enough for taxonomy though). Also building a taxonomy database for the NT is painful and the database might get extremely large (haven't tried it in a while though). I'd be quite interested in what you find out in your experiments with it though. We do plan to develop this part further. > Third questions: In case I do a translated_nucl-prot search how do I deal with the fact that my queries are both from Euk. and Prok. origin? I mean regarding translation table. Would you worry about this?. By default, we extract fragments from any codon to a stop codon and repeat the procedure. So the translation table matters a bit less (only affected by alternative stop codons). And since we only do local alignments, the over-extended start will get chopped off through the alignment anyway.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824083071:2013,extend,extended,2013,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824083071,1,['extend'],['extended']
Modifiability,"nsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>) at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578) at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```; For the clu90 job:; ```; (gdb) thread apply all bt. Thread 32 (Thread 0x7f6e65ffe640 (LWP 135852) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 31 (Thread 0x7f6e6cffc640 (LWP 135851) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f706",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:30585,config,config,30585,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"ntext:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:5573,extend,extendable,5573,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['extend'],['extendable']
Modifiability,"ntical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --spl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:2667,extend,extendable,2667,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extendable']
Modifiability,"ntical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:18268,extend,extendable,18268,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extendable']
Modifiability,"o ""word""...; Reading symbols from mmseqs...done.; (gdb) r; Starting program: mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen; Translation table 	1; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Database output 	false; Preload mode 	0; Search type 	3; Threads 	16; Compressed 	0; Verbosity 	3. [New Thread 0x155554aca700 (LWP 28907)]; [New Thread 0x1555548c9700 (LWP 28908)]; [New Thread 0x1555546c8700 (LWP 28909)]; [New Thread 0x1554ea593700 (LWP 28921)]; [New Thread 0x1554ea392700 (LWP 28922)]; [New Thread 0x1554ea191700 (LWP 28923)]; [New Thread 0x1554e9f90700 (LWP 28924)]; [New Thread 0x15549ceb2700 (LWP 28925)]; [New Thread 0x15549ccb1700 (LWP 28926)]; [New Thread 0x15549cab0700 (LWP 28927)]; [New Thread 0x15549c8a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:2319,extend,extend,2319,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628,1,['extend'],['extend']
Modifiability,oacid; Calculation of Smith-Waterman alignments.; Time for merging files: 0h 0m 0s 8ms. All sequences processed. 952 alignments calculated.; 258 sequence pairs passed the thresholds (0.271008 of overall calculated).; 258 hits per query sequence.; Time for processing: 0h 0m 15s 798ms; Program call:; mergedbs tmpC/10139724895635470572/profile_0 tmpC/10139724895635470572/aln_new tmpC/10139724895635470572/aln_0 tmpC/10139724895635470572/aln_1 . MMseqs Version:	GITDIR-NOTFOUND; Merge prefixes	; Verbosity 	3. Merging the results to tmpC/10139724895635470572/aln_new; Done; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 23ms; Program call:; result2profile tmpC/10139724895635470572/profile_0 genes.db tmpC/10139724895635470572/aln_0 tmpC/10139724895635470572/profile_1 --sub-mat blosum62.out --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --omit-consensus 0 --no-preload 1 --gap-open 11 --gap-extend 1 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Mask profile 	1; Profile e-value threshold 	0.1; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	0; Pseudo count b 	1.5; Omit Consensus 	false; No preload 	true; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3. Start computing profiles.; Query database type: Profile; Target database type: Aminoacid; Time for merging files: 0h 0m 0s 112ms; Time for merging files: 0h 0m 0s 7ms. Done.; Time for processing: 0h 0m 16s 74ms; Program call:; prefilter tmpC/10139724895635470572/profile_1 genes.db tmpC/10139724895635470572/pref_2 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-m,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:87714,extend,extend,87714,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['extend'],['extend']
Modifiability,"ommandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>) at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578) at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```; For the clu90 job:; ```; (gdb) thread apply all bt. Thread 32 (Thread 0x7f6e65ffe640 (LWP 135852) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 31 (Thread 0x7f6e6cffc640 (LWP 135851) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:30711,config,config,30711,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,ompositional bias 	1; Realign hit 	true; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id.	false; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3. Init data structures...; Compute score only.; Using 1 threads.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; Time for merging files: 0h 0m 0s 14ms. All sequences processed. 1218 alignments calculated.; 266 sequence pairs passed the thresholds (0.218391 of overall calculated).; 266 hits per query sequence.; Time for processing: 0h 0m 15s 821ms; Program call:; result2profile geneC.db genes.db tmpC/10139724895635470572/aln_0 tmpC/10139724895635470572/profile_0 --sub-mat blosum62.out --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --omit-consensus 0 --no-preload 1 --gap-open 11 --gap-extend 1 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Mask profile 	1; Profile e-value threshold 	0.1; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	0; Pseudo count b 	1.5; Omit Consensus 	false; No preload 	true; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3. Start computing profiles.; Query database type: Aminoacid; Target database type: Aminoacid; Time for merging files: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 7ms. Done.; Time for processing: 0h 0m 15s 770ms; Program call:; prefilter tmpC/10139724895635470572/profile_0 genes.db tmpC/10139724895635470572/pref_1 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:43982,extend,extend,43982,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['extend'],['extend']
Modifiability,"only ungapped alignment; -e 	0.001 	list matches below this E-value [0.0, inf] ; --min-seq-id 	0.000 	list matches above this sequence identity (for clustering) [0.0,1.0]; --seq-id-mode 	0 	0: alignment length 1: shorter, 2: longer sequence ; --alt-ali 	5 	Show up to this many alternative alignments ; -c 	0.000 	list matches above this fraction of aligned (covered) residues (see --cov-mode); --cov-mode 	0 	0: coverage of query and target, 1: coverage of target, 2: coverage of query 3: target seq. length needs be at least x% of query length, 4: query seq. length needs be at least x% of target length; --realign 	false 	compute more conservative, shorter alignments (scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs b",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:7450,extend,extend,7450,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['extend'],['extend']
Modifiability,"or merging to aln_0: 0h 0m 0s 9ms. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 3s 593ms; align /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/profile_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/pref_1 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 1 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 7002 type: Profile; Target database size: 41195879 type: Aminoacid; Calculation of alignments; [=================================================================] 7.00K 0s 20ms; Time for merging to aln_tmp_1: 0h 0m 0s 10ms. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 4s 529ms; mergedbs /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/profile_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search/hits_seqs17_db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_tmp_1. Merging the results to /ebio/abt3_s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203:2089,extend,extend,2089,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203,1,['extend'],['extend']
Modifiability,"ory-limit 500G. MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500G; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb SRC.fasta /export/scratch/SRC-50/8871099322051866948/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [2022891328] 19m 44s 787ms; Time for merging to input_h: 0h 15m 26s 958ms; Time for merging to input: 0h 15m 5s 407ms; Database type: Aminoacid; Time for processing: 0h 51m 25s 878ms; Tmp /export/scratch/SRC-50/8871099322051866948/clu_tmp folder does not exist or is not a directory.; Create dir /export/scratch/SRC-50/8871099322051866948/clu_tmp; linclust /export/scratch/SRC-50/8871",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:1926,extend,extendable,1926,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['extend'],['extendable']
Modifiability,"otide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 \; > --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 \; > --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. MMseqs Version: 	a6cab565c98376623e82c3a04d186219d4c2f10c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	1e-05; Mask profile 	1; Profile E-value threshold 	1e-05; Compositional bias 	1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Pseudo count a 	0; Pseudo count b 	1.5; Preload mode 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	8; Compressed 	0; Verbosity 	3. Query database size: 1151 type: Aminoacid; Target database size: 41195879 type: Aminoacid; ================================================================= ] 46.43% 535 eta 0s; ==71239==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61a0000233e0 at pc 0x55c61d242cd7 bp 0x7fc0f27db1b0 sp 0x7fc0f27db1a0; WRITE of size 1 at 0x61a0000233e0 thread T3;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:1527,extend,extend,1527,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245,1,['extend'],['extend']
Modifiability,"ove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:3421,extend,extend,3421,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['extend'],['extend']
Modifiability,"ove-tmp-files 1. Set cluster sensitivity to -s 3.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/clu_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:4330,extend,extend,4330,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['extend'],['extend']
Modifiability,p.o; [ 48%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Parameters.cpp.o; [ 49%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/ProfileStates.cpp.o; [ 49%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/LibraryReader.cpp.o; [ 50%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Sequence.cpp.o; [ 50%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/SequenceWeights.cpp.o; [ 50%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/SubstitutionMatrix.cpp.o; [ 51%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/tantan.cpp.o; [ 51%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/UniprotKB.cpp.o; [ 51%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o; [ 52%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/CacheFriendlyOperations.cpp.o; [ 52%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ExtendedSubstitutionMatrix.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Indexer.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/IndexBuilder.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/KmerGenerator.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Main.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Prefiltering.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/PrefilteringIndexReader.cpp.o; [ 55%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/QueryMatcher.cpp.o; [ 55%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ReducedMatrix.cpp.o; [ 56%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/SequenceLookup.cpp.o; [ 56%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/UngappedAlignment.cpp.o; [ 56,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:15470,Extend,ExtendedSubstitutionMatrix,15470,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,1,['Extend'],['ExtendedSubstitutionMatrix']
Modifiability,"p/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 96025 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 96.03K 0s 882ms . Adjusted k-mer length 17; Sort kmer 0h 0m 0s 257ms; Sort by rep. sequence 0h 0m 0s 133ms; Time for fill: 0h 0m 0s 107ms; Time for merging to pref: 0h 0m 0s 28ms; Time for processing: 0h 0m 1s 808ms; rescorediagonal tmp/3198441352783276465/input tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.5 -a 0 --cov-mode 5 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 24 --compres",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:6611,extend,extendable,6611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['extend'],['extendable']
Modifiability,"p/5233442526903138997/pref tmp/5233442526903138997/pref_count.tsv --stat linecount --tsv --threads 16 --compressed 0 -v 3 . [=================================================================] 100.00% 75.23K 1s 543ms ; Time for merging to pref_count.tsv: 0h 0m 0s 20ms; Time for processing: 0h 0m 1s 810ms; align tmp/5233442526903138997/profileDB Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/pref tmp/5233442526903138997/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 1 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score and coverage; Query database size: 75233 type: Aminoacid; Target database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 41m 40s 149ms ; Time for merging to aln: 0h 0m 0s 11ms; 1976417423 alignments calculated; 672599536 sequence pairs passed the thresholds (0.340313 of overall calculated); 8940.219727 hits per query sequence; Time for processing: 1h 41m 41s 324ms; rmdb tmp/5233442526903138997/pref -v 3 . Time for processing: 0h 0m 0s 616ms; mvdb tmp/5233442526903138997/aln tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 0ms; align /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/aln_merged tmp/5233442526903138997/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:6311,extend,extend,6311,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['extend'],['extend']
Modifiability,"p/9700814981231218113/search_tmp/10627605686170015473/search/input_2 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 11ms; offsetalignment tmp/9700814981231218113/query tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/aln tmp/9700814981231218113/result --chain-alignments 0 --merge-query 1 --search-type 0 --threads 40 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 93ms; Writing results to: tmp/9700814981231218113/result; [=================================================================] 516.30K 0s 162ms. Time for merging to result: 0h 0m 0s 158ms; Time for processing: 0h 0m 1s 659ms; Remove temporary files; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa . Time for processing: 0h 0m 0s 45ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/t_orfs_aa . Time for processing: 0h 0m 0s 0ms; convertalis tmp/9700814981231218113/query /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/result test.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 0 --db-load-mode 0 --search-type 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 516.30K 0s 84ms; Time for merging to test.m8: 0h 0m 0s 181ms; Time for processing: 0h 0m 2s 227ms; Removing temporary files; rmdb tmp/9700814981231218113/result . Time for processing: 0h 0m 0s 8ms; rmdb tmp/9700814981231218113/query . Time for processing: 0h 0m 0s 38ms; rmdb tmp/9700814981231218113/query_h . Time for processing: 0h 0m 0s 3ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:17221,extend,extend,17221,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['extend'],['extend']
Modifiability,"p0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/c",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:6273,extend,extend,6273,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['extend'],['extend']
Modifiability,"path 	; Threads 	112; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.95; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust 1831648_seqs.mmseqs2db tmp/16479300059278292880/clu_redundancy tmp/16479300059278292880/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:2302,extend,extendable,2302,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['extend'],['extendable']
Modifiability,"pdate/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. Database size: 6 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 6 0s 1ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 22ms; rescorediagonal /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/84504",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:8482,extend,extendable,8482,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['extend'],['extendable']
Modifiability,"q-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:4804,extend,extendable,4804,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['extend'],['extendable']
Modifiability,"q-len 10000 --spaced-kmer-mode 0 --remove-tmp-files 1 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . Database size: 440656032 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 440.66M 1m 58s 106ms; Sort kmer 0h 1m 9s 431ms; Sort by rep. sequence 0h 0m 39s 418ms; Time for fill: 0h 2m 31s 613ms; Time for merging to pref: 0h 0m 0s 1ms; Time for processing: 0h 9m 8s 726ms; rescorediagonal All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:4833,extend,extendable,4833,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['extend'],['extendable']
Modifiability,"q. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s 620ms; Time for processing: 5h 43m 57s 88ms; rescorediagonal inDB inDB tmp/18375844090983922724/pref tmp/183758",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:2045,extend,extendable,2045,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311,1,['extend'],['extendable']
Modifiability,"qs 300`. ```; Program call:; panproteome.db panproteome.db_clu /tmp/clu/ --kmer-per-seq 80 --max-seqs 300 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Tmp /tmp/clu/ folder does not exist or is not a directory.; Created dir /tmp/clu/; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; panproteome.db /tmp/clu//9559457551393989073/clu_redundancy /tmp/clu//9559457551393989073/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 36 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-l",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:21108,extend,extendable,21108,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['extend'],['extendable']
Modifiability,"quence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	92G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 2204542403 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 2.20B 2h 9m 12s 463ms; Process file into 17 parts; Generate k-mers ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:3459,extend,extendable,3459,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['extend'],['extendable']
Modifiability,"queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 8s 631ms; align tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 1 --compressed 0 -v 3 . Compute score only; Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; Calculation of alignments; [=================================================================] 2 0s 0ms; Time for merging to aln_0: 0h 0m 0s 0ms; 0 alignments calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:12934,extend,extend,12934,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['extend'],['extend']
Modifiability,"rame #9: 0x00000000003ef65f mmseqs`::.omp_outlined._debug__.54(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) &) at thread_pool.hpp:95:13; frame #10: 0x00000000003ef695 mmseqs`::.omp_outlined..55(.global_tid.=0x00007fffffffa9e0, .bound_tid.=0x00007fffffffa9d8, func=0x00007fffffffadd8) at thread_pool.hpp:94:1; frame #11: 0x000000080098d523 libomp.so`__kmp_invoke_microtask + 147; frame #12: 0x0000000800968332 libomp.so`___lldb_unnamed_symbol498$$libomp.so + 370; frame #13: 0x0000000800963b3f libomp.so`__kmp_fork_call + 7551; frame #14: 0x000000080093cfb6 libomp.so`__kmpc_fork_call + 310; frame #15: 0x00000000004473a1 mmseqs`void ips4o::OpenMPThreadPool::operator(this=0x00007fffffffaea8, func=0x00007fffffffadd8, num_threads=4)<ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator()(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*)::'lambda'(int, int)>(ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #16: 0x000000000043e399 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffaea8, begin=0x00000008012ffc40, end=0x00000008013647d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:5639,Extend,ExtendedConfig,5639,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758,8,"['Config', 'Extend']","['Config', 'ExtendedConfig']"
Modifiability,"rary path; Threads 	20; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.97; Min alignment length 	200; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster iterations to 3; linclust shrimpDB tmp97/17949317426677965256/clu_redundancy tmp97/17949317426677965256/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:2954,extend,extendable,2954,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['extend'],['extendable']
Modifiability,"rc/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/KmerGenerator.cpp.o; [ 3%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Main.cpp.o; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp: In function 'int prefilter(int, const char**, const Command&)':; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp:72:12: warning: unused variable 'splitMode' [-Wunused-variable]; size_t splitMode = pref->getSplitMode();; ^~~~~~~~~; [ 4%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Prefiltering.cpp.o; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:4152:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6032:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6048:suffix or operands invalid for `movq'; /var/folder",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:4486,Extend,ExtendedSubstitutionMatrix,4486,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Extend'],['ExtendedSubstitutionMatrix']
Modifiability,"re informative:. gdb --args mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs/bin/mmseqs...done.; (gdb) r; Starting program: mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Usi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:1013,config,configuration,1013,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473,2,['config'],['configuration']
Modifiability,"read-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:35051,config,config,35051,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['config'],['config']
Modifiability,"rflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 93ms; align tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 tmp_easy_search/6745795380167965363/result --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 104664 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 0ms; Time for merging to result: 0h 0m 0s 0ms; 300 alignments calculated; 300 sequence pairs passed the thresholds (1.000000 of overall calculated); 300.000000 hits per query sequence; Time for processing: 0h 0m 0s 18ms; convertalis tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/result result.tsv --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --format-mode 4 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qseq,tseq --translation-table 1 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --db-out",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:7170,extend,extend,7170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['extend'],['extend']
Modifiability,"rget database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.11M 1h 57m 11s 538ms; Time for merging to aln: 0h 0m 19s 511ms. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:12753,extend,extend,12753,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['extend'],['extend']
Modifiability,"rget db start 1 to 13003941; [=================================================================] 2.33M 2m 23s 577ms. 183.593905 k-mers per position; 20689 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 54469 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 793ms; Time for processing: 0h 5m 46s 599ms; align tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_1 tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 2328975 type: Aminoacid; Target database size: 13003941 type: Aminoacid; Calculation of alignments; [=================================================================] 2.33M 3s 448ms; Time for merging to aln_1: 0h 0m 0s 794ms. 2274506 alignments calculated.; 57971 sequence pairs passed the thresholds (0.025487 of overall calculated).; 0.024891 hits per query sequence.; Time for processing: 0h 0m 6s 29ms; mergedbs tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge_new tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_0 tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_1 --compressed 0 -v 3 . Merging the results to tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge_new; Time for merging to aln_merge_new: 0h 0m 0s 301ms; Time for processing",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:9556,extend,extend,9556,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['extend'],['extend']
Modifiability,"rging to pref_0: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 8ms; docker-compose-mmseqs-web-worker-1 | align /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/pref_0 /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/result --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 2 --compressed 0 -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Compute score, coverage and sequence identity; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Calculation of alignments; docker-compose-mmseqs-web-worker-1 | [=================================================================] 1 0s 2ms; docker-compose-mmseqs-web-worker-1 | Time for merging to result: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | 6 alignments calculated.; docker-compose-mmseqs-web-worker-1 | 0 sequence pairs passed the thresholds (0.000000 of overall calculated).; docker-compose-mmseqs-web-worker-1 | 0.000000 hits per query sequence.; docker-compose-mmseqs-web-worker-1 | Tim",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717:5641,extend,extend,5641,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717,1,['extend'],['extend']
Modifiability,"rk. mmseqs search PHROGS/phrogs_mmseqs_db/phrogs_profile_db PHROGS/target_seq PHROGS/Bins_PHROGS PHROGS/tmp -s 7 . ##This command is very long and failed. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. align MMSEQ2_PHROGS/phrogs_mmseqs_db/phrogs_profile_db MMSEQ2_PHROGS/target_seq MMSEQ2_PHROGS/tmp/3583634493861447998/pref_0 MMSEQ2_PHROGS/Bins_PHROGS --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 38880 type: Profile; Target database size: 75478 type: Aminoacid; Calculation of alignments; Score of forward/backward SW differ: 539 542. Q: 0 T: 31246. ] 0.00% 1 eta -; Start: Q: 6, T: 0. End: Q: 192, T 154; Score of forward/backward SW differ: 1751 1748. Q: 5165 T: 52236.; Start: Q: 2, T: 7. End: Q: 182, T 267; Error: Alignment died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specific",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/677:1418,extend,extend,1418,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/677,1,['extend'],['extend']
Modifiability,"rop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; [=================================================================Segmentation fault; Error: Create profile died; ```. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; * Which MMseqs version was used:Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 32-core, 256 GB ram, vmtouch'ed target into memory (crash happens either way though); * Operating system and version: Debian GNU/Linux 11 (bullseye)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:6523,extend,extend,6523,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['extend'],['extend']
Modifiability,"rs/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/KmerGenerator.cpp.o; [ 3%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Main.cpp.o; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp: In function 'int prefilter(int, const char**, const Command&)':; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp:72:12: warning: unused variable 'splitMode' [-Wunused-variable]; size_t splitMode = pref->getSplitMode();; ^~~~~~~~~; [ 4%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Prefiltering.cpp.o; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:4152:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6032:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6048:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6075:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6103:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6172:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6183:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:7662:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l800",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:4986,variab,variable,4986,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,2,['variab'],['variable']
Modifiability,"ry path 	; Threads 	40; Compressed 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB tmp/10260956542131223380/clu_redundancy tmp/10260956542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:3045,extend,extendable,3045,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['extend'],['extendable']
Modifiability,"s (truncated result); 13 sequences passed prefiltering per query sequence; 7 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 41ms; Time for processing: 0h 0m 8s 706ms; align ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/pref_step1 ./mmseqs_output/tmp/5351426679731834765/aln_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 10966 type: Aminoacid; Target database size: 10966 type: Aminoacid; Calculation of alignments; [=================================================================] 10.97K 9s 362ms; Time for merging to aln_step1: 0h 0m 0s 91ms; 128470 alignments calculated; 17027 sequence pairs passed the thresholds (0.132537 of overall calculated); 1.552708 hits per query sequence; Time for processing: 0h 0m 9s 872ms; clust ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/aln_step1 ./mmseqs_output/tmp/5351426679731834765/clu_step1 --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Connected Component; [=================================================================] 10.97K 0s 3ms; Sort entries; Find missing connections; Found 475 new connections.; Reconstruct ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:26466,extend,extend,26466,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['extend'],['extend']
Modifiability,"s 23ms; [============================================================> ] 92.44% 221 eta 0s; 20.598031 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 760ms; align tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/pref_step1 tmp//538598962955004214/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 239 type: Aminoacid; Target database size: 239 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 239 0s 34ms; Time for merging to aln_step1: 0h 0m 0s 6ms; 308 alignments calculated; 274 sequence pairs passed the thresholds (0.889610 of overall calculated); 1.146443 hits per query sequence; Time for processing: 0h 0m 0s 70ms; clust tmp//538598962955004214/input_step1 tmp//538598962955004214/aln_step1 tmp//538598962955004214/clu_step1 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 239 0s 4ms; Sort entries; Find missing connections; Found 9 new connections.; Reconstruct initial order; [===========================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:17575,extend,extend,17575,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['extend'],['extend']
Modifiability,"s 342ms. 0.958336 k-mers per position; 27663 DB matches per sequence; 7 overflows; 0 queries produce too much hits (truncated result); 100 sequences passed prefiltering per query sequence; 63 median result list length; 205 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 481ms; Time for processing: 0h 2m 41s 423ms; align tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 tmp/2226585588535541735/search_tmp/11167723337111805049/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 882920 type: Nucleotide; Target database size: 311921 type: Nucleotide; Calculation of alignments; [=================================================================] 882.92K 5m 58s 443ms; Time for merging to aln: 0h 0m 0s 462ms. 88720927 alignments calculated.; 46477238 sequence pairs passed the thresholds (0.523859 of overall calculated).; 52.640373 hits per query sequence.; Time for processing: 0h 6m 3s 620ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 272ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/input_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/aln_merge -v 3 . Time fo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339:8917,extend,extend,8917,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339,1,['extend'],['extend']
Modifiability,"s produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 2 median result list length; 2 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 8s 1ms; align tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 tmp/9586069750715556969/search_tmp/1133007989511978496/aln --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 4 type: Nucleotide; Target database size: 2 type: Nucleotide; Calculation of alignments; [=================================================================] 4 0s 0ms; Time for merging to aln: 0h 0m 0s 0ms; 4 alignments calculated; 4 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 17ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/input_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; offsetalignment tmp/9586069",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:9346,extend,extend,9346,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['extend'],['extend']
Modifiability,s too many hits. Results might be truncated; > Sequence 12971 produces too many hits. Results might be truncated; > ; > 38654 k-mers per position.; > 57944556 DB matches per sequence.; > 8775 Overflows.; > 1852622 sequences passed prefiltering per query sequence.; > Median result list size: 1612533; > 0 sequences with 0 size result lists.; > ; > Time for prefiltering scores calculation: 0h 56m 42s 147ms; > Time for merging files: 0h 17m 3s 113ms; > Time for processing: 1h 16m 55s 652ms; > Program call:; > align tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 tmp/18071041534032520912/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 17702628 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 15 -v 3 ; > ; > MMseqs Version: 	7ca117893675cdca309e2c9dfc444bbc7462e858; > Sub Matrix 	blosum62.out; > Add backtrace 	true; > Alignment mode 	2; > E-value threshold 	0.1; > Seq. Id Threshold 	0; > Seq. Id. Mode 	0; > Alternative alignments 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Max. sequence length 	65535; > Max. results per query 	17702628; > Compositional bias 	1; > Realign hit 	true; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id.	true; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	11; > Gap extension cost 	1; > Threads 	15; > Verbosity 	3; > ; > Init data structures...; > Compute score only.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength: 65535; > KmerSize: 7; > CompBiasCorr: 1; > AlphabetSize: 21; > Masked: 1; > Spaced: 1; > KmerScore: 81; > SequenceType: 0; > Headers1: 1; > Headers2: 0; > ScoreMatrix: blo,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:7290,extend,extend,7290,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,1,['extend'],['extend']
Modifiability,"s with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 582ms; swapdb tmp//7897776346521331899/seq_wrong_assigned_pref tmp//7897776346521331899/seq_wrong_assigned_pref_swaped --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 2 0s 2ms; Computing offsets.; [=================================================================] 100.00% 2 0s 4ms. Reading results.; [=================================================================] 100.00% 2 0s 3ms. Output database: tmp//7897776346521331899/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00% 1 eta -. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 110ms; 47 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 126 type: Aminoacid; Target database size: 2 type: Aminoacid; Calculation of alignments; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 7ms; filterdb tmp//7897776346521331899/seq_wrong_assigned_pref_swaped_aln tmp//7897776346521331899/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 16 --compressed 0 -v 3. Filtering using regular expression; mergedbs tmp//7897776346521331899/seq_seeds.merged tmp//7897776346521331899/clu_accepted_plus_wrong tmp//7897776346521331899/clu_accepted tmp//7897776346521331899/seq_wrong_assigned_pref_swaped_aln_ocol --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//7897776346521331899/clu_accepted_plus_wrong; [=================================================================] 100.00% 126 0s 2ms; Time for merging to clu_accepted_plus_wrong:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:30306,extend,extend,30306,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['extend'],['extend']
Modifiability,"s; Time for processing: 0h 0m 0s 603ms; align tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_filter2 tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 5 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 24 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 10913 type: Nucleotide; Target database size: 10913 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 10.91K 0s 56ms ; Time for merging to aln: 0h 0m 0s 218ms; 15033 alignments calculated; 12475 sequence pairs passed the thresholds (0.829841 of overall calculated); 1.143132 hits per query sequence; Time for processing: 0h 0m 0s 663ms; clust tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/aln tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Connected Component;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:11221,extend,extend,11221,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['extend'],['extend']
Modifiability,"se; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-pe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:4051,extend,extend,4051,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['extend'],['extend']
Modifiability,"seqs createdb seq.fa db/dbclust; mmseqs linclust db/dbclust clust_result tmp --max-seq-len 30000000; ``` ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=================================================================] 140.20K 2m 37s 793ms; Time for merging to pref_rescore1: 0h 0m 0s 35ms; Time for processing: 0h 2m 48s 60ms; clust db/d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:1155,extend,extendable,1155,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['extend'],['extendable']
Modifiability,sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set cluster settings automatically to s=1; Set cluster mode GREEDY MEM.; Set cluster iterations to 1; Program call:; linclust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3 --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 0 --pca 1 --pcb 1.5 --score-bias 0 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort res,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:5016,extend,extendable,5016,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['extend'],['extendable']
Modifiability,"shangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Not enough memory to process at once need to split; [=================================================================] 773.45M 1h 49m 44s 916ms; Process file into 1 parts; Generate k-mers list for 1 split; [=================================================================] 773.45M 3m 43s 762ms. Adjusted k-mer length 18; Sort kmer 0h 0m 8s 851ms; Sort by rep. sequence 0h 0m 0s 535ms; Merge splits ... Time for fill: 0h 0m 8s 279ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 2h 8m 37s 699ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref /hwfssz1/ST_DIVERSITY/P18",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:10375,extend,extendable,10375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['extend'],['extendable']
Modifiability,"sk lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:1696,extend,extendable,1696,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['extend'],['extendable']
Modifiability,"so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/team.c:124; #5 0x00002aefd1060dc5 in start_thread (arg=0x2aefd1c45700) at pthread_create.c:308",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:35439,config,config,35439,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['config'],['config']
Modifiability,"split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 9.50M 1m 30s 166ms; Time for merging to pref_rescore1: 0h 0m 3s 976ms; Time for pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:5261,extend,extendable,5261,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['extend'],['extendable']
Modifiability,"ssed 0 -v 3 . Remove tmp/16479300059278292880/aln_ungapped ids from tmp/16479300059278292880/pref; [=================================================================] 1.60M 1s 175ms; Time for merging to pref_subtract: 0h 0m 1s 400ms; Time for processing: 0h 0m 5s 506ms; align tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/pref_subtract tmp/16479300059278292880/aln_gapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 112 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1604546 type: Nucleotide; Target database size: 802273 type: Nucleotide; Calculation of alignments; [=================================================================] 1.60M 22m 53s 435ms; Time for merging to aln_gapped: 0h 0m 0s 903ms; 70826259 alignments calculated; 3445894 sequence pairs passed the thresholds (0.048653 of overall calculated); 2.147582 hits per query sequence; Time for processing: 0h 23m 4s 596ms; concatdbs tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/aln_gapped tmp/16479300059278292880/aln --preserve-keys --take-larger-entry --threads 112 --compressed 0 -v 3 . [=================================================================] 1.60M 0s 217ms; [=================================================================] 1.60M 0s 385ms; Time for merging to aln: 0h 0m 1s 623ms; Time for processing: 0h 0m 3s 354ms; offset",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:15540,extend,extend,15540,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['extend'],['extend']
Modifiability,"ssign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:2790,extend,extend,2790,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['extend'],['extend']
Modifiability,"st result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; Thanks in advance,; Yehor. ## MMseqs Output; search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 --start-sens 1 --sens-steps 3 -s 12 --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	inf; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	20; Gap extension cost 	3; Zdrop 	40; Threads 	28; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:VTML40.out,aa:VTML40.out; Sensitivity 	12; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:2219,extend,extend,2219,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['extend'],['extend']
Modifiability,"step 1 of 1. k-mer similarity threshold: 82; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1303062545; Target db start 1 to 349750; [=================================================================] 1.30B 86h 42m 2s 376ms. 0.785483 k-mers per position; 240012 DB matches per sequence; 5731753 overflows; 0 queries produce too many hits (truncated result); 269 sequences passed prefiltering per query sequence; 300 median result list length; 134238 sequences with 0 size result lists; Time for merging to pref: 0h 30m 15s 580ms; Time for processing: 88h 9m 11s 291ms; swapresults repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/q_orfs_aa databases/eggnog repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref_swapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --split-memory-limit 300G --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --threads 56 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 1.30B 2h 8m 45s 98ms. Reading results.; [=================================================================] 1.30B 5h 47m 7s 401ms. Output database: repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref_swapped; [=================================================================] 26.35K 11m 16s 126ms. Time for merging to pref_swapped_0: 0h 40m 12s 625ms. Reading results.; [=================================================================] 1.30B 5h 40m 43s 346ms. Output database: repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref_swapped; [=================================================================] 32.57K 11m 9s 696ms. Time for merging to pref_swapped_1: 0h 38m 42s 418ms. Reading results.; [=================================================================] 1.30B 5h 39m 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/594:19579,extend,extend,19579,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594,1,['extend'],['extend']
Modifiability,"sysv/linux/x86_64/clone3.S:81. Thread 11 (Thread 0x7f6ed85ef640 (LWP 135831) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 10 (Thread 0x7f6ed8df0640 (LWP 135830) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 9 (Thread 0x7f6ed95f1640 (LWP 135829) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_tea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:48898,config,config,48898,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"sysv/linux/x86_64/clone3.S:81. Thread 12 (Thread 0x7f6ecbfa4640 (LWP 135832) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 11 (Thread 0x7f6ed85ef640 (LWP 135831) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 10 (Thread 0x7f6ed8df0640 (LWP 135830) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:48057,config,config,48057,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"sysv/linux/x86_64/clone3.S:81. Thread 13 (Thread 0x7f6ecb7a3640 (LWP 135833) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 12 (Thread 0x7f6ecbfa4640 (LWP 135832) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 11 (Thread 0x7f6ed85ef640 (LWP 135831) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:47216,config,config,47216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"sysv/linux/x86_64/clone3.S:81. Thread 14 (Thread 0x7f6ecafa2640 (LWP 135834) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 13 (Thread 0x7f6ecb7a3640 (LWP 135833) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 12 (Thread 0x7f6ecbfa4640 (LWP 135832) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:46375,config,config,46375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"sysv/linux/x86_64/clone3.S:81. Thread 15 (Thread 0x7f6e9424d640 (LWP 135835) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 14 (Thread 0x7f6ecafa2640 (LWP 135834) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 13 (Thread 0x7f6ecb7a3640 (LWP 135833) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:45534,config,config,45534,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"sysv/linux/x86_64/clone3.S:81. Thread 16 (Thread 0x7f6e9324b640 (LWP 135836) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 15 (Thread 0x7f6e9424d640 (LWP 135835) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 14 (Thread 0x7f6ecafa2640 (LWP 135834) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:44693,config,config,44693,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"sysv/linux/x86_64/clone3.S:81. Thread 17 (Thread 0x7f6e92a4a640 (LWP 135837) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 16 (Thread 0x7f6e9324b640 (LWP 135836) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 15 (Thread 0x7f6e9424d640 (LWP 135835) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:43852,config,config,43852,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"sysv/linux/x86_64/clone3.S:81. Thread 18 (Thread 0x7f6e91a48640 (LWP 135838) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 17 (Thread 0x7f6e92a4a640 (LWP 135837) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 16 (Thread 0x7f6e9324b640 (LWP 135836) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:43011,config,config,43011,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"sysv/linux/x86_64/clone3.S:81. Thread 19 (Thread 0x7f6e8ca44640 (LWP 135839) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 18 (Thread 0x7f6e91a48640 (LWP 135838) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 17 (Thread 0x7f6e92a4a640 (LWP 135837) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:42170,config,config,42170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"sysv/linux/x86_64/clone3.S:81. Thread 20 (Thread 0x7f6e8c243640 (LWP 135840) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 19 (Thread 0x7f6e8ca44640 (LWP 135839) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 18 (Thread 0x7f6e91a48640 (LWP 135838) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:41329,config,config,41329,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"sysv/linux/x86_64/clone3.S:81. Thread 21 (Thread 0x7f6e8ba42640 (LWP 135841) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 20 (Thread 0x7f6e8c243640 (LWP 135840) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 19 (Thread 0x7f6e8ca44640 (LWP 135839) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:40488,config,config,40488,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"sysv/linux/x86_64/clone3.S:81. Thread 22 (Thread 0x7f6e84a37640 (LWP 135842) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 21 (Thread 0x7f6e8ba42640 (LWP 135841) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 20 (Thread 0x7f6e8c243640 (LWP 135840) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:39647,config,config,39647,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"sysv/linux/x86_64/clone3.S:81. Thread 23 (Thread 0x7f6e7dffe640 (LWP 135843) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 22 (Thread 0x7f6e84a37640 (LWP 135842) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 21 (Thread 0x7f6e8ba42640 (LWP 135841) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:38806,config,config,38806,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"sysv/linux/x86_64/clone3.S:81. Thread 24 (Thread 0x7f6e7d7fd640 (LWP 135844) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 23 (Thread 0x7f6e7dffe640 (LWP 135843) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 22 (Thread 0x7f6e84a37640 (LWP 135842) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:37965,config,config,37965,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"sysv/linux/x86_64/clone3.S:81. Thread 25 (Thread 0x7f6e7cffc640 (LWP 135845) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 24 (Thread 0x7f6e7d7fd640 (LWP 135844) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 23 (Thread 0x7f6e7dffe640 (LWP 135843) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:37124,config,config,37124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"sysv/linux/x86_64/clone3.S:81. Thread 26 (Thread 0x7f6e75ffe640 (LWP 135846) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 25 (Thread 0x7f6e7cffc640 (LWP 135845) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 24 (Thread 0x7f6e7d7fd640 (LWP 135844) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:36283,config,config,36283,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"sysv/linux/x86_64/clone3.S:81. Thread 30 (Thread 0x7f6e6d7fd640 (LWP 135850) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 29 (Thread 0x7f6e6dffe640 (LWP 135849) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 28 (Thread 0x7f6e74ffc640 (LWP 135848) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:32998,config,config,32998,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"sysv/linux/x86_64/clone3.S:81. Thread 31 (Thread 0x7f6e6cffc640 (LWP 135851) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 30 (Thread 0x7f6e6d7fd640 (LWP 135850) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 29 (Thread 0x7f6e6dffe640 (LWP 135849) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_te",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:32157,config,config,32157,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"t 1 to 276; [================================================================] =276 0s 28ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 5ms; Time for processing: 0h 0m 1s 852ms; align tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/pref_step0 tmpfiles//13298481167543164943/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 276 0s 39ms; Time for merging to aln_step0: 0h 0m 0s 2ms. 413 alignments calculated.; 406 sequence pairs passed the thresholds (0.983051 of overall calculated).; 1.471014 hits per query sequence.; Time for processing: 0h 0m 0s 82ms; clust tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/aln_step0 tmpfiles//13298481167543164943/clu_step0 --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================] 276 0s 6ms; Sort entries; Find missing connections; Found 0 new connections.; Reconstruct initial order; [======================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:13389,extend,extend,13389,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['extend'],['extend']
Modifiability,"t 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:13,nucl:5; k-mers per sequence 	21; Spaced k-mers 	1; Spaced k-mer pattern; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 63437 Segmentation fault $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:4060,extend,extendable,4060,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,1,['extend'],['extendable']
Modifiability,"t be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; =================================================================================================== 292 Mio. sequences processed; =============; Time for merging to input_h: 0h 0m 40s 64ms; Time for merging to input: 0h 0m 40s 130ms; Database type: Aminoacid; Time for processing: 0h 12m 9s 179ms; Tmp /export/tmp/MERC/4233864688410091672/clu_tmp folder does not exist or is not a directory.; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:1736,extend,extendable,1736,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,1,['extend'],['extendable']
Modifiability,"t is added to the alignment score [0.000]; --gap-open TWIN Gap open cost [aa:11,nucl:5]; --gap-extend TWIN Gap extension cost [aa:1,nucl:2]; --zdrop INT Maximal allowed difference between score values before alignment is truncated (nucleotide alignment only) [40]; clust:; --cluster-mode INT 0: Set-Cover (greedy); 1: Connected component (BLASTclust); 2,3: Greedy clustering by sequence length (CDHIT) [0]; --max-iterations INT Maximum depth of breadth first search in connected component clustering [1000]; --similarity-type INT Type of score used for clustering. 1: alignment score 2: sequence identity [2]; kmermatcher:; --kmer-per-seq INT k-mers per sequence [21]; --kmer-per-seq-scale TWIN Scale k-mer per sequence based on sequence length as kmer-per-seq val + scale x seqlen [aa:0.000,nucl:0.200]; --adjust-kmer-len BOOL Adjust k-mer length based on specificity (only for nucleotides) [0]; --hash-shift INT Shift k-mer hash initialization [67]; --include-only-extendable BOOL Include only extendable [0]; --ignore-multi-kmer BOOL Skip k-mers occurring multiple times (>=2) [0]; profile:; --pca Pseudo count admixture strength []; --pcb Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) []; misc:; --rescore-mode INT Rescore diagonals with:; 0: Hamming distance; 1: local alignment (score only); 2: local alignment; 3: global alignment; 4: longest alignment fulfilling window quality criterion [0]; --dbtype INT Database type 0: auto, 1: amino acid 2: nucleotides [0]; --shuffle BOOL Shuffle input database [1]; --createdb-mode INT Createdb mode 0: copy data, 1: soft link data and write new index (works only with single line fasta/q) [1]; --id-offset INT Numeric ids in index file are offset by this value [0]; common:; --threads INT Number of CPU-cores used (all by default) [10]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; --sub-mat TWIN Substitution matrix file [aa:blosum62.out,nucl:nucleotide.ou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682:4901,extend,extendable,4901,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682,2,['extend'],['extendable']
Modifiability,"t it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable false │; Skip repeating k-mers false │; Threads 64 │; Compressed 0 │; Verbosity 3; ```. ## Your Environment; I installed mmseqs using `mamba` (conda).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/477:1429,extend,extendable,1429,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477,2,['extend'],['extendable']
Modifiability,"ta_file output_path tmp_folder --min-seq-id 0.5. ## MMseqs Output; easy-linclust roman/seqs/lectins_seq.fasta roman/test/lectins_seq roman/test/tmp --min-seq-id 0.5. MMseqs Version: 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 128; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:1267,extend,extendable,1267,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['extend'],['extendable']
Modifiability,"tch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately -v 3 --subdb-mode 1. Time for merging to toBeClusteredSeparately: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 114ms; ===================================================; ===== Cluster separately the alone sequences ======; ===================================================; kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. Database size: 6 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 6 0s 1ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:7855,extend,extendable,7855,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['extend'],['extendable']
Modifiability,"terations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Force restart using the latest tmp 	false; Remove Temporary Files 	false; LCA Ranks 	kingdom:phylum:class:order:family:genus:species; Blacklisted Taxa 	12908,28384; LCA Mode 	3; Match sequences by their ID 	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; search clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/first tmp_part-14/8093924424180559474/tmp_hsp1 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3 --seed-sub-mat VTML80.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seqs 200 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --spaced-kmer-mode 1 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --mask-profile 1 --e-profile 0.001 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --omit-consensus 0 --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --chain-alignments 0 --search-type 0 --num-iterations 1 --start-sens 4 --sens-steps 1 --slice-search 0 --strand 1 --disk-space-limit 0 --force-reuse 0 --remove-tmp-files 0. Program call:; prefilter clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-ba",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:4094,extend,extend,4094,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,1,['extend'],['extend']
Modifiability,"text:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.3; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:2340,extend,extendable,2340,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['extend'],['extendable']
Modifiability,"tide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 280.71K 3m 53s 720ms; Time for merging to aln: 0h 0m 0s 84ms; 356937745 alignments calculated; 350790208 sequence pairs passed the thresholds (0.982777 of overall calculated); 1249.635620 hits per query sequence; Time for processing: 0h 3m 57s 914ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref -v 3 . Time for processing: 0h 0m 0s 432ms; swapresults /tmp/tmp_MMSeq2/17595625152138277869/search_tmp/17414849138893322762/target_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1.79769e+308 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 280.71K 0s 514ms. Reading results.; [=================================================================] 280.71K 1s 567ms. Output database: /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap; [=================================================================] 69.22K 3s 841ms. Time for merging to aln_swap: 0h 0m 0s 23ms; Time for processing: 0h 0m 12s 313ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln -v 3 . Time for processing: 0h 0m 11s 128ms; mvdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 176ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:10641,extend,extend,10641,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['extend'],['extend']
Modifiability,"ting docker-compose_mmseqs-web-redis_1 ... ; Creating docker-compose_mmseqs-web-redis_1 ... done; Creating docker-compose_mmseqs-web-api_1 ... ; Creating docker-compose_mmseqs-web-api_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... ; Creating docker-compose_mmseqs-web-worker_1 ... done; Creating docker-compose_mmseqs-web-webserver_1 ... done; Attaching to docker-compose_mmseqs-web-redis_1, docker-compose_mmseqs-web-api_1, docker-compose_mmseqs-web-worker_1, docker-compose_mmseqs-web-webserver_1; mmseqs-web-api_1 | 2022/09/22 16:09:10 MMseqs2 Webserver; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Redis version=7.0.4, bits=64, commit=00000000, modified=0, pid=1, just started; mmseqs-web-redis_1 | 1:C 22 Sep 2022 16:09:10.002 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.002 * monotonic clock: POSIX clock_gettime; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 * Running mode=standalone, port=6379.; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 # Server initialized; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.; mmseqs-web-redis_1 | 1:M 22 Sep 2022 16:09:10.003 * Ready to accept connections; mmseqs-web-worker_1 | 2022/09/22 16:09:10 MMseqs2 worker; mmseqs-web-worker_1 | createdb /opt/mmseqs-web/databases/pdb_rna_sequence.fasta /opt/mmseqs-web/databases/pdb_rna_sequence ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | MMseqs Version: 	e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ; mmseqs-web-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:9579,config,config,9579,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['config'],['config']
Modifiability,"ting k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s 620ms; Time for processing: 5h 43m 57s 88ms; rescorediagonal inDB inDB tmp/18375844090983922724/pref tmp/18375844090983922724/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 ; -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 160 --compressed 0 -v 3. [=================================================================] 100.00% 2.83B 1h 11m 50s 841ms. [================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:2481,extend,extendable,2481,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311,1,['extend'],['extendable']
Modifiability,"tmp/2226585588535541735/search_tmp/11167723337111805049/aln tmp/2226585588535541735/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 26ms; Writing results to: tmp/2226585588535541735/result; [=================================================================] 419.27K 2s 43ms. Time for merging to result: 0h 0m 0s 264ms; Time for processing: 0h 0m 6s 8ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs_aa . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs_aa . Time for processing: 0h 0m 0s 0ms; convertalis tmp/2226585588535541735/query tmp/2226585588535541735/target tmp/2226585588535541735/result output.tsv --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,evalue,pident,tstart,tend,qlen,alnlen,qcov --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 64 --compressed 0 -v 3 . [=================================================================] 419.27K 3s 600ms; Time for merging to output.tsv: 0h 0m 3s 849ms; Time for processing: 0h 0m 12s 294ms; Removing temporary files; rmdb tmp/2226585588535541735/result . Time for processing: 0h 0m 2s 15ms; rmdb tmp/2226585588535541735/target . Time for processing: 0h 0m 0s 486ms; rmdb tmp/2226585588535541735/target_h . Time for processing: 0h 0m 0s 1ms; rmdb tmp/2226585588535541735/query . Time for processing: 0h 0m 0s 102ms; rmdb tmp/2226585588535541735/query_h . Time for processing: 0h 0m 0s 5ms; ```. ## Your Environment. I'm using the `11.e1a1c` conda release on Linux;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339:11443,extend,extend,11443,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339,1,['extend'],['extend']
Modifiability,"tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:6116,extend,extendable,6116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['extend'],['extendable']
Modifiability,"tmp97/17949317426677965256/aln_ungapped ids from tmp97/17949317426677965256/pref; [=================================================================] 100.00% 39.65K 0s 144ms; Time for merging to pref_subtract: 0h 0m 0s 168ms; Time for processing: 0h 0m 0s 503ms; align tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/pref_subtract tmp97/17949317426677965256/aln_gapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 20 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 39650 type: Nucleotide; Target database size: 19825 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 39.65K 11s 920ms; Time for merging to aln_gapped: 0h 1m 40s 131ms; 2105218 alignments calculated; 1620 sequence pairs passed the thresholds (0.000770 of overall calculated); 0.040858 hits per query sequence; Time for processing: 0h 5m 12s 297ms; concatdbs tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/aln_gapped tmp97/17949317426677965256/aln --preserve-keys --take-larger-entry --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 39.65K 0s 67ms; [=================================================================] 100.00% 39.65K 0s 98ms; Time for merging to aln: 0h 0m 0s 389ms; Time for processing: 0h 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:16145,extend,extend,16145,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['extend'],['extend']
Modifiability,"ty to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:2759,extend,extendable,2759,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['extend'],['extendable']
Modifiability,"uDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 ; --split-memory-limit 500; linclust inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 --split-memory-limit 500; MMseqs Version: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 16; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1e-10; Seq. id. threshold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:1716,extend,extendable,1716,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['extend'],['extendable']
Modifiability,"umn for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 8ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms ] 16.00% 45 eta 0s; Time for processing: 0h 0m 0s 37ms; align tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore2 tmp//10798751672030653963/linclust/5052420726377277994/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 64ms; Time for merging to aln: 0h 0m 0s 5ms; 276 alignments calculated; 276 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 80ms; clust tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/aln tmp//10798751672030653963/linclust/5052420726377277994/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 276 0s 8ms; Sort entries; Find missing connections; Found 0 new connections.; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:8693,extend,extend,8693,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['extend'],['extend']
Modifiability,"us failed run of `mmseq map`, and then this `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` error did not occur. . In general, I keep getting `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` at various steps of the `mmseqs map` run (eg., at the end of `translatenucs`). The error is not very informative on what's going wrong, since I am providing the required input and output parameters. ## conda env:. ```; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## conda info. ```; active environment : plass; active env location : /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass; shell level : 1; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.5.11; conda-build version : 3.11.0; python version : 3.6.5.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://repo.anaconda.com/pkgs/pro/linux-64; https://repo.anaconda.com/pkgs/pro/noarch; https://conda.anaconda.org/leylabmpi/linux-64; https://conda.anaconda.o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:5954,config,config,5954,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['config'],['config']
Modifiability,"ust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB tmp/10260956542131223380/clu_redundancy tmp/10260956542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:3973,extend,extend,3973,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['extend'],['extend']
Modifiability,"very time if input `.fasta` file contains short sequence (this also happens if .fasta file contains more than one sequence). UniRef database is processed every time without issue, crash happens only on envdb processing. ```; align results_700_only_456_fasta_700_5/prof_res ../db_sources/colabfold_envdb_202108_db.idx results_700_only_456_fasta_700_5/tmp/17071544472219224293/pref_0 results_700_only_456_fasta_700_5/tmp/17071544472219224293/aln_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Index version: 16; Generated by: fcf52600801a73e95fd74068e1bb1afb437d719d; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 209335862 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Segmentation fault (core dumped); Error: Alignment died; Traceback (most recent call last):; File ""/home/x/genomic/alphafold2/venv38alphafold2/bin/colabfold_search"", line 8, in <module>; sys.exit(main()); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 180, in main; mmseqs_search(; File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 100, in mmseqs_search; run_mmseqs(mmseqs, [""search"", base.joinpath(""prof_res""), dbbase.joinpath(metagenomic_db), base.joinpath(""res_env""), base.join",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/538:1220,extend,extend,1220,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538,1,['extend'],['extend']
Modifiability,"x/sysv/linux/x86_64/clone3.S:81. Thread 3 (Thread 0x7f6ec97fe640 (LWP 135795) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 2 (Thread 0x7f6ec9fff640 (LWP 135794) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7f706900f200 (LWP 135793) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_tea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:55618,config,config,55618,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"x/sysv/linux/x86_64/clone3.S:81. Thread 4 (Thread 0x7f6ec8ffd640 (LWP 135796) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 3 (Thread 0x7f6ec97fe640 (LWP 135795) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 2 (Thread 0x7f6ec9fff640 (LWP 135794) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_tea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:54778,config,config,54778,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"x/sysv/linux/x86_64/clone3.S:81. Thread 5 (Thread 0x7f6e8b23b640 (LWP 135825) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 4 (Thread 0x7f6ec8ffd640 (LWP 135796) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 3 (Thread 0x7f6ec97fe640 (LWP 135795) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_tea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:53938,config,config,53938,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"x/sysv/linux/x86_64/clone3.S:81. Thread 6 (Thread 0x7f6e93a4c640 (LWP 135826) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 5 (Thread 0x7f6e8b23b640 (LWP 135825) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 4 (Thread 0x7f6ec8ffd640 (LWP 135796) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_tea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:53098,config,config,53098,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"x/sysv/linux/x86_64/clone3.S:81. Thread 7 (Thread 0x7f6e91247640 (LWP 135827) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 6 (Thread 0x7f6e93a4c640 (LWP 135826) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 5 (Thread 0x7f6e8b23b640 (LWP 135825) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_tea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:52258,config,config,52258,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"x/sysv/linux/x86_64/clone3.S:81. Thread 8 (Thread 0x7f6e92249640 (LWP 135828) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 7 (Thread 0x7f6e91247640 (LWP 135827) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 6 (Thread 0x7f6e93a4c640 (LWP 135826) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_tea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:51418,config,config,51418,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"x/sysv/linux/x86_64/clone3.S:81. Thread 9 (Thread 0x7f6ed95f1640 (LWP 135829) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 8 (Thread 0x7f6e92249640 (LWP 135828) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimised out>) at ../../../libgomp/team.c:129; #6 0x00007f7068c94ac3 in start_thread (arg=<optimised out>) at ./nptl/pthread_create.c:442; #7 0x00007f7068d26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 7 (Thread 0x7f6e91247640 (LWP 135827) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_tea",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:50578,config,config,50578,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['config'],['config']
Modifiability,"x86_64--freebsd12.2.; (lldb) bt; * thread #1, name = 'mmseqs'; * frame #0: 0x000000080086f68c libthr.so.3`___lldb_unnamed_symbol190$$libthr.so.3 + 92; frame #1: 0x000000080086ccab libthr.so.3`___lldb_unnamed_symbol159$$libthr.so.3 + 491; frame #2: 0x000000080092ea3e libomp.so`___lldb_unnamed_symbol30$$libomp.so + 302; frame #3: 0x000000080096faaa libomp.so`___lldb_unnamed_symbol400$$libomp.so + 698; frame #4: 0x000000080096dd5c libomp.so`___lldb_unnamed_symbol392$$libomp.so + 604; frame #5: 0x000000080096aca7 libomp.so`___lldb_unnamed_symbol384$$libomp.so + 1095; frame #6: 0x0000000800966434 libomp.so`__kmpc_barrier + 308; frame #7: 0x0000000000408496 mmseqs`ips4o::OpenMPThreadPool::Sync::barrier(this=0x0000000802849038) const at thread_pool.hpp:63:1; frame #8: 0x0000000000436525 mmseqs`std::__1::pair<int, bool> ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::partition<true>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, bucket_start=0x0000000802842000, shared=0x0000000802842000, my_id=0, num_threads=32) at partitioning.hpp:109:36; frame #9: 0x0000000000435f9b mmseqs`void ips4o::detail::Sorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::parallelPrimary<ips4o::SequentialSorter<ips4o::ExtendedConfig<std::__1::__wrap_iter<ips4o::detail::ParallelTask*>, std::__1::greater<void>, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >&>(this=0x00007fffffffb5a8, begin=0x0000000802a7fe80, end=0x0000000802ba0f70, shared=0x0000000802842000, num_threads=32, task_sorter=0x00007fffffffbbb8) at parallel.hpp:114:26; frame #10: 0x0000000000435e27 mmseqs`ips4o::ParallelS",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:1478,Extend,ExtendedConfig,1478,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769,2,"['Config', 'Extend']","['Config', 'ExtendedConfig']"
Modifiability,"xtendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --in",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:3033,extend,extendable,3033,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['extend'],['extendable']
Modifiability,"zdrop 40 --threads 1 --compressed 0 -v 3 . Compute score only; Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; Calculation of alignments; [=================================================================] 2 0s 0ms; Time for merging to aln_0: 0h 0m 0s 0ms; 0 alignments calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:13954,extend,extend,13954,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['extend'],['extend']
Performance,"	/tmp//589280515582180421/linclust/13903844144087712329/order_redundancy; Beats first 	false; Mapping file 	; Threads 	24; Verbosity 	3; trim the results to one column	false; Extract n lines 	0; Numerical comparison operator 	; Numerical comparison value 	0; Sort entries 	0; Include identical Seq. Id. 	false; join to DB 	. Filtering with a filter files.; Time for merging files: 0 h 0 m 0 s; Rescore diagonals.; Program call:; /tmp//589280515582180421/linclust/13903844144087712329/input_step_redundancy /tmp//589280515582180421/linclust/13903844144087712329/input_step_redundancy /tmp//589280515582180421/linclust/13903844144087712329/pref_filter2 /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore2 --rescore-mode 1 --sub-mat blosum62.out --filter-hits -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Rescore mode 	1; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	true; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; Threads 	1; Verbosity 	3. Query file: /tmp//589280515582180421/linclust/13903844144087712329/input_step_redundancy; Target file: /tmp//589280515582180421/linclust/13903844144087712329/input_step_redundancy; Prefilter database: /tmp//589280515582180421/linclust/13903844144087712329/pref_filter2; Result database: /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore2; Done.; Time for merging files: 0 h 0 m 0 s; Time for diagonal calculation: 0 h 0 m 0s; Program call:; /tmp//589280515582180421/linclust/13903844144087712329/input_step_redundancy /tmp//589280515582180421/linclust/13903844144087712329/input_step_redundancy /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore2 /tmp//589280515582180421/linclust/13903844144087712329/aln --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:9080,perform,performs,9080,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['perform'],['performs']
Performance,"	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter queryDB sequenceDB tmp/837003320692135749/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 5.7 . Query database size: 1 type: Aminoacid; Target split mode. Searching through 5 splits; Estimated memory consumption: 297G; Target database size: 358983966 type: Aminoacid; Process prefiltering step 1 of 5. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; tmp/837003320692135749/blastp.sh: line 99: 35385 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died. ## Steps to Reproduce (for bugs); $ mmseqs search queryDB sequenceDB resultDB tmp. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Doing a seach of one sequence in the queryDB aginst a larger DB of amino acid sequences. . ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/817:2843,load,load-mode,2843,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/817,1,['load'],['load-mode']
Performance,"	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	1; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. I don't know if the error is right at the start using _plass_ int this context or with the _map_ command. Could you let me know how to proceed to use paired fastq data with the 'map pipeline'? ; Thanks for your help!. ## Context. After clustering all the proteins found in several samples I am trying to estimate the relative abundance of proteins in a non-redundant database considering the paired read files I have. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; using MMseqs2 Version: 113e3212c137d026e297c7540e1fcd039f6812b1 or 12 in a cluster ; and the plass-linux-sse41.tar.gz executable for plass. ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:3612,perform,performed,3612,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,1,['perform'],['performed']
Performance," 	0.001; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	64; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	1000000; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path 	/scratch/saladi1/22776241/; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Force restart using the latest tmp 	false; Remove Temporary Files 	true. prefilter euk_screen/screenDB uref_euk85_rep/uref_euk85_rep mmtemp/150669805093381426/pref",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/193:2830,perform,performs,2830,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193,1,['perform'],['performs']
Performance," 	1,2,3; Translation table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false; LCA ranks 	kingdom:phylum:class:order:family:genus:species; Blacklisted taxa 	12908,28384; Show taxon lineage 	false; LCA mode 	3; Taxonomy output mode 	0; Match sequences by their id. 	false; Remove temporary files 	false; MPI runner. search clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/first tmp_part-14/17957680840564044329/tmp_hsp1 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3 --seed-sub-mat VTML80.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --spaced-kmer-mode 1 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --mask-profile 1 --e-profile 0.001 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --omit-consensus 0 --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --chain-alignments 0 --merge-query 1 --search-type 0 --num-iterations 1 --start-sens 4 --sens",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:3274,load,load-mode,3274,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,1,['load'],['load-mode']
Performance," 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loading nodes file ... Done, got 6986 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```. the job was submitted with teh following batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/IMG_VR_2022_12_19_7.1/IMG_tax_db; export OTU_dir=/home/bbrow6/vaginal_virome/Run_021723/identified_viral_sequences/OTUs/geNomad/genomad_output_1000bps/clustered_spades_cross_assembly_contigs_gt1000bps_summary/. source activate mmseqs2; module load OpenMPI. mmseqs easy-taxonomy $OTU_dir/clustered_spades_cross_assembly_contigs_gt1000bps_virus.fna $DBs/IMG_tax_db vag_taxonomy_results_IMG tmp -e 1e-5 -s 6 --blacklist """" --tax-lineage 1; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. **Full output and error attached below**. ```tmp/10336174962539687461/taxonomy_tmp/11653652317365833767/tmp_taxonomy/6923600097584969791/taxonomy.sh: line 58: 78000 Segmentation fault (core dumped) ""$MMSEQS"" lca ""${TARGET}"" ""${LCAIN}"" ""${RESULTS}"" ${LCA_PAR}```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **14.7e284**; * Which MMseqs version was used (Statically-compiled, self-co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:2831,load,load,2831,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['load'],['load']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 10 (LWP 7910 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 9 (LWP 7909 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:21010,optimiz,optimized,21010,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 11 (LWP 7911 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 10 (LWP 7910 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:20080,optimiz,optimized,20080,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 12 (LWP 7912 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 11 (LWP 7911 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:19150,optimiz,optimized,19150,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 13 (LWP 7913 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 12 (LWP 7912 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:18220,optimiz,optimized,18220,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 14 (LWP 7914 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 13 (LWP 7913 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:17290,optimiz,optimized,17290,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 15 (LWP 7915 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 14 (LWP 7914 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:16360,optimiz,optimized,16360,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 16 (LWP 7916 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 15 (LWP 7915 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:15430,optimiz,optimized,15430,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 17 (LWP 7917 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 16 (LWP 7916 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:14500,optimiz,optimized,14500,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 18 (LWP 7918 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 17 (LWP 7917 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:13570,optimiz,optimized,13570,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 21 (LWP 7921 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 20 (LWP 7920 ""mmseqs""):; #0 MathUtil::NormalizeTo1 (def_array=0x0, length=20, array=0x7ecabcfc9220) at /home/vsts/work/1/s/src/commons/MathUtil.h:248; #1 PSSMCalculator::computeContextSpecificWeights (this=this@entry=0x7f1ffd7dbc10, matchWeight=0x7ee3e2190040, wg=0x7ee",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:10681,optimiz,optimized,10681,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 22 (LWP 7922 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 21 (LWP 7921 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:9751,optimiz,optimized,9751,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 23 (LWP 7923 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 22 (LWP 7922 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:8821,optimiz,optimized,8821,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 24 (LWP 7924 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 23 (LWP 7923 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:7891,optimiz,optimized,7891,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 25 (LWP 7925 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 24 (LWP 7924 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:6961,optimiz,optimized,6961,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 26 (LWP 7926 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 25 (LWP 7925 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:6031,optimiz,optimized,6031,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 27 (LWP 7927 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 26 (LWP 7926 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:5101,optimiz,optimized,5101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 29 (LWP 7929 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; --Type <RET> for more, q to quit, c to continue without paging--c; #7 0x0000000000964ff3 in clone (). Thread 28 (LWP 7928 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::all",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:3174,optimiz,optimized,3174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 29 (LWP 7929 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:2244,optimiz,optimized,2244,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 31 (LWP 7931 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:1314,optimiz,optimized,1314,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance," (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 473ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 0ms; Time for merging to aln_step0: 0h 0m 0s 3ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 13ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/311905391346286",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:21115,load,load-mode,21115,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['load'],['load-mode']
Performance," --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3. Index version: 16; Generated by: 60b77df37df55c3984870760591facbb361c3939; ScoreMatrix: VTML80.out; Query database size: 19769556 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 19769556; Target db start 1 to 1; [=================================================================] 100.00% 19.77M 1m 24s 356ms. 6.165338 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 14s 786ms; Segmentation fault (core dumped); Error: orf filter prefilter died. ## Your Environment; This is where I'm working right now:. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; Address sizes: 43 bits physical, 48 bits virtual; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 1; Socket(s): 24; NUMA node(s): 1; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6136 CPU @ 3.00GHz; Stepping: 4; CPU MHz: 2999.999; BogoMIPS: 5999.99; Hypervisor vendor: VMware; Virtualization type: full; L1d cache: 768 KiB; L1i cache: 768 KiB; L2 cache: 24 MiB; L3 cache: 594 MiB; NUMA node0 CPU(s): 0-23. Any help would be really appreciated!. EDIT: I believe I might be doing something wrong. If I understand the output correctly:. 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists. means that nothing hit the DB, right?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/669:5604,cache,cache,5604,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669,4,['cache'],['cache']
Performance," --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; --------------------------------------------------------------------------; mpirun was unable to launch the specified application as it could not find an executable:; Executable: mmseqs; Node: slave; while attempting to start process rank 1.; --------------------------------------------------------------------------; 2 total processes failed to start; Error: Alignment step died; Error: linclust died; ```. I performed identical installations of mmseqs on both machines. If I just run `mmseqs cluster /mnt/DB mnt/clu /mnt/tmp` on either machine, then it is able to work, but I would like to get the MPI functionality up if possible! Thank you. . ## Your Environment; I am working in Debian 8 (Jesse), and have compiled MMseqs2 from source with the DHAVE_MPI=1 flag when invoking cmake. Thank you for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:3476,perform,performs,3476,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,2,['perform'],"['performed', 'performs']"
Performance," --split-memory-limit 0"", then the split number is set to 3 but smaller than 4. So mmseqs use entire index, which is too large for my memory (64GB). Thus mmseqs avoid using index, which makes searching step very slow.; ## Steps to Reproduce (for bugs); colabfold_search x.fasta ColabFold/Datas/ --use-env 1 --use-templates 0 MSA_200 ; (colabfold_search execute search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 ). ## MMseqs Output (for bugs). MSA_200/qdb exists and will be overwritten; createdb MSA_200/query.fas MSA_200/qdb --shuffle 0 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Database type 	0; Shuffle input database	false; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 0ms; Time for merging to qdb: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 0ms; search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:1350,load,load-mode,1350,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['load'],['load-mode']
Performance," /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	2; Compositional bias 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern; Local temporary path; Threads 	24; Verbosity 	3; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp//3961034198315058036 --sub-mat blosum62.out -s 2 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 -v 3 --rescore-mode 2 --filter-hits 0 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --sort-results 1 --global-alignment ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:1487,perform,performs,1487,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['perform'],['performs']
Performance," /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	2; Compositional bias 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern; Local temporary path; Threads 	24; Verbosity 	3; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp//3961034198315058036 --sub-mat blosum62.out -s 2 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 -v 3 --rescore-mode 2 --filter-hits 0 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --sort-results 1 --global-alignment ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651:1409,perform,performs,1409,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651,1,['perform'],['performs']
Performance," 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 160ms; rescorediagonal ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref tmp//538598962955004214/linclust/16628284907041385511/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 303 0s 15ms; Time for merging to pref_rescore1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 47ms; clust ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref_rescore1 tmp//538598962955004214/linclust/16628284907041385511/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 303 0s 5ms; Sort entries; Find missing connections; Found 28 new connections.; Reconstruct initial order; [=================================================================] 100.00% 303 0s 14ms; Add missing connections; [=================================================================] 100.00% 303 0s 1ms. Time for read in: 0h 0m 0s 74ms; Total time: 0h 0m 0s 108ms. Size of the sequence database: 303; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:4736,load,load-mode,4736,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['load'],['load-mode']
Performance," 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 182ms; rescorediagonal DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 303 0s 14ms; Time for merging to pref_rescore1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 46ms; clust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore1 tmpfiles//13298481167543164943/linclust/10229649346622198404/pre_clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================] 303 0s 0ms; Sort entries; Find missing connections; Found 28 new connections.; Reconstruct initial order; [=================================================================] 303 0s 6ms; Add missing connections; [=================================================================] 303 0s 0ms. Time for read in: 0h 0m 0s 66ms; connected component mode; Total time: 0h 0m 0s 93ms. Size of the sequence da",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:4691,load,load-mode,4691,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['load'],['load-mode']
Performance," 0 --create-lookup 0 --threads 16 --compressed 0 -v 3 ; > ; > [=================================================================] 100.00% 2.67M 0s 919ms ; > Time for merging to query_seqs_split_h: 0h 0m 0s 832ms; > Time for merging to query_seqs_split: 0h 0m 0s 878ms; > Time for processing: 0h 0m 3s 919ms; > prefilter tmp/7701176895607249840/search_tmp/9045538653068861586/query_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/target_seqs_split tmp/7701176895607249840/search_tmp/9045538653068861586/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 2670930 type: Nucleotide; > Target split mode. Searching through 18 splits; > Estimated memory consumption: 326G; > Target database size: 100684280 type: Nucleotide; > Process prefiltering step 1 of 18; > ; > Index table k-mer threshold: 0 at k-mer size 15 ; > Index table: counting k-mers; > Segmentation fault (core dumped) ] 0.00% 1 eta -; > Error: Prefilter died; > Error: Search step died; > Error: Search died; > . ## Context. Hi I am trying to run an nucleotide-nucleotide search in mmseq2 with a custom database. This error does not occur with a different, smaller nucleotide database. Thank you very much for this amazing tool and all your hard work. ## Your Environment. I am using a google cloud VM with 64 CPUs and 416 GBs of memory on an ubuntu operating system, version 20.04. I install mmseq with",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/882:6914,load,load-mode,6914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882,1,['load'],['load-mode']
Performance," 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 100000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00K 0s 853ms; Sort kmer 0h 0m 0s 789ms; Sort by rep. sequence 0h 0m 0s 951ms; Time for fill: 0h 0m 0s 155ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 3s 166ms; rescorediagonal ./mms_smallDB ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 100.00K 0s 206ms; Time for merging to pref_rescore1: 0h 0m 0s 757ms; Time for processing: 0h 0m 1s 988ms; clust ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore1 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pre_clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Connected Component; [=================================================================] 100.00K 0s 367ms; Sort entries; Find missing connections; Found 245160 new connections.; Reconstruct initial order; [=================================================================] 100.00K 0s 304ms; Add missing connections; [=================================================================] 100.00K 0s 8ms. Time for read in: 0h 0m 1s 971ms; connected component mode; Total time: 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:12363,load,load-mode,12363,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance," 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_0 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. rmdb result_20230419_115721/tmp/16464230693756166324/aln_0; rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. result2profile result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/1646423069375616632",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:5837,load,load-mode,5837,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance," 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; filterdb tmp//538598962955004214/linclust/16628284907041385511/pref_filter1 tmp//538598962955004214/linclust/16628284907041385511/pref_filter2 --filter-file tmp//538598962955004214/linclust/16628284907041385511/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 276 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 46ms; rescorediagonal tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/pref_filter2 tmp//538598962955004214/linclust/16628284907041385511/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 11ms ] 54.55% 151 eta 0s; Time for processing: 0h 0m 0s 54ms; align tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/pref_rescore2 tmp//538598962955004214/linclust/16628284907041385511/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --scor",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:7489,load,load-mode,7489,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['load'],['load-mode']
Performance," 0m 16s 671ms; translatenucs /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa; --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 48. [=================================================================] 3.22M 2s 59ms; Time for merging files: 0h 0m 3s 83ms; Time for processing: 0h 0m 6s 661ms; prefilter /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa /mnt/lustre/scratch/aauladell/databases/unirefdb/unirefDB /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14; 502658769203238512/tmp_hsp1/3393216153911215513/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c; 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 48 --compressed 0 -v 3 -s; 5.7. Using 48 threads.; Query database size: 3215536 type: Aminoacid; Estimated memory consumption: 437G; Target database size: 99657864 type: Aminoacid; Process prefiltering step 1 of 1. Index table k-mer threshold: 122 at k-mer size 7; Index table: counting k-mers; [=================================================================] 99.66M 6m 33s 605ms; Index table: Masked residues: 620383436; Index table: fill; [==; ```. ## Context; From a selection of 300.000 small sequences, I intended to perform the taxonomy using UNIREF90. But it crashes each time even though the database should be able to be used for this kind of analysis. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 15c7762; * Which MMseqs version",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/232:2672,load,load-mode,2672,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232,1,['load'],['load-mode']
Performance," 0ms; Time for processing: 0h 0m 0s 0ms; filterdb tmp//10798751672030653963/linclust/5052420726377277994/pref_filter1 tmp//10798751672030653963/linclust/5052420726377277994/pref_filter2 --filter-file tmp//10798751672030653963/linclust/5052420726377277994/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 276 0s 5ms; Time for merging to pref_filter2: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 20ms; rescorediagonal tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/pref_filter2 tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 8ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms ] 16.00% 45 eta 0s; Time for processing: 0h 0m 0s 37ms; align tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore2 tmp//10798751672030653963/linclust/5052420726377277994/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --sco",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:7617,load,load-mode,7617,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['load'],['load-mode']
Performance," 0ms; Time for processing: 0h 0m 0s 0ms; filterdb tmp//7897776346521331899/linclust/17269245559208916342/pref_filter1 tmp//7897776346521331899/linclust/17269245559208916342/pref_filter2 --filter-file tmp//7897776346521331899/linclust/17269245559208916342/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 127 0s 8ms; Time for merging to pref_filter2: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 44ms; rescorediagonal tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/pref_filter2 tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 127 0s 5ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms=====> ] 78.57% 100 eta 0s; Time for processing: 0h 0m 0s 27ms; align tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore2 tmp//7897776346521331899/linclust/17269245559208916342/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:7735,load,load-mode,7735,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['load'],['load-mode']
Performance," 0s 2ms. 37.492909 k-mers per position; 726 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 3 sequences passed prefiltering per query sequence; 4 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 4ms; Time for processing: 0h 0m 2s 431ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqsHits --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 1 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 34258 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to newSeqsHits: 0h 0m 0s 4ms. 1 alignments calculated.; 0 sequence pairs passed the thresholds (0.000000 of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 0s 20ms; swapdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqsHits /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqsHits.swapped.all. [=================================================================] 6 0s 23ms; Computing offsets.; [==========================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:5040,load,load-mode,5040,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['load'],['load-mode']
Performance, 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0 . Query database size: 1599064123 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 163G; Target database size: 231921744 type: Aminoacid; Process prefiltering step 1 of 6; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.41M 2m 12s 304ms; Index table: Masked residues: 221272222; Index table: fill; [=================================================================] 38.41M 3m 45s 787ms; Index statistics; Entries: 11399442350; DB size: 74993 MB; Avg k-mer size: 8.905814; Top 10 k-mers; FSHAGSI 272598; AFMFFMP 260790; AFRNNFW 259163; RMNSFLP 218177; NNSWLPS 215496; AHFMIMV 211691; MPMGGNW 204521; TMLDRNT 168603; TGTYPSS 159040; GDQYNVT 148373; Time for index table init: 0h 6m 20s 599ms; k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 1599064123; Target db start 1 to 38411731; [=================================================================] 1.60B 12h 46m 35s 370ms. 22.315418 k-mers per position; 10964 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 27 sequences passed prefiltering per query sequence; 16 median result list length; 125561700 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 20m 11s 194ms; Time for merging to pref_0_tmp_0_tmp: 0h 53m 2s 600ms; Process prefiltering step 2 of 6. Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.92M 2m 23s 524ms; Index table: Masked residues: 206230655; Index table: fill; [=====================; ```. ## Context; ```; free -h; total used free shared buff/cache available; Mem: 409G 135G 86G 1.4M 186G 270G; Swap: 0B 0B 0B; ```; Google Cloud Platform (64 vCPU and 425984 MiB); Boot disk: 6000 GB; Ubuntu 18.4,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/577:23544,cache,cache,23544,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577,1,['cache'],['cache']
Performance," 1 of 1. k-mer similarity threshold: 114; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; mpic++/ 4.8.5 20150623 (Red Hat 4.8.5-36); cmake/3.12.3 ; module load cmake/3.12.3 ; module load openmpi/gcc/64/1.10.3 ; cd mmseqs2; mkdir build ; cd build ; CC=mpicc CXX=mpic++ cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/hpcf/authorized_apps/rhel7_apps/mmseqs2/install/11-e1a1c_sse4.1 -DHAVE_SSE4_1=1 ; make; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; LSF with SSE4 support. The job was submitted using 24 slo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:45163,perform,performance,45163,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['perform'],['performance']
Performance, 1.1.1b h14c3975_1 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h8571acd_11 bioconda; seqtk 1.3 h84994c4_1 bioconda; tk 8.6.9 h84994c4_1001 conda-forge; xz 5.2.4 h14c3975_1001 conda-forge; zlib 1.2.11 h14c3975_1004 conda-forge; ```. </p>; </details>. <details><summary>conda info</summary>; <p>. ```; active environment : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; active env location : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; shell level : 2; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.6.11; conda-build version : 3.11.0; python version : 3.6.7.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://conda.anaconda.org/leylabmpi/linux-64; https://conda.anaconda.org/leylabmpi/noarch; https://conda.anaconda.org/r/linux-64; https://conda.anaconda.org/r/noarch; https://conda.anaconda.org/qiime2/linux-64; https://conda.anaconda.org/qiime2/noarch; package cache : /ebio/abt3_projects/software/dev/miniconda3_dev/pkgs; /ebio/abt3/nyoungblut/.conda/pkgs; envs directories : /ebio/abt3_projects/software/dev/miniconda3_dev/envs; /ebio/abt3/nyoungblut/.conda/envs; platform : linux-64; user-agent : conda/4.6.11 requests/2.18.4 CPython/3.6.7 Linux/4.9.127 ubuntu/18.04.1 glibc/2.27; UID:GID : 6354:350; netrc file : None; offline mode : False; ```. </p>; </details>,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188:2597,cache,cache,2597,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188,1,['cache'],['cache']
Performance," 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 96025 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 96.03K 0s 882ms . Adjusted k-mer length 17; Sort kmer 0h 0m 0s 257ms; Sort by rep. sequence 0h 0m 0s 133ms; Time for fill: 0h 0m 0s 107ms; Time for merging to pref: 0h 0m 0s 28ms; Time for processing: 0h 0m 1s 808ms; rescorediagonal tmp/3198441352783276465/input tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.5 -a 0 --cov-mode 5 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 24 --compressed 0 -v 3 . [=================================================================] 100.00% 96.03K 0s 151ms ; Time for merging to pref_rescore1: 0h 0m 0s 241ms================>] 99.99% 96.02K eta 0s ; Time for processing: 0h 0m 1s 33ms; clust tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_rescore1 tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pre_clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Connected Component; [=================================================================] 100.00% 96.03K 0s 106ms ; Sort entries; Find missing connections; Found 292030 new connections.; Reconstruct initial order; [=================================================================] 100.00% 96.03K 0s 75ms ; Add missing connections; [=================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:7566,load,load-mode,7566,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['load'],['load-mode']
Performance," 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [=================================================================] 100.00% 239 0s 23ms; [============================================================> ] 92.44% 221 eta 0s; 20.598031 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 760ms; align tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/pref_step1 tmp//538598962955004214/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 239 type: Aminoacid; Target database size: 239 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 239 0s 34ms; Time for merging to aln_step1: 0h 0m 0s 6ms; 308 alignments calculated; 274 sequence pairs passed the thresholds (0.889610 of overall calculated); 1.146443 hits per query sequence; Time for processing: 0h 0m 0s 70ms; clust tmp//538598962955004214/input_step1 tmp//538598962955004214/aln_step1 tmp//538598962955004214/clu_step1 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:17432,load,load-mode,17432,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['load'],['load-mode']
Performance," 1ms; filterdb tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_filter1 tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_filter2 --filter-file tmpfiles//13298481167543164943/linclust/10229649346622198404/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 276 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 31ms; rescorediagonal tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_filter2 tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 52ms; align tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore2 tmpfiles//13298481167543164943/linclust/10229649346622198404/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:7529,load,load-mode,7529,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['load'],['load-mode']
Performance," 2 --comp-bias-corr 1 --diag-score 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 8 -v 3 -s 1 . MMseqs Version: c5615b34c686b1cf0f200670be8bc6cba76d90f9; Sub Matrix blosum62.out; Sensitivity 1; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Max. results per query 100000; Offset result 0; Split DB 0; Split mode 2; Compositional bias 1; Diagonal Scoring 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; Threads 8; Verbosity 3. Initialising data structures...; Using 8 threads. Use index uniref90.mms.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Query database: subseq_Mms.1(size=32); Target database: uniref90.mms(size=44448995); Use kmer size 7 and split 1 using split mode 0; Needed memory (139010009596 byte) of total memory (67278442496 byte); WARNING: MMseqs processes needs more main memory than available.Increase the size of --split or set it to 0 to automatic optimize target database split.; WARNING: Split has to be computed by createindex if precomputed index is used.; Substitution matrices...; Time for init: 0 h 0 m 12s. Process prefiltering step 0 of 1. tmp/pref_1_tmp_0.0: File exists; Program call:; subseq_Mms.1 uniref90.mms tmp/pref_1 tmp/aln_1 --sub-mat blosum62.out -a --alignment-mode 0 -e 1e-10 --min-seq-id 0 -c 0 --max-seq-len 32000 --max-seqs 100000 --comp-bias-corr 1 --max-rejected 2147483647 --threads 8 -v 3 . MMseqs Version: c5615b34c686b1cf0f200670be8bc6cba76d90f9; Sub Matrix blosum62.out; Add backtrace true; Alignment mode 0; E-value threshold 1e-10; Seq. Id Threshold 0; Coverage threshold 0; Max. sequence length 32000; Max. results per query 100000; Compositional bias 1; Profile false; Realign hit false; Max Reject 2147483647; Detect fragments false; Include identical Seq. Id. false; Threads 8; Verbosity 3. Init data structures...; Compute score, coverage and sequence id.; Using 8 threads.; Could not open data f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349:3605,optimiz,optimize,3605,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349,1,['optimiz'],['optimize']
Performance," 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000""; FILTER_PARAM=""--filter-min-enable 1000 --diff ${DIFF} --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95""; EXPAND_PARAM=""--expansion-mode 0 -e ${EXPAND_EVAL} --expand-filter-clusters ${FILTER} --max-seq-id 0.95""; mkdir -p ""${BASE}""; mkdir -p ""${BASE}""; ""${MMSEQS}"" createdb ""${QUERY}"" ""${BASE}/qdb""; ""${MMSEQS}"" search ""${BASE}/qdb"" ""${DB1}"" ""${BASE}/res"" ""${BASE}/tmp1"" $SEARCH_PARAM; ""${MMSEQS}"" mvdb ""${BASE}/tmp1/latest/profile_1"" ""${BASE}/prof_res""; ""${MMSEQS}"" lndb ""${BASE}/qdb_h"" ""${BASE}/prof_res_h""; **mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124** ; # I got stucked at the above command. **next I am gonna do** ; ""${MMSEQS}"" align ""${BASE}/prof_res"" ""${DB1}.idx"" ""${BASE}/res_exp"" ""${BASE}/res_exp_realign"" --db-load-mode 2 -e ${ALIGN_EVAL} --max-accept ${MAX_ACCEPT} --alt-ali 10 -a; ""${MMSEQS}"" filterresult ""${BASE}/qdb"" ""${DB1}.idx"" ""${BASE}/res_exp_realign"" ""${BASE}/res_exp_realign_filter"" --db-load-mode 2 --qid 0 --qsc $QSC --diff 0 --max-seq-id 1.0 --filter-min-enable 100. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; $ time mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124; expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124 . MMseqs Version: 	GITDIR-NOTFOUND; Expansion mode 	0; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Max sequence length 	65535; Score",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:2186,load,load-mode,2186,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['load'],['load-mode']
Performance," 336ms; Time for merging to target_h: 0h 0m 0s 62ms; Time for merging to target: 0h 0m 0s 67ms; Database type: Aminoacid; Time for processing: 0h 0m 5s 544ms; Create directory tmp/18110643841744502873/search_tmp; search tmp/18110643841744502873/query tmp/18110643841744502873/target tmp/18110643841744502873/result tmp/18110643841744502873/search_tmp --alignment-mode 3 -s 5.7 --remove-tmp-files 1. prefilter tmp/18110643841744502873/query tmp/18110643841744502873/target tmp/18110643841744502873/search_tmp/5440497380282616509/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.o ut,nucl:nucleotide.out' -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov -mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load -mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 5.7. Query database size: 500 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 20000 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 20.00K 2s 504ms; Index table: Masked residues: 210586; Index table: fill; [=================================================================] 100.00% 20.00K 1s 855ms; Index statistics; Entries: 8552346; DB size: 537 MB; Avg k-mer size: 0.133630; Top 10 k-mers; GQQVAR 190; QLGQRV 110; IHDKNI 105; ALGSGK 105; LLPGKT 102; SGGTLR 84; SGLGRV 75; VGSSST 61; VMHAGS 59; ATADTT 59; Time for index table init: 0h 0m 5s 872ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:4817,load,load,4817,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['load'],['load']
Performance," 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:3278,load,load-mode,3278,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance," 531ms; Time for merging to aln_0: 0h 0m 0s 899ms. 1405837 alignments calculated.; 219658 sequence pairs passed the thresholds (0.156247 of overall calculated).; 0.086187 hits per query sequence.; Time for processing: 0h 0m 5s 264ms; createsubdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/order_0 tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 273ms; Time for processing: 0h 0m 0s 816ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 3.5 . Query database size: 2328975 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 146 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 355ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 643ms; Index statistics; Entries: 5077775275; DB size: 38820 MB; Avg k-mer size: 3.967012; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 16s 755ms; Process prefiltering step 1 of 1. k-mer similarity ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:7593,load,load-mode,7593,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['load'],['load-mode']
Performance," 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_query_20230412_142303/tmp/18292001434761310910/profile_1 result_query_20230412_142303/res result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2. expandaln result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/res /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/res_exp --db-load-mode 2 --threads 96 --expansion-mode 0 -e 1.7976931348623157e+308 --expand-filter-clusters 1 --max-seq-id 0.95. MMseqs Version: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Expansion mode 0; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Max sequence length 65535; Score bias 0; Compositional bias 1; Compositional bias 1; E-value threshold 1.79769e+308; Seq. id. threshold 0; Coverage threshold 0; Coverage mode 0; Pseudo count mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Expand filter clusters 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.95; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Preload mode 2; Compressed 0; Threads 96; Verbosity 3. Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Index version: 16; Generated by: 67949d702dbfc6",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:9371,load,load-mode,9371,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['load'],['load-mode']
Performance," 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms; rescorediagonal tmpDB tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref tmp/12397138995521121878/linclust/639052995728955397/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:5413,load,load-mode,5413,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['load'],['load-mode']
Performance," 81ms; Create directory /Volumes/s/tmp/3581369344000996149/clu_tmp; cluster /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu /Volumes/s/tmp/3581369344000996149/clu_tmp --max-seqs 20 -c 0.8 --cov-mode 1 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --min-seq-id 0.5 --remove-tmp-files 1. Set cluster sensitivity to -s 3.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/clu_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-k",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:4105,load,load-mode,4105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['load'],['load-mode']
Performance," CXX=""$(brew --prefix)/bin/gcc-6"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; -- The CXX compiler identification is GNU 6.2.0; -- Checking whether CXX compiler has -isysroot; -- Checking whether CXX compiler has -isysroot - yes; -- Checking whether CXX compiler supports OSX deployment target flag; -- Checking whether CXX compiler supports OSX deployment target flag - yes; -- Check for working CXX compiler: /usr/local/bin/gcc-6; -- Check for working CXX compiler: /usr/local/bin/gcc-6 -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Sourcedir /Users/moorer/Downloads/mmseqs2; -- Projectdir /Users/moorer/Downloads/mmseqs2; -- Compiler is GNU; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Failed; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 extensions, using flags: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Co",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:964,Perform,Performing,964,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,22,['Perform'],['Performing']
Performance," DIFF=3000; QSC=-20.0; MAX_ACCEPT=1000000; if [ ""${FILTER}"" = ""1"" ]; then; 0.1 was not used in benchmarks due to POSIX shell bug in line above; EXPAND_EVAL=0.1; ALIGN_EVAL=10; QSC=0.8; MAX_ACCEPT=100000; fi; export MMSEQS_CALL_DEPTH=1; SEARCH_PARAM=""--num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000""; FILTER_PARAM=""--filter-min-enable 1000 --diff ${DIFF} --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95""; EXPAND_PARAM=""--expansion-mode 0 -e ${EXPAND_EVAL} --expand-filter-clusters ${FILTER} --max-seq-id 0.95""; mkdir -p ""${BASE}""; mkdir -p ""${BASE}""; ""${MMSEQS}"" createdb ""${QUERY}"" ""${BASE}/qdb""; ""${MMSEQS}"" search ""${BASE}/qdb"" ""${DB1}"" ""${BASE}/res"" ""${BASE}/tmp1"" $SEARCH_PARAM; ""${MMSEQS}"" mvdb ""${BASE}/tmp1/latest/profile_1"" ""${BASE}/prof_res""; ""${MMSEQS}"" lndb ""${BASE}/qdb_h"" ""${BASE}/prof_res_h""; **mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124** ; # I got stucked at the above command. **next I am gonna do** ; ""${MMSEQS}"" align ""${BASE}/prof_res"" ""${DB1}.idx"" ""${BASE}/res_exp"" ""${BASE}/res_exp_realign"" --db-load-mode 2 -e ${ALIGN_EVAL} --max-accept ${MAX_ACCEPT} --alt-ali 10 -a; ""${MMSEQS}"" filterresult ""${BASE}/qdb"" ""${DB1}.idx"" ""${BASE}/res_exp_realign"" ""${BASE}/res_exp_realign_filter"" --db-load-mode 2 --qid 0 --qsc $QSC --diff 0 --max-seq-id 1.0 --filter-min-enable 100. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; $ time mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124; expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:1923,load,load-mode,1923,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['load'],['load-mode']
Performance," Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 56; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 7780; Target db start 1 to 756891; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 10ms; Time for processing: 0h 0m 28s 690ms; align tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 tmp/16138406286044646862/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 7780 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 7.78K 0s 362ms ; Time for merging to aln_2: 0h 0m 0s 3ms. 30 alignments calculated.; 30 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.003856 hits per query sequence.; Time for processing: 0h 0m 3s 496ms; mergedbs IP_DB/IP_DB result_DB/result_DB tmp/16138406286044646862/aln_merge tmp/16138406286044646862/aln_2 --compressed 0 -v 3 . Merging the results to result_DB/result_DB; Time for merging to result_DB: 0h 0m 0s 0ms; Time for processing: 0h 0m ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:11957,load,load-mode,11957,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['load'],['load-mode']
Performance," Substitution matrices...; Use kmer size 5 and split 1 using Target split mode.; Needed memory (20178976034 byte) of total memory (486687909888 byte); Index table: counting k-mers... ```. ## Context; Trying to generate a profile DB from the file `uniclust30_2018_08_hhm_db` contained the 18-08 release of Uniclust30; `http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz`; I am using `convertprofiledb` and then `createindex`... **NOTE:** I have used the same procedure to generate the profile DB using the HHblits profiles for Pfam 31 downloaded from:; `http://wwwuser.gwdg.de/%7Ecompbiol/data/hhsuite/databases/hhsuite_dbs/pfamA_31.0.tgz`. ## Your Environment; > MMseqs Version: 6.f5a1c; [f5a1cdb](https://github.com/soedinglab/MMseqs2/commit/f5a1cdb44c996d6be229226b09ecc687646c0c12); > MMseqs was self-compiled; > gcc (Homebrew gcc 5.5.0_4) 5.5.0; > cmake 3.12.3. >Server specifications:. ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fpu_exception	: yes; cpuid level	: 15; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer xsave avx f16c rdrand lahf_lm abm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm xsaveopt cqm_llc cqm_occup_llc dtherm ida arat pln pts; bogomips	: 5199.77; clflush size	: 64; cache_alignment	: 64; address sizes	: 46 bits physical, 48 bits virtual; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/130:3376,cache,cache,3376,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130,1,['cache'],['cache']
Performance," X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; .............; Time for fill: 0 h 0 m 2s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 7s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 4s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 14s; Rescore diagonals.; Program call:; panproteome.db panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Rescore mode 	0; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; Threads 	10; Verbosity 	3. Query file: panproteome.db; Target file: panproteome.db; Prefilter database: /tmp/test/9465698490903227639/linclust/831108043510341376/pref; Result database: /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore1; ...................................................................................................	1 Mio. sequences processed; .............Done.; Time for merging files: 0 h 0 m 0 s; Time for diagonal calculation: 0 h 0 m 3s; Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore1 /tmp/test/9465698490903227639/linclust/831108043510341376/pre_clust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max de",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:5343,perform,performs,5343,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['perform'],['performs']
Performance," Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redundancy tmp//538598962955004214/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kme",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:2426,load,load-mode,2426,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['load'],['load-mode']
Performance," [=================================================================] 100.00% 276 0s 54ms; Write merged clustering; [=================================================================] 100.00% 303 0s 67ms; Time for merging to clu_redundancy: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 121ms; createsubdb tmp//538598962955004214/clu_redundancy ../DB_in/fasta_in_db_HC tmp//538598962955004214/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 26ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 6ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 58ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:11491,load,load-mode,11491,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['load'],['load-mode']
Performance," admixture (range 0.0-inf) []; misc:; --rescore-mode INT Rescore diagonals with:; 0: Hamming distance; 1: local alignment (score only); 2: local alignment; 3: global alignment; 4: longest alignment fulfilling window quality criterion [0]; --dbtype INT Database type 0: auto, 1: amino acid 2: nucleotides [0]; --shuffle BOOL Shuffle input database [1]; --createdb-mode INT Createdb mode 0: copy data, 1: soft link data and write new index (works only with single line fasta/q) [1]; --id-offset INT Numeric ids in index file are offset by this value [0]; common:; --threads INT Number of CPU-cores used (all by default) [10]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; --sub-mat TWIN Substitution matrix file [aa:blosum62.out,nucl:nucleotide.out]; --max-seq-len INT Maximum sequence length [65535]; --db-load-mode INT Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]; --remove-tmp-files BOOL Delete temporary files [1]; --force-reuse BOOL Reuse tmp filse in tmp/latest folder ignoring parameters and version changes [0]; --mpi-runner STR Use MPI on compute cluster with this MPI command (e.g. ""mpirun -np 42"") []; expert:; --filter-hits BOOL Filter hits by seq.id. and coverage [0]; --sort-results INT Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]; --write-lookup INT write .lookup file containing mapping from internal id, fasta id and file number [0]. examples:; mmseqs easy-linclust examples/DB.fasta result tmp. # Linclust output; # - result_rep_seq.fasta: Representatives; # - result_all_seq.fasta: FASTA-like per cluster; # - result_cluster.tsv: Adjecency list. # Important parameter: --min-seq-id, --cov-mode and -c; # --cov-mode; # 0 1 2; # Q: MAVGTACRPA 60% IGN 60%; # T: -AVGTAC--- 60% 100% IGN; # -c 0.7 - + -; # -c 0.6 + + +. # Cluster nucleotide sequences; mmseqs easy-linclust examples/DB.fasta result tmp --kmer-per-seq-scale 0.3. references:; - Steineg",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682:5994,load,load-mode,5994,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682,1,['load'],['load-mode']
Performance," anything out of the ordinary in your screenshot. ; I still don't really have an idea whats going on. I repeated the UniRef search with your query on the MSA server:; ```; Command being timed: ""mmseqs search mmseq_in_db uniref30_2202_db mmseq_in_res mmseq_in_tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000""; User time (seconds): 13.10; System time (seconds): 21.13; Percent of CPU this job got: 99%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:34.23; Average shared text size (kbytes): 0; Average unshared data size (kbytes): 0; Average stack size (kbytes): 0; Average total size (kbytes): 0; Maximum resident set size (kbytes): 19188072; Average resident set size (kbytes): 0; Major (requiring I/O) page faults: 0; Minor (reclaiming a frame) page faults: 9091215; Voluntary context switches: 57; Involuntary context switches: 503; Swaps: 0; File system inputs: 0; File system outputs: 8888; Socket messages sent: 0; Socket messages received: 0; Signals delivered: 0; Page size (bytes): 4096; Exit status: 0; ```. One thing we do differently since we still have enough spare CPU capacity on the server is enable some limited multithreading and parallel processing. We use `--threads 2`, which will hide quite a bit of overhead in your use-case:; ```; User time (seconds): 12.32; System time (seconds): 20.86; Percent of CPU this job got: 132%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.12; ```. And we also start the env-db and template search in parallel to the expand-align steps. ; (`path.colabfold.parallelstages` parameter in the API server). This will hide quite a bit of latency. However, the initial search is still a lot faster for us despite worse CPU/RAM specs. . Can you check if `vmtouch` has actually but everything into RAM? `htop` should look something like this:; ```; root 20 0 605G 605G 605G S 0.0 15.0 6:22.98 /home/steineggerlab/miniforge3/bin/vmtouch -f -t -l -m 4000 colabfold_envdb_202108.idx pdb70_220313.idx uniref30_2...; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953:1660,latency,latency,1660,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953,1,['latency'],['latency']
Performance," as I can tell it doesn't seem to be overblowing that (the core dump is <400G). I ran createindex in the same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib6",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1169,load,load-safe-path,1169,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['load'],['load-safe-path']
Performance," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>) at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578) at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```; For the clu90 job:; ```; (gdb) thread apply all bt. Thread 32 (Thread 0x7f6e65ffe640 (LWP 135852) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:29623,optimiz,optimized,29623,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 2 (LWP 7870 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:28694,optimiz,optimized,28694,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 3 (LWP 7871 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 2 (LWP 7870 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:27765,optimiz,optimized,27765,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 4 (LWP 7872 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 3 (LWP 7871 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:26836,optimiz,optimized,26836,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 5 (LWP 7905 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 4 (LWP 7872 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:25907,optimiz,optimized,25907,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 6 (LWP 7906 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 5 (LWP 7905 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:24978,optimiz,optimized,24978,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 7 (LWP 7907 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 6 (LWP 7906 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:24049,optimiz,optimized,24049,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 8 (LWP 7908 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 7 (LWP 7907 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:23120,optimiz,optimized,23120,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 9 (LWP 7909 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 8 (LWP 7908 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:22191,optimiz,optimized,22191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance," environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; MMseq version: 13.45111; CPU: 2x AMD 7543 (64 cores total); RAM: 512 GB; Local Disk: 7 TB SSD; Network: 100 GBit Infiniband; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Thread(s) per core: 1; Core(s) per socket: 32; Socket(s): 1; NUMA node(s): 1; Vendor ID: AuthenticAMD; CPU family: 23; Model: 49; Model name: AMD EPYC 7502P 32-Core Processor; Stepping: 0; CPU MHz: 2500.000; CPU max MHz: 2500.0000; CPU min MHz: 1500.0000; BogoMIPS: 5000.22; Virtualization: AMD-V; L1d cache: 32K; L1i cache: 32K; L2 cache: 512K; L3 cache: 16384K; NUMA node0 CPU(s): 0-31; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr wbnoinvd arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif v_spec_ctrl umip rdpid overflow_recov succor smca sme sev sev_es",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:9249,cache,cache,9249,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,4,['cache'],['cache']
Performance," filterdb tmp/576731152808920235/linclust/1790908825406232727/pref_filter1 tmp/576731152808920235/linclust/1790908825406232727/pref_filter2 --filter-file tmp/576731152808920235/linclust/1790908825406232727/order_redundancy --threads 128 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 8.79M 22s 293ms; Time for merging to pref_filter2: 0h 0m 4s 651ms; Time for processing: 0h 0m 33s 252ms; align tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/pref_filter2 tmp/576731152808920235/linclust/1790908825406232727/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 128 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 8785102 type: Nucleotide; Target database size: 8785102 type: Nucleotide; Calculation of alignments; [=================================================================] 8.79M 11m 6s 373ms; Time for merging to aln: 0h 0m 5s 49ms; 1248621641 alignments calculated; 12850181 sequence pairs passed the thresholds (0.010291 of overall calculated); 1.462724 hits per query sequence; Time for processing: 0h 11m 16s 565ms; clust tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy tmp/576731152808920235/linclust/1790908825406232727/aln tmp/576731152808920235/linclust/1790908825406232727/clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:8434,load,load-mode,8434,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['load'],['load-mode']
Performance," for merging to query_seqs_h: 0h 0m 0s 20ms; Time for merging to query_seqs: 0h 0m 0s 26ms; Time for processing: 0h 0m 0s 303ms; splitsequence /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 256 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 3ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 278905 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 88ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 64ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:3216,load,load-mode,3216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['load'],['load-mode']
Performance," hits (truncated result); mmseqs-web-worker_1 | 0 sequences passed prefiltering per query sequence; mmseqs-web-worker_1 | 0 median result list length; mmseqs-web-worker_1 | 1 sequences with 0 size result lists; mmseqs-web-worker_1 | Time for merging to pref_0: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 5ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/search/pref_0 /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --zdrop 40 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Compute score, coverage and sequence identity; mmseqs-web-worker_1 | Query database size: 1 type: Nucleotide; mmseqs-web-worker_1 | Target database size: 10754 type: Nucleotide; mmseqs-web-worker_1 | Calculation of alignments; mmseqs-web-worker_1 | [=================================================================] 1 0s 2ms; mmseqs-web-worker_1 | Time for merging to aln: 0h 0m 0s 0ms; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | 0 alignments calculated.; mmseqs-web-worker_1 | 0 sequence pairs passed the thresholds (-nan of overall calculated).; mmseqs-web-worker_1 | 0.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:25190,load,load-mode,25190,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['load'],['load-mode']
Performance," in: 0h 0m 0s 60ms; connected component mode; Total time: 0h 0m 0s 84ms. Size of the sequence database: 237; Size of the alignment database: 237; Number of clusters: 218. Writing results 0h 0m 0s 2ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; createsubdb tmpfiles//13298481167543164943/clu_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 218 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 218 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 218 0s 31ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 218 0s 4ms; Index statistics; Entries: 1318; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 994ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 218; Target db start 1 to 218; [=========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:19718,load,load-mode,19718,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['load'],['load-mode']
Performance, k-mer similarity threshold: 90; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1364570; Target db start 1 to 17772; ................................................................................................... 1 Mio. sequences processed; ....................................; 0 k-mers per position.; 49304 DB matches per sequence.; 1 Overflows.; 286 sequences passed prefiltering per query sequence.; Median result list size: 300; 11 sequences with 0 size result lists. Time for prefiltering scores calculation: 0h 3m 59s 38ms; Time for merging files: 0h 0m 1s 745ms; Time for processing: 0h 8m 22s 701ms; Program call:; swapresults pbps.neighbors.DB pfam_profile.idx tmp/6822607060114486044/pref tmp/6822607060114486044/pref_swapped --sub-mat blosum62.out -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 10 --compressed 0 --db-load-mode 0 -v 3 ; Index version: 15; Generated by: 8-fac81; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqType: Profile; Headers1: 1; Headers2: 0; ScoreMatrix: VTML80.out; Result database: tmp/6822607060114486044/pref; Computing offsets.; ................................................................................................... 1 Mio. sequences processed; ....................................; Reading results.; ................................................................................................... 1 Mio. sequences processed; ....................................; Output database: tmp/6822607060114486044/pref_swapped; .; Time for merging files: 0h 0m 0s 23ms; Time for processing: 0h 0m 46s 63ms; Program call:; align pfam_profile.idx pbps.neighbors.DB tmp/6822607060114486044/pref_swapped tmp/6822607060114486044/aln_swapped --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-se,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:4254,load,load-mode,4254,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,1,['load'],['load-mode']
Performance," merging: 0h 1m 18s 365ms; [=================================================================] 100.00% 55.24M 8m 35s 231ms; ```. ### htop screen grab; ![Screen Shot 2021-03-10 at 12 16 09 PM](https://user-images.githubusercontent.com/14060382/110706285-7c9db380-81ac-11eb-8e42-efd46778a3ce.png). ### gdb output on an S status prefilter process:; ```; gdb -p 9878. Attaching to process 9878. warning: process 9878 is a cloned process; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/mmseqs...(no debugging symbols found)...done.; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:33208,Load,Loaded,33208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance," mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	1; Search steps 	3; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false; LCA Ranks 	phylum:superphylum:subkingdom:kingdom:superkingdom; Blacklisted Taxa 	12908,28384; LCA Mode 	2; Remove Temporary Files 	false; Sets the MPI runner. Program call:; search /tmp/global2/nyoungblut/LLMGAG_27929269397/linclust/genes_db /ebio/abt3_projects/databases_no-backup/uniclust/uniclust90_2018_08_db /tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/tmp//15538800487586745695/first /tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/tmp//15538800487586745695/tmp_hsp1 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 -v 3 -s 6 -k 0 --k-score 2147483647 --alph-size 21 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --mask-profile 1 --e-profile 0.001 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --omit-consensus 0 --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --num-iterations 1 --start-sens 1 --sens-steps 3 --slice-search 0 --strand 1 --disk-space-limit 0 --remove-tmp-files 0. MMseqs Version: 	7.4e23d; Sub Mat",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032:2972,load,load-mode,2972,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032,1,['load'],['load-mode']
Performance," mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster iterations to 3; linclust shrimpDB tmp97/17949317426677965256/clu_redundancy tmp97/17949317426677965256/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:3602,load,load-mode,3602,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['load'],['load-mode']
Performance," previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 22 --compressed 0 -v 3 . Compute score and coverage; Query database size: 77815083 type: Aminoacid; Target database size: 77815083 type: Aminoacid; Calculation of alignments; [Error: Alignment step died; Error: Search died. The command is the same as used for previous clustering, the file is not bigger, I have no idea what is the issue. Any help is appreciated, thanks,; G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/265:2054,load,load-mode,2054,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265,1,['load'],['load-mode']
Performance," profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/q_orfs_aa /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db.idx /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 5 --compressed 0 -v 3 -s 7.5 . Index version: 16; Generated by: 8c79865b60025674b9c825fd7238bd0b95503bc7; ScoreMatrix: VTML80.out; Query database size: 5539077 type: Aminoacid; Estimated memory consumption: 3G; Target database size: 849970 type: Aminoacid; Segmentation fault; Error: Prefilter died; Error: Search step died; ```. Have you any idea what is going on?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/234:6790,load,load-mode,6790,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234,1,['load'],['load-mode']
Performance," sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Program call:; rescorediagonal tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 0.001 -c 0.9 --cov-mode 1 --min-seq-id 0.9 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --no-preload 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; E-value threshold 	0.001; Coverage threshold 	0.9; Coverage Mode 	1; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Include identical Seq. Id. 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; No preload 	false; Threads 	2; Verbosity 	3. Prefilter database: tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref; Query database: tmp/3578692915323364718/input; Target database: tmp/3578692915323364718/input; Result database: tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore1; ............; Done.; Time for merging files: 0h 0m 0s 224ms; Time for processing: 0h 0m 0s 948ms; Program call:; clust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore1 tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component	1000; Similarity type 	2; Threads 	2; Verbosity 	3. Init...; Opening sequence database",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:8297,perform,performs,8297,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['perform'],['performs']
Performance," std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=this@entry=0x7fffffffd290, __position=__position@entry=...); at /usr/include/c++/9/bits/vector.tcc:440; #11 0x000000000060c68b in std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=0x7fffffffd290); at /usr/include/c++/9/bits/stl_iterator.h:803; #12 nrtotaxmapping (argc=<optimized out>, argv=<optimized out>, command=...); at /home/vsts/work/1/s/src/util/nrtotaxmapping.cpp:96; #13 0x0000000000426a27 in runCommand (p=0x1288200, argc=argc@entry=8, argv=argv@entry=0x7fffffffe3b8); at /home/vsts/work/1/s/src/commons/Application.cpp:40; #14 0x000000000040e501 in main (argc=10, argv=0x7fffffffe3a8); at /home/vsts/work/1/s/src/commons/Application.cpp:203. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): f5b588be54de35876eff90f3694b67e1d00856ef; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): AVX2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 16 vCPU and 64 GB memory; * Operating system and version: Ubuntu 20.04.5 LTS (GNU/Linux 5.15.0-1021-gcp x86_64)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/666:3614,optimiz,optimized,3614,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666,2,['optimiz'],['optimized']
Performance," tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/order_redundancy --threads 24 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 10.91K 0s 66ms ; Time for merging to pref_filter2: 0h 0m 0s 170ms; Time for processing: 0h 0m 0s 603ms; align tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_filter2 tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 5 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 24 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 10913 type: Nucleotide; Target database size: 10913 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 10.91K 0s 56ms ; Time for merging to aln: 0h 0m 0s 218ms; 15033 alignments calculated; 12475 sequence pairs passed the thresholds (0.829841 of overall calculated); 1.143132 hits per query sequence; Time for processing: 0h 0m 0s 663ms; clust tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/input_step_redundancy tmp/3198441352783276465/clu_tmp/130169",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:10996,load,load-mode,10996,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['load'],['load-mode']
Performance," to be extracted; --reverse-frames 	1,2,3 	comma-seperated list of ORF frames on the reverse strand to be extracted; --translation-table 	1 	1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE, 9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL, 15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL, 23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA, 29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA; --use-all-table-starts	false 	use all alteratives for a start codon in the genetic table, if false - only ATG (AUG); --id-offset 	0 	numeric ids in index file are offset by this value ; --add-orf-stop 	false 	add * at complete start and end ; --start-sens 	4.000 	start sensitivity ; --sens-steps 	1 	Search steps performed from --start-sense and -s. . common options 	default 	description [value range]; --sub-mat 	blosum62.out	amino acid substitution matrix file ; --max-seq-len 	65535 	Maximum sequence length [1,32768] ; --max-seqs 	300 	maximum result sequences per query (this parameter affects the sensitivity); --threads 	1 	number of cores used for the computation (uses all cores by default); -v 	3 	verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info. Unrecognized parameter --format-output; Did you mean ""--max-accept""?; Error: Search died. ## Context. Trying to run against Pfam-A, it was working a couple months ago. ## Your Environment. mmseqs compiled by myself in MacOSX Mojave. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and versio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:10469,perform,performed,10469,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['perform'],['performed']
Performance," type: Nucleotide; Time for processing: 0h 0m 8s 216ms; Create directory tmp/18031188072042168038/taxonomy_tmp; taxonomy tmp/18031188072042168038/query refDB/NR tmp/18031188072042168038/result tmp/18031188072042168038/taxonomy_tmp --tax-output-mode 2 --threads 16 --split-memory-limit 100G --remove-tmp-files 1 . extractorfs tmp/18031188072042168038/query tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 16 --compressed 0 -v 3 . [=================================================================] 810.40K 31s 522ms; Time for merging to orfs_aa_h: 0h 0m 16s 759ms; Time for merging to orfs_aa: 0h 0m 22s 22ms; Time for processing: 0h 1m 23s 421ms; prefilter tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_aa refDB/NR.idx tmp/18031188072042168038/taxonomy_tmp/2085806724977121770/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 100G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3 . Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 47918555 type: Aminoacid; Target split mode. Searching through 41 splits; Estimated memory consumption: 64G; Target database size: 444603205 type: Aminoacid; Process prefiltering step 1 of 41. k-mer similarity threshold: 163; Starting prefiltering scores calculation (step 1 of 41); Query db start 1 to 47918555; Target db start 1 to 10838348; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:96384,load,load-mode,96384,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,1,['load'],['load-mode']
Performance,"# Expected Behavior; I have provided the below command ; **mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124**. I have created the Uniprotdb using mmseqs createdb command so the uniportdb.index file was created with it. ## Current Behavior; But I am seeing after giving expandaln command facing an issue saying the uniprotdb.index is generic type ; Input database ""./uniprot/uniprotdb.index"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; MMSEQS=""$1""; QUERY=""$2""; BASE=""$4""; DB1=""$5""; DB2=""$6""; DB3=""$7""; USE_ENV=""$8""; USE_TEMPLATES=""$9""; FILTER=""${10}""; TAXONOMY=""${11}""; M8OUT=""${12}""; EXPAND_EVAL=inf; ALIGN_EVAL=10; DIFF=3000; QSC=-20.0; MAX_ACCEPT=1000000; if [ ""${FILTER}"" = ""1"" ]; then; 0.1 was not used in benchmarks due to POSIX shell bug in line above; EXPAND_EVAL=0.1; ALIGN_EVAL=10; QSC=0.8; MAX_ACCEPT=100000; fi; export MMSEQS_CALL_DEPTH=1; SEARCH_PARAM=""--num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000""; FILTER_PARAM=""--filter-min-enable 1000 --diff ${DIFF} --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95""; EXPAND_PARAM=""--expansion-mode 0 -e ${EXPAND_EVAL} --expand-filter-clusters ${FILTER} --max-seq-id 0.95""; mkdir -p ""${BASE}""; mkdir -p ""${BASE}""; ""${MMSEQS}"" createdb ""${QUERY}"" ""${BASE}/qdb""; ""${MMSEQS}"" search ""${BASE}/qdb"" ""${DB1}"" ""${BASE}/res"" ""${BASE}/tmp1"" $SEARCH_PARAM; ""${MMSEQS}"" mvdb ""${BASE}/tmp1/latest/profile_1"" ""${BASE}/prof_res""; ""${MMSEQS}"" lndb ""${BASE}/qdb_h"" ""${BASE}/prof_res_h""; **mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:170,load,load-mode,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['load'],['load-mode']
Performance,"## Context. Hi!. We're currently looking for a replacement for CD-HIT-EST for clustering genes in nucleotide space. We have a few conditions when clustering. The CD-HIT-COMMAND is straightforward:. ```; cd-hit-est -i genes.fa -o cluster.fa -c 0.95 -T 64 -M 0 -G 0 -aS 0.9 -g 1 -r 0 -d 0; ```. Basically, we want to perform greedy clustering at 95% identity and at least 90% of the shorter gene should be aligned. The longest sequence of a cluster should become the representative and a member of a cluster should not align against any other representative with a better score/percid. We have now come up with the following command(s):. ```; mmseqs createdb genes.fa genes.mmseqs.db --dbtype 2 --shuffle 0. mmseqs cluster genes.mmseqs.db genes.mmseqs.cluster tmp --kmer-per-seq-scale 0 --kmer-per-seq 1000 \; -s 4 --max-seq-len 80000 --remove-tmp-files 0 --cluster-mode 2 --min-seq-id 0.95 --threads 64 --cov-mode 1 \; -c 0.9 --spaced-kmer-mode 0 --alignment-mode 3 --cluster-reassign 1; ```. The key parameter seems to be `--spaced-kmer-mode 0` as this prevents very similar sequences being placed in different clusters. as reported by others (#831 #489). Using these parameters the clustering compares quite well against the clusters produced by cd-hit:; ```; mmseqs clusters = 13'471'787; cdhit clusters = 13'640'333; runtime(mmseqs) / runtime(cdhit) = 0.09; Rand Score: 0.99; Adjusted Rand Score: 0.91; V-measure: 0.99; ```. So it seems that mmseqs is slightly overclustering (might be due to local vs global alignment) and the cluster consistency metrics indicate that even the cluster membership (and not only the representatives) seem to be mostly correct. . I would like to get your feedback on the command(s) before I make this our standard (nucleotide) gene clustering pipeline. Do you think there are other parameters that could be tweaked?. ## Your Environment; version: `6f45232ac8daca14e354ae320a4359056ec524c2`; Downloaded static binary from GitHub. Best and thanks,; Hans",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/836:315,perform,perform,315,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/836,1,['perform'],['perform']
Performance,"## Context; I am running MMseqs2 search of the UniRef100 database. This database includes many long sequences, one example of which is a titin isoform (UniRef100_UPI000A307CE5). ## Expected Behavior; I would expect the output file after running convertalis on the search output to have the same sequence ID as the UniRef100 sequence, i.e.,. ```; evm.model.utg11.204 UniRef100_UPI000A307CE5 0.231 160 116 3 2138 2297 16366 16518 5.20E-36 164; ```. ## Current Behavior; MMseqs2 is splitting this long entry into two separate ones: UniRef100_UPI000A307CE5_0 and UniRef100_UPI000A307CE5_1. . I can verify this by performing a grep search for ""UPI000A307CE5"" on the .lookup file which returns; ```; 132227718 UniRef100_UPI000A307CE5_0; 132227719 UniRef100_UPI000A307CE5_1; ```. Additionally, searching for these two lines within the output file created by ""createdb"" indicates that the tail portion of this UniRef100 sequence has indeed been split from the main. Because of this splitting behaviour, my output convertalis table has this entry. ```; evm.model.utg11.204 UniRef100_UPI000A307CE5_0 0.231 160 116 3 2138 2297 16366 16518 5.20E-36 164; ```. From what I can guess this might not strictly be a bug in MMseqs2 - perhaps exceedingly long sequences can't be handled properly during alignment. I can handle this behaviour now that I am aware of it; it resulted in some confusion as to why I was not obtaining the expected results when parsing the uniref100.xml file for the gene name / taxon code of significant hits. However, I think that a consistent sequence ID should be returned since this behaviour is not clear and it took a bit of investigation to figure out what was happening. ## Steps to Reproduce (for bugs); Generate and index a FASTA file containing the above-mentioned UniRef100 sequence. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any pa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/89:609,perform,performing,609,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/89,1,['perform'],['performing']
Performance,"## Context; I am working with metagenomic data; Assemblies and gene annotation have been made by samples and then we performed a clustering at 95% identity to clustered genes by sample into one genes catalog. The tradictionnal command used is based on CD-HIt : `cd-hit-est -c 0.95`.; I want to test mmseq for saving computing time (original, isn't it?!). ## Expected Behavior; results similar to cd-hit in a much less time. ## Current Behavior; input =13 387 709 nucleic sequences. cd-hit output : 2,102,272 clusters; linclust output : 1,986,968 clusters (ok good start); cluster output : 8062 cluster (!!! what ?). I did not check anything further, except that both mmseq clustering ran well. I obviously miss something !; ; How is that possible that `cluster` produced only 8k clusters ?. ## Your Environment; mmseqs2-v14-7e284. the command lines used : ; * for linclust; `mmseqs easy-cluster AllSamples-cd-hit-est.0.95 mmseq_easyCluster tmp --min-seq-id 0.95 -c 0 --threads 20 --split-memory-limit 19G`; for cluster; `mmseqs easy-linclust AllSamples-cd-hit-est.0.95 mmseq_easyLinclust tmp --min-seq-id 0.95 -c 0 --threads 20 --split-memory-limit 19G`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/699:117,perform,performed,117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/699,1,['perform'],['performed']
Performance,"## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; I am getting error when running ; mmseqs search mmseqs_U90_out/mmseqs-81_queryDB ../MH2_mappingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/689:481,load,load-mode,481,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689,1,['load'],['load-mode']
Performance,"## Expected Behavior. According to the documentation, when extracting the representative sequences either by manually performing these steps:. ```; mmseqs result2repseq DB clu clu_rep; mmseqs result2flat DB DB clu_rep clu_rep.fasta --use-fasta-header; ```. or by using the ```easy-cluster``` or ```easy-linclust``` commands, a proper Fasta file should be created with the representative sequences. ## Current Behavior. A Fasta file is created that does not contain sequences but only the sequences IDs : . ```; >sequence_1; sequence_1; >sequence_2; sequence_2; >sequence_3; sequence_3; ```. ## Steps to Reproduce (for bugs). Run ```easy-cluster``` or ```easy-linclust``` on a protein Fasta file. ## MMseqs Output (for bugs). ```; Program call:; easy-cluster final_complete_sequences.fa.gz clusteringDB tmp --cov-mode 1 -c 0.9 --min-seq-id 0.9 --threads 2 --kmer-per-seq 80. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:118,perform,performing,118,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['perform'],['performing']
Performance,"## Expected Behavior. Cluster nucleotide genome sequences (e.g., wgs records, contigs, scaffolds, complete genomes) in a few hours using `easy-linclust`. ## Current Behavior. Running `easy-linclust` using the following command ran for more than 24 hours and was at the `rescorediagonal` step for +20 hours:; ```; mmseqs easy-linclust input.fna cluster tmp --min-seq-id 0.9 -c 0.9 --alignment-mode 3 --db-load-mode 2 --split-memory-limit 2000G; ```. input.fna is 642 GB with approximately 2.5 MM sequences. ## Context. I want to cluster nucleotide genome sequences from NCBI to reduce the burden on similarity search for highly similar / redundant sequences. ## Your Environment; * MMseqs Version: Commit f5f780acd64482cd59b46eae0a107f763cd17b4d (statically-compiled AVX2); * Machine: 128 CPUs, 4 TB RAM, 2 x 1.9 TB NVMe SSD; * Operating system and version: Amazon Linux 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/726:404,load,load-mode,404,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/726,1,['load'],['load-mode']
Performance,"## Expected Behavior. Dear all, my goal is to estimate the abundance of a collection of genes against several samples or reads from metagenomes. The strategy works fine but only if I use proteins instead of nucleotides. I created a toy example downloading two fastq.gz, assembling a bacterial genome with 'shovill' and then predicting proteins with prokka on top of this assembled genome. . For the example I used just 3 proteins (from the file genome.faa) like a collection of genes. Then when I try 3 nucleotide sequences (extracted from the genome.ffn file) it throws me the error copied below. I wanted to fix this since my collection contains nucleotide sequences. . ## Current Behavior. ```; **It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace)**; ```. ## Steps to Reproduce (for bugs). I followed these steps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb genome.faa collection_db; # or mmseqs createdb genome.ffn collection_db; mmseqs cluster collection_db collection_clu temp; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporal; ```. Here are both files ; [genome.ffn.txt](https://github.com/soedinglab/MMseqs2/files/7558993/genome.ffn.txt); [genome.faa.txt](https://github.com/soedinglab/MMseqs2/files/7558994/genome.faa.txt). ## MMseqs Output (for bugs). ```; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/507:776,perform,performed,776,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507,1,['perform'],['performed']
Performance,"## Expected Behavior. Don't crash on envdb when sequence length is less than 12 aa long (for example on `SEGGQDFWL` or `GSSGLISMPRV`). ## Current Behavior. MMseqs2 process crashes on aligning ColabFold envdb every time if input `.fasta` file contains short sequence (this also happens if .fasta file contains more than one sequence). UniRef database is processed every time without issue, crash happens only on envdb processing. ```; align results_700_only_456_fasta_700_5/prof_res ../db_sources/colabfold_envdb_202108_db.idx results_700_only_456_fasta_700_5/tmp/17071544472219224293/pref_0 results_700_only_456_fasta_700_5/tmp/17071544472219224293/aln_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Index version: 16; Generated by: fcf52600801a73e95fd74068e1bb1afb437d719d; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 209335862 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Segmentation fault (core dumped); Error: Alignment died; Traceback (most recent call last):; File ""/home/x/genomic/alphafold2/venv38alphafold2/bin/colabfold_search"", line 8, in <module>; sys.exit(main()); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 180, in main; mmseqs_search(; File ""/home/x/genomic/alphafold2/venv38alphafold2/l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/538:995,load,load-mode,995,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538,1,['load'],['load-mode']
Performance,"## Expected Behavior. Perform contig-taxonomy without raising any error for all the sequences introduced. . ## Current Behavior. The taxonomy is obtained, creating the `report` and `lca_tsv` files, but in the error log there is the following line: . ```; data/04_taxgenes/contigs_tax/1889553110621073458/easy-taxonomy.sh: line 55: 8991 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```; Additionally to the mmseqs output, there is stated sometimes a line saying 'Error filterdb died' without anything else. Additionally, for a subset of the contigs, there is no taxonomy line. Whereas in some cases `mmseqs` correctly states a 'unclassified' line, for others it does not appear. ## MMseqs Output (for bugs). [mmseqs_tax_352069_1.txt](https://github.com/soedinglab/MMseqs2/files/6405462/mmseqs_tax_352069_1.txt). ## Context. I am performing multiple taxonomies for multiple contigs coming from a set of samples. There are some specific cases in which `mmseqs` is able to finish without raising an error. The taxonomy is performed against the GTDB downloaded through the command line you provided (`mmseqs databases`). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * 57de8c8d7b835519990185cbac7a2d841c734f05; * Downloaded locally.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * AVX2 with 250 Gb. ; * Operating system and version: Cluster with UNIX.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447:22,Perform,Perform,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447,3,"['Perform', 'perform']","['Perform', 'performed', 'performing']"
Performance,"## Expected Behavior. Taxonomy database created based on a `seqdb` created from UniProt sequences. ## Current Behavior. Program crashed with `core dumped` error and reports `Error: createbintaxonomy failed`. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; mmseqs createdb ""uniprot_2024_03.fasta"" seqdb; ```; then; ```; mmseqs createtaxdb seqdb tmp ; ```. We attempted to vary `--tax-db-mode`, `--tax-mapping-mode`, and `--threads` parameters but observed the same behavior. Any help would be highly appreciated. We are able to reproduce this issue with a minimal database containing 1000 sequences. ## MMseqs Output (for bugs). ```; > mmseqs createtaxdb seqdb tmp ; createtaxdb seqdb tmp . MMseqs Version: 15.6f452; NCBI tax dump directory; Taxonomy mapping file ; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 48; Verbosity 3. Loading nodes file ... Done, got 2601214 nodes; Loading merged file ... Done, added 79743 merged nodes.; Loading names file ... Done; mmseqs: malloc.c:2379: sysmalloc: Assertion `(old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)' failed.; Aborted (core dumped); Error: createbintaxonomy failed; ```. ## Context. We are trying to create a custom taxonomy database for MSA, such that the resulting .a3m files contain taxonomy information. Is a taxonomy database already available for download for uniprot_2024_03 for similar releases?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU suppo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871:921,Load,Loading,921,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871,2,['Load'],['Loading']
Performance,## Expected Behavior. Using the `--max-seq-length` parameter in `mmseqs linclust` will only return sequences with a length smaller than the setting. ## Current Behavior. Even with the default parameter linclust will return larger sequences (up to 600K nt in my case). Also choosing very large values triggers an integer overflow. ## Steps to Reproduce (for bugs). ```bash; mmseqs linclust foods foods_99 /tmp --cov-mode 0 -c 0.8 --min-seq-id 0.99 --threads 20 --split-memory-limit 250G --max-seq-len 3000000000; ```. ## MMseqs Output (for bugs). ```; ...; Seq. id. threshold 0.99 ; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length -1294967296; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; ...; ```. ## Context. mmseqs version 13.45111. `conda info`:. ```; active environment : metagenomics; active env location : /users/cdiener/miniconda3/envs/metagenomics; shell level : 3; user config file : /users/cdiener/.condarc; populated config files : ; conda version : 4.10.3; conda-build version : not installed; python version : 3.7.8.final.0; virtual packages : __linux=4.15.0=0; __glibc=2.27=0; __unix=0=0; __archspec=1=x86_64; base environment : /users/cdiener/miniconda3 (writable); conda av data dir : /users/cdiener/miniconda3/etc/conda; conda av metadata url : None; channel URLs : https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /users/cdiener/miniconda3/pkgs; /users/cdiener/.conda/pkgs; envs directories : /users/cdiener/miniconda3/envs; /users/cdiener/.conda/envs; platform : linux-64; user-agent : conda/4.10.3 requests/2.26.0 CPython/3.7.8 Linux/4.15.0-121-generic ubuntu/18.04.5 glibc/2.27; UID:GID : 52778:1127; netrc file : None; offline mode : False; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/499:1568,cache,cache,1568,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/499,1,['cache'],['cache']
Performance,"## Expected Behavior. When searching for protein sequences that are already included in a database such as Uniprot or Uniref, MMSeqs2 should retrieve an exact match for almost all the query sequences. ## Current Behavior. Running MMSeqs2 search or easy-search with randomly extracted sequences from Uniref90 against the same Uniref90 database, gives fewer exact matches than for example using Diamond with the same parameters. It seems MMSeqs2 aligns more sequences than Diamond but it misses more exact matches as well. ## Steps to Reproduce (for bugs). * Randomly extract 10,000 sequences from Uniref90 . * Perform a search against Uniref90 with the 10,000 query proteins using MMSeqs2 search with parameters ```-s 4``` and ```--max-seqs 4000``` . * Perform a search against Uniref90 with the same 10,000 query proteins using Diamond blastp with default parameters and ```--max-target-seqs 4000```. * Compare the number of query sequences for which an exact match is retrieved across the two searches (i.e. a query sequence that aligns perfectly against itself). . ## MMseqs Output (for bugs). MMSeqs2 logs: https://gist.github.com/fstrozzi/b21b68aa94bcd9bb5cf19af537975850. ## Context; We were testing MMSeqs2 sensitivity and as a sort of true positive control we realigned some sequences randomly extracted from Uniref90 against the Uniref90, to check how many exact matches we were able to retrieve. We then saw that MMSeqs2 with ```-s 4```, which should match Diamond default (fast) parameters, misses some exact matches. #### MMSeqs2 . * total aligned query sequences: 9994; * exact matches (query sequence aligned with itself in the database): 9496. #### Diamond. * total aligned query sequences: 9975 ; * exact matches (query sequence aligned with itself in the database): 9975. We were also wondering what could be the parameters controlling this behavior and what we could do to improve the best hit search. We also tried to run MMSeqs2 with higher sensitivity (5.7) but the result is very ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91:609,Perform,Perform,609,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91,2,['Perform'],['Perform']
Performance,"## Expected Behavior; ## Current Behavior; Hi I make a databse from uniprotref 100 (/databases/uniprot/uniref/uniref100) and perform mmseqs easy-search. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs easy-search MySeqs.aa UniprotDB alnRes.m8 tmp. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. alnRes.m8 head ; g3521.t1 UniRef100_A0A2V2UU05 0.991 488 4 0 1 488 1 488 0.000E+00 1044; g3521.t1 UniRef100_Q4DIV5 0.989 488 5 0 1 488 1 488 0.000E+00 1043; g3521.t1 UniRef100_Q4DR82 0.987 488 6 0 1 488 1 488 0.000E+00 1041; g3521.t1 UniRef100_K2MZR3 0.928 488 35 0 1 488 1 488 9.437E-322 988. Now I wish to obtain a description from each ID of the second column (similiar to blastdbcmd command to retrieve description form blastdb using a list of ids. It's possible to retrieve the information from each ID?. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/646:125,perform,perform,125,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/646,1,['perform'],['perform']
Performance,## Expected Behavior; Both versions should have the same ROC1 value in our benchmark. . ## Current Behavior; AVX2 performes worse than SSE4.1,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/19:114,perform,performes,114,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/19,1,['perform'],['performes']
Performance,"## Expected Behavior; Expect search return identity value for query sequences. ## Current Behavior. No values (identity) has been returned. ## Steps to Reproduce (for bugs); Data can be found here: ; [link](https://drive.google.com/drive/folders/1-83_3WoHP2J8BtygmDzsfaY6iB8criW3?usp=sharing); ```; # Create MMseqs2 databases; mmseqs createdb gen.fasta gen_db; mmseqs createdb train.fasta train_db. # Perform the search; mmseqs search gen_db train_db result tmp -a -s 7.5; mmseqs convertalis gen_db train_db result result.m8; ```; Use python code to read back results. ```; mmseqs_result = pd.read_csv('./mmseq/result.m8', sep='\t', names=[; 'query', 'target', 'identity', 'alignment_length', ; 'mismatches', 'gap_openings', 'qstart', 'qend', ; 'tstart', 'tend', 'evalue', 'bit_score'; ]); ```; The dataframe is empty. Does this mean there is no identity (0 identity) for my query sequences in target set?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/780:401,Perform,Perform,401,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/780,1,['Perform'],['Perform']
Performance,"## Expected Behavior; Hello Dr. Soeding,; I have been trying to use your program MMSEQs2 to match illumina metagenomic reads against the Refseq proteins database. ; This is the workflow I have followed so far; - create mmseqs db for the target (Refseq here) ; mmseqs createdb RSComplete/*.gz mmseqsRefSeqCompleteDB; - create an index for the target db (in a temp folder ""tmp""); mmseqs createindex RefSeqCompleteDB tmp ; - load the target into memory for repeated searching; mmseqs touchdb mmseqsRefSeqCompleteDB. And then for a set of query files: ; - create mmseqs db for the query file; mmseqs createdb $file $outpath/$querydb; - search against the target db loaded in memory; mmseqs search $outpath/$querydb $db $outpath/$result_db tmp --db-load-mode 3 --threads 2 --max-seqs 25 -s 1 -a -e 1e-5. Is this the correct way of processing multiple searches using mmseqs? Is there any way to speed up searches for large query sets and large database files?. Any information would be greatly appreciated.; Thanking you,. regards,; Dhwani Desai; ## Current Behavior; It does not seem to make a difference to the runtime when I try it with or without the --db-load-mode option. Is there a way to speed up these kinds of repeated searches?; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 73ce3b88754987122b4fc5e69a721beeecd677d0. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; installation (using Git):; git clone h",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214:422,load,load,422,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214,3,['load'],"['load', 'load-mode', 'loaded']"
Performance,"## Expected Behavior; Hello all,. I'm trying to use `clusterupdate` to update a cluster after adding sequences to the database, and then use `createtsv `to convert the results. . My initial database has ~58k sequences. I `cluster` it and then use `clusterupdate` after the database is updated. The database update adds ~63k sequence, and does not remove any old sequences. After that, I use `createtsv` on the updated cluster results. ## Current Behavior; It seems to run smoothly up until I try to use `createtsv`, where I get this error:. ```; Invalid database read for database data file=updatedDB_h, database index=updatedDB_h.index; getData: local id (4294967295) >= db size (122202); ```. ## Steps to Reproduce (for bugs); I attached a .zip with the two input files:; ```; INITIAL_F=query_training.fasta; NEW_F=all_seqs.fasta; ```; [files.zip](https://github.com/soedinglab/MMseqs2/files/7478529/files.zip). 1) Creating the initial database. (58k seq); ```; mmseqs createdb $INITIAL_F initialDB; ```; 2) Performing the clustering.; ```; mkdir tmp; mmseqs cluster initialDB initialDB_clu tmp ; ```; 3) Creating the new database. (the 58k initial seq + 63k new seq. None of the initial sequences were removed.); ```; mmseqs createdb $NEW_F newDB; ```; 4) Performing the cluster update.; ```; mmseqs clusterupdate initialDB newDB initialDB_clu updatedDB updatedDB_clu tmp; ```; 5) Converting the output.; ```; mmseqs createtsv updatedDB updatedDB updatedDB_clu updated.tsv; ```. ## MMseqs Output (for bugs); https://gist.github.com/rtn28/ff93c5dd10514602cb72b10d00f6f769. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `13.45111`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/501:1010,Perform,Performing,1010,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/501,2,['Perform'],['Performing']
Performance,"## Expected Behavior; Hi, I expected that this library would come with a/the conda environment. It's not a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480:492,load,loading,492,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480,1,['load'],['loading']
Performance,"## Expected Behavior; I am clustering billions of protein sequences. I already built the database. I was expecting linclust to run fairly quickly, but it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable fa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/477:381,load,loads,381,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477,1,['load'],['loads']
Performance,"## Expected Behavior; I am trying to generate MSAs by querying uniref50 to uniref30. ## Current Behavior; No output for the expandaln step. ## Steps to Reproduce (for bugs); ```linux; mmseqs createdb uniref50.fasta uniref50QueryDB; sudo vmtouch -t -l -d -w uniref30_2202_db.idx; mmseqs search uniref50QueryDB ../uniref30/uniref30_2202_db res tmp --db-load-mode 2; mmseqs expandaln uniref50QueryDB ../uniref30/uniref30_2202_db res ../uniref30/uniref30_2202_db_aln res_expanded --db-load-mode 2; ```. ## MMseqs Output (for bugs); This is the output for the last step (i.e. expandaln). ```linux; MMseqs Version: 	7b95387f93e38c3911f9188bc702d63ed3194013; Expansion mode 	0; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Max sequence length 	65535; Score bias 	0; Compositional bias 	1; Compositional bias 	1; E-value threshold 	0.001; Seq. id. threshold 	0; Coverage threshold 	0; Coverage mode 	0; Pseudo count mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Expand filter clusters 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	2; Compressed 	0; Threads 	64; Verbosity 	3. Alignment must contain a backtrace.; ```; Alignment must contain a backtrace. appears multiple times in red color. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs Version: 	7b95387f93e38c3911f9188bc702d63ed3194013; Run under a linux server.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/650:351,load,load-mode,351,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/650,2,['load'],['load-mode']
Performance,"## Expected Behavior; I am using mmseqs2 for taxonomy assignment against nt database and I was hoping to have a fast result. ## Current Behavior; Mmseqs2 is running too slow, maybe I need help to optimize my command line. My fasta files have ~300,000 to 1,000,000 sequences. ## Steps to Reproduce (for bugs); To create the database I used the following commands:; wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz; mkdir taxonomy && tar -xxvf taxdump.tar.gz -C taxonomy; blastdbcmd -db nt -entry all -outfmt ""%a %T"" > nt.fna.taxidmapping; mmseqs createdb nt.fna nt.fnaDB ; mmseqs createtaxdb nt.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nt.fna.taxidmapping; mmseqs easy-taxonomy $fasta ~/Programs/databases/nt.fnaDB $fasta_result tmp --search-type 3 --lca-mode 2 --threads 32. ## MMseqs Output (for bugs); MMseqs2 lof file (the run is not finished yet): https://gist.github.com/giantoni/efc6f62f85119a071992f9a6ad82d7b2. ## Context; For now, I just want to separate my metatranscriptome sequences into domain (bacteria, archae, eukaryota). ## Your Environment; I am using a virtual machine with ubuntu 18.04.5 LTS 118 Gb RAM and 32 cores (it does support both AVX2/SSE).; MMseqs2 Version: 12.113e3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/385:196,optimiz,optimize,196,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/385,1,['optimiz'],['optimize']
Performance,"## Expected Behavior; I tried using easy-clust to perform clustering to generate smaller representative subsets from Uniref50 (Uniref40, Uniref 30, Uniref 20, etc.). ## Current Behavior; The clustering dies after a few steps with an Out of Memory Error. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; tmp/5521603387764364218/clu_tmp/3834389364932800683/cascaded_clustering.sh: line 102: 208445 Killed $RUNNER ""$MMSEQS"" prefilter; ""$INPUT"" ""$INPUT"" ""${TMP_PATH}/pref_step$STEP"" ${TMP}; slurmstepd: error: Detected 1 oom_kill event in StepId=16746209.batch. Some of the step tasks have been OOM Killed. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; #SBATCH --output=slurm_mlm.out; #SBATCH -e slurm_mlm.err; #SBATCH -p scavenger-gpu; #SBATCH --gres=gpu:1; #SBATCH --mem=200G; #SBATCH -c 32; mmseqs easy-cluster /hpc/group/naderilab/eleanor/prose/data/uniref50.fasta uniref40 tmp --min-seq-id 0.4 -c 0.8 --cov-mode 1 --split-memory-limi; t 160G --threads 12. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/898:50,perform,perform,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/898,1,['perform'],['perform']
Performance,"## Expected Behavior; I would like to add the taxonomy information to my results database (search with UniRef90 as query). . ## Current Behavior; I get a segfault (see below). ## Steps to Reproduce (for bugs); mmseqs search profile_data /home/db/UniRef90 data_uniref90 tmp -s 4 -c 0.9 --min-seq-id 0.8; mmseqs addtaxonomy /home/db/UniRef90 data_uniref90 data_uniref90_taxa. ## MMseqs Output (for bugs); Loading NCBI taxonomy; Loading nodes file ... Done, got 2279399 nodes; Loading merged file ... Done, added 59566 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Segmentation fault (core dumped). ## Context; I want to add taxonomic information to the db. Eventually I would like to add more metadata, convert to tsv and continue my work in R. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; 12.113e3; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; conda 4.8.5; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; 80 CPU, 423.5 GB remaining memory; * Operating system and version:; Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-45-generic x86_64)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/355:403,Load,Loading,403,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/355,4,['Load'],['Loading']
Performance,"## Expected Behavior; I'm using mmseqs driven by colabfold to search against large db.; ## Current Behavior; When colabfold executing ""search"" step, mmseqs generates ""prefilter"" step, and args are ""--split 0 --split-mode 2 --split-memory-limit 0"", then the split number is set to 3 but smaller than 4. So mmseqs use entire index, which is too large for my memory (64GB). Thus mmseqs avoid using index, which makes searching step very slow.; ## Steps to Reproduce (for bugs); colabfold_search x.fasta ColabFold/Datas/ --use-env 1 --use-templates 0 MSA_200 ; (colabfold_search execute search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 ). ## MMseqs Output (for bugs). MSA_200/qdb exists and will be overwritten; createdb MSA_200/query.fas MSA_200/qdb --shuffle 0 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Database type 	0; Shuffle input database	false; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 0ms; Time for merging to qdb: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 0ms; search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:696,load,load-mode,696,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['load'],['load-mode']
Performance,"## Expected Behavior; MMSeqs search followed by MMSeqs convertalis --format-output ""query,target,pident,nident"" should export the number of identical matches between query and target sequences. ## Current Behavior; MMSeqs always reports the ""nident"" (number of identical residues) value to be 0. ## Steps to Reproduce (for bugs); #Please run bash script below to reproduce error; #!/bin/bash; #download protein sequences from Pyrococcus furiosus; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz. #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/349:778,perform,perform,778,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349,1,['perform'],['perform']
Performance,"## Expected Behavior; Not crashing, with a better error message if this is a user problem. ## Current Behavior; Seg Fault. 90% of profile searches are fine against this database, but others segfault. example below. ## Steps to Reproduce (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2; ```. ## MMseqs Output (for bugs); ```; search profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps individual_results/profiles/CLUSTER_100005_profile /tmp --num-iterations 2 --db-load-mode 2. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	2; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	5.7; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local tempor",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:420,load,load-mode,420,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,2,['load'],['load-mode']
Performance,"## Expected Behavior; Run mmseq search with an array of jobs. ## Current Behavior; As a test, I began with an array of 5 jobs only. 2 of them failed with a different error message. When I run them alone, they work. This behaviour is similar to the issue #239 . ## Steps to Reproduce (for bugs); `sarray -J mmseq --mail-type=ARRAY_TASKS,FAIL commandMMseqs --%=5`; where commandMMseqs contains:; `sbatch command_mmseq2_model.sbatch GCA_018105865.1 GCA_901001135.2` ; `sbatch command_mmseq2_model.sbatch GCA_009193005.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_905160935.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_019095985.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_001703475.1 GCA_901001135.2`. command_mmseq2_model.sbatch contains:; ```; #!/bin/bash; #; #SBATCH -N 1 # nombre de nœuds; #SBATCH -c 20 # nombre de cœurs sur ce meme noeud; #SBATCH --mem 50G # mémoire vive pour l'ensemble des cœurs; #SBATCH -J mmseq. module load system/Miniconda3-4.7.10 ; module load bioinfo/mmseqs2-v13.45111. mmseqs search copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out tmp -s 5.7 --search-type 3 --threads 20 --max-seqs 50 ; mmseqs filterdb mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit --extract-lines 1 ; mmseqs convertalis copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.*[0-9]* &; awk '{if ($3>=0.75 && $4>=300 && $12>=200) print $0}' mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab > mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab.filtered; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; ```. ## MMseqs Output (for bugs); One job fails ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/607:973,load,load,973,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/607,1,['load'],['load']
Performance,"## Expected Behavior; Run rbh using computer clusters.; ## Current Behavior; I am running 'mmseqs rbh' within 1000 jobs in parallel using High-performance computing. But there are always some jobs failed due to different error messages(`STDERR`). ## Steps to Reproduce (for bugs); this is my cmd to run rbh:; ```sh; $ mmseqs rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files; ```; so `$db_name` is a variable and for parallel jobs, it's the element of my name list. ; ## MMseqs Output (for bugs); there are several kinds of `STDERR` files:; ```sh; Could not delete /userfolder/rbh/result/tmp/latest!; ```; or; ```sh; Could not write file tmp/rbh.sh!; ```; and ; ```sh; Failed to execute tmp/rbh.sh with error 26.; ```; Even though the `STDERR` files are different, all `STDOUT` are quite similar: it seems that they all collapse in the middle of the process. The corresponding output is ; ```sh; rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files. MMseqs Version: f05f8c51d6e9c7c0b15fbd533e4b678303f50b3e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; E-value threshold 0.001; Seq. id. threshold 0; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 28; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Lo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/239:143,perform,performance,143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/239,1,['perform'],['performance']
Performance,"## Expected Behavior; Search a query database of translated nucleotides against the PFAM profile database. ## Current Behavior; Segfault when reaching the `search` step (after `extractorfs`). ## Steps to Reproduce (for bugs); ```; module load MMseqs2/10-6d92c-foss-2018b; cd /Pfam/directory/. mmseqs convertmsa Pfam-A.full.gz pfam_msa_db; mmseqs msa2profile pfam_msa_db pfam_profile --match-mode 1; mmseqs createindex pfam_profile tmp -k 6 -s 7. PFAM=""location/of/pfam_profile""; K1M=""location/of/input/fasta""; ORFS=""where/to/save/orfs""; RES=""location/of/final/result"". cd ; mmseqs createdb ${K1M} ${ORFS}; mmseqs search ${ORFS} ${PFAM} ${RES} tmp -k 5 -s 7. module unload MMseqs2/10-6d92c-foss-2018b; ```. ## MMseqs Output (for bugs); ```; Caught signal 11 (Segmentation fault: address not mapped to object at address 0x7f6b77d84270); ==== backtrace (tid: 1754) ====; 0 0x0000000000142e40 __memcpy_ssse3() :0; 1 0x00000000004d8b86 PrefilteringIndexReader::getIndexTable() ???:0; 2 0x00000000004cc0c6 Prefiltering::runSplit() ???:0; 3 0x00000000004cc90d Prefiltering::runSplits() ???:0; 4 0x00000000004cd10d Prefiltering::runMpiSplits() ???:0; 5 0x00000000004c2974 prefilter() ???:0; 6 0x000000000044a7d6 runCommand() ???:0; 7 0x0000000000442d29 main() ???:0; 8 0x0000000000021c05 __libc_start_main() ???:0; 9 0x000000000044a46c _start() ???:0; =================================; tmp/14557808422999051349/searchtargetprofile.sh: line 28: 1754 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""${INPUT}"" ""${2}"" ""${TMP_PATH}/; ```. ## Context; I want to find candidate transcription factors in a non-model organism. By aligning translated bulk RNA-seq reads against Pfam, I hope to get matches against known transcription factor families or DNA binding domains. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: release 10-6d92c-foss-2018b; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/259:238,load,load,238,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259,1,['load'],['load']
Performance,"## Expected Behavior; The analysis finished in minutes on MMSeq2 MSA server using colabfold. ## Current Behavior; Local mmseqs always paused for hours without generating outputs. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I am using `colab_search` which calls `mmseqs` like `search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8`. The query contains 4 amino acid sequences, and each has the length of 493 amino acid. NOTE, when I took off `--split 8`, I also observed that mmseqs halts at certain stage. ## MMseqs Output (for bugs); <pre>; search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8 [93/1999]. MMseqs Version: b768f48f0bd73688b6a68132159a97f7b6310f03; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 2; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 72; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 8; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 10000; Split database 8; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517:470,load,load-mode,470,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517,2,['load'],['load-mode']
Performance,"## Expected Behavior; When performing iterative (profile) search, it would be important to have have a uniform, ""globally valid"" bit score or E-value allowing accurate significance-ranking of all identified targets for a given query. ## Current Behavior; There seems to be separate results ""blocks"" in the output corresponding to targets identified in separate iterations. In each block, hits are properly sorted according to their significance. However, bit scores seems to be in-comparable across result blocks. There can be huge jumps in E-value (and bit score) as we walk down on the list of targets for a query protein. Target proteins with outstanding Bit Score in the example for query WP_148290433.1:; WP_004066529.1 (bit score: 323, previous hit: 94); WP_004069050.1 (bit score: 207, previous hit: 53 ). ## Steps to Reproduce (for bugs). Please run this script for example (comparing Thermococcus litoralis and Pyrococcus furiosus proteins, using 3 iterations); #download protein files; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:27,perform,performing,27,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['perform'],['performing']
Performance,"## Expected Behavior; Whether the option `--k-score 'seq:96,prof:80'` is passed to search or `--k-score seq:96,prof:80`,; `--k-score seq:96,prof:80` is passed internally to prefilter.; ## Current Behavior; When `--k-score 'seq:96,prof:80'` is passed to `mmseqs search`, `--k-score seq:2147483647,prof:2147483647` is passed to prefilter,; and when `--k-score seq:96,prof:80` is passed, `--k-score seq:96,prof:80` is passed.; ## Steps to Reproduce (for bugs); ```; export MMSEQS_CALL_DEPTH=1; SEARCH_PARAM=""--num-iterations 3 --db-load-mode 0 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000""; # or; SEARCH_PARAM=""--num-iterations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000"". mmseqs search ""${BASE}/qdb"" ""${DB1}"" ""${BASE}/res"" ""${BASE}/tmp1"" $SEARCH_PARAM; ```; ## MMseqs Output (for bugs); ### With single-quotation; ```; createdb input.fasta input_script7/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 31ms; Time for merging to qdb: 0h 0m 0s 31ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 145ms; Create directory input_script7/tmp1; search input_script7/qdb uniref30_2302_db input_script7/res input_script7/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000 ; prefilter input_script7/qdb uniref30_2302_db.idx input_script7/tmp1/1006494840762416450/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/759:529,load,load-mode,529,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/759,2,['load'],['load-mode']
Performance,"## Expected Behavior; `mmseqs expandaln` to complete successfully. ## Current Behavior; `mmseqs expandaln` throws this error:. ```; Invalid database read for database data file=/home/user/project/target_DB/target_DB.idx, database index=/home/user/project/target_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. ## Steps to Reproduce (for bugs); All these commands are executed when i run `colabfold_search` and fails on `expandaln`. ```; createdb result_20230419_115721/query.fas result_20230419_115721/qdb --shuffle 0. search result_20230419_115721/qdb /home/user/project/target_DB/target_DB result_20230419_115721/res result_20230419_115721/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:712,load,load-mode,712,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance,"## Intention; I am trying perform an exhaustive all against all search of a large database with sensitivity similar to blast. The database contains approximately 73,000 sequences with an average length around 300 amino acids. Process is killed while reading results with the error swapresults died. . On Linux mint and using MMseqs2 Release 15-6f452. ## output; cahoonlab@lagbb-bcecmint:~$ mmseqs search Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 alnment/alignment tmp --exhaustive-search -s 8; search Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 alnment/alignment tmp --exhaustive-search -s 8 . MMseqs Version: 	78ae2c5b8dba889079745e8013deeb30c3ac8a1a; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	8; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; S",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:26,perform,perform,26,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['perform'],['perform']
Performance,"## Steps to Reproduce (for bugs); All these commands are executed when i run `colabfold_search` and fails on `expandaln`. ```; createdb result_20230419_115721/query.fas result_20230419_115721/qdb --shuffle 0. search result_20230419_115721/qdb /home/user/project/target_DB/target_DB result_20230419_115721/res result_20230419_115721/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:1369,load,load-mode,1369,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance,"##Command; mmseqs createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file nr.fna.taxidmapping. ## Current Behavior; Create directory tmp; createtaxdb nr.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file ../../taxdb/nr.fna.taxidmapping. MMseqs Version: 5daca424b162cc5fdf0b9cd151aebed86975cbf6; NCBI tax dump directory taxonomy/; Taxonomy mapping file ../../taxdb/nr.fna.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 12; Verbosity 3. Loading nodes file ... Done, got 2317712 nodes; Loading merged file ... Done, added 62177 merged nodes.; Loading names file ... Done; Init RMQ ...Done; tmp/createindex.sh: line 102: 25801 Killed awk 'NR == FNR { f[$1] = $2; next } $2 in f { print $1""\t""f[$2] }' ""$MAPPINGFILE"" ""${TAXDBNAME}.lookup"" > ""${TAXDBNAME}_mapping""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/431:473,Load,Loading,473,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/431,3,['Load'],['Loading']
Performance,"% 4.0[=================================================================] 100.00% 4.00K 0s 55ms; Time for merging to query_seqs_h: 0h 0m 0s 10ms; Time for merging to query_seqs: 0h 0m 0s 19ms; Time for processing: 0h 0m 0s 164ms; splitsequence tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 72 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 1ms; prefilter tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs_split /home/kabru/datenbank/silvadb.idx tmp/14943602774421092333/tmp_hsp1/7440312624435503015/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 72 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 14G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; [> ] 0.00% 1 et[> ] 1.00% 81 e[> ] 1.03% 83 e[> ] 1.01% 82 e[> ] 1.04% 84 e[> ] 1.05% 85 e[=> ] 2.05% 165 [=> ] 3.05% 245 [==> ] 4.05% 325 [===> ] 5.05% 405 [===> ] 6.05% 485 [====> ] 7.05% 565 [=====> ] 8.05% 645 [=====> ] 9.05% 725 [======> ] 10.05% 805[=======> ] 11.05% 885[=======> ] 12.05% 965[========> ] 13.05% 1.0[=========> ] 14.05% 1.1[=========> ] 15.05% 1.2[========",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:89299,load,load-mode,89299,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,1,['load'],['load-mode']
Performance,"'489!@!@1075807****147549'`. ## Current Behavior. The first two commands result in two different databases:. `wc -l test1`; 15447 test1. `wc -l test2`; 32 test2. The third command runs without issuing any warning (it effectively does nothing to the database). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1. Download a small NCBI-like taxonomy database **swissProtSomeClasses** from [here](https://github.com/soedinglab/metaeuk-regression/tree/master/sacc_tax); 2. Run the commands above. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you exper",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/320:1375,Load,Loading,1375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320,2,['Load'],['Loading']
Performance,"(step 1 of 1); Query db start 1 to 20942; Target db start 1 to 20942; [=================================================================] 20.94K 0s 928ms. 1.256278 k-mers per position; 118 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 8 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 51ms; Time for processing: 0h 0m 6s 669ms; align ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/pref_step0 ./mmseqs_output/tmp/5351426679731834765/aln_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 20942 type: Aminoacid; Target database size: 20942 type: Aminoacid; Calculation of alignments; [=================================================================] 20.94K 15s 380ms; Time for merging to aln_step0: 0h 0m 0s 75ms; 172065 alignments calculated; 67554 sequence pairs passed the thresholds (0.392607 of overall calculated); 3.225766 hits per query sequence; Time for processing: 0h 0m 16s 166ms; clust ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/aln_step0 ./mmseqs_output/tmp/5351426679731834765/clu_step0 --clust",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:21624,load,load-mode,21624,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 23ms; [==========================================================> ] 89.54% 138 eta 0s; 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 795ms; align clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/pref_step0 clu/sim2_tmp/12164117771218227067/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 46ms; Time for merging to aln_step0: 0h 0m 0s 4ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 72ms; clust clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/aln_step0 clu/sim2_tmp/12164117771218227067/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=====",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:30041,load,load-mode,30041,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,* Modified workflow shell scripts to remove hash-named temporary directory ~and symbolic link~ (revoked considering concurrent modification issue),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/555:116,concurren,concurrent,116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/555,1,['concurren'],['concurrent']
Performance,* Modified workflow source codes to assign `latest` symbolic link to variable `$LATEST`; * Modified workflow shell scripts to remove hash-named temporary directory ~and symbolic link~ (concurrent modification issue),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/551:185,concurren,concurrent,185,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/551,1,['concurren'],['concurrent']
Performance,"*Sorry if this is not the correct place to ask!* ; ; I want to use MMseqs2 to find diverse homolgous sequences on which I can then run global MSA alignment. ; I have a bunch of questions after experimenting a bit. ; ; 1. What is the correct way to filter search results? When using 'mmseqs search', why don't the profile filtering options such as --diff or --max-seq-id etc. get applied? ; I'm running: ; `SEARCH_PAR=""--db-load-mode 2 --num-iterations 3 --sort-results 1 -e 0.001 --filter-msa 1 -c 0.75 --cov-mode 2 --max-seq-id 0.9""` ; `mmseqs search queryDB targetDB result_alnDB tmp ${SEARCH_PAR}` ; result_alnDB contains sequences above 0.9 sequence identity to the query. ; To apply filtering I run mmseqs filterresult after my search: ; `mmseqs filterresult queryDB targetDB result_alnDB filtered_alnDB tmp --max-seq-id 0.9` ; ; 2. How does the --diff flag work? The help says it selects the n most diverse sequences in blocks of 50. I would expect --diff 50 to not apply any filtering. ; ; 3. What score does the --qsc flag work on? What does the score range [-50.0,100.0] mean? ; ; 4. What does applying filter buckets with the --qid flag do? I would expect it to return an equal number of hits per bucket. ; ; After searching (and filtering results) I would like to return an unaligned fasta file. ; I do this with: ; `mmseqs createseqfiledb targetDB result_alnDB fastaDB` ; `mmseqs result2flat targetDB targetDB fastaDB fasta_results.fa --use-fasta-header 1`; I subsequently split that file whenever two consecutive lines begin with '^>'. ; ; 5. Why does createseqfiledb create files ending in 0-95 ? How do they belong together? ; ; 6. I originally expect to return fasta output with convert2fasta but that module complains that it needs header information. Running createsubdb before that only returns the representative sequences instead of all results. ; ; 7. Is there a way to add the original query sequence to my fasta output in mmseqs? ; ; Thanks for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/642:423,load,load-mode,423,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/642,1,['load'],['load-mode']
Performance,", so I think this is the place to ask. Unexpected observations:. 1. running mmseqs locally on our cluster is much slower than the responses we get from the colabfold server for equivalent inputs; 2. mmseqs search speed does not scale at all with added threads or added physical cores, for small inputs (1-2 sequences) - is this expected? Will it only speed up with large input count?. Welcoming any input! Many thanks!. ## Expected Behavior; Runtime of mmseqs2 for a given input similar to response time from the colabfold server. ## Current Behavior; Considerably slower. For a given input (~250 aa) the server gives a full result in 20-30s, paired + unpaired reads (so, including at least 1 search each against uniref30 and colabfold_envdb, plus a number of expandaln / align calls).; The local version takes 60-90 seconds to run just the initial mmseqs search against uniref30, when using vmtouch and db load mode 2, and ~300 seconds against colabfold_envdb. Db load mode 3 somewhat slower, db load mode 0 and 1 much slower as expected.; Index was created without splits. The mmseqs search step is timed after vmtouch and other preparations are complete. The runtime is independent of either thread count or number of cpus provided.; Splitting the target db index 2 4 8 or 16-fold and running in parallel with MPI does not speed it up either (slightly slows down). Placing the entire run directory fast SSD or RAM (/dev/shm) does not change the speed.; This happens with the docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLTWQGLIVPDNPPYDKGAFRIEINFPAEYPFKPPKITFKTKIYHPNIDEKGQVCLPVISAENWKPATKTDQVIQSLIALVNDPQPEHPLRADLAEEYSKDRKKFCKNAEEFTKKYGEKRPVD; >Ub; MQIFVKTLTGKTITL",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:1108,load,load,1108,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,2,['load'],['load']
Performance,", using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 -s 2.0. Query database size: 960 type: Nucleotide; Estimated memory consumption: 1T; Target database size: 26422067 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [> ] 0.00% 1 eta -. tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statica",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/697:2493,load,load-mode,2493,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697,1,['load'],['load-mode']
Performance,"- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.1 extensions, using flags: -march=native -msse4.1 -mfpmath=sse; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /galaxy/home/ksahlin/prefix/source/MMseqs2/build; [ksahlin@desmond build]$ make; Scanning dependencies of target cacode; make[2]: Warning: File 'lib/cacode/CMakeFiles/cacode.dir/depend.make' has modification time 0.00048 s in the future; [ 0%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; make[2]: warning: Clock skew detected. Your build may be incomplete.; [ 1%] Built target cacode; Scanning dependencies of target alp; [ 1%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 1%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 2%] Building CX",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:1974,Perform,Performing,1974,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,6,['Perform'],['Performing']
Performance,"- [x] needs a git submodule of https://github.com/nemequ/simde/ or cmake magic to pull that down; - [x] isnan on clang 10 https://github.com/nemequ/simde/issues/282; - [x] ISO C++ does not allow C99 designated initializers https://github.com/nemequ/simde/issues/287; - [x] ISO C++ forbids compound-literals https://github.com/nemequ/simde/issues/288; - [x] macOS clang, AppleClang 11.0.0.11000033, [has a weird compile error](https://dev.azure.com/themartinsteinegger/edc8daa1-9e01-4171-b135-27e374460be3/_apis/build/builds/592/logs/23) Fixed by upgrading to macOS 11.05 AppleClang 11.0.3.11030032; - [x] GCC+ASan crashes with an [internal error somewhere completely random](https://dev.azure.com/themartinsteinegger/mmseqs2/_build/results?buildId=609&view=logs&j=ab24d926-1cfd-5268-5232-547307163af3&t=f30e022a-6aef-58fb-62a5-07e89b64b206&l=749) https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=961011; - [x] arm64 performance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309:917,perform,performance,917,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309,1,['perform'],['performance']
Performance,"- adds module taxonomyreport for Kraken-style taxonomy report; - add parameter --taxLineage to par.lca for lca, taxonomy and addtaxonomy. Currently this means there is a variable number of fields in the output, which isn't optimal; - refactored NcbiTaxonomy:; - does not load delnodes.dmp anymore. When a taxon that was seen in a report is not in the taxDB, it could be either through ; - get rid of two maps; instead D is vector mapping TaxID to internal ID; - use TaxID type to better distinguish interal IDs and taxIDs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/197:271,load,load,271,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/197,1,['load'],['load']
Performance,"--ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 ; [=================================================================] 292.14M 2m 8s 805ms; Time for merging to pref_rescore1: 0h 2m 40s 361ms; Time for processing: 0h 5m 54s 815ms; clust /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 96 --compressed 0 -v 3 ; Clustering mode: Greedy; Total time: 0h 1m 7s 208ms; Size of the sequence database: 292137902; Size of the alignment database: 292137902; Number of clusters: 245753321; Writing results 0h 1m 30s 550ms; Time for merging to pre_clust: 0h 1m 31s 28ms; Time for processing: 0h 5m 19s 116ms; createsubdb /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/order_redundancy /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/input",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:3243,load,load-mode,3243,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,1,['load'],['load-mode']
Performance,"--max-seq-id 1.0 --filter-min-enable 100. # Convert UniRef results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign_filter outdir/uniref.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Environmental search; mmseqs search outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env outdir/tmp/env --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Expand and align environmental results; mmseqs expandaln outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp -e inf --expansion-mode 0 --db-load-mode 1 --threads 4. mmseqs align outdir/tmp/env/latest/profile_1 /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp outdir/res_env_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter environmental results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign outdir/res_env_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --max-seq-id 1.0 --threads 4 --filter-min-enable 100. # Convert environmental results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign_filter outdir/env.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Merge results; mmseqs mergedbs queryDB outdir/final.a3m outdir/uniref.a3m outdir/env.a3m. # Unpack results; mmseqs unpackdb outdir/final.a3m outdir --unpack-name-mode 0 --unpack-suffix .a3m; ```; As it stands, I am not converting from DB to a3m until after the filter (with",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:2435,load,load-mode,2435,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326,1,['load'],['load-mode']
Performance,"--reverse-frames 1 --threads 8 --compressed 0 -v 3 ; ; =[===============================================================] 10 0s 1ms; =Time for merging into tmp/274686171214568767/query_seqs_h by mergeResults: 0h 0m 0s 0ms; Time for merging into tmp/274686171214568767/query_seqs by mergeResults: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 6ms; splitsequence tmp/274686171214568767/query_seqs tmp/274686171214568767/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --threads 8 --compressed 0 -v 3 ; ; Time for processing: 0h 0m 0s 1ms; prefilter tmp/274686171214568767/query_seqs_split tmp/274686171214568767/target_seqs_split tmp/274686171214568767/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 4G -c 0.99 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 2.0 ; ; Query database size: 20 type: Nucleotide; Error: Prefilter died; Error: Search step died. Command error:; Cannot fit databased into 4G. Please use a computer with more main memory.; ```. fasta file content is:; ```; >1; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >2; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >3; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATTTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >4; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATGTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >5; CCATGCGTAGAGCTAACGAGCCAGCGGAAAGCGTGAGGCGCTTTTAAGCATGGCGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTAGGTTCG; >6; CCATGCGTAGAGCTTACGAGCCAGCGGAAAGCGTGAGGCGCTATTAAGCATGGGGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTACGTTCG; >7",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/253:3328,load,load-mode,3328,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253,1,['load'],['load-mode']
Performance,"--use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | [=================================================================] 1 0s 5ms; mmseqs-web-worker_1 | Time for merging to q_orfs_aa_h: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for merging to q_orfs_aa: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 6ms; mmseqs-web-worker_1 | prefilter /opt/mmseqs-web/jobs/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g/tmp/5203697948948418300/search_tmp/10674843733463968173/q_orfs_aa /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g/tmp/5203697948948418300/search_tmp/10674843733463968173/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 5.7 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: VTML80.out; mmseqs-web-worker_1 | Query database size: 0 type: Aminoacid; mmseqs-web-worker_1 | split was set to 1 but the db to split has only 0 sequences. Please run with default paramerters; mmseqs-web-worker_1 | Error: Prefilter died; mmseqs-web-worker_1 | Error: Search step died; mmseqs-web-worker_1 | Error: Search died; mmseqs-web-worker_1 | 2022/09/22 23:04:37 Execution Error: exit status 1; mmseqs-web-api_1 | 172.17.0.4 - - [22/Sep/2022:23:04:38 +0000] ""GET /ticket/2_V_MA3apsJrv4zAPrfZqMF1rM88nxIsLoPD9g HTTP/1.0"" 200 65; ```. This is the healthy state:; ```; mmseqs-web-api_1 | 172.17.0.4 - - [22/Se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:19726,load,load-mode,19726,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['load'],['load-mode']
Performance,"-comparable across result blocks. There can be huge jumps in E-value (and bit score) as we walk down on the list of targets for a query protein. Target proteins with outstanding Bit Score in the example for query WP_148290433.1:; WP_004066529.1 (bit score: 323, previous hit: 94); WP_004069050.1 (bit score: 207, previous hit: 53 ). ## Steps to Reproduce (for bugs). Please run this script for example (comparing Thermococcus litoralis and Pyrococcus furiosus proteins, using 3 iterations); #download protein files; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:1447,perform,perform,1447,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['perform'],['perform']
Performance,"-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/1646423069375616632",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:2863,load,load-mode,2863,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance,"-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_2 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-m",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:7279,load,load-mode,7279,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['load'],['load-mode']
Performance,"-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s 620ms; Time for processing: 5h 43m 57s 88ms; rescorediagonal inDB inDB tmp/18375844090983922724/pref tmp/18375844090983922724/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 ; -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 160 --compressed 0 -v 3. [=================================================================] 100.00% 2.83B 1h 11m 50s 841ms. [=================================================================] ; .; .; .; 100.00% 1.00M 0s 440ms; [=================================================================] 100.00% 1.00M 0s 541ms; [=================================================================] 100.00% 1.00M 0s 501ms; [=================================================================] 100.00% 1.00M 0s 455ms; [=================================================================] 100.00% 1.00M 0s 609ms; [=================================================================] 100.00% 1.00M 0s 536ms; [=================================================================] 100.00% 1.00M 0s 626ms; [=================================================================] 100.00% 1.00M 0s 591ms; [=================================================================] 100.00% 1.00M 0s 572ms;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:3299,load,load-mode,3299,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311,1,['load'],['load-mode']
Performance,"-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1831648 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 1.83M 2m 36s 559ms. Adjusted k-mer length 17; Sort kmer 0h 0m 33s 753ms; Sort by rep. sequence 0h 0m 2s 503ms; Time for fill: 0h 0m 4s 992ms; Time for merging to pref: 0h 0m 0s 10ms; Time for processing: 0h 4m 21s 927ms; rescorediagonal 1831648_seqs.mmseqs2db 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref tmp/16479300059278292880/linclust/10067396915876818640/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.85 -a 0 --cov-mode 0 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 112 --compressed 0 -v 3 . [=================================================================] 1.83M 10s 370ms; Time for merging to pref_rescore1: 0h 0m 0s 781ms; Time for processing: 0h 0m 21s 118ms; clust 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref_rescore1 tmp/16479300059278292880/linclust/10067396915876818640/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Set Cover; [=================================================================] 1.83M 0s 184ms; Sort entries; Find missing connections; Found 1239487 new connections.; Reconstruct initial order; [=================================================================] 1.83M 0s 214ms; Add missing connections; [=================================================================] 1.83M 0s 85ms. Time for read in: 0h 0m 1s 30ms; Total time: 0h 0m 1s 209ms. Size of th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:5486,load,load-mode,5486,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['load'],['load-mode']
Performance,"-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_1 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:4012,load,load-mode,4012,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['load'],['load-mode']
Performance,". Needed memory (1384664272 byte) of total memory (365681509171 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; .............; Time for fill: 0 h 0 m 2s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 3s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 2s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 9s; Rescore diagonals.; Program call:; panproteome.db panproteome.db /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.5 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Rescore mode 	0; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.5; Include identical Seq. Id. 	false; Threads 	36; Verbosity 	3. Query file: panproteome.db; Target file: panproteome.db; Prefilter database: /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref; Result database: /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref_rescore1; ...................................................................................................	1 Mio. sequences processed; .............Done.; Time for merging files: 0 h 0 m 1 s; Time for diagonal calculation: 0 h 0 m 3s; Program call:; panproteome.db /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref_rescore1 /tmp/clu//9559457551393989073/linclust/16641318581476709947/pre_clust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 36 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:24850,perform,performs,24850,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['perform'],['performs']
Performance,". You can use gist.github.com for large output. ## Context; I am getting error when running ; mmseqs search mmseqs_U90_out/mmseqs-81_queryDB ../MH2_mappingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $conda create --prefix /project/winter_pea_endophytes_2022/MMseqs; $source activate /project/winter_pea_endophytes_2022/MMseqs; $conda install -c conda-forge -c bioconda mmseqs2; and run it as environment; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/689:1290,load,load-mode,1290,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689,1,['load'],['load-mode']
Performance,"...............................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ................................................; Time for fill: 0 h 0 m 14s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 4s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 2s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 2 s; Time for processing: 0 h 0 m 23s; Rescore diagonals.; Program call:; panproteome.db panproteome.db tmp/425628692068579862/linclust/13628666274102407548/pref tmp/425628692068579862/linclust/13628666274102407548/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 10 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Rescore mode 	0; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; Threads 	10; Verbosity 	3. Query file: panproteome.db; Target file: panproteome.db; Prefilter database: tmp/425628692068579862/linclust/13628666274102407548/pref; Result database: tmp/425628692068579862/linclust/13628666274102407548/pref_rescore1; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ................................................Done.; Time for merging files: 0 h 0 m 3 s; Time for diagonal calculation: 0 h 0 m 8s; Program call:; panproteome.db tmp/425628692068579862/linclust/13628666274102407548/pref_rescore1 tmp/425628692068579862/linclust/13628666274102407548/pre_clust --cluster-mode 0 -v 3 --max-iter",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:96878,perform,performs,96878,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['perform'],['performs']
Performance,.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## conda info. ```; active environment : plass; active env location : /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass; shell level : 1; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.5.11; conda-build version : 3.11.0; python version : 3.6.5.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://repo.anaconda.com/pkgs/pro/linux-64; https://repo.anaconda.com/pkgs/pro/noarch; https://conda.anaconda.org/leylabmpi/linux-64; https://conda.anaconda.org/leylabmpi/noarch; https://conda.anaconda.org/r/linux-64; https://conda.anaconda.org/r/noarch; https://conda.anaconda.org/qiime2/linux-64; https://conda.anaconda.org/qiime2/noarch; package cache : /ebio/abt3_projects/software/dev/miniconda3_dev/pkgs; /ebio/abt3/nyoungblut/.conda/pkgs; envs directories : /ebio/abt3_projects/software/dev/miniconda3_dev/envs; /ebio/abt3/nyoungblut/.conda/envs; platform : linux-64; user-agent : conda/4.5.11 requests/2.18.4 CPython/3.6.5 Linux/4.9.127 ubuntu/18.04 glibc/2.27; UID:GID : 6354:350; netrc file : None; offline mode : False; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:7095,cache,cache,7095,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['cache'],['cache']
Performance,".6,0.8,1.0 --qsc 0 --max-seq-id 0.95""; EXPAND_PARAM=""--expansion-mode 0 -e ${EXPAND_EVAL} --expand-filter-clusters ${FILTER} --max-seq-id 0.95""; mkdir -p ""${BASE}""; mkdir -p ""${BASE}""; ""${MMSEQS}"" createdb ""${QUERY}"" ""${BASE}/qdb""; ""${MMSEQS}"" search ""${BASE}/qdb"" ""${DB1}"" ""${BASE}/res"" ""${BASE}/tmp1"" $SEARCH_PARAM; ""${MMSEQS}"" mvdb ""${BASE}/tmp1/latest/profile_1"" ""${BASE}/prof_res""; ""${MMSEQS}"" lndb ""${BASE}/qdb_h"" ""${BASE}/prof_res_h""; **mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124** ; # I got stucked at the above command. **next I am gonna do** ; ""${MMSEQS}"" align ""${BASE}/prof_res"" ""${DB1}.idx"" ""${BASE}/res_exp"" ""${BASE}/res_exp_realign"" --db-load-mode 2 -e ${ALIGN_EVAL} --max-accept ${MAX_ACCEPT} --alt-ali 10 -a; ""${MMSEQS}"" filterresult ""${BASE}/qdb"" ""${DB1}.idx"" ""${BASE}/res_exp_realign"" ""${BASE}/res_exp_realign_filter"" --db-load-mode 2 --qid 0 --qsc $QSC --diff 0 --max-seq-id 1.0 --filter-min-enable 100. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; $ time mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124; expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124 . MMseqs Version: 	GITDIR-NOTFOUND; Expansion mode 	0; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Max sequence length 	65535; Score bias 	0; Compositional bias 	1; Compositional bias 	1; E-value threshold 	inf; Seq. id. threshold 	0; Coverage threshold 	0; Coverage mode 	0; Pseud",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:2375,load,load-mode,2375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['load'],['load-mode']
Performance,".8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 127 0s 5ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms=====> ] 78.57% 100 eta 0s; Time for processing: 0h 0m 0s 27ms; align tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore2 tmp//7897776346521331899/linclust/17269245559208916342/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 127 type: Aminoacid; Target database size: 127 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 127 0s 17ms; Time for merging to aln: 0h 0m 0s 1ms; 130 alignments calculated; 130 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.023622 hits per query sequence; Time for processing: 0h 0m 0s 57ms; clust tmp//7897776346521331899/linclust/17269245559208916342/input_step_redundancy tmp//7897776346521331899/linclust/17269245559208916342/aln tmp//7897776346521331899/linclust/17269245559208916342/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compre",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:8675,load,load-mode,8675,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['load'],['load-mode']
Performance,".; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-cond",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:34846,Load,Loaded,34846,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,".done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/lib",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:34183,Load,Loaded,34183,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,".out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 35.67M 9s 733ms; Time for merging to pref_rescore2: 0h 0m 12s 355ms; Time for processing: 0h 0m 38s 935ms; align All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore2 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 56 --compressed 0 -v 3 . Compute score and coverage; Query database size: 35665237 type: Aminoacid; Target database size: 35665237 type: Aminoacid; Calculation of alignments; [=================================================================] 35.67M 7m 56s 191ms; Time for merging to aln: 0h 0m 12s 23ms; 118495359 alignments calculated; 45078108 sequence pairs passed the thresholds (0.380421 of overall calculated); 1.263923 hits per query sequence; Time for processing: 0h 8m 32s 609ms; clust All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/aln All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/clust --cluster-mode 2 --max-iterations 1000 --simil",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:9239,load,load-mode,9239,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['load'],['load-mode']
Performance,"/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 15.11M 1s 487ms; Time for merging to pref_count.tsv: 0h 0m 4s 788ms; Time for processing: 0h 0m 11s 535ms; align /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 15106287 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.11M 1h 57m 11s 538ms; Time for merging to aln: 0h 0m 19s 511ms. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:11519,load,load-mode,11519,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['load'],['load-mode']
Performance,"/4509971647793470292/pref_filter1 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_filter2 --filter-file DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 417 0s 17ms; Time for merging to pref_filter2: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 37ms; rescorediagonal DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_filter2 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================================] 417 0s 10ms; ==Time for merging to pref_rescore2: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 52ms; align DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore2 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compresse",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:7551,load,load-mode,7551,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['load'],['load-mode']
Performance,"/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration step might appear well superior to a target found in the first iteration. See target WP_004066529.1 and WP_084684326.1 for query WP_148290433.1 as examples. Other ""goodness of alignment"", confirms that target from the first search iteration is indeed better thus bit score from the profile search iteration might be biased (overestimated). It would be important to rank all hits of a query based on a globally valid",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:2216,perform,perform,2216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['perform'],['perform']
Performance,"/clu_step1 tmpfiles//13298481167543164943/clu_step2. Clustering step 1; [=================================================================] 276 0s 7ms; Clustering step 2; [=================================================================] 237 0s 23ms; Clustering step 3; [=================================================================] 218 0s 41ms; Clustering step 4; [=================================================================] 200 0s 62ms; Write merged clustering; [=================================================================] 303 0s 66ms; Time for merging to clu: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 112ms; align DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu tmpfiles//13298481167543164943/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 303 type: Aminoacid; Target database size: 303 type: Aminoacid; Calculation of alignments; [=================================================================] 200 0s 16ms; Time for merging to aln: 0h 0m 0s 3ms. 303 alignments calculated.; 293 sequence pairs passed the thresholds (0.966997 of overall calculated).; 1.465000 hits per query sequence.; Time for processing: 0h 0m 0s 71ms; subtractdbs tmpfiles//13298481167543164943/clu tmpfiles//13298481167543164943/aln tmpfiles//13298481167543164943/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. subtractdbs tmpfiles//13298481167543164943/clu tmpfiles//13298481167543164943/aln tmpfiles//13298481167543164943/clu_not_accepted --e-profile 100000000",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:24252,load,load-mode,24252,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['load'],['load-mode']
Performance,"/ephemeral//9711778946736545179/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 6 0s 21ms; Time for merging to orfs_aa_h: 0h 0m 0s 276ms; Time for merging to orfs_aa: 0h 0m 0s 415ms; Time for processing: 0h 0m 1s 438ms; prefilter /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_aa ../../../../resources/GTDB/mmseqs_gtdb/GTDB /rds/general/ephemeral/user/ephemeral//9711778946736545179/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 5696 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 124G; Target database size: 106052079 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 35.35M 7m 55s 640ms; Index table: Masked residues: 89908004; Index table: fill; [===> ] 5.00% 1.77M eta 4h 48m 2s; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 13.45111; * Which MMseqs version was used (Statically-compiled, self-compi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/479:4275,load,load-mode,4275,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479,1,['load'],['load-mode']
Performance,"/mmseqs...(no debugging symbols found)...done.; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:33699,Load,Loaded,33699,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,"/mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned -v 3 . Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 28ms; createsubdb ./mmseqs_output/tmp/5351426679731834765/clu ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/seq_seeds -v 3 . Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 16ms; prefilter ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned ./mmseqs_output/tmp/5351426679731834765/seq_seeds.merged ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 26229 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 34414 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 34.41K 1s 394ms; Index table: Masked residues: 8741; Index table: fill; [=================================================================] 34.41K 1s 378ms; Index statistics; Entries: 6295744; DB size: 524 MB; Avg k-mer size: 0.098371; Top 10 k-mers; DVLDMP 2320; PDVMRM 1368; DRQVAY 1181; PFPEAR 738; MPLGAT 728; MPMGAT 703; GQQVAR 620; ADYTFS 597; LTFLYV 568; VLLALS 518; Time for index table init: 0h 0m 4s 142ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 26229; Target",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:37975,load,load-mode,37975,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/first /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1 --alignment-mode 1 -e 1e-05 --max-rejected 5 --max-accept 30 --threads 8 -s 6 --max-seqs 200 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --num-iterations 2 --start-sens 1 --sens-steps 3 --lca-search 1. prefilter /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target split mode. Searching through 16 splits; Estimated memory consumption: 8G; Target database size: 41195879 type: Aminoacid; Process prefiltering step 1 of 16. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 16); Query db start 1 to 1075; Target db start 1 to 2572505; [=================================================================] 1.08K 2s 989ms. 390.206187 k-mers per position; 423278 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 25 sequences passed prefiltering per query sequence; 26 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:4640,load,load-mode,4640,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,1,['load'],['load-mode']
Performance,"/pref_filter2 --filter-file /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/order_redundancy --threads 8 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 11.80K 0s 11ms ; Time for merging to pref_filter2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 19ms; rescorediagonal /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_filter2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 8 --compressed 0 -v 3 . Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 11.80K 0s 9ms ; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 23ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:10460,load,load-mode,10460,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"0 -c 0 --max-seq-len 65535 --pick-n-sim-kmer 1 --split-memory-limit 0 --threads 64 --compressed 0 -v 3 . Estimated memory consumption 4 MB; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Process file into 1 parts; Generate k-mers list 0; [=================================================================] 14.93K 0s 32ms. Time for fill: 0h 0m 0s 35ms; Sort kmer ... Time for sort: 0h 0m 0s 39ms; Time to find k-mers: 0h 0m 0s 608ms; Time to sort: 0h 0m 0s 0ms; Time for merging into tmp/2730103712073724212/search/pref by mergeResults: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 729ms; rescorediagonal /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/pref tmp/2730103712073724212/search/reverse_ungapaln --sub-mat nucl:nucleotide.out; ,aa:blosum62.out --rescore-mode 2 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed; 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; [=================================================================] 323 0s 253ms; Time for merging into tmp/2730103712073724212/search/reverse_ungapaln by mergeResults: 0h 0m 0s 177ms; Time for processing: 0h 0m 0s 855ms; filterdb tmp/2730103712073724212/search/pref tmp/2730103712073724212/search/pref_filter --filter-file tmp/2730103712073724212/search/reverse_ungapaln --positive-filter 0 . Filtering with filter files.; [=================================================================] 323 0s 12ms; Time for merging into tmp/2730103712073724212/search/pref_filter by mergeResults: 0h 0m 0s 171ms; Time for processing: 0h 0m 0s 397ms; align /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/pref_filter tmp/2730103712073724212/search/reverse_aln --sub-mat nucl:nucleotide.out,aa:blos; um62.out ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:3687,load,load-mode,3687,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,1,['load'],['load-mode']
Performance,"0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescore-mode 0 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	10; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:3409,perform,performs,3409,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['perform'],['performs']
Performance,"0 sequences passed prefiltering per query sequence; mmseqs-web-worker_1 | 0 median result list length; mmseqs-web-worker_1 | 2 sequences with 0 size result lists; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Time for prefiltering scores calculation: 0h 0m 0s 1ms; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 2ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/search/pref_0 /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/aln --sub-mat blosum62.out -a 1 --alignment-mode 3 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Compute score, coverage and sequence identity; mmseqs-web-worker_1 | Query database size: 2 type: Nucleotide; mmseqs-web-worker_1 | Target database size: 117752 type: Nucleotide; mmseqs-web-worker_1 | Calculation of alignments; [=================================================================] 100.00% 0.02 0s 0ms ] 0.00% 0.01 eta -; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | 0 alignments calculated.; mmseqs-web-worker_1 | 0 sequence pairs passed the thresholds (-nan of overall calculated).; mmseqs-web-worker_1 | 0.00000",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:9513,load,load-mode,9513,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['load'],['load-mode']
Performance,"00000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; --Type <RET> for more, q to quit, c to continue without paging--c; #7 0x0000000000964ff3 in clone (). Thread 28 (LWP 7928 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 27 (LWP 7927 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:4689,optimiz,optimized,4689,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 11ms ] 54.55% 151 eta 0s; Time for processing: 0h 0m 0s 54ms; align tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/pref_rescore2 tmp//538598962955004214/linclust/16628284907041385511/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 97ms; Time for merging to aln: 0h 0m 0s 9ms; 276 alignments calculated; 276 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 117ms; clust tmp//538598962955004214/linclust/16628284907041385511/input_step_redundancy tmp//538598962955004214/linclust/16628284907041385511/aln tmp//538598962955004214/linclust/16628284907041385511/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compress",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:8421,load,load-mode,8421,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['load'],['load-mode']
Performance,"01 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 276 0s 8ms; Time for merging to pref_rescore2: 0h 0m 0s 2ms ] 16.00% 45 eta 0s; Time for processing: 0h 0m 0s 37ms; align tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore2 tmp//10798751672030653963/linclust/5052420726377277994/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 64ms; Time for merging to aln: 0h 0m 0s 5ms; 276 alignments calculated; 276 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 80ms; clust tmp//10798751672030653963/linclust/5052420726377277994/input_step_redundancy tmp//10798751672030653963/linclust/5052420726377277994/aln tmp//10798751672030653963/linclust/5052420726377277994/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compre",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:8550,load,load-mode,8550,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['load'],['load-mode']
Performance,"073724212/q_orfs_aa tmp/2730103712073724212/search/reverse_aln tmp/2730103712073724212/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out ; -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing offsets.; [=================================================================] 323 0s 3ms. Reading results.; [=================================================================] 323 0s 0ms. Output database: tmp/2730103712073724212/aln; [=================================================================] 14.93K 0s 154ms. Time for merging into tmp/2730103712073724212/aln by mergeResults: 0h 0m 0s 147ms; Time for processing: 0h 0m 0s 394ms; offsetalignment queryDB tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/aln resultDB --chain-alignments 0; --merge-query 1 --search-type 0 --threads 64 --compressed 0 --db-load-mode 0 -v 3 ; Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 2ms; Writing results to: resultDB; ==[===============================================================] 101 0s 3ms. Time for merging into resultDB by mergeResults: 0h 0m 0s 169ms; Time for processing: 0h 0m 1s 64ms; convertalis queryDB /bighub/hub/DB/mmseq_swissprot/swissprot resultDB resultDB.m8 . MMseqs Version: 	10.6d92c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Translation table 	1; Gap open cost 	11; Gap extension cost 	1; Database output 	false; Preload mode 	0; Search type 	0; Threads 	64; Compressed 	0; Verbosity 	3. [=================================================================] 101 0s 8ms; Time for merging into res",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:6676,load,load-mode,6676,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,1,['load'],['load-mode']
Performance,"0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:18881,load,load-mode,18881,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"0; Split mode 	2; Split Memory Limit 	1000000; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path 	/scratch/saladi1/22776241/; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Force restart using the latest tmp 	false; Remove Temporary Files 	true. prefilter euk_screen/screenDB uref_euk85_rep/uref_euk85_rep mmtemp/150669805093381426/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 1000000 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --local-tmp /scratch/saladi1/22776241/ --threads 64 --compressed 0 -v 3 -s 5.7. Using 64 threads.; Can not fit databased into 1024000000 byte. Please use a computer with more main memory.; Error: Prefilter died; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/193:4221,load,load-mode,4221,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193,1,['load'],['load-mode']
Performance,0h 0m 1s 489ms; extractalignedregion clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/top1 tmp_part-14/17957680840564044329/aligned --extract-mode 2. [=================================================================] 100.00% 40.62K 0s 140ms; Time for merging files: 0h 0m 0s 205ms; Time for processing: 0h 0m 16s 657ms; createsubdb tmp_part-14/17957680840564044329/aligned tmp_part-14/17957680840564044329/first tmp_part-14/17957680840564044329/first_sub. Time for merging files: 0h 0m 0s 8ms; Time for processing: 0h 0m 0s 477ms; align tmp_part-14/17957680840564044329/aligned /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/first_sub tmp_part-14/17957680840564044329/round2 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3. Compute score and coverage; Query database size: 31979 type: Aminoacid; Target database size: 119988216 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 31.98K 20s 768ms; Time for merging files: 0h 0m 0s 85ms. 4578438 alignments calculated.; 4551951 sequence pairs passed the thresholds (0.994215 of overall calculated).; 142.341873 hits per query sequence.; Time for processing: 0h 0m 36s 82ms; mergedbs tmp_part-14/17957680840564044329/top1 tmp_part-14/17957680840564044329/merged tmp_part-14/17957680840564044329/top1 tmp_part-14/17957680840564044329/round2. Merging the results to tmp_part-14/17957680840564044329/merged; Time for merging files: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 699ms; filterdb tmp_,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:8763,load,load-mode,8763,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,1,['load'],['load-mode']
Performance,"0m 0s 27ms; prefilter tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 1 -v 3 . Query database size: 0 type: Aminoacid; Estimated memory consumption: 557M; Target database size: 19482 type: Profile; Index table k-mer threshold: 90 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 100.00% 19.48K 4s 492ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 19.48K 11s 88ms ; Index statistics; Entries: 454766207; DB size: 2633 MB; Avg k-mer size: 111.350382; Top 10 k-mers; RRRRR 1414; QQQQQ 1135; RRRRQ 985; SPPPP 965; QRRRR 962; PPPPS 953; RQRRR 940; RRRQR 927; RHRRR 914; RKRRR 902; Time for index table init: 0h 0m 16s 838ms; Time for processing: 0h 0m 17s 228ms; swapresults tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref_swapped --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 12 --compressed 1 --db-load-mode 0 -v 3 . Input tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref does not exist; Error: Swapresults pref died; Error: Search step died; Error: Search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:5706,load,load-mode,5706,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947,1,['load'],['load-mode']
Performance,"0m 0s 970ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 222; Target db start 1 to 222; [=================================================================] 100.00% 222 0s 52ms. 196.811469 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 11ms; Time for processing: 0h 0m 1s 704ms; align tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//10798751672030653963/pref_step2 tmp//10798751672030653963/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 222 type: Aminoacid; Target database size: 222 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 222 0s 80ms; Time for merging to aln_step2: 0h 0m 0s 11ms; 388 alignments calculated; 266 sequence pairs passed the thresholds (0.685567 of overall calculated); 1.198198 hits per query sequence; Time for processing: 0h 0m 0s 106ms; clust tmp//10798751672030653963/input_step2 tmp//10798751672030653963/aln_step2 tmp//10798751672030653963/clu_step2 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=====================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:21666,load,load-mode,21666,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['load'],['load-mode']
Performance,"0m 7s 71ms; Generate k-mers list for 16 split; [=================================================================] 2.20B 35m 20s 821ms; Sort kmer 0h 0m 27s 251ms; Sort by rep. sequence 0h 0m 4s 12ms; Generate k-mers list for 17 split; [=================================================================] 2.20B 39m 55s 45ms; Sort kmer 0h 0m 4s 162ms; Sort by rep. sequence 0h 0m 0s 40ms; Merge splits ... Time for fill: 0h 58m 23s 248ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 10h 8m 58s 194ms; rescorediagonal /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.75 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . Can not touch 293012172012 into main memory; [=================================================================] 2.20B 14h 48m 14s 895ms; Time for merging to pref_rescore1: 0h 21m 28s 875ms; Time for processing: 15h 32m 14s 793ms; Error: Pre-clustering step died; ```; And when I rerun my job I have : ; ```; linclust /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB_clu /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp --min-seq-id 0.75 --threads 20 -v 3 --force-reuse 1 --split-memory-limit 62G . MMseqs Version: 	f5f780acd64482cd59b46eae0a107f763cd17b4d; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	20; Compressed 	0; Verbosity 	3; Weight file name 	; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:7354,load,load-mode,7354,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['load'],['load-mode']
Performance,"0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 16ms; Create directory /tmp/mydir/7574787915800795625/clu_tmp; cluster /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1 . Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:4491,load,load-mode,4491,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3. Compute score and coverage; Query database size: 31979 type: Aminoacid; Target database size: 119988216 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 31.98K 20s 768ms; Time for merging files: 0h 0m 0s 85ms. 4578438 alignments calculated.; 4551951 sequence pairs passed the thresholds (0.994215 of overall calculated).; 142.341873 hits per query sequence.; Time for processing: 0h 0m 36s 82ms; mergedbs tmp_part-14/17957680840564044329/top1 tmp_part-14/17957680840564044329/merged tmp_part-14/17957680840564044329/top1 tmp_part-14/17957680840564044329/round2. Merging the results to tmp_part-14/17957680840564044329/merged; Time for merging files: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 699ms; filterdb tmp_part-14/17957680840564044329/merged tmp_part-14/17957680840564044329/2b_ali --beats-first --filter-column 4 --comparison-operator le. Filter by numerical comparison to first row.; [=================================================================] 100.00% 40.62K 0s 991ms; Time for merging files: 0h 0m 0s 235ms; Time for processing: 0h 0m 1s 633ms; lca /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/2b_ali clusters_rep-seqs.part-14_tax_db --compressed 0 --lca-ranks kingdom:phylum:class:order:family:genus:species --blacklist 12908,28384 --tax-lineage 0 --threads 24 -v 3. Loading NCBI taxonomy; Loading nodes file ... Done, got 2043406 nodes; Loading merged file ... Done, added 52532 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Computing LCA; terminate called after throwing an instance of 'std::out_of_range'] 0.11% 0.46 eta 1h 20m 23s; terminate called recursively; Aborted; Error: Lca died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:10305,Load,Loading,10305,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,4,['Load'],['Loading']
Performance,"100.00% 124 0s 19ms; Time for merging to clu_accepted: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 37ms; createsubdb tmp//7897776346521331899/clu_not_accepted_swap artificial2/DB_artificial tmp//7897776346521331899/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//7897776346521331899/clu artificial2/DB_artificial tmp//7897776346521331899/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/seq_wrong_assigned tmp//7897776346521331899/seq_seeds.merged tmp//7897776346521331899/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 126 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 126 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 126 0s 1ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 981ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 126; [==============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:28110,load,load-mode,28110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['load'],['load-mode']
Performance,"1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fa",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:2441,load,load-mode,2441,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['load'],['load-mode']
Performance,"10729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/team.c:124; #5 0x00002aefd1060dc5 in start_thread (arg=0x2aefd1c45700) at pthread_create.c:308; #6 0x00002aefd136bced in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:113; ```. ### Last files to be created in temp directory:; ```; ls -lh /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/; total 506G; -rwx------ 1 dportik Domain Users 4.0K Mar 9 20:15 blastp.sh; -rw-r--r-- 1 dportik Domain Users 8.4G Mar 10 02:59 pref_0.0; -rw-r--r-- 1 dportik Domain Users 7.9G Mar 10 02:59 pref_0.1; -rw-r--r-- 1 dportik Domain Users 14G Mar 10 03:00 pref_0.10; -rw-r",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:35973,optimiz,optimized,35973,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['optimiz'],['optimized']
Performance,"10948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 4ms; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 542; DB size: 488 MB; Avg k-mer size: 0.000008; Top 10 k-mers; GMTEEA	1; LHNWEA	1; SRLLFA	1; VRGIGA	1; LSLTGA	1; ERIAKA	1; TEVGKA	1; NKEIKA	1; GIKKKA	1; DVSNKA	1; Time for index table init: 0h 0m 0s 907ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; =[======================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:29149,load,load-mode,29149,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['load'],['load-mode']
Performance,"11215513/q_orfs_aa; --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 48. [=================================================================] 3.22M 2s 59ms; Time for merging files: 0h 0m 3s 83ms; Time for processing: 0h 0m 6s 661ms; prefilter /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa /mnt/lustre/scratch/aauladell/databases/unirefdb/unirefDB /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14; 502658769203238512/tmp_hsp1/3393216153911215513/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c; 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 48 --compressed 0 -v 3 -s; 5.7. Using 48 threads.; Query database size: 3215536 type: Aminoacid; Estimated memory consumption: 437G; Target database size: 99657864 type: Aminoacid; Process prefiltering step 1 of 1. Index table k-mer threshold: 122 at k-mer size 7; Index table: counting k-mers; [=================================================================] 99.66M 6m 33s 605ms; Index table: Masked residues: 620383436; Index table: fill; [==; ```. ## Context; From a selection of 300.000 small sequences, I intended to perform the taxonomy using UNIREF90. But it crashes each time even though the database should be able to be used for this kind of analysis. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 15c7762; * Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported, 750 Gb, 48 processors.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/232:3237,perform,perform,3237,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232,1,['perform'],['perform']
Performance,"1245249296443/pref experiments/tmp//6404161245249296443/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 6ms; filterdb experiments/tmp//6404161245249296443/pref_filter1 experiments/tmp//6404161245249296443/pref_filter2 --filter-file experiments/tmp//6404161245249296443/order_redundancy . Filtering using file(s); [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_filter2: 0h 0m 0s 21ms; Time for processing: 0h 0m 0s 56ms; rescorediagonal experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_filter2 experiments/tmp//6404161245249296443/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_rescore2: 0h 0m 0s 19ms=================>] 99.48% 24.47K eta 0s ; Time for processing: 0h 0m 0s 59ms; align experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_rescore2 experiments/tmp//6404161245249296443/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 12 --compressed 0 -v 3 . Compute score and coverage; Query database size: 24598 type: Aminoacid; Target databas",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:8537,load,load-mode,8537,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['load'],['load-mode']
Performance,"12s 709ms; splitsequence tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 838.53K 0s 149ms; Time for merging to query_seqs_split_h: 0h 0m 0s 459ms; Time for merging to query_seqs_split: 0h 0m 0s 859ms; Time for processing: 0h 0m 2s 893ms; prefilter tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 5.7 . Query database size: 882920 type: Nucleotide; Estimated memory consumption: 29G; Target database size: 311921 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 311.92K 32s 895ms; Index table: Masked residues: 15323340; Index table: fill; [=================================================================] 311.92K 36s 224ms; Index statistics; Entries: 3056373344; DB size: 25680 MB; Avg k-mer size: 2.846469; Top 10 k-mers; CTGTTTTGTACCTTA	9174; GCCTTCCTATTTTAT	6337; CCGAACAGACTGTCG	6287; ATCGACAAGCGAGCG	6217; CCTGCCTGTTGTATC	6097; TGTTCGGCTCGCTGT	6079; CGCGCAGTCAATAGG	5996; ACAAATCAGAGCGCG	5947; TGCGTTCGCGTTCTG	5935; GATACAAAATGCAGG	5935; Time for index table init: 0h ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339:6791,load,load-mode,6791,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339,1,['load'],['load-mode']
Performance,"138406286044646862/aln_0 tmp/16138406286044646862/aln_1 --compressed 0 -v 3 . Merging the results to tmp/16138406286044646862/aln_merge_new; Time for merging to aln_merge_new: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17ms; rmdb tmp/16138406286044646862/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; mvdb tmp/16138406286044646862/aln_merge_new tmp/16138406286044646862/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; createsubdb tmp/16138406286044646862/order_1 tmp/16138406286044646862/input_0 tmp/16138406286044646862/input_1 -v 3 --subdb-mode 1 . Time for merging to input_1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 6ms; prefilter tmp/16138406286044646862/input_1 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 12.0 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 7780 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 56; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 7780; Target db start 1 to 756891; [=================================================================] 100.00% 7.78K 4s 109ms . 689.599906 k-mers per position; 968973 DB matches per sequence; 1143 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 7776 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:10627,load,load-mode,10627,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['load'],['load-mode']
Performance,"147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 10 --compressed 0 -v 3 . Init data structures...; Touch data file pbps.neighbors.DB ... Done.; Use index pfam_profile.idx; Index version: 15; Generated by: 8-fac81; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqType: Profile; Headers1: 1; Headers2: 0; ScoreMatrix: VTML80.out; Compute score and coverage.; Query database type: Profile; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; .Time for merging files: 0h 0m 0s 23ms. All sequences processed. 390452377 alignments calculated.; 1899900 sequence pairs passed the thresholds (0.00486589 of overall calculated).; 106.904 hits per query sequence.; Time for processing: 0h 32m 50s 752ms; Program call:; swapresults pfam_profile.idx pbps.neighbors.DB tmp/6822607060114486044/aln_swapped result --sub-mat blosum62.out -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 10 --compressed 0 --db-load-mode 0 -v 3 . Query database: pfam_profile.idx; Use index pfam_profile.idx; Index version: 15; Generated by: 8-fac81; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqType: Profile; Headers1: 1; Headers2: 0; ScoreMatrix: VTML80.out; Target database: pbps.neighbors.DB; Result database: tmp/6822607060114486044/aln_swapped; Computing offsets.; .; Reading results.; .; Output database: result; ................................................................................................... 1 Mio. sequences processed; ....................................; Time for merging files: 0h 0m 0s 545ms; Time for processing: 0h 0m 1s 451ms; ```. It ran really fast but even with k-mar 6, I don't know about the sensitivity if it is equivalent. . The ScoreMatrix reported is VTML80.out, this should be the Blosum62?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:6521,load,load-mode,6521,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,1,['load'],['load-mode']
Performance,"147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Alphabet size 21; Kmer per sequence 21; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner. Set cluster mode SET COVER.; Program call:; /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp/13736030087838361561/pref /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp/13736030087838361561/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 -e 0.001 -c 0.8 --cov-mode 0 --min-seq-id 0.9 --seq-id-mode 0 --sort-results 0 --threads 64 -v 3. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Sub Matrix blosum62.out; Rescore mode 0; Remove hits by seq.id. and coverage false; E-value threshold 0.001; Coverage threshold 0.8; Coverage Mode 0; Seq. Id Threshold 0.9; Seq. Id. Mode 0; Include identical Seq. Id. false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; No preload false; Threads 64; Verbosity 3. Prefilter database: /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp/13736030087838361561/pref; Error: Rescore with hamming distance step died; Error: Search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120:4893,perform,performs,4893,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120,1,['perform'],['performs']
Performance,"16803073/tmp_hsp1; search tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/orfs_aa databases/uniprotkb tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/tmp_taxonomy/15848989983316803073/first tmp/6713; 332935333060100/taxonomy_tmp/9923875229524867748/tmp_taxonomy/15848989983316803073/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 32 -s 2 --split-memory-limit 200G --sp; aced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --remove-tmp-files 1 . prefilter tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/orfs_aa databases/uniprotkb tmp/6713332935333060100/taxonomy_tmp/9923875229524867748/tmp_taxonomy/15848989983316803073/tmp_hsp1/68; 53721603621777485/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-; seqs 300 --split 0 --split-mode 2 --split-memory-limit 200G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-se; lf-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0 . Query database size: 1599064123 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 163G; Target database size: 231921744 type: Aminoacid; Process prefiltering step 1 of 6; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 38.41M 2m 12s 304ms; Index table: Masked residues: 221272222; Index table: fill; [=================================================================] 38.41M 3m 45s 787ms; Index statistics; Entries: 11399442350; DB size: 74993 MB; Avg k-mer size: 8.905814; Top 10 k-mers; FSHAGSI 272598; AFMFFMP 260790; AFRNNFW 259163; RMNSFLP 218177; NNSWLPS 215496; AHFMIMV 211691; MPMGGNW 204521; TMLDRNT 168603; TGTYPSS 159040; GDQY",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/577:21679,load,load-mode,21679,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577,1,['load'],['load-mode']
Performance,"17949317426677965256/aln_ungapped tmp97/17949317426677965256/pref_subtract --threads 20 --compressed 0 -v 3. subtractdbs tmp97/17949317426677965256/pref tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/pref_subtract --threads 20 --compressed 0 -v 3. Remove tmp97/17949317426677965256/aln_ungapped ids from tmp97/17949317426677965256/pref; [=================================================================] 100.00% 39.65K 0s 144ms; Time for merging to pref_subtract: 0h 0m 0s 168ms; Time for processing: 0h 0m 0s 503ms; align tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/pref_subtract tmp97/17949317426677965256/aln_gapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 20 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 39650 type: Nucleotide; Target database size: 19825 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 39.65K 11s 920ms; Time for merging to aln_gapped: 0h 1m 40s 131ms; 2105218 alignments calculated; 1620 sequence pairs passed the thresholds (0.000770 of overall calculated); 0.040858 hits per query sequence; Time for processing: 0h 5m 12s 297ms; concatdbs tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/aln_gapped tmp97/17949317426677965256/aln --preserve-keys --take-larger-entry --thread",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:15920,load,load-mode,15920,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['load'],['load-mode']
Performance,"2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 95.29M 10m 53s 267ms; Time for merging to q_orfs_aa_h: 0h 14m 59s 800ms; Time for merging to q_orfs_aa: 0h 33m 4s 490ms; Time for processing: 1h 14m 4s 658ms; prefilter repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/q_orfs_aa databases/eggnog repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 5 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 300G -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 56 --compressed 0 -v 3 . Query database size: 1303062545 type: Aminoacid; Estimated memory consumption: 2G; Target database size: 349750 type: Profile; Index table k-mer threshold: 82 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 349.75K 1m 42s 520ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 349.75K 5m 18s 145ms; Index statistics; Entries: 14682023111; DB size: 84042 MB; Avg k-mer size: 3594.921651; Top 10 k-mers; PPPPW	38077; PPPWW	37617; PPWPP	34827; PPPGW	33942; WWWPP	33931; PPPDW	33516; PPWPW	33505; PPWRW	32205; PWPPW	31944; PPPQW	31811; Time for index table init: 0h 9m 20s 184ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 82; Starting prefiltering scores calculation (step 1 of 1); Query d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/594:17722,load,load-mode,17722,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594,1,['load'],['load-mode']
Performance,"21-03-10 at 12 16 09 PM](https://user-images.githubusercontent.com/14060382/110706285-7c9db380-81ac-11eb-8e42-efd46778a3ce.png). ### gdb output on an S status prefilter process:; ```; gdb -p 9878. Attaching to process 9878. warning: process 9878 is a cloned process; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/mmseqs...(no debugging symbols found)...done.; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:33375,Load,Loaded,33375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,"231218113/search_tmp/10627605686170015473/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 516.30K 0s 579ms; Time for merging to q_orfs_aa_h: 0h 0m 0s 661ms; Time for merging to q_orfs_aa: 0h 0m 0s 709ms; Time for processing: 0h 0m 3s 128ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 1.000 . Query database size: 2548633 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 24s 806ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 50s 887ms; Index statistics; Entries: 3111458326; DB size: 27569 MB; Avg k-mer size: 2.430827; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GGQRVAR	38490; LLGPGKT	25908; YDYAIPL	22840; GGRRVAR	21815; PHLGGQR	19799; TPHDFEV	17697; PSLGGQR	13748; FSCSHVV	12988; Time for index table init: 0h 2m 34s 667ms; Process prefiltering step 1 of 1. k-mer similarity t",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:4216,load,load-mode,4216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['load'],['load-mode']
Performance,"2531703396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1; search /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/orfs_aa /nr /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/tmp_taxonomy/8588819485854123580/first /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 0.5 --split-mode 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1 . prefilter /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/orfs_aa /nr /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1/1723886274502240713/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 0 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 26 --compressed 0 -v 3 -s 0.5 . Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GD",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:31078,load,load-mode,31078,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591,1,['load'],['load-mode']
Performance,"28692068579862/linclust/13628666274102407548/order_redundancy; Beats first 	false; Mapping file 	; Threads 	36; Verbosity 	3; trim the results to one column	false; Extract n lines 	0; Numerical comparison operator 	; Numerical comparison value 	0; Sort entries 	0; Include identical Seq. Id. 	false; join to DB 	. Filtering with a filter files.; ..................Time for merging files: 0 h 0 m 0 s; Rescore diagonals.; Program call:; tmp/425628692068579862/linclust/13628666274102407548/input_step_redundancy tmp/425628692068579862/linclust/13628666274102407548/input_step_redundancy tmp/425628692068579862/linclust/13628666274102407548/pref_filter2 tmp/425628692068579862/linclust/13628666274102407548/pref_rescore2 --rescore-mode 1 --sub-mat blosum62.out --filter-hits -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 10 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Rescore mode 	1; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	true; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; Threads 	10; Verbosity 	3. Query file: tmp/425628692068579862/linclust/13628666274102407548/input_step_redundancy; Target file: tmp/425628692068579862/linclust/13628666274102407548/input_step_redundancy; Prefilter database: tmp/425628692068579862/linclust/13628666274102407548/pref_filter2; Result database: tmp/425628692068579862/linclust/13628666274102407548/pref_rescore2; ..................Done.; Time for merging files: 0 h 0 m 0 s; Time for diagonal calculation: 0 h 0 m 2s; Program call:; tmp/425628692068579862/linclust/13628666274102407548/input_step_redundancy tmp/425628692068579862/linclust/13628666274102407548/input_step_redundancy tmp/425628692068579862/linclust/13628666274102407548/pref_rescore2 tmp/425628692068579862/linclust/13628666274102407548/aln --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-i",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:101548,perform,performs,101548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['perform'],['performs']
Performance,"2m 34s 667ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2548633; Target db start 1 to 13003941; [=================================================================] 2.55M 23s 498ms. 7.258993 k-mers per position; 1015 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 1142796 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 915ms; Time for processing: 0h 3m 3s 800ms; align tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_0 tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 2548633 type: Aminoacid; Target database size: 13003941 type: Aminoacid; Calculation of alignments; [=================================================================] 2.55M 2s 531ms; Time for merging to aln_0: 0h 0m 0s 899ms. 1405837 alignments calculated.; 219658 sequence pairs passed the thresholds (0.156247 of overall calculated).; 0.086187 hits per query sequence.; Time for processing: 0h 0m 5s 264ms; createsubdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/order_0 tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 273ms; Time for processing: 0h 0m 0s 816ms;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:6103,load,load-mode,6103,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['load'],['load-mode']
Performance,"3 . Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 100.00% 11.80K 0s 9ms ; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 23ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 11803 type: Aminoacid; Target database size: 11803 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 11.80K 1s 228ms ; Time for merging to aln: 0h 0m 0s 3ms; 15505 alignments calculated; 15076 sequence pairs passed the thresholds (0.972332 of overall calculated); 1.277302 hits per query sequence; Time for processing: 0h 0m 1s 238ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/li",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:11563,load,load-mode,11563,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"338. Writing results 0h 0m 0s 47ms; Time for merging to clu_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 815ms; createsubdb ./mmseqs_output/tmp/5351426679731834765/clu_step1 ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/input_step2 -v 3 --subdb-mode 1 . Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 8ms; prefilter ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 8338 type: Aminoacid; Estimated memory consumption: 1003M; Target database size: 8338 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 8.34K 0s 514ms; Index table: Masked residues: 3074; Index table: fill; [=================================================================] 8.34K 0s 572ms; Index statistics; Entries: 1408015; DB size: 496 MB; Avg k-mer size: 0.022000; Top 10 k-mers; GPGGTL 37; GLGNGK 26; ALGNGK 23; DLLDLP 21; FDDTDS 20; NGGSLK 17; DLLDMP 17; DVLDMP 17; GEQVAR 16; FDDTDT 16; Time for index table init: 0h 0m 2s 591ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8338; Target db start 1 to ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:28878,load,load-mode,28878,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"34761310910/profile_0 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_0. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. result2profile result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_202",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:6507,load,load-mode,6507,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['load'],['load-mode']
Performance,"35 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 77298 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 77.30K 0s 41ms; Sort kmer 0h 0m 0s 46ms; Sort by rep. sequence 0h 0m 0s 22ms; Time for fill: 0h 0m 0s 11ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 225ms; rescorediagonal tmp/8115150149931881526/input tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 77.30K 0s 71ms; Time for merging to pref_rescore1: 0h 0m 0s 102ms; Time for processing: 0h 0m 0s 429ms; clust tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore1 tmp/8115150149931881526/clu_tmp/13790714163985984779/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 0s 91ms. Size of the sequence database: 77298; Size of the alignment database: 77298; Number of clusters: 31445. Writing results 0h 0m 0s 3ms; Time for merging to pre_clust: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 188ms; createsubdb tmp/8115150149931881526/clu_tmp/13790714163985984779/order_redundancy tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/input_step_redundancy -v 3 --subdb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:4746,load,load-mode,4746,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['load'],['load-mode']
Performance,"3734096903/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/input_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; summarizeresult tmp/15248047069833069253/result tmp/15248047069833069253/result_best -a 1 --overlap 0 -c 1 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to result_best: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 17ms; convertalis tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/result_best result.tsv --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to result.tsv: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 11ms; rmdb tmp/15248047069833069253/result_best -v 3 . Time for processing: 0h 0m 0s 2ms; rmdb tmp/15248047069833069253/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/target -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/target_h -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/query -v 3 . Time for processing: 0h 0m 0s 2ms; rmdb tmp/15248047069833069253/query_h -v 3 ; ```. </details>. ## Context; See above. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Wh",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:9248,load,load-mode,9248,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,1,['load'],['load-mode']
Performance,"3c971f71cfff3; Substitution Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Min. alignment length 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 4; Compressed 0; Verbosity 3; Seed Substitution Matrix PAM30.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner; Force restart using the latest tmp false; Remove Temporary Files false. Could not create symlink of tmp/5177011769629871693!. ## Context; Providing context helps us come up with a solution and improve our docu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/171:1504,perform,performs,1504,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/171,1,['perform'],['performs']
Performance,"3ms; createsubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 -v 3 --subdb-mode 1 . Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 6 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 5991 type: Aminoacid; Estimated memory consumption: 996M; Target database size: 5991 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 5.99K 0s 98ms ; Index table: Masked residues: 70106; Index table: fill; [=================================================================] 100.00% 5.99K 0s 74ms ; Index statistics; Entries: 2291730; DB size: 501 MB; Avg k-mer size: 0.035808; Top 10 k-mers; IHDKNI 27; LHDKNI 14; LGGFVY 14; GPGGTL 10; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; HVARAT 9; VHSGRT 9; Time for index table init: 0h 0m 0s 730ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 5991; Target db st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:26410,load,load-mode,26410,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"40770.1 0.369 0.989 0.967; XP_635472.2 XP_640770.1 0.524 0.987 0.813; XP_638978.1 XP_640770.1 0.311 0.988 0.978; XP_640255.1 XP_640770.1 0.479 0.989 0.978; XP_629182.1 XP_640770.1 0.468 0.989 0.978; XP_645001.1 XP_640770.1 0.441 0.989 0.978; XP_640768.1 XP_640770.1 0.547 1.000 1.000; XP_629181.1 XP_640770.1 0.485 0.989 0.978; XP_643412.2 XP_640770.1 0.523 0.979 0.989; XP_635471.1 XP_640770.1 0.542 0.987 0.813; XP_629090.1 XP_640770.1 0.487 1.000 0.967; XP_640770.1 XP_640770.1 0.605 1.000 1.000; XP_640770.1 XP_640989.2 0.541 0.989 0.940; XP_640770.1 XP_640994.1 0.537 0.989 0.939; XP_640770.1 XP_640768.1 0.513 1.000 1.000; XP_640770.1 XP_640766.1 0.520 0.989 0.990; XP_640770.1 XP_640764.1 0.531 0.989 0.938; XP_640770.1 XP_640763.1 0.532 0.989 0.935; XP_640770.1 XP_640792.1 0.504 0.989 0.989; ...; ... ## MMseqs Output (for bugs); Omitting the initial prefilering and providing one round of iterated profile based clustering output. . [-] Unloading mmseqs 2-13-45111-219-gaabc78c ; [+] Loading mmseqs 2-13-45111-219-gaabc78c ; result2profile euk72-90.profile euk72-90.consensus euk72-90.profile_search euk72-90.profile2 --threads 48 . MMseqs Version: 	aabc78c298f35cbc7a4136206c1a83adaa68695f; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; ; Profile E-value threshold 	0.001; Compositional bias 	1; Compositional bias 	1 ; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Pseudo count mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Preload mode 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Gap pseudo count 	10; Threads 	48; Compressed 	0; Verbosity 	3. Query database size: 1270615 type: Profile; Target database size: 1270615 type: Aminoacid; [==========================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:3895,Load,Loading,3895,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['Load'],['Loading']
Performance,"4163985984779/order_redundancy tmp/8115150149931881526/clu_tmp/13790714163985984779/pref tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 23ms; filterdb tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter1 tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter2 --filter-file tmp/8115150149931881526/clu_tmp/13790714163985984779/order_redundancy --threads 64 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 31.44K 0s 20ms; Time for merging to pref_filter2: 0h 0m 0s 88ms; Time for processing: 0h 0m 0s 360ms; rescorediagonal tmp/8115150149931881526/clu_tmp/13790714163985984779/input_step_redundancy tmp/8115150149931881526/clu_tmp/13790714163985984779/input_step_redundancy tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_filter2 tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [=========Error: Ungapped alignment step died; Error: Search died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): a14688744081c15439fa3092eec9dfd8be40440b; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Source install from github ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GNU Make 4.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): SSE4; * Operating system and version: gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:7127,load,load-mode,7127,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['load'],['load-mode']
Performance,427893312161071/search_tmp/7042327585447941378/search/input_0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/search/aln_merge -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | offsetalignment /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/aln /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 2 --compressed 0 --db-load-mode 2 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Computing ORF lookup; mmseqs-web-worker_1 | Computing contig offsets; mmseqs-web-worker_1 | Computing contig lookup; mmseqs-web-worker_1 | Time for contig lookup: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Writing results to: /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result; mmseqs-web-worker_1 | [==============================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:27865,load,load-mode,27865,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['load'],['load-mode']
Performance,"47483647 --max-accept 2; 147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Compute score and coverage; Query database size: 561568 type: Aminoacid; Target database size: 14926 type: Aminoacid; Calculation of alignments; [=================================================================] 323 0s 62ms; Time for merging into tmp/2730103712073724212/search/reverse_aln by mergeResults: 0h 0m 0s 109ms. 335 alignments calculated.; 323 sequence pairs passed the thresholds (0.964179 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 427ms; swapresults /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/reverse_aln tmp/2730103712073724212/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out ; -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing offsets.; [=================================================================] 323 0s 3ms. Reading results.; [=================================================================] 323 0s 0ms. Output database: tmp/2730103712073724212/aln; [=================================================================] 14.93K 0s 154ms. Time for merging into tmp/2730103712073724212/aln by mergeResults: 0h 0m 0s 147ms; Time for processing: 0h 0m 0s 394ms; offsetalignment queryDB tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/aln resultDB --chain-alignments 0; --merge-query 1 --search-type 0 --threads 64 --compressed 0 --db-load-mode 0 -v 3 ; Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:5871,load,load-mode,5871,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,1,['load'],['load-mode']
Performance,"4967295) >= db size (22); Traceback (most recent call last):; File ""/home/username/project/colabfold_batch/colabfold-conda/bin/colabfold_search"", line 8, in <module>; sys.exit(main()); File ""/home/username/project/colabfold_batch/colabfold-conda/lib/python3.7/site-packages/colabfold/mmseqs/search.py"", line 444, in main; threads=args.threads,; File ""/home/username/project/colabfold_batch/colabfold-conda/lib/python3.7/site-packages/colabfold/mmseqs/search.py"", line 86, in mmseqs_search_monomer; run_mmseqs(mmseqs, [""expandaln"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""), base.joinpath(""res""), dbbase.joinpath(f""{uniref_db}{dbSuffix2}""), base.joinpath(""res_exp""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + expand_param). File ""/home/username/project/colabfold_batch/colabfold-conda/lib/python3.7/site-packages/colabfold/mmseqs/search.py"", line 23, in run_mmseqs; subprocess.check_call([mmseqs] + params); File ""/home/username/project/colabfold_batch/colabfold-conda/lib/python3.7/subprocess.py"", line 363, in check_call; raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '[PosixPath('mmseqs'), 'expandaln', PosixPath('result_query_20230412_142303/qdb'), PosixPath('/home/username/project/my_local_DB/target_DB.idx'), PosixPath('result_query_20230412_142303/res'), PosixPath('/home/username/project/my_local_DB/target_DB.idx'), PosixPath('result_query_20230412_142303/res_exp'), '--db-load-mode', '2', '--threads', '96', '--expansion-mode', '0', '-e', '1.7976931348623157e+308', '--expand-filter-clusters', '1', '--max-seq-id', '0.95']' returned non-zero exit status 1. ```. `target_DB` is a brand new database; I have not added nor deleted records after its creation. I am working on Lambda server running Ubuntu:; ```; Linux xyz-lambda02 5.4.0-144-generic #161-Ubuntu SMP Fri Feb 3 14:49:04 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; ```. Please let me know if I can help with debugging. Thank you. And thanks for `mmseqs`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:12076,load,load-mode,12076,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['load'],['load-mode']
Performance,"512.1_7; RS_GCF_000970205.1 NZ_CP009512.1_8; RS_GCF_000970205.1 NZ_CP009512.1_9; RS_GCF_000970205.1 NZ_CP009512.1_10; ```. You can then do a JOIN operation between the `gtdb.lookup` table, the `genome_orf_mapping.tsv` table, and the `gtdb.source` table to link the genome IDs in `gtdb.source` to `gtdb.lookup`. Save an output file with the same format as `gdtb.lookup` but with the genome IDs from `gtdb.source`. Use this new file to replace the old `gtdb.lookup`. Here is some rough python/pandas code to do this (note this is slow and uses ~100 GB of RAM):. ```python; import pandas as pd. lookup_data = pd.read_csv('gtdb.lookup', sep='\t', header=None); lookup_data.columns = ['gene-id','gene-name','genome-id']. source_data = pd.read_csv('gtdb.source', sep='\t', header=None); source_data.columns = ['genome-id','genome-name']. genome_orf_mapping = pd.read_csv('genome_orf_mapping.tsv', sep='\t', header=None); genome_orf_mapping.columns = ['genome-name','gene-name']. # Perform the JOIN; lookup_data_corrected = lookup_data.rename(columns={'genome-id':'genome-id-old'})\; .merge(genome_orf_mapping, on='gene-name', how='left', validate='m:1')\; .merge(source_data, on='genome-name', how='left', validate='m:1'). lookup_data_gene_corrected.drop(columns=['genome-id-old','genome-name'])\; .to_csv('gtdb.lookup.corrected', sep='\t', header=None, index=False); # Replace gtdb.lookup with this newly saved file; ```. After making this fix, I could run `mmseqs createtaxdb` and get a taxdb that seemed to work fine with the `mmseqs easy-taxonomy` pipeline, matching my expected results (as mentioned under ""Consequences"" above). Maybe because I corrected `gdtb.lookup` before making the taxdb, I didn't need to edit any other mapping files as mentioned by @mlcoleman . I can't guarantee this workaround is 100% correct because I do not understand all the database files generated by mmseqs. However, the workaround seems to do the trick for my data for the time being. Hope this helps before a longer-t",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625:6957,Perform,Perform,6957,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625,1,['Perform'],['Perform']
Performance,"526903138997/aln tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 0ms; align /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/aln_merged tmp/5233442526903138997/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score and coverage; Query database size: 75233 type: Aminoacid; Target database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 9m 57s 768ms ; Time for merging to aln: 0h 0m 0s 17ms; 672599536 alignments calculated; 672599536 sequence pairs passed the thresholds (1.000000 of overall calculated); 8940.219727 hits per query sequence; Time for processing: 1h 9m 58s 713ms; rmdb tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 73ms; swapresults /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/aln alnment/alignment --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 1.79769e+308 --split-memory-limit 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --threads 16 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 100.00% 75.23K 8s 163ms . Reading results.; Killed============================> ] 51.07% 38.42K eta 6s ; Error: swapresults died",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:8712,load,load-mode,8712,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['load'],['load-mode']
Performance,"5535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 76215872 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 76.22M 6m 32s 415ms; Sort kmer 0h 0m 14s 675ms; Sort by rep. sequence 0h 0m 0s 974ms; Time for fill: 0h 0m 13s 496ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 7m 46s 594ms; rescorediagonal uniref90-DB-wwmj uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref tmp//16518381706844811497/linclust/11898236; 85496030198/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov; -mode 2 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [================================================================] =76.22M 19m 41s 19ms; Time for merging to pref_rescore1: 0h 0m 50s 277ms; Time for processing: 0h 21m 16s 644ms; clust uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore1 tmp//16518381706844811497/linclust/1189823685496030198/pre_cl; ust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 28s 473ms. Size of the sequence database: 76215872; Size of the alignment database: 76215872; Number of clusters: 74926526. Writing results 0h 0m 17s 970ms; Time for merging to pre_clust: 0h 0m 0s 1ms; Time for processing: 0h 1m 0s 559ms; createsubdb tmp//16518381706844811497/linclust/1189823685496030198/order_redundancy uniref90-DB-wwmj tmp//16518381706844811497/linclust/11898236854960301; 98/input_step_redundancy -v 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:6315,load,load-mode,6315,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['load'],['load-mode']
Performance,5625/clu_tmp/4370341951257379003/aln_step2 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step2 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2_h -v 3 . Time for processing: 0h 0m 0s 0ms; createtsv /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/cluster.tsv --threads 8 -v 3 . Time for merging to cluster.tsv: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 8ms; result2repseq /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/clu_rep --db-load-mode 0 --compressed 0 --threads 8 -v 3 . [=================================================================] 100.00% 5.77K 0s 9ms ; Time for merging to clu_rep: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 17ms; result2flat /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_rep /tmp/mydir/7574787915800795625/rep_seq.fasta --use-fasta-header -v 3 . Time for processing: 0h 0m 0s 15ms; createseqfiledb /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/clu_seqs --threads 8 -v 3 . [=================================================================] 100.00% 5.77K 0s 7ms ; Time for merging to clu_seqs: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 18ms; result2flat /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_seqs /tmp/mydir/7574787915800795625/all_seqs,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:33548,load,load-mode,33548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"5] 0s 59ms; Time for merging to query_h: 0h 0m 0s 2ms; Time for merging to query: 0h 0m 0s 2ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 76ms; Create directory /tmp/MMS6178/15560953143015620527/search_tmp; search /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/result /tmp/MMS6178/15560953143015620527/search_tmp --alignment-mode 3 --threads 4 -s 5.7 --remove-tmp-files 1 . prefilter /tmp/MMS6178/15560953143015620527/query ./UniRef90 /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 4 --compressed 0 -v 3 -s 5.7 . Query database size: 431 type: Aminoacid; Target split mode. Searching through 3 splits; Estimated memory consumption: 153G; Target database size: 170669877 type: Aminoacid; Process prefiltering step 1 of 3. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 55.34M 25m 40s 422ms ; Index table: Masked residues: 383107691; Index table: fill; /tmp/MMS6178/15560953143015620527/search_tmp/14784357488620766415/blastp.sh : ligne 99 : 6380 Processus arrêté $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. MMseqs2 Version: 14.7e284; Staticall",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/728:4933,load,load-mode,4933,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/728,1,['load'],['load-mode']
Performance,"6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Environmental search; mmseqs search outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env outdir/tmp/env --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Expand and align environmental results; mmseqs expandaln outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp -e inf --expansion-mode 0 --db-load-mode 1 --threads 4. mmseqs align outdir/tmp/env/latest/profile_1 /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp outdir/res_env_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter environmental results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign outdir/res_env_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --max-seq-id 1.0 --threads 4 --filter-min-enable 100. # Convert environmental results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign_filter outdir/env.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Merge results; mmseqs mergedbs queryDB outdir/final.a3m outdir/uniref.a3m outdir/env.a3m. # Unpack results; mmseqs unpackdb outdir/final.a3m outdir --unpack-name-mode 0 --unpack-suffix .a3m; ```; As it stands, I am not converting from DB to a3m until after the filter (with diff =256) so maybe MSA sizes will be okay? Any thoughts?. What I changed from colabfold default, but plan to ""search"" over for MSA quality and run time: ; e_value (for search) -> 1e-4; max_seqs (for search) -> 25; max",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:2687,load,load-mode,2687,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326,1,['load'],['load-mode']
Performance,"6521331899/clu_step2. Clustering step 1; [=================================================================] 100.00% 124 0s 5ms; Clustering step 2; [=================================================================] 100.00% 124 0s 27ms; Clustering step 3; [=================================================================] 100.00% 124 0s 45ms; Clustering step 4; [=================================================================] 100.00% 124 0s 64ms; Write merged clustering; [=================================================================] 100.00% 136 0s 79ms; Time for merging to clu: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 99ms; align artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/clu tmp//7897776346521331899/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 136 type: Aminoacid; Target database size: 136 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 17ms; Time for merging to aln: 0h 0m 0s 2ms; 136 alignments calculated; 134 sequence pairs passed the thresholds (0.985294 of overall calculated); 1.080645 hits per query sequence; Time for processing: 0h 0m 0s 43ms; subtractdbs tmp//7897776346521331899/clu tmp//7897776346521331899/aln tmp//7897776346521331899/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. subtractdbs tmp//7897776346521331899/clu tmp//7897776346521331899/aln tmp//7897776346521331899/clu_not",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:24543,load,load-mode,24543,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['load'],['load-mode']
Performance,"6755106708/pref_filter1 tmp97/17949317426677965256/linclust/6279588666755106708/pref_filter2 --filter-file tmp97/17949317426677965256/linclust/6279588666755106708/order_redundancy --threads 20 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 25.63K 0s 61ms; Time for merging to pref_filter2: 0h 0m 0s 138ms; Time for processing: 0h 1m 40s 346ms; align tmp97/17949317426677965256/linclust/6279588666755106708/input_step_redundancy tmp97/17949317426677965256/linclust/6279588666755106708/input_step_redundancy tmp97/17949317426677965256/linclust/6279588666755106708/pref_filter2 tmp97/17949317426677965256/linclust/6279588666755106708/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 20 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 25629 type: Nucleotide; Target database size: 25629 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 25.63K 1s 731ms; Time for merging to aln: 0h 0m 0s 152ms; 209782 alignments calculated; 32736 sequence pairs passed the thresholds (0.156048 of overall calculated); 1.277303 hits per query sequence; Time for processing: 0h 3m 22s 221ms; clust tmp97/17949317426677965256/linclust/6279588666755106708/input_step_redundancy tmp97/17949317426677965256/linclust/6279588666755106708/aln tmp97/17949317426677965256/l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:8966,load,load-mode,8966,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['load'],['load-mode']
Performance,"69/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 881ms; mvdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged_new /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap -v 3 . Time for processing: 0h 0m 36s 927ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 23551830 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 211ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:18889,load,load-mode,18889,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['load'],['load-mode']
Performance,"69750715556969/result; [=================================================================] 2 0s 0ms. Time for merging to result: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; test.fa.easy-search.tsv exists and will be overwritten; convertalis tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result test.fa.easy-search.tsv --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . [=================================================================] 2 0s 0ms; Time for merging to test.fa.easy-search.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/target -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/target_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/query -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/query_h -v 3 . Time for processing: 0h 0m 0s 0ms. ```; ## Context; I'm trying to match sequences to each other and not count regions with degenerate bases as mismatches. Basically, I'd like the 2 example sequences to match each other with 0 mismatches. The current command produces an output with 13 mismatches (see output section). I'm mostly concern",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:11949,load,load-mode,11949,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['load'],['load-mode']
Performance,"6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Program call:; createdb final_complete_sequences.fa.gz tmp/3578692915323364718/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. ............Time for merging files: 0h 0m 0s 87ms; Time for merging files: 0h 0m 0s 98ms; Time for merging files: 0h 0m 0s 136ms; Time for merging files: 0h 0m 0s 91ms; Time for processing: 0h 0m 2s 526ms; Program call:; cluster tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_tmp -c 0.9 --cov-mode 1 --threads 2 --min-seq-id 0.9 --kmer-per-seq 80. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:1777,perform,performs,1777,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['perform'],['performs']
Performance,"6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set cluster settings automatically to s=1; Set cluster mode GREEDY MEM.; Set cluster iterations to 1; Program call:; linclust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3 --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 0 --pca 1 --pcb 1.5 --score-bias ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:3774,perform,performs,3774,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['perform'],['performs']
Performance,"72030653963/clu_step1 tmp//10798751672030653963/clu_step2. Clustering step 1; [=================================================================] 100.00% 276 0s 5ms; Clustering step 2; [=================================================================] 100.00% 239 0s 25ms; Clustering step 3; [=================================================================] 100.00% 222 0s 44ms; Clustering step 4; [=================================================================] 100.00% 200 0s 61ms; Write merged clustering; [=================================================================] 100.00% 303 0s 73ms; Time for merging to clu: 0h 0m 0s 10ms; Time for processing: 0h 0m 0s 88ms; align DB_in DB_in tmp//10798751672030653963/clu tmp//10798751672030653963/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 303 type: Aminoacid; Target database size: 303 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 200 0s 20ms; Time for merging to aln: 0h 0m 0s 1ms; 303 alignments calculated; 289 sequence pairs passed the thresholds (0.953795 of overall calculated); 1.445000 hits per query sequence; Time for processing: 0h 0m 0s 47ms; subtractdbs tmp//10798751672030653963/clu tmp//10798751672030653963/aln tmp//10798751672030653963/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. subtractdbs tmp//10798751672030653963/clu tmp//10798751672030653963/aln tmp//10798751672030653963/c",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:24421,load,load-mode,24421,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['load'],['load-mode']
Performance,"7483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 8.53M 19s 320ms; Time for merging to orfs_aa_h: 0h 0m 13s 741ms; Time for merging to orfs_aa: 0h 0m 14s 541ms; Time for processing: 0h 1m 14s 69ms; prefilter /tmp/4466913777158595479/orfs_aa uniref_db.idx /tmp/4466913777158595479/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3. Index version: 16; Generated by: 60b77df37df55c3984870760591facbb361c3939; ScoreMatrix: VTML80.out; Query database size: 19769556 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 19769556; Target db start 1 to 1; [=================================================================] 100.00% 19.77M 1m 24s 356ms. 6.165338 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 0 median result list length; 19769556 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 14s 786ms; Segmentation fault (core dumped); Error: orf filter prefilter died. ## Your Environment; This is where I'",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/669:4149,load,load-mode,4149,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669,1,['load'],['load-mode']
Performance,"787/tmp_taxonomy/7007534916548188170/first tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1. prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 -s 2.0. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 9 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 713072; [=================================================================] 100.00% 9 0s 6ms. 10.636821 k-mers per position; 10265 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 66 sequences passed prefiltering per query sequence; 36 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 38ms; Time for processing: 0h 0m 0s 251ms; lcaalign tmp//15404483323509150572/taxonomy_tmp/7054630145456",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:9627,load,load-mode,9627,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,1,['load'],['load-mode']
Performance,"79/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 4ms; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 140 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 497; DB size: 488 MB; Avg k-mer size: 0.000008; Top 10 k-mers; GMTEEA	1; LHNWEA	1; SRLLFA	1; VRGIGA	1; ERIAKA	1; TEVGKA	1; NKEIKA	1; GIKKKA	1; DVSNKA	1; INISKA	1; Time for index table init: 0h 0m 0s 885ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 140; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=======================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:24098,load,load-mode,24098,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['load'],['load-mode']
Performance,"79/result /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best -a 1 --overlap 0 -e 0.001 -c 0 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | [=================================================================] 100.00% 0.01 eta -; mmseqs-web-worker_1 | Can not map any alingment results for entry 0!; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 1ms; mmseqs-web-worker_1 | terminate called after throwing an instance of 'std::logic_error'; mmseqs-web-worker_1 | what(): basic_string::_M_construct null not valid; mmseqs-web-worker_1 | convertalis /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/query /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/alis --sub-mat blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Error: Convert Alignments died; mmseqs-web-worker_1 | Aborted (core dumped); mmseqs-web-worker_1 | 2019/07/02 08:52:20 Execution Error: exit status 1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:13629,load,load-mode,13629,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['load'],['load-mode']
Performance,"79300059278292880/pref tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/pref_subtract --threads 112 --compressed 0 -v 3 . subtractdbs tmp/16479300059278292880/pref tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/pref_subtract --threads 112 --compressed 0 -v 3 . Remove tmp/16479300059278292880/aln_ungapped ids from tmp/16479300059278292880/pref; [=================================================================] 1.60M 1s 175ms; Time for merging to pref_subtract: 0h 0m 1s 400ms; Time for processing: 0h 0m 5s 506ms; align tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/pref_subtract tmp/16479300059278292880/aln_gapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 112 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1604546 type: Nucleotide; Target database size: 802273 type: Nucleotide; Calculation of alignments; [=================================================================] 1.60M 22m 53s 435ms; Time for merging to aln_gapped: 0h 0m 0s 903ms; 70826259 alignments calculated; 3445894 sequence pairs passed the thresholds (0.048653 of overall calculated); 2.147582 hits per query sequence; Time for processing: 0h 23m 4s 596ms; concatdbs tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/aln_gapped tmp/16479300059278292880/aln --preserve-keys --take-larger-entry --threads 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:15315,load,load-mode,15315,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['load'],['load-mode']
Performance,"7M 1m 36s 476ms ; Write merged clustering; [=================================================================] 100.00% 121.96M 2m 4s 130ms ; Time for merging to clu_redundancy: 0h 1m 28s 54ms; Time for processing: 0h 4m 53s 669ms; createsubdb cluster_tmp/1127447206531551203/clu_redundancy ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 26s 718ms; Time for processing: 0h 1m 14s 12ms; prefilter cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/input_step_redundancy cluster_tmp/1127447206531551203/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.99 --cov-mode 1 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 . Query database size: 119070883 type: Nucleotide; Estimated memory consumption: 544G; Target database size: 119070883 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 100.00% 119.07M 11m 59s 618ms ; Index table: Masked residues: 1954198777; Index table: fill; [=================================================================] 100.00% 119.07M 8m 53s 150ms ; Index statistics; Entries: 43365843082; DB size: 248141 MB; Avg k-mer size: 2646841.008423; Top 10 k-mers; AAAAAAA	23063795; AAATTAA	21644433; AATTTAA	21117606; AAAAATT	20537065; AAATTTT	19681970; TTTTTTT	19035614; AATTTTT	18870179; ATTTTTT	17045685; TTTATTT	16633440; ATAAATT	16256141; Time for index table init: 0h 23m 3s 602ms; Process prefiltering step 1 of 1. k-mer similarity thresho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:10653,load,load-mode,10653,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['load'],['load-mode']
Performance,"8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1; Threads 	30; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using split mode; Index table: counting k-mers...; ......................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; .............................................................................	1 Mio. sequences processed; ..........................................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; ...............",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:2001,optimiz,optimized,2001,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['optimiz'],['optimized']
Performance,"8227067/linclust/3267328275516617562/pref_filter1 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_filter2 --filter-file clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 154 0s 13ms; Time for merging to pref_filter2: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 79ms; rescorediagonal clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_filter2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 22ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms ] 49.02% 76 eta 0s; Time for processing: 0h 0m 0s 76ms; align clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:24128,load,load-mode,24128,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"8384/pref_filter1 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_filter2 --filter-file ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/order_redundancy --threads 40 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 31.32K 0s 100ms; Time for merging to pref_filter2: 0h 0m 0s 137ms; Time for processing: 0h 0m 0s 847ms; rescorediagonal ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_filter2 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 31.32K 0s 42ms; Time for merging to pref_rescore2: 0h 0m 0s 90ms; Time for processing: 0h 0m 0s 772ms; align ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore2 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,con",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:15343,load,load-mode,15343,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	3.40282e+38; Split memory limit 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	256; Compressed 	0; Preload mode 	0; Verbosity 	3. [New Thread 0x7fac59656700 (LWP 38112)]; [New Thread 0x7fac58e55700 (LWP 38113)]; [New Thread 0x7fac58654700 (LWP 38114)]; [New Thread 0x7face657f700 (LWP 38639)]; [New Thread 0x7face5d7e700 (LWP 38640)]; [New Thread 0x7face557d700 (LWP 38641)]; [New Thread 0x7face4d7c700 (LWP 38642)]; [New Thread 0x7face457b700 (LWP 38643)]; [New Thread 0x7face3d7a700 (LWP 38644)]; [New Thread 0x7face3579700 (LWP 38645)]; [New Thread 0x7face2d78700 (LWP 38646)]; [New Thread 0x7face2577700 (LWP 38647)]; [New Thread 0x7face1d76700 (LWP 38648)]; [New Thread 0x7face1575700 (LWP 38649)]; [New Thread 0x7face0d74700 (LWP 38650)]; [New Thread 0x7face05737",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:2617,load,load-mode,2617,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473,1,['load'],['load-mode']
Performance,"875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . MMseqs Version: 	12.113e3; Substitution matrix	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	3.40282e+38; Split memory limit 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	256; Compressed 	0; Preload mode 	0; Verbosity 	3. [New Thread 0x7fac58648700 (LWP 183880)]; [New Thread 0x7fac57e47700 (LWP 183881)]; [New Thread 0x7fac57646700 (LWP 183882)]; [New Thread 0x7face5571700 (LWP 184398)]; [New Thread 0x7face4d70700 (LWP 184399)]; [New Thread 0x7face456f700 (LWP 184400)]; [New Thread 0x7face3d6e700 (LWP 184401)]; [New Thread 0x7face356d700 (LWP 184402)]; [New Thread 0x7face2d6c700 (LWP 184403)]; [New Thread 0x7face256b700 (LWP 184404)]; [New Thread 0x7face1d6a700 (LWP 184405)]; [New Thread 0x7face1569700 (LWP 184406)]; [New Thread 0x7face0d68700 (LWP 184407)]; [New Thread 0x7face0567700 (LWP 184408)]; [New Thread 0x7facdfd66700 (LWP 184409)]; [New Thread 0x7facdf565700 (LWP 184410)];",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:2708,load,load-mode,2708,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840,1,['load'],['load-mode']
Performance,"89869989197200687/search_tmp/6775691152365959592/query_seqs /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 32 --compressed 0 -v 3 . [=================================================================] 1.03M 0s 146ms; Time for merging to query_seqs_split_h: 0h 0m 0s 281ms; Time for merging to query_seqs_split: 0h 0m 0s 333ms; Time for processing: 0h 0m 1s 246ms; prefilter /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 250G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 . Query database size: 1298472 type: Nucleotide; Target split mode. Searching through 12 splits; Estimated memory consumption: 216G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 12. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 7.80M 6m 27s 363ms; Index table: Masked residues: 517008537; Index table: fill; [=================================================================] 7.80M 11m 24s 325ms; Index statistics; Entries: 27958919735; DB size: 168174 MB; Avg k-mer size: 26.038773; Top 10 k-mers; GGGGCAGCGTGATTT	319478; TAATCGTGCAGCGGG	292128; GTGCGCAGCGTATCG	276641; CTCTCGGGGGCGTGG	257406; ACAGTTAGTATGTGT	233646; TCCAGGGAGCATGGG	230906; AGTGG",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:6127,load,load-mode,6127,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['load'],['load-mode']
Performance,"8c9700 (LWP 28908)]; [New Thread 0x1555546c8700 (LWP 28909)]; [New Thread 0x1554ea593700 (LWP 28921)]; [New Thread 0x1554ea392700 (LWP 28922)]; [New Thread 0x1554ea191700 (LWP 28923)]; [New Thread 0x1554e9f90700 (LWP 28924)]; [New Thread 0x15549ceb2700 (LWP 28925)]; [New Thread 0x15549ccb1700 (LWP 28926)]; [New Thread 0x15549cab0700 (LWP 28927)]; [New Thread 0x15549c8af700 (LWP 28928)]; [New Thread 0x15549c6ae700 (LWP 28929)]; [New Thread 0x1554996f9700 (LWP 28930)]; [New Thread 0x1554994f8700 (LWP 28931)]; [New Thread 0x1554992f7700 (LWP 28932)]; terminate called after throwing an instance of 'std::bad_alloc' ] 3.00% 15.44K eta 2h 43m 11s ; what(): std::bad_alloc. Thread 14 ""mmseqs"" received signal SIGABRT, Aborted.; [Switching to Thread 0x1554996f9700 (LWP 28930)]; 0x000000000086fbd7 in raise (); (gdb) bt; #0 0x000000000086fbd7 in raise (); #1 0x000000000086fdf1 in abort (); #2 0x00000000007d3e15 in __gnu_cxx::__verbose_terminate_handler() (); #3 0x000000000073c0b6 in __cxxabiv1::__terminate(void (*)()) (); #4 0x000000000073c101 in std::terminate() (); #5 0x000000000073a2f4 in __cxa_throw (); #6 0x000000000073c28c in operator new(unsigned long) (); #7 0x000000000078720a in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (); #8 0x00000000007887eb in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long) (); #9 0x0000000000550fc6 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append (__str=..., this=0x1554996f8520) at /usr/include/c++/7/bits/basic_string.h:1212; #10 convertalignments (argc=<optimized out>, argv=<optimized out>, command=...) at /home/vsts/work/1/s/src/util/convertalignments.cpp:495; #11 0x0000000000848be6 in gomp_thread_start (); #12 0x000000000085a66b in start_thread (arg=0x1554996f9700) at pthread_create.c:463; #13 0x00000000008f609f in clone (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:4630,optimiz,optimized,4630,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628,2,['optimiz'],['optimized']
Performance,"91; [=================================================================] 100.00% 5.99K 4s 202ms . 403.312621 k-mers per position; 5696 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 16 sequences passed prefiltering per query sequence; 20 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 1ms; Time for processing: 0h 0m 5s 300ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 5991 type: Aminoacid; Target database size: 5991 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 5.99K 0s 226ms ; Time for merging to aln_step2: 0h 0m 0s 1ms; 21329 alignments calculated; 6429 sequence pairs passed the thresholds (0.301421 of overall calculated); 1.073110 hits per query sequence; Time for processing: 0h 0m 0s 232ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step2 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step2 /tmp/mydir/757478791580079562",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:28452,load,load-mode,28452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"92146066/pref_filter1 cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_filter2 --filter-file cluster_tmp/1127447206531551203/linclust/8761493678692146066/order_redundancy --threads 40 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 100.00% 119.25M 2m 56s 532ms ; Time for merging to pref_filter2: 0h 1m 34s 791ms; Time for processing: 0h 5m 27s 349ms; align cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_filter2 cluster_tmp/1127447206531551203/linclust/8761493678692146066/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 119253279 type: Nucleotide; Target database size: 119253279 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 119.25M 1h 5m 19s 819ms ; Time for merging to aln: 0h 1m 24s 501ms. 1903287037 alignments calculated.; 119437486 sequence pairs passed the thresholds (0.062753 of overall calculated).; 1.001545 hits per query sequence.; Time for processing: 1h 7m 38s 628ms; clust cluster_tmp/1127447206531551203/linclust/8761493678692146066/input_step_redundancy cluster_tmp/1127447206531551203/linclust/8761493678692146066/aln cluster_tmp/1127447206531551203/linclust/8761493678692146066/clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 .",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:7871,load,load-mode,7871,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['load'],['load-mode']
Performance,"949317426677965256/input_step_redundancy tmp97/17949317426677965256/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 19.83K 0s 62ms; Time for merging to query_seqs_h: 0h 0m 0s 261ms; Time for merging to query_seqs: 0h 1m 40s 122ms; Time for processing: 0h 8m 20s 689ms; prefilter tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7.5 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 20 --compressed 0 -v 3. Query database size: 39650 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 19825 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [=================================================================] 100.00% 19.83K 0s 193ms; Index table: Masked residues: 3096; Index table: fill; [=================================================================] 100.00% 19.83K 0s 133ms; Index statistics; Entries: 5861616; DB size: 8225 MB; Avg k-mer size: 0.005459; Top 10 k-mers; GTACGTGAATTGAAT	10331; AAACTGGGAGAAGAT	9920; AAGGGGGGGCCGGTT	9235; CGAACGTGGGAACGG	8944; GGGGAAAGGCTGGGG	7283; TCGATTACGGTAACG	6945; GTGCGCAGCGTATCG	6389; CCCGGCTCACGAATG	5538; ACTGCGTAAGGGTGG	5044; GACCGAGGGCACGGG	4773; Time for index table init: 0h 0m 8s 613ms; Process prefiltering step 1 of 1. k-mer si",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:12701,load,load-mode,12701,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['load'],['load-mode']
Performance,"967198/linclust/14523879757540758787/pref_filter1 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_filter2 --filter-file clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 154 0s 34ms; Time for merging to pref_filter2: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 99ms; rescorediagonal clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_filter2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 7ms; Time for merging to pref_rescore2: 0h 0m 0s 1ms ] 49.67% 77 eta 0s; Time for processing: 0h 0m 0s 37ms; align clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:8508,load,load-mode,8508,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"98962955004214/clu_step2. Clustering step 1; [=================================================================] 100.00% 276 0s 4ms; Clustering step 2; [=================================================================] 100.00% 239 0s 23ms; Clustering step 3; [=================================================================] 100.00% 221 0s 37ms; Clustering step 4; [=================================================================] 100.00% 201 0s 68ms; Write merged clustering; [=================================================================] 100.00% 303 0s 91ms; Time for merging to clu: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 109ms; align ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu tmp//538598962955004214/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 303 type: Aminoacid; Target database size: 303 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 201 0s 52ms; Time for merging to aln: 0h 0m 0s 1ms; 303 alignments calculated; 294 sequence pairs passed the thresholds (0.970297 of overall calculated); 1.462687 hits per query sequence; Time for processing: 0h 0m 0s 122ms; subtractdbs tmp//538598962955004214/clu tmp//538598962955004214/aln tmp//538598962955004214/clu_not_accepted --e-profile 100000000 -e 100000000 --threads 16 --compressed 0 -v 3. subtractdbs tmp//538598962955004214/clu tmp//538598962955004214/aln tmp//538598962955004214/clu_not_acce",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:24281,load,load-mode,24281,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['load'],['load-mode']
Performance,"9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/t_orfs ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/t_orfs_aa ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | convertalis /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/alis_pdb_rna_sequence --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | [=================================================================] 1 0s 0ms; mmseqs-web-worker_1 | Time for merging to alis_pdb_rna_sequence: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 33ms; mmseqs-web-worker_1 | Removing temporary files; mmseqs-web-worker_1 | rmdb /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/result ; mmseqs-web-worker_1 | ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:30568,load,load-mode,30568,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['load'],['load-mode']
Performance,"9s 536ms; filterdb tmp//16518381706844811497/linclust/1189823685496030198/pref_filter1 tmp//16518381706844811497/linclust/1189823685496030198/pref_filter2 --filter; -file tmp//16518381706844811497/linclust/1189823685496030198/order_redundancy --threads 64 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 74.93M 16s 227ms; Time for merging to pref_filter2: 0h 0m 46s 160ms; Time for processing: 0h 1m 35s 246ms; rescorediagonal tmp//16518381706844811497/linclust/1189823685496030198/input_step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/input; _step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/pref_filter2 tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore2; --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 2 --min-seq-id 0.9 ; --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [================================================================] =74.93M 28m 19s 496ms; Time for merging to pref_rescore2: 0h 0m 51s 111ms; Time for processing: 0h 29m 44s 106ms; align tmp//16518381706844811497/linclust/1189823685496030198/input_step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/input_step_redu; ndancy tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore2 tmp//16518381706844811497/linclust/1189823685496030198/aln --sub-mat 'aa:blos; um62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mo; de 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --; add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --reali",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:8741,load,load-mode,8741,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['load'],['load-mode']
Performance,": /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:1696,Perform,Performing,1696,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,4,['Perform'],['Performing']
Performance,: 0; Empty list: 348429986. Time for index table init: 0h 5m 53s 443ms; k-mer similarity threshold: 122; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 40624; Target db start 1 to 22555708; ....; 2740 k-mers per position.; 1152092 DB matches per sequence.; 0 Overflows.; 199 sequences passed prefiltering per query sequence.; Median result list size: 200; 1 sequences with 0 size result lists. Time for prefiltering scores calculation: 0h 3m 25s 795ms; Time for merging files: 0h 0m 0s 53ms; Time for processing: 0h 9m 40s 316ms; Program call:; align clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/tmp_hsp1/12507882511714639255/pref_0 tmp_part-14/8093924424180559474/first --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3. Init data structures...; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus ... Done.; Compute score and coverage.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; ....Time for merging files: 0h 0m 0s 44ms. All sequences processed. 8113542 alignments calculated.; 2760008 sequence pairs passed the thresholds (0.340173 of overall calculated).; 67.9403 hits per query sequence.; Time for processing: 0h 0m 25s 268ms; Program call:; filterdb tmp_part-14/8093924424180559474/first tmp_part-14/8093924424180559474/top1 --extract-lines 1. Filtering by extracting the first 1 lines.; ....Time for merging files: 0h 0m 0s 198ms; Time for processing: 0h 0m 1s 251m,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:13776,load,load-mode,13776,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,1,['load'],['load-mode']
Performance,": 0h 0m 0s 19ms; Time for merging to query_seqs: 0h 0m 0s 29ms; Time for processing: 0h 0m 0s 419ms; splitsequence /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 256 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 3ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 280714 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 80ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 68ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:6657,load,load-mode,6657,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['load'],['load-mode']
Performance,": 0h 0m 0s 46ms; createsubdb tmp/16437734971973434362/order_redundancy tmp/16437734971973434362/pref tmp/16437734971973434362/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 12ms; Time for processing: 0h 0m 0s 36ms; filterdb tmp/16437734971973434362/pref_filter1 tmp/16437734971973434362/pref_filter2 --filter-file tmp/16437734971973434362/order_redundancy. Filtering using file(s); [=================================================================] 140.16K 0s 15ms; Time for merging to pref_filter2: 0h 0m 0s 35ms; Time for processing: 0h 0m 0s 92ms; align tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/input_step_redundancy tmp/16437734971973434362/pref_filter2 tmp/16437734971973434362/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 30000000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 36 --compressed 0 -v 3. Compute score and coverage; Query database size: 140160 type: Nucleotide; Target database size: 140160 type: Nucleotide; Calculation of alignments; [============tmp/16437734971973434362/linclust.sh: line 75: 22654 Segmentation fault $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; ```; ## Context; I have a Fasta with about 140000 sequences which range from a few thousands nucleotides to about 20 millions. The memory consumption is fine throughout the mmseqs steps. But at some point during the align phase, a segmentation fault is thrown. It doesn't seem like a memory problem. I tried with the easy-clust workflow and the cluster module, both of which fail at the same point.; ## Your Environment; Include as many relevant details about ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:4273,load,load-mode,4273,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['load'],['load-mode']
Performance,": 0h 0m 0s 975ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 35ms. 125.182478 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 657ms; align tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776346521331899/pref_step2 tmp//7897776346521331899/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 124 type: Aminoacid; Target database size: 124 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 37ms; Time for merging to aln_step2: 0h 0m 0s 8ms; 124 alignments calculated; 124 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 80ms; clust tmp//7897776346521331899/input_step2 tmp//7897776346521331899/aln_step2 tmp//7897776346521331899/clu_step2 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:21739,load,load-mode,21739,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['load'],['load-mode']
Performance,": forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or directory.; (gdb) ; (gdb) bt; #0 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; #1 calcRepeatProbs (letterProbs=0x2ab9b800f7cc, this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:310; #2 tantan::getProbabilities (; seqBeg=seqBeg@entry=0x2ab9b8000c70 ""\004\004\003 \004"", ; seqEnd=seqEnd@entry=0x2ab9b8000c76 """", maxRepeatOffset=<optimized out>, ; likelihoodRatioMatrix=<optimized out>, repeatProb=<optimized out>, ; repeatEndProb=<optimized out>, repeatOffsetProbDecay=<optimized out>, ; firstGapProb=<optimized out>, otherGapProb=<optimized out>, ; probabilities=probabilities@entry=0x2ab9b800f7c0); at /home/vsts/work/1/s/src/commons/tantan.cpp:375; #3 0x00000000005cabf8 in tantan::maskSequences (; seqBeg=0x2ab9b8000c70 ""\004\004\003 \004"", seqEnd=0x2ab9b8000c76 """", ; maxRepeatOffset=<optimized out>, likelihoodRatioMatrix=0xc570a0, ; repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003, ; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, ; minMaskProb=0.90000000000000002, ; maskTable=0xc57f30 '\004' <repeats 200 times>...); at /home/vsts/work/1/s/src/commons/tantan.cpp:357; #4 0x00000000005de120 in IndexBuilder::fillDatabase (); at /home/vsts/work/1/s/src/prefiltering/IndexBuilder.cpp:144; #5 0x000000000076baee in gomp_thread_start (). ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:2413,optimiz,optimized,2413,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323,8,['optimiz'],['optimized']
Performance,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>) at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578) at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:29371,optimiz,optimized,29371,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 2 (LWP 7870 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:28442,optimiz,optimized,28442,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 3 (LWP 7871 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 2 (LWP 7870 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:27513,optimiz,optimized,27513,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 4 (LWP 7872 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 3 (LWP 7871 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:26584,optimiz,optimized,26584,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 5 (LWP 7905 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 4 (LWP 7872 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:25655,optimiz,optimized,25655,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 6 (LWP 7906 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 5 (LWP 7905 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:24726,optimiz,optimized,24726,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 7 (LWP 7907 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 6 (LWP 7906 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:23797,optimiz,optimized,23797,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 8 (LWP 7908 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 7 (LWP 7907 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:22868,optimiz,optimized,22868,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance,"; #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 9 (LWP 7909 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 8 (LWP 7908 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:21939,optimiz,optimized,21939,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance,"; Extract n lines 0; Numerical comparison operator ; Numerical comparison value 0; Sort entries 0; Include identical Seq. Id. false; join to DB ; Compute Positions ; Replace transitively . Filtering with a filter files.; ..............................................Time for merging files: 0h 0m 0s 668ms; Time for processing: 0h 0m 2s 11ms; Program call:; align contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/input_step_redundancy contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/52586018941986723; 32/input_step_redundancy contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/pref_filter2 contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601; 894198672332/aln --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.99 --seq-id-mode 0 --alt-ali 0 -c 0.6 --cov-mode 1 --max-seq-len 65535 --max-seqs 2147483647 --comp-bias-corr 0 --realign; 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 -v 3 . MMseqs Version: 7.4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0.99; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.6; Coverage Mode 1; Max. sequence length 65535; Max. results per query 2147483647; Compositional bias 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 128; Verbosity 3. Init data structures...; Compute score, coverage and sequence id.; Touch data file contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/input_step_redundancy ... Done.; Query database type: Nucleotide; Target database type: Nucleotide; **Calculation of Smith",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/632:5769,load,load-mode,5769,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632,1,['load'],['load-mode']
Performance,"; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	8; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. **It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace)**; ```; trying `--search-type 3 `throws me this error. `Unrecognized parameter ""--search-type"". Did you mean ""--seed-sub-mat"" (Seed substitution matrix)?; `. For some reason I couldn't switch to nucleotide search. Do you know how can I fix this?; Thanks for your help with this. Andrés. ## Your Environment. conda version of mmseqs MMseqs2 Version: 13.45111. ## Operating system and version:; Fedora",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/507:2978,perform,performed,2978,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507,1,['perform'],['performed']
Performance,"; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile tmp/457325247790757046/pref --sub-mat blosum62.out -s 7.5 -k 5 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern ; Local temporary path ; Threads 10; Verbosity 3. Initialising data structures...; Using 10 threads.; Use index pfam_profile.sk6; Index version: 12; Generated by: 7-4e23d; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: 2; Header",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189:3040,load,load-mode,3040,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189,1,['load'],['load-mode']
Performance,"; Program call:; rescorediagonal tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/input_step_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/input_step_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_filter2 tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore2 --sub-mat blosum62.out --rescore-mode 1 --filter-hits 1 -e 0.001 -c 0.9 --cov-mode 1 --min-seq-id 0.9 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --no-preload 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Rescore mode 	1; Remove hits by seq.id. and coverage 	true; E-value threshold 	0.001; Coverage threshold 	0.9; Coverage Mode 	1; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Include identical Seq. Id. 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; No preload 	false; Threads 	2; Verbosity 	3. Prefilter database: tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_filter2; Query database: tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/input_step_redundancy; Target database: tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/input_step_redundancy; Result database: tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore2; ..........; Done.; Time for merging files: 0h 0m 0s 228ms; Time for processing: 0h 0m 1s 2ms; Program call:; align tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/input_step_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/input_step_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore2 tmp/3578692915323364718/clu_tmp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:12744,perform,performs,12744,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['perform'],['performs']
Performance,"=0s 1ms==; ==============Time for merging to pref_rescore2: 0h 0m 0s 8ms; Time for processing: 0h 0m 0s 27ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to aln: 0h 0m 0s 3ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 15ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/aln /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updat",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:14967,load,load-mode,14967,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['load'],['load-mode']
Performance,"================================================================] 1.08K 0s 508ms; Time for merging to aln_0: 0h 0m 0s 8ms; 19048 alignments calculated; 15817 sequence pairs passed the thresholds (0.830376 of overall calculated); 14.713489 hits per query sequence; Time for processing: 0h 0m 54s 194ms; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . Maybe I'm missing a ""hidden"" input file (ie., one of the files associated with the main input files, which are generally no mentioned in any of the docs). The input files that are present:. * /ebio/abt3_scr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:17357,load,load-mode,17357,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,1,['load'],['load-mode']
Performance,"=============================================================] 100.00% 124 0s 23ms; Write merged clustering; [=================================================================] 100.00% 136 0s 37ms; Time for merging to clu_redundancy: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 54ms; createsubdb tmp//7897776346521331899/clu_redundancy artificial2/DB_artificial tmp//7897776346521331899/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 51ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 1ms; Index statistics; Entries: 99; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; ERIATC 1; Time for index table init: 0h 0m 1s 150ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [===========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:11756,load,load-mode,11756,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['load'],['load-mode']
Performance,"============================================================] 100.00% 9 0s 13ms; Computing offsets.; [=================================================================] 100.00% 9 0s 5ms. Reading results.; [=================================================================] 100.00% 9 0s 4ms. Output database: tmp//538598962955004214/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00% 297 0s 6ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 85ms; align tmp//538598962955004214/seq_seeds.merged tmp//538598962955004214/seq_wrong_assigned tmp//538598962955004214/seq_wrong_assigned_pref_swaped tmp//538598962955004214/seq_wrong_assigned_pref_swaped_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 210 type: Aminoacid; Target database size: 9 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 18 0s 12ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 0ms; 24 alignments calculated; 18 sequence pairs passed the thresholds (0.750000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 63ms; filterdb tmp//538598962955004214/seq_wrong_assigned_pref_swaped_aln tmp//538598962955004214/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 16 --compressed 0 -v 3. Filtering using regular expression; [=================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:30346,load,load-mode,30346,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['load'],['load-mode']
Performance,============================================================] 882.92K 5m 58s 443ms; Time for merging to aln: 0h 0m 0s 462ms. 88720927 alignments calculated.; 46477238 sequence pairs passed the thresholds (0.523859 of overall calculated).; 52.640373 hits per query sequence.; Time for processing: 0h 6m 3s 620ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 272ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/input_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 1ms; offsetalignment tmp/2226585588535541735/query tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/target tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/aln tmp/2226585588535541735/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 26ms; Writing results to: tmp/2226585588535541735/result; [=================================================================] 419.27K 2s 43ms. Time for merging to result: 0h 0m 0s 264ms; Time for processing: 0h 0m 6s 8ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs_aa . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs_aa . Time for processing: 0h 0m 0s,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339:10355,load,load-mode,10355,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339,1,['load'],['load-mode']
Performance,"=======================================================] 100.00% 9.30K 0s 164ms . 2.036021 k-mers per position; 245 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 2 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 265ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 9304 type: Aminoacid; Target database size: 9304 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 9.30K 1s 357ms ; Time for merging to aln_step0: 0h 0m 0s 2ms; 22013 alignments calculated; 18612 sequence pairs passed the thresholds (0.845500 of overall calculated); 2.000430 hits per query sequence; Time for processing: 0h 0m 1s 367ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step0 /tmp/mydir/7574787",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:18769,load,load-mode,18769,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"===================================================] 276 0s 37ms; Write merged clustering; [=================================================================] 303 0s 48ms; Time for merging to clu_redundancy: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 102ms; createsubdb tmpfiles//13298481167543164943/clu_redundancy DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 276 0s 28ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 276 0s 5ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 36ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:11524,load,load-mode,11524,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['load'],['load-mode']
Performance,"=================================================] 10 0s 5ms; Computing offsets.; [=================================================================] 10 0s 2ms. Reading results.; [=================================================================] 10 0s 5ms. Output database: tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped; [=================================================================] 297 0s 5ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 73ms; align tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/seq_wrong_assigned tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 210 type: Aminoacid; Target database size: 10 type: Aminoacid; Calculation of alignments; [=================================================================] 22 0s 31ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 0ms. 29 alignments calculated.; 21 sequence pairs passed the thresholds (0.724138 of overall calculated).; 0.954545 hits per query sequence.; Time for processing: 0h 0m 0s 80ms; filterdb tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 16 --compressed 0 -v 3. Filtering using regular expression; [=================================================================] 22 0s 20ms; Time f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:30378,load,load-mode,30378,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['load'],['load-mode']
Performance,"================================================] 100.00% 14 0s 4ms; Computing offsets.; [=================================================================] 100.00% 14 0s 2ms. Reading results.; [=================================================================] 100.00% 14 0s 4ms. Output database: tmp//10798751672030653963/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00% 284 0s 6ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 87ms; align tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/seq_wrong_assigned tmp//10798751672030653963/seq_wrong_assigned_pref_swaped tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 214 type: Aminoacid; Target database size: 14 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 29 0s 13ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 5ms; 41 alignments calculated; 32 sequence pairs passed the thresholds (0.780488 of overall calculated); 1.103448 hits per query sequence; Time for processing: 0h 0m 0s 56ms; filterdb tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 16 --compressed 0 -v 3. Filtering using regular expression; [============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:30522,load,load-mode,30522,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['load'],['load-mode']
Performance,"============================================] 26.23K 0s 384ms. Reading results.; [=================================================================] 26.23K 0s 441ms. Output database: ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00K 0s 144ms. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 19ms; Time for processing: 0h 0m 2s 119ms; align ./mmseqs_output/tmp/5351426679731834765/seq_seeds.merged ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped_aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 34414 type: Aminoacid; Target database size: 26229 type: Aminoacid; Calculation of alignments; [=================================================================] 34.29K 6m 32s 543ms; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 85ms; 4335308 alignments calculated; 2294027 sequence pairs passed the thresholds (0.529150 of overall calculated); 66.900757 hits per query sequence; Time for processing: 0h 6m 33s 544ms; filterdb ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_pref_swaped_aln ./mmseqs_output/tmp/5351426679731834765/seq_wrong_assigned_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:40767,load,load-mode,40767,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"======================================] 100.00% 154 0s 37ms; Write merged clustering; [=================================================================] 100.00% 164 0s 48ms; Time for merging to clu_redundancy: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 68ms; createsubdb clu/sim1_tmp/7842071913732967198/clu_redundancy in/DB_in clu/sim1_tmp/7842071913732967198/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 6ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 2ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 117ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=========",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:12500,load,load-mode,12500,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"===================================] 76.22M 1m 11s 703ms; Time for merging to clu_redundancy: 0h 0m 49s 731ms; Time for processing: 0h 2m 22s 84ms; createsubdb tmp//16518381706844811497/clu_redundancy uniref90-DB-wwmj tmp//16518381706844811497/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 29s 367ms; prefilter tmp//16518381706844811497/input_step_redundancy tmp//16518381706844811497/input_step_redundancy tmp//16518381706844811497/pref_step0 --sub-mat ; 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2; 147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 2 --comp-bias-corr; 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches; 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Query database size: 74390789 type: Aminoacid; Estimated memory consumption: 400G; Target database size: 74390789 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 74.39M 1m 27s 612ms; Index table: Masked residues: 17937595794; Index table: fill; [=================================================================] 74.39M 13s 623ms; Index statistics; Entries: 495972652; DB size: 12603 MB; Avg k-mer size: 0.387479; Top 10 k-mers; CSSCCCS 40539; CSSCSCS 36980; CSCSSCS 36180; CSCSCSS 35290; CSSCDSS 34425; CSCCSSS 33905; CSSCSSS 32740; CSCDSSS 31596; SCSCDSS 30280; CSCSDSS 29715; Time for index table init: 0h 2m 0s 290ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculati",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:12540,load,load-mode,12540,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['load'],['load-mode']
Performance,"=================================] 1 0s 0ms; Time for merging to query_seqs_h: 0h 0m 0s 0ms; Time for merging to query_seqs: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; splitsequence tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 1 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 5 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 5 0s 0ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 5 0s 0ms; Index statistics; Entries: 2994; DB size: 8192 MB; Avg k-mer size: 0.000003; Top 10 k-mers; CCAATCCTCGGCACA	3; CGGCAGACCCGGAGC	3; GGGGCAGCGTGATTT	3; CTCTCGGGGGCGTGG	3; AAGGTGGACAGTTAA	2; ACCTGTAGCCCGTAA	2; GCAGGGTTAAGAGAA	2; GTTATCCCCAACGAA	2; AGAGTGGGTACCGAA	2; TACCGGTATCGCGAA	2; Time for index table init: 0h 0m 8s 169ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:10822,load,load-mode,10822,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['load'],['load-mode']
Performance,"=================================] 100.00% 154 0s 28ms; Write merged clustering; [=================================================================] 100.00% 164 0s 38ms; Time for merging to clu_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 72ms; createsubdb clu/sim2_tmp/12164117771218227067/clu_redundancy in/DB_in clu/sim2_tmp/12164117771218227067/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 110111 --threads 16 --compressed 0 -v 3. Query database size: 154 type: Aminoacid; Estimated memory consumption: 514M; Target database size: 154 type: Aminoacid; Index table k-mer threshold: 148 at k-mer size 5; Index table: counting k-mers; [=================================================================] 100.00% 154 0s 14ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 154 0s 4ms; Index statistics; Entries: 221; DB size: 24 MB; Avg k-mer size: 0.000069; Top 10 k-mers; MKCFP 6; KYFPQ 6; HFVRF 4; CPIVP 4; WWWWW 4; RFDHR 3; WWFWW 3; FWWFW 2; WWWFW 2; MEMYY 2; Time for index table init: 0h 0m 0s 118ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [========",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:28125,load,load-mode,28125,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"=================================] 100.00% 239 0s 0ms. Time for read in: 0h 0m 0s 74ms; Total time: 0h 0m 0s 89ms. Size of the sequence database: 239; Size of the alignment database: 239; Number of clusters: 221. Writing results 0h 0m 0s 0ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; createsubdb tmp//538598962955004214/clu_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//538598962955004214/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 221 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 221 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 221 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 221 0s 17ms; Index statistics; Entries: 1337; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 985ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 221; Target db start 1 to 221; [========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:19735,load,load-mode,19735,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['load'],['load-mode']
Performance,"=================================] 6 0s 29ms; Time for merging to pref_filter2: 0h 0m 0s 53ms; Time for processing: 0h 0m 0s 270ms; rescorediagonal /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_filter2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3. [=====================] ===================6= ========0s 1ms==; ==============Time for merging to pref_rescore2: 0h 0m 0s 8ms; Time for processing: 0h 0m 0s 27ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:13811,load,load-mode,13811,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['load'],['load-mode']
Performance,================================] 100.00% 0.02 0s 0ms ] 0.00% 0.01 eta -; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | 0 alignments calculated.; mmseqs-web-worker_1 | 0 sequence pairs passed the thresholds (-nan of overall calculated).; mmseqs-web-worker_1 | 0.000000 hits per query sequence.; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 49ms; mmseqs-web-worker_1 | offsetalignment /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/query /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/aln /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 24 --compressed 0 --db-load-mode 2 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Computing ORF lookup; mmseqs-web-worker_1 | Computing contig offsets; mmseqs-web-worker_1 | Computing contig lookup; mmseqs-web-worker_1 | Time for contig lookup: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Writing results to: /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result; mmseqs-web-worker_1 | [============================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:11145,load,load-mode,11145,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['load'],['load-mode']
Performance,"===============================] 100.00% 200 0s 22ms; Time for merging to clu_accepted: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 40ms; createsubdb tmp//10798751672030653963/clu_not_accepted_swap DB_in tmp//10798751672030653963/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//10798751672030653963/clu DB_in tmp//10798751672030653963/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/seq_wrong_assigned tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 14 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 214 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 214 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 214 0s 9ms; Index statistics; Entries: 1312; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 857ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 14; Target db start 1 to 214; [===========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:27977,load,load-mode,27977,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['load'],['load-mode']
Performance,"===============================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 5.7 . Query database size: 54576 type: Nucleotide; Target split mode. Searching through 5 splits; Estimated memory consumption: 679G; Target database size: 90056195 type: Nucleotide; Process prefiltering step 1 of 5. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 18.00M 6m 11s 176ms; Index table: Masked residues: 1279892313; Can not allocate entries memory in IndexTable::initMemory; Error: Prefilter died; Error: Search step died; Error: Search died. Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string aft",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:14024,load,load-mode,14024,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['load'],['load-mode']
Performance,"==============================] 34.26K 0s 16ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 253ms; Time for processing: 0h 0m 0s 470ms; ===================================================; ======== Search the new sequences against =========; ========= previous (rep seq of) clusters ==========; ===================================================; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3 -s 4.0. Query database size: 6 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 34258 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 34.26K 0s 519ms; Index table: Masked residues: 72412; Index table: fill; [=================================================================] 34.26K 0s 429ms; Index statistics; Entries: 9905952; DB size: 544 MB; Avg k-mer size: 0.154780; Top 10 k-mers; GPGGTL	164; GQQVAR	114; GLGNGK	80; GEGGVV	73; GPGGTT	69; LLDPAL	54; SGGSLR	53; LLGPGK	49; GQQIAR	49; GQQLAR	48; Time for index table init: 0h 0m 1s 840ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 34258; [========",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:2999,load,load-mode,2999,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['load'],['load-mode']
Performance,"=========================] 100.00% 124 0s 0ms. Time for read in: 0h 0m 0s 87ms; Total time: 0h 0m 0s 107ms. Size of the sequence database: 124; Size of the alignment database: 124; Number of clusters: 124. Writing results 0h 0m 0s 0ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 110ms; createsubdb tmp//7897776346521331899/clu_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776346521331899/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 19ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 3ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 975ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:19979,load,load-mode,19979,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['load'],['load-mode']
Performance,"=====================] 100.00% 239 0s 0ms. Time for read in: 0h 0m 0s 50ms; Total time: 0h 0m 0s 71ms. Size of the sequence database: 239; Size of the alignment database: 239; Number of clusters: 222. Writing results 0h 0m 0s 0ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 73ms; createsubdb tmp//10798751672030653963/clu_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//10798751672030653963/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 222 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 222 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 222 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 222 0s 3ms; Index statistics; Entries: 1342; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 970ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 222; Target db start 1 to 222; [=========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:19900,load,load-mode,19900,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['load'],['load-mode']
Performance,"====================] 100.00% 276 0s 4ms. Time for read in: 0h 0m 0s 76ms; Total time: 0h 0m 0s 99ms. Size of the sequence database: 276; Size of the alignment database: 276; Number of clusters: 239. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 111ms; createsubdb tmp//538598962955004214/clu_step0 tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 13ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 2ms; Index statistics; Entries: 1414; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 51ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:15593,load,load-mode,15593,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['load'],['load-mode']
Performance,"===================] 416 0s 33ms; Write merged clustering; [=================================================================] 1.95K 0s 45ms; Time for merging to clu_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 69ms; createsubdb DB_clustered/tmp/17526443716087640986/clu_redundancy DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 416 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 416 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 416 0s 41ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 416 0s 6ms; Index statistics; Entries: 125; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; XXXXXX 6; XXXXXX 6; XXXXXX 4; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 1; Time for index table init: 0h 0m 1s 308ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 416; Target db start 1 to 416; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:11489,load,load-mode,11489,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['load'],['load-mode']
Performance,"===============] 100.00% 124 0s 0ms. Time for read in: 0h 0m 0s 46ms; Total time: 0h 0m 0s 72ms. Size of the sequence database: 124; Size of the alignment database: 124; Number of clusters: 124. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 75ms; createsubdb tmp//7897776346521331899/clu_step0 tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 5ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 908ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:15867,load,load-mode,15867,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['load'],['load-mode']
Performance,"===============] 100.00% 500 23s 390ms; Time for merging to result: 0h 0m 0s 44ms; 68875 alignments calculated; 12897 sequence pairs passed the thresholds (0.187252 of overall calculated); 25.794001 hits per query sequence; Time for processing: 0h 0m 24s 118ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/pref_0 -v 3. Time for processing: 0h 0m 0s 12ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/aln_0 -v 3. Time for processing: 0h 0m 0s 0ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/input_0 -v 3. Time for processing: 0h 0m 0s 0ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/aln_merge -v 3. Time for processing: 0h 0m 0s 0ms; convertalis tmp/18110643841744502873/query tmp/18110643841744502873/target tmp/18110643841744502873/result alnResult.m8 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --format-mode 0 --format-output query,targe t,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --db-output 0 --db-load-mode 0 --search-type 0 --threads 40 --compresse d 0 -v 3. [=================================================================] 100.00% 500 0s 376ms; Time for merging to alnResult.m8: 0h 0m 0s 57ms; Time for processing: 0h 0m 1s 129ms; rmdb tmp/18110643841744502873/result -v 3. Time for processing: 0h 0m 0s 10ms; rmdb tmp/18110643841744502873/target -v 3. Time for processing: 0h 0m 0s 4ms; rmdb tmp/18110643841744502873/target_h -v 3. Time for processing: 0h 0m 0s 2ms; rmdb tmp/18110643841744502873/query -v 3. Time for processing: 0h 0m 0s 1ms; rmdb tmp/18110643841744502873/query_h -v 3. Time for processing: 0h 0m 0s 1ms; [lihuilin@login01 MMseqs2]$ ls; alnResult.m8 azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile examples lib LICENSE.md README.md src tmp util; [lihuilin@login01 MMseqs2]$; [lihuilin@login01 MMseqs2]$ ls; alnResult.m8 azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile ex",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:8275,load,load-mode,8275,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['load'],['load-mode']
Performance,"============] 69.22K 3s 47ms. Time for merging to aln_swap: 0h 0m 0s 21ms; Time for processing: 0h 0m 10s 409ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln -v 3 . Time for processing: 0h 0m 0s 938ms; mvdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 107ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15106287 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 73ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 66ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:8718,load,load-mode,8718,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['load'],['load-mode']
Performance,"========] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 219ms; Time for processing: 0h 0m 6s 996ms; align /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 /scratch/orakov/tmp/queryT.mmsq.outDB --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 100000 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score and coverage; Query database size: 313 type: Aminoacid; Target database size: 313 type: Aminoacid; Calculation of alignments; [=================================================================] 313 0s 75ms; Time for merging to queryT.mmsq.outDB: 0h 0m 0s 320ms. 408 alignments calculated.; 408 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.303514 hits per query sequence.; Time for processing: 0h 0m 0s 966ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:2606,load,load-mode,2606,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497,1,['load'],['load-mode']
Performance,"=======] 100.00% 276 0s 0ms. Time for read in: 0h 0m 0s 83ms; Total time: 0h 0m 0s 118ms. Size of the sequence database: 276; Size of the alignment database: 276; Number of clusters: 239. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 125ms; createsubdb tmp//10798751672030653963/clu_step0 tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 16ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 6ms; Index statistics; Entries: 1415; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 50ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:15727,load,load-mode,15727,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['load'],['load-mode']
Performance,"====] 69.22K 3s 841ms. Time for merging to aln_swap: 0h 0m 0s 23ms; Time for processing: 0h 0m 12s 313ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln -v 3 . Time for processing: 0h 0m 11s 128ms; mvdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 176ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15288254 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 75ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:12235,load,load-mode,12235,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['load'],['load-mode']
Performance,"==] 100.00K 0s 404ms; Time for merging to clu_redundancy: 0h 0m 0s 145ms; Time for processing: 0h 0m 0s 639ms; createsubdb ./mmseqs_output/tmp/5351426679731834765/clu_redundancy ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 13ms; prefilter ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/pref_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 20942 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 20942 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 20.94K 0s 601ms; Index table: Masked residues: 6638; Index table: fill; [=================================================================] 20.94K 0s 645ms; Index statistics; Entries: 1435009; DB size: 496 MB; Avg k-mer size: 0.022422; Top 10 k-mers; GPGGTL 342; LDMPDG 185; LGDYKP 145; DVLDMP 119; PFLEAR 69; PFPEAR 65; FDDTDS 59; ADYTFS 55; LITRGY 55; GPGGTT 44; Time for index table init: 0h 0m 2s 668ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 20942; Target db start ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:19650,load,load-mode,19650,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"==] 2 0s 1ms; Time for merging to query_seqs_h: 0h 0m 0s 3ms; Time for merging to query_seqs: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 18ms; splitsequence tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 16 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 2ms; prefilter tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --seed-sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3 -s 5.7 . Query database size: 4 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 2 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 2 0s 2ms; Index table: Masked residues: 18; Index table: fill; [=================================================================] 2 0s 2ms; Index statistics; Entries: 8669; DB size: 8192 MB; Avg k-mer size: 0.000008; Top 10 k-mers; AAATAAACAAAAAAA	2; TTAGATCGAAAAAAA	2; AACCAACTAAAAAAA	2; TCCTTTCTCAAAAAA	2; CCAAAATAACAAAAA	2; TTGAATGCACAAAAA	2; AATGTGCTACAAAAA	2; GCAATTAACCAAAAA	2; CTCTGGTACGAAAAA	2; GGGTGGAATGAAAAA	2; Time for index table init: 0h 0m 7s 405ms; Process prefiltering step 1 of 1. k-mer similarity thr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:7215,load,load-mode,7215,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['load'],['load-mode']
Performance,"=] 100.00% 284 0s 5ms. Time for merging to clu_not_accepted_swap: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 66ms; createsubdb tmp//538598962955004214/clu_not_accepted_swap ../DB_in/fasta_in_db_HC tmp//538598962955004214/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//538598962955004214/clu ../DB_in/fasta_in_db_HC tmp//538598962955004214/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/seq_wrong_assigned tmp//538598962955004214/seq_seeds.merged tmp//538598962955004214/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 9 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 210 0s 27ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 210 0s 8ms; Index statistics; Entries: 1285; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 174ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 210; [=============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:27820,load,load-mode,27820,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['load'],['load-mode']
Performance,"> Cascaded clustering being the default for mmseqs cluster, this would mean that the search module is not used?. In default, `mmseqs cluster` performs first `linclust` followed by cascaded clustering. . > When using mmseqs search args I can get the similarity file in blast format (using convertalis). Therefore, is it also possible to get this file at the end of clustering step, if it uses mmseqs search algorithm as I saw p.14?. It is possible to get the similarity file by realigning the cluster. Following is an example:. mmseqs cluster seq clu tmp ; mmseqs align seq seq clu aln; mmseqs convertalis seq seq aln aln.m8",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/279#issuecomment-590826644:142,perform,performs,142,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/279#issuecomment-590826644,1,['perform'],['performs']
Performance,"> Could you tell something about your input (and target database/search settings)?; > ; > We generally have had good experience with our own two socket Epic 7742 systems. One thing where the Epyc system is at a disadvantage is currently on IO. We write one output file per thread and these have to be merged in some steps. With 256 merges this can take quite a bit of time, in this case the Intel system would be slower in computing but as it has less threads it might be faster in merging and might thus win overall. Thank you very much for your reply.; Because I just want to test the new computer, I just entered these. The input file is very small. ""mmseqs taxonomy /data/testdb /data/datenbank/silvadb /data/testdb_result /data/tmp"". For my old computer (2Intel Xeon Silver 4210, Mem: 64G, Swap: 2G) it only takes 4 minutes, but this new computer takes 10 minutes. I have tried adding the following commands ""--threads 10; --threads 20; --threads 40; --threads 128; --threads 256"". But it takes at least 10 minutes. When --threads is greater than 100, the computer can no longer perform any other operations. (Memory usage never exceeds 20G.); After reading some information, we have a few unsure questions. Does the memory frequency (2933 or 3200) affect the operation of the program? We are now using 8 pieces of memory. If you add 8 pieces, can the current problem be improved?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823518160:1084,perform,perform,1084,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823518160,1,['perform'],['perform']
Performance,"> Do you notice that the system is swapping a lot? 1GB RAM per thread is also very little. Our systems usually have 8 to 16 GB RAM per thread. Thank you very much for your reply. Due to our current work, only 40G memory was used at the highest time. I believe your suggestions may be important to our next project.; I didn’t find any changes in swapping. When I noticed it was always 0. During the test，memory usage never exceeds 20G. But the calculation speed is very slow. And when the thread is greater than 100, other operations cannot be performed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823522549:543,perform,performed,543,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823522549,1,['perform'],['performed']
Performance,"> I read the wiki and [User Guide](http://mmseqs.com/latest/userguide.pdf). Although there are examples about `--db-load-mode 2`, none mentions or explains `--db-load-mode 3`. This code explains: ; https://github.com/soedinglab/MMseqs2/blob/87e7103d289029dc3345f85ea9a4c4c6d6416e46/src/prefiltering/PrefilteringIndexReader.cpp#L385. Basically `--db-load-mode 3` is the combination of `--db-load-mode 2` and `vmtouch`, meaning `mmseq` will mmap and put the necessary data in the memory.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422790519:116,load,load-mode,116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422790519,4,['load'],['load-mode']
Performance,"> I think I encountered same question like you, and my HPC node similar with yours, it kept running almost 17h and no progress, I'm wondering that when you set the param `--db-load-mode 3` then rerun it, how long could you detect the output?; > ; > Any anwser would be helpful! Thanks!. Hard to give a number. `--db-load-mode 2` will halt indefinitely. `--db-load-mode 3` at least can give results.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422791910:176,load,load-mode,176,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422791910,3,['load'],['load-mode']
Performance,"> I would not recommend to use indexing for a weekly job. Without pre-indexing you can use a smaller machine, i.e. in the 128-256GB RAM range. 500k queries vs UniProt should not be a big issue for such a machine.; > ; > Pre-indexing usually helps if you want to search with very single queries or very small sets, or if you have little memory and very fast storage. In other cases it might even hurt performance, I am not sure if this issue was ever resolve in Linux, but creating an index on the fly allows to use a Linux kernel mechanism called Transparent Huge Pages (THP), which results in about 10-15% faster run time for larger batch searches.; > ; > So I would recommend to delete all `.idx` files (rm -f -- DB.idx.*) and proceed without `createindex`.; > ; > Additionally, for the PDB, I also recommend to first do a 100% seq.id. clustering to not repeat searches for identical queries.; > ; > Regarding your question: If the machine running `createindex` did not have enough RAM to fully fit the index it will split it into N splits. These are the targetDB.idx.0 ... targetDB.idx.N files you see. You can manually disable this by specifying `--split 1`, then it will create only the `targetDB.idx` file (and some supporting files). In this case you will still need a machine that can fit the whole precomputed index into memory. Thank you, that's very helpful! I do remember reading about the THP but now everything makes more sense. . In addition to clustering identical queries, do you also recommend merging the query seqs into one set (like you mentioned in the other post)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/757#issuecomment-1741139009:400,perform,performance,400,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757#issuecomment-1741139009,1,['perform'],['performance']
Performance,"> In default, mmseqs cluster performs first linclust followed by cascaded clustering. So, `mmseqs search` algorithm is never used for clustering?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/279#issuecomment-590829868:29,perform,performs,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/279#issuecomment-590829868,1,['perform'],['performs']
Performance,> We could reintroduce the code for that again and see if we get equal performance. @milot-mirdita Could you push a commit that restores the 128 bit path to this PR? I don't think I understand that part of the code very well.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-646658968:71,perform,performance,71,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-646658968,1,['perform'],['performance']
Performance,"> ```; > mmseqs databases UniProtKB uniprot tmp; > ```; > ; > should download the latest uniprot and set it up correctly for use with MMseqs2 including taxonomy information. Thanks for this - we ran this command and obtained main database files containing `uniprot_h`, `uniprot.index` etc. However we probably still need some help to understand the next steps to assign taxonomy IDs to alignments. Following https://github.com/sokrypton/ColabFold/issues/216, here is what we tried:; ```; mmseqs convertalis test/qdb uniprot test/res_exp test/res_exp_realign.m8 --format-output query,target,taxid,taxname,taxlineage,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar; ```; and it raised the following error:; ```; Loading NCBI taxonomy; names.dmp, nodes.dmp, merged.dmp from NCBI taxdump could not be found!; ```; Is there something that we are missing here? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2293140070:735,Load,Loading,735,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2293140070,1,['Load'],['Loading']
Performance,@ShangjinTan using your parameter (90% covered at 95% sequence identity) I would assume that linclust performs just slightly worse than CD-HIT. It is very odd at that `--kmer-per-seq to 80` does produce exactly the same. ; What version of MMseqs2 do you use? What parameter do you use for CD-HIT? Could you please post the log of default linclust and the `--kmer-per-seq to 80` run?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-712785542:102,perform,performs,102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-712785542,1,['perform'],['performs']
Performance,"@TsviyaOlender Could you please provide a minimal example that we can reproduce this issue? ; `--search-type 2` performs a translated search, which is similar to blastx. To just perform a amino acid search use `--search-type 1`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-706941832:112,perform,performs,112,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-706941832,2,['perform'],"['perform', 'performs']"
Performance,@UriNeri the log is only written to stdout. We do not store a copy of the log in the temp directory. So you probably need to rerun the whole job. If you use the same tmp folder and command then it will just perform the last step.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570949442:207,perform,perform,207,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570949442,1,['perform'],['perform']
Performance,@acpguedes I do not think the indexing should take too much time in the case of @yiming-gcm. Because he uses sequence/sequence searches. . @acpguedes Since you perform iterative search the index has to be rebuild every iteration. Building the index several times and searching a small query sets leads to a high overhead.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407440708:160,perform,perform,160,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407440708,1,['perform'],['perform']
Performance,@dhwanidesai so you perform millions of read searches against the refseq database at once right? Could you please provide an output log of your run? It would help me to understand whats the bottleneck in your analysis.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-506363220:20,perform,perform,20,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-506363220,2,"['bottleneck', 'perform']","['bottleneck', 'perform']"
Performance,"@dnieuw actually you encountered two separate issues. . (1) MMseqs2 performs a cascaded clustering (in default in 3 steps). This means that the centroid of a cluster can change with every iteration. So if an centroid changes then it is possible that some members that were already close to the e-value criteria do not fulfill the clustering criteria anymore. However, we do have an mode called `--cluster-reassign`. This mode removes sequences from the cascaded cluster result that do not fulfill the cluster criteria and reassigns them (if possible) to a different cluster. But this is only supported for protein sequences. This brings us already to issue (2). (2) It is currently not possible to realign DNA sequences from a clustering. The problem is, we need an anchoring point to perform a banded nucleotide alignment. The clustering format does not contain an anchor. The reason why you actually can realign some of the sequences is because In default we assume diagonal 0. . The current behavior is not good. I will add an error if cluster results are used in the alignment. Unfortunately I do not have any solution for this problem at the moment. I will keep you posted once I come up with something.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580534070:68,perform,performs,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580534070,2,['perform'],"['perform', 'performs']"
Performance,"@dnieuw not performing cascaded clustering will lead to a higher hard disk requirement since you need to keep the all against all results on disk. Also for the protein clustering it would slow it down significantly because you need to search with a high sensitivity all against all, while the cascaded increases sensitivity every iteration. The nucleotide clustering should not be affected by the sensitivity only the hard disk issue. For issue 2, I currently do not have any direct solution. It might be possible to use the normal smith waterman, but it might be very slow. How long are you sequences?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580977887:12,perform,performing,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580977887,1,['perform'],['performing']
Performance,"@gabrielepozzati It is crucial for single (or small) query sets that the target database is already in memory. If the target database is not in memory, MMseqs2 needs to fetch 100s of GBs each search. The following workflow creates an index and fetches the database into memory and efficiently searches them. mmseqs createdb targetDB.fasta targetDB; mmseqs createindex targetDB tmp ; mmseqs touch targetDB; mmseqs search queryDB targetDB aln tmp --db-load-mode 2. The tool `mmseqs touch` fetches the database into memory and the `--db-load-mode 2` is an optimized way to read the database if the database is already fetched into memory.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/165#issuecomment-463183981:450,load,load-mode,450,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/165#issuecomment-463183981,3,"['load', 'optimiz']","['load-mode', 'optimized']"
Performance,"@martin-steinegger ; ```; * thread #5, stop reason = EXC_BAD_ACCESS (code=1, address=0x5a7684002); frame #0: 0x0000000100169b58 mmseqs`CacheFriendlyOperations<2u>::findDuplicates(this=0x0000600000c08090, output=0x00000005a72a2336, outputSize=580749, computeTotalScore=true) at CacheFriendlyOperations.cpp:229:50; 226 	 const unsigned int element = tmpElementBuffer[n].id;; 227 	 const unsigned int hashBinElement = element >> (MASK_0_5_BIT);; 228 	 output[doubleElementCount].id = element;; -> 229 	 output[doubleElementCount].count = duplicateBitArray[hashBinElement];; 230 	 output[doubleElementCount].diagonal = tmpElementBuffer[n].diagonal;; 231. (lldb) p hashBinElement; (const unsigned int) 742456; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p doubleElementCount; (size_t) 581514; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p output[doubleElementCount]; error: Couldn't apply expression side effects : Couldn't dematerialize a result variable: couldn't read its memory; (lldb) p output; (CounterResult *) 0x00000005a72a2336; (lldb) p duplicateBitArray[hashBinElement]; (unsigned char) '\x01'; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060:135,Cache,CacheFriendlyOperations,135,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060,2,['Cache'],['CacheFriendlyOperations']
Performance,"@martin-steinegger I am encountering a similar error when using a custom database to generate the MSA to be used by Colabfold for structure prediction. . `Invalid database read for database data file=/media/data/Databases/database_50_db.idx, database index=/media/data/Databases/database_50_db.idx.index; getData: local id (4294967295) >= db size (50); Traceback (most recent call last):; File ""/media/data/tools/ColabFold/colabfold/mmseqs/search.py"", line 487, in <module>; main(); File ""/media/data/tools/ColabFold/colabfold/mmseqs/search.py"", line 427, in main; mmseqs_search_monomer(; File ""/media/data/tools/ColabFold/colabfold/mmseqs/search.py"", line 108, in mmseqs_search_monomer; run_mmseqs(mmseqs, [""expandaln"", base.joinpath(""prof_res""), dbbase.joinpath(f""{metagenomic_db}{dbSuffix1}""), base.joinpath(""res_env""), dbbase.joinpath(f""{metagenomic_db}{dbSuffix2}""), base.joinpath(""res_env_exp""), ""-e"", str(expand_eval), ""--expansion-mode"", ""0"", ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)]); File ""/media/data/tools/ColabFold/colabfold/mmseqs/search.py"", line 23, in run_mmseqs; subprocess.check_call([mmseqs] + params); File ""/media/data/tools/ColabFold/localcolabfold/colabfold-conda/lib/python3.10/subprocess.py"", line 369, in check_call; raise CalledProcessError(retcode, cmd); subprocess.CalledProcessError: Command '[PosixPath('mmseqs'), 'expandaln', PosixPath('test_msa/prof_res'), PosixPath('/media/data/Databases/database_50_db.idx'), PosixPath('test_msa/res_env'), PosixPath('/media/data/Databases/database_50_db.idx'), PosixPath('test_msa/res_env_exp'), '-e', 'inf', '--expansion-mode', '0', '--db-load-mode', '0', '--threads', '96']' returned non-zero exit status 1.` . I have replaced the third metagenomic database with a custom database, any suggestions on how I could fix this issue would be highly appreciated.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1706126605:957,load,load-mode,957,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1706126605,2,['load'],['load-mode']
Performance,"@martin-steinegger I have tested by passing the same `-s` when creating the indexes, following are the results: . >Using same `-s` as `search` in `createindex` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a*-a* | 10107 | 23.81 |; | b*-b* | 23206 | 42.43 |; | a*-b* | 8155 | 26.46 |; | b*-a* | 8390 | 37.12 |. They are just slightly different. > If you index a database with MMseqs2 then all k-mers are stored if no sensitivity -s is provided to createindex ; ; Actually I thought that could have been the problem. . In the early versions of MMseqs I had noticed the difference when running without the indexed DBs, but it was not that much, and the only side-effect was a slight increase in the overall execution time (maybe 10~20% slower).; Nevertheless, now it runs faster and matches less, which is caused from what you explained about I guess. . > Do you have a small example that I could use the reproduce this issue? . Yes, get the 2 small proteomes I used from the following link ; https://send.firefox.com/download/8d4ac7f72e90671b/#ioryCshD4vIZCAPxd30CCw. I will do another couple of tests to see if I can increase the accuracy when no indexing is performed. . `UPDATE`; @martin-steinegger I think just found the problem... ; When running `search` without selecting the matrix for pre-filtering the number of hits, as well as the running times, go back to what expect. The differences are caused in this case by the use of the default VTML in the prefiltering step. As you can see from the following table, the results are much more reasonable. >Without `--seed-sub-mat nucl:nucleotide.out,aa:blosum62.ou` in `search` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a-a | 10209 | 29.87 |; | b-b | 23523 | 52.05 |; | a-b | 8281 | 32.13 |; | b-a | 8533 | 45.62 |; ; I confirm this is only happening when using blosum62 in the `prefilter` step",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537:1194,perform,performed,1194,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537,1,['perform'],['performed']
Performance,"@milot-mirdita . The least version works nice with default parameters, the most recent version at linux brew are still running, but since the prefilter are finished and the alignment are running, I presume it is working without default parameters. ```; Program call:; prefilter pbps.neighbors.DB pfam_profile.idx tmp/6822607060114486044/pref --sub-mat blosum62.out --seed-sub-mat VTML80.out -s 7.5 -k 6 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 10 --compressed 0 -v 3 ; ``` . Thanks.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483366690:716,load,load-mode,716,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483366690,1,['load'],['load-mode']
Performance,"@milot-mirdita Thanks for your response! This is good stuff. I hadn't considered the point about data size, though I do have a number of TB to work with. . Re. batching, is there a built in module to chunk up the query db or should I manually split my fasta and make seperate DBs? I assume `splitdb`?. Here is my current list of commands in hard coded format:. ```; # UniRef search ; mmseqs search queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res outdir/tmp --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Move profile; mmseqs mvdb outdir/tmp/latest/profile_1 outdir/prof_res; mmseqs lndb queryDB_h outdir/prof_res_h. # Expand and align UniRef results; mmseqs expandaln queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95 --db-load-mode 1 --threads 4. mmseqs align outdir/prof_res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp outdir/res_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter UniRef results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign outdir/res_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --threads 4 --max-seq-id 1.0 --filter-min-enable 100. # Convert UniRef results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign_filter outdir/uniref.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Environmental search; mmseqs search outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env outdir/tmp/env --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Expand a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:504,load,load-mode,504,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326,2,['load'],['load-mode']
Performance,"@milot-mirdita are you by any chance aware of a specific user that's running local mmseqs server with equivalent performance to what you have? I think you could be on the right track with the KVM, but I'd prefer to first check in with others to see there's correlation between KVM/bare-metal and this performance wall.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1510360084:113,perform,performance,113,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1510360084,2,['perform'],['performance']
Performance,"@mr-c Thank you for this huge effort to port MMseqs2 to simde. I think the there are two road block at the moment for this, (1) there is difference in the regression between SSE and the scalar code, (2) the neon code not yet fully supported. . The first issues is not so easy to fix without having some performance penalty in the SSE branch. The differences betwen SSE and the scalar code originates from the following code:. simdf32_store(w_contrib[j] + (a * VECSIZE_INT), simdf32_rcp(res));. The intrinsic `simdf32_rcp` is approximating 1/res but the scalar version is computing the real value. A fix would be to switch from `simdf32_rcp` to `simdf32_div`. However this instruction is much slower and this performance critical code. The second issue has to be solved in the `simde` abstraction layer. We would require a full support of the instruction for NEON architecture. There is currently a huge speed penalty using `simde` in our regression.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-632486345:303,perform,performance,303,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-632486345,2,['perform'],['performance']
Performance,"@nick-youngblut I am sorry about the multi output. The main reason for them is to avoid IO. Slow IO system can take hours/days to merge tera bytes of data and MMseqs2 modular architecture require multiple IO steps unlike other aligners. The IO step is especially critical if the search was performed using many threads since the merging runs single threaded. ; However, every module should create a `.dbtype` file at the end, which can be used to check if the module finished successfully. . The `clusterupdate` is one of the modules that needs ground up rebuild. Too much of its logic is done in Bash steps that do not verify the consistency correctly. . I am a bit confused why your `clusterupdate` uses `extractorfs`. What is your exact setup? Do you try to update protein clusters using genomes?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664790179:290,perform,performed,290,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664790179,1,['perform'],['performed']
Performance,"@zkstewart it will be a bit harder to support iterative searches with multiple hits detection. I will see if it is possible the next days. . The easiest solution, currently working solution is to first perform an iterative search followed by a profiles sequence search using the alternative alignment mode. This should be sensitive and include alternative alignments. mmseqs search qDB tDB resDB tmp ... --num-iterations 3; mmseqs result2profile qDB tDB resDB qProfDB; mmseqs search qProfDB tDB resDB tmp --alt-ali 5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/86#issuecomment-416247457:202,perform,perform,202,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/86#issuecomment-416247457,1,['perform'],['perform']
Performance,"A quick comment, in case it should help other users in a similar situation: it took me a while to understand why the performance of mmseqs2 search speed was at least an order of magnitude slower on our compute cluster than it was on a single server. It turns out the UniRef90 target DB index file with sufficient split (16) to accommodate the modest node RAM (32GB) was over 200GB in size and therefore too large to fit on the limited node local disks, so it stayed on the network shared disk bay (nonetheless with reasonable Infiniband 40Gb/s connection to the nodes). With such a configuration the mmseqs2 search jobs on the nodes were endlessly I/O bound, using a ~20% fraction of a core instead of the 16 cores available. As soon as I deleted the target DB index files (_sk7_), the mmseqs2 search jobs distributed on the cluster nodes performed again really well!; So in a nutshell, I would recommend not using pre-indexed DB files on a compute cluster when these large files can't reside on a local disk, and instead use on the fly indexing which of course induces a significant overhead, but orders of magnitude less significant than the actual index file access on shared network storage. And of course this on the fly indexing overhead becomes less important as the query DB gets larger :) With large query DBs, I'm very impressed by the speed of (non MPI) distributed mmeseqs on our modest cluster (whilst providing excellent sensitivity of course)!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252239392:117,perform,performance,117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252239392,2,['perform'],"['performance', 'performed']"
Performance,"A related question is:; After loading the DB into memory and running the searches, does the DB still stay in memory? How do i free up the memory after the run is done? Do I have to load the DB into memory before comparison of every query file with the DB?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-506841024:30,load,loading,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-506841024,2,['load'],"['load', 'loading']"
Performance,"Actually Now I have used; For the next step, an index file of the targetDB is computed for a fast read-in. It is recommended; to compute the index if the targetDB is reused for several searches. If only few searches against this; database will be done, this step should be skipped.; mmseqs createindex targetDB tmp; This call will create a targetDB.idx file. It is just possible to have one index per database.; Then generate a directory for temporary files. MMseqs2 can produce a high IO on the file system.; It is recommended to create this temporary folder on a local drive.; Then after I got ; tmp uniprotdb.dbtype uniprotdb_h.dbtype uniprotdb.idx.0 uniprotdb.idx.2 uniprotdb.idx.4 uniprotdb.idx.index uniprotdb.lookup; uniprotdb uniprotdb_h uniprotdb_h.index uniprotdb.idx.1 uniprotdb.idx.3 uniprotdb.idx.dbtype uniprotdb.index uniprotdb.source. so now I am confused which **idx file** needs to be considered ?; ; **mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124**",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887#issuecomment-2356934879:1032,load,load-mode,1032,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887#issuecomment-2356934879,1,['load'],['load-mode']
Performance,"All tests pass on my PowerEdge 32-ht system with MMSEQS_NUM_THREADS=16. . Also, I had forgotten that this machine has vmem limits, so I was actually running with about 1G/thread before. Exceprt from build:. [ 3% 10/228] /usr/bin/c++ -I/usr/local/include -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/tinyexpr -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/microtar -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/simde -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/simd -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/gzstream -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/alp -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/cacode -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/ksw2 -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/xxhash -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/ips4o -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -fsigned-char -D_WITH_GETLINE -std=c++1y -stdlib=libc++ -MD -MT lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o -MF lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o.d -o lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o -c /usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/cacode/lambda_calculator.cpp. ... [100% 228/228] : && /usr/bin/c++ -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -lpthread -fstack-protector-strong -fsigned-char -D_WITH_GETLINE -std=c++1y -stdlib=libc++ -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp=libomp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm /usr/local/lib/libzstd.a lib/microtar/libmicrotar.a -lz -lbz2 -lomp && :",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869007866:1623,optimiz,optimization,1623,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869007866,1,['optimiz'],['optimization']
Performance,"As far as I know MMSeqs2 uses profile/profile searches to build an MSA by querying a sequence database to a profile database. I couldn't find any way of directly performing profile/profile searches to compare two profile databases. Are there any plans to include this as a separate command (or in the ""search"" command"")?. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/529:162,perform,performing,162,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/529,1,['perform'],['performing']
Performance,"At least for one dataset that I'm working on, I seem to still be getting this error even though I'm using `MMseqs2 Version: 10.6d92c`:. ```; rescorediagonal /tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db /tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db /tmp/global/nyoungblut/LLMGAG_274879977417/linclust_tmp//7142606106325398954/pref /tmp/global/nyoungblut/LLMGAG_274879977417/linclust_tmp//7142606106325398954/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 24 --compressed 0 -v 3. [Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; getData: local id (4294967295) >= db size (184470); Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537552315:657,load,load-mode,657,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537552315,1,['load'],['load-mode']
Performance,"Because we don't develop the .sh script anymore and it's not up-to-date. The development is happening in the python version now. If you want to use the server - with fast response times, like our has - you need a server with ~1TB permanently committed RAM. Anything less will not work.; `colabfold_search` does not have this issue, however, it has slightly different performance pitfalls to look out for. Single query searches will remain slow, with `colabfold_search`. Our proposed workflow is to gather a few hundred to thousands of queries. Do the MSA generation stage with `colabfold_search` and then batch predict them with `colabfold_batch`. Edit: the python `colabfold_search` is also pip-installed together with `colabfold_batch`. If you installed with localcolabfold (recommended) or with pip. You will have both available.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497:171,response time,response times,171,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497,2,"['perform', 'response time']","['performance', 'response times']"
Performance,"CCATTCTCG	9602; Time for index table init: 0h 2m 35s 948ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1604546; Target db start 1 to 802273; [=================================================================] 1.60M 1h 46m 59s 76ms. 0.996125 k-mers per position; 14106896 DB matches per sequence; 1161942 overflows; 277 sequences passed prefiltering per query sequence; 300 median result list length; 3973 sequences with 0 size result lists; Time for merging to pref: 0h 0m 0s 974ms; Time for processing: 1h 49m 41s 539ms; rescorediagonal tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/pref tmp/16479300059278292880/aln_ungapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.85 -a 0 --cov-mode 0 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 112 --compressed 0 -v 3 . [=================================================================] 1.60M 14m 50s 51ms; Time for merging to aln_ungapped: 0h 0m 1s 439ms; Time for processing: 0h 15m 7s 16ms; subtractdbs tmp/16479300059278292880/pref tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/pref_subtract --threads 112 --compressed 0 -v 3 . subtractdbs tmp/16479300059278292880/pref tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/pref_subtract --threads 112 --compressed 0 -v 3 . Remove tmp/16479300059278292880/aln_ungapped ids from tmp/16479300059278292880/pref; [=================================================================] 1.60M 1s 175ms; Time for merging to pref_subtract: 0h 0m 1s 400ms; Time for processing: 0h 0m 5s 506ms; align tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/pref_subtract tmp/16479300059278292880/aln_gapped --sub-mat 'aa:blosum62.out,nucl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:14011,load,load-mode,14011,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['load'],['load-mode']
Performance,Commit https://github.com/soedinglab/MMseqs2/commit/407b315e7edcbc9eb73527b904172e603095494e should fix the complex issues. It was due to multi-threading.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1088796634:138,multi-thread,multi-threading,138,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1088796634,1,['multi-thread'],['multi-threading']
Performance,"Compile the specific version [MMseqs2 71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1 (May 28, 2023)](https://github.com/soedinglab/MMseqs2/archive/71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1.zip) under Linux. I encounter a similar error as [here](https://github.com/soedinglab/MMseqs2/issues/480). And the mentioned package `libgcc-ng` has been installed. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. `cd MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; make; make install ; export PATH=/home/liuhongbin/database/colabfoldMSA/MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1/build/bin/:$PATH`. no errors were observed here. ## MMseqs Output (for bugs); error:. (colabfoldMSA) liuhongbin@node7:~/database/colabfoldMSA/MMseqs2-71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1/build$ ./bin/mmseqs; ./bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; 71dd32ec43e3ac4dabf111bbc4b124f1c66a85f1; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; g++ (GCC) 5.4.0; cmake version 3.28.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; uname -a | grep x86_64; Linux node7 3.10.0-1160.11.1.el7.x86_64 #1 SMP Fri Dec 18 16:34:56 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; * Operating system and version:; CentOS Linux release 8 (Core). * packages in current environment; `conda",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/795:1017,load,loading,1017,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/795,1,['load'],['loading']
Performance,Could you please post the full long until it hands?. generally mmseqs is not very good at small number of queries. We have built various optimizations to deal with that (e.g. for ColabFold) but they come with very different trade-offs. let’s see what the log says first before further recommendations.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899556332:137,optimiz,optimizations,137,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899556332,1,['optimiz'],['optimizations']
Performance,Could you please update your version and recreate the index there was a bug in this version. ; If the bug still persists please could you please send us the debug backtrace? ; To debug first compile MMseqs2 in debug mode. cmake -DCMAKE_BUILD_TYPE=Debug .. ; make . And then run the alignment with gdb . gdb --args mmseqs align tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 tmp/18071041534032520912/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 17702628 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 15 -v 3. After the crash just type . bt,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-437061143:705,load,load-mode,705,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-437061143,1,['load'],['load-mode']
Performance,"Could you run only the last module call in a debugger?; ```; gdb --args mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 32 --compressed 0 -v 3; ```. Then wait for a prompt and type `r` for run and then once it crashes type `bt` or backtrace and copy the output here. Using a newer version might also help, though I don't see any relevant changes in `convertalis` since the commit you used.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878294704:482,load,load-mode,482,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878294704,1,['load'],['load-mode']
Performance,"DIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	20; Shift hash 	5; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; pan.db /tmp//589280515582180421/clu_redundancy /tmp//589280515582180421/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 1 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional b",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:2650,perform,performs,2650,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['perform'],['performs']
Performance,"Dear MMseqs2 developers,; Thank you for making this excellent tool available. I'm using MMseq2s on an HPC cluster using the Slurm scheduler, and I'm trying to determine the best way to utilize as many cores per node as possible; ## Expected Behavior; MMSeqs2 launches 1 MPI task per node, and uses OpenMP to spawn as many threads as there are cores available on each node (48); ## Current Behavior; 1 MPI task per node is launched, but the number of threads running on any node is capped at 12, regardless of what value argument to `--threads` is provided; ## Steps to Reproduce (for bugs). Job script:. ```; #!/usr/bin/env bash. #SBATCH --job-name=mmseqs; #SBATCH --output=mmseqs_gcc12_test2.log; #SBATCH -N 8; #SBATCH --ntasks-per-node=1; #SBATCH --cpus-per-task=48; #SBATCH --time=08:00:00; #SBATCH -p medium. module load slurm; module load openmpi/gcc12.1.0/4.1.4. export PATH=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45/bin:$PATH. DBDIR=/lustre/projects/carlson-group/mmseqs2-project/DBs. RUNNER=""mpirun -pernode -np 8"" mmseqs search human_prot.db $DBDIR/UniRef50 human_prot_results_test2 ./tmp; ```. ## MMseqs Output (for bugs); ```. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:820,load,load,820,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,2,['load'],['load']
Performance,"Dear MMseqs2 team,. I got some wired results which I could not explain by myself. I hope you can help me with it. ## Expected Behavior; I was expecting MMseqs2 to be more sensitive if using default options (*spaced-kmer-mode* enabled and *kmer-matching* disabled). ## Current Behavior; Using MMseqs2 search with default options (*spaced-kmer-mode* enabled and *kmer-matching* disabled), the program found less results than if disabling *spaced-kmer-mode* and enabling *kmer-matching*. ## Context; I thought that MMseqs2 uses spaced seeds and no exact k-mer matching to increase the sensitivity during search. I was curious to see how many alignments are found by MMseqs2 exclusively because of this. Therefore, I performed two searches with MMseqs2 search either using spaced seeds and no exact k-mer matching or the opposite. Surprisingly, I looks like using no spaced seeds and an exact k-mer matching increases the programs sensitivity as there are more results found. Do you have an explanation for this results?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/266:713,perform,performed,713,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/266,1,['perform'],['performed']
Performance,"Dear Milot,. Thanks you for recommending the use of updated version and fixing performance issues. There were 3 billion sequences which clustered in 1 billion using was-cluster approach. I do not want to re-cluster the version of data I processed previously since I annotated these ~1 billion sequences and used in different projects already. As it seems, It may not be good idea to use db files from easy-cluster output. Do you think it is useful to create a new db (EBdb) out of easy-cluster output of the previous run, using rep_seq.fasta, and use EBdb as a template to compare newer sequences I want to cluster and finally update the EBdb to EBdb_new?. Intikhab. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 12:42; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module result2repseq. I think I fixed the performance issue in the latest commit cc7d7da<https://github.com/soedinglab/MMseqs2/commit/cc7d7da30ec779d6a2e886438f8295f59e2192f1>. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the easy- workflows yet. I'd recommend to stick to the basic commands as shown in the user guide. -; You",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337:79,perform,performance,79,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337,2,['perform'],['performance']
Performance,"Dear all,. Does MMSeqs2 provide a way (a command) to generate PSSM profiles from the MMSeqs2 multiple sequence alignment (msa) output file out.mm_msa?. I think providing such a functionality can help a lot. In this way, we don't need to call psiblast (which downgrades the runtime performance of the machine-learning tools) anymore to generate PSSM features for the protein residues. Alright?. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/580:281,perform,performance,281,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/580,1,['perform'],['performance']
Performance,"Dear developers,. I am trying to perform clustering on the set of closely-related sequences of retrotransposons (n = 736,771). The module ""easy-linclust"" works fine for this dataset. But whenever I used the ""cluster"" module (and also the ""easy-cluster"" module), I got a long list of error messages such as the following. Error: there must be an error: 98829 deleted from 373971 that now is empty, but not assigned to a cluster. I am unsure why these error messages occur and whether they could affect my clustering results or not. Could you please help me to solve this issue? Thank you in advance. MMseqs version: 96d452cb432fc4674991a48952deaf24d1787e77 (self-compiled); Full log: ; [full.log](https://github.com/soedinglab/MMseqs2/files/5384506/full.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/363:33,perform,perform,33,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363,1,['perform'],['perform']
Performance,"Dear developers; Is it possible to replace nt.fna.taxidmapping with a standard one (taxidmapfile)?. ```; http://ftp.ncbi.nih.gov/pub/taxonomy/accession2taxid/nucl_gb.accession2taxid.gz; sed '1d' nucl_gb.accession2taxid | awk '{print $2"" ""$3}' > taxidmapfile; ```. Then ; ```; mmseqs createdb nt.fna nt.fnaDB; mmseqs createtaxdb nt.fnaDB tmp --ncbi-tax-dump taxonomy/ --tax-mapping-file taxidmapfile --threads 16; mmseqs createindex nt.fnaDB tmp --threads 16; ```. ```; mmseqs createtaxdb /media/sergey/Disk_4/MMseq2_DB/nt.fnaDB /media/sergey/Disk_4/MMseq2_DB/tmp --ncbi-tax-dump /media/sergey/Disk_4/taxonomy/ --tax-mapping-file /media/sergey/Disk_4/taxidmapfile --threads 16; Create directory /media/sergey/Disk_4/MMseq2_DB/tmp; createtaxdb /media/sergey/Disk_4/MMseq2_DB/nt.fnaDB /media/sergey/Disk_4/MMseq2_DB/tmp --ncbi-tax-dump /media/sergey/Disk_4/taxonomy/ --tax-mapping-file /media/sergey/Disk_4/taxidmapfile --threads 16. MMseqs Version: 13.45111; NCBI tax dump directory /media/sergey/Disk_4/taxonomy/; Taxonomy mapping file /media/sergey/Disk_4/taxidmapfile; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 16; Verbosity 3. sh: 0: getcwd() failed: No such file or directory; Loading nodes file ... Done, got 2449198 nodes; Loading merged file ... Done, added 69078 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```. MMseqs2 Version: 13.45111; RAM 32Gb + Swp 20 Gb. When using the command to limit memory, I get the following error; Unrecognized parameter ""--split-memory-limit"".",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/624:1191,Load,Loading,1191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/624,3,['Load'],['Loading']
Performance,"Dear mmseqs2 developvers,. I have a list of thousands of subject - query fasta pairs, and I would like to run mmseqs to align each of these pairs in a way that each sequence is only aligned to its pair. This is how my list looks:. ```; S10CNODE_1.fasta S1CNODE_25.fasta; S10CNODE_2.fasta S2CNODE_8.fasta ; S10CNODE_3.fasta S5CNODE_11.fasta ; S10CNODE_4.fasta S3CNODE_7.fasta; S10CNODE_5.fasta S6CNODE_10.fasta; ```; Is there an efficient way to perform these 1:1 alignments? Could I create a database that contains all sequences and then align a database subentry?. I am trying to avoid aligning all against all.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/813:445,perform,perform,445,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/813,1,['perform'],['perform']
Performance,"Disregarding how much biological sense it makes, would you mind rerunning the `clusthash` workflow above with the latest commit? I refactored some code and want to know if it improved the performance. Also the crash in `result2flat` was probably because of the wrong input database (clusterDB instead of DB_clu_rep). It should be:; ```; mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 clusterDB scafs_reps.fasta --use-fasta-header; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570632233:188,perform,performance,188,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570632233,1,['perform'],['performance']
Performance,"Do you have the tmp directory still? If you could run `swapdb` in a debugger that would be very helpful:. ```; gdb --args mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; ```. Then once you get a prompt enter `r` (for run) and press enter. Once it crashes enter `bt` (for backtrace) and press enter. ; Please copy the output and paste it here.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762278641:646,load,load-mode,646,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762278641,1,['load'],['load-mode']
Performance,"Each iteration of the cascaded clustering performs a prefilter (`prefilter`), gapped SW alignment (`align`) and a clustering (`clust`).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/279#issuecomment-590835391:42,perform,performs,42,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/279#issuecomment-590835391,1,['perform'],['performs']
Performance,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460:383,optimiz,optimizations,383,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460,3,['optimiz'],['optimizations']
Performance,"Firstly, thank you for making and maintaining such a great tool!. ## Expected Behavior; When performing a search (or similar function like 'taxonomy'), when providing an evalue of `-e 1e-50`, I would expect to have results filtered according to this evalue. ## Current Behavior; No results are returned/all results are filtered out, even though there should be hits with evalues smaller than 1e-50. (i.e. I can see the hits when I use an `-e 1e-30`). ## Steps to Reproduce (for bugs); The input files and outputs are here [didi_e_issue_mmseqs.zip](https://github.com/soedinglab/MMseqs2/files/5872895/didi_e_issue_mmseqs.zip); ```; conda install -c bioconda mmseqs2; mmseqs createdb query_fasta.fasta queryDB; mmseqs createdb target_fasta.fasta targetDB; mkdir no_e_cutoff; mkdir 30; mkdir 50; mmseqs search queryDB targetDB no_e_cutoff/resultDB tmp --search-type 3 >&1 | tee no_e_cutoff/no_e_cutoff.out; mmseqs convertalis queryDB targetDB no_e_cutoff/resultDB no_e_cutoff/resultDB_no_e_cutoff.m8 >&1 | tee -a no_e_cutoff/no_e_cutoff.out; rm -r tmp; mmseqs search queryDB targetDB 30/resultDB tmp -e 1e-30 --search-type 3 >&1 | tee 30/30.out; mmseqs convertalis queryDB targetDB 30/resultDB 30/resultDB_30.m8 >&1 | tee -a 30/30.out; rm -r tmp; mmseqs search queryDB targetDB 50/resultDB tmp -e 1e-50 --search-type 3 >&1 | tee 50/50.out; mmseqs convertalis queryDB targetDB 50/resultDB 50/resultDB_50.m8 >&1 | tee -a 50/50.out; ```. ## MMseqs Output (for bugs); The outputs are contained in the .zip above. ## Context; I'm fairly certain that the problem is being caused due to the fact that 1e-50 when convereted to float will become 0. Therefore the e value will be set to 0. This means that all results are filtered out of the alignment. If this is not fixable, it would at least be extremely helpful to have a strong warning message. It took me a day to break this all down and find out what the cause was. Filter with an e-value of 1e-50 is not uncommon. Especially during taxonomy matches (my act",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/399:93,perform,performing,93,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399,1,['perform'],['performing']
Performance,"Fix was just merged, the updated brew package should now work correctly multi-threaded. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/289#issuecomment-604142976:72,multi-thread,multi-threaded,72,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/289#issuecomment-604142976,1,['multi-thread'],['multi-threaded']
Performance,"For the clu70:; ```; (gdb) thread apply all bt. Thread 32 (LWP 7932 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 31 (LWP 7931 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:384,optimiz,optimized,384,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,8,['optimiz'],['optimized']
Performance,"GACCGAGGGCACGGG	4773; Time for index table init: 0h 0m 8s 613ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 39650; Target db start 1 to 19825; [=================================================================] 100.00% 39.65K 3s 800ms. 0.928116 k-mers per position; 129909 DB matches per sequence; 0 overflows; 85 sequences passed prefiltering per query sequence; 1 median result list length; 19825 sequences with 0 size result lists; Time for merging to pref: 0h 0m 0s 137ms; Time for processing: 0h 3m 32s 791ms; rescorediagonal tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/pref tmp97/17949317426677965256/aln_ungapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 39.65K 0s 376ms; Time for merging to aln_ungapped: 0h 0m 0s 129ms; Time for processing: 0h 6m 40s 663ms; subtractdbs tmp97/17949317426677965256/pref tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/pref_subtract --threads 20 --compressed 0 -v 3. subtractdbs tmp97/17949317426677965256/pref tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/pref_subtract --threads 20 --compressed 0 -v 3. Remove tmp97/17949317426677965256/aln_ungapped ids from tmp97/17949317426677965256/pref; [=================================================================] 100.00% 39.65K 0s 144ms; Time for merging to pref_subtract: 0h 0m 0s 168ms; Time for processing: 0h 0m 0s 503ms; align tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/pref_subtract tmp97/17949317426677965256/aln_gap",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:14582,load,load-mode,14582,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['load'],['load-mode']
Performance,"GDB showed me I get a segmentation fault [here](https://github.com/soedinglab/MMseqs2/blob/master/src/util/convertalignments.cpp#L33C68-L33C88). ```#0 0x0000555555f577fe in printSeqBasedOnAln (out=...,; seq=0x7ffff789709c ""TATTTTATTTTGTGTAGAGATGGGGTCTCACTAGGTTGCC\n"",; offset=39, bt=..., reverse=false, isReverseStrand=true,; translateSequence=<optimized out>, translateNucl=...); ```. With `offset = 39`, and `seqPos = 40`, and `isReverseStrand = true`, the line of code is walking off the start of this 40bp long sequence. . This seems to be because the backtrace has a length of 41:. ```; (gdb) print bt; $6 = (const std::__1::string &) @0x7fffffff2c70: {; static __endian_factor = 2,; __r_ = {<std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>> = {__value_ = {{__s = {{__is_long_ = 1 '\001',; __size_ = 24 '\030'}, __padding_ = 0x7fffffff2c71 """",; __data_ = ""\000\000\000\000\000\000\000)\000\000\000\000\000\000\000\340E\350VUU\000""}, __l = {{__is_long_ = 1, __cap_ = 24},; __size_ = 41,; __data_ = 0x555556e845e0 'M' <repeats 27 times>, ""I"", 'M' <repeats 12 times>, ""D""}, __r = {__words = {49, 41,; 93825018643936}}}}}, <std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>> = {<std::__1::allocator<char>> = {<std::__1::__non_trivial_if<true, std::__1::allocator<char> >> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>},; static npos = 18446744073709551615}; ```. I have not yet been able to figure out what the target sequence is to make a minimal reproducible example, but I wanted to see if you had any ideas on what would be causing this walk off the edge behavior.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/863:345,optimiz,optimized,345,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/863,1,['optimiz'],['optimized']
Performance,"Good morning Milot. Thanks a lot for your response. I got pssms by performing the following command:; - ls -l; rw-r--r-- 1 1693345 Jul 28 09:24 out.mm_msa; rw-r--r-- 1 4 Jul 28 09:24 out.mm_msa.dbtype; rw-r--r-- 1 29 Jul 28 09:24 out.mm_msa.index. - mmseqs msa2profile out.mm_msa prof; - mmseqs profile2pssm prof pssm. It's extremely fast. The pssm format is as follows:; Pos	Cns	A	C	D	E	F	G	H	I	K	L	M	N	P	Q	R	S	T	V	W	Y; 0	S	5	-1	-2	-3	0	-1	-2	-2	-2	-3	-1	-1	-1	-3	-1	6	0	0	-2	-1; 1	L	0	-1	-2	-3	0	-2	-1	-2	-2	4	8	-1	-1	-3	-2	-2	-1	0	-2	-1; 2	E	1	-1	0	4	0	1	-2	-2	2	-3	-1	2	-1	-2	-2	0	-4	-1	-2	-1. Are the numbers log-values? I have to have them normalized between 0 and 1. Any hint is welcome. Kind regards,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/580#issuecomment-1197737818:67,perform,performing,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/580#issuecomment-1197737818,1,['perform'],['performing']
Performance,"Happy to run any additional tests you might have in mind or provide any further info. ""Running only the MMseqs2 prefilter with perf might help debugging the performance issue."" . Happy to take your code if provided, but I assume just copying out the first prefilter command printed in the log would do? E.g. `prefilter out/qdb_multi /scratch-cbe/users/juraj.ahel/db_copy/uniref30_2202_db.idx out/tmp/13555276572390281633/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 2 --compressed 0 -v 3; `. If it would be about lack of SIMD support, could I somehow see it in the runtime, whether with existing compilation or some flag that makes it crash in absence of AVX2?. I just remembered the compilation was done on the login node of the cluster, possibly there is an issue with the compute nodes. Will try and rerun cmake there.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638:157,perform,performance,157,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638,2,"['load', 'perform']","['load-mode', 'performance']"
Performance,"Having multiple cpu flags enabled is valid, so we should use if instead of elsif. Otherwise only the first `HAVE_*` variable is actually respected. e.g. before this change we get this on Gentoo:; ```; /usr/bin/x86_64-pc-linux-gnu-g++ -march=native -O2 -pipe -frecord-gcc-switches -Wl,-O1 -Wl,--as-needed -Wl,--defsym=__gentoo_check_ldflags__=0 -rdynamic -fsigned-char -mavx2 -mcx16 -Wa,-q -mcx16 -std=c++1y -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm -Wl,-Bstatic -lzstd lib/microtar/libmicrotar.a -Wl,-Bdynamic -lz -lbz2 && :; ```. i.e. only avx2 is respected, sse2/4 is ignored. After change we get:; ```; /usr/bin/x86_64-pc-linux-gnu-g++ -march=native -O2 -pipe -frecord-gcc-switches -Wl,-O1 -Wl,--as-needed -Wl,--defsym=__gentoo_check_ldflags__=0 -rdynamic -fsigned-char -mavx2 -mcx16 -Wa,-q -msse4.1 -mcx16 -msse2 -std=c++1y -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm -Wl,-Bstatic -lzstd lib/microtar/libmicrotar.a -Wl,-Bdynamic -lz -lbz2 && :; ```. https://github.com/gentoo/sci/pull/1143. Signed-off-by: Andrew Ammerlaan <andrewammerlaan@gentoo.org>",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/533:442,optimiz,optimization,442,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/533,2,['optimiz'],['optimization']
Performance,"Hello @milot-mirdita and @Ting1215 . I am writing in this thread mainly because I am having a strikingly similar problem.; Basically our EPYC 7742 machines are slower than Xeon E5-4627 CPUs. @milot-mirdita following what you mentioned about the IO,; I have noticed, with big surprise that the execution time is longer when using inxeded DBs.; Note that I only use small proteomes (1000~20000 sequences).; Additionally I am using: ; - Highest sensitivity (-s 7.5); - I only use 1 CPU (meaning 128 executions of MMseqs in Parallel); Do you think some of the way load the index DB might help?. Following are some info the present system:; CPU: 2x 64-Core AMD EPYC 7742. Memory: RAM: total: 1.96 TiB used: 14.31 GiB (0.7%) ; Array-1: capacity: 2.05 TiB note: est. slots: 16 EC: Multi-bit ECC ; Device-1: P1-DIMMA1 size: 128 GiB speed: 2667 MT/s ; Device-2: P1-DIMMB1 size: 128 GiB speed: 2667 MT/s ; Device-3: P1-DIMMC1 size: 128 GiB speed: 2667 MT/s ; Device-4: P1-DIMMD1 size: 128 GiB speed: 2667 MT/s ; Device-5: P1-DIMME1 size: 128 GiB speed: 2667 MT/s ; Device-6: P1-DIMMF1 size: 128 GiB speed: 2667 MT/s ; Device-7: P1-DIMMG1 size: 128 GiB speed: 2667 MT/s ; Device-8: P1-DIMMH1 size: 128 GiB speed: 2667 MT/s ; Device-9: P2-DIMMA1 size: 128 GiB speed: 2667 MT/s ; Device-10: P2-DIMMB1 size: 128 GiB speed: 2667 MT/s ; Device-11: P2-DIMMC1 size: 128 GiB speed: 2667 MT/s ; Device-12: P2-DIMMD1 size: 128 GiB speed: 2667 MT/s ; Device-13: P2-DIMME1 size: 128 GiB speed: 2667 MT/s ; Device-14: P2-DIMMF1 size: 128 GiB speed: 2667 MT/s ; Device-15: P2-DIMMG1 size: 128 GiB speed: 2667 MT/s ; Device-16: P2-DIMMH1 size: 128 GiB speed: 2667 MT/s . Although the servers are in another building from the above output it seems there is no empty memory slot. Thanks a lot guys,. I might open a separate issue if you find it more appropriate.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-879721113:560,load,load,560,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-879721113,1,['load'],['load']
Performance,"Hello I have performed a search using as query nucleotide multifasta and as a target an aminoacidic multifasta. The alignment is performed at aminoacidic level by translating the nucleotide multifasta. So, when I run `mmseqs convertalis` and I retrieve a blastn output format 6 table, this table shows the information about the aminoacidic alignment? . I'm particularly parsing the 7th and 8th column of the table (start and end position of alignment of the query sequence) and want to be sure if I'm looking the start and end of the nucleotide or aminoacidic sequence. Thanks for your time",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/570:13,perform,performed,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/570,2,['perform'],['performed']
Performance,"Hello again,. I've been revisiting `mmseqs` again for taxonomic assignment, and unwittingly ran into this problem again before finding my own Github issue (the circle of life!). I was just wondering whether by now there is any advice on creating a taxdb when RAM is limited? I;m working with a pre-clustered version of the NR database that is currently not available directly through `mmseqs databases`. After the standard `createdb` command, I ran the following:. ```; mmseqs createtaxdb nr_clustered_mmseqs ~/TMP --ncbi-tax-dump ~/.taxonkit/ --tax-mapping-file /data/clustered_nr/clustered_nr_taxmapping.tsv; ```. I get output as per the OP in this issue, until the process dies with:. ```; [truncated]; Loading names file ... Done; Init RMQ ...Done; Killed; ```. I can see that the problem was most likely the RAM being exhausted (I received exit status 137). My workstation has 64GB of RAM, and accessing a server with more RAM for the creation of this database is not likely to be feasible. Thanks. p.s. in case you've missed it for any reason, I would also like to point out that the current automated download of the NR/NT fasta files from NCBI using `mmseqs databases` might not work as desired moving forwards. As noted at https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/README.txt:. ```; In April 2024, the BLAST FASTA files in this directory will no longer be; available. You can easily generate FASTA files yourself from the formatted; BLAST databases by using the BLAST utility blastdbcmd that comes with the; standalone BLAST programs. See NCBI Insights for more details; https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/811#issuecomment-2199281561:706,Load,Loading,706,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811#issuecomment-2199281561,1,['Load'],['Loading']
Performance,"Hello,. First of all thank you for making such an amazing program, secondly I was wondering if you could provide some advice on how to handle a very large query database. I have several terabytes that I would like to check against the nr. Currently I am using the easy-taxonomy workflow, I have loaded about 1/15th of my data as a proof of concept. However as you will see in the log below this will take quite some time. My main questions are: is this expected behaviour and how am I able to speed this up?. ## Current Behavior; LSBATCH: User input; mmseqs easy-taxonomy ./sample.fastq.gz ./nr ./result ./tmp -s 0.5. MMseqs Version: 	13.45111; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	26; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary pa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422:295,load,loaded,295,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422,1,['load'],['loaded']
Performance,"Hello,. I have installed mmseqs2 using conda. This has worked ok. The installed package has the following version attributes. `mmseqs2 11.e1a1c h2d02072_0 bioconda`. However, when I go to perform an RBH, using easy-rbh as mentioned in the userguide, I get the error below. `Invalid Command: easy-rbh`; `Did you mean ""mmseqs easy-search""?`. I think easy-rbh is not updated for conda installation. Please advice what to do. Thanks; Abhijit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/332:188,perform,perform,188,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332,1,['perform'],['perform']
Performance,"Hello,. I would like to perform clustering of a large nucleotide sequence with the easy-clust .; However, it is not clear for me whether the ""--min-seq-id"" and ""-c"" parameters refer to alignments in nucleotide space or alignments in amino-acid space after sequence translation. Thanks,; Florian",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/512:24,perform,perform,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/512,1,['perform'],['perform']
Performance,"Hello,. I'm trying to run the search algorithm on a database comprised of over 20k sequences against the uniref100 db. This is the command I'm using and the version, followed by the error after approx. 18 minutes in the run. ##. search ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 hmm_Uniref_search searchTMP --split-memory-limit 150G. MMseqs Version: 49c2b70b47a7912947411b128b60f6a994dcc88b. mem_align could not allocate memory.; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/3121500954244133633/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; Error: Alignment died. ##. I've tried increasing the memory, thinking this could be the issue, but so far the problem persists. Any help is appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/510:887,load,load-mode,887,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/510,1,['load'],['load-mode']
Performance,"Hello,. My conda environment is as follows. active environment : ClusterEnv; active env location : /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv; shell level : 2; user config file : /home/sanyalab/.condarc; populated config files : /home/sanyalab/.condarc; conda version : 4.10.1; conda-build version : 3.18.9; python version : 3.7.4.final.0; virtual packages : __linux=2.6.32=0; __glibc=2.12=0; __unix=0=0; __archspec=1=x86_64; base environment : /mnt/common/rh6/annotate/Anaconda3 (writable); conda av data dir : /mnt/common/rh6/annotate/Anaconda3/etc/conda; conda av metadata url : https://repo.anaconda.com/pkgs/main; channel URLs : https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : /mnt/common/rh6/annotate/Anaconda3/pkgs; /home/sanyalab/.conda/pkgs; envs directories : /mnt/common/rh6/annotate/Anaconda3/envs; /home/sanyalab/.conda/envs; platform : linux-64; user-agent : conda/4.10.1 requests/2.22.0 CPython/3.7.4 Linux/2.6.32-696.30.1.el6.x86_64 rhel/6.9 glibc/2.12; UID:GID : 101430:237; netrc file : None; offline mode : False. MMseqs installs ok (I think). However, I get a GLIBC error when running `mmseqs --help` like below. `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libstdc++.so.6)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.16 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`; `mmseqs: /lib64/libc.so.6: version GLIBC_2.17 not found (required by /mnt/common/rh6/annotate/Anaconda3/envs/ClusterEnv/bin/../lib/libgomp.so.1)`. Please advice what to do. Thanks; Ab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/461:914,cache,cache,914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461,1,['cache'],['cache']
Performance,Hello. my apologies if I'm posting this message in the wrong place (I am not reporting a potential bug here). I would like to align a dataset containing ~30Mio illumina reads against TrEMBL. . However the run crashes because the generated files are huge and I eventually run out of disk space. Can someone help me to optimize the search parameters to limit the disk space usage (I am only interested in finding the 10 best hits of each read). I am currently running this command:. mmseqs search QUERY.mms TrEMBL RESULT.mms /tmp/tmp_mmseqs.55447 --remove-tmp-files true --threads 60 -a -e 1E-3 -v 3 -s 2.5 --max-rejected 10 --max-seqs 100000. and get this warning: Hard disk might not have enough free space (1T left).The prefilter result might need up to 353T. Thank you for the help; best regards; Guillaume,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/380:317,optimiz,optimize,317,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/380,1,['optimiz'],['optimize']
Performance,"Here it is. I hope it is more informative:. gdb --args mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs/bin/mmseqs...done.; (gdb) r; Starting program: mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:590,load,load-mode,590,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473,1,['load'],['load-mode']
Performance,"Here's the output from that search job:. ```; align /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search/seqs17_db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/pref_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 1 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score only; Query database size: 6526 type: Aminoacid; Target database size: 41195879 type: Aminoacid; Calculation of alignments; [=================================================================] 7.00K 0s 8ms; Time for merging to aln_0: 0h 0m 0s 9ms. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 3s 593ms; align /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/profile_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/pref_1 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 1 --add-self-ma",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203:732,load,load-mode,732,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203,1,['load'],['load-mode']
Performance,"Here's the output from the ASan run:. ```; ./build/src/mmseqs result2profile \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 \; > --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 \; > --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 \; > --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. MMseqs Version: 	a6cab565c98376623e82c3a04d186219d4c2f10c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	1e-05; Mask profile 	1; Profile E-value threshold 	1e-05; Compositional bias 	1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:739,load,load-mode,739,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245,1,['load'],['load-mode']
Performance,"Hi @martin-steinegger ,; many thanks for the quick reply. Were you able to find these sequences against themselves in a full search against Uniref90 or did you perform a search of these sequences against a DB made of only these 500 sequences ? . In a search against the full Uniref90 we are not able to find the real best hit for many of these 500 sequences, which look like normal sequences for the majority and not corner cases like these 4 ones. Even if we turn off masking and bias correction the improvement seems very limited and for this group of 500 sequences we retrieve results that are not very close to the expected best hit (e.g. we see top results having 70%-75% identity).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-394417327:160,perform,perform,160,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-394417327,1,['perform'],['perform']
Performance,"Hi @milot-mirdita ; Thank you for your helpful reply, I change the node to run MMseqs2, and now, there is no ""core dumped"" problem. But, a new error exists:; I still run many jobs parallelly, and I assigned the tmp directory for each job (mmseqs search -a -s 7 --num-iterations 2 --search-type 2 sample/sample.DB DB/segmentNucDB sample/sample.result sample/sample.tmp), but some of jobs failed with the following error:. **A call to mkdir was unable to create the desired directory:. Directory: /tmp/6072204.1.st.q/openmpi-sessions-36903@cngb-compute-e04-2_0; Error: No space left on device. Please check to ensure you have adequate permissions to perform; the desired operation.**. It's strange that, I assigned the tmp directory, why MMseqs2 will mkdir a directory in the root diretory /tmp, is it still related to my compute node?. Looking forward to your reply",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876341936:648,perform,perform,648,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876341936,1,['perform'],['perform']
Performance,Hi @milot-mirdita and @martin-steinegger thanks for the answers! Just for the records we had already previously tested this step also on instances having 2 local NVMe disks mounted in RAID 0 and the performance was similar. We will keep this requirement in mind and try to run the ```createdb``` step on a larger disk array whenever possible.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/124#issuecomment-426712115:199,perform,performance,199,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/124#issuecomment-426712115,1,['perform'],['performance']
Performance,"Hi Martin,. Here is a logfile for one of the samples that I ran. I had to remove all the ""="" signs printed in it (as indicator of progress) because otherwise it increased the file size to ~13GB. Please let me know if I am using mmseqs correctly or if there is some other trick to speed it up... regards,. Dhwani. ________________________________; From: Martin Steinegger <notifications@github.com>; Sent: Sunday, June 30, 2019 6:46:32 PM; To: soedinglab/MMseqs2; Cc: Dhwani Desai; Mention; Subject: Re: [soedinglab/MMseqs2] Speed up mmseqs for large database and multiple large query sets by loading target into memory (#214). It would help if you could provide a log file. So I can see which module is slow. The database does not stay necessarily memory. The OS can reuse the memory. The memory just got memory mapped by mmseqs2 (depending on the --db-load-mode). —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/214?email_source=notifications&email_token=ABYZBDOQNQW6KRHGR3W5473P5ESTPA5CNFSM4H333Q62YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODY4UNEA#issuecomment-507070096>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABYZBDMYW6UIXY2PZFDTSZDP5ESTPANCNFSM4H333Q6Q>. createdb test_reads/S1E3-S3_assembled_kneaddata.fastq mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB . MMseqs Version: 	73ce3b88754987122b4fc5e69a721beeecd677d0; Max sequence length 	65535; Split seq. by length 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Assuming DNA database, forcing parameter --dont-split-seq-by-len true; Converting sequences; [	1 Mio. sequences processed; 	2 Mio. sequences processed; 	3 Mio. sequences processed; 	4 Mio. sequences processed; 	5 Mio. sequences processed. Time for merging files: 0h 0m 4s 846ms; Time for merging files: 0h 0m 35s 669ms; Time for merging files: 0h 0m 1s 887ms; T",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:592,load,loading,592,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,2,['load'],"['load-mode', 'loading']"
Performance,"Hi Martin,. I just redo the experiment and the result is the same.; I am using static mmseqs with SSE4 with version 9827e74c1e12875f9201302fc8693565c4a973de. Attached is the running log. <pre><code>; Program call:; read.query nr.mmseqs resultDB result.m8 . MMseqs Version: 	9827e74c1e12875f9201302fc8693565c4a973de; Alignment Format	0; No preload 	false; Early exit 	false; Database Output 	false; Threads 	24; Verbosity 	3. Query Header file: read.query_h; Target Header file: nr.mmseqs_h; Alignment database: resultDB; Start writing file to result.m8; Invalid database read for database data file=Invalid database read for database data file=read.query_h, database index=read.query_h, database index=read.query_h.index; getData: local id (4294967295) >= db size (1293676); read.query_h.index; getData: local id (4294967295) >= db size (1293676); </code></pre>. For the infile and queryfile, I am sorry that I may not be able to provide them. But I have performed the experiment with the same settings and commands successfully on another machine with 64GB. But it failed on a machine with 192GB. Not sure whether that matters. Thanks.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-367360921:955,perform,performed,955,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-367360921,1,['perform'],['performed']
Performance,"Hi Martin,. Yes. I have a set of query files, each with around 10-15 million reads and a database which has ~130 million sequences. The index file generated by the createindex step is about ~ 400GB in size. The computer I am running this on has around 1.5 TB of RAM so reading this index into memory should not be an issue. However, when I run the search with and without the --db-load-mode 3 option (i have also tried --db-load-mode 2), it does not make any difference to the run time. In both cases it takes around 8-9 hours to run through all samples. My question is, am I doing the loading into memory correctly? Are there any other options I should be using to speed this up?. I ran the steps thru a script for automating it, so I do not have the logfiles for the run (I wrote it to /dev/null). I can re-run it to generate the logfiles, but it would take some time. regards,. Dhwani. ________________________________; From: Martin Steinegger <notifications@github.com>; Sent: Thursday, June 27, 2019 11:12:08 AM; To: soedinglab/MMseqs2; Cc: Dhwani Desai; Mention; Subject: Re: [soedinglab/MMseqs2] Speed up mmseqs for large database and multiple large query sets by loading target into memory (#214). @dhwanidesai<https://github.com/dhwanidesai> so you perform millions of read searches against the refseq database at once right? Could you please provide an output log of your run? It would help me to understand whats the bottleneck in your analysis. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/214?email_source=notifications&email_token=ABYZBDNCCSMRV4UUFPSIJATP4TDDRA5CNFSM4H333Q62YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODYXH2VA#issuecomment-506363220>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABYZBDMDQO3HG6TKBCVH5STP4TDDRANCNFSM4H333Q6Q>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-506719911:381,load,load-mode,381,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-506719911,6,"['bottleneck', 'load', 'perform']","['bottleneck', 'load-mode', 'loading', 'perform']"
Performance,"Hi Martin; ffindex_apply is awesome, I've been playing around and it is quite straight forward to plug it in our pipeline avoiding the generation of the files. Just for reference, a quick example on how to perform a MSA for each cluster with >= 10 members:; ```; #!/bin/bash. SEQS=$(perl -ne 'print $_' ""${1}""); if [ ""$(echo ""${SEQS}"" | grep -c '>')"" -ge 10 ]; then; echo ""Num seqs: $(echo ""${SEQS}"" | grep -c '>')""; REP=""$(echo ""${SEQS}"" | head -n 1 | cut -f 2 -d '|')""; ALN=cluster_""$(grep -n ""${REP}"" DB_clu_wide.tsv | cut -f1 -d ':')"".aln; famsa-1.2.1-osx <(echo ""${SEQS}"") ""${ALN}""; fi; ```; and we run it like:; ```; ffindex_apply DB_db_fa DB_db_fa.index -- bash aln.sh; ```. Many thanks!; Antonio",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/50#issuecomment-343730359:206,perform,perform,206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/50#issuecomment-343730359,1,['perform'],['perform']
Performance,"Hi Milot, . Thanks a lot for your reply. For certain metagenomic reads I get equally good best matches to multiple target database proteins so I want to keep all those best matches in order to look into them further. Currently, I just do a grouping/sort operation for each query and keep all hits with greater than or equal to current highest bitscore within the group. It's trivial to do in awk or R but it would be convenient to have that functionality within the mmseqs toolkit. For my workflow I am first extracting ORFs, translating, then searching each metagenomic ORF. It's a good idea to try BLOSUM80. I tried the [Iterative-best-hit workflow](https://github.com/soedinglab/MMseqs2/wiki#how-to-find-the-best-hit-the-fastest-way) going from `-s 1,3, and 7` but it was taking longer than I wanted. I'll play with those sensitivities to see if I can optimize. . cheers,; -shane",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/152#issuecomment-455200269:855,optimiz,optimize,855,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/152#issuecomment-455200269,1,['optimiz'],['optimize']
Performance,"Hi Milot-mirdita and Martin,. Thank you for taking time to help. I tried the above steps, however while performing search, the following errors occur; `Segmentation fault (core dumped); Error: Prefilter died; Error: Search step died`. The scoring matrix that i used to replace the nucleotide.out is the EDNAFULL matrix (ftp://ftp.ncbi.nih.gov/blast/matrices/NUC.4.4) which i then used with the format_substitution_matrix.R to get it in the format for mmseqs ; [NUC_modified.txt](https://github.com/soedinglab/MMseqs2/files/3295544/NUC_modified.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-502556575:104,perform,performing,104,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-502556575,1,['perform'],['performing']
Performance,"Hi all, . I am trying to search many (30M) small peptides (15aa length) against a database of ; all known protein sequences (BLAST NR). I know that each of the peptides is contained in the database, i.e. ; there should be at least one exact match in the database. I only care about exact or very close matches, ; a very sensitive search should not be necessary. . However, the result table contains only 1.6M entries. I manually checked a few peptides, and they are indeed included ; in the database (using `grep` on the mmseqs db). . So far, I have been using `easy-search` using default parameters: . ```bash; mmseqs easy-search \; query.fa \; /path/to/nr \; result.tsv \; ./tmp; ```. Can you guide me what parameters I need to tune to get more hits (including the exact matches) and at the same ; time not compromise the runtime? Also, I don't understand the differences between the `search` and the `map` command. Should I use the latter for my purpose? . Thanks in advance, ; Gregor . ## Your Environment. * `MMseqs2 Version: 45c4de7f1daefa06b45688195305eadedaea4d97`; * static build with AVX2 support; * `Intel(R) Xeon(R) CPU E5-2699A v4 @ 2.40GHz`, 44 cores, 1TB RAM; * Operating system and version: `CentOS Linux 7 64bit / Linux 3.10.0-1127.13.1.el7.x86_64)`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/373:730,tune,tune,730,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373,1,['tune'],['tune']
Performance,"Hi everybody,; First of all, let me tell you that MMseqs really allowed me to perform exactly the kind of analysis I have been trying to perform in months! It really saved my day.; I have a rather simple question: is there a way to extract from a query DB (a metagenome in FASTQ format) the sequences matching the targetDB (a custom protein reference database). I guess there's some option I'm not looking at...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/356:78,perform,perform,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/356,2,['perform'],['perform']
Performance,"Hi mmseq team,. I need some help in updating a previous mmseq based (near complete) clustered db (A) with additional sequences (B). My mmseq run for A, using easy-cluster, timed out at the stage of moving result files and deleting temporary files, a log and resulting files list is attached.; [mmseq.earthbiome.fna.2tb.log.gz](https://github.com/soedinglab/MMseqs2/files/5187248/mmseq.earthbiome.fna.2tb.log.gz); [resultfiles.txt](https://github.com/soedinglab/MMseqs2/files/5187249/resultfiles.txt). Now I have additional sequences as set B that I want to use to update set A to perform clustering and updating the final database. mmseq GitHub documentation says about updating a database as:. mmseqs createdb DB_trimmed.fasta DB_trimmed; mmseqs cluster DB_trimmed DB_trimmed_clu tmp. To update the clustering DB_trimmed_clu with the new version of your database DB_new:. mmseqs createdb DB.fasta DB_new; mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_new_updated DB_update_clu tmp. My worry is if If I cluster bigger dataset A again, it will take quite a few days, as in the last case the job was terminated on a 3 Tb memory machine after 7 days, without completing the last step of moving results and deleting temp files. In summary I need help in 1. saving or moving important result files and safely remove temporary files. and 2. a correct way of updating and clustering my dataset B with database A. Many Thanks,. IA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348:580,perform,perform,580,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348,1,['perform'],['perform']
Performance,"Hi soedinglab,. I am running the `nf-core/funcscan` pipeline to assign taxonomy to contigs using MMseqs2 with the GTDB database. My contigs are around 100-200 MB in size, and I am running the pipeline on a machine with the following specs:; - 36 cores; - 256 GB RAM. Despite utilizing all available resources, `mmseq2` takes more than 4 hours per sample and does not finish. I am wondering if this runtime is normal or if there are ways to optimize the process to make it faster. . **Questions:**; 1. What are the common bottlenecks when running MMseqs2 with the GTDB database, and how can I address them?; 2. What is the expected runtime for MMseqs2 on contigs of this size?; 3. Are there specific MMseqs2 settings (e.g., sensitivity, database partitioning) that could help speed up the analysis without compromising too much accuracy?. Any advice or insights from your experience with MMseqs2 and GTDB would be appreciated!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/895:440,optimiz,optimize,440,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/895,2,"['bottleneck', 'optimiz']","['bottlenecks', 'optimize']"
Performance,"Hi there! I'm attempting to perform a homology search for a single gene (a bacterial protein) across all sequenced bacterial genomes to estimate the % of species that carry the gene. Is there a way to partition a wider database (like Uniprot) so that my search only covers bacterial genomes? If not, could I request an additional database that covers all sequenced bacterial genomes (like UniprotKB Bacteria or EnsemblBacteria)?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/341:28,perform,perform,28,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341,1,['perform'],['perform']
Performance,"Hi there, was wondering if this feature is in process of development? If so, any idea on timeline?; From doing a comparison analysis between mmseqs and taxonomic binning tool with frameshift-aware alignment (DIAMOND+MEGAN), we saw significantly improved results with this frameshift feature. Ex. In a metagenomic sample, 9 out of 10 organisms were correctly identified to species level with frameshift-corrected alignment, whereas mmseqs could only identify 6 out of 10 organisms to species level. Another feature that MEGAN provides (that would be very useful in mmseqs) is that it exports frameshift-corrected contigs, which is advantageous in performance improvement of downstream tools (ie. AMR detection).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/417#issuecomment-805219866:646,perform,performance,646,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/417#issuecomment-805219866,1,['perform'],['performance']
Performance,"Hi! I also have this problem with slow searches after loading the DB to memory. I have 135,301,051 sequences in the targetDB (uniref90) and so far only trying to use one search sequence. I am using 40 threads and have more memory than the estimated memory consumption. I am using -s 1 and --db-load-mode 3, after doing touchdb. The database was automatically divided 17 splits. In 10 mins, the prefiltering step did not even finish with the first split. Is this the expected behavior? Is it only for the 1st sequence that takes too long? Do you have any suggestion to speed up the search?. The extended prefilter command:; `prefilter targetDB /vol/ek/share/alphafold/databases/uniref90/uniref90.idx /dev/shm//6569854898554735840/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 3 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 1.0`. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-896539468:54,load,loading,54,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-896539468,3,['load'],"['load-mode', 'loading']"
Performance,"Hi, I am also finding mmseqs taxonomy runs much slower than expected. I have run a metagenome assembled genome (MAG) as a query (after turning it into a mmseqs database) against nr (created using `mmseqs databases`). The query is 4.3M and it took about 4hrs to complete running. @milot-mirdita could you explain which number you took 70-80% of? When I run free -h, I get:. ```; total used free shared buff/cache available; Mem: 188Gi 1.1Gi 939Mi 2.0Mi 186Gi 186Gi; Swap: 8.0Gi 85Mi 7.9Gi; ```. I have some memory intensive programs running right now (bwa mem and metaSPAdes), so maybe this is slowing things down?. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-1546719865:406,cache,cache,406,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-1546719865,1,['cache'],['cache']
Performance,"Hi, I am in the process of building a searchable database of antibody and T cell receptor repertoires (here, a ""repertoire"" is a set of antibody or TCR sequences from a single blood sample from a single donor). Searches are performed using mmseqs, with each repertoire stored as a mmseqs DB. So far, the search function is working nicely. Next, I'd like to implement a clustering option. My idea was to allow a set of repertoire DBs to be selected and clustered using linclust. My questions are: . 1. can either mergedbs or concatdbs be used to combine a set of DBs for clustering by linclust?; 2. is there a more efficient strategy than combining the individual DBs? . Each DB is typically tens of thousands of sequences or more with typical length ~40 amino acids (i.e. just the three CDR regions concatenated; not full-length protein). Thanks in advance for your help! ; -Daron",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/519:224,perform,performed,224,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/519,1,['perform'],['performed']
Performance,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/212:153,Load,Loading,153,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212,7,['Load'],['Loading']
Performance,"Hi, sorry for bringing up an old thread, but I came across this when looking for how to remove identical sequences, and tried following the steps mentioned above by @martin-steinegger, and am surprised with the results tbh... Not sure if this is an issue, but please could you be so kind as to confirm that the above/below options still do as intended in this thread? (If you'd prefer I open a new issue and link back to this one, please let me know 🙂) . Essentially I've got three proteomes from the same species, and I'd like to remove identical redundant proteins and fragments, keeping the longest protein only, discarding any fragments that are a subsequence of anything else. This is what I understand is effectively the method followed to create the UniRef100 database, but I'd like to do it just for these three proteomes... **Protein counts for source files**; ```; $ for f in *.fasta; do echo -n ""$f "" ; grep '^>' $f | wc -l ; done; proteome-1.fasta 23885; proteome-2.fasta 23758; proteome-3.fasta 28118; proteomes-appended.fasta 75761; ```. **Create database**; `$ mmseqs createdb proteomes-appended.fasta db`. **Remove redundant proteins** (using options mentioned above in https://github.com/soedinglab/MMseqs2/issues/104#issuecomment-411727699); `$ mmseqs cluster db db_clu tmp --min-seq-id 1.0 -c 0.9 --cov-mode 1`. Do these options still perform a bidirectional search, removing only redundant proteins with 100% identity? Any fragments of longer proteins should be removed. However `-c 0.9` doesn't seem correct.... **Export consensus sequences to fasta file**; ```; $ mmseqs result2repseq db db_clu db_clu_rep; $ mmseqs result2flat db db db_clu_rep db_clu_rep.fasta --use-fasta-header; ```. **How many sequences?**; ```; $ grep '^>' db_clu_rep.fasta | wc -l; 58339; ```. So this has removed 17422 sequences, but tbh I was expecting to have an end result closer to ~30k proteins. Please can you confirm if I have done as I intended?. Best,; Alex",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/104#issuecomment-1105387969:1354,perform,perform,1354,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/104#issuecomment-1105387969,1,['perform'],['perform']
Performance,"Hi, thanks for making this toolkit! I'm excited to start using it with my data. I have a set of viral genomes that I would like to cluster. From the wiki and the paper, I understand that linclust by default runs a process that's optimized for protein sequences (using blosum64, kmer length..). Can it run on nucleotide sequences? What would be the way to go about it?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/715:229,optimiz,optimized,229,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/715,1,['optimiz'],['optimized']
Performance,"Hi,. I just want to ask a quick question. ; Say I create index for the uniref30_2103_db database with 3 splits: `mmseqs createindex uniref30_2103_db tmp --split 3` and I perform 50 queries (in a single .fasta file) on it using the `colabfold_search.sh` script provided on https://colabfold.mmseqs.com. Will each of the three partial index be loaded into memory for ~50 times? Assume my RAM cannot hold more than one partial index and I don't use the colabfold_envdb. In other words, I'm wondering if mmseqs works like either ; 1); ```; for query in queries_in_fasta:; 	for partial_index_file in indices:; 		search(query, partial_index_file); ```; or 2); ```; for partial_index_file in indices:; 	for query in queries_in_fasta:; 		search(query, partial_index_file); ```; In the first case I guess each partial index will be loaded into RAM from storage repeatedly for `num_of_queries` times which is slow, but for the second case it's just once. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/527:170,perform,perform,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/527,3,"['load', 'perform']","['loaded', 'perform']"
Performance,"Hi,. I'm currently attempting to search a multifasta file against itself using `mmseqs search`. The file contains 10432883 sequences so naturally it's going to take a long time. I stopped the pre-filtering step after about 24 hours and am now trying to optimise my parameters to speed up the search process. I'm wondering if you could advise me on the recommended settings for doing this?. After doing some reading and generally trying to get my head around what is happening, this is what I've come up with so far:. ```; mmseqs \; createdb \; /gut/output_noblast/gut_p/combined_ffn.fasta \; /gut/mmseqs/querydb/queryDB;. mmseqs \; createindex \; /gut/mmseqs/querydb/queryDB \; /temp_data/akjshdf;. mmseqs \; touchdb \; /gut/mmseqs/querydb/queryDB;. mmseqs \; search \; /gut/mmseqs/querydb/queryDB \; /gut/mmseqs/querydb/queryDB \; /gut/mmseqs/resultdb/resultDB \; --search-type 3 \; --threads 40 \; --start-sens 1 \; --sens-steps 3 \; -s 7 \; --db-load-mode 2 \; /temp_data/akjshdf;; ```. Are there further optimisations I could make or something else I could be doing differently?. Many thanks for your help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/589:949,load,load-mode,949,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/589,1,['load'],['load-mode']
Performance,"Hi,. I'm running `linclust` on a cloud instance with network file systems. I'm wondering which `--db-load-mode` should I use to alleviate the I/O bottleneck of NFS.; ```; --db-load-mode INT Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]; ```. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/559:101,load,load-mode,101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/559,3,"['bottleneck', 'load']","['bottleneck', 'load-mode']"
Performance,"Hi,. I'm using MMseqs2 for all-vs-all alignments. As indicated in the user guide pdf, I'm using the bash script to perform a fake prefiltering step before aligning. That seems to work, as all alignments are computed, but the results are a bit unexpected:; ```; >Q8CD91; EERVVHWYFKLLDKNSSGDIGKKEIKPFKRFLRKKSKPKKCVKKFVEYCDMNNDKSITVQELMGCLGVTREEGKANTRKRHTPRGNAESSSSNRQPRKQG; >Q95JC9; GPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPPPGPSPPRPPPGPPPQ; ```; I didn't change much of the defaults; ```; mmseqs createdb --dbtype 1 dummyfasta.fasta seq_db; mmseqs_fake_prefilter.sh seq_db seq_db pref; mmseqs align seq_db seq_db pref align_db --alignment-mode 3 -e inf --min-seq-id 0.3; mmseqs convertalis seq_db seq_db align_db check_alignments.tab; ```. ```; query target fident alnlen mismatch gapopen qstart qend tstart tend evalue bits; Q8CD91 Q8CD91 1.000 100 0 0 1 100 1 100 1.707E-71 202; Q8CD91 Q95JC9 1.000 2 0 0 83 84 91 92 4.610E+01 9; Q95JC9 Q95JC9 1.000 100 0 0 1 100 1 100 7.088E-35 108; Q95JC9 Q8CD91 0.333 3 1 0 11 13 21 23 1.508E+02 7; ```; The second alignment's `fident` makes no sense to me. I understand that the e-value is high too, but I really want all pairwise % identities returned so I don't use it for filtering. Do I need to use a different configuration to make this work, or is mmseqs2 just not suitable for this all-vs-all identity task?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/498:115,perform,perform,115,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/498,1,['perform'],['perform']
Performance,"Hi,. Imagining I want to perform a hierarchical cluster manually. ; The common steps are: ; 1- create a sequence DB `createdb`; ; 2- create prefilter `prefilter`; ; 3- perform alignments `align`; ; 4- perform cluster `clust`; ; 5- subset the representatives `createsubdb`; ; 6- repeat everything changing the parameters. I had a few questions about this:; 1- Am I doing right the cluster?; 2- I want to hierarchically cluster, for example, at 90% identity, 60%, and at least 30%. ; - If I perform the alignment for 30% identity, can I use `apply` to build an alignment DB to the results to create a subset with different criteria? This way I must run `mmseqs align` only once. ; 3- Since one sequence DB is a subset from another, when I perform `createsubdb` will I get a new DB or just the subset index to the original DB? I mean, how the disk usage increase to each subset? . Thanks a lot.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/308:25,perform,perform,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/308,5,['perform'],['perform']
Performance,"Hi,. Quite impressed with the speed at which mmseq performs pairwise alignments. Have a couple of questions:. 1. Can i perform alignments using sequences with degenerate characters? Right now the program considers these positions as mismatches. Can i change the way mismatches are counted? So an alignment of X against any of the 20 amino acids can still be considered as a match. 2. Can i search using the protein motif patterns found in PROSITE? . Thanks in advance,; Shiv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/204:51,perform,performs,51,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/204,2,['perform'],"['perform', 'performs']"
Performance,"Hi,. Using mmseqs version '8-fac81' on OSX, I tried changing the substitution matrix while performing nucleotide to nucleotide search and protein to protein search. . The protein to protein search works as expected. However, for nucleotide to nucleotide search, irrespective of whether i use the default or a new substitution matrix, the sequence alignment results are the same. Couple of questions. 1. Does mmseqs support change of substitution matrix for nucleotide to nucleotide search?; 2. Possible to get similarities along with identities for matches?. Output of result.m8 file. 111276241826	276241826	0.920	25	2	0	1	25	1	25	7.431E-09	37. The input files are attached. [a.txt](https://github.com/soedinglab/MMseqs2/files/3250681/a.txt); [b.txt](https://github.com/soedinglab/MMseqs2/files/3250682/b.txt). `mmseqs createdb a.txt aDB --dbtype 2`. `mmseqs createdb b.txt bDB --dbtype 2`. `mmseqs search aDB bDB resultDB tmp --search-type 3 --sub-mat ../Ednafull_4.4_modified.out -a`. `mmseqs convertalis aDB bDB resultDB resultDB.m8`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-498528909:91,perform,performing,91,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-498528909,1,['perform'],['performing']
Performance,"Hi,; I ran the `mmseqs search` command on one sample (named 'B001'), and all went well. Now I would like to use `mmseqs convertalis` to convert the result database file into a .m8 file; however, `mmseqs convertalis` expects one file as input for the result database, and the output from `mmseqs search` produced 10 result_db files from one sample:. `mmseqs2_B001_result_db.0	mmseqs2_B001_result_db.6; mmseqs2_B001_result_db.1	mmseqs2_B001_result_db.7; mmseqs2_B001_result_db.2	mmseqs2_B001_result_db.8; mmseqs2_B001_result_db.3	mmseqs2_B001_result_db.9; mmseqs2_B001_result_db.4	mmseqs2_B001_result_db.dbtype; mmseqs2_B001_result_db.5	mmseqs2_B001_result_db.index`. Is this acceptable? If so, is there a way to merge the 'result_db' files into one file? Alternatively, should I convert each of these outputs into a .m8 file separately, and then merge?. For reference, I ran this command to produce the above output:. `mmseqs search /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_query_db/mmseqs_B001_queryDB /Volumes/FireFly_Promise_Pegasus/Databases/mmseqs2_uniref90_db/UniRef90 /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/tmp --db-load-mode 3 --threads 10 --max-seqs 25 -s 1 -a -e 1e-5`. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/579:1387,load,load-mode,1387,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/579,1,['load'],['load-mode']
Performance,"Hi,; Thanks for reporting this.; The 3 error messages you get are not critical. It is due to a recent change in the default parameters of mmseqs that makes it not generating the aln_*, clu_* and input_* files. This shouldn't affect the workflow.; From your call, you should actually get a DB_clusterupdate database. Could you check if it is conform to what you expected ?. Concerning the ATCG warning, it is just a warning to the user in case there are some sequences containing only residues A, T, C and G. If sometimes you do not have the warning it may may be due to the fact the tmp folder was not empty and mmseqs did not perform the search again. Best,; Clovis.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17#issuecomment-280642395:627,perform,perform,627,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17#issuecomment-280642395,1,['perform'],['perform']
Performance,"Hi,; is it please possible to set a limit on the amount of memory MMseqs2 uses for its computations? Or to set the number of computation chunks?; I know from the MMseqs2 wiki it automatically detects how much memory it can use and eventually it splits database into chunks etc. But this is not practical for grid computing environment where you have to request a specific amount of memory a priori and your job is then executed on a machine which actually has much more memory but it is shared with other jobs. It can then happen that MMseqs2 will consume more memory than allowed just because its available from the system point of view. The queue management software will then kill the job as it exceeded assigned resources.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58:643,queue,queue,643,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58,1,['queue'],['queue']
Performance,"Hi. I was trying to search single queries against NCBI NR just for test. ; Somehow, I got just a few results ~450 results by a query. The point is, the lowest e-value is too low ~1e-50. I've got no error message. Then, I think I'm doing something wrong in `createindex`.; Probably I need to change some parameters as `--max-seqs`. For example, I used this query:; ```; >WP_066948057.1 AAA family ATPase [Microtetraspora fusca]; MRKVPLPEPVSAALTDALDQLRLAVEDLHFGLDIPGAEEARKAQAAVLAQLEDYVIPRVHMSTAPALIVVAGSTGAGKST; LVNTLAAQRVSTTGVRRPTTGTPVLVCHPDDHEWFAEGDLLGGLTRLERPVEGVGTDSVVLSTTERLPPGVALLDTPDID; SVVEEHHEIAHRMLDAADMWVFVTTASRYADAPSWNLLRLAKERGARLVIVLSRVPEKSRDVIVKHFGRMLDEYGLADAE; RFVIKETTVTEGRLPDKEVSELRMWLAHLSVDDERRAAAVRTTLNGVLDSFRNRVPALARHLETQVALRADLRSDVDAAY; MGALADIDEATRNGSLLRGEVLARWQDFAGSGDLIRTLQLRRGGKGGQRGPQRARALRTAIRNALESVINSAAERAAEEV; VVRWRQRAGAGDRLAATPGLGRSSDEATQRTSRAIGAWQDHVTELIRTEGVTKRSVARLVSFDVESLALIFTVSLLGYGA; TDVSSGRGAGALPQRLLRALLGAESLRNISAKARSDLRARIGMVFDEETLRYVDELDGAGIPDEAAATRLYQATYNLEVA; R; ```. The NR was prepared with; ```; mmseqs databases NR nr tmp; mmseqs createindex nr tmp; ```. And the search was performed like this; ```; mmseqs easy-search query.fa nr result tmp; ```. The same query with blastp has returned me 5000 results using `-max_target_seqs 5000`. https://github.com/soedinglab/MMseqs2/wiki#disk-space. Do I need to change the parameters in `createindex` ?. I'd like to maximize the number of results for a e-value threshold. As returning all results down to 1e-3 of e-value or other value I choose. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/300:1120,perform,performed,1120,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/300,1,['perform'],['performed']
Performance,I agree with you. especially for the programe in the high performance computer,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/539#issuecomment-1058769549:58,perform,performance,58,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/539#issuecomment-1058769549,1,['perform'],['performance']
Performance,"I am not sure what the fix is. I think the issue is now that this `RLIMIT_DATA` limit not actually per allocation but per process. So the additional splits weren't really useful. . IMO the `h_vmem` is a weird feature of SGE and MMseqs2 allocating a lot of virtual memory is reasonable. Its real memory consumption is much smaller, however I am not sure that SGE can track that. I would suggest to talk to your SGE admin to setup a separate queue that doesn't enforce memory limits. Reengineering MMseqs2 to page in splits on-demand is I think quite a big reengineering effort. We can keep it in mind for the future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742545669:440,queue,queue,440,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742545669,1,['queue'],['queue']
Performance,"I am not sure why Github is not linking to travis (https://travis-ci.org/github/soedinglab/MMseqs2/builds/700050415). Performance on ARM64 seems much better now, I suspect the remaining performance difference since we only issued 128-bit instructions with the `simd.h` split between 256/128 before and now ARM64 has to do 128-bit instructions from 256-bit instructions in a more round about way. We could reintroduce the code for that again and see if we get equal performance.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-646635552:118,Perform,Performance,118,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-646635552,3,"['Perform', 'perform']","['Performance', 'performance']"
Performance,"I am trying to parallelize the pipeline so that each sample runs on a single core with two threads. The computer I am running this on has 80 cpus and about 1.5TB RAM. So I could use more processors per sample, but I wanted to optimize this for single processor per sample. How many processors did you run your job on that took 10 minutes?. I can try using /dev/shm instead of tmp and see if it makes any difference. We also have a Solid state drive on this computer. Do you think it would be faster if my database is on this drive?. regards,. Dhwani. ________________________________; From: Martin Steinegger <notifications@github.com>; Sent: Wednesday, July 3, 2019 5:18:16 PM; To: soedinglab/MMseqs2; Cc: Dhwani Desai; Mention; Subject: Re: [soedinglab/MMseqs2] Speed up mmseqs for large database and multiple large query sets by loading target into memory (#214). This is way too slow. I just ran something in a similar scale (query size 10005733, target size 101055107) in less than 10 minutes total. Could it be that your file system is very slow? What would happen if you set the tmp to /dev/shm? Why do you just use two threads? What kind of CPUs does the computer have?. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/214?email_source=notifications&email_token=ABYZBDIRYJK5AJLDI4NZQVTP5UCQRA5CNFSM4H333Q62YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODZFSEZA#issuecomment-508240484>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABYZBDMXQ2BW72344I3OKHDP5UCQRANCNFSM4H333Q6Q>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508484622:226,optimiz,optimize,226,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508484622,2,"['load', 'optimiz']","['loading', 'optimize']"
Performance,"I changed the `--db-load-mode` from `2` to `3`, and the performance improves a lot. ; Where can I find the documentation on the option ``--db-load-mode`? Just want to understand this better.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-994894676:20,load,load-mode,20,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-994894676,3,"['load', 'perform']","['load-mode', 'performance']"
Performance,"I confirm I faced the same issue, which was solved by adding an explicit --split.; Can you confirm that the strategy for --split is that the size of the .sk7 index divided by the split value should fit into RAM ?; Many thanks,; Pascal; PS: On a compute cluster, I'm finding that using a 240GB sk7 precomputed index on a 40Gb/s Infiniband network drive is hardly providing any speed-up compared to ""on the fly indexing"" because it takes so long to cache the index on the nodes (who are naturally all asking the same huge file at the same time...). Sadly our cluster admin policy is to not have any permanent local disk space on the nodes, as the Infiniband network disks are supposedly so fast :( I'm going to have to try and convince the admin of the opposite! In the mean time I'm getting much better performance on single beefed up work stations with SSD storage.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-302337441:447,cache,cache,447,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-302337441,2,"['cache', 'perform']","['cache', 'performance']"
Performance,"I created an index for UniRef90 using `--split 4`, which produced 4 splits and required ~70G of memory to generate. Now I'm trying to run `mmseqs search` on that target database with the associated idx that I just created. My `mmseq search` cluster jobs all die (even when providing up to 200G of memory) with the following error: . ```; Failed to mmap memory dataSize=58928025600 File=/ebio/abt3_scratch/nyoungblut/Struo2_255873462447/humann3_search/mmseqs_search_db/db.idx. Error 12; ```. According to the error message, the database size is < 100G, so why am I getting an `mmap` error? . I also get this error when using `--db-load-mode 1`, which should use fread instead of mmap, according to the help docs, so I don't understand why I'm still getting the `Failed to mmap memory` in that situation. . I'm using mmseq2 12.113e3. The `mmseqs search` jobs complete successfully when running them locally (a server with plenty of memory). It appears to be something specific to the SGE cluster. Both local and cluster nodes are running `Ubuntu 18.04.5`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702:630,load,load-mode,630,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702,1,['load'],['load-mode']
Performance,"I don't think you need much changing. The defaults are set to optimize sensitivity while keeping false positives low. You can further decrease the E-value threshold, but you can do that also after the search just based on the result file. Sequence identity, coverage etc. depend a lot on your specific research question.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/721#issuecomment-1596472013:62,optimiz,optimize,62,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/721#issuecomment-1596472013,1,['optimiz'],['optimize']
Performance,"I downloaded all NCBI phages and was able to trigger this error with them. MMseqs Version: 15.6f452. mmseqs search --search-type 3 -c 0.5 -v 3 --cov-mode 2 --alignment-mode 3 --threads 8 --headers-split-mode 1 --sort-results 1 --max-seq-len 10000000 --db-load-mode 2 /home/ubuntu/NCBI-phages-20231219.fa /home/ubuntu/allDB /home/ubuntu/mmseqs-results.tab /tmp/tmpbvzkw379. Input database ""/home/ubuntu/NCBI-phages-20231219.fa"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-1865071906:255,load,load-mode,255,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-1865071906,1,['load'],['load-mode']
Performance,"I found out whats wrong. It is a speed optimization gone wrong. The tldr is that your input FASTA file should end with a newline. Why this is happening:. When a FASTA file is not in multiline format. E.g.:; ```; >1; A...\NEWLINE; G; ```; and entries are in the single line format (`>1\newlineA...G`) we just symlink the FASTA instead of creating a whole new database (thus potentially saving a lot of disk space for large input`). Without this optimization we always ensure that there is a new line character at the end of every sequence. Now we skipped it and break some other assumptions in the code. We'll try to figure out some fix, until then please make sure that your files end with a newline or call `easy-cluster` with `--createdb-mode 0`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/617#issuecomment-1274337277:39,optimiz,optimization,39,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617#issuecomment-1274337277,2,['optimiz'],['optimization']
Performance,"I generated the index files for some Uniprot databases:. ```; mmseqs createdb <databases.fasta.gz> input/targetDB; mmseqs createindex input/targetDB tmp; ```. This step has generated a bunch of ""targetDB.idx.0,1,2...14 ""(each is 52GB), and a ""targetDB.idx.dbtype"" + ""targetDB.idx.index"". It seems there should be only one ""targetDB.idx"" file generated. However, that file was not there although it says in the last few lines of the log ""Time for merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My quest",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/757:806,cache,cache,806,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757,1,['cache'],['cache']
Performance,"I get the following when compiling on mac:. ```bash; make VERBOSE=1; ...; [ 69%] Linking CXX executable mmseqs; cd /Users/rfonseca/Programs/mmseqs2/build/src && /usr/local/Cellar/cmake/3.6.3/bin/cmake -E cmake_link_script CMakeFiles/mmseqs.dir/link.txt --verbose=1; /usr/local/bin/gcc-6 -DOPENMP=1 -fopenmp -mavx2 -mfpmath=sse -Wa,-q -std=c++0x -m64 -pedantic -Wall -Wextra -Winline -Wdisabled-optimization -Wno-unused-parameter -O3 -DNDEBUG -mavx2 -mfpmath=sse -Wa,-q -O3 -DNDEBUG -ffast-math -fno-exceptions -ftree-vectorize -fno-strict-aliasing -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o mmseqs util/libutil.a workflow/libworkflow.a /usr/lib/libz.dylib util/libutil.a prefiltering/libprefiltering.a alignment/libalignment.a clustering/libclustering.a commons/libcommons.a; Undefined symbols for architecture x86_64:; ""std::ctype<char>::_M_widen_init() const"", referenced from:; diffseqdbs(int, char const**, Command const&) in libutil.a(diffseqdbs.cpp.o); createsubdb(int, char const**, Command const&) in libutil.a(createsubdb.cpp.o); readAllKeysIntoMap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) in libutil.a(swapresults.cpp.o); mergeClusteringResults(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) in libutil.a(mergeclusters.cpp.o); readLength(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) in libutil.a(summarizetabs.cpp.o); getEntries(unsigned int, char*, unsigned long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, std::less<std::__cxx11::basic_string<char, std::char_traits<char>",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/8:394,optimiz,optimization,394,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/8,1,['optimiz'],['optimization']
Performance,"I had carefully read this similar issue below. I think my problem may be different and with more details.; https://github.com/soedinglab/MMseqs2/issues/658; ## Expected Behavior; mmseqs local runs with similar response time as that in mmseqs colabfold api.; Is there a solution for ColabFold multimer prediction msa search with a good speed(not fastest, but faster) with 256GB memeory?; ## Current Behavior; for 1 sequence pair(164 mers and 6 mers) input, local mmseqs msa server use more than 4 hours to process, even much slower than Alphafold orig MSA local running at the same local hardware environment.; **I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.**; **Is this very low speed caused by I didn't keep all database into memory?**; >HAGPIA; ## Steps to Reproduce (for bugs); I follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690:210,response time,response time,210,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690,1,['response time'],['response time']
Performance,"I have a request for describing some mmseq's options in more depth, at least with a suggestion what effect might have a specific parameter set to its extreme. Especially, maybe they wouldn't be relevant eventually, but I think that's good to know when thinking about optimizing and shaping profiles / searches / clusterings. For instance:. **result2profile**; --qid (intuitive, but how does it affect final profile's e.g. sensitivity?); --qsc (especially the range - what does the default setting mean compared to extremes?); --pca; --pcb; --diff (I see explanation in commandline help but get confused by the window and don't know whether should I modify that for manipulating profile's characteristics - mainly specific/nonspecific feature). **prefilter**; --min-ungapped-score (set up to 15, what does it mean? Does it affect minimum length of k-mer alignment that is needed?); --k-score; --diag-score. Could you add some comment in documentation what do these do? How varying them affect (or is expected to affect) results? Maybe some of them are hidden in the code, but that's hard to infer for non developer. I can see also that search doesn't produce results for very short sequences, e.g. the shortest PFAM consensus sequences, what additionally inspire me to rethink all procedures more throughly. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/85:267,optimiz,optimizing,267,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/85,1,['optimiz'],['optimizing']
Performance,"I introduced the two additional splits because of https://github.com/soedinglab/MMseqs2/issues/338. Though that wasn't very effective to reduce peak memory use. . The error looks like a memory corruption though. I am not really sure how to reproduce the issue locally. ; Do you still have the tmp files? Could you try rerunning only the last step without the index:. ```; mmseqs result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; ```. The only change was to remove the `.idx` suffix after `mmseqs_tax.db`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814300855:1030,load,load-mode,1030,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814300855,1,['load'],['load-mode']
Performance,"I noticed only after I wrote my answer below that you are trying to use nucleotides for profiles. We don't support that, as nulceotide searches below 80% sequence identity don't tend to be very useful, and normal sequence search is more than sufficient for that. -----. If you had protein input you could do this:. If each database entry is a normal aligned FASTA MSA, then you should be able to give this database to `msa2profile`.; `msa2profile` expects a special database type (11 for MSA db) though:; ```; awk 'BEGIN { printf(""%c%c%c%c"",11,0,0,0); exit; }' > AthselfDBSEQ_msa.dbtype ; mmseqs msa2profile AthselfDBSEQ_msa AthselfDBSEQ_profile ...; ```; Usually you don't want global MSAs for profile computation though. Generally from experience, local alignments to a center sequence perform better.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-745433666:788,perform,perform,788,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-745433666,1,['perform'],['perform']
Performance,"I ran the final command (result2profile) in gdb with. ```; gdb --args /mnt/disks/kc-ssd/MMseqs2/build/bin/mmseqs result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3; ```. and got the following backtrace via `bt`. ```; (gdb) #0 0x0000555555a8d42b in tantan::Tantan::calcForwardTransitionAndEmissionProbs() (); #1 0x0000555555a8d865 in tantan::Tantan::calcRepeatProbs(float*) (); #2 0x0000555555a8bf8b in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (); #3 0x0000555555a8be7f in tantan::maskSequences(char*, char*, int, double const* const*, double, double, double, double, double, double, char const*) (); #4 0x000055555597de9b in PSSMMasker::mask(Sequence&, float, PSSMCalculator::Profile&) (); #5 0x00005555559f918b in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86_64-linux-gnu/libgomp.so.1; #7 0x00005555559f86d7 in result2profile(int, char const**, Command const&, bool) (); #8 0x00005555559f887c in result2profile(int, char const**, Command const&) (); #9 0x00005555557ea0d5 in runCommand(Command*, int, char const**) (); #10 0x00005555557eb00a in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214483106:638,load,load-mode,638,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214483106,1,['load'],['load-mode']
Performance,"I re-ran from the very beginning (because it seems the temp files were auto-removed, e.g., `input_step_redundancy`). However, there is no backtrace output.; ```; Time for merging to pref_filter1: 0h 0m 45s 203ms; Time for processing: 0h 1m 56s 417ms; filterdb /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter1 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 --filter-file /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/order_redundancy --threads 96 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 245.75M 2m 6s 123ms; Time for merging to pref_filter2: 0h 2m 13s 365ms; Time for processing: 0h 6m 17s 259ms; rescorediagonal /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0; --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3. Segmentation fault (core dumped) ] 0.00% 1 eta -; Error: Ungapped alignment step died; Error: Search died; [Inferior 1 (process 161684) exited with code 01]; (gdb) bt; No stack.; ```; Let me know if there is something else I can test.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972:1358,load,load-mode,1358,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972,1,['load'],['load-mode']
Performance,"I read the wiki and [User Guide](http://mmseqs.com/latest/userguide.pdf).; Although there are examples about `--db-load-mode 2`, none mentions or explains `--db-load-mode 3`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-995048027:115,load,load-mode,115,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-995048027,2,['load'],['load-mode']
Performance,"I realize that those are both required libraries, and needed for many platforms. . The request is for adding something like USE_SYSTEM_ZSTD and USE_SYSTEM_XXHASH. The Debian patch for system zstd has the minor changes needed except the cmake ifdefs. Debian also uses system gzstream (Debian is an outlier in having that lib), but no patch for xxhash. xxhash is central to your algorithm and also latest-release in your repo, but it's in pretty active development with fairly major bug fixes and performance improvements in the last 6 months, so it's good to have a pinned version in the repo that can be overridden with system if desired. Being able to build shared libs is pretty important, in either case.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777005754:495,perform,performance,495,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777005754,1,['perform'],['performance']
Performance,"I reopen this issue because the proposed solution did not solve my problem using another dataset. When I perform a mmseq2 clustering using the parameters --kmer-per-seq 80 and --max-seqs 300 several entries (GCF_002025345.1_ASM202534v1_genomic_04754, GCF_000742655.1_ASM74265v1_genomic_01763, GCF_000793565.1_ASM79356v1_genomic_02850, GCF_000782995.1_ASM78299v1_genomic_04822 and many others) having the same sequence (""MAEITIPLRDVIEVTEDATYAGVEVTSAIRIGTAYGTTDRILIKTVKQNYVLFTTNKVSILNAINA"") are not clustered together. I also tried to add the following parameters: --mask 0 --comp-bias-corr 0 --exact-kmer-matching 1 but it did not cluster together the entries above. I use MMseqs2-3-be8f6. Here is my sequence database: https://drive.google.com/file/d/1mkjX3Y01KecyZuDpQ0Z6H59JMm043ujH/view?usp=sharing. Thank you for your help.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401039024:105,perform,perform,105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401039024,1,['perform'],['perform']
Performance,"I seem to be getting the same error when running `linclust`, but the error seems to occur during the `rescorediagonal` step. The log from my run:. ```; rescorediagonal /tmp/inclust/genes_db /tmp/genes_db /tmp/linclust_tmp/12839115596035141496/pref /tmp/linclust_tmp/12839115596035141496/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --db-load-mode 0 --threads 24 --compressed 0 -v 3. [Invalid database read for database data file=/tmp/linclust/genes_db, database index=/tmp/linclust/genes_db.index; getData: local id (4294967295) >= db size (1084240); Invalid database read for database data file=/tmp/linclust/genes_db, database index=/tmp/linclust/genes_db.index; getData: local id (4294967295) >= db size (1084240); Invalid database read for database data file=/tmp/linclust/genes_db, database index=/tmp/linclust/genes_db.index; getData: local id (4294967295) >= db size (1084240); Invalid database read for database data file=/tmp/linclust/genes_db, database index=/tmp/linclust/genes_db.index; getData: local id (4294967295) >= db size (1084240); Invalid database read for database data file=/tmp/linclust/genes_db, database index=/tmp/linclust/genes_db.index; getData: local id (4294967295) >= db size (1084240); Error: Rescore with hamming distance step died; ```. My linclust job is the following:. ```; mmseqs linclust --threads 24 --min-seq-id 0.90 -c 0.9 --kmer-per-seq 50 /tmp/linclust/genes_db /tmp/linclust/clusters_db /tmp/linclust_tmp/; ```. I'm using `mmseqs2 9.d36de h76f5088_0 bioconda`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-524198971:527,load,load-mode,527,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-524198971,1,['load'],['load-mode']
Performance,"I still can't manage to compile the code on our servers. I get many instances of this error (or similar):; ```; lib/simde/simde/x86/avx2.h:718:62: error: cannot convert ‘simd_int {aka __vector(4) long long int}’ to ‘__vector(4) long int’ for argument ‘1’ to ‘__vector(4) long int simde_mm256_cmpeq_epi8(__vector(4) long int, __vector(4) long int)’; ```. Any idea what's happening?. ```; $ gcc -v; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/5/lto-wrapper; Target: x86_64-linux-gnu; Configured with: ../src/configure -v --with-pkgversion='Ubuntu 5.4.0-6ubuntu1~16.04.12' --with-bugurl=file:///usr/share/doc/gcc-5/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-5 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-5-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-5-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-5-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu; Thread model: posix; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495:1617,tune,tune,1617,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495,1,['tune'],['tune']
Performance,"I think I encountered same question like you, and my HPC node similar with yours, it kept running almost 17h and no progress, I'm wondering that when you set the param `--db-load-mode 3` then rerun it, how long could you detect the output?. Any anwser would be helpful! Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-1814045055:174,load,load-mode,174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-1814045055,1,['load'],['load-mode']
Performance,I think I know what the bug. Creating the following symlink manually should fix the db:; ```; ln -s U90andNEWDB70_taxonomy U90andNEWDB70_nostrepto_taxonomy; ```. The dmp files are turned into a binary format (`_taxonomy`) that can be loaded nearly instantly. `filtertaxseqdb` doesn't create the correct symlink for this file.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/474#issuecomment-881026657:234,load,loaded,234,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/474#issuecomment-881026657,1,['load'],['loaded']
Performance,"I think I know what's going on. I think MERC contains `*` character to mark gene starts and stop codons. In the normal MMseqs2 search etc we handle this case correctly, but Linclust uses a special sequence reading mode for best performance. You can get around the issue by doing something like:; ```; zcat MERC.fasta.gz | tr -d '*' | mmseqs easy-linclust stdin MERC /export/tmp/MERC -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 0.5 --split-memory-limit 500G; ```; (Not 100% sure the FASTA headers don't contain any `*` characters, this command will eliminate all `*`).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649908107:228,perform,performance,228,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649908107,1,['perform'],['performance']
Performance,"I think the sequence database is just a bit too large to fit into RAM. You could try to use the `--compressed 1` parameter to compress each sequence (and all intermediate databases). You will pay a slight cost in runtime for the constant decompression, but that will be more than offset since the sequences will not be constantly evicted from the OS file cache. Dealing with billions of sequences is still kind of awkward and difficult. We have to improve memory management for these cases.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324#issuecomment-651239232:355,cache,cache,355,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324#issuecomment-651239232,1,['cache'],['cache']
Performance,I took a closer look at the CPU flags. I think your KVM is disallowing sse41 and avx2. At least sse41 is required for reasonable performance.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396917129:129,perform,performance,129,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396917129,1,['perform'],['performance']
Performance,I tried [cluster using profiles](https://github.com/soedinglab/MMseqs2/wiki#how-to-cluster-using-profiles) using this [test dataset](https://github.com/soedinglab/MMseqs2/files/2765258/subset.txt). I performed this procedure:. > mmseqs createdb subset.fa subset.db; > mmseqs prefilter subset.db subset.db subset.prefilter.db -s 8.5; > mmseqs align subset.db subset.db subset.prefilter.db subset.align.db --min-seq-id 0.9; > mmseqs clust subset.db subset.align.db subset.clust.db; > ; > mmseqs createsubdb subset.clust.db subset.db subset.90.db; > mmseqs prefilter subset.90.db subset.90.db subset.90.prefilter.db -s 8.5; > mmseqs align subset.90.db subset.90.db subset.90.prefilter.db subset.20.aling.db --min-seq-id 0.2 ; > mmseqs clust subset.90.db subset.20.aling.db subset.20.clust.db; > ; > mmseqs mergeclusters subset.db final_clu subset.clust.db subset.20.clust.db ; > mmseqs createtsv subset.db subset.db final_clu final_clu.tsv; > mmseqs result2profile subset.db subset.db final_clu final_clu.profile ; > mmseqs search final_clu.profile final_clu.profile_consensus final_clu.profile.DB2 tmp --add-self-matches ; > mmseqs clust final_clu.profile final_clu.profile.DB2 final_clu.profile.clu ; > mmseqs createtsv final_clu.profile final_clu.profile.clu final_clu.profile.clu.tsv. In the end I got this [meaningless tsv](https://github.com/soedinglab/MMseqs2/files/2765314/final_clu.profile.clu.txt). I didn't understand this tsv which is different from those created with simple cluster of proteins. I'd like to know if I did something wrong or how to understand this file. Thanks in advance,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/151:200,perform,performed,200,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/151,1,['perform'],['performed']
Performance,"I tried to reconstruct the command that probably crashed. Could you run it again inside a debugger to recover the backtrace? I have no clue what could have gone wrong so early in the command invocation (the running module had no output at all before it crashed).; 1) Run the following command; ```; gdb --args mmseqs rescorediagonal /export/tmp/MERC/4233864688410091672/input_step_redundancy /export/tmp/MERC/4233864688410091672/input_step_redundancy /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter2 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3; ```; 2) wait for a command prompt; 3) press `r` for run and then enter; 4) wait for the crash; 5) press `bt` for backtrace and then enter; 6) copy the output and paste it here. Thanks a lot for reporting the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649841049:835,load,load-mode,835,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649841049,1,['load'],['load-mode']
Performance,"I use the source code available [here](https://github.com/soedinglab/MMseqs2/archive/12-113e3.tar.gz). . Here the specs : . Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 36; On-line CPU(s) list: 0-35; Thread(s) par coeur : 1; Coeur(s) par support CPU :18; Socket(s): 2; Noeud(s) NUMA : 2; ID du vendeur : GenuineIntel; Famille CPU : 6; Modèle : 79; Model name: Intel(R) Xeon(R) CPU E5-2697 v4 @ 2.30GHz; Version : 1; CPU MHz : 2300.113; BogoMIPS: 4599.34; Virtualisation : VT-x; L1d cache : 32K; L1i cache : 32K; L2 cache : 256K; L3 cache : 46080K; NUMA node0 CPU(s): 0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34; NUMA node1 CPU(s): 1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741805975:526,cache,cache,526,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741805975,4,['cache'],['cache']
Performance,"I wanted to compare the running time of the MSA search against the databases locally and by means of the API server; Thus, I provided to colabfold_search a FASTA file containing two protein sequences.; It has been running for over two hours now with the option `--db-load-mode 3`, while the Colab server managed a time of 45 min. ; Is there any way to process the MSA search as fast as the remote server? . Sincerely,; Ilyes",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/583#issuecomment-1201314436:267,load,load-mode,267,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583#issuecomment-1201314436,1,['load'],['load-mode']
Performance,"I was wondering if it is possible to copy the database index to /dev/shm instead of page cache? This would have the advantage that in a slurm cluster environment, one could reserve the memory needed for the index. When the database gets copied to cache and pages are locked by vmtouch, this would not be covered by the slurm reservation as far as I understand. It wouldn't be a problem that the database index gets deleted after the job finishes (when it is copied to /dev/shm). Update:; I could run the job now by copying the index to /dev/shm and making symlinks in the /dev/shm directory to the other database files on the network share because otherwise (without the links) there is a file not found error when using db-load-mode 3.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/629:89,cache,cache,89,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/629,3,"['cache', 'load']","['cache', 'load-mode']"
Performance,"I would not recommend to use indexing for a weekly job. Without pre-indexing you can use a smaller machine, i.e. in the 128-256GB RAM range. 500k queries vs UniProt should not be a big issue for such a machine. Pre-indexing usually helps if you want to search with very single queries or very small sets, or if you have little memory and very fast storage. In other cases it might even hurt performance, I am not sure if this issue was ever resolve in Linux, but creating an index on the fly allows to use a Linux kernel mechanism called Transparent Huge Pages (THP), which results in about 10-15% faster run time for larger batch searches. So I would recommend to delete all `.idx` files (rm -f -- DB.idx.*) and proceed without `createindex`. Additionally, for the PDB, I also recommend to first do a 100% seq.id. clustering to not repeat searches for identical queries. Regarding your question: If the machine running `createindex` did not have enough RAM to fully fit the index it will split it into N splits. These are the targetDB.idx.0 ... targetDB.idx.N files you see. You can manually disable this by specifying `--split 1`, then it will create only the `targetDB.idx` file (and some supporting files). In this case you will still need a machine that can fit the whole precomputed index into memory.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/757#issuecomment-1741117323:391,perform,performance,391,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757#issuecomment-1741117323,1,['perform'],['performance']
Performance,"I would recommend to install MMseqs2 on Windows through WSL2. See the official [WSL guide](https://docs.microsoft.com/en-us/windows/wsl/install) for install instructions. The mingw MMseqs2 version for Windows suffers from relatively poor memory performance in some modules. We tried to improve that, however its still slower than the Linux version. I am not sure what your exact issue is. You might have to try to start MMseqs2 (`mmseqs.bat`) for the first time as administrator, so all links are setup correctly. Subsequent calls should then work without admin rights.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/574#issuecomment-1173277178:245,perform,performance,245,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574#issuecomment-1173277178,2,['perform'],['performance']
Performance,"I'm also getting this error. What's the current workaround? . ```bash; Reading LCA results; [=================================================================] 100.00% 3.34M 0s 428ms . Found 34 different taxa for 3340500 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/6531700399628113911/easy-taxonomy.sh: line 39: 138605 Aborted (core dumped) ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```. EDIT: Same error, new microbe:. <details><summary>Ending error here:</summary>. ```bash; Loading NCBI taxonomy; Loading nodes file ... Done, got 2213844 nodes; Loading merged file ... Done, added 56043 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Reading LCA results; [=================================================================] 100.00% 2.27K 0s 0ms . Found 2 different taxa for 2272 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/16886106523447294388/easy-taxonomy.sh: line 39: 11990 Aborted ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```; </details>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067:631,Load,Loading,631,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067,4,['Load'],['Loading']
Performance,"I'm examining the efficiency of template retrieval using different MMseqs2 configurations for MSA generation, which is crucial for identifying templates via hhsearch. Notably, the **ColabFold MMseqs2 detailed version** involves complex steps like search, expansion, alignment, and filtering, offering high accuracy but with significant time investment. On the other hand, the **MMseqs2 easy search version** simplifies the process, potentially reducing time but at a possible cost to accuracy. Given that my project processes a large volume of PDB chains (around 400k), understanding the trade-offs between these methods is essential. Key inquiries:; **Does the difference in MSA quality between the two MMseqs2 versions significantly affect template identification accuracy?; How can I optimize the MMseqs2 template search to balance efficiency and precision effectively?**; I appreciate any insights or experiences with these tools. <Colabfold mmseqs2>; `def mmseqs_search_monomer(; dbbase: Path,; base: Path,; uniref_db: Path = Path(""uniref30_2202_db""),; template_db: Path = Path(""""), # Unused by default; metagenomic_db: Path = Path(""colabfold_envdb_202108_db""),; mmseqs: Path = Path(""mmseqs""),; use_env: bool = True,; use_templates: bool = False,; filter: bool = True,; expand_eval: float = math.inf,; align_eval: int = 10,; diff: int = 3000,; qsc: float = -20.0,; max_accept: int = 1000000,; prefilter_mode: int = 0,; s: float = 8,; db_load_mode: int = 2,; threads: int = 32,; ):; #Run mmseqs with a local colabfold database set; #; #db1: uniprot db (UniRef30); #db2: Template (unused by default); #db3: metagenomic db (colabfold_envdb_202108 or bfd_mgy_colabfold, the former is preferred); ; uniref_db = Path(""/store/colabfold/db/uniref30_2202_db""); template_db = Path(""/store/colabfold/db/pdb70_220313""); if filter:; # 0.1 was not used in benchmarks due to POSIX shell bug in line above; # EXPAND_EVAL=0.1; align_eval = 10; qsc = 0.8; max_accept = 100000. used_dbs = [uniref_db]; if use_templa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:787,optimiz,optimize,787,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['optimiz'],['optimize']
Performance,I'm happy to hear that MMseqs2 performs well in your Benchmark. You can adjust the sensitivity/speed of with the -s parameter. MMseqs2 expected that the computer that creates the index to have the same amount of memory as the computer that performs the search. If you don't want to precompute an index than you can call the search command without precomputed index. A non-persistent index is than created on the fly. The command createindex should be $mmseqs createindex uniref90.mms --split 6 --threads 12; instead of $mmseqs createindex uniref90.mms uniref90.mms.sk7 tmp --split 6 --threads 12.; Why did you call it this way? Is this somewhere in the documentation?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251862327:31,perform,performs,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251862327,2,['perform'],['performs']
Performance,"I'm not sure if this is the same problem or a different one, but I'm getting a similar error when using a different taxonomy database:. ```; Loading NCBI taxonomy...; Computing LCA...; Segmentation fault; Error: Lca died; ```. The database creation was (using version 8.fac81):. ```; ## downloading uniclust db; wget http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust50_2018_08.tar.gz; uncomp uniclust50_2018_08.tar.gz; mv uniclust50_2018_08/uniclust50_2018_08_consensus.fasta . ## creating seq db; mmseqs createdb --dbtype 1 uniclust50_2018_08_consensus.fasta uniclust50_2018_08_consensus. ## creating tax db; mmseqs createtaxdb uniclust50_2018_08_consensus tmp; ```. The taxonomy classify command (using version 8.fac81):. ```; mmseqs taxonomy -e 1e-5 --max-seqs 200 --lca-ranks ""kingdom:phylum:class:order:family:genus:species"" --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus clusters_rep-seqs.part-14_tax_db tmp_part-14; ```. The run log w/ error:. ```; Program call:; taxonomy -e 1e-5 --max-seqs 200 --lca-ranks kingdom:phylum:class:order:family:genus:species --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus clusters_rep-seqs.part-14_tax_db tmp_part-14. MMseqs Version: 	8.fac81; Substitution Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:141,Load,Loading,141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,1,['Load'],['Loading']
Performance,"I'm pasting below the whole script I'm trying to run right now:. #!/bin/bash; #SBATCH --job-name=chiro_mt; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=nocona; #SBATCH --nodes=2; #SBATCH --ntasks=256; #SBATCH --reservation=benchmark. module --ignore-cache load gcc/10.2.0 openmpi/4.0.4 . INPUTDIR=~/input; MMSEQ=~/MMseqs2/bin; SPLITS=3; QUERYFASTA=all_species.fasta; QUERYDB=DB. cd $INPUTDIR. mmseqs createdb ""${QUERYFASTA}"" ""${QUERYDB}""; mmseqs splitdb ""${QUERYDB}"" ""${QUERYDB}_split"" --split $SPLITS. for file in $(ls ""$INPUTDIR/${QUERYDB}_split""_*_$SPLITS); do; mmseqs createsubdb ""${file}.index"" ""${QUERYDB}_h"" ""${file}_h""; done. split=0; for file in $(ls ""$INPUTDIR/${QUERYDB}_split""_*_$SPLITS); do; RUNNER=""mpirun -np 128"" bsub mmseqs cluster ""${file}"" DB aln_${split} tmp --cov-mode 1 -c 0.9 --threads 128; ((split++)); done. So far what I understand is that the MPI version is used to run MMseqs2 on multiple servers but to run it in multiple cores, will the ""simple"" version work? I think that for the kind of job I'm doing right now, being able to run it on 128 cores on a single node will be enough, or is the workflow the same for what I pasted above? Thanks a lot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844277969:280,cache,cache,280,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844277969,4,"['cache', 'load']","['cache', 'load']"
Performance,"I'm running a 3 iteration search job and it crushed towards the end of the prefiltering of the last iteration. I tried to run again the same command in order to resume from where I stopped, but it seems to me that it is starting from the beginning. ## Expected Behavior; Start from:; ```; Program call:; prefilter tmpC/10139724895635470572/profile_1 genes.db tmpC/10139724895635470572/pref_2 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 48 -v 3 . ```; ## Current Behavior; creates new folder inside the tmp folder and starts a new run; ```; Program call:; prefilter geneC.db genes.db tmpC/13630618462368123119/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 56 -v 3 . ```. ## Steps to Reproduce (for bugs); ```; #BSUB -R ""rusage[mem=200000]""; #BSUB -a openmpi; #BSUB -J ""GeneC"". module load MMseqs2/6-f5a1c. runner=""mpirun"" mmseqs search geneC.db genes.db geneC-v-all_3itr.db tmpC --no-preload --max-seqs 1000 --num-iterations 3; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160:1434,load,load,1434,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160,1,['load'],['load']
Performance,"I've been trying to perform some basic tests with MMSeqs2 and have encountered an issue where I repeated get the following error message:. Init data structures...; Compute score only.; Could not open data file [path_to_dir]/mmseqs_tmp/pref_4!. The ""[path_to_dir]/mmseqs_tmp/"" directory contains two temporary files (pref_4.index_tmp_0.0 and pref_4_tmp_0.0) along with a blastp.sh script. I'm not using any advanced options for my search, and both input databases are (as far as I can see) formatted correctly. Maybe I'm overlooking something embarrassingly simple?. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/11:20,perform,perform,20,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/11,1,['perform'],['perform']
Performance,I've seen Issue 666 and have access to a supercomputing facility. Should I submit a job-script allocating GPUs to this instead of performing it in PuTTy on my computer alone?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/668#issuecomment-1434645218:130,perform,performing,130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668#issuecomment-1434645218,1,['perform'],['performing']
Performance,"IR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	20; Shift hash 	5; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; panproteome.db tmp/425628692068579862/clu_redundancy tmp/425628692068579862/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:93514,perform,performs,93514,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['perform'],['performs']
Performance,If you clustered a clustered database then you increase your initial search radius by `x^2`. E.g. your --min-seq-id is then 0.95^2 = 0.9025. Maybe this might explain this effect? . Nucleotide cluster is internally tested and it seems to perform well compared to CD-HIT. We did not write a paper about it but really should.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/420#issuecomment-789791198:237,perform,perform,237,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/420#issuecomment-789791198,1,['perform'],['perform']
Performance,"Improve gff2db to parse multiple files, and try multi-threading",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/468:48,multi-thread,multi-threading,48,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/468,1,['multi-thread'],['multi-threading']
Performance,"In this case with 512GB of RAM, and NR with it's current size (~69GB of raw sequences), --split 2 and 32 threads is what gives best performance results. Reducing the number of database chunks doesn't allow to keep the index file in cache when 'mmseqs search' is running, what forces reading from the file system, increasing the sys CPU time and degrading performance. Using 62 threads (32 real cores plus 32 from HT), looks like that puts too much pressure on available memory bandwith and hurts performance too (in my tests, it goes from 4' to 4'30'')",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301212554:132,perform,performance,132,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301212554,4,"['cache', 'perform']","['cache', 'performance']"
Performance,"Index version: 15; Generated by: 73ce3b88754987122b4fc5e69a721beeecd677d0; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 12189231 type: Aminoacid; Target database size: 134985288 type: Aminoacid; Calculation of alignments; [] 3h 56m 20s 209ms; Time for merging files: 0h 0m 13s 891ms. 138555514 alignments calculated.; 54047267 sequence pairs passed the thresholds (0.390077 of overall calculated).; 4.434018 hits per query sequence.; Time for processing: 3h 56m 39s 222ms; offsetalignment mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB tmp/15531098257495296432/q_orfs /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx tmp/15531098257495296432/aln mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB --chain-alignments 0 --merge-query 1 --search-type 0 --threads 2 --compressed 0 --db-load-mode 3 -v 3 . Index version: 15; Generated by: 73ce3b88754987122b4fc5e69a721beeecd677d0; ScoreMatrix: VTML80.out; Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 1s 475ms; Writing results to: mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB; [] 5h 36m 42s 260ms. Time for merging files: 0h 0m 5s 864ms; Time for processing: 5h 37m 8s 744ms; convertalis mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB /home/dhwani/databases/mmseqsRefSeqCompleteDB mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB mmseqs-test-megan-out-280619/mmseqs-S1E3-S3-s1.m8 --db-load-mode 3 . MMseqs Version: 	73ce3b88754987122b4fc5e69a721beeecd677d0; Substitution matrix 	blosum62.out; Alignment format 	0; Format alignment output	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Translation table 	1; Gap open cost 	11; Gap extension cost 	1; Database output 	false; Preload mode 	3; Search type 	0; Threads 	80; Compressed 	0; Verbosity 	3. [] 4h 58m 11s 48ms; Time for merging files: 0h 1m 34s 339ms; Time for processing: 5h 2m 23s 933ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:7965,load,load-mode,7965,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,1,['load'],['load-mode']
Performance,Is it possible to perform the suite on DNA sequence?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/26:18,perform,perform,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/26,1,['perform'],['perform']
Performance,"Is there a way of merging them after the run is done? It’s not a big deal; it’s just a little less cluttered. I really appreciate the software. I’ve been using the taxonomy module extensively with impressive results. Thank you!. > On Dec 3, 2022, at 20:39, Milot Mirdita ***@***.***> wrote:; > ; > ; > You can set the MMSEQS_FORCE_MERGE environment variable (e.g. export MMSEQS_FORCE_MERGE=1). The split databases are, however, an IO optimization and not related to memory. Merging after every module invocation can slow MMseqs2 down considerably.; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABMXPRTD22DUCKCKPGRBEPLWLQOAZANCNFSM6AAAAAASRJ3OC4>.; > You are receiving this because you authored the thread.; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336345981:434,optimiz,optimization,434,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336345981,1,['optimiz'],['optimization']
Performance,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:798,load,load-mode,798,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034,1,['load'],['load-mode']
Performance,It is. The container was created by the [BioContainers](biocontainers.pro) people. Although I can never get their registry to load. So I downloaded it from quay.io using this link: https://quay.io/repository/biocontainers/mmseqs2?tab=tags,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/494#issuecomment-941179852:126,load,load,126,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/494#issuecomment-941179852,1,['load'],['load']
Performance,"It seems like you accidentally defeated a speed-up mechanism by setting `-s 0.5`. ; By setting `-s` <= `--orf-filter-s` it deactivates this optimization.; In this mode, we first do a very low sensitivity search to see if an extracted ORF can find anything at all in the target database, thus we can reject a lot of fragments that won't be able to contribute at all later. You can try setting `--orf-filter-s 1` instead and leave the default sensitivity.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795337964:140,optimiz,optimization,140,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795337964,1,['optimiz'],['optimization']
Performance,It would help if you could provide a log file. So I can see which module is slow. . The database does not stay necessarily memory. The OS can reuse the memory. The memory just got memory mapped by mmseqs2 (depending on the --db-load-mode).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-507070096:228,load,load-mode,228,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-507070096,1,['load'],['load-mode']
Performance,"It's related with the cluster evaluation and representative selection we are using. We need to find a compromise between speed and I/O bottlenecks. Now we were using `createsudb` to query the DB and get DBs for each cluster and distribute it in the HPC cluster to perform our validation, but it takes a long time, the original DB is ~250M proteins. It is faster when we have the files in the scratch partition of each node and the files partitioned in folders. This is the fastest way we found so far, from `createseqfiledb`:; ```; mawk '{if ($0 ~ /^\x0/ || NR == 1){gsub(""\x0"","""",$0); print ""#""$0; print $0}else{print $0}}' DB_clu_fa | csplit -z --suppress-matched -s -f cluster_ -b ""%01d.fa"" - '^#/' {*}; ```; After we split the ~32M files in folders with 100K files in each. All of this done in a fast SSD partition. Do you have any suggestions?. Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/50#issuecomment-343725229:135,bottleneck,bottlenecks,135,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/50#issuecomment-343725229,2,"['bottleneck', 'perform']","['bottlenecks', 'perform']"
Performance,"Just got a hang here:; ...; [===============================================================> ] 98.28% 35.40[===============================================================> ] 98.28% 35.41[================================================================>] 99.28% 35.77[=================================================================] 100.00% 36.03K 3s 736ms; Time for merging to aln_swapped: 0h 0m 0s 23ms; 103611 alignments calculated; 72095 sequence pairs passed the thresholds (0.695824 of overall calculated); 2.001194 hits per query sequence; Time for processing: 0h 0m 3s 787ms; swapresults /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/DBPROFILE/targetannotation_profile /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/DBPROFILE/query /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/DBPROFILE/tmp/7458066464536510288/aln_swapped /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/DBPROFILE/results_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 10000 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 16 --compressed 0 --db-load-mode 0 -v 3",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869012776:1186,load,load-mode,1186,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869012776,1,['load'],['load-mode']
Performance,"KRHGR3W5473P5ESTPA5CNFSM4H333Q62YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODY4UNEA#issuecomment-507070096>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABYZBDMYW6UIXY2PZFDTSZDP5ESTPANCNFSM4H333Q6Q>. createdb test_reads/S1E3-S3_assembled_kneaddata.fastq mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB . MMseqs Version: 	73ce3b88754987122b4fc5e69a721beeecd677d0; Max sequence length 	65535; Split seq. by length 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Assuming DNA database, forcing parameter --dont-split-seq-by-len true; Converting sequences; [	1 Mio. sequences processed; 	2 Mio. sequences processed; 	3 Mio. sequences processed; 	4 Mio. sequences processed; 	5 Mio. sequences processed. Time for merging files: 0h 0m 4s 846ms; Time for merging files: 0h 0m 35s 669ms; Time for merging files: 0h 0m 1s 887ms; Time for processing: 0h 1m 53s 245ms; search mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB /home/dhwani/databases/mmseqsRefSeqCompleteDB mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB tmp --db-load-mode 3 --threads 2 --max-seqs 25 -s 1 -a -e 1e-5 . MMseqs Version: 	73ce3b88754987122b4fc5e69a721beeecd677d0; Substitution matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	1e-05; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	3; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	2; Compressed 	0; Verbosity 	3; Seed substitution matrix 	VTML80.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	25; Previous max results per query 	; Split database 	0; Split mode 	2; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:2203,load,load-mode,2203,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,1,['load'],['load-mode']
Performance,"L80.out; Estimated memory consumption 372556 MB; Target database size: 134985288 type: Aminoacid; Query database size: 12189231 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12189231; Target db start 1 to 134985288; [] 5h 25m 52s 523ms. 5.520466 k-mers per position; 7748 DB matches per sequence; 0 overflows; 11 sequences passed prefiltering per query sequence; 8 median result list length; 2084890 sequences with 0 size result lists. Time for prefiltering scores calculation: 5h 25m 59s 596ms; Time for merging files: 0h 0m 17s 47ms; Time for processing: 5h 28m 30s 18ms; align tmp/15531098257495296432/q_orfs_aa /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx tmp/15531098257495296432/search/pref_0 tmp/15531098257495296432/aln --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 3 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 2 --compressed 0 -v 3 . Index version: 15; Generated by: 73ce3b88754987122b4fc5e69a721beeecd677d0; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 12189231 type: Aminoacid; Target database size: 134985288 type: Aminoacid; Calculation of alignments; [] 3h 56m 20s 209ms; Time for merging files: 0h 0m 13s 891ms. 138555514 alignments calculated.; 54047267 sequence pairs passed the thresholds (0.390077 of overall calculated).; 4.434018 hits per query sequence.; Time for processing: 3h 56m 39s 222ms; offsetalignment mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB tmp/15531098257495296432/q_orfs /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx tmp/15531098257495296432/aln mmseqs-test-megan-out-280619/mmseqs-S",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:6351,load,load-mode,6351,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,1,['load'],['load-mode']
Performance,"LLMGAG_27929269397/taxonomy/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	1; Search steps 	3; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false; LCA Ranks 	phylum:superphylum:subkingdom:kingdom:superkingdom; Blacklisted Taxa 	12908,28384; LCA Mode 	2; Remove Temporary Files 	false; Sets the MPI runner. Program call:; search /tmp/global2/n",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032:1409,perform,performs,1409,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032,1,['perform'],['performs']
Performance,"Linclust is just not super well optimized to exploit MPI very well since it clusters up to the max of 2^32 sequences in a day or so on our servers. A lot of time is probably also spent on IO operations, which are necessary for MPI to workand are not needed in the non-MPI version. I would recommend only to try out the MPI version when you get to datasets of a few hundred million to billions of sequences. Or in case you run `easy-cluster` as martin said, `easy-cluster` runs Linclust as a preclustering step and then runs the way more compute intensive `prefilter` and `align` algorithms. These can profit a lot from MPI.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/331#issuecomment-665657349:32,optimiz,optimized,32,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/331#issuecomment-665657349,1,['optimiz'],['optimized']
Performance,Load index to /dev/shm instead of page cache?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/629:0,Load,Load,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/629,2,"['Load', 'cache']","['Load', 'cache']"
Performance,MMseqs2 is optimized to process multiple queries at once. So it would make sense to package your search into a big fasta file. If you'd like to perform fast single queries against large databases then our [MMseqs2-App](https://github.com/soedinglab/MMseqs2-App) (server) might be a good solution. This keeps the index of the target database in memory.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/523#issuecomment-1027633776:11,optimiz,optimized,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/523#issuecomment-1027633776,2,"['optimiz', 'perform']","['optimized', 'perform']"
Performance,"Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locke",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:9936,load,load-mode,9936,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['load'],['load-mode']
Performance,Multi-threading not working when installing from brew on OSX Catalina,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/289:0,Multi-thread,Multi-threading,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/289,1,['Multi-thread'],['Multi-threading']
Performance,"Not personally. But we have used the server on two completely differently spec-ed servers and the performance is okay both time:. * 1x AMD Epyc 7713P / 2TB RAM / Debian 11 / AVX2 build (occasional fallback server); * 8x Intel Xeon E7-8891 v2 / 4TB RAM / CentOS / SSE41 build (main server). As you can see the two systems are very different. However, we never tried to run on top of any virtualization. That seems to be the only really different variable. (The RAM on both systems is overkill, but these are the servers we have). Could you try to run a SSE41 build and not an AVX2 build? I wonder if the virtualization is intercepting some AVX2 instruction and making everything slow. You can compile MMseqs2 with:; ```; cmake -DHAVE_SSE4_1=1 .......; make ......; ````",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1510719536:98,perform,performance,98,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1510719536,1,['perform'],['performance']
Performance,"Okay I am not sure how to reproduce the issue. It doesn't crash here. ; Does it crash consistently? . Can you please repeat only the linclust call with the same tmp files:; ```; mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707:824,load,load-mode,824,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707,1,['load'],['load-mode']
Performance,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:117,Perform,Performing,117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050,14,['Perform'],['Performing']
Performance,"Okay, I did some looking and found that our cluster is capable of also running openmpi instead of mvapich2. Unsurpisingly, after loading this and recompiling the program, it works as you said. Thank you!. Fyi if you all are looking to debug for the mvapich2 system, this is the error that comes after running those commands on this system (happy to test any issues/fixes here if it's useful to you):; ```; (gdb) bt; #0 0x00007ffff7186abc in MPID_Abort () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #1 0x00007ffff71419db in MPIR_Handle_fatal_error () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #2 0x00007ffff7141b59 in MPIR_Err_return_comm () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #3 0x00007ffff70fa699 in PMPI_Init () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #4 0x0000000000479714 in MMseqsMPI::init(int, char const**) (); #5 0x00000000005d44a1 in kmermatcher(int, char const**, Command const&) (); #6 0x000000000046f2f9 in runCommand(Command*, int, char const**) (); #7 0x000000000045af9b in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461685569:129,load,loading,129,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461685569,1,['load'],['loading']
Performance,"PO07_megahitDB $taxDB KLEB_PO07_megahit_result tmp; ```. ## MMseqs Output (for bugs); [Full output can be found in this gist.](https://gist.github.com/sean-workman/531e9d5fc73635dee8c000f9da137fe0). I also see this output in my error file:; `tmp/1193166584733320518/tmp_taxonomy/17149912652888480377/tmp_hsp1/10699950925961740214/blastp.sh: line 135: 8379 Bus error (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""`. ## Context; I created metagenomic assemblies using megahit and metaSPAdes. I am trying to get MMseqs2 working to do taxonomic classification. I am running on Digital Research Alliance of Canada clusters. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15-6f452; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Loaded as a module on a cluster.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: Unsure. I ran `lscpu` on a login node and got what is shown below, but the memory and CPUs that I had for the job were specified in the slurm job script shown above. ```; lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) CPU E5-2667 v4 @ 3.20GHz; CPU family: 6; Model: 79; Thread(s) per core: 2; Core(s) per socket: 8; Socket(s): 2; Stepping: 1; CPU(s) scaling MHz: 100%; CPU max MHz: 3200.0000; CPU min MHz: 1200.0000; BogoMIPS: 6384.78; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx; pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 d; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838:2208,Load,Loaded,2208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838,1,['Load'],['Loaded']
Performance,Parameters optimized for aligning a relatively large illumina dataset against TrEmbl,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/380:11,optimiz,optimized,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/380,1,['optimiz'],['optimized']
Performance,"Please run only the `rescorediagonal` module in GDB or it won't be able to catch the crash:; ```; gdb --args mmseqs rescorediagonal /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0; --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649893743:705,load,load-mode,705,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649893743,1,['load'],['load-mode']
Performance,"Process prefiltering step 1 of 1. k-mer similarity threshold: 118; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2271004; Target db start 1 to 13003941; [=================================================================] 2.27M 43m 26s 530ms. 3262.541404 k-mers per position; 476704 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 18145 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 779ms; Time for processing: 0h 46m 49s 482ms; align tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_2 tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 2271004 type: Aminoacid; Target database size: 13003941 type: Aminoacid; Calculation of alignments; [=================================================================] 2.27M 3s 348ms; Time for merging to aln_2: 0h 0m 0s 785ms. 2252859 alignments calculated.; 16146 sequence pairs passed the thresholds (0.007167 of overall calculated).; 0.007110 hits per query sequence.; Time for processing: 0h 0m 5s 939ms; mergedbs tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/aln tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_2 --compressed 0 -v 3 . Merging the results to tm",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:13704,load,load-mode,13704,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['load'],['load-mode']
Performance,"Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 29ms. 0.916862 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 849ms; align tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/pref_step0 tmp//7897776346521331899/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 124 type: Aminoacid; Target database size: 124 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 23ms; Time for merging to aln_step0: 0h 0m 0s 1ms; 124 alignments calculated; 124 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 72ms; clust tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/aln_step0 tmp//7897776346521331899/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:13533,load,load-mode,13533,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['load'],['load-mode']
Performance,"Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time for processing: 4h 41m 10s 259ms; rescorediagonal /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3; ```; ^^^^^^; There is no more printed info after the last line in the above output, and it got stuck for more than 12h. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): `cab0e83840f5afa0632aada56e6bacaf46211c33`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:5549,load,load-mode,5549,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['load'],['load-mode']
Performance,"Question on ""bit score"" when performing search with --num-iterations 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:29,perform,performing,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['perform'],['performing']
Performance,"Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Force restart using the latest tmp 	false; Remove Temporary Files 	false; LCA Ranks 	kingdom:phylum:class:order:family:genus:species; Blacklisted Taxa 	12908,28384; LCA Mode 	3; Match sequences by their ID 	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; search clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/first tmp_part-14/8093924424180559474/tmp_hsp1 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3 --seed-sub-mat VTML80.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seqs 200 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --spaced-kmer-mode 1 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --mask-profile 1 --e-profile 0.001 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --omit-consensus 0 --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --chain-alignments 0 --search-type 0 --num-iterations 1 --start-sens 4 --se",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:4029,load,load-mode,4029,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,1,['load'],['load-mode']
Performance,SIMDe ARM64 performance seems to be problematic. There is still some minor difference in the PROFILE regression test (AUC: 0.36739**6** vs 0.36739**8**). However the runtime is over 2x slower (14min vs 31min). I think we might want to keep sse2neon at least in the short term until SIMDe can catch. I guess PPCLE will be similar (the work for that was still incomplete though). HEAD: https://travis-ci.org/github/soedinglab/MMseqs2/jobs/687741954; PR: https://travis-ci.org/github/soedinglab/MMseqs2/jobs/688351766,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630190990:12,perform,performance,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630190990,1,['perform'],['performance']
Performance,"Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	mpirun -pernode -np 8; Force restart with latest tmp 	false; Remove temporary files 	false. MPI Init; Rank: 0 Size: 8; prefilter human_prot.db /lustre/projects/carlson-group/mmseqs2-project/DBs/UniRef50 ./tmp/4797566427929930176/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 384 --compressed 0 -v 3 -s 5.7 . Query database size: 20588 type: Aminoacid; Target split mode. Searching through 83 splits; Estimated memory consumption: 24G; Target database size: 53625855 type: Aminoacid; Process prefiltering step 1 of 83. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 207.92K 15s 921ms; Index table: Masked residues: 7445853; Index table: fill; [=================================================================] 207.92K 14s 301ms; Index statistics; Entries: 169574023; DB size: 10735 MB; Avg k-mer size: 0.132480; Top 10 k-mers; YTGTGKG	1052; LAMHETP	888; AYITSTG	696; FLNSHRT	695; GRFVVEV	501; RGAVAVR	415; IEAAGGR	407; RAEGRAV	401; LLGPGKT	371; TSSGRGV	307; Time for index table init: 0h 0m 38s 705ms; k-mer similarity threshold: 122; Starting",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:4328,load,load-mode,4328,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['load'],['load-mode']
Performance,"Shared libraries are usually loaded in many popular scripting languages (i.e. Julia, Python, R); https://docs.julialang.org/en/release-0.6/manual/calling-c-and-fortran-code/; https://docs.python.org/3/library/ctypes.html; https://www.rdocumentation.org/packages/base/versions/3.4.3/topics/dyn.load. I could call externally command line tool, but library could more elegant.; Basically I would like to obtain BLAST-like bit-scores in all-vs-all comparisons between multiple fasta files with protein sequences.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/81#issuecomment-381913569:29,load,loaded,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/81#issuecomment-381913569,2,['load'],"['load', 'loaded']"
Performance,"Since cluster module needs too much memory. (I have 2 million nucleotide seqs, about 30G, and 1T memory, and segment fault occurred). I try to use LINCLUST instead. But I also want a better performance of clustering. I try to increase the --kmer-per-seq, the number of clusters decreased until about --kmer-per-seq 2000 (My shortest sequences are 2000bp). I think this may indicate that the clustering performance has improved. I compared results in a 3G test dataset, between ""Linclust --kmer-per-seq 2000"" and ""Cluster""， the number of cluster produced by former is relatively closed to the latter. . But I still wonder if it make sense to set --kmer-per-seq 2000, since the default is only 20.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/831:190,perform,performance,190,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/831,2,['perform'],['performance']
Performance,So what's going on is that you created an index with `createindex` that was not aware of how large it may become. So it was created to use as much memory as possible. You would have to call `createindex` also with `--split-memory-limit`. This split indices work but have unexpected performance pitfalls: You need to have the index on a fast IO system so you can import each split into memory fast enough. Since the index is larger than the input sequences it can be faster to just recompute the index on the fly instead of reading in an existing one.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-664995019:282,perform,performance,282,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-664995019,1,['perform'],['performance']
Performance,"Some issues / unexpected behavior when running mmseqs search and other features used in colabfold. But the low speed happens in the mmseqs step, so I think this is the place to ask. Unexpected observations:. 1. running mmseqs locally on our cluster is much slower than the responses we get from the colabfold server for equivalent inputs; 2. mmseqs search speed does not scale at all with added threads or added physical cores, for small inputs (1-2 sequences) - is this expected? Will it only speed up with large input count?. Welcoming any input! Many thanks!. ## Expected Behavior; Runtime of mmseqs2 for a given input similar to response time from the colabfold server. ## Current Behavior; Considerably slower. For a given input (~250 aa) the server gives a full result in 20-30s, paired + unpaired reads (so, including at least 1 search each against uniref30 and colabfold_envdb, plus a number of expandaln / align calls).; The local version takes 60-90 seconds to run just the initial mmseqs search against uniref30, when using vmtouch and db load mode 2, and ~300 seconds against colabfold_envdb. Db load mode 3 somewhat slower, db load mode 0 and 1 much slower as expected.; Index was created without splits. The mmseqs search step is timed after vmtouch and other preparations are complete. The runtime is independent of either thread count or number of cpus provided.; Splitting the target db index 2 4 8 or 16-fold and running in parallel with MPI does not speed it up either (slightly slows down). Placing the entire run directory fast SSD or RAM (/dev/shm) does not change the speed.; This happens with the docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLT",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:633,response time,response time,633,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,1,['response time'],['response time']
Performance,"Sorry I didn't update the documentation. The `_taxonomy` file is something new, it contains all the `.dmp` files in a binary format that is instantly loadable (no more 5-7s delay every time the taxonomy database is used).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771793382:150,load,loadable,150,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771793382,1,['load'],['loadable']
Performance,"Sorry I was traveling. I don't see anything out of the ordinary in your screenshot. ; I still don't really have an idea whats going on. I repeated the UniRef search with your query on the MSA server:; ```; Command being timed: ""mmseqs search mmseq_in_db uniref30_2202_db mmseq_in_res mmseq_in_tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000""; User time (seconds): 13.10; System time (seconds): 21.13; Percent of CPU this job got: 99%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:34.23; Average shared text size (kbytes): 0; Average unshared data size (kbytes): 0; Average stack size (kbytes): 0; Average total size (kbytes): 0; Maximum resident set size (kbytes): 19188072; Average resident set size (kbytes): 0; Major (requiring I/O) page faults: 0; Minor (reclaiming a frame) page faults: 9091215; Voluntary context switches: 57; Involuntary context switches: 503; Swaps: 0; File system inputs: 0; File system outputs: 8888; Socket messages sent: 0; Socket messages received: 0; Signals delivered: 0; Page size (bytes): 4096; Exit status: 0; ```. One thing we do differently since we still have enough spare CPU capacity on the server is enable some limited multithreading and parallel processing. We use `--threads 2`, which will hide quite a bit of overhead in your use-case:; ```; User time (seconds): 12.32; System time (seconds): 20.86; Percent of CPU this job got: 132%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.12; ```. And we also start the env-db and template search in parallel to the expand-align steps. ; (`path.colabfold.parallelstages` parameter in the API server). This will hide quite a bit of latency. However, the initial search is still a lot faster for us despite worse CPU/RAM specs. . Can you check if `vmtouch` has actually but everything into RAM? `htop` should look something like this:; ```; root 20 0 605G 605G 605G S 0.0 15.0 6:22.98 /home/steineggerlab/miniforge3/bin/vmtouch -f -t -l -m 4000 colabfold_envdb_202108.idx pd",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953:333,load,load-mode,333,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953,1,['load'],['load-mode']
Performance,"Sorry for hijacking the issue again. kClust, the predecessor of MMseqs2, has a utility called kClust_mkAln (https://github.com/soedinglab/kClust). kClust_mkAln calls either clustalo or kalign to perform multiple sequence alignment (i.e. all-against-all, not all-against-representative) within each cluster. Is it possible to do similar thing in MMseqs2?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/60#issuecomment-376538177:195,perform,perform,195,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/60#issuecomment-376538177,1,['perform'],['perform']
Performance,"Sorry for the delay to answer. Thank you for giving some help to avoir the problem. I give you the output with `-DCMAKE_BUILD_TYPE=RelWithDebInfo`; ```; #0 DBReader<unsigned int>::sortIndex (this=this@entry=0x7ffe5bd0a970, isSortedById=isSortedById@entry=false) at /path/to/MMseqs2/src/commons/DBReader.cpp:249; #1 0x00000000004fbc6b in DBReader<unsigned int>::open (this=this@entry=0x7ffe5bd0a970, accessType=accessType@entry=0) at /path/to/MMseqs2/src/commons/MemoryTracker.h:13; #2 0x00000000005c1c81 in indexdb (argc=<optimized out>, argv=<optimized out>, command=...) at /path/to//MMseqs2/src/util/indexdb.cpp:64; #3 0x0000000000471e20 in runCommand (p=0x2394310, argc=argc@entry=36, argv=argv@entry=0x7ffe5bd0af48) at /path/to/MMseqs2/src/commons/Application.cpp:40; #4 0x0000000000460455 in main (argc=38, argv=0x7ffe5bd0af38) at /path/to/MMseqs2/src/commons/Application.cpp:203; ```; As you said it is a issue with the max size, the size is greater than 4294967295 (unsigned int), so it becomes an infinite loop. Do you have see a solution in a long term goal about this problem?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-968758784:522,optimiz,optimized,522,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-968758784,2,['optimiz'],['optimized']
Performance,Speed up mmseqs for large database and multiple large query sets by loading target into memory,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214:68,load,loading,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214,1,['load'],['loading']
Performance,"Suffix2}""), base.joinpath(""res_exp""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + expand_param); run_mmseqs(mmseqs, [""align"", base.joinpath(""prof_res""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""), base.joinpath(""res_exp""), base.joinpath(""res_exp_realign""), ""--db-load-mode"", str(db_load_mode), ""-e"", str(align_eval), ""--max-accept"", str(max_accept), ""--threads"", str(threads), ""--alt-ali"", ""10"", ""-a""]); run_mmseqs(mmseqs, [""filterresult"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign""), base.joinpath(""res_exp_realign_filter""), ""--db-load-mode"",; str(db_load_mode), ""--qid"", ""0"", ""--qsc"", str(qsc), ""--diff"", ""0"", ""--threads"",; str(threads), ""--max-seq-id"", ""1.0"", ""--filter-min-enable"", ""100""]); run_mmseqs(mmseqs, [""result2msa"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign_filter""), base.joinpath(""uniref.a3m""), ""--msa-format-mode"",; ""6"", ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + filter_param); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign_filter"")]); ; if use_templates:; run_mmseqs(mmseqs, [""search"", base.joinpath(""prof_res""), dbbase.joinpath(template_db), base.joinpath(""res_pdb""),; base.joinpath(""tmp2""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads), ""-s"", ""7.5"", ""-a"", ""-e"", ""0.1"", ""--prefilter-mode"", str(prefilter_mode)]); run_mmseqs(mmseqs, [""convertalis"", base.joinpath(""prof_res""), dbbase.joinpath(f""{template_db}{dbSuffix3}""), base.joinpath(""res_pdb""),; base.joinpath(f""{template_db}""), ""--format-output"",; ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar"",; ""--db-output"", ""1"",; ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)]); run_mmseqs(mmse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:4784,load,load-mode,4784,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['load'],['load-mode']
Performance,"Sure, these are the commands used for performing protein to protein search with a modified substitution matrix (changed the score for X). `mmseqs createdb TestDB_Subject.fa testRun/targetDB; `; `mmseqs createdb TestQuery.fa testRun/queryDB; `; `mmseqs createindex --mask 0 testRun/targetDB testRun/tmp --comp-bias-corr 0 --seed-sub-mat PAM10_modified.out`. `mmseqs search testRun/queryDB testRun/targetDB testRun/resultDB testRun/tmp --comp-bias-corr 0 --mask 0 --sub-mat PAM10_modified.out -a`. `mmseqs convertalis testRun/queryDB testRun/targetDB testRun/resultDB testRun/resultDB.m8 --sub-mat PAM10_modified.out`. The result matrix <img width=""1137"" alt=""ResultTable"" src=""https://user-images.githubusercontent.com/3918230/59648222-e42df700-91b0-11e9-92f1-3aaf27cc2e58.png"">. [TestDB_Subject.txt](https://github.com/soedinglab/MMseqs2/files/3299493/TestDB_Subject.txt); [TestQuery.txt](https://github.com/soedinglab/MMseqs2/files/3299494/TestQuery.txt); [PAM10_modified.txt](https://github.com/soedinglab/MMseqs2/files/3299495/PAM10_modified.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-502917178:38,perform,performing,38,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-502917178,1,['perform'],['performing']
Performance,"Thank you - --max-seqs really works. For now I wanted to make the alignments to include more sequences,; especially near threshold, than they did. Increasing the number of; sequences made the change. Now I can play with inclusion thresholds. niedz., 1 kwi 2018 o 15:57 użytkownik Martin Steinegger <; notifications@github.com> napisał:. > The parameter --max-seqs was always available but there was a stopped; > mmseqs from printing out the parameter. The printout problem should be; > resolved now.; >; > How do you benchmark the performance?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-377788647>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/APQmI4PjSUD8eJYrs1QQNM6xcDq8Rm8Bks5tkNzAgaJpZM4TCzs3>; > .; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-378337962:531,perform,performance,531,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-378337962,1,['perform'],['performance']
Performance,"Thank you for sharing your example. However I can also not reproduce the error. In your example there is only one alignment to a sequence, which `lca` classifies as `30551	species	Staphylococcus pseudintermedius`. I am running out of ideas how to help. ```; lca gtdb_54kDB top1 /Users/mad/Downloads/top_results/lca. MMseqs Version: 	0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Compressed 	0; LCA ranks; Blacklisted taxa 	12908,28384; Show taxon lineage	false; Threads 	12; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 36283 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Computing LCA; [=================================================================] 100.00% 100 0s 2ms. Taxonomy for 0 entries not found out of 1; Time for merging to lca: 0h 0m 0s 1ms; Time for processing: 0h 0m 17s 334ms; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571332537:485,Load,Loading,485,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571332537,4,['Load'],['Loading']
Performance,"Thank you for the answer!. I tried this command (so because I already have this prepared DB). ```; mmseqs nrtotaxmapping /media/tertiary/database_nr/prot.accession2taxid nr_20210908_mmseqDB tax.tsv --threads 6 ; nrtotaxmapping /media/tertiary/database_nr/prot.accession2taxid nr_20210908_mmseqDB tax.tsv --threads 6; ```. But I catched the error . ```; MMseqs Version: 13.45111; Threads 6; Verbosity 3. Loading NCBI taxonomy1ms; names.dmp, nodes.dmp, merged.dmp from NCBI taxdump could not be found!; ```. And now I am trying this one :D . `mmseqs databases NR NR_tax_mmseqs tmp`. For now last databases module works, hope, everything will be alright!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-923020460:403,Load,Loading,403,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-923020460,1,['Load'],['Loading']
Performance,"Thank you for the fast response and suggestion for a temporary fix. Although, the `--retry*` flags for both curl and wget don't appear to apply for SSL-related connection errors, so neither will retry in this situation. I think it's necessary to perform the retries at the outer-scope—i.e., try the download and check for the file locally.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706#issuecomment-1557764725:246,perform,perform,246,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706#issuecomment-1557764725,1,['perform'],['perform']
Performance,"Thank you for the help, I missed the part about the index being fully loaded in the memory (instead I read in the article that a db used multiple times should be indexed, which sounds broader than the niche use case you describe). . As #519 mentions, what is the difference between `concat` and `merge` ? I guess a sequence present in both `DB` will be search only once and reported with both `qset` with `merge` and twice in `concat` ? That would a huge advantage for my work as I have replicates. Also, is there a way to determine how big the index will be ? I suppose it depends on the `max-seq-len` parameter ?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734289077:70,load,loaded,70,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734289077,1,['load'],['loaded']
Performance,"Thank you for the log. . If you use `--start-sens 1 --sens-steps 3 -s 6` then MMseqs2 performs three searches with the sensitivity `-s 1`, `-s 3.5` and `-s 6` while in each step previously successful aligned sequences are left out. From your log I can see that the most sensitive search `-s 6` took `46m 49s 482ms` while not resulting in a much deeper annotation. Only 16146 extra ORFs sequences got annotated while the searches with `-s 1` and `-s 3.5` annotated already 277629. Searching with `-s 6` is also more sensitive compare to DIAMOND (see https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter). The respective sensitivity should be DIAMONDS `--more-sensitive`. . My recommendation would be to search the following way:. time mmseqs easy-search MOMZ_moomz1_200m.fna /d/Databases/Kegg/sram/mmseqs/ke; gg mmseqs_results2.m8 tmp -s 3.5 --max-accept 1 --max-rejected 5 . This should roughly take 6-7 minutes.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535275835:86,perform,performs,86,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535275835,1,['perform'],['performs']
Performance,Thank you for the workflow. I'll try that. For now as I explore the software a little bit (I'm amazed with its speed and scalability) I cluster smaller database. A part of my workflow is generating profiles for pdb_05_rep database based on nr70_rep database:; ```; mmseqs search pdb_05_rep nr70_rep pdb_05_res tmp --num-iterations 3 ; mmseqs result2profile pdb_05_rep nr70_rep pdb_05_res pdb_05_profile; ```; The second command however blasts my bash with these warnings:. > Warning in /opt/install/MMseq2/src/alignment/MsaFilter.cpp:244: filter:; > Filtering removed all sequences in alignment. Inserting back first sequence. Is that OK? Or something went wrong with the procedure?. And further I run:; ```; mmseqs search pdb_05_profile pdb_05_rep pdb_05_pp_res tmp --threads 110 -e 0.05; mmseqs clust pdb_05_profile pdb_05_pp_res pdb_05_pp_clu --threads 110 --cluster-mode 1 --similarity-type 1; ```; and the second procedure outputs many warnings like:. > ERROR: Sequence !; > ERROR: Sequence 19899 does not contain any sequence for key 933920594 does not contain any sequence for key 21608!; > ERROR: Sequence 20595 does not contain any sequence for key 21655!; > ERROR: Sequence 20596 does not contain any sequence for key 21670!; > ERROR: Sequence 2059723896 does not contain any sequence for key !; > ERROR: Sequence 23698 does not contain any sequence for key 7521!; > ERROR: Sequence 23699 does not contain any sequence for key 7526!; > does not contain any sequence for key 21683!. to give only few.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-368807680:121,scalab,scalability,121,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-368807680,1,['scalab'],['scalability']
Performance,"Thank you for your reply; my target sequences are some CDS sequences download from NCBI, and query sequences are some sequences fragment of 300bp; here are some partial sequences of the target and query file.; [https://gist.github.com/hwy7/cd5486d2a61c3b6bfe990a3ada669318](url); Please let me know if you need any more information or if there are specific analyses you would like to perform with this data.; Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747#issuecomment-1706780853:384,perform,perform,384,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747#issuecomment-1706780853,1,['perform'],['perform']
Performance,"Thanks @martin-steinegger for the clarification!. Regarding issue 1, would a solution be to not perform cascaded clustering using `--single-step-clustering`? I'm actually looking to perform hierarchical neighbour-joining clustering of the sequences using steps of decreasing similarity thresholds, so perhaps cascaded clustering is not necessary. Also, does this mean that the result from `mmseqs createtsv` in my current setup is incorrect for nucleotide sequences?. Regarding issue 2, what would be a (hack) solution to get the alignments? Creating a database from the cluster representatives and mapping the cluster members to that database manually using `mmseqs align`?. I followed the example you give in the [FAQ](https://github.com/soedinglab/mmseqs2/wiki#how-to-add-sequence-identities-and-other-alignment-information-to-a-clustering-result), so please indicate that this does not lead to good results in case of nucleotide sequences.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580648087:96,perform,perform,96,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580648087,2,['perform'],['perform']
Performance,"Thanks @milot-mirdita! After reinstalling the updated version from git, that error is gone. But I got a new one says:. ```; majoritylca /scratch/ref/hecatomb_databases/virus_uniprot/targetDB ./results/contigs/mmseqs_aa_out/taxonomyResult ./results/contigs/mmseqs_aa_out/lcaDB --tax-lineage 1 --lca-ranks superkingdom,phylum,class,order,family,genus,species . MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Majority threshold 0.5; Vote mode 1; LCA ranks superkingdom,phylum,class,order,family,genus,species; Taxon blacklist 12908,28384; Column with taxonomic lineage 1; Compressed 0; Threads 24; Verbosity 3. Loading NCBI taxonomy; Loading nodes file ... Done, got 2227973 nodes; Loading merged file ... Done, added 56613 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Computing LCA; [====taxonid: 1046081 does not match a legal taxonomy node.; ================================taxonid: 1046081 does not match a legal taxonomy node.; ===============taxonid: 1046081 does not match a legal taxonomy node.; =============. ```. So..do you have any suggestion on this one?. Thank you!!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504:619,Load,Loading,619,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504,4,['Load'],['Loading']
Performance,"Thanks Milot, the --split 1 workaround has worked, specifiying it at index creation time and search time, although it complains about not having enough memory, it finishes:. ```; Initialising data structures...; Using 64 threads. Use index /junk/databases/mmseqs/nr.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Query database: mmseq-testDB(size=2467); Target database: /junk/databases/mmseqs/nr(size=121935717); Use kmer size 7 and split 1 using split mode 0; Needed memory (699399167230 byte) of total memory (541058265088 byte); WARNING: MMseqs processes needs more main memory than available.Increase the size o f --split or set it to 0 to automatic optimize target database split.; WARNING: Split has to be computed by createindex if precomputed index is used.; Substitution matrices...; Time for init: 0 h 0 m 23s; ```; The index file size is around 300GB, so it's asking more than double.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301116501:709,optimiz,optimize,709,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301116501,1,['optimiz'],['optimize']
Performance,"Thanks a lot for the help, @milot-mirdita . Build PROFILEDB and search with this was successful.; final steps:; > mmseqs search PROFILEDB /databases/fadb/freeze/all.mmseqs pbp.found_with_profile tmp --threads 10 -a -c 0.8 --cov-mode 2 --add-self-matches ; > mmseqs convertalis PROFILEDB /databases/fadb/freeze/all.mmseqs pbp.found_with_profile pbp.found_with_profile.tsv . At this point, everything okay. ; The step below also was performed nicely without errors. ; > mmseqs extractalignedregion PROFILEDB /databases/fadb/freeze/all.mmseqs pbp.found_with_profile pbp.found_with_profile.ALIGNEDREGION . The crash happens here:; > mmseqs convert2fasta pbp.found_with_profile.ALIGNEDREGIONS pbp.found_with_profile.ALIGNEDREGIONS.fa . With this message:; ```; Program call:; convert2fasta pbp.found_with_profile.ALIGNEDREGIONS pbp.found_with_profile.ALIGNEDREGIONS.fa . MMseqs Version: 	7-4e23d; Use ffindex header	false; Verbosity 	3. Could not open data file pbp.found_with_profile.ALIGNEDREGIONS!; ```. But I realised maybe I did everything wrong. . What I want, actually, is the MSA for each cluster with only aligned regions. ; Also, I want the MSA of aligned regions from a search result. The deal is: I have 501 queries single domain, I would to use this against a 17M sequences DB, since the matches probably have at least 1 region contains the same domain as the query, I would like the MSA or even a sequence DB itself contain **only the regions of the match**. ; Extracting only the region of the matches allow me to infer more accurate alignments and phylogeny. Also allow me build specifics models. . Could you provide me a simple workflow to this task?. Thanks in advance.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/153#issuecomment-458988413:431,perform,performed,431,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/153#issuecomment-458988413,2,['perform'],['performed']
Performance,"Thanks a lot for the help, Milot!; Here is the gdb outputs:. $ gdb --args mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...(no debugging symbols found)...done.; (gdb) r; Starting program: /ebio/abt6_projects8/1001g_plus/code/Programs/miniconda3/envs/MMseqs2/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-exte",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:598,load,load-mode,598,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840,1,['load'],['load-mode']
Performance,"Thanks a lot for the log!. The prefilter takes 15 minutes, while the alignment runs for 4.5 hours. I think your `--max-seqs` is way to high since in average only 4000 hits are accepted by the alignment. You could reduce `--max-seqs` to 100.000 without losing many, if any at all, hits. . Another tweak is using the property of the prefilter results, that they are already well sorted and distinguish well between homologs and non-homologs. It is possible to reduce the run time without losing many, if any, hits of the alignment by using the `--max-rejected` parameter. It stops aligning after `N` consecutive rejected alignments (alignments that do not fulfill the alignment criteria). You could try `--max-rejected 10.` . Another tweak would be to increase the `--min-ungapped-score`. I have never really optimized this parameter. It could lead to a huge gains in speed for the alignment by rejecting prefilter hits more strictly. Try `--min-ungapped-score 30`. You mentioned in an email that you also tested DIAMOND and it was less sensitive. Could you please give us your comparison results?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-408840948:807,optimiz,optimized,807,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-408840948,1,['optimiz'],['optimized']
Performance,"Thanks for the fast feedback!; Here are the requested info about our architecture. I'll try the two suggestions (no indexing, and indexing without the --split) as soon as our machine is free again (a big cd-hit is swapping like crazy)... ```; $ uname -a . Linux bioinfo 4.4.0-38-generic #57-Ubuntu SMP Tue Sep 6 15:42:33 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux. $ cat /proc/cpuinfo. processor : 23; vendor_id : GenuineIntel; cpu family : 6; model : 62; model name : Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz; stepping : 4; microcode : 0x416; cpu MHz : 1228.906; cache size : 15360 KB; physical id : 1; siblings : 12; core id : 5; cpu cores : 6; apicid : 43; initial apicid : 43; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms xsaveopt dtherm ida arat pln pts; bugs :; bogomips : 5189.25; clflush size : 64; cache_alignment : 64; address sizes : 46 bits physical, 48 bits virtual; power management:; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-250500053:562,cache,cache,562,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-250500053,2,['cache'],['cache']
Performance,"Thanks for the hint. I'll try that. I'm using redundancy reduced database - pdb_05 is PDB Seqres database clustered with e-value 0.05, and the profiles are generated for pdb_05 sequences on nr70 database, which is nr clustered to 70% sequence identity. As to computer - yes, I'm using 120 cores single machine (it has four Xeons E7-4890 v2). The software; scales up amazingly. Now I'm computing 6it profiles for 31M sequences and; that will be accomplished in few days (prefiltering scores calculation took 65 h 52 m 33s). I see that when calculating S-W alignments the soft crunches the data using all given threads but after finishing million of sequences (or leaning towards finishing that million) it runs gradually on less and lass cores (perhaps some cores were given more time consuming alignments so the program might estimate times and balance threads more efficiently, but this is very minor and would be noticed for users working on big databases only), which might be a speed bottleneck for big dataset such as nr database processed on big machines. In few days I'll start tests also with MPI run, so that mmseqs2 will be ran; on 1600 CPUs on cluster (here I wish the software had used GPUs as the cluster I'm using has additionally some Firepros to use - I write it smiling as MMseqs2 is light years ahead of cd-hit, which I was using to date). I'll give you a feedback on the speed soon then.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369633733:988,bottleneck,bottleneck,988,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369633733,2,['bottleneck'],['bottleneck']
Performance,"Thanks for the pointer. I did not look at biocontainers before, cool to see that MMseqs2 is on there. As far as I can tell, biocontainer are optimized for application shipping aka. they only include the absolute bare minimum required for that application. In fact the containers built by biocontainer seem to be based on busybox, which makes it hard to extend them. Since my goal right now is to build a container that includes MMseqs2 + additional tooling, biocontainers is not an ideal solution for me. The only way I could use it is if I manage to extract the compiled MMseqs files from the container and include that into another one. However that might be rather fragile and complex. . An easier solution could be to add a Dockerfile recipe to biocontainers which will then build the docker image and push it to dockerhub (at least that is how I interpret it). ; Another potentially easy solution would be to use [github's container registry](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry) to publish containers directly there.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/541#issuecomment-1052123411:141,optimiz,optimized,141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541#issuecomment-1052123411,1,['optimiz'],['optimized']
Performance,"Thanks for the quick and detailed feedback! Partial answer:; 1) awk, zlib, bzip2, and omp are included in the FreeBSD base, so no package dependency needed.; 2) Generally, FreeBSD ports respect the user's env regarding build options and of course the binary package has to be pessimistic about hardware. I'll check on the baseline assumptions and what clang -O2 emits, though. I was also thinking of adding a package message suggesting that it be built from source with more agressive optimizations to get better performance. That's trivial to do with FreeBSD ports. I wanted to sneak the commit in before the quarterly branch coming next week so it's at least available in the next quarterly package set, I haven't put much effort into perfecting it yet. With your feedback I should be able to make some good improvements by then.; 3) Do you actually plan to continue support for 32-bit platforms? It's disabled for many bioinformatics ports already.; I'll look into the rest of your comments ASAP.; BTW, this is the first time in my lengthy career I've ported a C++/cmake project to any platform and got a build with zero warnings on the first try. Somebody on your end is doing some good work. ;-)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680:485,optimiz,optimizations,485,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680,4,"['optimiz', 'perform']","['optimizations', 'performance']"
Performance,"Thanks for the quick response!. This is what I get with the gdb:. ```; gdb --args mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...done.; (gdb) r; Starting program: mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; convertalis /tmp//2989869989197200687/query /db",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:492,load,load-mode,492,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628,1,['load'],['load-mode']
Performance,"Thanks for the suggestion. I'll do that for future runs to avoid the huge logfiles. Re: my original problem, I want to mention that I am using a Perl script (which parallel::forkmanager) to fork separate jobs for each sample in my list and then run each sample separately. I tried running mmseqs search with ""--threads 10"" using this same script, but I noticed that the intermediate steps in the command (extractorfs, align etc) all just used one process per sample. I am still trying to figure out if it is because of the parallel script or something to do with mmseqs itself. If I run the same search command on the terminal with ""--threads 10"" it goes fast. ________________________________; From: Martin Steinegger <notifications@github.com>; Sent: Thursday, July 11, 2019 12:55:59 PM; To: soedinglab/MMseqs2; Cc: Dhwani Desai; Mention; Subject: Re: [soedinglab/MMseqs2] Speed up mmseqs for large database and multiple large query sets by loading target into memory (#214). @milot-mirdita<https://github.com/milot-mirdita> noticed that the interactive progress bar could be a problem, in your case it produced at 13GB output. You can turn of the interactive progress bar by setting the environment variable to TTY=0. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/214?email_source=notifications&email_token=ABYZBDOM5JCFUYB7FDWEK7TP65JY7A5CNFSM4H333Q62YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODZXE5VI#issuecomment-510545621>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABYZBDMTYNMFATMDFBRTPR3P65JY7ANCNFSM4H333Q6Q>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-539001405:943,load,loading,943,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-539001405,2,['load'],['loading']
Performance,"Thanks for your detailed reply!. > I am not super familiar with transcriptomics datasets. Depending on the length of your queries you might want to turn of the early ORF filter (--orf-filter 0) as it can sometimes reject too many ORFs if the sequences are short. I'll try the `--orf-filter 0` option as you suggested. Yes, of course in the case of a transcriptome the ORFs are often short if the assembler is not able to resolve all the isoforms properly. > Generally our nucl-nucl searching capabilities are less developed than than anything-prot. In the taxonomy assignment, nucl-nucl still uses top-hit taxon assignment instead of LCA. We haven't gotten around to thoroughly benchmark the nucl-nucl homology search and publish it (it does work quite well in the preliminary tests). I run a nucl-nucl taxonomy assignment (against NT) and it performed well I think. I did not systematically check, but I did some cross-checks with blastn and it reported the exact same hits. Assuming blast to be the ""gold-standard"" I was quite impressed by the performance of your tool, because it was so much faster. > Also building a taxonomy database for the NT is painful and the database might get extremely large (haven't tried it in a while though). I just did that and it worked. According to your instructions in the Wiki. I'll let you know in case I have something interesting to report.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824596494:843,perform,performed,843,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824596494,2,['perform'],"['performance', 'performed']"
Performance,"Thanks for your prompt replies!. mmseqs search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq.outDB $SCRATCHDIR > $SCRATCHDIR/test.log. File $SCRATCHDIR/queryT.mmsq has 10000 lines, which I guess should confirm it has 10000 sequences. . prefilter /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 4.0 . Query database size: 313 type: Aminoacid; Estimated memory consumption: 979M; Target database size: 313 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:844,load,load-mode,844,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497,1,['load'],['load-mode']
Performance,"Thanks for your reply.; I was using the PSSM format to better understand the content of the `profile` file and how it was related to the `_seq` and `_consensus` files. I couldn't see any similarity between the first entry in the PSSM file and either of the first entries in the `_seq` or `_consensus` files, hence my confusion. Perhaps an option to have some reference to the original sequence alignment would be useful for clarity. You mentioned that everything is now stored inside the binary profile. I am working with a particularly large profile (9.1 GB). Do you have any recommendations for optimizing the `mmseqs search` function with this profile as a target?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/156#issuecomment-458971789:597,optimiz,optimizing,597,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/156#issuecomment-458971789,1,['optimiz'],['optimizing']
Performance,"Thanks you! The change makes sense, however, we have actually modified this part. We check here if a sequence is broken across multiple lines or if its a single line sequence. This enables some different optimizations later in MMseqs2.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/756#issuecomment-1731163883:204,optimiz,optimizations,204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/756#issuecomment-1731163883,1,['optimiz'],['optimizations']
Performance,"Thanks! This is the output:. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 8; On-line CPU(s) list: 0-7; Thread(s) per core: 1; Core(s) per socket: 4; Socket(s): 2; NUMA node(s): 2; Vendor ID: AuthenticAMD; CPU family: 16; Model: 4; Model name: Quad-Core AMD Opteron(tm) Processor 2380; Stepping: 2; CPU MHz: 800.000; BogoMIPS: 4987.57; Virtualization: AMD-V; L1d cache: 64K; L1i cache: 64K; L2 cache: 512K; L3 cache: 6144K; NUMA node0 CPU(s): 0-3; NUMA node1 CPU(s): 4-7. Serghei",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/90#issuecomment-392934656:406,cache,cache,406,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/90#issuecomment-392934656,4,['cache'],['cache']
Performance,That's most likely a different issue. We have a problem if we estimate RAM usage wrong. When that happens performance usually tanks pretty hard. Martin did some improvements recently to lessen this problem but apparently its still a problem. . What are the system specs where you are running this clustering on?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324#issuecomment-650853144:106,perform,performance,106,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324#issuecomment-650853144,1,['perform'],['performance']
Performance,"Thats one possibility, however the issue is quite a bit more complicated to solve generally. First, `getTotalSystemMemory` is not used everywhere, only a few modules have a splitting logic. There is also the issue that we read input databases completely into memory if they will have random accesses. That is also currently not tracked through `getTotalSystemMemory`. You can disable that for a few tools with `--no-preload`, but then you pay a large IO cost. Then there is the issue that letting MMseqs2 share the memory bus among unrelated processes is probably also not the best idea. The prefilter benefits a lot from high-bandwidth, low latency access to its index structure.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359795463:642,latency,latency,642,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359795463,1,['latency'],['latency']
Performance,The `--orf-filter 0` parameter disabled an important speed optimization. With the parameter enabled it should run quite a bit faster.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/577#issuecomment-1184027710:59,optimiz,optimization,59,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/577#issuecomment-1184027710,1,['optimiz'],['optimization']
Performance,"The `convertalis` command exits with an error when no match is found in the DB. Maybe this could be caught by the web server and an informative message could be displayed in the results page (instead of the standard `Error!`).; ```; mmseqs-web-worker_1 | easy-search /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/job.fasta /opt/mmseqs-web/databases/test_nt /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/alis_test_nt /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp --dont-shuffle --db-output --db-load-mode 2 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --search-type 3 --strand 2 --greedy-best-hits; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | MMseqs Version: 	d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | Substitution matrix 	blosum62.out; mmseqs-web-worker_1 | Add backtrace 	false; mmseqs-web-worker_1 | Alignment mode 	3; mmseqs-web-worker_1 | E-value threshold 	0.001; mmseqs-web-worker_1 | Seq. id. threshold 	0; mmseqs-web-worker_1 | Min. alignment length 	0; mmseqs-web-worker_1 | Seq. id. mode 	0; mmseqs-web-worker_1 | Alternative alignments 	0; mmseqs-web-worker_1 | Coverage threshold 	0; mmseqs-web-worker_1 | Coverage mode 	0; mmseqs-web-worker_1 | Max sequence length 	65535; mmseqs-web-worker_1 | Compositional bias 	1; mmseqs-web-worker_1 | Realign hits 	false; mmseqs-web-worker_1 | Max reject 	2147483647; mmseqs-web-worker_1 | Max accept 	2147483647; mmseqs-web-worker_1 | Include identical seq. id. 	false; mmseqs-web-worker_1 | Preload mode 	2; mmseqs-web-worker_1 | Pseudo count a 	1; mmseqs-web-worker_1 | Pseudo count b 	1.5; mmseqs-web-worker_1 | Score bias 	0; mmseqs-web-worker_1 | Gap open cost 	11; mmseqs-web-worker_1 | Gap extension cost 	1; mmseqs-web-worker_1 | Threads 	24; mmseqs-web-worker_1 | Compressed 	0; mmseqs-web-worker_1 | Verbosity 	3; mmseqs-web-worker_1 | Seed substitution matrix 	VTML80.out; mmseqs-web-worker_1 | Se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:540,load,load-mode,540,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['load'],['load-mode']
Performance,"The `expandaln` command fails to properly read index, producing an '`Invalid database read for database data`' error. ## Expected Behavior. Command to run without error messages. ## Current Behavior. Command fails instantly with following error message:. ```; Invalid database read for database data file=db/human.idx, database index=db/human.idx.index; getData: local id (4294967295) >= db size (22); ```. ## Steps to Reproduce (for bugs); ```bash; mkdir db; mkdir job; mmseqs createdb uniprotkb_human.fasta db/human; mmseqs createindex db/human db/tmp --remove-tmp-files 1 --check-compatible 1; mmseqs createdb query.fasta job/qdb. mmseqs search job/qdb db/human job/res job/tmp1 --num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000. mmseqs mvdb job/tmp1/latest/profile_1 job/prof_res; mmseqs lndb job/qdb_h job/prof_res_h. # Command which fails:; mmseqs expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95; ```. ## MMseqs Output (for bugs); createdb:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [79690] 0s 233ms; Time for merging to human_h: 0h 0m 0s 24ms; Time for merging to human: 0h 0m 0s 53ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 472ms; ```. createindex:; ```; MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; k-mer length 0; Alphabet size aa:21,nucl:5; Compositional bias 1; Compositional bias 1; Max sequence length 65535; Max results per query 300; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Spaced k-mers 1; Spaced k-mer pattern ; Sensitivity 7.5; k-score seq:0,prof:0; Check compatible 1; Search type 0; Split database 0; Split memory limit 0; Verbosi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616:706,load,load-mode,706,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616,2,['load'],['load-mode']
Performance,The answer is differs based on the way how you performed the clustering. Could you please provide the commands?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/247#issuecomment-559392245:47,perform,performed,47,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/247#issuecomment-559392245,1,['perform'],['performed']
Performance,"The colabdb_search.sh script calls `mmseqs result2msa --msa-format-mode 6` (`""${MMSEQS}"" result2msa ""${BASE}/qdb"" ""${DBBASE}/${DB1}.idx"" ""${BASE}/res_exp_realign_filter"" ""${BASE}/uniref.a3m"" --msa-format-mode 6 --db-load-mode 2 ${FILTER_PARAM}` to be exact), which replaces `X` with `-` in the query. [Q58725.fasta](https://www.uniprot.org/uniprot/Q58725.fasta) according to uniprot:. ```; >sp|Q58725|MAP2_METJA Methionine aminopeptidase OS=Methanocaldococcus jannaschii (strain ATCC 43067 / DSM 2661 / JAL-1 / JCM 10045 / NBRC 100440) OX=243232 GN=map PE=3 SV=1; MEIEGYEKIIEAGKIASKVREEAVKLIXPGVKLLEVAEFVENRIRELGGEPAFPCNISIN; EIAAHYTPKLNDNLEFKDDDVVKLDLGAHVDGYIADTAITVDLSNSYKDLVKASEDALYT; VIKEINPPMNIGEMGKIIQEVIESYGYKPISNLSGHVMHRYELHTGISIPNVYERTNQYI; DVGDLVAIEPFATDGFGMVKDGNLGNIYKFLAKRPIRLPQARKLLDVISKNYPYLPFAER; WVLKNESERLALNSLIRASCIYGYPILKERENGIVGQAEHTILITENGVEITTK; ```. a3m file from `result2msa` (there's a `-` in the second line):. ```; >Q58725; MEIEGYEKIIEAGKIASKVREEAVKLI-PGVKLLEVAEFVENRIRELGGEPAFPCNISINEIAAHYTPKLNDNLEFKDDDVVKLDLGAHVDGYIADTAITVDLSNSYKDLVKASEDALYTVIKEINPPMNIGEMGKIIQEVIESYGYKPISNLSGHVMHRYELHTGISIPNVYERTNQYIDVGDLVAIEPFATDGFGMVKDGNLGNIYKFLAKRPIRLPQARKLLDVISKNYPYLPFAERWVLKNESERLALNSLIRASCIYGYPILKERENGIVGQAEHTILITENGVEITTK; >Q6GNF9	341	0.334	1.229E-101	0	293	294	159	475	480; MDqaSEEIwTDFRQAAEAHRQVRKYVMSWIKPGMTMIEICEKLEDcsrkLIKENGLYagLAFPTGCSLNNCAAHYTPNAGDPTVLQYDDVCKIDFGTHINGRIIDCAFTVTFNPKYDKLLEAVKDATNTGIRCSGIDVRLCDVGEAIQEVMESYeveidGktyqVKPIRNLNGHSIGPYRIHAGKTVPIVKGGEATRMEEGEVYAIETFGSTGKGVVHDDMECSHYMknFDvGHVPIRLPRAKHLLNVINEKFGTLAFCRRWLDrlGESKYLMALKNLCDLGIVDPYPPLCDMKGSYTAQFEHTILLRPNCKEVVSR; >A0A3B3D0Y5	336	0.331	1.005E-99	0	293	294	180	496	501; MDkaNEEmWNDFRQAAEAHRQVRKHVRSFLKPGMTMIEICERLEDcsrkLIKENGlnAGLAFPTGCSLNHCAAHYTPNAGDTTVLQYDDVCKIDFGTHINGRIIDCAFTVTFNPKYDKLLEAVRDATNTGIKNAGIDVRLCDVGEAIQEVMESYeveldGktyqVKPIRNLNGHSIGQYRIHAGKTVPIVKGGEATRMEEGEVYAIETFGSTGKGVVHDDMECSHYMknFDvGHVPIRLPRAKHLLNVVNENFGTLAFCRRWLDrlGESKYLMALKNLCDLGIVDPYPPLCDTKGCYTAQFEHTILLRPTCKEVVSR; ```. ## E",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/497:216,load,load-mode,216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/497,1,['load'],['load-mode']
Performance,"The next step would be to try a MMseqs2 build instrumented with ASan. Sadly ASan doesn't support static builds so you would have to compile MMseqs2 yourself:. ```; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2;; mkdir build; cd build; cmake -DHAVE_SANITIZER=1 -DCMAKE_BUILD_TYPE=ASan ..; make -j $(nproc --all); ```. The new binary in `src/mmseqs` would then hopefully be able to tell what is going wrong:. ```; Path-To-Where-You-Git-Clone/MMseqs2/build/src/mmseqs result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; ````",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814313609:1138,load,load-mode,1138,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814313609,1,['load'],['load-mode']
Performance,The parameter `--max-seqs` was always available but there was a stopped mmseqs from printing out the parameter. The printout problem should be resolved now. . How do you benchmark the performance?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-377788647:184,perform,performance,184,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-377788647,1,['perform'],['performance']
Performance,"The parameter was wrongly named. In release 11 it's now called `--shuffle` and 0 means no shuffling and 1 shuffling is enabled. However I would recommend not changing them. They are an internal optimization to help MMseqs2 not lose sensitivity in one specific case. If a machine does not have enough RAM (or if MPI is used) the target database is split and processed into multiple chunks. If one chunk is too redundant/similar/biased then `--max-seqs` can explode within this one chunk and we might lose good hits. By more or less randomly assigning sequences to any chunk we can prevent this. This parameter does not affect the order of the results in the result file (i.e. the `.m8` file). This will still pretty much random, as each query is processed by a different thread and the order of results written is thus not deterministic. If you want a sorted result file I would recommend to use `sort`:; `sort -s -k1,1 result.m8 > result_sorted.m8`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/313#issuecomment-632646531:194,optimiz,optimization,194,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/313#issuecomment-632646531,1,['optimiz'],['optimization']
Performance,"The sequence A0A011 is a single query right?; MMseqs2 does not parallelize over single queries, it only parallelizes over query sets. So what jackhmmer does in 14 minutes on 28 cores, MMseqs2 does on a single core. You can improve the speed by making sure the index is forced into the OS' page cache (e.g. using `mmseqs touch index_db` or using https://github.com/hoytech/vmtouch, the pages cached with `touch` can be evicted again, while `vmtouch` the index forced to remain in RAM).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/165#issuecomment-463179694:294,cache,cache,294,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/165#issuecomment-463179694,2,['cache'],"['cache', 'cached']"
Performance,"The server probably ran out of memory. I would recommend to not run `createindex` unless you 100% know you need a precomputed index. ; There are a few use-cases for precomputed indices. There revolve around running very small query sets repeatedly (e.g. a fast server with `--split 1` and forcing the DB to stay in RAM with a tool like vmtouch). For most purposes its faster to compute an index on the fly and not store a precomputed index on disk. On the fly computation is usually not much slower (most of the time probably faster) than loading the precomputed version from disk anyway. If you really want to create the precomputed index, read on here:; The issue is probably that MMseqs2's estimate for how much memory it is allowed to use for the index creation was wrong. You can overwrite the amount of memory with the `--split-memory-limit` parameter. This should be about 70% of total system RAM. Alternatively you can set the number of splits to create directly (`--split N`) though this is more tricky to get right.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/588#issuecomment-1210227210:539,load,loading,539,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/588#issuecomment-1210227210,1,['load'],['loading']
Performance,"They function and mean the same in nucleotide space. . > On Dec 9, 2021, at 18:59, Florian Plaza Oñate ***@***.***> wrote:; > ; > ﻿; > Hello,; > ; > I would like to perform clustering of a large nucleotide sequence with the easy-clust .; > However, it is not clear for me whether the ""--min-seq-id"" and ""-c"" parameters refer to alignments in nucleotide space or alignments in amino-acid space after sequence translation.; > ; > Thanks,; > Florian; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or unsubscribe.; > Triage notifications on the go with GitHub Mobile for iOS or Android.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/512#issuecomment-989770755:165,perform,perform,165,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/512#issuecomment-989770755,2,['perform'],['perform']
Performance,"This is a performance optimization to not spend a lot of time merging files that are only intended for consumption by other mmseqs modules. If you want human readable output please either call `converalis` after `search`. Or alternatively use the `easy-search` workflow, which abstracts away all of this by taking FASTA as input and retuning BLAST-tab like output.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/802#issuecomment-1897701032:10,perform,performance,10,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/802#issuecomment-1897701032,2,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,"This is for the clu70 machine running 998c50a:; ```; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>); at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578); at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```. This is the for clu90 machine running 15.6f452; ```; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0); at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0); at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]; (); #5 0x00007f706904f583 in GOMP_parallel (; fn=0x5f846452bc00 <result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]>,; data=0x7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988:357,optimiz,optimized,357,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988,12,['optimiz'],['optimized']
Performance,"This seems pretty puzzling, we are running on an older CPU model and nothing else seems out of order. MPI won't help and will only add additional latency. MMseqs2 can be used in target split mode without MPI, but we don't do this either. . Doing additional splits will also only add latency (1 split with enough RAM to fit the whole .idx file and some spare is ideal). RAM disks should also not help, in the worst case they might even be harmful. The index is already fully memory mapped and resident in the OS page cache due to vmtouch. Maybe the KVM virtualization has some of issue? We are running bare metal. Running only the MMseqs2 prefilter with perf might help debugging the performance issue. I can write more detailed instructions later if needed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396913559:146,latency,latency,146,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396913559,4,"['cache', 'latency', 'perform']","['cache', 'latency', 'performance']"
Performance,"This should work:; ```; wget https://ftp.ncbi.nih.gov/pub/mmdb/cdd/fasta.tar.gz; mmseqs tar2db fasta.tar.gz cddmsa; sed 's|\.FASTA||g' cddmsa.lookup > cddmsa.lookup_tmp; mv -f cddmsa.lookup_tmp cddmsa.lookup; mmseqs apply cddmsa cddmsa_wo_cons -- awk '/^>/ { i++ } i > 1 { print; }'; awk 'BEGIN { printf(""%c%c%c%c"",11,0,0,0); exit; }' > cddmsa_wo_cons.dbtype; ln -s cddmsa.lookup cddmsa_wo_cons.lookup; mmseqs msa2profile cddmsa_wo_cons cdd --match-mode 1. mmseqs easy-search QUERY.fasta cdd res.m8 tmp; ```. Could you try out if this performs approximately how you expect it to? If this works well I can add it to the `databases` workflow. (I fixed a few things shortly after I posted this.)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/410#issuecomment-776177415:535,perform,performs,535,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/410#issuecomment-776177415,1,['perform'],['performs']
Performance,"Time for merging to pref_0_tmp_15_tmp: 0h 0m 0s 20ms; Merging 16 target splits to pref_0; Preparing offsets for merging: 0h 0m 0s 53ms; [=================================================================] 1.08K 0s 37ms; Time for merging to pref_0: 0h 0m 0s 23ms; Time for merging target splits: 0h 0m 0s 174ms; Time for merging to pref_0_tmp: 0h 0m 0s 45ms; Time for processing: 0h 6m 46s 299ms; lcaalign /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/pref_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=================================================================] 1.08K 0s 508ms; Time for merging to aln_0: 0h 0m 0s 8ms; 19048 alignments calculated; 15817 sequence pairs passed the thresholds (0.830376 of overall calculated); 14.713489 hits per query sequence; Time for processing: 0h 0m 54s 194ms; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:16005,load,load-mode,16005,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,1,['load'],['load-mode']
Performance,Time for merging to pref_0_tmp_7: 0h 0m 34s 449ms; Time for merging to pref_0_tmp_7_tmp: 0h 1m 30s 262ms; Merging 8 target splits to pref_0; Preparing offsets for merging: 0h 1m 18s 365ms; [=================================================================] 100.00% 55.24M 8m 35s 231ms; ```. ### htop screen grab; ![Screen Shot 2021-03-10 at 12 16 09 PM](https://user-images.githubusercontent.com/14060382/110706285-7c9db380-81ac-11eb-8e42-efd46778a3ce.png). ### gdb output on an S status prefilter process:; ```; gdb -p 9878. Attaching to process 9878. warning: process 9878 is a cloned process; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/mmseqs...(no debugging symbols found)...done.; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...d,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:33046,Load,Loaded,33046,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,"Time for merging to query_seqs_h: 0h 0m 0s 62ms; Time for merging to query_seqs: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 213ms; splitsequence tmp/7935334228278574252/query_seqs tmp/7935334228278574252/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 96 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 0ms; prefilter tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 7.5 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 . Query database size: 4000 type: Nucleotide; Estimated memory consumption: 11G; Target database size: 365688 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 100.00% 365.69K 16s 177ms ; Index table: Masked residues: 1079896; Index table: fill; [=================================================================] 100.00% 365.69K 12s 498ms ; Index statistics; Entries: 297952985; DB size: 9896 MB; Avg k-mer size: 0.277490; Top 10 k-mers; GGCGCAGCGCGGTGC	366; TCCGGGCCGCACGGT	330; GTCGCGGCAGCGCCG	209; CAGACGCGCGTGCCG	204; CGCGCGCGTCGCGCG	167; CGCGCGCGTGGCGCG	157; GCTGCGCGCGGCGCG	151; CGCGGGCGTGGCGCG	149; CGTGCGCGTGGCGCG	147; CGCGCGCCCGGCGCG	133; Time for index table init: 0h 0m 39s 203ms; Process prefiltering step 1 of 1. k-me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:4868,load,load-mode,4868,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,1,['load'],['load-mode']
Performance,"UPDATE: Index is huge:. ```; total 3.8T; -rwxrwx--- 1 guelou01 nogroup 447G Aug 18 19:33 NCBI_ALL_DB; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 19:34 NCBI_ALL_DB.dbtype; -rwxrwx--- 1 guelou01 nogroup 954M Aug 18 18:11 NCBI_ALL_DB_h; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 18:11 NCBI_ALL_DB_h.dbtype; -rwxrwx--- 1 guelou01 nogroup 195M Aug 18 19:34 NCBI_ALL_DB_h.index; -rwxrwx--- 1 guelou01 nogroup 80K Sep 14 14:31 NCBI_ALL_DB.idx.0; -rwxrwx--- 1 guelou01 nogroup 895G Sep 14 14:31 NCBI_ALL_DB.idx.1; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.2; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.3; -rwxrwx--- 1 guelou01 nogroup 623G Sep 14 14:31 NCBI_ALL_DB.idx.4; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.5; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.6; -rwxrwx--- 1 guelou01 nogroup 4 Sep 14 14:31 NCBI_ALL_DB.idx.dbtype; -rwxrwx--- 1 guelou01 nogroup 1.1K Sep 14 14:31 NCBI_ALL_DB.idx.index; -rwxrwx--- 1 guelou01 nogroup 236M Aug 18 19:34 NCBI_ALL_DB.index; -rwxrwx--- 1 guelou01 nogroup 257M Aug 18 19:34 NCBI_ALL_DB.lookup; -rwxrwx--- 1 guelou01 nogroup 17 Aug 18 18:10 NCBI_ALL_DB.source; ```; And when starting the search the following message is confusing:; ```; Process needs more than 641G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; ```; Adding `--split X` does not have any effect, but does not cause any error. The search now runs for several days with a low CPU usage, only few threads on `idx` files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063:1355,optimiz,optimize,1355,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063,1,['optimiz'],['optimize']
Performance,"Users 31G Mar 9 21:51 pref_0_tmp_1; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 21:51 pref_0_tmp_1.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 21:51 pref_0_tmp_1.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 9 22:41 pref_0_tmp_2; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 22:41 pref_0_tmp_2.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 22:41 pref_0_tmp_2.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 9 23:30 pref_0_tmp_3; -rw-r--r-- 1 dportik Domain Users 4 Mar 9 23:31 pref_0_tmp_3.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 9 23:31 pref_0_tmp_3.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 10 00:20 pref_0_tmp_4; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 00:21 pref_0_tmp_4.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 00:21 pref_0_tmp_4.index; -rw-r--r-- 1 dportik Domain Users 31G Mar 10 01:10 pref_0_tmp_5; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 01:11 pref_0_tmp_5.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 01:11 pref_0_tmp_5.index; -rw-r--r-- 1 dportik Domain Users 33G Mar 10 01:59 pref_0_tmp_6; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 02:00 pref_0_tmp_6.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 02:00 pref_0_tmp_6.index; -rw-r--r-- 1 dportik Domain Users 33G Mar 10 02:49 pref_0_tmp_7; -rw-r--r-- 1 dportik Domain Users 4 Mar 10 02:49 pref_0_tmp_7.dbtype; -rw-r--r-- 1 dportik Domain Users 1.4G Mar 10 02:49 pref_0_tmp_7.index; ```. ## Your Environment; Conda installation: showing mmseqs 13.45111. Running SGE. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 48; On-line CPU(s) list: 0-47; Thread(s) per core: 2; Core(s) per socket: 12; Socket(s): 2; NUMA node(s): 2; Vendor ID: GenuineIntel; CPU family: 6; Model: 63; Model name: Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz; Stepping: 2; CPU MHz: 1736.914; BogoMIPS: 5004.72; Virtualization: VT-x; L1d cache: 32K; L1i cache: 32K; L2 cache: 256K; L3 cache: 30720K; NUMA node0 CPU(s): 0-11,24-35; NUMA node1 CPU(s): 12-23,36-47",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:42019,cache,cache,42019,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,4,['cache'],['cache']
Performance,"WP 36792]; [New LWP 36793]; [New LWP 36794]; [New LWP 36795]; [New LWP 36796]; [New LWP 36797]; [New LWP 36798]; [New LWP 36799]; [New LWP 36800]; [New LWP 36801]; [New LWP 36802]; [New LWP 36803]; [New LWP 36804]; [New LWP 36805]; [New LWP 36806]; [New LWP 36807]; [New LWP 36808]; [New LWP 36809]; [New LWP 36810]; [New LWP 36811]; [New LWP 36812]; [New LWP 36813]; [New LWP 36814]; [New LWP 36815]; [New LWP 36816]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; --Type <RET> for more, q to quit, c to continue without paging--RET; 0x00005623f9de6504 in CacheFriendlyOperations<512u>::hashIndexEntry(unsigned short, IndexEntryLocal*, unsigned long, CounterResult*) (); (gdb) bt; #0 0x00005623f9de6504 in CacheFriendlyOperations<512u>::hashIndexEntry(unsigned short, IndexEntryLocal*, unsigned long, CounterResult*) (); #1 0x00005623f9de68e5 in CacheFriendlyOperations<512u>::findDuplicates(IndexEntryLocal**, CounterResult*, unsigned long, unsigned short, unsigned short, bool) (); #2 0x00005623f9c42be0 in QueryMatcher::match(Sequence*, float*) (); #3 0x00005623f9c4393d in QueryMatcher::matchQuery(Sequence*, unsigned int) (); #4 0x00005623f9c2e113 in Prefiltering::runSplit(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, bool) [clone ._omp_fn.1] (); #5 0x00007fdb5f003cff in GOMP_parallel () from /usr/lib/x86_64-linux-gnu/libgomp.so.1; #6 0x00005623f9c337f4 in Prefiltering::runSplit(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, bool) (); #7 0x00005623f9c352ae in Prefiltering::runSplits(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<ch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616635868:1012,Cache,CacheFriendlyOperations,1012,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616635868,3,['Cache'],['CacheFriendlyOperations']
Performance,We do the second version. We load an index and then process all queries against the split.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/527#issuecomment-1027632690:29,load,load,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/527#issuecomment-1027632690,1,['load'],['load']
Performance,"We recently made cascaded the default, since it performs better and has fewer potential runtime pitfalls. Also please note that switch parameters such as `--single-step-clustering` do not take an argument.; With `--single-step-clustering false` you would run a single step clustering. I'll update the documentation. Sorry about that!. Edit: The missing version number probably means, that you downloaded the ZIP instead of checking out the repository. The compile script cannot figure out the git commit that was used, without the .git folder.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/65#issuecomment-367299944:48,perform,performs,48,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/65#issuecomment-367299944,1,['perform'],['performs']
Performance,"Weight file name ; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 1; linclust uniref90-DB-wwmj tmp//16518381706844811497/clu_redundancy tmp//16518381706844811497/linclust --cluster-mode 3 --max-iterations 1000 --similarity; -type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignme; nt-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp; -bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,co; ntext:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.; 000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 -; -ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-ca",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:3786,load,load-mode,3786,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['load'],['load-mode']
Performance,"Whoops, we were missing the --use-fasta-header for result2flat. I pushed a new version that has it. . Sorry for the confusion with the parameters. It's sadly quite a difficult problem, we need the parameters for all kinds of niche use cases, but they also add a lot of complexity and mental load to end users. Any ideas on how to improve the situation for end users are very welcome!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-248261005:291,load,load,291,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-248261005,1,['load'],['load']
Performance,"Without the CMakeLists patch, I get the following on aarch64:; cc: error: the clang compiler does not support '-march=native'; At any rate, when restricting an upstream build system, it's generally better to use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:503,optimiz,optimizations,503,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555,1,['optimiz'],['optimizations']
Performance,"Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Index table: counting k-mers; [=================================================================] 100.00% 79.74K 2s 947ms ; Index table: Masked residues: 1262029; Index table: fill; [=================================================================] 100.00% 79.74K 4s 125ms ; Index statistics; Entries: 25991856; DB size: 637 MB; Avg k-mer size: 0.406123; Top 10 k-mers; VMEYLV 439; QRLRML 421; LYDMNY 403; TFDAFS 367; YRVLYR 257; VAESEW 236; TGYKLS 202; GEVLSS 200; VTSSSS 199; TFDAFT 194; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Time for merging to human.idx: 0h 0m 0s 0ms; Time for processing: 0h 0m 11s 156ms; ```. expandaln:; ```; expandaln job/qdb db/human.idx job/res db/human.idx job/res_exp --db-load-mode 1 --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95 . MMseqs Version: 8799829d213f31b647fc69e0572a0c828c5aaf63; Expansion mode 0; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Max sequence length 65535; Score bias 0; Compositional bias 1; Compositional bias 1; E-value threshold inf; Seq. id. threshold 0; Coverage threshold 0; Coverage mode 0; Pseudo count mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Expand filter clusters 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.95; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Preload mode 1; Compressed 0; Threads 4; Verbosity 3. Index version: 16; Generated by: 8799829d213f31b647fc69e0572a0c828c5aaf63; ScoreMatrix: VTML80.out; Index version: 16; Generated by: 8799829d213f31b647fc69e0572a0c828c5aaf63; ScoreMatrix: VTML80.out; Invalid database ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616:4978,load,load-mode,4978,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616,1,['load'],['load-mode']
Performance,"XXXXX 2; XXXXXX 1; Time for index table init: 0h 0m 1s 308ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 416; Target db start 1 to 416; [=================================================================] 416 0s 20ms. 0.116417 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; Time for processing: 0h 0m 2s 35ms; align DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/pref_step0 DB_clustered/tmp/17526443716087640986/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 416 type: Aminoacid; Target database size: 416 type: Aminoacid; Calculation of alignments; [=================================================================] 416 0s 60ms; Time for merging to aln_step0: 0h 0m 0s 1ms. 464 alignments calculated.; 437 sequence pairs passed the thresholds (0.941810 of overall calculated).; 1.050481 hits per query sequence.; Time for processing: 0h 0m 0s 117ms; clust DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/aln_step0 DB_clustered/tmp/17526443716087640986/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [===========================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:13195,load,load-mode,13195,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['load'],['load-mode']
Performance,"Yeah, trying to pre-compute the index for colabfold proved to be unrealistic. Thanks for the suggestion. My goal was to perform a 6-frame translation search using ColabFold as the target database. But profiles use too much memory (more distinct k-mers?) and the consensus sequences probably won't be sensitive enough (I need to benchmark). Unless I'm doing something wrong. Out of curiosity, is the profile-profile search documented somewhere? From what I understand it builds a profile by expanding the alignment in the first iteration and then uses this profile as query. But because ColabFold doesn't include a profile database, I wonder what are the target profiles in the subsequent iterations.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/627#issuecomment-1289892479:120,perform,perform,120,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627#issuecomment-1289892479,1,['perform'],['perform']
Performance,Yes I also made this observation. The HT cores hurt the perfilter performance of mmseqs.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301228255:66,perform,performance,66,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301228255,1,['perform'],['performance']
Performance,"Yes, I've tried recompiling several times as well, and receive the same error after successful compilation. When running the command you gave, I get the following error:. Command: ; ```; ~/data/dir/mmseqs2/build-mpi/bin/mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-le",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:866,load,load-mode,866,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,1,['load'],['load-mode']
Performance,"Yes, if the `_mapping` file is empty than it could not map any identifier. It can handle the mapping of Uniprot sequences automatically. Deprecated identifier can not be mapped. `createtaxdb` performs the following code to retrieves the mmseqs identifiers to tax. id mapping. . URL=""ftp://ftp.expasy.org/databases/uniprot/current_release/knowledgebase/idmapping/idmapping.dat.gz""; wget -nv -O - ""$URL"" | zcat | awk '$2 == ""NCBI_TaxID"" {print $1""\t""$3 }' > taxidmapping; awk 'NR == FNR { f[$1] = $2; next } $2 in f { print $1""\t""f[$2] }' taxidmapping DB.lookup > DB_mapping. It would make sense if createtaxdb would print statistics.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-516466642:192,perform,performs,192,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-516466642,1,['perform'],['performs']
Performance,"Yes, this is indeed a counter intuitive behavior. The reason is that cascaded clustering has a big effect on the runtime. Linclust performs the following steps: ; (1) `kmermatcher`<- assign sequences to cluster centroids ; (2) `rescorediagonal` <- using some fast ungapped alignment between centroids and members ; (3) `clust` <- clusters the sequences that already passed the alignment criteria and remove them from the remaining set ; (4) `rescorediagonal` <- remove hits that have a low chance to fulfil the alignment criteria ; (5) `align` <- align the remaining hits with Gotoh-Smith-Waterman . The more sequences that Linclust filters at an early stage (3) the faster the algorithm runs since the slowest part is the Gotoh-Smith-Waterman algorithm.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-695797950:131,perform,performs,131,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-695797950,2,['perform'],['performs']
Performance,"Yes, you are indeed right. I clarified with @martin-steinegger, he benchmarked the profile inclusion E-value and saw that the higher inclusion threshold was improving performance. The performance would get worse with inclusion E-values higher than 0.01 though. Your understanding in your second paragraph is right.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/675#issuecomment-1459443612:167,perform,performance,167,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/675#issuecomment-1459443612,2,['perform'],['performance']
Performance,You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module `result2repseq`. I think I fixed the performance issue in the latest commit cc7d7da30ec779d6a2e886438f8295f59e2192f1. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the `easy-` workflows yet. I'd recommend to stick to the basic commands as shown in the user guide.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441:254,perform,performance,254,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441,2,['perform'],['performance']
Performance,You can add the `--createdb-mode 0` parameter as a workaround. . Edit: A space saving optimization is going wrong: The check for the optimization to work correctly depends on `--dbtype` not being set. The check should not depend on this parameter as its unrelated. Leaving out `--dbtype` should also fix the problem.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457464790:86,optimiz,optimization,86,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457464790,2,['optimiz'],['optimization']
Performance,You can not use the fasta header identifier. The `createsubdb` uses the internal numeric identifer given by `createdb`. ; I think it would be a great if MMseqs2 could support reciprocal best hit searches. Would you be willing to share you script? Here is the way I would script it. mmseqs search seqDbA seqDbB alnRes tmp ; # extract top hit; mmseqs filterdb alnRes alnResFilter --extract-lines 1; # transpose the result A->B changes to B->A; mmseqs swapdb alnResFilter alnResFilterSwaped ; # extract subset of detected sequences from seqDbB; mmseqs createsubdb alnResFilterSwaped.index seqDbB seqDbBSubdb ; mmseqs createsubdb alnResFilterSwaped.index seqDbB_h seqDbBSubdb_h; # perform second search ; mmseqs search seqDbBSubdb seqDbA alnRes tmp ; ... TODO check if detected from search A -> B and B-> A are the same,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/162#issuecomment-462116242:677,perform,perform,677,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/162#issuecomment-462116242,1,['perform'],['perform']
Performance,"You can set the `MMSEQS_FORCE_MERGE` environment variable (e.g. `export MMSEQS_FORCE_MERGE=1`). The split databases are, however, an IO optimization and not related to memory. Merging after every module invocation can slow MMseqs2 down considerably.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279:136,optimiz,optimization,136,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279,1,['optimiz'],['optimization']
Performance,"You could copy the macOS sdk from the other computer and use something like in the following link to not use the broken sdk:; https://stackoverflow.com/questions/10165335/can-cmake-specify-the-base-sdk-on-mac-os-x. sysctl.h is a System Header, any Compiler will have to load that and would not be able to provide its own.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/182#issuecomment-477720341:270,load,load,270,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/182#issuecomment-477720341,1,['load'],['load']
Performance,"[bioseq@compute-0-294 ~]$ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 12; Socket(s): 2; NUMA node(s): 4; Vendor ID: AuthenticAMD; CPU family: 16; Model: 9; Model name: AMD Opteron(tm) Processor 6172; Stepping: 1; CPU MHz: 800.000; CPU max MHz: 2100.0000; CPU min MHz: 800.0000; BogoMIPS: 4200.23; Virtualization: AMD-V; L1d cache: 64K; L1i cache: 64K; L2 cache: 512K; L3 cache: 5118K; NUMA node0 CPU(s): 0-5; NUMA node1 CPU(s): 6-11; NUMA node2 CPU(s): 18-23; NUMA node3 CPU(s): 12-17; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm 3dnowext 3dnow constant_tsc art rep_good nopl nonstop_tsc extd_apicid amd_dcm pni monitor cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt nodeid_msr hw_pstate npt lbrv svm_lock nrip_save pausefilter",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641389444:450,cache,cache,450,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641389444,8,['cache'],['cache']
Performance,"[mmseqs2.log.txt](https://github.com/soedinglab/MMseqs2/files/3654776/mmseqs2.log.txt); ## Expected Behavior; To be faster. ## Current Behavior; It takes the double of time than Diamond to perform the same task with similar results over the same query and target database. ## Steps to Reproduce (for bugs); time diamond blastx -d /d/Databases/Kegg/sram/kegg -q MOMZ_moomz1_200m.fna -o MO; MZ_moomz1_200m.kegg.raw --sensitive --max-target-seqs 1; real 32m12.614s; user 1091m19.492s; sys 34m5.028s. time mmseqs easy-search MOMZ_moomz1_200m.fna /d/Databases/Kegg/sram/mmseqs/ke; gg mmseqs_results2.m8 tmp --start-sens 1 --sens-steps 3 -s 6 --strand 2 --max-seqs 1; real 56m26.161s; user 2146m1.584s; sys 37m49.528s. ## Your Environment; MMseqs2 Version: 4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; 40 cores Intel(R) Xeon(R) CPU E5-2650 v3 @ 2.30GHz; 128 GB main memory; Query Fasta: 516296 metagenomic sequences (454 FLX), average seq size ~400bp; No other processes were running during the tests (besides those elementary to the SO)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231:189,perform,perform,189,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231,1,['perform'],['perform']
Performance,"_part-14/8093924424180559474/round2 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3. Init data structures...; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus ... Done.; Compute score and coverage.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; ...Time for merging files: 0h 0m 0s 78ms. All sequences processed. 2760008 alignments calculated.; 2676553 sequence pairs passed the thresholds (0.969763 of overall calculated).; 84.362 hits per query sequence.; Time for processing: 0h 0m 15s 472ms; Program call:; mergedbs tmp_part-14/8093924424180559474/top1 tmp_part-14/8093924424180559474/merged tmp_part-14/8093924424180559474/top1 tmp_part-14/8093924424180559474/round2. Merging the results to tmp_part-14/8093924424180559474/merged; Done; Time for merging files: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 354ms; Program call:; filterdb tmp_part-14/8093924424180559474/merged tmp_part-14/8093924424180559474/2b_ali --beats-first --filter-column 4 --comparison-operator le. Filter by numerical comparison to first row.; ....Time for merging files: 0h 0m 0s 229ms; Time for processing: 0h 0m 0s 732ms; Program call:; lca /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/2b_ali clusters_rep-seqs.part-14_tax_db --compressed 0 --lca-ranks kingdom:phylum:class:order:family:genus:species --blacklist 12908,28384 --threads 24 -v 3. Loading NCBI taxonomy...; Computing LCA...; Segmentation fault; Error: Lca died; ```. I'm going to try this again with Release 8.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:17857,Load,Loading,17857,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,1,['Load'],['Loading']
Performance,_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus ... Done.; Alignment database: tmp_part-14/8093924424180559474/top1; Start writing file to tmp_part-14/8093924424180559474/aligned; ....Time for merging files: 0h 0m 0s 186ms; Time for processing: 0h 0m 3s 851ms; Program call:; createsubdb tmp_part-14/8093924424180559474/aligned tmp_part-14/8093924424180559474/first tmp_part-14/8093924424180559474/first_sub. Start writing to database tmp_part-14/8093924424180559474/first_sub; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 279ms; Program call:; align tmp_part-14/8093924424180559474/aligned /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/first_sub tmp_part-14/8093924424180559474/round2 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3. Init data structures...; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus ... Done.; Compute score and coverage.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; ...Time for merging files: 0h 0m 0s 78ms. All sequences processed. 2760008 alignments calculated.; 2676553 sequence pairs passed the thresholds (0.969763 of overall calculated).; 84.362 hits per query sequence.; Time for processing: 0h 0m 15s 472ms; Program call:; mergedbs tmp_part-14/8093924424180559474/top1 tmp_part-14/8093924424180559474/merged tmp_part-14/8093924424180559474/top1 tmp_part-14/8093924424180559474/round2. Merging the results to tmp_part-14/8093924424180559474/merged; Do,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:16282,load,load-mode,16282,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,1,['load'],['load-mode']
Performance,"`--db-load-mode` won't help in this case. The parameter handles loading of precomputed indices of (search) databases. Normally, we don't use precomputed indices for clustering. Ideally the `tmp` folder should be on a local drive, that's the only optimization you can reasonably do.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/559#issuecomment-1173306933:6,load,load-mode,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/559#issuecomment-1173306933,3,"['load', 'optimiz']","['load-mode', 'loading', 'optimization']"
Performance,`convert2fasta` takes a sequence database as input. You can create a subset of the input database that contains only the cluster representatives with `createsubdb` afterwards you can call `convert2fasta`:. ```; mmseqs createdb input.fas DB --dbtype 2; mmseqs cluster DB clusterRes tmp --min-seq-id 0.95 -c 0.8 --cov-mode 1; mmseqs createsubdb clusterRes.index DB DB_rep; mmseqs convert2fasta DB_rep DB_rep.fasta; ```. Sidenote: I don't recommend putting the output of the clustering in `/dev/shm`. It's probably bad for performance.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/673#issuecomment-1445350808:520,perform,performance,520,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/673#issuecomment-1445350808,1,['perform'],['performance']
Performance,"a.gz IMG_tax_db/IMG_tax_db; createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loading nodes file ... Done, got 6986 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```. the job was submitted with teh following batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/IMG_VR_2022_12_19_7.1/IMG_tax_db; export OTU_dir=/home/bbrow6/vaginal_virome/Run_021723/identified_viral_sequences/OTUs/geNomad/genomad_output_1000bps/clustered_spades_cross_assembly_contigs_gt1000bps_summary/. source activate mmseqs2; module load OpenMPI. mmseqs easy-taxonomy $OTU_dir/clustered_spades_cross_assembly_contigs_gt1000bps_virus.fna $DBs/IMG_tax_db vag_taxonomy_results_IMG tmp -e 1e-5 -s 6 --blacklist ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:1995,Load,Loading,1995,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['Load'],['Loading']
Performance,"ab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=this@entry=0x7fffffffd290, __position=__position@entry=...); at /usr/include/c++/9/bits/vector.tcc:440; #11 0x000000000060c68b in std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=0x7f",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/666:2620,optimiz,optimized,2620,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666,2,['optimiz'],['optimized']
Performance,"abfold_data/uniref30_2302_db outdir/res_exp --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95 --db-load-mode 1 --threads 4. mmseqs align outdir/prof_res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp outdir/res_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter UniRef results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign outdir/res_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --threads 4 --max-seq-id 1.0 --filter-min-enable 100. # Convert UniRef results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign_filter outdir/uniref.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Environmental search; mmseqs search outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env outdir/tmp/env --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Expand and align environmental results; mmseqs expandaln outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp -e inf --expansion-mode 0 --db-load-mode 1 --threads 4. mmseqs align outdir/tmp/env/latest/profile_1 /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp outdir/res_env_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter environmental results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign outdir/res_env_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --max-seq-id 1.0 --threads 4 --filter-min-enable 100. # Convert environmental results to MSA; mmseqs result2msa qu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:1915,load,load-mode,1915,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326,1,['load'],['load-mode']
Performance,"accept 1000 --threads 4 --alt-ali 10 -a. # Filter UniRef results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign outdir/res_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --threads 4 --max-seq-id 1.0 --filter-min-enable 100. # Convert UniRef results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign_filter outdir/uniref.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Environmental search; mmseqs search outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env outdir/tmp/env --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Expand and align environmental results; mmseqs expandaln outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp -e inf --expansion-mode 0 --db-load-mode 1 --threads 4. mmseqs align outdir/tmp/env/latest/profile_1 /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp outdir/res_env_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter environmental results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign outdir/res_env_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --max-seq-id 1.0 --threads 4 --filter-min-enable 100. # Convert environmental results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign_filter outdir/env.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Merge results; mmse",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:2253,load,load-mode,2253,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326,1,['load'],['load-mode']
Performance,"ace-limit 0 --remove-tmp-files 0. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	1; Search steps 	3; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Program call:; align /tmp/global2/nyoungblut/LLMGAG_27929269397/linclust/genes_db /ebio/abt3_projects/databases_no-backup/uniclust/uniclust90_2018_08_db /tmp/global2/nyoungblut/LLMGAG_27929269397",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032:4785,perform,performs,4785,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032,1,['perform'],['performs']
Performance,"adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Database size: 51992 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 51.99K 0s 346ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 62ms; Sort by rep. sequence 0h 0m 0s 19ms; Time for fill: 0h 0m 0s 27ms; Time for merging to pref: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 567ms; rescorediagonal shrimpDB shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref tmp97/17949317426677965256/linclust/6279588666755106708/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 51.99K 0s 101ms; Time for merging to pref_rescore1: 0h 0m 0s 185ms================>] 99.62% 51.80K eta 0s; Time for processing: 0h 5m 0s 451ms; clust shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref_rescore1 tmp97/17949317426677965256/linclust/6279588666755106708/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Clustering mode: Set Cover; [=================================================================] 100.00% 51.99K 0s 51ms; Sort entries; Find missing connections; Found 39230 new connections.; Reconstruct initial order; [=================================================================] 100.00% 51.99K 0s 55ms; Add missing connections; [=================================================================] 100.00% 51.99K 0s 6ms. Time for read in:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:5999,load,load-mode,5999,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['load'],['load-mode']
Performance,"age 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	1; Search steps 	3; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 1.000 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 8408 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8408; Target db start 1 to 756891; [=================================================================] 100.00% 8.41K 0s 981ms . 0.020249 k-mers per position; 72 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 8273 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 10ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:4807,load,load-mode,4807,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['load'],['load-mode']
Performance,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/567:4374,Perform,Performing,4374,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567,14,['Perform'],['Performing']
Performance,"an optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be filed against your own project-compiled binaries and test against those binaries first when tracking bugs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1248,optimiz,optimize,1248,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463,10,['optimiz'],"['optimizations', 'optimize', 'optimized']"
Performance,"an.db; Data file is fam.db; Start writing file to fam.tsv; Done.; ```. ## Context. These 2 sequences come from a vibro cholerae genome. . ## Your Environment. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): GITDIR-NOTFOUND (corresponds to the last release: 2-23394). * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled using GNU Make 3.81 and cmake version 2.8.12.2. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: self-compiled using GNU Make 3.81 and cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; less /proc/cpuinfo; processor : 0; vendor_id : AuthenticAMD; cpu family : 21; model : 2; model name : AMD Opteron(tm) Processor 6344 ; stepping : 0; cpu MHz : 2599.862; cache size : 2048 KB; physical id : 0; siblings : 12; core id : 0; cpu cores : 6; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext; fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1; sse4_2 popcnt aes xsave avx f16c lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt ; lwp fma4 tce nodeid_msr tbm topoext perfctr_core perfctr_nb cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassis; ts pausefilter pfthreshold bmi1; bogomips : 5199.72; TLB size : 1536 4K pages; clflush size : 64; cache_alignment : 64; address sizes : 48 bits physical, 48 bits virtual; power management: ts ttp tm 100mhzsteps hwpstate cpb eff_freq_ro; ```; * Operating system and version:; ```; $uname -a; Linux XXX 2.6.32-696.20.1.el6.x86_64 #1 SMP Fri Jan 26 17:51:45 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:18724,cache,cache,18724,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['cache'],['cache']
Performance,"and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:3908,load,load-mode,3908,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['load'],['load-mode']
Performance,"appingFiles/mmseqsUniref90DB mmseqs_U90_out/mmseqs-81_resultDB tmp --db-load-mode 2 --threads 40 --max-seqs 25 -s 1 -a -e 1e-5 > /dev/null 2>&1. The error:. Time for merging to q_orfs_aa_h: 0h 0m 40s 360ms; Time for merging to q_orfs_aa: 0h 0m 42s 543ms; Time for processing: 0h 2m 43s 735ms; prefilter tmp/4045178716233794437/q_orfs_aa ../MH2_mappingFiles/mmseqsUniref90DB tmp/4045178716233794437/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 -s 1.0 . Query database size: 29993837 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 194G; Target database size: 91903251 type: Aminoacid; Process prefiltering step 1 of 2. slurmstepd: error: poll(): Bad address; tmp/4045178716233794437/blastp.sh: line 99: 220560 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; MMseqs2 Version: 14.7e284; I install it using:; $module load miniconda; $conda create --prefix /project/winter_pea_endophytes_2022/MMseqs; $source activate /project/winter_pea_endophytes_2022/MMseqs; $conda install -c conda-forge -c bioconda mmseqs2; and run it as environment; $conda activate /project/winter_pea_endophytes_2022/MMseqs. Server:; ceres.scinet.usda; resources allocation; $salloc -p short -N 2 -n 80 -t 12:00:00",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/689:2038,load,load,2038,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/689,1,['load'],['load']
Performance,"arch type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: b4c1bc7cf89bc0bd577c5a9d3c1f7bedc1f74152; * Which MMseqs version: f5b588be54de35876eff90f3694b67e1d00856ef; * Server specifications: Intel(R) Xeon(R) W-2255 CPU, 64GB RAM; * Operating system and version: Ubuntu20 LTS. [nohupout.txt](https://github.com/soedinglab/MMseqs2/files/10728242/nohupout.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:5032,optimiz,optimize,5032,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['optimiz'],['optimize']
Performance,"arts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Prefilter mode 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. extractorfs KLEB_PO07_megahitDB tmp/6964202514022042695/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-; mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-; lookup 0 --threads 32 --compressed 0 -v 3. [=================================================================] 24.08K 1s 376ms; Time for merging to orfs_aa_h: 0h 0m 0s 504ms; Time for merging to orfs_aa: 0h 0m 0s 706ms; Time for processing: 0h 0m 6s 520ms; prefilter tmp/6964202514022042695/orfs_aa /home/sdwork/scratch/metagenomics/uniref_db/uniref90 tmp/6964202514022042695/orfs_pref --sub-mat 'aa:blosum62.out,; nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-siz; e aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale; 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-; load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Query database size: 627284 type: Aminoacid; Estimated memory consumption: 717G; Target database size: 187136236 type: Aminoacid; Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:4162,load,load-mode,4162,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741,1,['load'],['load-mode']
Performance,"at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>) at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578) at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```; For the clu90 job:; ```; (gdb) thread apply all bt. Thread 32 (Thread 0x7f6e65ffe640 (LWP 135852) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #5 0x00007f70690546d9 in gomp_thread_start (xdata=<optimis",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:29953,optimiz,optimized,29953,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"atch illumina metagenomic reads against the Refseq proteins database. ; This is the workflow I have followed so far; - create mmseqs db for the target (Refseq here) ; mmseqs createdb RSComplete/*.gz mmseqsRefSeqCompleteDB; - create an index for the target db (in a temp folder ""tmp""); mmseqs createindex RefSeqCompleteDB tmp ; - load the target into memory for repeated searching; mmseqs touchdb mmseqsRefSeqCompleteDB. And then for a set of query files: ; - create mmseqs db for the query file; mmseqs createdb $file $outpath/$querydb; - search against the target db loaded in memory; mmseqs search $outpath/$querydb $db $outpath/$result_db tmp --db-load-mode 3 --threads 2 --max-seqs 25 -s 1 -a -e 1e-5. Is this the correct way of processing multiple searches using mmseqs? Is there any way to speed up searches for large query sets and large database files?. Any information would be greatly appreciated.; Thanking you,. regards,; Dhwani Desai; ## Current Behavior; It does not seem to make a difference to the runtime when I try it with or without the --db-load-mode option. Is there a way to speed up these kinds of repeated searches?; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 73ce3b88754987122b4fc5e69a721beeecd677d0. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; installation (using Git):; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2; mkdir build; cd build; cmake -DCMAKE_BU",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214:1154,load,load-mode,1154,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214,1,['load'],['load-mode']
Performance,"ay:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1508,load,loading,1508,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['load'],['loading']
Performance,"b --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loading nodes file ... Done, got 6986 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```. the job was submitted with teh following batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/IMG_VR_2022_12_19_7.1/IMG_tax_db; export OTU_dir=/home/bbrow6/vaginal_virome/Run_021723/identified_viral_sequences/OTUs/geNomad/genomad_output_1000bps/clustered_spades_cross_assembly_contigs_gt1000bps_summary/. source activate mmseqs2; module load OpenMPI. mmseqs easy-taxonomy $OTU_dir/clustered_spades_cross_assembly_contigs_gt1000bps_virus.fna $DBs/IMG_tax_db vag_taxonomy_results_IMG tmp -e 1e-5 -s 6 --blacklist """" --tax-lineage 1; ```. ## MMseqs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:2040,Load,Loading,2040,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['Load'],['Loading']
Performance,"base created based on a `seqdb` created from UniProt sequences. ## Current Behavior. Program crashed with `core dumped` error and reports `Error: createbintaxonomy failed`. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; mmseqs createdb ""uniprot_2024_03.fasta"" seqdb; ```; then; ```; mmseqs createtaxdb seqdb tmp ; ```. We attempted to vary `--tax-db-mode`, `--tax-mapping-mode`, and `--threads` parameters but observed the same behavior. Any help would be highly appreciated. We are able to reproduce this issue with a minimal database containing 1000 sequences. ## MMseqs Output (for bugs). ```; > mmseqs createtaxdb seqdb tmp ; createtaxdb seqdb tmp . MMseqs Version: 15.6f452; NCBI tax dump directory; Taxonomy mapping file ; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 48; Verbosity 3. Loading nodes file ... Done, got 2601214 nodes; Loading merged file ... Done, added 79743 merged nodes.; Loading names file ... Done; mmseqs: malloc.c:2379: sysmalloc: Assertion `(old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)' failed.; Aborted (core dumped); Error: createbintaxonomy failed; ```. ## Context. We are trying to create a custom taxonomy database for MSA, such that the resulting .a3m files contain taxonomy information. Is a taxonomy database already available for download for uniprot_2024_03 for similar releases?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of syst",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871:1026,Load,Loading,1026,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871,1,['Load'],['Loading']
Performance,base size: 2 type: Nucleotide; Calculation of alignments; [=================================================================] 4 0s 0ms; Time for merging to aln: 0h 0m 0s 0ms; 4 alignments calculated; 4 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 17ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/input_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; offsetalignment tmp/9586069750715556969/query tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/target tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/aln tmp/9586069750715556969/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 16 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 0ms; Writing results to: tmp/9586069750715556969/result; [=================================================================] 2 0s 0ms. Time for merging to result: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; test.fa.easy-,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:10718,load,load-mode,10718,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['load'],['load-mode']
Performance,"bs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/query /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 2 --compressed 0 -v 3 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 0ms; mmseqs-web-worker_1 | prefilter /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/query_seqs_split /opt/mmseqs-web/databases/pdb_rna_sequence.idx /opt/mmseqs-web/jobs/qRNpiMtH372WZ-C_jMFQJKscz01WKcG1y9ej0A/tmp/4977427893312161071/search_tmp/7042327585447941378/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 5.7 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Index version: 16; mmseqs-web-worker_1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Query database size: 1 type: Nucleotide; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Target database size: 10754 type: Nucleotide; mmseqs-web-worker_1 | Process prefiltering step 1 of 1; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | k-mer similarity threshold: 0; mmseqs-web-worker_1 | Starting prefiltering scores calculation (step 1 of 1); mmseqs-web-worker_1 | Query db start 1 to 1; mmseqs-web-worker_1 | Target db start 1 to 10754; mmseqs-web-worker_1 | [=================================================================] 1 0s 4ms; mms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:23034,load,load-mode,23034,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['load'],['load-mode']
Performance,"c 0.8 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. Can not find any score per column for coverage 0.800000 and sequence identity 0.000000. No hit will be filtered.; [=================================================================] 276 0s 20ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 52ms; align tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore2 tmpfiles//13298481167543164943/linclust/10229649346622198404/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 276 0s 26ms; Time for merging to aln: 0h 0m 0s 1ms. 276 alignments calculated.; 276 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 82ms; clust tmpfiles//13298481167543164943/linclust/10229649346622198404/input_step_redundancy tmpfiles//13298481167543164943/linclust/10229649346622198404/aln tmpfiles//13298481167543164943/linclust/10229649346622198404/clust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:8472,load,load-mode,8472,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['load'],['load-mode']
Performance,"c db (colabfold_envdb_202108 or bfd_mgy_colabfold, the former is preferred); ; uniref_db = Path(""/store/colabfold/db/uniref30_2202_db""); template_db = Path(""/store/colabfold/db/pdb70_220313""); if filter:; # 0.1 was not used in benchmarks due to POSIX shell bug in line above; # EXPAND_EVAL=0.1; align_eval = 10; qsc = 0.8; max_accept = 100000. used_dbs = [uniref_db]; if use_templates:; used_dbs.append(template_db); if use_env:; used_dbs.append(metagenomic_db). for db in used_dbs:; if not dbbase.joinpath(f""{db}.dbtype"").is_file():; raise FileNotFoundError(f""Database {db} does not exist""); if (; (; not dbbase.joinpath(f""{db}.idx"").is_file(); and not dbbase.joinpath(f""{db}.idx.index"").is_file(); ); or os.environ.get(""MMSEQS_IGNORE_INDEX"", False); ):; logger.info(""Search does not use index""); db_load_mode = 0; dbSuffix1 = ""_seq""; dbSuffix2 = ""_aln""; dbSuffix3 = """"; else:; dbSuffix1 = "".idx""; dbSuffix2 = "".idx""; dbSuffix3 = "".idx"". # fmt: off; # @formatter:off; search_param = [""--num-iterations"", ""3"", ""--db-load-mode"", str(db_load_mode), ""-a"", ""-e"", ""0.1"", ""--max-seqs"", ""10000""]; search_param += [""--prefilter-mode"", str(prefilter_mode)]; if s is not None:; search_param += [""-s"", ""{:.1f}"".format(s)]; else:; search_param += [""--k-score"", ""'seq:96,prof:80'""]. filter_param = [""--filter-msa"", str(filter), ""--filter-min-enable"", ""1000"", ""--diff"", str(diff), ""--qid"", ""0.0,0.2,0.4,0.6,0.8,1.0"", ""--qsc"", ""0"", ""--max-seq-id"", ""0.95"",]; expand_param = [""--expansion-mode"", ""0"", ""-e"", str(expand_eval), ""--expand-filter-clusters"", str(filter), ""--max-seq-id"", ""0.95"",]. run_mmseqs(mmseqs, [""search"", base.joinpath(""qdb""), dbbase.joinpath(uniref_db), base.joinpath(""res""), base.joinpath(""tmp""), ""--threads"", str(threads)] + search_param); #queryDB 데이터베이스에서 uniref30_2103_db 데이터베이스를 대상으로 검색을 수행합니다.; #검색 결과는 res 디렉토리에 저장되고, 임시 파일은 tmp 디렉토리에 저장됩니다; ; run_mmseqs(mmseqs, [""mvdb"", base.joinpath(""tmp/latest/profile_1""), base.joinpath(""prof_res"")]); run_mmseqs(mmseqs, [""lndb"", base.joinpath(""qdb_h""),",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:2636,load,load-mode,2636,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['load'],['load-mode']
Performance,"c10, matchWeight=0x7ee3e2190040, wg=0x7ee412750010, Neff_M=<optimized out>, queryLength=queryLength@entry=8032918, setSize=setSize@entry=1, X=0x7f20081f9a70) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:533; #2 0x00000000006c9cd5 in PSSMCalculator::computePSSMFromMSA (this=this@entry=0x7f1ffd7dbc10, setSize=setSize@entry=1, queryLength=8032918, msaSeqs=0x7f20081f9a70, wg=<optimized out>, scoreBias=scoreBias@entry=0) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:163; #3 0x000000000065834b in _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:263; #4 0x00000000008ab97e in gomp_thread_start (); #5 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #6 0x0000000000964ff3 in clone (). Thread 19 (LWP 7919 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 18 (LWP 7918 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:12640,optimiz,optimized,12640,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance,"c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1365,load,load,1365,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['load'],['load']
Performance,"cess prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 237; Target db start 1 to 237; [=================================================================] 237 0s 19ms. 20.483280 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 707ms; align tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/pref_step1 tmpfiles//13298481167543164943/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 237 type: Aminoacid; Target database size: 237 type: Aminoacid; Calculation of alignments; [=================================================================] 237 0s 50ms; Time for merging to aln_step1: 0h 0m 0s 3ms. 306 alignments calculated.; 271 sequence pairs passed the thresholds (0.885621 of overall calculated).; 1.143460 hits per query sequence.; Time for processing: 0h 0m 0s 99ms; clust tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/aln_step1 tmpfiles//13298481167543164943/clu_step1 --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================] 237 0s 4ms; So",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:17412,load,load-mode,17412,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['load'],['load-mode']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 10 (LWP 7910 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 9 (LWP 7909 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:21262,optimiz,optimized,21262,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 11 (LWP 7911 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 10 (LWP 7910 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:20332,optimiz,optimized,20332,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 12 (LWP 7912 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 11 (LWP 7911 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:19402,optimiz,optimized,19402,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 13 (LWP 7913 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 12 (LWP 7912 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:18472,optimiz,optimized,18472,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 14 (LWP 7914 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 13 (LWP 7913 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:17542,optimiz,optimized,17542,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 15 (LWP 7915 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 14 (LWP 7914 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:16612,optimiz,optimized,16612,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 16 (LWP 7916 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 15 (LWP 7915 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:15682,optimiz,optimized,15682,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 17 (LWP 7917 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 16 (LWP 7916 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:14752,optimiz,optimized,14752,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 18 (LWP 7918 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 17 (LWP 7917 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:13822,optimiz,optimized,13822,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 21 (LWP 7921 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 20 (LWP 7920 ""mmseqs""):; #0 MathUtil::NormalizeTo1 (def_array=0x0, length=20, array=0x7ecabcfc9220) at /home/vsts/work/1/s/src/commons/MathUtil.h:248; #1 PSSMCalculator::computeContextSpecificWeights (this=this@entry=0x7f1ffd7dbc10, matchWeight=0x7ee3e2190040, wg=0x7ee412750010, Neff_M=<optimized out>, queryLength=queryLength@entry=8032918, setSize=setSize@entry=1, X=0x7f20081f9a70) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:533; #2 0x00000000006c9cd5 in PSSMCalculator::computePSSMFromMSA (this=this@entry=0x7f1ffd7dbc10, setSize=setSize@entry=1, queryLength=8032918, msaSe",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:10933,optimiz,optimized,10933,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 22 (LWP 7922 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 21 (LWP 7921 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:10003,optimiz,optimized,10003,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 23 (LWP 7923 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 22 (LWP 7922 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:9073,optimiz,optimized,9073,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 24 (LWP 7924 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 23 (LWP 7923 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:8143,optimiz,optimized,8143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 25 (LWP 7925 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 24 (LWP 7924 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:7213,optimiz,optimized,7213,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 26 (LWP 7926 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 25 (LWP 7925 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:6283,optimiz,optimized,6283,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 27 (LWP 7927 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 26 (LWP 7926 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:5353,optimiz,optimized,5353,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 29 (LWP 7929 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; --Type <RET> for more, q to quit, c to continue without paging--c; #7 0x0000000000964ff3 in clone (). Thread 28 (LWP 7928 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:3426,optimiz,optimized,3426,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 29 (LWP 7929 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:2496,optimiz,optimized,2496,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 31 (LWP 7931 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:1566,optimiz,optimized,1566,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"cid; Target database size: 41195879 type: Aminoacid; Calculation of alignments; [=================================================================] 7.00K 0s 8ms; Time for merging to aln_0: 0h 0m 0s 9ms. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 3s 593ms; align /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/profile_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/mmseqs_search_db/db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/pref_1 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/aln_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 1 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 7002 type: Profile; Target database size: 41195879 type: Aminoacid; Calculation of alignments; [=================================================================] 7.00K 0s 20ms; Time for merging to aln_tmp_1: 0h 0m 0s 10ms. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0.000000 hits per query sequence.; Time for processing: 0h 0m 4s 529ms; mergedbs /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861699530798/profile_0 /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search/hits_seqs17_db /ebio/abt3_scratch/nyoungblut/Struo2_255873462447/UniRef50_clst0.9/mmseqs_search_TMP17/874358861",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203:2014,load,load-mode,2014,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726110203,1,['load'],['load-mode']
Performance,"clu_not_accepted_swap: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 70ms; createsubdb tmpfiles//13298481167543164943/clu_not_accepted_swap DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; createsubdb tmpfiles//13298481167543164943/clu DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/seq_wrong_assigned tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 10 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 210 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 210 0s 6ms; Index statistics; Entries: 1284; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 989ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10; Target db start 1 to 210; [===========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:27842,load,load-mode,27842,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['load'],['load-mode']
Performance,"clu_tmp/9745907189971917257/pref_filter1 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_filter2 --filter-file All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/order_redundancy --threads 56 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 35.67M 56s 656ms; Time for merging to pref_filter2: 0h 0m 11s 819ms; Time for processing: 0h 1m 22s 652ms; rescorediagonal All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_filter2 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 35.67M 9s 733ms; Time for merging to pref_rescore2: 0h 0m 12s 355ms; Time for processing: 0h 0m 38s 935ms; align All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore2 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:8372,load,load-mode,8372,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['load'],['load-mode']
Performance,commons/NucleotideMatrix.cpp.o; [ 48%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Orf.cpp.o; [ 48%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Parameters.cpp.o; [ 49%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/ProfileStates.cpp.o; [ 49%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/LibraryReader.cpp.o; [ 50%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Sequence.cpp.o; [ 50%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/SequenceWeights.cpp.o; [ 50%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/SubstitutionMatrix.cpp.o; [ 51%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/tantan.cpp.o; [ 51%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/UniprotKB.cpp.o; [ 51%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o; [ 52%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/CacheFriendlyOperations.cpp.o; [ 52%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ExtendedSubstitutionMatrix.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Indexer.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/IndexBuilder.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/KmerGenerator.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Main.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Prefiltering.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/PrefilteringIndexReader.cpp.o; [ 55%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/QueryMatcher.cpp.o; [ 55%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ReducedMatrix.cpp.o; [ 56%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/SequenceLookup.cpp.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:15363,Cache,CacheFriendlyOperations,15363,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,1,['Cache'],['CacheFriendlyOperations']
Performance,"configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs/bin/mmseqs...done.; (gdb) r; Starting program: mmseqs/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	3.40282e+38; Split memory limit 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	256; Compressed 	0; Preload mode 	0; Verbosity 	3. [New Thread 0x7fac59656700 (LWP 38112)]",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:1959,load,load-mode,1959,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473,1,['load'],['load-mode']
Performance,"d clustering on a database:; `mmseqs cluster pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --cascaded -t 24`; but the program doesn't recognize --cascaded option, although it is mentioned on the wikipage. I found out another option from the '-h' help: --single-step-clustering and set it up to false:; `mmseqs cluster pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --threads 24 --single-step-clustering false`; and I get:. > Program call:; > pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --threads 24 --single-step-clustering false; > ; > MMseqs Version: GITDIR-NOTFOUND; > Sub Matrix blosum62.out; > Sensitivity 4; > K-mer size 0; > K-score 2147483647; > Alphabet size 21; > Max. sequence length 32000; > Max. results per query 20; > Offset result 0; > Split DB 0; > Split mode 2; > Split Memory Limit 0; > Coverage threshold 0.8; > Coverage Mode 0; > Compositional bias 1; > Diagonal Scoring 1; > Mask Residues 1; > Minimum Diagonal score 15; > Include identical Seq. Id. false; > Spaced Kmer 1; > No preload false; > Early exit false; > Pseudo count a 1; > Pseudo count b 1.5; > Threads 24; > Verbosity 3; > Add backtrace false; > Alignment mode 3; > E-value threshold 0.005; > Seq. Id Threshold 0; > Realign hit false; > Max Reject 2147483647; > Max Accept 2147483647; > Cluster mode 1; > Max depth connected component 1000; > Similarity type 2; > Single step clustering false; > Cascaded clustering steps 3; > Remove Temporary Files false; > Sets the MPI runner; > Kmer per sequence 20; > Shift hash 5; > Rescore mode 0; > Remove hits by seq.id. and coverage false; > In substitution scoring mode, performs global alignment along the diagonal false; > ; > Set cluster settings automatic to s=6; > Set cluster iterations to 3; > Please provide \<sequenceDB\> \<outDB\> \<tmp\>. I use self compiled version, cloned from the git yesterday (20180220).; `mmseqs`. > MMseqs2 Version: GITDIR-NOTFOUND. So how to run cascaded clustering? I'm also not sure whether missing version number means something went wrong...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/65:1612,perform,performs,1612,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/65,1,['perform'],['performs']
Performance,"d component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterlinclust ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/clu_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:9887,load,load-mode,9887,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,d-kmer-mode 1 --threads 4 -v 3 -s 7 . MMseqs Version: 	e2c8166b292d5e65271887cf4af568f32b346dd2; Sub Matrix 	blosum62.out; Sensitivity 	7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Profile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	0; Diagonal Scoring 	1; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; Threads 	4; Verbosity 	3. Initialising data structures...; Using 4 threads. Use index DB.sk6; Index version: 774909490; KmerSize: 6; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Query database: DB(size=105589); Target database: DB(size=105589); Use kmer size 6 and split 1 using split mode 0; Needed memory (1603741184 byte) of total memory (8340369408 byte); Substitution matrices...; Time for init: 0 h 0 m 1s. Process prefiltering step 0 of 1. Index version: 774909490; KmerSize: 6; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Cache database ; Read IndexTable ... Done; k-mer similarity threshold: 77; k-mer match probability: 0. Starting prefiltering scores calculation (step 0 of 1); Query db start 0 to 105589; Target db start 0 to 105589; ........WARNING: Sequence (dbKey=82431) contains only ATGC. It might be a nucleotide sequence.; ..WARNING: Sequence (dbKey=102237) contains only ATGC. It might be a nucleotide sequence.; WARNING: Sequence (dbKey=105031) contains only ATGC. It might be a nucleotide sequence.; WARNING: Sequence (dbKey=105125) contains only ATGC. It might be a nucleotide sequence.; WARNING: Sequence (dbKey=105583) contains only ATGC. It might be a nucleotide sequence. 3678 k-mers per position.; 308639 DB matches per sequence.; 60 Overflows .; 356 sequences passed prefiltering per query sequence (ATTENTION: max. 300 best scoring sequences were written to the output prefiltering database).; Median result list size: 333; 0 sequences with 0 size result lists. Time fo,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021:3980,Cache,Cache,3980,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021,1,['Cache'],['Cache']
Performance,"d::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; --Type <RET> for more, q to quit, c to continue without paging--c; #7 0x0000000000964ff3 in clone (). Thread 28 (LWP 7928 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 27 (LWP 7927 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:4171,optimiz,optimized,4171,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance,"database size: 1604546 type: Nucleotide; Target database size: 802273 type: Nucleotide; Calculation of alignments; [=================================================================] 1.60M 22m 53s 435ms; Time for merging to aln_gapped: 0h 0m 0s 903ms; 70826259 alignments calculated; 3445894 sequence pairs passed the thresholds (0.048653 of overall calculated); 2.147582 hits per query sequence; Time for processing: 0h 23m 4s 596ms; concatdbs tmp/16479300059278292880/aln_ungapped tmp/16479300059278292880/aln_gapped tmp/16479300059278292880/aln --preserve-keys --take-larger-entry --threads 112 --compressed 0 -v 3 . [=================================================================] 1.60M 0s 217ms; [=================================================================] 1.60M 0s 385ms; Time for merging to aln: 0h 0m 1s 623ms; Time for processing: 0h 0m 3s 354ms; offsetalignment tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/aln tmp/16479300059278292880/aln_off --chain-alignments 0 --merge-query 1 --search-type 3 --threads 112 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 560ms; Writing results to: tmp/16479300059278292880/aln_off; [Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (802273); Invalid database read for id=4294967295, database index=tmp/16479300059278292880/input_step_redundancy.index; I",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:16867,load,load-mode,16867,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['load'],['load-mode']
Performance,"db nr_rep_seq_db tmp --tax-mapping-file /data/clustered_nr/nr_rep_seq_to_taxid.map -v 3 . MMseqs Version: 	2fad714b525f1975b62c2d2b5aff28274ad57466; NCBI tax dump directory	; Taxonomy mapping file 	/data/clustered_nr/nr_rep_seq_to_taxid.map; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	20; Verbosity 	3. Download taxdump.tar.gz. 02/01 11:29:59 [NOTICE] Downloading 1 item(s); [#b8b044 0B/0B CN:1 DL:0B] ; 02/01 11:30:01 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; [#b8b044 51MiB/61MiB(84%) CN:1 DL:10MiB] ; 02/01 11:30:08 [NOTICE] Download complete: tmp/taxdump.tar.gz. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; b8b044|OK | 9.1MiB/s|tmp/taxdump.tar.gz. Status Legend:; (OK):download completed.; Loading nodes file ... Done, got 2550743 nodes; Loading merged file ... Done, added 75930 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```; ## Context; I want to search some query sequences locally against a clustered version of the NR database. I downloaded the clustered database and taxonomy files (nr_cluster_taxid_formatted_final.tsv.gz, nr_rep_seq.fasta.gz) from [here](https://osf.io/tejwd/), which was created as per: https://research.arcadiascience.com/pub/resource-nr-clustering/release/3. I then processed the files like so:. ```; gunzip -c nr_cluster_taxid_formatted_final.tsv.gz | cut -f1,2 > nr_rep_seq_to_taxid.map; mmseqs createdb nr_rep_seq.fasta.gz nr_rep_seq_db; ```. After these completed successfully, I tried to create the taxdb as per the above:. ```; mmseqs createtaxdb nr_rep_seq_db tmp --tax-mapping-file '/data/clustered_nr/nr_rep_seq_to_taxid.map' -v 3; ```. But the job was killed. Questions:; * Was it likely killed because of exhausting my available RAM? ; - If so, is there a way to restrict it during taxdb creation? I tried out `--split-memory-limit 50G` ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/811:1670,Load,Loading,1670,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811,1,['Load'],['Loading']
Performance,"db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loading nodes file ... Done, got 6986 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```. the job was submitted with teh following batch script, including params:; ```#!/usr/bin/bash; #PBS -M bryan.brown@seattlechildrens.org; #PBS -m a; #PBS -l mem=700gb; #PBS -l nodes=1:ppn=40; #PBS -P a675a67f-9204-4f66-9785-891b95c7d3da; #PBS -q paidq; #PBS -o /home/bbrow6/script_output/job-mmseqs_easytax_050523.out; #PBS -e /home/bbrow6/script_error/job-mmseqs_easytax_050523.err. cd /home/bbrow6/taxonomy_stuffs; export DBs=/home/bbrow6/JGI/IMG_VR_2022_12_19_7.1/IMG_tax_db; export OTU_dir=/home/bbrow6/vaginal_virome/Run_021723/identified_viral_sequences/OTUs/geNomad/genomad_output_1000bps/clustered_spades_cross_assembly_contigs_gt1000bps_summary/. source activate mmseqs2; module load OpenMPI. mmseqs easy-taxonomy $OTU_dir/clustered_spades_cross_assembly_contigs_gt1000bps_virus.fna $DBs/IMG_tax_db vag_taxonomy_results_IMG tmp -e 1e-5 -s 6 --blacklist """" --tax-lineage 1; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:2093,Load,Loading,2093,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['Load'],['Loading']
Performance,"dd orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 3; Start sensitivity 4; Search iterations 3 [5/1999]; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter search_results/qdb db/uniref30_2103_db.idx search_results/tmp/12005814431969335264/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nuc; l:nucleotide.out -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 8 --split-mode 2 --split-memory-limit 0; -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kme; r-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 72 --compressed 0 -v 3. Index version: 16; Generated by: b768f48f0bd73688b6a68132159a97f7b6310f03; ScoreMatrix: VTML80.out; Query database size: 190 type: Aminoacid; Estimated memory consumption: 148G; Target database size: 29291635 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 96; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 190; Target db start 1 to 29291635; ^CTraceback (most recent call last): ] 37.57% 72 eta 0s; </pre>. I had to stop it as mmseqs took hours without progress. ## Context; I am quite puzzled what I should do to figure this out. ; The machine is located on our cluster, so there is enough disk space and memory.; I tried to check the process status, and it is always in the `D` status with 100-200% CPU usage ( based on `htop` outputs).; Not sure how I can speed things up at this ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517:3949,load,load-mode,3949,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517,1,['load'],['load-mode']
Performance,"de 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward frames 	1,2,3; > Reverse frames 	1,2,3; > Translation table 	1; > Translate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 446 type: Aminoacid; > Target split mode. Searching through 12 splits; > Estimated memory consumption: 91G; > Target database size: 230328648 type: Aminoacid; > Process prefiltering step 1 of 12; > ; > Index table k-mer threshold: 122 at k-mer size 7 ; > Index table: counting k-mers; > tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/blastp.sh : ligne 99 : 10291 Instruction non permise $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; > Error: Prefilter died. ## Context. TrEMBL installed using the mmseqs databases command. ## Your Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. Operating system and version:; Lin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/564:3228,load,load-mode,3228,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564,1,['load'],['load-mode']
Performance,"de.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================================] 417 0s 10ms; ==Time for merging to pref_rescore2: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 52ms; align DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore2 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 417 type: Aminoacid; Target database size: 417 type: Aminoacid; Calculation of alignments; [=================================================================] 417 0s 37ms; Time for merging to aln: 0h 0m 0s 2ms. 615 alignments calculated.; 418 sequence pairs passed the thresholds (0.679675 of overall calculated).; 1.002398 hits per query sequence.; Time for processing: 0h 0m 0s 81ms; clust DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/input_step_redundancy DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/aln DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: S",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:8406,load,load-mode,8406,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['load'],['load-mode']
Performance,"e for index table init: 0h 0m 5s 872ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 500; Target db start 1 to 20000; [=================================================================] 100.00% 500 2s 36ms. 296.967038 k-mers per position; 19293 DB matches per sequence; 0 overflows; 137 sequences passed prefiltering per query sequence; 113 median result list length; 1 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 162ms; Time for processing: 0h 0m 11s 426ms; align tmp/18110643841744502873/query tmp/18110643841744502873/target tmp/18110643841744502873/search_tmp/5440497380282616509/pref_0 tmp/18110643841744502873/result --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-cor r-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realig n-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 500 type: Aminoacid; Target database size: 20000 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 500 23s 390ms; Time for merging to result: 0h 0m 0s 44ms; 68875 alignments calculated; 12897 sequence pairs passed the thresholds (0.187252 of overall calculated); 25.794001 hits per query sequence; Time for processing: 0h 0m 24s 118ms; rmdb tmp/18110643841744502873/search_tmp/5440497380282616509/pref_0 -v 3. Time for processing: 0h 0m 0s 12ms; rmdb tmp/18110643841744502873/se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:6700,load,load-mode,6700,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['load'],['load-mode']
Performance,"e for processing: 0h 0m 0s 0ms; mvdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge_new tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; createsubdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/order_1 tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 -v 3 --subdb-mode 1 . Time for merging to input_1: 0h 0m 0s 267ms; Time for processing: 0h 0m 0s 790ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 6.0 . Query database size: 2271004 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 294ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 848ms; Index statistics; Entries: 5094244039; DB size: 38915 MB; Avg k-mer size: 3.979878; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 15s 901ms; Process prefiltering step 1 of 1. k-mer similarity ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:11802,load,load-mode,11802,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['load'],['load-mode']
Performance,"e free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...done.; (gdb) r; Starting program: mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen; Translation table 	1; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:1769,load,load-mode,1769,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628,1,['load'],['load-mode']
Performance,"e order of 3 to 4million nucleotide sequences. When I subset the sequences to about 200K sequences, easy-cluster runs to completion. ## Your Environment. I am running this on an AWS EC2 instance of type g4dn (128GB RAM). Here you go:. $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) Platinum 8259CL CPU @ 2.50GHz; CPU family: 6; Model: 85; Thread(s) per core: 2; Core(s) per socket: 16; Socket(s): 1; Stepping: 7; BogoMIPS: 4999.98; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht; syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid ap; erfmperf tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt; tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch pti fsgsbase; tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx avx512f avx512dq rdseed adx smap clflushopt clwb avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves ida arat pku ospke avx512_vnni; Virtualization features: ; Hypervisor vendor: KVM; Virtualization type: full; Caches (sum of all): ; L1d: 512 KiB (16 instances); L1i: 512 KiB (16 instances); L2: 16 MiB (16 instances); L3: 35.8 MiB (1 instance); NUMA: ; NUMA node(s): 1; NUMA node0 CPU(s): 0-31; Vulnerabilities: ; Gather data sampling: Unknown: Dependent on hypervisor status; Itlb multihit: KVM: Mitigation: VMX unsupported; L1tf: Mitigation; PTE Inversion; Mds: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Meltdown: Mitigation; PTI; Mmio stale data: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Retbleed: Vulnerable; Spec rstack overflow: Not affected; Spec store bypass: Vulnerable; Spectre v1: Mitigation; usercopy/swapgs barriers and __user pointer sanitization; Sp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822:3097,Cache,Caches,3097,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822,1,['Cache'],['Caches']
Performance,"e score and coverage; Query database size: 8408 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.41K 0s 647ms ; Time for merging to aln_0: 0h 0m 0s 8ms. 2061 alignments calculated.; 2061 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.245124 hits per query sequence.; Time for processing: 0h 0m 1s 887ms; createsubdb tmp/16138406286044646862/order_0 IP_DB/IP_DB tmp/16138406286044646862/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; prefilter tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:VTML40.out,aa:VTML40.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --spaced-kmer-pattern 11011101 --threads 28 --compressed 0 -v 3 -s 6.5 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Query database size: 8273 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 105; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8273; Target db start 1 to 756891; [=================================================================] 100.00% 8.27K 1s 888ms . 7.501658 k-mers per position; 14614 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 5 sequences passed prefiltering per query sequence; 0 median result list length; 7780 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 6ms; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:7448,load,load-mode,7448,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['load'],['load-mode']
Performance,"e size: 8408 type: Aminoacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8408; Target db start 1 to 756891; [=================================================================] 100.00% 8.41K 0s 981ms . 0.020249 k-mers per position; 72 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 8273 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 10ms; Time for processing: 0h 0m 11s 757ms; align IP_DB/IP_DB Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_0 tmp/16138406286044646862/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 8408 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.41K 0s 647ms ; Time for merging to aln_0: 0h 0m 0s 8ms. 2061 alignments calculated.; 2061 sequence pairs passed the thresholds (1.000000 of overall calculated).; 0.245124 hits per query sequence.; Time for processing: 0h 0m 1s 887ms; createsubdb tmp/16138406286044646862/order_0 IP_DB/IP_DB tmp/16138406286044646862/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 5ms; prefilter tmp/16138406286044646862/input_0 Cryptic_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:6109,load,load-mode,6109,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['load'],['load-mode']
Performance,e: Nucleotide; Target database size: 19825 type: Nucleotide; Calculation of alignments; [=================================================================] 100.00% 39.65K 11s 920ms; Time for merging to aln_gapped: 0h 1m 40s 131ms; 2105218 alignments calculated; 1620 sequence pairs passed the thresholds (0.000770 of overall calculated); 0.040858 hits per query sequence; Time for processing: 0h 5m 12s 297ms; concatdbs tmp97/17949317426677965256/aln_ungapped tmp97/17949317426677965256/aln_gapped tmp97/17949317426677965256/aln --preserve-keys --take-larger-entry --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 39.65K 0s 67ms; [=================================================================] 100.00% 39.65K 0s 98ms; Time for merging to aln: 0h 0m 0s 389ms; Time for processing: 0h 0m 0s 669ms; offsetalignment tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/query_seqs tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/aln tmp97/17949317426677965256/aln_off --chain-alignments 0 --merge-query 1 --search-type 3 --threads 20 --compressed 0 --db-load-mode 0 -v 3. Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 3ms; Writing results to: tmp97/17949317426677965256/aln_off; [=================================================================] 100.00% 51.99K 0s 153ms. Time for merging to aln_off: 0h 0m 0s 136ms; Time for processing: 0h 3m 20s 468ms; clust tmp97/17949317426677965256/input_step_redundancy tmp97/17949317426677965256/aln_off tmp97/17949317426677965256/clu --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Clustering mode: Set Cover; [=================================================================] 100.00% 19.83K 0s 53ms; Sort entries; Find missing connections; Found 49253 new conne,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:17500,load,load-mode,17500,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['load'],['load-mode']
Performance,e; 0 overflows; 0 queries produce too many hits (truncated result); 37 sequences passed prefiltering per query sequence; 39 median result list length; 472779 sequences with 0 size result lists; Time for merging to pref_0_tmp_7: 0h 0m 34s 449ms; Time for merging to pref_0_tmp_7_tmp: 0h 1m 30s 262ms; Merging 8 target splits to pref_0; Preparing offsets for merging: 0h 1m 18s 365ms; [=================================================================] 100.00% 55.24M 8m 35s 231ms; ```. ### htop screen grab; ![Screen Shot 2021-03-10 at 12 16 09 PM](https://user-images.githubusercontent.com/14060382/110706285-7c9db380-81ac-11eb-8e42-efd46778a3ce.png). ### gdb output on an S status prefilter process:; ```; gdb -p 9878. Attaching to process 9878. warning: process 9878 is a cloned process; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/mmseqs...(no debugging symbols found)...done.; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Load,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:32852,Load,Loaded,32852,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,"e; 1 overflows; 26270 sequences passed prefiltering per query sequence; 26950 median result list length; 0 sequences with 0 size result lists; Time for merging to pref: 0h 0m 0s 15ms; Time for processing: 0h 8m 44s 825ms; result2stats tmp/5233442526903138997/profileDB Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/pref tmp/5233442526903138997/pref_count.tsv --stat linecount --tsv --threads 16 --compressed 0 -v 3 . [=================================================================] 100.00% 75.23K 1s 543ms ; Time for merging to pref_count.tsv: 0h 0m 0s 20ms; Time for processing: 0h 0m 1s 810ms; align tmp/5233442526903138997/profileDB Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/pref tmp/5233442526903138997/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 1 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score and coverage; Query database size: 75233 type: Aminoacid; Target database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 41m 40s 149ms ; Time for merging to aln: 0h 0m 0s 11ms; 1976417423 alignments calculated; 672599536 sequence pairs passed the thresholds (0.340313 of overall calculated); 8940.219727 hits per query sequence; Time for processing: 1h 41m 41s 324ms; rmdb tmp/5233442526903138997/pref -v 3 . Time for processing: 0h 0m 0s 616ms; mvdb tmp/5233442526903138997/aln tmp/5233442526903138997/aln_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:6086,load,load-mode,6086,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['load'],['load-mode']
Performance,"e_cutoff/resultDB no_e_cutoff/resultDB_no_e_cutoff.m8 >&1 | tee -a no_e_cutoff/no_e_cutoff.out; rm -r tmp; mmseqs search queryDB targetDB 30/resultDB tmp -e 1e-30 --search-type 3 >&1 | tee 30/30.out; mmseqs convertalis queryDB targetDB 30/resultDB 30/resultDB_30.m8 >&1 | tee -a 30/30.out; rm -r tmp; mmseqs search queryDB targetDB 50/resultDB tmp -e 1e-50 --search-type 3 >&1 | tee 50/50.out; mmseqs convertalis queryDB targetDB 50/resultDB 50/resultDB_50.m8 >&1 | tee -a 50/50.out; ```. ## MMseqs Output (for bugs); The outputs are contained in the .zip above. ## Context; I'm fairly certain that the problem is being caused due to the fact that 1e-50 when convereted to float will become 0. Therefore the e value will be set to 0. This means that all results are filtered out of the alignment. If this is not fixable, it would at least be extremely helpful to have a strong warning message. It took me a day to break this all down and find out what the cause was. Filter with an e-value of 1e-50 is not uncommon. Especially during taxonomy matches (my actual goal) to for example perform QC on raw seq data. ## Your Environment; I installed using conda:; ```; # Name Version Build Channel; mmseqs2 12.113e3 h2d02072_2 bioconda; ```; The running server:; ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 256; On-line CPU(s) list: 0-254; Off-line CPU(s) list: 255; Thread(s) per core: 1; Core(s) per socket: 64; Socket(s): 2; NUMA node(s): 2; Vendor ID: AuthenticAMD; CPU family: 23; Model: 49; Model name: AMD EPYC 7702 64-Core Processor; Stepping: 0. NAME=""Ubuntu""; VERSION=""18.04.4 LTS (Bionic Beaver)""; ID=ubuntu; ID_LIKE=debian; PRETTY_NAME=""Ubuntu 18.04.4 LTS""; VERSION_ID=""18.04""; HOME_URL=""https://www.ubuntu.com/""; SUPPORT_URL=""https://help.ubuntu.com/""; BUG_REPORT_URL=""https://bugs.launchpad.net/ubuntu/""; PRIVACY_POLICY_URL=""https://www.ubuntu.com/legal/terms-and-policies/privacy-policy""; VERSION_CODENAME=bionic; UBUNTU_CODENAME=bionic; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/399:2026,perform,perform,2026,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399,1,['perform'],['perform']
Performance,easy-clust and MPI-mode scalability,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/331:24,scalab,scalability,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/331,1,['scalab'],['scalability']
Performance,"eb-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | rmdb /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/aln_merge -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | convertalis /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/result /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/alis_pdb_protein_sequence --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 0 --threads 2 --compressed 0 -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | [=================================================================] 1 0s 1ms; docker-compose-mmseqs-web-worker-1 | Time for merging to alis_pdb_protein_sequence: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 3ms; docker-compose-mmseqs-web-worker",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717:8615,load,load-mode,8615,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717,1,['load'],['load-mode']
Performance,"ed the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15-6f452; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Loaded as a module on a cluster.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: Unsure. I ran `lscpu` on a login node and got what is shown below, but the memory and CPUs that I had for the job were specified in the slurm job script shown above. ```; lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) CPU E5-2667 v4 @ 3.20GHz; CPU family: 6; Model: 79; Thread(s) per core: 2; Core(s) per socket: 8; Socket(s): 2; Stepping: 1; CPU(s) scaling MHz: 100%; CPU max MHz: 3200.0000; CPU min MHz: 1200.0000; BogoMIPS: 6384.78; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx; pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 d; s_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16; c rdrand lahf_lm abm 3dnowprefetch epb cat_l3 cdp_l3 invpcid_single intel_ppin ssbd rsb_ctxsw ibrs ibpb stibp tpr_shadow vnmi flexp; riority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm rdt_a rdseed adx smap intel_pt xsaveopt cqm_llc c; qm_occup_llc cqm_mbm_total cqm_mbm_local dtherm arat pln pts md_clear spec_ctrl intel_stibp flush_l1d; Virtualization features:; Virtualization: VT-x; Caches (sum of all):; L1d: 512 KiB (16 instances); L1i: 512 KiB (16 instances); L2: 4 MiB (16 instances); L3: 50 MiB (2 instances); NUMA:; NUMA node(s): 2; NUMA node0 CPU(s): 0-7,16-23; NUMA node1 CPU(s): 8-15,24-31; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838:3773,Cache,Caches,3773,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838,1,['Cache'],['Caches']
Performance,"ed the point about data size, though I do have a number of TB to work with. . Re. batching, is there a built in module to chunk up the query db or should I manually split my fasta and make seperate DBs? I assume `splitdb`?. Here is my current list of commands in hard coded format:. ```; # UniRef search ; mmseqs search queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res outdir/tmp --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Move profile; mmseqs mvdb outdir/tmp/latest/profile_1 outdir/prof_res; mmseqs lndb queryDB_h outdir/prof_res_h. # Expand and align UniRef results; mmseqs expandaln queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95 --db-load-mode 1 --threads 4. mmseqs align outdir/prof_res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp outdir/res_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter UniRef results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign outdir/res_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --threads 4 --max-seq-id 1.0 --filter-min-enable 100. # Convert UniRef results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign_filter outdir/uniref.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Environmental search; mmseqs search outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env outdir/tmp/env --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Expand and align environmental results; mmseqs expandaln outdir/prof_res /datasets/Uni",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:1109,load,load-mode,1109,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326,1,['load'],['load-mode']
Performance,"ed-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 31.32K 0s 42ms; Time for merging to pref_rescore2: 0h 0m 0s 90ms; Time for processing: 0h 0m 0s 772ms; align ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore2 ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 31321 type: Aminoacid; Target database size: 31321 type: Aminoacid; Calculation of alignments; [=================================================================] 31.32K 3s 713ms; Time for merging to aln: 0h 0m 0s 107ms; 53166 alignments calculated; 45707 sequence pairs passed the thresholds (0.859704 of overall calculated); 1.459308 hits per query sequence; Time for processing: 0h 0m 4s 203ms; clust ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/aln ./mmseqs_output",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:16249,load,load-mode,16249,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"edundancy --threads 50 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 764.94M 2m 3s 835ms; Time for merging to pref_filter2: 0h 26m 51s 419ms; Time for processing: 0h 44m 18s 340ms; align /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref_filter2 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 50 --compressed 0 -v 3 . Compute score and coverage; Query database size: 764944220 type: Nucleotide; Target database size: 764944220 type: Nucleotide; Calculation of alignments; [=================================================================] 764.94M 23m 36s 275ms; Time for merging to aln: 0h 32m 14s 887ms. 781315288 alignments calculated.; 765501793 sequence pairs passed the thresholds (0.979760 of overall calculated).; 1.000729 hits per query sequence.; Time for processing: 1h 9m 13s 720ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/aln /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:15065,load,load-mode,15065,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['load'],['load-mode']
Performance,"elevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, with available memory ranging from 100G to 2000G; support for AVX2/SSE all there (see attached cmake output); [cmake_out.txt](https://github.com/soedinglab/MMseqs2/files/10446744/cmake_out.txt). * Operating system and version:; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.9.2009 (Core); Release: 7.9.2009; Codename: Core. Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 152; On-line CPU(s) list: 0-151; Thread(s) per core: 2; Core(s) per socket: 19; Socket(s): 4; NUMA node(s): 4; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6138 CPU @ 2.00GHz; Stepping: 4; CPU MHz: 2000.000; BogoMIPS: 4000.00; Hypervisor vendor: KVM; Virtualization type: full; L1d cache: 32K; L1i cache: 32K; L2 cache: 4096K; L3 cache: 16384K; NUMA node0 CPU(s): 0-37; NUMA node1 CPU(s): 38-75; NUMA node2 CPU(s): 76-113; NUMA node3 CPU(s): 114-151; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:4412,cache,cache,4412,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,4,['cache'],['cache']
Performance,"eload --max-seqs 1000 --num-iterations 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	1000; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	3; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	0; Sets the MPI runner 	; Remove Temporary Files 	false. Tmp tmpC folder does not exist or is not a directory.; Created dir tmpC; Program call:; prefilter geneC.db genes.db tmpC/10139724895635470572/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 -",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:1085,perform,performs,1085,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['perform'],['performs']
Performance,"eload --max-seqs 1000 --num-iterations 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	1000; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	56; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	3; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	0; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; prefilter geneC.db genes.db tmpC/13630618462368123119/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:125424,perform,performs,125424,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['perform'],['performs']
Performance,"emory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . Database size: 440656032 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 440.66M 1m 58s 106ms; Sort kmer 0h 1m 9s 431ms; Sort by rep. sequence 0h 0m 39s 418ms; Time for fill: 0h 2m 31s 613ms; Time for merging to pref: 0h 0m 0s 1ms; Time for processing: 0h 9m 8s 726ms; rescorediagonal All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 56 --compressed 0 -v 3 . [=================================================================] 440.66M 7m 9s 976ms; Time for merging to pref_rescore1: 0h 2m 33s 403ms; Time for processing: 0h 11m 51s 610ms; clust All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore1 All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 56 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 1m 32s 562ms. Size of the sequence database: 440656032; Size of the alignment database: 440656032; Number of clusters: 35665237. Writing results 0h 0m 11s 300ms; Time for merging to pre_clust: 0h 0m 0s 0ms; Time for processing: 0h 2m 42s 666ms; createsubdb All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/order_redundancy All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:5820,load,load-mode,5820,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['load'],['load-mode']
Performance,"emory. PS: Y'all are ANGELS for keeping up with all the users and issues listed for mmseqs. Seriously grateful, hoping you have ample funding to keep the devs happy... . ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs easy-cluster contigs.fasta contigs99 contigs99.tmp --min-seq-id 0.99 -c 0.6 --cov-mode 1. in addition, i think these posts are also relevant ; https://github.com/soedinglab/MMseqs2/issues/617; https://github.com/soedinglab/MMseqs2/issues/608. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMseqs Version: 7.4e23d; Sub Matrix blosum62.out; Rescore mode 0; Remove hits by seq.id. and coverage false; E-value threshold 0.001; Coverage threshold 0.6; Coverage Mode 1; Seq. Id Threshold 0.99; Seq. Id. Mode 0; Include identical Seq. Id. false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Preload mode 0; Threads 128; Verbosity 3. Prefilter database: contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/pref; Query database: contigs99.tmp/13034246008736284953/input; Touch data file contigs99.tmp/13034246008736284953/input ... Done.; Target database: contigs99.tmp/13034246008736284953/input; Result database: contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/pref_rescore1; ...............................................; Done.; Time for merging files: 0h 0m 0s 679ms; Time for processing: 0h 0m 1s 529ms; Program call:; clust contigs99.tmp/13034246008736284953/input contigs99.tmp/13034246008736284953/clu_tmp/2990889066216221615/linclust/5258601894198672332/pref_rescore1 contigs99.tmp/13034246008736284953/clu_tmp/2990889066216; 221615/linclust/5258601894198672332/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 -v 3 . MMseqs Version",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/632:1371,perform,performs,1371,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632,1,['perform'],['performs']
Performance,"en 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db tmp/425628692068579862/linclust/13628666274102407548/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 10 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	10; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (795683200 byte) of total memory (365681560780 byte); Process file into 1 parts; Generate k-mers list 0; .......................................................",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:94913,perform,performs,94913,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['perform'],['performs']
Performance,"ence in the queryDB aginst a larger DB of amino acid sequences. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): home-brew; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: MMseqs2/13-45111; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; * Operating system and version:; * $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 40; On-line CPU(s) list: 0-39; Thread(s) per core: 1; Core(s) per socket: 20; Socket(s): 2; NUMA node(s): 2; Vendor ID: GenuineIntel; CPU family: 6; Model: 85; Model name: Intel(R) Xeon(R) Gold 6148 CPU @ 2.40GHz; Stepping: 4; CPU MHz: 2400.000; BogoMIPS: 4800.00; Virtualization: VT-x; L1d cache: 32K; L1i cache: 32K; L2 cache: 1024K; L3 cache: 28160K; NUMA node0 CPU(s): 0-19; NUMA node1 CPU(s): 20-39; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch epb cat_l3 cdp_l3 invpcid_single intel_ppin ssbd mba rsb_ctxsw ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts pku ospke md_clear spec_ctrl intel_stibp flush_l1d arch_capabilities",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/817:4630,cache,cache,4630,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/817,4,['cache'],['cache']
Performance,"enerate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 100 --compressed 0 -v 3 . [=================================================================] 773.45M 13m 49s 19ms; Time for merging to pref_rescore1: 0h 25m 43s 735ms; Time for processing: 0h 53m 14s 579ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref_rescore1 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 100 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 0m 42s 573ms. Size of the sequence database: 773451991; Size of the alignment database: 773451991; Number of clusters: 764944038. Writing results 0h 2m 46s 588ms; Time for merging to pre_clust: 0h 0m 0s 16ms; Time for processing: 0h 12m 8s 93ms; createsubdb /hwfssz1/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:2535,load,load-mode,2535,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['load'],['load-mode']
Performance,"ength 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Tmp /tmp/clu/ folder does not exist or is not a directory.; Created dir /tmp/clu/; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; panproteome.db /tmp/clu//9559457551393989073/clu_redundancy /tmp/clu//9559457551393989073/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 36 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescore-mode 0 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	36; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-v",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:21260,perform,performs,21260,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['perform'],['performs']
Performance,"eotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 278.90K 3m 30s 81ms; Time for merging to aln: 0h 0m 0s 79ms. 356498221 alignments calculated.; 350372623 sequence pairs passed the thresholds (0.982817 of overall calculated).; 1256.243652 hits per query sequence.; Time for processing: 0h 3m 35s 108ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 0s 344ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 278.90K 0s 550ms. Reading results.; [=================================================================] 278.90K 1s 198ms. Output database: /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap; [=================================================================] 69.22K 3s 47ms. Time for merging to aln_swap: 0h 0m 0s 21ms; Time for processing: 0h 0m 10s 409ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln -v 3 . Time for processing: 0h 0m 0s 938ms; mvdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 107ms; prefilter /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:7186,load,load-mode,7186,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['load'],['load-mode']
Performance,"ep1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 -",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:6044,load,load-mode,6044,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['load'],['load-mode']
Performance,"eq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 9.50M 1m 30s 166ms; Time for merging to pref_rescore1: 0h 0m 3s 976ms; Time for processing: 0h 1m 39s 656ms; clust DB tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 tmp/576731152808920235/linclust/1790908825406232727/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 . Clustering mode: Greedy Low Mem; Total time: 0h 0m 1s 66ms. Size of the sequence database: 9502826; Size of the alignment database: 9502826; Number of clusters: 8785102. Writing results 0h 0m 1s 200ms; Time for merging to pre_clust: 0h 0m 0s 5ms; Time for processing: 0h 0m 5s 962ms; createsubdb tmp/576731152808920235/linclust/1790908825406232727/order_redundancy DB tmp/576731152808920235/linclust/1790908825406232727/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 4ms; Time fo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:6060,load,load-mode,6060,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['load'],['load-mode']
Performance,"eqs search id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN /tmp/ --threads 40 -s 7.5 -a -e 1e-10 --alt-ali 1 &> allvsall.search.log ; mmseqs convertalis id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.tsv --threads 40 ; mmseqs extractalignedregion id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.SEQ --threads 40; mmseqs cluster pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ.CLU /tmp/ -e 1e-10 -c 0 -a -s 7.5 --threads 40 ; ```. But it fails in the last step with this message. ```; rescorediagonal pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 1e-10 -c 0.5 -a 1 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 204.52K 0s 215ms; Time for merging files: 0h 0m 0s 94ms; Time for processing: 0h 0m 0s 845ms; clust pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 /tmp//1456503536827778696/linclust/7100099902620488817/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Sequence db size != result db size; Error: Pre-clustering step died; Error: linclust died; ```. I think it is happening because of the number of files generated by the `extractalignedregion` module.; If it isn't, how do I get the aligned regions to use in a search? I'm trying to get aligned regions to cluster them to find possible domains in a set of protein. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/210:1319,load,load-mode,1319,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/210,1,['load'],['load-mode']
Performance,"eqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/first /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 24 -s 2 --split-memory-limit 80G --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1. prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 2.0. Query database size: 55235334 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 8s 472ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 5s 3ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:21741,load,load-mode,21741,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['load'],['load-mode']
Performance,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:11722,Perform,Performing,11722,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,25,"['Perform', 'optimiz']","['Performing', 'optimization']"
Performance,"er position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 582ms; swapdb tmp//7897776346521331899/seq_wrong_assigned_pref tmp//7897776346521331899/seq_wrong_assigned_pref_swaped --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 2 0s 2ms; Computing offsets.; [=================================================================] 100.00% 2 0s 4ms. Reading results.; [=================================================================] 100.00% 2 0s 3ms. Output database: tmp//7897776346521331899/seq_wrong_assigned_pref_swaped; [=================================================================] 100.00% 1 eta -. Time for merging to seq_wrong_assigned_pref_swaped: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 110ms; 47 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 126 type: Aminoacid; Target database size: 2 type: Aminoacid; Calculation of alignments; Time for merging to seq_wrong_assigned_pref_swaped_aln: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 7ms; filterdb tmp//7897776346521331899/seq_wrong_assigned_pref_swaped_aln tmp//7897776346521331899/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 16 --compressed 0 -v 3. Filtering using regular expression; mergedbs tmp//7897776346521331899/seq_seeds.merged tmp//7897776346521331899/clu_accepted_plus_wrong tmp//7897776346521331899/clu_accepted tmp//7897776346521331899/seq_wrong_assigned_pref_swaped_aln_ocol --merge-stop-empty 0 --compressed 0 -v 3. Merging t",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:30163,load,load-mode,30163,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['load'],['load-mode']
Performance,"er-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 100.00% 121.96M 5m 3s 965ms ; Time for merging to pref_rescore1: 0h 1m 26s 443ms; Time for processing: 0h 7m 19s 298ms; clust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 cluster_tmp/1127447206531551203/linclust/8761493678692146066/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 0m 53s 944ms. Size of the sequence database: 121964581; Size of the alignment database: 121964581; Number of clusters: 119253279. Writing results 0h 1m 14s 106ms; Time for merging to pre_clust: 0h 0m 55s 443ms; Time for processing: 0h 4m 11s 817ms; createsubdb cluster_tmp/1127447206531551203/linclust/8761493678692146066/order_redundancy ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:5278,load,load-mode,5278,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['load'],['load-mode']
Performance,"er-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; rescorediagonal DB_in DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 303 0s 28ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms===============> ] 94.37% 286 eta 0s; Time for processing: 0h 0m 0s 69ms; clust DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore1 tmp//10798751672030653963/linclust/5052420726377277994/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 303 0s 10ms; Sort entries; Find missing connections; Found 29 new connections.; Reconstruct initial order; [=================================================================] 100.00% 303 0s 9ms; Add missing connections; [=================================================================] 100.00% 303 0s 1ms. Time for read in: 0h 0m 0s 96ms; Total time: 0h 0m 0s 125ms. Size of the sequ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:4851,load,load-mode,4851,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['load'],['load-mode']
Performance,"erage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. align /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /scratch/jobs/56067190/14902988131097346952/pref_0 /tmp/56067190/queryT.fa.mmsq.outDB --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 100000 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score and coverage; Query database size: 10000 type: Aminoacid; Target database size: 10000 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 130 0s 27ms ; Time for merging to queryT.fa.mmsq.outDB: 0h 0m 0s 0ms. 1711 alignments calculated.; 1711 sequence pairs passed the thresholds (1.000000 of overall calculated).; 13.161538 hits per query sequence.; Time for processing: 0h 0m 0s 119ms; convertalis /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /tmp/56067190/queryT.fa.mmsq.m8 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:5017,load,load-mode,5017,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276,1,['load'],['load-mode']
Performance,"erage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_i",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:2391,load,load-mode,2391,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['load'],['load-mode']
Performance,"eredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 4ms; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 237; DB size: 488 MB; Avg k-mer size: 0.000004; Top 10 k-mers; LHNWEA	1; NCKEQA	1; VLRCRA	1; VTFMDC	1; RAHQKC	1; KRKVLC	1; ESKRNC	1; KRHLRC	1; GKKFSC	1; HYKKSC	1; Time for index table init: 0h 0m 0s 897ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=======================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:19006,load,load-mode,19006,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['load'],['load-mode']
Performance,"erlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter phrogs_mmseqs_db/phrogs_profile_db mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins.target_seq mmseqs_target_seq/[bacteria_of_interest]/tmp/15822818178659183495/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 7.0 . Query database size: 38880 type: Profile; Estimated memory consumption: 488M; Target database size: 125 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 125 0s 5ms; Index table: Masked residues: 124; Index table: fill; [=================================================================] 125 0s 6ms; Index statistics; Entries: 25103; DB size: 488 MB; Avg k-mer size: 0.000392; Top 10 k-mers; ALGLAA	2; TTGTAA	2; AAARKA	2; KASRKA	2; TEEALA	2; EDLLRA	2; INGNED	2; ASARED	2; GKHHRD	2; AELKAE	2; Time for index table init: 0h 0m 0s 511ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 38880; Target db start 1 to 125; [=mmseqs_targe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:5512,load,load-mode,5512,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,1,['load'],['load-mode']
Performance,"es calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 5; [=================================================================] 2 0s 0ms. 0.803571 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 8s 631ms; align tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 1 --compressed 0 -v 3 . Compute score only; Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; Calculation of alignments; [=================================================================] 2 0s 0ms; Time for merging to aln_0: 0h 0m 0s 0ms; 0 alignments calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:12791,load,load-mode,12791,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['load'],['load-mode']
Performance,"ess prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 218; Target db start 1 to 218; [=================================================================] 218 0s 55ms. 193.314206 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 763ms; align tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/pref_step2 tmpfiles//13298481167543164943/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 218 type: Aminoacid; Target database size: 218 type: Aminoacid; Calculation of alignments; [=================================================================] 218 0s 82ms; Time for merging to aln_step2: 0h 0m 0s 2ms. 358 alignments calculated.; 247 sequence pairs passed the thresholds (0.689944 of overall calculated).; 1.133028 hits per query sequence.; Time for processing: 0h 0m 0s 123ms; clust tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/aln_step2 tmpfiles//13298481167543164943/clu_step2 --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================] 218 0s 9ms; S",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:21491,load,load-mode,21491,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['load'],['load-mode']
Performance,"ess prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=================================================================] 100.00% 276 0s 19ms. 1.394095 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 477ms; align tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/pref_step0 tmp//10798751672030653963/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 44ms; Time for merging to aln_step0: 0h 0m 0s 7ms; 415 alignments calculated; 408 sequence pairs passed the thresholds (0.983133 of overall calculated); 1.478261 hits per query sequence; Time for processing: 0h 0m 0s 89ms; clust tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/aln_step0 tmp//10798751672030653963/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:13380,load,load-mode,13380,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['load'],['load-mode']
Performance,"essing: 0h 0m 0s 38ms; createdb seq.fasta tmp/15248047069833069253/target --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences. Time for merging to target_h: 0h 0m 0s 9ms; Time for merging to target: 0h 0m 0s 8ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 40ms; Create directory tmp/15248047069833069253/search_tmp; search tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/result tmp/15248047069833069253/search_tmp -a 1 --alignment-mode 3 -c 1 --cov-mode 1 -s 5.7 --remove-tmp-files 1 . prefilter tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 1 --cov-mode 1 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7 . Query database size: 1 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 1 eta -; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 1 eta -; Index statistics; Entries: 41; DB size: 488 MB; Avg k-mer size: 0.000001; Top 10 k-mers; DFVKIA	1; ATLTKA	1; SEEGLA	1; IWEEIC	1; PFDSKD	1; CLRHLD	1; DMAGTD	1; QNRWRE	1; GENRSE	1; LAKPDF	1; Time for index table init: 0h 0m 0s 778ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:5686,load,load-mode,5686,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,1,['load'],['load-mode']
Performance,"ession/tree/master/sacc_tax); 2. Run the commands above. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): e2510e8f6911e4340c62989aa9ba1b9c58e18d60; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.5.1, c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/320:1914,Load,Loading,1914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320,1,['Load'],['Loading']
Performance,est HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFile,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:2427,Perform,Performing,2427,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,2,['Perform'],['Performing']
Performance,"esubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_redundancy /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 9304 type: Aminoacid; Estimated memory consumption: 1007M; Target database size: 9304 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 9.30K 0s 119ms ; Index table: Masked residues: 99774; Index table: fill; [=================================================================] 100.00% 9.30K 0s 66ms ; Index statistics; Entries: 1733458; DB size: 498 MB; Avg k-mer size: 0.027085; Top 10 k-mers; IHDKNI 46; GPGGTL 34; LGGFVY 21; GQQIAR 19; HRLPLL 15; SCLWYL 15; RCKCRW 15; GGTHAY 15; GRGLAY 15; KSRRNY 15; Time for index table init: 0h 0m 0s 736ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9304; Targe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:16704,load,load-mode,16704,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"esult); docker-compose-mmseqs-web-worker-1 | 6 sequences passed prefiltering per query sequence; docker-compose-mmseqs-web-worker-1 | 6 median result list length; docker-compose-mmseqs-web-worker-1 | 0 sequences with 0 size result lists; docker-compose-mmseqs-web-worker-1 | Time for merging to pref_0: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 8ms; docker-compose-mmseqs-web-worker-1 | align /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/pref_0 /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/result --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 2 --compressed 0 -v 3 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Compute score, coverage and sequence identity; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Calculation of alignments; docker-compose-mmseqs-web-worker-1 | [=================================================================] 1 0s 2ms; docker-compose-mmseqs-web-worker-1 | Time for merging to result: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | ; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717:5576,load,load-mode,5576,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717,1,['load'],['load-mode']
Performance,"et database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 41m 40s 149ms ; Time for merging to aln: 0h 0m 0s 11ms; 1976417423 alignments calculated; 672599536 sequence pairs passed the thresholds (0.340313 of overall calculated); 8940.219727 hits per query sequence; Time for processing: 1h 41m 41s 324ms; rmdb tmp/5233442526903138997/pref -v 3 . Time for processing: 0h 0m 0s 616ms; mvdb tmp/5233442526903138997/aln tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 0ms; align /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_FAH_90 Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/aln_merged tmp/5233442526903138997/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score and coverage; Query database size: 75233 type: Aminoacid; Target database size: 75233 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 75.23K 1h 9m 57s 768ms ; Time for merging to aln: 0h 0m 0s 17ms; 672599536 alignments calculated; 672599536 sequence pairs passed the thresholds (1.000000 of overall calculated); 8940.219727 hits per query sequence; Time for processing: 1h 9m 58s 713ms; rmdb tmp/5233442526903138997/aln_merged -v 3 . Time for processing: 0h 0m 0s 73ms; swapresults /home/cahoonlab/Documents/01_FAD_FAH_90_DB/FAD_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:7546,load,load-mode,7546,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['load'],['load-mode']
Performance,"et result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0.8; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 2; Verbosity 3; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Single step clustering true; Cascaded clustering steps 3; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; /mnt/DB /mnt/tmp/4359821638123540538/clu_redundancy /mnt/tmp/4359821638123540538/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 2 -; -sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence leng",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:1942,perform,performs,1942,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['perform'],['performs']
Performance,"etSize@entry=1, queryLength=8032918, msaSeqs=0x7f20081f9a70, wg=<optimized out>, scoreBias=scoreBias@entry=0) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:163; #3 0x000000000065834b in _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:263; #4 0x00000000008ab97e in gomp_thread_start (); #5 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #6 0x0000000000964ff3 in clone (). Thread 19 (LWP 7919 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 18 (LWP 7918 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:12892,optimiz,optimized,12892,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"expected behavior when running mmseqs search and other features used in colabfold. But the low speed happens in the mmseqs step, so I think this is the place to ask. Unexpected observations:. 1. running mmseqs locally on our cluster is much slower than the responses we get from the colabfold server for equivalent inputs; 2. mmseqs search speed does not scale at all with added threads or added physical cores, for small inputs (1-2 sequences) - is this expected? Will it only speed up with large input count?. Welcoming any input! Many thanks!. ## Expected Behavior; Runtime of mmseqs2 for a given input similar to response time from the colabfold server. ## Current Behavior; Considerably slower. For a given input (~250 aa) the server gives a full result in 20-30s, paired + unpaired reads (so, including at least 1 search each against uniref30 and colabfold_envdb, plus a number of expandaln / align calls).; The local version takes 60-90 seconds to run just the initial mmseqs search against uniref30, when using vmtouch and db load mode 2, and ~300 seconds against colabfold_envdb. Db load mode 3 somewhat slower, db load mode 0 and 1 much slower as expected.; Index was created without splits. The mmseqs search step is timed after vmtouch and other preparations are complete. The runtime is independent of either thread count or number of cpus provided.; Splitting the target db index 2 4 8 or 16-fold and running in parallel with MPI does not speed it up either (slightly slows down). Placing the entire run directory fast SSD or RAM (/dev/shm) does not change the speed.; This happens with the docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLTWQGLIVPDNPPYDKG",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:1050,load,load,1050,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,1,['load'],['load']
Performance,"extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 20.00K 0s 10ms ; Time for merging to pref_rescore1: 0h 0m 0s 4ms==================>] 99.51% 19.90K eta 0s ; Time for processing: 0h 0m 0s 25ms; clust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 20.00K 0s 7ms ; Sort entries; Find missing connections; Found 12302 new connections.; Reconstruct initial order; [=================================================================] 100.00% 20.00K 0s 12ms ; Add missing connections; [==============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:7132,load,load-mode,7132,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"f:80' -e 0.1 --max-seqs 10000 ; prefilter input_script7/qdb uniref30_2302_db.idx input_script7/tmp1/1006494840762416450/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ### Without single-quotation; ```; createdb input.fasta input_script5/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 32ms; Time for merging to qdb: 0h 0m 0s 47ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 226ms; Create directory input_script5/tmp1; search input_script5/qdb uniref30_2302_db input_script5/res input_script5/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000 ; prefilter input_script5/qdb uniref30_2302_db.idx input_script5/tmp1/16308606893082150349/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:96,prof:80 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ## Context; I am trying to do a mmseqs2 colabfold search locally.; However, the local result doesn'",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/759:2387,load,load-mode,2387,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/759,1,['load'],['load-mode']
Performance,"f_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign""), base.joinpath(""res_exp_realign_filter""), ""--db-load-mode"",; str(db_load_mode), ""--qid"", ""0"", ""--qsc"", str(qsc), ""--diff"", ""0"", ""--threads"",; str(threads), ""--max-seq-id"", ""1.0"", ""--filter-min-enable"", ""100""]); run_mmseqs(mmseqs, [""result2msa"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign_filter""), base.joinpath(""uniref.a3m""), ""--msa-format-mode"",; ""6"", ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + filter_param); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign_filter"")]); ; if use_templates:; run_mmseqs(mmseqs, [""search"", base.joinpath(""prof_res""), dbbase.joinpath(template_db), base.joinpath(""res_pdb""),; base.joinpath(""tmp2""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads), ""-s"", ""7.5"", ""-a"", ""-e"", ""0.1"", ""--prefilter-mode"", str(prefilter_mode)]); run_mmseqs(mmseqs, [""convertalis"", base.joinpath(""prof_res""), dbbase.joinpath(f""{template_db}{dbSuffix3}""), base.joinpath(""res_pdb""),; base.joinpath(f""{template_db}""), ""--format-output"",; ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar"",; ""--db-output"", ""1"",; ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)]); run_mmseqs(mmseqs, [""unpackdb"", base.joinpath(f""{template_db}""), base.joinpath("".""), ""--unpack-name-mode"", ""0"", ""--unpack-suffix"", "".m8""]); run_mmseqs(mmseqs, [""rmdb"", base.joinpath(""res_pdb"")]); run_mmseqs(mmseqs, [""rmdb"", base.joinpath(f""{template_db}"")]). run_mmseqs(mmseqs, [""unpackdb"", base.joinpath(""final.a3m""), base.joinpath("".""), ""--unpack-name-mode"", ""0"", ""--unpack-suffix"", "".a3m""]); run_mmseqs(mmseqs, [""rmdb"", base.joinpath(""final.a3m"")]); run_mmseqs(mmseqs, [""rmdb"", base.joinpath(""uniref.a3m"")]); run_mmseqs(m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:5294,load,load-mode,5294,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['load'],['load-mode']
Performance,false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; indexdb nr.DB nr.DB --sub-mat blosum62.out -k 0 --comp-bias-corr 1 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 2 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --include-headers 1 --check-compatible 0 --split 0 --split-memory-limit 126000000 --threads 15 -v 3 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using Target split mode.; Needed memory (631391886584 byte) of total memory (129024000000 byte); WARNING: MMseqs processes needs more main memory than available.Increase the size of --split or set it to 0 to automatically optimize target database split.; Write VERSION (0); Write META (1); MaxSeqLength: 65535; KmerSize: 7; CompBiasCorr: 1; AlphabetSize: 21; Masked: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers1: 1; Headers2: 0; Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Index table: counting k-mers...; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ...................................................................................................	3 Mio. sequences processed; ...................................................................................................	4 Mio. sequences processed; ...................................................................................................	5 Mio. sequences processed; ..........................................,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/161:2233,optimiz,optimize,2233,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161,1,['optimiz'],['optimize']
Performance,"fasta; /home/username/project/my_local_DB; result_query_20230412_142303. createdb result_query_20230412_142303/query.fas result_query_20230412_142303/qdb --shuffle 0. search result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB result_query_20230412_142303/res result_query_20230412_142303/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 result_query_20230412_142303/tmp/18292001434761310910/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:2470,load,load-mode,2470,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['load'],['load-mode']
Performance,"filtering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1270615; Target db start 1 to 1270615; [=================================================================] 1.27M 2h 31m 44s 357ms. 1266.108246 k-mers per position; 3373560 DB matches per sequence; 626307 overflows; 21 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 601 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 657ms; Time for processing: 2h 32m 1s 811ms; align euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 euk72-90.profile_search2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 48 --compressed 0 -v 3 . Compute score and coverage; Query database size: 1270615 type: Profile; Target database size: 1270615 type: Aminoacid; Calculation of alignments; [=================================================================] 1.27M 33m 52s 295ms; Time for merging to euk72-90.profile_search2: 0h 0m 0s 650ms; 109004199 alignments calculated; 56769447 sequence pairs passed the thresholds (0.520801 of overall calculated); 44.678715 hits per query sequence; Time for processing: 0h 33m 55s 605ms; clust euk72-90.profile2 euk72-90.profile_search2 euk72-90.clust2 --threads 48 . MMseqs Version: 	aabc78c298f35cbc7a4136206c1a83adaa68695f; Cluster mode 	0; Max conne",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:10568,load,load-mode,10568,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['load'],['load-mode']
Performance,"for merging to query: 0h 0m 0s 35ms ; Database type: Aminoacid ; Time for processing: 0h 0m 0s 296ms ; Create directory tmp1/1465312676443513838/search_tmp ; search tmp1/1465312676443513838/query mmseqs/mmseqs_clu_rep_db/DB tmp1/1465312676443513838/result tmp1/1465312676443513838/search_tmp --alignment-mode 3 -e 1e-05 -s 6 --max-seqs 1000000 --num-iterations 5 --remove-tmp-files 1 ; ; prefilter tmp1/1465312676443513838/query mmseqs/mmseqs_clu_rep_db/DB.idx tmp1/1465312676443513838/search_tmp/12840997425876760019/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 6 -k 0 --target-search-mode 0 --k; -score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1000000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob; 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 . Index version: 16 ; Generated by: bb0a1b3569b9fe115f3bf63e5ba1da234748de23; ScoreMatrix: VTML80.out ; Query database size: 1000 type: Aminoacid; Estimated memory consumption: 101G; Target database size: 33611651 type: Aminoacid ; Process prefiltering step 1 of 1; ; k-mer similarity threshold: 118 ; Starting prefiltering scores calculation (step 1 of 1) ; Query db start 1 to 1000 ; Target db start 1 to 33611651 ; [=================================================================] 100.00% 1.00K 53s 841ms ; tmp1/1465312676443513838/search_tmp/12840997425876760019/blastpgp.sh: line 139: 3819000 Segmentation fault (core dumped) $RUNNER $PREF ""$QUERYDB"" ""$2"" ""$TMP_PATH/pref_$STEP"" ${TMP} ; Error: Prefilter died ; Error: Search died ; ```. ## Context. I thought maybe it's due to some special symbols in sequences in the failed fastas or larg",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/774:4664,load,load-mode,4664,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/774,1,['load'],['load-mode']
Performance,"frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 10 0s 71ms; Time for merging to orfs_aa_h: 0h 0m 0s 759ms; Time for merging to orfs_aa: 0h 0m 0s 726ms; Time for processing: 0h 0m 3s 54ms; prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 2310 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2310; Target db start 1 to 713072; [=================================================================] 100.00% 2.31K 0s 200ms. 8.191356 k-mers per position; 1212 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2301 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 0s 457ms; Time for processing: 0h 0m 1s 487ms; rescorediagonal tmp//15404483323509150572/taxonomy_tmp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:5303,load,load-mode,5303,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,1,['load'],['load-mode']
Performance,"frames tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 112 --compressed 0 -v 3 . [=================================================================] 802.27K 9s 504ms; Time for merging to query_seqs_h: 0h 0m 0s 682ms; Time for merging to query_seqs: 0h 0m 38s 582ms; Time for processing: 0h 0m 52s 983ms; prefilter tmp/16479300059278292880/query_seqs tmp/16479300059278292880/input_step_redundancy tmp/16479300059278292880/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.85 --cov-mode 0 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 112 --compressed 0 -v 3 . Query database size: 1604546 type: Nucleotide; Estimated memory consumption: 105G; Target database size: 802273 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 802.27K 1m 13s 891ms; Index table: Masked residues: 47468793; Index table: fill; [=================================================================] 802.27K 1m 7s 245ms; Index statistics; Entries: 14067080711; DB size: 88684 MB; Avg k-mer size: 13.100990; Top 10 k-mers; CCCTCGCAAGGTTAC	15119; TGGGATCCCCGGGGG	14445; GGTCGGGTCCCGTAG	12691; GGTATCCCCTCGAGG	12523; CATAAAAACCGAGGG	12298; TAAAAACCCCGGGGG	12038; TTTTATTTTATTCTT	9764; CTTAGGGGTTACGTT	9670; GTGTAATCCCTCGAG	9663; CTGAAACCATTCTCG	9602; Time for index table init: 0h 2m 35s 948ms; Process prefiltering step",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:12110,load,load-mode,12110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['load'],['load-mode']
Performance,"g k-mer size: 7.824739; Top 10 k-mers; DFEQLPH	65289; NVPGWSP	65148; FRYAFPS	64963; RYYVLGW	64817; VDRLNTQ	63812; WRLDFLN	62949; TVDGDFS	62609; NKTDFVQ	61859; QDWVQIP	61316; LDGAYVP	59471; Time for index table init: 0h 16m 9s 488ms; Time for processing: 0h 16m 22s 538ms; lcaalign /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Input /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 does not exist; Error: Alignment died; Error: First search died; Error: taxonomy died; Error: Search died; ```. Many thanks; Antonio. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 5daca424b162cc5fdf0b9cd151aebed86975cbf6; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Sel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/433:1946,load,load-mode,1946,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433,1,['load'],['load-mode']
Performance,"g start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner mpirun --pernode; Force restart using the latest tmp false; Remove Temporary Files false. [node218.cluster:134942] mca: base: component_find: unable to open /usr/mpi/gcc/openmpi-1.6.5/lib/openmpi/mca_mtl_psm: libpsm_infinipath.so.1: cannot open shared object file: No such file or directory (ignored); MPI Init...; Rank: 0 Size: 1; Program call:; prefilter query_dbs/1000562_0 mmseqs_dir/profile/Tenericutes_profile tmp/14349913440832127037/pref --sub-mat blosum62.out -s 5.7 -k 5 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 . MMseqs Version: da6c1a5a7be5d82719f796b85ce9cbacf9f2162c-MPI; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 5; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3. Initialising data structures...; Using 8 threads.; Could not find precomputed index. Compute index.; Touch data file mmseqs_dir/profile/Tenericutes_profile ... Done.; Substitution matrice",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521:3041,load,load-mode,3041,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521,1,['load'],['load-mode']
Performance,"g step 2; [=================================================================] 100.00% 276 0s 36ms; Write merged clustering; [=================================================================] 100.00% 303 0s 53ms; Time for merging to clu_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 67ms; createsubdb tmp//10798751672030653963/clu_redundancy DB_in tmp//10798751672030653963/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 3ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 0s 848ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:11597,load,load-mode,11597,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['load'],['load-mode']
Performance,"g/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c4 in gomp_team_barrier_wait_end (bar=0x2b0f2df68090, state=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:112; #3 0x00002aefd0d24711 in gomp_team_barrier_wait_final (bar=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/bar.c:136; #4 0x00002aefd0d226d5 in gomp_thread_start (xdata=<optimized out>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/team.c:124; #5 0x00002aefd1060dc5 in start_thread (arg=0x2aefd1c45700) at pthread_create.c:308; #6 0x00002aefd136bced in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:113; ```. ### Last files to be created in temp directory:; ```; ls -lh /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/tmp_taxonomy/7098371708549490008/tmp_hsp1/5245199439763618773/; total 506G; -rwx------ 1 dportik Domain Users 4.0K Mar 9 20:15 blastp.sh; -rw-r--r-- 1 dportik Domain Users 8.4G Mar 10 02:59 pref_0.0; -rw-r--r-- 1 dportik Domain Users 7.9G Mar 10 02:59 pref_0.1; -rw-r--r-- 1 dportik Domain Users 14G Mar 10 03:00 pref_0.10; -rw-r--r-- 1 dportik Domain Users 9.0G Mar 10 03:00 pref_0.11; -rw-r--r-- 1 dportik Domain Users 14G Mar 10 02:59 pref_0.12; -rw-r--r-- 1 dportik Domain Users 14G Mar 10 02:59 pref_0.13; -rw-r--r-- 1 dportik Domain Users 14G Ma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:36191,optimiz,optimized,36191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['optimiz'],['optimized']
Performance,"gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. align //app/database/sequences/sequences //app/database/sequences/sequences; B tmp/17369488595077942690/pref_0 //app/clustering/sequences/sequences_output --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq; -id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 21474; 83647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0; --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:2 --gap-ex; tend nucl:5,aa:0 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score and coverage; Query database size: 74 type: Aminoacid; Target database size: 74 type: Aminoacid; Calculation of alignments; terminate called after throwing an instance of 'Sls::error'; Aborted; Error: Alignment died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ad5837b3444728411e6c90f8c6ba9370f665c443; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): lastest Docker container; * Operating system and version: Windows 10 (Docker in git bash)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:5032,load,load-mode,5032,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,1,['load'],['load-mode']
Performance,"get database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.29M 2h 10m 35s 557ms; Time for merging to aln: 0h 0m 13s 903ms; 12490036390 alignments calculated; 12287580750 sequence pairs passed the thresholds (0.983791 of overall calculated); 803.726868 hits per query sequence; Time for processing: 2h 10m 56s 695ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref -v 3 . Time for processing: 0h 0m 8s 279ms; swapresults /tmp/tmp_MMSeq2/17595625152138277869/search_tmp/17414849138893322762/target_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1.79769e+308 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 15.29M 2m 38s 69ms. Reading results.; [=================================================================] 15.29M 13m 33s 98ms. Output database: /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap; [=================================================================] 69.22K 37m 16s 381ms. Time for merging to aln_swap: 0h 0m 1s 553ms; Time for processing: 0h 54m 56s 451ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln -v 3 . Time for processing: 0h 0m 9s 464ms; mergedbs /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged_new /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged /tmp/tmp_MMSeq2//175956251521382",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:16392,load,load-mode,16392,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['load'],['load-mode']
Performance,"gth 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Tmp /tmp/test folder does not exist or is not a directory.; Created dir /tmp/test; Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; panproteome.db /tmp/test/9465698490903227639/clu_redundancy /tmp/test/9465698490903227639/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescore-mode 0 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:1750,perform,performs,1750,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['perform'],['performs']
Performance,"h data file tcdb_query.nr.db ... Done.; > Query database type: Aminoacid; > Target database type: Aminoacid; > Calculation of Smith-Waterman alignments.; > Error: Alignment died; > . ## Context; I have two databases, they don't have equal entries but some sequences have 100% identity.; I try to search using --add-self-matches to cluster the result.; The search fails in alignment step when I use this options, without this options the search run well. . ## Your Environment. * Git commit used: 7ca117893675cdca309e2c9dfc444bbc7462e858; * Which MMseqs version was used: Linuxbrew; * Compiler and Cmake: cmake version 3.12.3; * Server specifications: 188Gb ; lscpu:; `; Architecture: x86_64 ; CPU op-mode(s): 32-bit, 64-bit ; Byte Order: Little Endian ; CPU(s): 36 ; On-line CPU(s) list: 0-35 ; Thread(s) per core: 2 ; Core(s) per socket: 18 ; Socket(s): 1 ; NUMA node(s): 1 ; Vendor ID: GenuineIntel ; CPU family: 6 ; Model: 85 ; Model name: Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz ; Stepping: 4 ; CPU MHz: 2680.333 ; BogoMIPS: 4600.00 ; Virtualization: VT-x ; L1d cache: 32K ; L1i cache: 32K ; L2 cache: 1024K ; L3 cache: 25344K ; NUMA node0 CPU(s): 0-35 ; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts pku ospke ; `",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:9414,cache,cache,9414,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,4,['cache'],['cache']
Performance,"h pbps.neighbors.DB pfam_profile result tmp -k 6 -s 7.5 --threads 10 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 10; Verbosity 3; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile tmp/457325247790757046/pref --sub-mat blosum62.out -s 7.5 -k 5 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189:1838,perform,performs,1838,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189,1,['perform'],['performs']
Performance,"hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:6061,perform,performs,6061,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['perform'],['performs']
Performance,"hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	1; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB clus",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:3069,load,load-mode,3069,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['load'],['load-mode']
Performance,"horse 0.743 311 79 0 1 311 3 314 4.03E-153 476; cand_290.fasta OR51V23_orang 0.750 303 75 0 9 312 10 313 1.43E-152 475. Blast Results:; [lvzvia@molgen3 test]$ grep 'cand_290' ../macaque_test/blast/macaque_test_vs_all.txt|grep '51V'; cand_290.fasta OR51V1B_dog 90.00 310 31 0 3 312 4 313 0.0 562; cand_290.fasta OR51V1B_cow 88.10 311 37 0 2 312 3 313 0.0 558; cand_290.fasta OR51V25_horse 88.39 310 36 0 2 311 3 312 0.0 556; cand_290.fasta OR51V27_horse 80.81 297 57 0 15 311 18 314 2e-176 488; cand_290.fasta OR51V20_dog 74.84 306 77 0 7 312 8 313 4e-172 478; cand_290.fasta OR51V22_cow 76.92 299 69 0 13 311 14 312 1e-171 476; cand_290.fasta OR51V21_dog 76.14 306 73 0 4 309 5 310 1e-171 476; cand_290.fasta OR51V1_cow 77.23 303 69 0 9 311 10 312 2e-171 475; cand_290.fasta OR51V1_horse 77.89 303 67 0 9 311 10 312 3e-171 475; cand_290.fasta OR51V19P_dog 74.51 306 78 0 7 312 8 313 3e-169 470; cand_290.fasta OR51V18P_dog 74.51 306 78 0 7 312 8 313 3e-169 470; cand_290.fasta OR51V1_chimp 76.85 311 72 0 2 312 10 320 2e-167 466; cand_290.fasta OR51V1_orang 75.00 312 78 0 1 312 7 318 5e-167 465; cand_290.fasta OR51V22_dog 78.79 297 63 0 15 311 16 312 9e-167 464. From: Martin Steinegger <notifications@github.com>; Sent: יום ב 12 אוקטובר 2020 10:46; To: soedinglab/MMseqs2 <MMseqs2@noreply.github.com>; Cc: Tsviya Olender <tsviya.olender@weizmann.ac.il>; Mention <mention@noreply.github.com>; Subject: Re: [soedinglab/MMseqs2] mmseqs vs blastp (#357). @TsviyaOlender<https://github.com/TsviyaOlender> Could you please provide a minimal example that we can reproduce this issue?; --search-type 2 performs a translated search, which is similar to blastx. To just perform a amino acid search use --search-type 1. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-706941832>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ADIHHAXFIMDTZHVYBW4U6O3SKKX2PANCNFSM4SIM43YQ>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-707026678:3140,perform,performs,3140,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-707026678,2,['perform'],"['perform', 'performs']"
Performance,how is index loaded into memory when performing multiple queries?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/527:13,load,loaded,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/527,2,"['load', 'perform']","['loaded', 'performing']"
Performance,"hread 0x7f7418e00700 (LWP 184984)]; [New Thread 0x7f74185ff700 (LWP 184985)]; [New Thread 0x7f7417dfe700 (LWP 184986)]; [New Thread 0x7f74175fd700 (LWP 184987)]; Computing offsets.; [=================================================================] 100.00% 15.11M 19m 14s 460ms ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Thread 1 ""mmseqs"" received signal SIGABRT, Aborted.; __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; 51	../sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt ; #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; #1 0x00007ffff7438921 in __GI_abort () at abort.c:79; #2 0x00007ffff7ef6892 in __gnu_cxx::__verbose_terminate_handler () at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x00007ffff7ef4f69 in __cxxabiv1::__terminate (handler=<optimized out>) at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #4 0x00007ffff7ef4fab in std::terminate () at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #5 0x00007ffff7ef5194 in __cxxabiv1::__cxa_throw (obj=0x555555ae5950, tinfo=0x7ffff7fad300 <typeinfo for std::bad_alloc>, dest=0x7ffff7ef3c64 <std::bad_alloc::~bad_alloc()>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/eh_throw.cc:95; #6 0x00007ffff7ef556a in operator new (sz=610460681573) at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/build/build-cc-gcc-final/x86_64-conda-linux-gnu/libstdc++-v3/include/bits/exception.h:63; #7 0x000055555581a6b7 in doswap(Parameters&, bo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:36445,optimiz,optimized,36445,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840,1,['optimiz'],['optimized']
Performance,"hreads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 0s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 0s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 0s; Rescore diagonals.; Program call:; pan.db pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Rescore mode 	0; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; Threads 	1; Verbosity 	3. Query file: pan.db; Target file: pan.db; Prefilter database: /tmp//589280515582180421/linclust/13903844144087712329/pref; Result database: /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore1; Done.; Time for merging files: 0 h 0 m 0 s; Time for diagonal calculation: 0 h 0 m 0s; Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore1 /tmp//589280515582180421/linclust/13903844144087712329/pre_clust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 1 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component	1000; Similarity type 	2; Threads 	1. Init...; Opening sequence database...; Opening alignment database...; done.; Clustering mode: Set Cover. Sort entries. Find missing connection",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:5673,perform,performs,5673,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['perform'],['performs']
Performance,"i-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 1.39K 0s 32ms; Time for merging to pref_rescore1_tmp_0: 0h 0m 0s 202ms========> ] 96.68% 1.34K eta 0s; Time for merging to pref_rescore1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 961ms; clust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 1.39K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [=================================================================] 100.00% 1.39K 0s 4ms; Add missing connections; [==================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:6021,load,load-mode,6021,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['load'],['load-mode']
Performance,"ide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 2 --min-seq-id 0.9 ; --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [================================================================] =74.93M 28m 19s 496ms; Time for merging to pref_rescore2: 0h 0m 51s 111ms; Time for processing: 0h 29m 44s 106ms; align tmp//16518381706844811497/linclust/1189823685496030198/input_step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/input_step_redu; ndancy tmp//16518381706844811497/linclust/1189823685496030198/pref_rescore2 tmp//16518381706844811497/linclust/1189823685496030198/aln --sub-mat 'aa:blos; um62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mo; de 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --; add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-sc; ore-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0; -v 3 . Compute score, coverage and sequence identity; Query database size: 74926526 type: Aminoacid; Target database size: 74926526 type: Aminoacid; Calculation of alignments; [=================================================================] 74.93M 3m 46s 500ms; Time for merging to aln: 0h 0m 54s 46ms; 92521862 alignments calculated; 75488967 sequence pairs passed the thresholds (0.815904 of overall calculated); 1.007507 hits per query sequence; Time for processing: 0h 5m 20s 32ms; clust tmp//16518381706844811497/linclust/1189823685496030198/input_step_redundancy tmp//16518381706844811497/linclust/1189823685496030198/aln tmp//165183; 81706844",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:9613,load,load-mode,9613,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['load'],['load-mode']
Performance,"ign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 3 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 2 --compressed 0 -v 3 . Index version: 15; Generated by: 73ce3b88754987122b4fc5e69a721beeecd677d0; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 12189231 type: Aminoacid; Target database size: 134985288 type: Aminoacid; Calculation of alignments; [] 3h 56m 20s 209ms; Time for merging files: 0h 0m 13s 891ms. 138555514 alignments calculated.; 54047267 sequence pairs passed the thresholds (0.390077 of overall calculated).; 4.434018 hits per query sequence.; Time for processing: 3h 56m 39s 222ms; offsetalignment mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB tmp/15531098257495296432/q_orfs /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx tmp/15531098257495296432/aln mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB --chain-alignments 0 --merge-query 1 --search-type 0 --threads 2 --compressed 0 --db-load-mode 3 -v 3 . Index version: 15; Generated by: 73ce3b88754987122b4fc5e69a721beeecd677d0; ScoreMatrix: VTML80.out; Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 1s 475ms; Writing results to: mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB; [] 5h 36m 42s 260ms. Time for merging files: 0h 0m 5s 864ms; Time for processing: 5h 37m 8s 744ms; convertalis mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB /home/dhwani/databases/mmseqsRefSeqCompleteDB mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB mmseqs-test-megan-out-280619/mmseqs-S1E3-S3-s1.m8 --db-load-mode 3 . MMseqs Version: 	73ce3b88754987122b4fc5e69a721beeecd677d0; Substitution matrix 	blosum62.out; Alignment format 	0; Format alignment output	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Translation table 	1; Gap open cost 	11; Gap extension cost 	1; Databa",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:7345,load,load-mode,7345,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,1,['load'],['load-mode']
Performance,"ignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. results per query 	200; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Force restart using the latest tmp 	false; Remove Temporary Files 	false; LCA Ranks 	kingdom:phylum:class:order:family:genus:species; Blacklisted Taxa 	12908,28384; LCA Mode 	3;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:2432,perform,performs,2432,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,1,['perform'],['performs']
Performance,"ile 	; Threads 	36; Verbosity 	3; trim the results to one column	false; Extract n lines 	0; Numerical comparison operator 	; Numerical comparison value 	0; Sort entries 	0; Include identical Seq. Id. 	false; join to DB 	; Swap fields of search results 	; Replace transitively 	. Filtering with a filter files.; ..Time for merging files: 0 h 0 m 0 s; Rescore diagonals.; Program call:; /tmp/clu//9559457551393989073/linclust/16641318581476709947/input_step_redundancy /tmp/clu//9559457551393989073/linclust/16641318581476709947/input_step_redundancy /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref_filter2 /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref_rescore2 --rescore-mode 1 --sub-mat blosum62.out --filter-hits -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Rescore mode 	1; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	true; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0; Include identical Seq. Id. 	false; Threads 	36; Verbosity 	3. Query file: /tmp/clu//9559457551393989073/linclust/16641318581476709947/input_step_redundancy; Target file: /tmp/clu//9559457551393989073/linclust/16641318581476709947/input_step_redundancy; Could not find any score per column for cov=0.8 seq.id=0; No hit will be filtered.; Prefilter database: /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref_filter2; Result database: /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref_rescore2; ..Done.; Time for merging files: 0 h 0 m 0 s; Time for diagonal calculation: 0 h 0 m 0s; Program call:; /tmp/clu//9559457551393989073/linclust/16641318581476709947/input_step_redundancy /tmp/clu//9559457551393989073/linclust/16641318581476709947/input_step_redundancy /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref_rescore2 /tmp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:29184,perform,performs,29184,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['perform'],['performs']
Performance,"ile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 2 (LWP 7870 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, c",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:28960,optimiz,optimized,28960,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"ile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 3 (LWP 7871 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 2 (LWP 7870 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:47",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:28031,optimiz,optimized,28031,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"ile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 4 (LWP 7872 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 3 (LWP 7871 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:47",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:27102,optimiz,optimized,27102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"ile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 5 (LWP 7905 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 4 (LWP 7872 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:47",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:26173,optimiz,optimized,26173,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"ile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 6 (LWP 7906 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 5 (LWP 7905 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:47",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:25244,optimiz,optimized,25244,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"ile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 7 (LWP 7907 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 6 (LWP 7906 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:47",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:24315,optimiz,optimized,24315,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"ile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 8 (LWP 7908 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 7 (LWP 7907 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:47",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:23386,optimiz,optimized,23386,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"ile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 9 (LWP 7909 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 8 (LWP 7908 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:47",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:22457,optimiz,optimized,22457,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"ils.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...(no debugging symbols found)...done.; (gdb) r; Starting program: /ebio/abt6_projects8/1001g_plus/code/Programs/miniconda3/envs/MMseqs2/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . MMseqs Version: 	12.113e3; Substitution matrix	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	3.40282e+38; Split memory limit 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	256; Compressed 	0; Preload mode 	0; Verbosity 	3. [New Thread 0x7fac58648700 (LWP 183880)]; [New Thread 0x7fac57e47700 (L",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:2050,load,load-mode,2050,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840,1,['load'],['load-mode']
Performance,"iltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 93ms; align tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 tmp_easy_search/6745795380167965363/result --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 104664 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 0ms; Time for merging to result: 0h 0m 0s 0ms; 300 alignments calculated; 300 sequence pairs passed the thresholds (1.000000 of overall calculated); 300.000000 hits per query sequence; Time for processing: 0h 0m 0s 18ms; convertalis tmp_easy_search/6745795380167965363/query target_D",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:6945,load,load-mode,6945,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['load'],['load-mode']
Performance,in-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 -s 7 . MMseqs Version: 	e5e41af867c566f3fffe479d30bfaa10de77517c; Sub Matrix 	blosum62.out; Sensitivity 	7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Profile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	1; Diagonal Scoring 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; Threads 	4; Verbosity 	3. Initialising data structures...; Using 4 threads. Use index DB.sk6; Index version: 774909490; KmerSize: 6; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Query database: DB(size=3); Target database: DB(size=3); Use kmer size 6 and split 1 using split mode 0; Needed memory (1381014708 byte) of total memory (8340369408 byte); Substitution matrices...; Time for init: 0 h 0 m 1s. Process prefiltering step 0 of 1. Index version: 774909490; KmerSize: 6; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Cache database ; Read IndexTable ... Done; k-mer similarity threshold: 77; k-mer match probability: 0. Starting prefiltering scores calculation (step 0 of 1); Query db start 0 to 3; Target db start 0 to 3. 6 k-mers per position.; 0 DB matches per sequence.; 0 Overflows .; 1 sequences passed prefiltering per query sequence.; Median result list size: 1; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 0 m 6s; Program call:; DB DB /.../tmp/pref_7 /.../tmp/aln_7 --sub-mat blosum62.out -a --alignment-mode 0 -e 0.001 --min-seq-id 0 -c 0 --max-seq-len 32000 --max-seqs 300 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --threads 4 -v 3 . MMseqs Version: 	e5e41af867c566f3fffe479d30bfaa10de77517c; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshol,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275107869:3770,Cache,Cache,3770,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275107869,1,['Cache'],['Cache']
Performance,"in/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 64; Verbosity 3; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0.9; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Alphabet size 21; Kmer per sequence 21; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner. Set cluster mode SET COVER.; Program call:; /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp/13736030087838361561/pref /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp/13736030087838361561/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 -e 0.001 -c 0.8 --cov-mode 0 --min-seq-id 0.9 --seq-id-mode 0 --sort-results 0 --threads 64 -v 3. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Sub Matrix blosum62.out; Rescore mode 0; Remove hits by seq.id",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120:3667,perform,performs,3667,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120,1,['perform'],['performs']
Performance,"index table init: 0h 0m 17s 833ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 25293; Target db start 1 to 3570076; [=================================================================] 100.00% 25.29K 6s 742ms. 239.997592 k-mers per position; 153539 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 299 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 41s 937ms; Time for processing: 0h 1m 44s 790ms; align ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 hmm_Uniref_search --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 25293 type: Aminoacid; Target database size: 3570076 type: Aminoacid; Calculation of alignments; mem_align could not allocate memory.; mem_align could not allocate memory.; free(): corrupted unsorted chunks; Segmentation fault (core dumped); Error: Alignment died. ## Context; Used the same db (hmmsearchDB) to cluster my sequences using mmseqs cluster. Now I'm trying to see what each cluster is comprised of by running a search against Uniref100. ## Your Environment. IBM SR650 ServerIntel Xeon Silver 4216, 2 CPUs, 2.1Ghz, 64 threads - 1TB DDR4 2933mhz RDIMM - HDD 12TB SAS. Tit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:5269,load,load-mode,5269,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,1,['load'],['load-mode']
Performance,index table init: 0h 36m 49s 783ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 40624; Target db start 1 to 119988216; [=================================================================] 100.00% 40.62K 15m 11s 627ms. 2741.257489 k-mers per position; 7347947 DB matches per sequence; 0 overflows; 199 sequences passed prefiltering per query sequence; 200 median result list length; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0h 15m 16s 157ms; Time for merging files: 0h 0m 0s 63ms; Time for processing: 0h 53m 6s 0ms; align clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/tmp_hsp1/2842639954524457022/pref_0 tmp_part-14/17957680840564044329/first --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3. Compute score and coverage; Query database size: 40624 type: Aminoacid; Target database size: 119988216 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 40.62K 1m 1s 328ms; Time for merging files: 0h 0m 0s 46ms. 8122882 alignments calculated.; 4578438 sequence pairs passed the thresholds (0.563647 of overall calculated).; 112.702789 hits per query sequence.; Time for processing: 0h 1m 18s 442ms; filterdb tmp_part-14/17957680840564044329/first tmp_part-14/17957680840564044329/top1 --extract-lines 1. Filtering by extracting the first 1 lines.; [=================================================================] 100.00% 40.62K 0s 978ms; Time for merging files: 0h 0m 0s 210ms; Time for processing: 0h 0m 1s 489m,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:6775,load,load-mode,6775,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,1,['load'],['load-mode']
Performance,"inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124**. I have created the Uniprotdb using mmseqs createdb command so the uniportdb.index file was created with it. ## Current Behavior; But I am seeing after giving expandaln command facing an issue saying the uniprotdb.index is generic type ; Input database ""./uniprot/uniprotdb.index"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; MMSEQS=""$1""; QUERY=""$2""; BASE=""$4""; DB1=""$5""; DB2=""$6""; DB3=""$7""; USE_ENV=""$8""; USE_TEMPLATES=""$9""; FILTER=""${10}""; TAXONOMY=""${11}""; M8OUT=""${12}""; EXPAND_EVAL=inf; ALIGN_EVAL=10; DIFF=3000; QSC=-20.0; MAX_ACCEPT=1000000; if [ ""${FILTER}"" = ""1"" ]; then; 0.1 was not used in benchmarks due to POSIX shell bug in line above; EXPAND_EVAL=0.1; ALIGN_EVAL=10; QSC=0.8; MAX_ACCEPT=100000; fi; export MMSEQS_CALL_DEPTH=1; SEARCH_PARAM=""--num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000""; FILTER_PARAM=""--filter-min-enable 1000 --diff ${DIFF} --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95""; EXPAND_PARAM=""--expansion-mode 0 -e ${EXPAND_EVAL} --expand-filter-clusters ${FILTER} --max-seq-id 0.95""; mkdir -p ""${BASE}""; mkdir -p ""${BASE}""; ""${MMSEQS}"" createdb ""${QUERY}"" ""${BASE}/qdb""; ""${MMSEQS}"" search ""${BASE}/qdb"" ""${DB1}"" ""${BASE}/res"" ""${BASE}/tmp1"" $SEARCH_PARAM; ""${MMSEQS}"" mvdb ""${BASE}/tmp1/latest/profile_1"" ""${BASE}/prof_res""; ""${MMSEQS}"" lndb ""${BASE}/qdb_h"" ""${BASE}/prof_res_h""; **mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124** ; # I got stucked at the above command. **next I am gonna do** ; ""${MMSEQS}"" align ""${BASE}/prof_res"" ""${DB1}.idx"" ""${BASE}/res_exp"" ""${BASE}/res_exp_realign"" --db-load-mode 2 -e ${AL",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:1227,load,load-mode,1227,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['load'],['load-mode']
Performance,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/567:5069,Perform,Performing,5069,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567,12,['Perform'],['Performing']
Performance,"ing file 	; Threads 	36; Verbosity 	3; trim the results to one column	false; Extract n lines 	0; Numerical comparison operator 	; Numerical comparison value 	0; Sort entries 	0; Include identical Seq. Id. 	false; join to DB 	; Swap fields of search results 	; Replace transitively 	. Filtering with a filter files.; ...Time for merging files: 0 h 0 m 0 s; Rescore diagonals.; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter2 /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore2 --rescore-mode 1 --sub-mat blosum62.out --filter-hits -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Rescore mode 	1; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	true; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; Threads 	10; Verbosity 	3. Query file: /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy; Target file: /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy; Prefilter database: /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter2; Result database: /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore2; ...Done.; Time for merging files: 0 h 0 m 0 s; Time for diagonal calculation: 0 h 0 m 0s; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore2 /tmp/test/9465698490903227639/linclust/831108043510341376/aln --sub-mat blosum62.out --alignment-mo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:9642,perform,performs,9642,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['perform'],['performs']
Performance,"ing prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [=================================================================] 100.00% 239 0s 20ms; [================================================================>] 99.58% 238 eta 0s; 20.876247 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 824ms; align tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/pref_step1 tmp//10798751672030653963/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 239 type: Aminoacid; Target database size: 239 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 239 0s 46ms; Time for merging to aln_step1: 0h 0m 0s 11ms; 308 alignments calculated; 270 sequence pairs passed the thresholds (0.876623 of overall calculated); 1.129707 hits per query sequence; Time for processing: 0h 0m 0s 78ms; clust tmp//10798751672030653963/input_step1 tmp//10798751672030653963/aln_step1 tmp//10798751672030653963/clu_step1 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [======================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:17577,load,load-mode,17577,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['load'],['load-mode']
Performance,ing works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFiles/microtar.dir/microtar.c.o; Linking C static library libmicrotar.a; [ 1%] Built target microtar; Scanning dependencies of target cacode; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 3%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; [ 3%] Built target cacode; Scanning dependencies of target alp; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 4%] Bui,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:2999,Perform,Performing,2999,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,4,['Perform'],['Performing']
Performance,ing: 0h 0m 0s 113ms; rmdb All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/input_step_redundancy_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_filter2 -v 3 . Time for processing: 0h 0m 0s 366ms; rmdb All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore2 -v 3 . Time for processing: 0h 0m 0s 306ms; rmdb All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/aln -v 3 . Time for processing: 0h 0m 0s 614ms; rmdb All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/clust -v 3 . Time for processing: 0h 0m 0s 192ms; createtsv All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu All_cohort_tmp//9948387321092861199/cluster.tsv --threads 56 -v 3 . Time for merging to cluster.tsv: 0h 3m 32s 713ms; Time for processing: 0h 6m 13s 976ms; result2repseq All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu All_cohort_tmp//9948387321092861199/clu_rep --db-load-mode 0 --compressed 0 --threads 56 -v 3 . [=================================================================] 30.25M 27s 445ms; Time for merging to clu_rep: 0h 0m 24s 792ms; Time for processing: 0h 1m 43s 420ms; result2flat All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_rep All_cohort_tmp//9948387321092861199/rep_seq.fasta --use-fasta-header -v 3 . Time for processing: 0h 2m 39s 415ms; createseqfiledb All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu All_cohort_tmp//9948387321092861199/clu_seqs --threads 56 -v 3 . [=================================================================] 30.25M 2m 3s 327ms; Time for merging to clu_seqs: 0h 0m 12s 135ms; Time for processing: 0h 4m 5s 680ms; result2flat All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/input All_cohort_tmp//994,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:12879,load,load-mode,12879,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['load'],['load-mode']
Performance,"init: 0h 0m 0s 985ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 221; Target db start 1 to 221; [=================================================================] 100.00% 221 0s 31ms. 190.836300 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 644ms; align tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//538598962955004214/pref_step2 tmp//538598962955004214/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 221 type: Aminoacid; Target database size: 221 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 221 0s 47ms; Time for merging to aln_step2: 0h 0m 0s 5ms; 364 alignments calculated; 254 sequence pairs passed the thresholds (0.697802 of overall calculated); 1.149321 hits per query sequence; Time for processing: 0h 0m 0s 94ms; clust tmp//538598962955004214/input_step2 tmp//538598962955004214/aln_step2 tmp//538598962955004214/clu_step2 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=============================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:21493,load,load-mode,21493,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['load'],['load-mode']
Performance,"int*, int, size_t, size_t)’: --param max-inline-insns-single limit reached [-Winline]; inline float CSProfile::computeContextScore(float ** context_weights,; ^; /galaxy/home/ksahlin/prefix/source/MMseqs2/src/commons/CSProfile.cpp:304:118: warning: called from here [-Winline]; float contextScore = computeContextScore(ctxLib->context_weights[k], seq->int_sequence, seq->L, i, center);; ^; [ 39%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/LibraryReader.cpp.o; [ 39%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Sequence.cpp.o; [ 40%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/SubstitutionMatrix.cpp.o; [ 40%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/tantan.cpp.o; [ 40%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/UniprotKB.cpp.o; [ 41%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o; [ 41%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/CacheFriendlyOperations.cpp.o; [ 42%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ExtendedSubstitutionMatrix.cpp.o; [ 42%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Indexer.cpp.o; [ 42%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/IndexBuilder.cpp.o; [ 43%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/KmerGenerator.cpp.o; [ 43%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Main.cpp.o; [ 44%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/Prefiltering.cpp.o; [ 44%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/PrefilteringIndexReader.cpp.o; [ 45%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/QueryMatcher.cpp.o; [ 45%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/ReducedMatrix.cpp.o; [ 45%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/prefiltering/SequenceLookup.cpp.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:11695,Cache,CacheFriendlyOperations,11695,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,1,['Cache'],['CacheFriendlyOperations']
Performance,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1767,Perform,Performing,1767,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,10,['Perform'],['Performing']
Performance,"ist length; 1350 sequences with 0 size result lists; Time for merging to pref_0_tmp_11: 0h 0m 0s 427ms; Time for merging to pref_0_tmp_11_tmp: 0h 0m 0s 867ms; Merging 12 target splits to pref_0; Preparing offsets for merging: 0h 0m 1s 151ms; [=================================================================] 1.30M 14s 938ms; Time for merging to pref_0: 0h 0m 0s 523ms; Time for merging target splits: 0h 0m 18s 286ms; Time for merging to pref_0_tmp: 0h 0m 6s 63ms; Time for processing: 11h 52m 0s 943ms; align /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 /tmp//2989869989197200687/search_tmp/6775691152365959592/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 32 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1298472 type: Nucleotide; Target database size: 90056195 type: Nucleotide; Calculation of alignments; [=================================================================] 1.30M 1h 24m 48s 423ms; Time for merging to aln: 0h 0m 0s 504ms; 662682155 alignments calculated; 492943101 sequence pairs passed the thresholds (0.743861 of overall calculated); 379.633209 hits per query sequence; Time for processing: 1h 27m 9s 264ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 746ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/aln_0 -v 3 . Time for proces",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:23368,load,load-mode,23368,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['load'],['load-mode']
Performance,"ist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:. cmake --version; cmake version 2.8.12.2; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; c++ --version; c++ (GCC) 6.2.1 20160916 (Red Hat 6.2.1-3). * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; cat /proc/cpuinfo. ```; processor	: 63; vendor_id	: GenuineIntel; cpu family	: 6; model		: 46; model name	: Intel(R) Xeon(R) CPU X7560 @ 2.27GHz; stepping	: 6; microcode	: 0xb; cpu MHz		: 1064.000; cache size	: 24576 KB; physical id	: 3; siblings	: 16; core id		: 11; cpu cores	: 8; apicid		: 119; initial apicid	: 119; fpu		: yes; fpu_exception	: yes; cpuid level	: 11; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 x2apic popcnt lahf_lm ida epb dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips	: 4527.83; clflush size	: 64; cache_alignment	: 64; address sizes	: 44 bits physical, 48 bits virtual; power management:; ```; free; ```; total used free shared buff/cache available; Mem: 528377212 3193792 142947764 9564 382235656 523907652; Swap: 0 0 0. ```; * Operating system and version:; cat /etc/redhat-release ; CentOS Linux release 7.3.1611 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31:6160,cache,cache,6160,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31,2,['cache'],['cache']
Performance,"ix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Min. alignment length 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 10; Compressed 0; Verbosity 3; Seed Substitution Matrix VTML80.out; Sensitivity 7.5; K-mer size 6; K-score 2147483647; Alphabet size 21; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Mask lower case residues 0; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Force restart using the latest tmp false; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile.idx tmp/6822607060114486044/pref --sub-mat blosum62.out --seed-sub-mat VTML80.ou",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:1208,perform,performs,1208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,1,['perform'],['performs']
Performance,"k 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescore-mode 0 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	36; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	36; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process fi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:22915,perform,performs,22915,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['perform'],['performs']
Performance,"k profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts true; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner ; Force restart with latest tmp false; Remove temporary files false. prefilter query_db/db /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/t_orfs_aa /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 589824T -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 96 --compressed 1 -v 3 -s 6.0 . Query database size: 727664 type: Aminoacid; Estimated memory consumption: 60T; Target database size: 13319670203 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; Error: Prefilter died; Error: Search step died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:3646,load,load-mode,3646,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510,1,['load'],['load-mode']
Performance,"k-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 172ms; rescorediagonal in/DB_in in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 164 0s 38ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms ] 25.77% 43 eta 0s; Time for processing: 0h 0m 0s 102ms; clust in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 164 0s 7ms; Sort entries; Find missing connections; Found 10 new connections.; Reconstruct initial order; [=================================================================] 100.00% 164 0s 6ms; Add missing connections; [=================================================================] 100.00% 164 0s 1ms. Time for read in: 0h 0m 0s 92ms; Total time: 0h 0m 0s 156ms. Size of the se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:21258,load,load-mode,21258,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"k-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 170ms; rescorediagonal in/DB_in in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 164 0s 28ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 84ms; clust in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 164 0s 12ms; Sort entries; Find missing connections; Found 10 new connections.; Reconstruct initial order; [=================================================================] 100.00% 164 0s 12ms; Add missing connections; [=================================================================] 100.00% 164 0s 2ms. Time for read in: 0h 0m 0s 114ms; Total time: 0h 0m 0s 153ms. Size of the sequence database: ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:5655,load,load-mode,5655,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"k-mer similarity threshold: 148; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 154; Target db start 1 to 154; [=================================================================] 100.00% 154 0s 46ms. 1.177440 k-mers per position; 3 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 845ms; align clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/pref_step0 clu/sim1_tmp/7842071913732967198/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 55ms; Time for merging to aln_step0: 0h 0m 0s 5ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 106ms; clust clu/sim1_tmp/7842071913732967198/input_step_redundancy clu/sim1_tmp/7842071913732967198/aln_step0 clu/sim1_tmp/7842071913732967198/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=======",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:14329,load,load-mode,14329,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"lculation (step 1 of 1); Query db start 1 to 882920; Target db start 1 to 311921; [=================================================================] 882.92K 1m 16s 342ms. 0.958336 k-mers per position; 27663 DB matches per sequence; 7 overflows; 0 queries produce too much hits (truncated result); 100 sequences passed prefiltering per query sequence; 63 median result list length; 205 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 481ms; Time for processing: 0h 2m 41s 423ms; align tmp/2226585588535541735/search_tmp/11167723337111805049/query_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/target_seqs_split tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 tmp/2226585588535541735/search_tmp/11167723337111805049/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --zdrop 40 --threads 64 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 882920 type: Nucleotide; Target database size: 311921 type: Nucleotide; Calculation of alignments; [=================================================================] 882.92K 5m 58s 443ms; Time for merging to aln: 0h 0m 0s 462ms. 88720927 alignments calculated.; 46477238 sequence pairs passed the thresholds (0.523859 of overall calculated).; 52.640373 hits per query sequence.; Time for processing: 0h 6m 3s 620ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 272ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/1116772",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339:8853,load,load-mode,8853,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339,1,['load'],['load-mode']
Performance,"le 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_1. align result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:3617,load,load-mode,3617,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance,"le 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_2. align result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_2 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:6591,load,load-mode,6591,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance,"le init: 0h 0m 0s 778ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 1; [=================================================================] 100.00% 1 eta -. 602.620000 k-mers per position; 41 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 740ms; align tmp/15248047069833069253/query tmp/15248047069833069253/target tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 tmp/15248047069833069253/result --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 1 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 1 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 1 eta -; Time for merging to result: 0h 0m 0s 0ms; 1 alignments calculated; 1 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 28ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp/6923777973734096903/aln_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/15248047069833069253/search_tmp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586:7468,load,load-mode,7468,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586,1,['load'],['load-mode']
Performance,"le.cpp:263; #4 0x00000000008ab97e in gomp_thread_start (); #5 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #6 0x0000000000964ff3 in clone (). Thread 19 (LWP 7919 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 18 (LWP 7918 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:13158,optimiz,optimized,13158,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 10 (LWP 7910 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 9 (LWP 7909 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:47",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:21528,optimiz,optimized,21528,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 11 (LWP 7911 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 10 (LWP 7910 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:20598,optimiz,optimized,20598,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 12 (LWP 7912 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 11 (LWP 7911 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:19668,optimiz,optimized,19668,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 13 (LWP 7913 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 12 (LWP 7912 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:18738,optimiz,optimized,18738,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 14 (LWP 7914 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 13 (LWP 7913 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:17808,optimiz,optimized,17808,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 15 (LWP 7915 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 14 (LWP 7914 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:16878,optimiz,optimized,16878,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 16 (LWP 7916 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 15 (LWP 7915 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:15948,optimiz,optimized,15948,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 17 (LWP 7917 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 16 (LWP 7916 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:15018,optimiz,optimized,15018,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 18 (LWP 7918 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 17 (LWP 7917 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:14088,optimiz,optimized,14088,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 21 (LWP 7921 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 20 (LWP 7920 ""mmseqs""):; #0 MathUtil::NormalizeTo1 (def_array=0x0, length=20, array=0x7ecabcfc9220) at /home/vsts/work/1/s/src/commons/MathUtil.h:248; #1 PSSMCalculator::computeContextSpecificWeights (this=this@entry=0x7f1ffd7dbc10, matchWeight=0x7ee3e2190040, wg=0x7ee412750010, Neff_M=<optimized out>, queryLength=queryLength@entry=8032918, setSize=setSize@entry=1, X=0x7f20081f9a70) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:533; #2 0x00000000006c9cd5 in PSSMCalculator::computePSSMFromMSA (this=this@entry=0x7f1ffd7dbc10, setSize=setSize@entry=1, queryLength=8032918, msaSeqs=0x7f20081f9a70, wg=<optimized out>, scoreBias=scoreBias@entry=0) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:163; #3 0x000000000065834b in _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:263; #4 0x00000000008ab97e in gomp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:11199,optimiz,optimized,11199,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 22 (LWP 7922 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 21 (LWP 7921 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:10269,optimiz,optimized,10269,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 23 (LWP 7923 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 22 (LWP 7922 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:9339,optimiz,optimized,9339,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 24 (LWP 7924 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 23 (LWP 7923 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:8409,optimiz,optimized,8409,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 25 (LWP 7925 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 24 (LWP 7924 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:7479,optimiz,optimized,7479,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 26 (LWP 7926 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 25 (LWP 7925 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:6549,optimiz,optimized,6549,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 27 (LWP 7927 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 26 (LWP 7926 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:5619,optimiz,optimized,5619,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 29 (LWP 7929 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; --Type <RET> for more, q to quit, c to continue without paging--c; #7 0x0000000000964ff3 in clone (). Thread 28 (LWP 7928 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x000000000",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:3692,optimiz,optimized,3692,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 29 (LWP 7929 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:2762,optimiz,optimized,2762,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"le.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 31 (LWP 7931 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:1832,optimiz,optimized,1832,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:4043,perform,performs,4043,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['perform'],['performs']
Performance,"leotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_0 result_20230419_115721/tmp/16464230693756166324/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --g",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:2020,load,load-mode,2020,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance,"lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:34514,Load,Loaded,34514,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,"lign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 1 type: Aminoacid; Target database size: 104664 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 0ms; Time for merging to result: 0h 0m 0s 0ms; 300 alignments calculated; 300 sequence pairs passed the thresholds (1.000000 of overall calculated); 300.000000 hits per query sequence; Time for processing: 0h 0m 0s 18ms; convertalis tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/result result.tsv --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --format-mode 4 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qseq,tseq --translation-table 1 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --db-output 0 --db-load-mode 0 --search-type 0 --threads 96 --compressed 0 -v 3 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; [=================================================================] 1 0s 0ms; Time for merging to result.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 9ms; ```. ## Context; * I would like to create a multiple sequence alignment FASTA file from the results from `easy-search` to use as input to other tools. ## Your Environment; * MMseqs2 Version: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32. * Operating system and version:. ```; uname -a; Linux lambda-servername 5.4.0-144-generic #161-Ubuntu SMP Fri Feb 3 14:49:04 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; ``",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:8171,load,load-mode,8171,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['load'],['load-mode']
Performance,"lion sequences and used in different projects already. As it seems, It may not be good idea to use db files from easy-cluster output. Do you think it is useful to create a new db (EBdb) out of easy-cluster output of the previous run, using rep_seq.fasta, and use EBdb as a template to compare newer sequences I want to cluster and finally update the EBdb to EBdb_new?. Intikhab. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 12:42; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module result2repseq. I think I fixed the performance issue in the latest commit cc7d7da<https://github.com/soedinglab/MMseqs2/commit/cc7d7da30ec779d6a2e886438f8295f59e2192f1>. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the easy- workflows yet. I'd recommend to stick to the basic commands as shown in the user guide. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63EW3N5Z32FV3JA5T3JDSEX37XANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337:1614,perform,performance,1614,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337,2,['perform'],['performance']
Performance,"list for 1 split; [=================================================================] 773.45M 3m 43s 762ms. Adjusted k-mer length 18; Sort kmer 0h 0m 8s 851ms; Sort by rep. sequence 0h 0m 0s 535ms; Merge splits ... Time for fill: 0h 0m 8s 279ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 2h 8m 37s 699ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 50 --compressed 0 -v 3 . [=================================================================] 773.45M 16m 6s 276ms; Time for merging to pref_rescore1: 0h 37m 19s 763ms; Time for processing: 1h 10m 8s 990ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref_rescore1 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pre_clust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 50 --compressed 0 -v 3 . Clustering mode: Greedy; Total time: 0h 1m 16s 664ms. Size of the sequence database: 773451991; Size of the alignment database: 773451991; Number of clusters: 764944220. Writing results 0h 3m 47s 47ms; Time for merging to pre_clust: 0h 0m 0s 32ms; Time for processing: 0h 15m 54s 367ms; createsubdb /hwfssz1/S",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:11693,load,load-mode,11693,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['load'],['load-mode']
Performance,"lter_param = [""--filter-msa"", str(filter), ""--filter-min-enable"", ""1000"", ""--diff"", str(diff), ""--qid"", ""0.0,0.2,0.4,0.6,0.8,1.0"", ""--qsc"", ""0"", ""--max-seq-id"", ""0.95"",]; expand_param = [""--expansion-mode"", ""0"", ""-e"", str(expand_eval), ""--expand-filter-clusters"", str(filter), ""--max-seq-id"", ""0.95"",]. run_mmseqs(mmseqs, [""search"", base.joinpath(""qdb""), dbbase.joinpath(uniref_db), base.joinpath(""res""), base.joinpath(""tmp""), ""--threads"", str(threads)] + search_param); #queryDB 데이터베이스에서 uniref30_2103_db 데이터베이스를 대상으로 검색을 수행합니다.; #검색 결과는 res 디렉토리에 저장되고, 임시 파일은 tmp 디렉토리에 저장됩니다; ; run_mmseqs(mmseqs, [""mvdb"", base.joinpath(""tmp/latest/profile_1""), base.joinpath(""prof_res"")]); run_mmseqs(mmseqs, [""lndb"", base.joinpath(""qdb_h""), base.joinpath(""prof_res_h"")]); ; run_mmseqs(mmseqs, [""expandaln"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""), base.joinpath(""res""), dbbase.joinpath(f""{uniref_db}{dbSuffix2}""), base.joinpath(""res_exp""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + expand_param); run_mmseqs(mmseqs, [""align"", base.joinpath(""prof_res""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""), base.joinpath(""res_exp""), base.joinpath(""res_exp_realign""), ""--db-load-mode"", str(db_load_mode), ""-e"", str(align_eval), ""--max-accept"", str(max_accept), ""--threads"", str(threads), ""--alt-ali"", ""10"", ""-a""]); run_mmseqs(mmseqs, [""filterresult"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign""), base.joinpath(""res_exp_realign_filter""), ""--db-load-mode"",; str(db_load_mode), ""--qid"", ""0"", ""--qsc"", str(qsc), ""--diff"", ""0"", ""--threads"",; str(threads), ""--max-seq-id"", ""1.0"", ""--filter-min-enable"", ""100""]); run_mmseqs(mmseqs, [""result2msa"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign_filter""), base.joinpath(""uniref.a3m""), ""--msa-format-mode"",; ""6"", ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + filter_param); subprocess.run([mmseqs] + [""rmdb""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:3851,load,load-mode,3851,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['load'],['load-mode']
Performance,"m 0s 29ms; Writing results to: /tmp//2989869989197200687/result; [=================================================================] 514.46K 49s 642ms. Time for merging to result: 0h 0m 0s 988ms; Time for processing: 0h 0m 58s 569ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 32 --compressed 0 -v 3 . [====terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; **Error: Convert Alignments died**. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 1f302134aa1c6c7c4e2b9da272fd26af33860780; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD EPYC 7742 64-Core Processor; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:26168,load,load-mode,26168,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['load'],['load-mode']
Performance,"mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_1. align result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_0 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_0 result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. rmdb result_20230419_115721/tmp/16464230693756166324/aln_0; rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_1. result2profile result_20230419_115721/tmp/16464230693756166324/profile_0 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/profile_1 --sub-mat 'aa:blosum62.out,nucl:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:4605,load,load-mode,4605,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance,"mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_20230419_115721/tmp/16464230693756166324/pref_tmp_2 result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. rmdb result_20230419_115721/tmp/16464230693756166324/pref_tmp_2. align result_20230419_115721/tmp/16464230693756166324/profile_1 /home/user/project/target_DB/target_DB.idx result_20230419_115721/tmp/16464230693756166324/pref_2 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_1 result_20230419_115721/res result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. expandaln result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/res /home/user/project/target_DB/target_DB.idx result_20230419_115721/res_exp --db-load-mode 2 --threads 96 --expansion-mode 0 -e 1.7976931348623157e+308 --expand-filter-clusters 1 --max-seq-id 0.95. Invalid database read for database data file",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:7579,load,load-mode,7579,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance,"mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 result_query_20230412_142303/tmp/18292001434761310910/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --ga",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:3145,load,load-mode,3145,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['load'],['load-mode']
Performance,"mat alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap threshold 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	0; Write lookup file 	0; Greedy best hits 	false. createdb query.fasta tmp/5560041094345909208/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 23ms; Time for merging to query: 0h 0m 0s 22ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 105ms; Create directory tmp/5560041094345909208/search_tmp; search tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/result tmp/5560041094345909208/search_tmp --alignment-mode 3 -s 7 --remove-tmp-files 1 . prefilter tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/search_tmp/4325254035791307643/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3 -s 7.0 . Query database size: 14 type: Aminoacid; Estimated memory consumption: 23G; Target database size: 6263739 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 6.26M 33s 798ms; Index table: Masked residues: 16716549; Index table: fill; [=================================================================; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:4255,load,load-mode,4255,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257,1,['load'],['load-mode']
Performance,"mber of cpus provided.; Splitting the target db index 2 4 8 or 16-fold and running in parallel with MPI does not speed it up either (slightly slows down). Placing the entire run directory fast SSD or RAM (/dev/shm) does not change the speed.; This happens with the docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLTWQGLIVPDNPPYDKGAFRIEINFPAEYPFKPPKITFKTKIYHPNIDEKGQVCLPVISAENWKPATKTDQVIQSLIALVNDPQPEHPLRADLAEEYSKDRKKFCKNAEEFTKKYGEKRPVD; >Ub; MQIFVKTLTGKTITLEVEPSDTIENVKAKIQDKEGIPPDQQRLIFAGKQLEDGRTLSDYNIQKESTLHLVLRLRGG; EOF; mkdir -p out/tmp; mmseqs createdb mmseqs_in.fasta out/qdb; vmtouch -ldw /path/to/database/uniref30_2202_db*idx*; mmseqs search out/qdb /path/to/database/uniref30_2202_db out/res out/tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. ```. ## MMseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:2433,load,load-mode,2433,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,1,['load'],['load-mode']
Performance,"me 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust 1831648_seqs.mmseqs2db tmp/16479300059278292880/clu_redundancy tmp/16479300059278292880/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:3028,load,load-mode,3028,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['load'],['load-mode']
Performance,"merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My questions are:; 1) How big of a RAM is required for the createindex step? Was that the reason a ""targetDB.idx"" was not generated?. 2) How much memory do I need for the indexed files to be fetched into memory (i.e. the""touchdb"" step)? Is it the total of all the ""targetDB.idx.0,1,2...14 "" files which will be over 1TB? Or is it something smaller?. 3) The log message for mmseqs touchdb step wasn't very helpful. Did it work or not?. Thank you,; Tongji",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/757:1510,load,load-mode,1510,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757,1,['load'],['load-mode']
Performance,mmseqs local runs considerably slower than mmseqs colabfold api regardless of optimizations,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:78,optimiz,optimizations,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,1,['optimiz'],['optimizations']
Performance,"mmseqs2 is installed with conda, but the cpu utilization is low when performing the retrieval library",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/752:69,perform,performing,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/752,2,['perform'],['performing']
Performance,"mp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 278.90K 0s 59ms; Time for merging to pref_count.tsv: 0h 0m 0s 61ms; Time for processing: 0h 0m 0s 594ms; align /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/profileDB /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 278905 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 278.90K 3m 30s 81ms; Time for merging to aln: 0h 0m 0s 79ms. 356498221 alignments calculated.; 350372623 sequence pairs passed the thresholds (0.982817 of overall calculated).; 1256.243652 hits per query sequence.; Time for processing: 0h 3m 35s 108ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 0s 344ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:5911,load,load-mode,5911,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['load'],['load-mode']
Performance,"mp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 10ms; Time for processing: 0h 0m 0s 41ms; filterdb /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter1 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 --filter-file /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/order_redundancy --threads 16 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 757 0s 4ms; Time for merging to pref_filter2: 0h 0m 0s 62ms; Time for processing: 0h 0m 0s 270ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/input_step_redundancy /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_filter2 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/linclust.sh: line 68: 88046 Segmentation fault: 11 $RUNNER ""$MMSEQS"" rescorediagonal ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/pref_rescore2"" ${UNGAPPED_ALN_PAR}; Error: Ungapped alignment step died; Error: linclust died; Error: Search died. Running on Mac intel i9 and mmseqs2 14-7e284. Thank you all for your help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:9734,load,load-mode,9734,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['load'],['load-mode']
Performance,mp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; [=================================================================] 100.00% 0.02 0s 6ms ] 0.00% 0.01 eta -; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 3ms; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 2ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 73ms; mmseqs-web-worker_1 | prefilter /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.7; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Using 24 threads.; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Estimated memory consumption 12072 MB; mmseqs-web-worker_1 | Target database size: 117752 type: Nucleotide; mmseqs-web-worker_1 | Query database size: 2 type: Nucleotide; mmseqs-web-worker_1 | Process prefiltering step 1 of 1; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | k-mer similarity threshold: 0; mmseqs-web-worker_1 | Starting prefiltering scores calculation (step 1 of 1); mmseqs-web-worker_1 | Query db start 1 to 2; mmseqs-web-worker_1 | Target db start 1 to 117752; [=========================================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:7330,load,load-mode,7330,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['load'],['load-mode']
Performance,"mp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 280.71K 0s 74ms; Time for merging to pref_count.tsv: 0h 0m 0s 77ms; Time for processing: 0h 0m 0s 753ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 280714 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 280.71K 3m 53s 720ms; Time for merging to aln: 0h 0m 0s 84ms; 356937745 alignments calculated; 350790208 sequence pairs passed the thresholds (0.982777 of overall calculated); 1249.635620 hits per query sequence; Time for processing: 0h 3m 57s 914ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref -v 3 . Time for processing: 0h 0m 0s 432ms; swapresults /tmp/tmp_MMSeq2/17595625152138277869/search_tmp/17414849138893322762/target_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:9348,load,load-mode,9348,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['load'],['load-mode']
Performance,"ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 146; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2328975; Target db start 1 to 13003941; [=================================================================] 2.33M 2m 23s 577ms. 183.593905 k-mers per position; 20689 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 54469 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 793ms; Time for processing: 0h 5m 46s 599ms; align tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_1 tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 2328975 type: Aminoacid; Target database size: 13003941 type: Aminoacid; Calculation of alignments; [=================================================================] 2.33M 3s 448ms; Time for merging to aln_1: 0h 0m 0s 794ms. 2274506 alignments calculated.; 57971 sequence pairs passed the thresholds (0.025487 of overall calculated).; 0.024891 hits per query sequence.; Time for processing: 0h 0m 6s 29ms; mergedbs tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge_new tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_0 tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_1 --compressed 0 -v 3 . Merging the r",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:9491,load,load-mode,9491,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['load'],['load-mode']
Performance,"ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=================================================================] 100.00% 276 0s 31ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 665ms; align tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/pref_step0 tmp//538598962955004214/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 276 0s 77ms; Time for merging to aln_step0: 0h 0m 0s 9ms; 413 alignments calculated; 406 sequence pairs passed the thresholds (0.983051 of overall calculated); 1.471014 hits per query sequence; Time for processing: 0h 0m 0s 121ms; clust tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/aln_step0 tmp//538598962955004214/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [==================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:13265,load,load-mode,13265,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['load'],['load-mode']
Performance,"mum coverage 	0; > Select n most diverse seqs 	1000; > Omit Consensus 	false; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward Frames 	1,2,3; > Reverse Frames 	1,2,3; > Translation Table 	1; > Use all table starts 	false; > Offset of numeric ids 	0; > Add Orf Stop 	false; > Number search iterations 	3; > Start sensitivity 	4; > Search steps 	1; > Run a seq-profile search in slice mode 	false; > Strand selection 	1; > Disk space limit 	0; > Sets the MPI runner 	; > Remove Temporary Files 	false; > ; > Program call:; > prefilter tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 --sub-mat blosum62.out -s 7.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 17702628 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 1 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 15 -v 3 ; > ; > MMseqs Version: 	7ca117893675cdca309e2c9dfc444bbc7462e858; > Sub Matrix 	blosum62.out; > Sensitivity 	7.5; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	65535; > Max. results per query 	17702628; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Split Memory Limit 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Exact k-mer matching 	0; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	true; > Spaced Kmer 	1; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Spaced k-mer pattern 	; > Threads 	15; > Verbosity 	3; > ; > Initialising data structures...; > Using 15 threads.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength: 65535; > KmerSize: ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:2941,load,load-mode,2941,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,1,['load'],['load-mode']
Performance,"my output mode 0. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. prefilter ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs.idx temp/9118733262229857306/tmp_hsp1/5064659849361391999/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --s; plit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7. Index version: 16; Generated by: 98c37f3c32b222632ada6011504380e91351276b; ScoreMatrix: VTML80.out; Query database size: 6282 type: Aminoacid; split was set to 5 but at least 8 are required. Please run with default paramerters; Target split mode. Searching through 5 splits; Estimated memory consumption: 138G; Process needs more than 113G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 213522593 type: Aminoacid; Process prefiltering step 1 of 5. k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 5); Query db start 1 to 6282; Target db start 1 to 42795128; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/278:4594,load,load-mode,4594,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278,2,"['load', 'optimiz']","['load-mode', 'optimize']"
Performance,"n environmental results; mmseqs expandaln outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp -e inf --expansion-mode 0 --db-load-mode 1 --threads 4. mmseqs align outdir/tmp/env/latest/profile_1 /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp outdir/res_env_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter environmental results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign outdir/res_env_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --max-seq-id 1.0 --threads 4 --filter-min-enable 100. # Convert environmental results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign_filter outdir/env.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Merge results; mmseqs mergedbs queryDB outdir/final.a3m outdir/uniref.a3m outdir/env.a3m. # Unpack results; mmseqs unpackdb outdir/final.a3m outdir --unpack-name-mode 0 --unpack-suffix .a3m; ```; As it stands, I am not converting from DB to a3m until after the filter (with diff =256) so maybe MSA sizes will be okay? Any thoughts?. What I changed from colabfold default, but plan to ""search"" over for MSA quality and run time: ; e_value (for search) -> 1e-4; max_seqs (for search) -> 25; max_accept (for alignment); diff -> (filter) 256. Thanks again. EDIT: Since I am doing an iterative search, would we expect an indexed and in memory target DB to speed up search? I am gathering no based on other conversations given that my use case is large batches and not single queries?. EDIT2: Re. the purpose - correct, I have no need to run structure prediction. The MSAs are going into MSATransfor",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:2981,load,load-mode,2981,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326,1,['load'],['load-mode']
Performance,"n length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	1; Search steps 	3; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Program call:; align /tmp/global2/nyoungblut/LLMGAG_27929269397/linclust/genes_db /ebio/abt3_projects/databases_no-backup/uniclust/uniclust90_2018_08_db /tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/tmp//15538800487586745695/tmp_hsp1/17220669400861690567/pref_1.000 /tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/tmp//15538800487586745695/tmp_hsp1/17220669400861690567/aln_1.000 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 -v 3. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id.	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3. Init data structures...; Compute score and coverage.; Touch data file /tmp/global2/nyoungblut/LLMGAG_27929269397/linclust/genes_db ... Done.; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust90_2018_08_db ... Done.; Query data",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032:6254,load,load-mode,6254,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032,1,['load'],['load-mode']
Performance,"n(R) Gold 6130 CPU @ 2.10GHz; stepping : 4; microcode : 0x2007006; cpu MHz : 2100.000; cache size : 22528 KB; physical id : 0; siblings : 32; core id : 0; cpu cores : 16; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 22; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts hwp hwp_act_window hwp_epp hwp_pkg_req pku ospke md_clear flush_l1d arch_capabilities; vmx flags : vnmi preemption_timer posted_intr invvpid ept_x_only ept_ad ept_1gb flexpriority apicv tsc_offset vtpr mtf vapic ept vpid unrestricted_guest vapic_reg vid ple shadow_vmcs pml ept_mode_based_exec tsc_scaling; bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit mmio_stale_data; bogomips : 4200.00; clflush size : 64; cache_alignment : 64; address sizes : 46 bits physical, 48 bits virtual; power management:. $ free; total used free shared buff/cache available; Mem: 791192240 20105804 63519620 33656 707566816 765066152; Swap: 0 0 0; ```; * Operating system and version:; ```; $ cat /etc/*release; DISTRIB_ID=Ubuntu; DISTRIB_RELEASE=22.04; DISTRIB_CODENAME=jammy; DISTRIB_DESCRIPTION=""Ubuntu 22.04.3 LTS""; PRETTY_NAME=""Ubuntu 22.04.3 LTS""; <truncated>; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/833:5865,cache,cache,5865,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/833,1,['cache'],['cache']
Performance,"ng results 0h 0m 0s 66ms; Time for merging to clu_step0: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 628ms; createsubdb ./mmseqs_output/tmp/5351426679731834765/clu_step0 ./mmseqs_output/tmp/5351426679731834765/input_step_redundancy ./mmseqs_output/tmp/5351426679731834765/input_step1 -v 3 --subdb-mode 1 . Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 7ms; prefilter ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 4 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 40 --compressed 0 -v 3 . Query database size: 10966 type: Aminoacid; Estimated memory consumption: 1010M; Target database size: 10966 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 10.97K 0s 560ms; Index table: Masked residues: 4144; Index table: fill; [=================================================================] 10.97K 0s 667ms; Index statistics; Entries: 1798942; DB size: 498 MB; Avg k-mer size: 0.028108; Top 10 k-mers; IGAALA 68; GPGGTL 58; GIVAPG 43; ALTAGI 42; ALGNGK 34; GLGNGK 32; ELPGVN 31; DLLDLP 29; GQQVAR 24; GEQVAR 23; Time for index table init: 0h 0m 2s 664ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10966; Target db start ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:24287,load,load-mode,24287,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"nment 0 --mask-profile 1 --e-profile 0.001 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --omit-consensus 0 --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --chain-alignments 0 --search-type 0 --num-iterations 1 --start-sens 4 --sens-steps 1 --slice-search 0 --strand 1 --disk-space-limit 0 --force-reuse 0 --remove-tmp-files 0. Program call:; prefilter clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/tmp_hsp1/12507882511714639255/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 200 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.7. Initialising data structures...; Using 24 threads.; Substitution matrices...; Substitution matrices...; Could not find precomputed index. Compute index.; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus ... Done.; Use kmer size 7 and split 1 using Target split mode.; Needed memory (83288349429 byte) of total memory (973956888576 byte); Target database: /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus(Size: 22555708); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0h 0m 14s 497ms; Query database: clusters_rep-seqs_db_14_30(size=40624); Process prefiltering step 1 of 1. Index table k-mer threshold: 122; Index table:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:5614,load,load-mode,5614,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,1,['load'],['load-mode']
Performance,"noacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 434ms; align profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 /tmp/15358673946673749737/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:5173,load,load-mode,5173,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['load'],['load-mode']
Performance,"nore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 1.81K 0s 7ms; Time for merging to pref_rescore1: 0h 0m 0s 64ms; Time for processing: 0h 0m 0s 310ms; clust /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Greedy Low Mem; Total time: 0h 0m 0s 13ms. Size of the sequence database: 1807; Size of the alignment database: 1807; Number of clusters: 757. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 49ms; createsubdb /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/order_redundancy /Volumes/s/tmp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:6786,load,load-mode,6786,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['load'],['load-mode']
Performance,"nsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; --Type <RET> for more, q to quit, c to continue without paging--c; #7 0x0000000000964ff3 in clone (). Thread 28 (LWP 7928 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 27 (LWP 7927 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:4423,optimiz,optimized,4423,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"nt Behavior; Error: Alignment died. All .index are empty. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb GENOMAD/genomad_output/Bins_summary/Bins_virus_proteins.faa PHROGS/target_seq ##This command seems to work. mmseqs search PHROGS/phrogs_mmseqs_db/phrogs_profile_db PHROGS/target_seq PHROGS/Bins_PHROGS PHROGS/tmp -s 7 . ##This command is very long and failed. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. align MMSEQ2_PHROGS/phrogs_mmseqs_db/phrogs_profile_db MMSEQ2_PHROGS/target_seq MMSEQ2_PHROGS/tmp/3583634493861447998/pref_0 MMSEQ2_PHROGS/Bins_PHROGS --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 64 --compressed 0 -v 3. Compute score and coverage; Query database size: 38880 type: Profile; Target database size: 75478 type: Aminoacid; Calculation of alignments; Score of forward/backward SW differ: 539 542. Q: 0 T: 31246. ] 0.00% 1 eta -; Start: Q: 6, T: 0. End: Q: 192, T 154; Score of forward/backward SW differ: 1751 1748. Q: 5165 T: 52236.; Start: Q: 2, T: 7. End: Q: 182, T 267; Error: Alignment died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit us",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/677:1193,load,load-mode,1193,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/677,1,['load'],['load-mode']
Performance,"o ""word""...; Reading symbols from mmseqs...done.; (gdb) r; Starting program: mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen; Translation table 	1; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Database output 	false; Preload mode 	0; Search type 	3; Threads 	16; Compressed 	0; Verbosity 	3. [New Thread 0x155554aca700 (LWP 28907)]; [New Thread 0x1555548c9700 (LWP 28908)]; [New Thread 0x1555546c8700 (LWP 28909)]; [New Thread 0x1554ea593700 (LWP 28921)]; [New Thread 0x1554ea392700 (LWP 28922)]; [New Thread 0x1554ea191700 (LWP 28923)]; [New Thread 0x1554e9f90700 (LWP 28924)]; [New Thread 0x15549ceb2700 (LWP 28925)]; [New Thread 0x15549ccb1700 (LWP 28926)]; [New Thread 0x15549cab0700 (LWP 28927)]; [New Thread 0x15549c8a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:2357,load,load-mode,2357,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628,1,['load'],['load-mode']
Performance,"o 6712; [=================================================================] 100.00% 6.71K 0s 701ms . 36.614229 k-mers per position; 788 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 4 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 802ms; align /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 8 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 6712 type: Aminoacid; Target database size: 6712 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 6.71K 0s 264ms ; Time for merging to aln_step1: 0h 0m 0s 1ms; 13873 alignments calculated; 8509 sequence pairs passed the thresholds (0.613350 of overall calculated); 1.267729 hits per query sequence; Time for processing: 0h 0m 0s 270ms; clust /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/aln_step1 /tmp/mydir/757478791580079562",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:23620,load,load-mode,23620,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"oacid; Estimated memory consumption: 40G; Target database size: 756891 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 105; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8273; Target db start 1 to 756891; [=================================================================] 100.00% 8.27K 1s 888ms . 7.501658 k-mers per position; 14614 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 5 sequences passed prefiltering per query sequence; 0 median result list length; 7780 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 6ms; Time for processing: 0h 0m 23s 645ms; align tmp/16138406286044646862/input_0 Cryptic_DB/Cryptic_DB.idx tmp/16138406286044646862/pref_1 tmp/16138406286044646862/aln_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e inf --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 20 --gap-extend 3 --zdrop 40 --threads 28 --compressed 0 -v 3 . Index version: 16; Generated by: 12.113e3; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 8273 type: Aminoacid; Target database size: 756891 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 8.27K 1s 879ms ; Time for merging to aln_1: 0h 0m 0s 9ms. 41734 alignments calculated.; 41734 sequence pairs passed the thresholds (1.000000 of overall calculated).; 5.044603 hits per query sequence.; Time for processing: 0h 0m 5s 83ms; mergedbs IP_DB/IP_DB tmp/16138406286044646862/aln_merge_new tmp/16138406286044646862/aln_0 tmp/16138406286044646862/aln_1 --compressed 0 -v 3 . Merging the results to tmp/16138406286044646862/aln_merge_new; Time for merging to aln_merge_new",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:8771,load,load-mode,8771,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['load'],['load-mode']
Performance,"oaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; #1 do_wait (addr=addr@entry=0x2b0f2df68094, val=val@entry=8); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67; #2 0x00002aefd0d246c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:34685,Load,Loaded,34685,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,obacteriota; ```. Each job was given 24 threads with 30Gb per thread (720Gb total) - more is possible. ; As there are 24 files and I used 24 threads - I would assume that the error lies somewhere in how the data is put back together?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb sampleX_scaffolds.fasta sampleX_DB; mmseqs taxonomy sampleX_DB /home/mmseqs2/NR/NR sampleX_mmseqs_taxonomy.txt sampleX_temp --tax-lineage 1 --orf-filter 1 --threads 24 --split-memory-limit 500G; ```. ## MMseqs Output (for bugs); [mmseqs.29360353.out.txt](https://github.com/soedinglab/MMseqs2/files/13532025/mmseqs.29360353.out.txt); [mmseqs.29360398.out.txt](https://github.com/soedinglab/MMseqs2/files/13532026/mmseqs.29360398.out.txt). ## Context; Trying to classify metagenomic contigs for kingdom binning. . ## Your Environment; * Git commit used : MMseqs2 Version: 15.6f452; * Which MMseqs version was used: conda; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; free -m; total used free shared buff/cache available; Mem: 256830 27571 113148 2175 116109 223713; Swap: 131071 9427 121644; ```. ```; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 invpcid_single ssbd mba ibrs ibpb stibp ibrs_enhanced fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm rdt_a avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb intel_pt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local split_lock_detect wbnoinvd dtherm arat pln pts hwp hwp_act_window hwp_pkg_req avx512vbmi umi,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/786:2881,cache,cache,2881,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/786,1,['cache'],['cache']
Performance,"ode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_20230419_115721/tmp/16464230693756166324/profile_1 result_20230419_115721/res result_20230419_115721/tmp/16464230693756166324/aln_1 result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. rmdb result_20230419_115721/tmp/16464230693756166324/aln_tmp_2. expandaln result_20230419_115721/qdb /home/user/project/target_DB/target_DB.idx result_20230419_115721/res /home/user/project/target_DB/target_DB.idx result_20230419_115721/res_exp --db-load-mode 2 --threads 96 --expansion-mode 0 -e 1.7976931348623157e+308 --expand-filter-clusters 1 --max-seq-id 0.95. Invalid database read for database data file=/home/user/project/target_DB/target_DB.idx, database index=/home/user/project/target_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. ## MMseqs Output (for bugs); [MMseqs output](https://gist.github.com/bchodkowski-vir/a144575014463748bfed089df6a8c03a). ## Context; I wish to run `colabfold_search` on my own database via `--db1 'target_DB'`. `colabfold_search` works fine with `--db1 'uniref30_2103_db'`. Number of sequences in `query.fasta`: 1; ```; egrep -c '^>' query.fasta; 1. wc -l result_20230419_115721/qdb; 1 result_20230419_115721/qdb; ```. Number of sequences in `target_DB.fasta`: 104664; ```; egrep -c '^>' target_DB.fasta; 104664. wc -l target_DB; 104664 target_DB; ```. Number of sequences in resulting database `res`: 1011; ```; wc -l result_20230419_115721/res; 1011 result_20230419_115721/res; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:8325,load,load-mode,8325,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,1,['load'],['load-mode']
Performance,"ode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 25.00K 0s 11ms ; Time for merging to pref_rescore1: 0h 0m 0s 8ms==================>] 99.34% 24.84K eta 0s ; Time for processing: 0h 0m 0s 48ms; clust experiments/small.mm.db experiments/tmp//6404161245249296443/pref_rescore1 experiments/tmp//6404161245249296443/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 25.00K 0s 9ms ; Sort entries; Find missing connections; Found 597 new connections.; Reconstruct initial order; [=================================================================] 100.00% 25.00K 0s 17ms ; Add missing connections; [=================================================================] 100.00% 25.00K 0s 1ms . Time for read in: 0h 0m 0s 42ms; Total time: 0h 0m 0s 47ms. Size of the",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:5979,load,load-mode,5979,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['load'],['load-mode']
Performance,"ode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3 . [=================================================================] 177.98K 0s 684ms; Time for merging to q_orfs_aa_h: 0h 0m 0s 101ms; Time for merging to q_orfs_aa: 0h 0m 0s 105ms; Time for processing: 0h 0m 1s 79ms; prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:4551,load,load-mode,4551,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['load'],['load-mode']
Performance,"oduce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 25ms; Time for processing: 0h 0m 1s 533ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to aln_step1: 0h 0m 0s 4ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 17ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:26188,load,load-mode,26188,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['load'],['load-mode']
Performance,"of prefilter, rescorediagonal is executed, some merge steps are executed, new tmp directories are created, and the program dies partway through the second round of prefilter. ## Steps to Reproduce (for bugs); Downloaded the UniRef90 database with wget:; `wget https://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref90/uniref90.fasta.gz`. Decompressed with gunzip, then ran createdb:; `mmseqs createdb uniref90.fasta uniref90`; ; Augmented with taxonomic information (used -db-mode 0 because createbintaxonomy kept crashing as well):; `mmseqs createtaxdb uniref90 tmp --tax-db-mode 0`. Created database for my query sequences:; `mmseqs createdb KLEB_PO07_megahit.fasta KLEB_PO07_megahitDB`. Ran mmseqs taxonomy on cluster with slurm script:; ```; #!/usr/bin/env bash. #SBATCH --job-name=KLEB_PO07_mmseqs; #SBATCH --cpus-per-task=32; #SBATCH --mem=150G; #SBATCH --time=0-3:00; #SBATCH --output=KLEB_PO07_mmseqs.log; #SBATCH --error=KLEB_PO07_mmseqs.err. module load mmseqs2/15-6f452; taxDB=/home/sdwork/scratch/metagenomics/uniref_db/uniref90. mmseqs taxonomy KLEB_PO07_megahitDB $taxDB KLEB_PO07_megahit_result tmp; ```. ## MMseqs Output (for bugs); [Full output can be found in this gist.](https://gist.github.com/sean-workman/531e9d5fc73635dee8c000f9da137fe0). I also see this output in my error file:; `tmp/1193166584733320518/tmp_taxonomy/17149912652888480377/tmp_hsp1/10699950925961740214/blastp.sh: line 135: 8379 Bus error (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""`. ## Context; I created metagenomic assemblies using megahit and metaSPAdes. I am trying to get MMseqs2 working to do taxonomic classification. I am running on Digital Research Alliance of Canada clusters. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15-6f452; * Which MMseqs version was used (",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838:1118,load,load,1118,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838,1,['load'],['load']
Performance,"ogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target split mode. Searching through 4 splits; Estimated memory consumption: 149G; Target database size: 152631149 type: Aminoacid; Process prefiltering step 1 of 4. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 38.15M 2m 48s 107ms; Index table: Masked residues: 98253761; Index table: fill; [=================================================================Floating point exception (core dumped); Error: Prefilter died; Error: First search died; Error: taxonomy died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs V",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/473:1976,load,load-mode,1976,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473,1,['load'],['load-mode']
Performance,"okup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: b4c1bc7cf89bc0bd577c5a9d3c1f7bedc1f74152; * Which MMseqs version: f5b588be54de35876eff90f3694b67e1d00856ef; * Server specifications: Intel(R) ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:4496,load,load-mode,4496,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['load'],['load-mode']
Performance,"ompiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/casser",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:1198,Perform,Performing,1198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,6,['Perform'],['Performing']
Performance,"on-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124** ; # I got stucked at the above command. **next I am gonna do** ; ""${MMSEQS}"" align ""${BASE}/prof_res"" ""${DB1}.idx"" ""${BASE}/res_exp"" ""${BASE}/res_exp_realign"" --db-load-mode 2 -e ${ALIGN_EVAL} --max-accept ${MAX_ACCEPT} --alt-ali 10 -a; ""${MMSEQS}"" filterresult ""${BASE}/qdb"" ""${DB1}.idx"" ""${BASE}/res_exp_realign"" ""${BASE}/res_exp_realign_filter"" --db-load-mode 2 --qid 0 --qsc $QSC --diff 0 --max-seq-id 1.0 --filter-min-enable 100. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; $ time mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124; expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124 . MMseqs Version: 	GITDIR-NOTFOUND; Expansion mode 	0; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Max sequence length 	65535; Score bias 	0; Compositional bias 	1; Compositional bias 	1; E-value threshold 	inf; Seq. id. threshold 	0; Coverage threshold 	0; Coverage mode 	0; Pseudo count mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Expand filter clusters 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.95; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	2; Compressed 	0; Threads 	124; Verbosity 	3. Input database ""./uniprot/uniprotdb.index"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid. ## Context; trying to get the mmseqs out in the MSA format so we c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:2914,load,load-mode,2914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['load'],['load-mode']
Performance,"op 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:2647,load,load-mode,2647,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['load'],['load-mode']
Performance,"or. The first two commands result in two different databases:. `wc -l test1`; 15447 test1. `wc -l test2`; 32 test2. The third command runs without issuing any warning (it effectively does nothing to the database). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1. Download a small NCBI-like taxonomy database **swissProtSomeClasses** from [here](https://github.com/soedinglab/metaeuk-regression/tree/master/sacc_tax); 2. Run the commands above. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The stri",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/320:1444,Load,Loading,1444,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320,1,['Load'],['Loading']
Performance,"or; Run mmseq search with an array of jobs. ## Current Behavior; As a test, I began with an array of 5 jobs only. 2 of them failed with a different error message. When I run them alone, they work. This behaviour is similar to the issue #239 . ## Steps to Reproduce (for bugs); `sarray -J mmseq --mail-type=ARRAY_TASKS,FAIL commandMMseqs --%=5`; where commandMMseqs contains:; `sbatch command_mmseq2_model.sbatch GCA_018105865.1 GCA_901001135.2` ; `sbatch command_mmseq2_model.sbatch GCA_009193005.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_905160935.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_019095985.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_001703475.1 GCA_901001135.2`. command_mmseq2_model.sbatch contains:; ```; #!/bin/bash; #; #SBATCH -N 1 # nombre de nœuds; #SBATCH -c 20 # nombre de cœurs sur ce meme noeud; #SBATCH --mem 50G # mémoire vive pour l'ensemble des cœurs; #SBATCH -J mmseq. module load system/Miniconda3-4.7.10 ; module load bioinfo/mmseqs2-v13.45111. mmseqs search copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out tmp -s 5.7 --search-type 3 --threads 20 --max-seqs 50 ; mmseqs filterdb mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit --extract-lines 1 ; mmseqs convertalis copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.*[0-9]* &; awk '{if ($3>=0.75 && $4>=300 && $12>=200) print $0}' mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab > mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab.filtered; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; ```. ## MMseqs Output (for bugs); One job fails with `Could not de",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/607:1012,load,load,1012,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/607,1,['load'],['load']
Performance,"osity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (this=this@entry=0x7fffffffd290, __position=__position@entry=...); at /usr/include/c++/9/bits/vector.tcc:440; #11 0x000000000060c68b in std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/666:2303,optimiz,optimized,2303,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666,1,['optimiz'],['optimized']
Performance,"otation; ```; createdb input.fasta input_script7/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 31ms; Time for merging to qdb: 0h 0m 0s 31ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 145ms; Create directory input_script7/tmp1; search input_script7/qdb uniref30_2302_db input_script7/res input_script7/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000 ; prefilter input_script7/qdb uniref30_2302_db.idx input_script7/tmp1/1006494840762416450/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ### Without single-quotation; ```; createdb input.fasta input_script5/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 32ms; Time for merging to qdb: 0h 0m 0s 47ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 226ms; Create directory input_script5/tmp1; search input_script5/qdb uniref30_2302_db input_script5/res input_script5/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000 ; prefilter input_script5/qdb uniref30_2302_db.idx input_script5/tmp1/16308606893082150349/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:96,prof:80 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-b",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/759:1870,load,load-mode,1870,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/759,1,['load'],['load-mode']
Performance,"otide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 \; > --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 \; > --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. MMseqs Version: 	a6cab565c98376623e82c3a04d186219d4c2f10c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	1e-05; Mask profile 	1; Profile E-value threshold 	1e-05; Compositional bias 	1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Pseudo count a 	0; Pseudo count b 	1.5; Preload mode 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	8; Compressed 	0; Verbosity 	3. Query database size: 1151 type: Aminoacid; Target database size: 41195879 type: Aminoacid; ================================================================= ] 46.43% 535 eta 0s; ==71239==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61a0000233e0 at pc 0x55c61d242cd7 bp 0x7fc0f27db1b0 sp 0x7fc0f27db1a0; WRITE of size 1 at 0x61a0000233e0 thread T3;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:1485,load,load-mode,1485,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245,1,['load'],['load-mode']
Performance,"ou may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 of overall calculated).; 1.097190 hits per query sequence.; Time for merging to aln: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 84ms; clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compresse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:11775,load,load-mode,11775,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['load'],['load-mode']
Performance,"ould I remove the whole github repo for a clean installation or is this compilation error something that was introduced in the commit?; See log below. ```; [ksahlin@desmond build]$ cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; -- The CXX compiler identification is GNU 4.9.2; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /galaxy/home/ksahlin/prefix/source/MMseqs2; -- Project Directory: /galaxy/home/ksahlin/prefix/source/MMseqs2; -- Compiler is GNU ; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.1 extensions, using flags: -march=native -msse4.1 -mfpmath=sse; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB work",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:915,Perform,Performing,915,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,21,"['Perform', 'optimiz']","['Performing', 'optimization']"
Performance,"ov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 149ms; rescorediagonal artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 136 0s 18ms; Time for merging to pref_rescore1: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 48ms; clust artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore1 tmp//7897776346521331899/linclust/17269245559208916342/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 136 0s 1ms; Sort entries; Find missing connections; Found 9 new connections.; Reconstruct initial order; [=================================================================] 100.00% 136 0s 2ms; Add missing connections; [=================================================================] 100.00% 136 0s 0ms. Time for read in: 0h 0m 0s 30ms; Total time: 0h 0m 0s 33ms. Size of the sequence database: 136;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:4969,load,load-mode,4969,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['load'],['load-mode']
Performance,"p pseudo count 10; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Create directory tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1; search BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/first tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1 --alignment-mode 1 -e 0.0001 --max-rejected 5 --max-accept 30 --threads 36 -s 3 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1. prefilter BH193L-2_S20/BH193L-2_S20_database NR tmp_BH193L-2_S20/16497043801801069335/tmp_hsp1/10054445979770264072/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 36 --compressed 0 -v 3 -s 3.0. Query database size: 355695 type: Aminoacid; Estimated memory consumption: 2T; Target database size: 532633656 type: Aminoacid; Index table k-mer threshold: 152 at k-mer size 7; Index table: counting k-mers. ```. Thank you.; Best,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/678:4482,load,load-mode,4482,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678,1,['load'],['load-mode']
Performance,"p/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 15.29M 1s 717ms; Time for merging to pref_count.tsv: 0h 0m 4s 684ms; Time for processing: 0h 0m 14s 46ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 15288254 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.29M 2h 10m 35s 557ms; Time for merging to aln: 0h 0m 13s 903ms; 12490036390 alignments calculated; 12287580750 sequence pairs passed the thresholds (0.983791 of overall calculated); 803.726868 hits per query sequence; Time for processing: 2h 10m 56s 695ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref -v 3 . Time for processing: 0h 0m 8s 279ms; swapresults /tmp/tmp_MMSeq2/17595625152138277869/search_tmp/17414849138893322",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:15035,load,load-mode,15035,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['load'],['load-mode']
Performance,"p/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 23.55M 2s 494ms; Time for merging to pref_count.tsv: 0h 0m 8s 27ms; Time for processing: 0h 0m 21s 772ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 23551830 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [===============================Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.200; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.166; free(): corrupted unsorted chunks; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.241; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.167; Can not write to ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:21695,load,load-mode,21695,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['load'],['load-mode']
Performance,"p/3198441352783276465/input tmp/3198441352783276465/clu tmp/3198441352783276465/clu_tmp --max-seqs 20 -c 0 --cov-mode 5 --spaced-kmer-mode 1 --threads 24 --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --cluster-mode 1 --cluster-reassign 1 --remove-tmp-files 1 . Set cluster sensitivity to -s 1.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusteringSet cluster iterations to 1; linclust tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/clu_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 5 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjus",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:4978,load,load-mode,4978,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['load'],['load-mode']
Performance,"p/9700814981231218113/search_tmp/10627605686170015473/search/input_2 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 11ms; offsetalignment tmp/9700814981231218113/query tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/aln tmp/9700814981231218113/result --chain-alignments 0 --merge-query 1 --search-type 0 --threads 40 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 93ms; Writing results to: tmp/9700814981231218113/result; [=================================================================] 516.30K 0s 162ms. Time for merging to result: 0h 0m 0s 158ms; Time for processing: 0h 0m 1s 659ms; Remove temporary files; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa . Time for processing: 0h 0m 0s 45ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/t_orfs_aa . Time for processing: 0h 0m 0s 0ms; convertalis tmp/9700814981231218113/query /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/result test.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 0 --db-load-mode 0 --search-type 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 516.30K 0s 84ms; Time for merging to test.m8: 0h 0m 0s 181ms; Time for processing: 0h 0m 2s 227ms; Removing temporary files; rmdb tmp/9700814981231218113/result . Time for processing: 0h 0m 0s 8ms; rmdb tmp/9700814981231218113/query . Time for processing: 0h 0m 0s 38ms; rmdb tmp/9700814981231218113/query_h . Time for processing: 0h 0m 0s 3ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:17249,load,load-mode,17249,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['load'],['load-mode']
Performance,"p:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>) at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578) at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```; For the clu90 job:; ```; (gdb) thread apply all bt. Thread 32 (Thread 0x7f6e65ffe640 (LWP 135852) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0) at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0) at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, ch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:29888,optimiz,optimized,29888,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,4,['optimiz'],['optimized']
Performance,"pen aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Align",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:2129,load,load-mode,2129,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,1,['load'],['load-mode']
Performance,"perate DBs? I assume `splitdb`?. Here is my current list of commands in hard coded format:. ```; # UniRef search ; mmseqs search queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res outdir/tmp --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Move profile; mmseqs mvdb outdir/tmp/latest/profile_1 outdir/prof_res; mmseqs lndb queryDB_h outdir/prof_res_h. # Expand and align UniRef results; mmseqs expandaln queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95 --db-load-mode 1 --threads 4. mmseqs align outdir/prof_res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp outdir/res_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter UniRef results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign outdir/res_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --threads 4 --max-seq-id 1.0 --filter-min-enable 100. # Convert UniRef results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign_filter outdir/uniref.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Environmental search; mmseqs search outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env outdir/tmp/env --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Expand and align environmental results; mmseqs expandaln outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp -e inf --expansion-mode 0 --db-load-mode 1 --th",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:1337,load,load-mode,1337,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326,1,['load'],['load-mode']
Performance,performance fail on single query search,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/165:0,perform,performance,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/165,1,['perform'],['performance']
Performance,phabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqType: Profile; Headers1: 1; Headers2: 0; ScoreMatrix: VTML80.out; Result database: tmp/6822607060114486044/pref; Computing offsets.; ................................................................................................... 1 Mio. sequences processed; ....................................; Reading results.; ................................................................................................... 1 Mio. sequences processed; ....................................; Output database: tmp/6822607060114486044/pref_swapped; .; Time for merging files: 0h 0m 0s 23ms; Time for processing: 0h 0m 46s 63ms; Program call:; align pfam_profile.idx pbps.neighbors.DB tmp/6822607060114486044/pref_swapped tmp/6822607060114486044/aln_swapped --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 10 --compressed 0 -v 3 . Init data structures...; Touch data file pbps.neighbors.DB ... Done.; Use index pfam_profile.idx; Index version: 15; Generated by: 8-fac81; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqType: Profile; Headers1: 1; Headers2: 0; ScoreMatrix: VTML80.out; Compute score and coverage.; Query database type: Profile; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; .Time for merging files: 0h 0m 0s 23ms. All sequences processed. 390452377 alignments calculated.; 1899900 sequence pairs passed the thresholds (0.00486589 of overall calculated).; 106.904 hits per query sequence.; Time for processing: 0h 32m 50s 752ms; Program call:; swapresults pfam_profile.idx pbps.neighbors.DB tmp/682,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:5458,load,load-mode,5458,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,1,['load'],['load-mode']
Performance,"phafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 180, in main; mmseqs_search(; File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 100, in mmseqs_search; run_mmseqs(mmseqs, [""search"", base.joinpath(""prof_res""), dbbase.joinpath(metagenomic_db), base.joinpath(""res_env""), base.joinpath(""tmp""), ""--threads"", str(threads)] + search_param); File ""/home/x/genomic/alphafold2/venv38alphafold2/lib/python3.8/site-packages/colabfold/mmseqs/search.py"", line 21, in run_mmseqs; subprocess.check_call([mmseqs] + params); File ""/usr/lib/python3.8/subprocess.py"", line 364, in check_call; raise CalledProcessError(retcode, cmd); subprocess.CalledProcessError: Command '[PosixPath('/home/x/genomic/mmseqs2/MMseqs2/build/bin/mmseqs'), 'search', PosixPath('results_700_only_456_fasta_700_5/prof_res'), PosixPath('../db_sources/colabfold_envdb_202108_db'), PosixPath('results_700_only_456_fasta_700_5/res_env'), PosixPath('results_700_only_456_fasta_700_5/tmp'), '--threads', '64', '--num-iterations', '3', '--db-load-mode', '2', '-a', '-s', '8', '-e', '0.1', '--max-seqs', '10000']' returned non-zero exit status 1.; ```. ## Steps to Reproduce (for bugs). Put in `input_sequences.fasta` anywhere (it affects single entry fasta and also miltientry fasta) one of those examples:; * `SEGGQDFWL`; * `GSSGLISMPRV`. Setup ColabFold databases from https://github.com/sokrypton/ColabFold/blob/main/setup_databases.sh; Run `colabfold_search input_sequences.fasta /path/to/db_folder search_results`; you will see above crash. **OR**. Go to https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb and try to fold one of the examples, you will see:; > Exception: MMseqs2 API is giving errors. Please confirm your input is a valid protein sequence. If error persists, please try again an hour later. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/538:2926,load,load-mode,2926,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/538,1,['load'],['load-mode']
Performance,"port for AVX2/SSE and amount of system memory):; ```; $ cat /proc/cpuinfo [truncated to 1 core]; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 85; model name : Intel(R) Xeon(R) Gold 6130 CPU @ 2.10GHz; stepping : 4; microcode : 0x2007006; cpu MHz : 2100.000; cache size : 22528 KB; physical id : 0; siblings : 32; core id : 0; cpu cores : 16; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 22; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts hwp hwp_act_window hwp_epp hwp_pkg_req pku ospke md_clear flush_l1d arch_capabilities; vmx flags : vnmi preemption_timer posted_intr invvpid ept_x_only ept_ad ept_1gb flexpriority apicv tsc_offset vtpr mtf vapic ept vpid unrestricted_guest vapic_reg vid ple shadow_vmcs pml ept_mode_based_exec tsc_scaling; bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit mmio_stale_data; bogomips : 4200.00; clflush size : 64; cache_alignment : 64; address sizes : 46 bits physical, 48 bits virtual; power management:. $ free; total used free shared buff/cache available; Mem: 791192240 20105804 63519620 33656 707566816 765066152; Swap: 0 0 0; ```; * Operating system and vers",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/833:4264,cache,cache,4264,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/833,1,['cache'],['cache']
Performance,"prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2310; Target db start 1 to 713072; [=================================================================] 100.00% 2.31K 0s 200ms. 8.191356 k-mers per position; 1212 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2301 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 0s 457ms; Time for processing: 0h 0m 1s 487ms; rescorediagonal tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_pref tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0 -e 100 -c 0 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; [=================================================================] 100.00% 2.31K 0s 3ms; Time for merging to orfs_aln: 0h 0m 0s 469ms; Time for processing: 0h 0m 1s 239ms; createsubdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aln.list tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter --subdb-mode 1 --id-mode 0 -v 3. Time for merging to orfs_filter: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 35ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter_h -v 3. Time for processing: 0h 0m 0s 5ms; createsubdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aln.list tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa_h tmp//15404483323509150572/taxonomy",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:6693,load,load-mode,6693,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,1,['load'],['load-mode']
Performance,"prof:80'` is passed to search or `--k-score seq:96,prof:80`,; `--k-score seq:96,prof:80` is passed internally to prefilter.; ## Current Behavior; When `--k-score 'seq:96,prof:80'` is passed to `mmseqs search`, `--k-score seq:2147483647,prof:2147483647` is passed to prefilter,; and when `--k-score seq:96,prof:80` is passed, `--k-score seq:96,prof:80` is passed.; ## Steps to Reproduce (for bugs); ```; export MMSEQS_CALL_DEPTH=1; SEARCH_PARAM=""--num-iterations 3 --db-load-mode 0 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000""; # or; SEARCH_PARAM=""--num-iterations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000"". mmseqs search ""${BASE}/qdb"" ""${DB1}"" ""${BASE}/res"" ""${BASE}/tmp1"" $SEARCH_PARAM; ```; ## MMseqs Output (for bugs); ### With single-quotation; ```; createdb input.fasta input_script7/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 31ms; Time for merging to qdb: 0h 0m 0s 31ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 145ms; Create directory input_script7/tmp1; search input_script7/qdb uniref30_2302_db input_script7/res input_script7/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000 ; prefilter input_script7/qdb uniref30_2302_db.idx input_script7/tmp1/1006494840762416450/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ### Without single-quotation; ```; createdb input.fasta inpu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/759:1205,load,load-mode,1205,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/759,1,['load'],['load-mode']
Performance,"put: 0h 0m 0s 1ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 33ms; Create directory tmp2/6664721939282577716/clu_tmp; cluster tmp2/6664721939282577716/input tmp2/6664721939282577716/clu tmp2/6664721939282577716/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:4557,load,load-mode,4557,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['load'],['load-mode']
Performance,"put_step_redundancy -v 3 --subdb-mode 1 . Time for merging to input_step_redundancy: 0h 0m 0s 5ms; Time for processing: 0h 0m 1s 628ms; extractframes tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 6.46M 24s 391ms; Time for merging to query_seqs_h: 0h 0m 3s 920ms; Time for merging to query_seqs: 0h 0m 19s 622ms; Time for processing: 0h 0m 57s 140ms; prefilter tmp/576731152808920235/query_seqs tmp/576731152808920235/input_step_redundancy tmp/576731152808920235/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 128 --compressed 0 -v 3 . Query database size: 12919340 type: Nucleotide; Estimated memory consumption: 95G; Target database size: 6459670 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 6.46M 24s 264ms; Index table: Masked residues: 231705872; Index table: fill; [=================================================================] 6.46M 51s 182ms; Index statistics; Entries: 7104738736; DB size: 48845 MB; Avg k-mer size: 6.616804; Top 10 k-mers; GAACAACCGGCTTAG	562246; CTCACCACGAAACGG	555944; TCATGATAAGCGCTG	492357; GTTGCTCATGAAGGT	467881; CCCGTTCGTTGCAGG	454633; CCGTTGGCCAGTAAG	425430; TCTTCACTAGACCGT	407926; CTGGATGTCCACCAG	396183; GCCCTGCAACCACGG	387874; CTACCTCTCCCCTTG	382664; Time for index table init: 0h 1m 21s 797ms; Process prefiltering step 1 of 1. k-me",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:11463,load,load-mode,11463,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['load'],['load-mode']
Performance,"qs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	5; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	1; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner 	; Remove Temporary Files 	true; Alignment Format 	0; Format alignment output 	query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen; Database Output 	false; Overlap 	0; Split Seq. by len 	true; Do not shuffle input da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:1873,perform,performs,1873,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['perform'],['performs']
Performance,"qs Version: da6c1a5a7be5d82719f796b85ce9cbacf9f2162c-MPI; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Min. alignment length 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 8; Compressed 0; Verbosity 3; Sensitivity 5.7; K-mer size 5; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner mpirun --pernode; Force restart using the latest tmp false; Remove Temporary Files false. [node218.cluster:134942] mca: base: component_find: unable to open /usr/mpi/gcc/openmpi-1.6.5/lib/openmpi/mca_mtl_psm: libpsm_infinipath.so.1: cannot open shared objec",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521:1509,perform,performs,1509,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521,1,['perform'],['performs']
Performance,"qs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; --rescore-mode 	0 	Rescore diagonal with: 0: Hamming distance, 1: local alignment (score only) or 2: local alignment; --min-length 	30 	minimum codon number in open reading frames ; --max-length 	32734 	maximum codon number in open reading frames ; --max-gaps 	2147483647	maximum number of codons with gaps or unknown residues before an open reading frame is rejected; --contig-start-mode 	2 	Contig start can be 0: incomplete, 1: complete, 2: both ; --contig-end-mode 	2 	Contig end can be 0: incomplete, 1: complete, 2: both ; --orf-start-mode 	1 	Orf fragment can be 0: from start to stop, 1: from any to stop, 2: from last encountered start to stop (no start in the middle); --forward-frames 	1,2,3 	comma-seperated list of ORF frames on the forward strand to be extracted; --reverse-frames 	1,2,3 	comma-seperated list of ORF frames on the reverse strand to be extracted; --translation-table 	1 	1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE, 9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL, 15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL, 23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA, 29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA; --use-all-table-starts	false 	use all alteratives for a start codon in the genetic table, if false - only ATG (AUG); --id-offset 	0 	numeric ids in index file are offset by this value ; --add-orf-stop 	false 	add * at complete start and end ; --start-sens 	4.000 	start sensitivity ; --sens-steps 	1 	Search steps performed from --sta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:8620,load,load-mode,8620,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['load'],['load-mode']
Performance,"r), ""--max-seq-id"", ""0.95"",]. run_mmseqs(mmseqs, [""search"", base.joinpath(""qdb""), dbbase.joinpath(uniref_db), base.joinpath(""res""), base.joinpath(""tmp""), ""--threads"", str(threads)] + search_param); #queryDB 데이터베이스에서 uniref30_2103_db 데이터베이스를 대상으로 검색을 수행합니다.; #검색 결과는 res 디렉토리에 저장되고, 임시 파일은 tmp 디렉토리에 저장됩니다; ; run_mmseqs(mmseqs, [""mvdb"", base.joinpath(""tmp/latest/profile_1""), base.joinpath(""prof_res"")]); run_mmseqs(mmseqs, [""lndb"", base.joinpath(""qdb_h""), base.joinpath(""prof_res_h"")]); ; run_mmseqs(mmseqs, [""expandaln"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""), base.joinpath(""res""), dbbase.joinpath(f""{uniref_db}{dbSuffix2}""), base.joinpath(""res_exp""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + expand_param); run_mmseqs(mmseqs, [""align"", base.joinpath(""prof_res""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""), base.joinpath(""res_exp""), base.joinpath(""res_exp_realign""), ""--db-load-mode"", str(db_load_mode), ""-e"", str(align_eval), ""--max-accept"", str(max_accept), ""--threads"", str(threads), ""--alt-ali"", ""10"", ""-a""]); run_mmseqs(mmseqs, [""filterresult"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign""), base.joinpath(""res_exp_realign_filter""), ""--db-load-mode"",; str(db_load_mode), ""--qid"", ""0"", ""--qsc"", str(qsc), ""--diff"", ""0"", ""--threads"",; str(threads), ""--max-seq-id"", ""1.0"", ""--filter-min-enable"", ""100""]); run_mmseqs(mmseqs, [""result2msa"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign_filter""), base.joinpath(""uniref.a3m""), ""--msa-format-mode"",; ""6"", ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + filter_param); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign_filter"")]); ; if use_templates:; run_mmseqs(mmse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:4092,load,load-mode,4092,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['load'],['load-mode']
Performance,"r/prof_res; mmseqs lndb queryDB_h outdir/prof_res_h. # Expand and align UniRef results; mmseqs expandaln queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp --expansion-mode 0 -e inf --expand-filter-clusters 1 --max-seq-id 0.95 --db-load-mode 1 --threads 4. mmseqs align outdir/prof_res /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp outdir/res_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter UniRef results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign outdir/res_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --threads 4 --max-seq-id 1.0 --filter-min-enable 100. # Convert UniRef results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/uniref30_2302_db outdir/res_exp_realign_filter outdir/uniref.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Environmental search; mmseqs search outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env outdir/tmp/env --num-iterations 3 --db-load-mode 1 -a -e 0.0001 --max-seqs 25 --prefilter-mode 0 -s 1 --threads 4. # Expand and align environmental results; mmseqs expandaln outdir/prof_res /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp -e inf --expansion-mode 0 --db-load-mode 1 --threads 4. mmseqs align outdir/tmp/env/latest/profile_1 /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp outdir/res_env_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter environmental results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_r",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:1614,load,load-mode,1614,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326,1,['load'],['load-mode']
Performance,"r> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 20 (LWP 7920 ""mmseqs""):; #0 MathUtil::NormalizeTo1 (def_array=0x0, length=20, array=0x7ecabcfc9220) at /home/vsts/work/1/s/src/commons/MathUtil.h:248; #1 PSSMCalculator::computeContextSpecificWeights (this=this@entry=0x7f1ffd7dbc10, matchWeight=0x7ee3e2190040, wg=0x7ee412750010, Neff_M=<optimized out>, queryLength=queryLength@entry=8032918, setSize=setSize@entry=1, X=0x7f20081f9a70) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:533; #2 0x00000000006c9cd5 in PSSMCalculator::computePSSMFromMSA (this=this@entry=0x7f1ffd7dbc10, setSize=setSize@entry=1, queryLength=8032918, msaSeqs=0x7f20081f9a70, wg=<optimized out>, scoreBias=scoreBias@entry=0) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:163; #3 0x000000000065834b in _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:263; #4 0x00000000008ab97e in gomp_thread_start (); #5 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #6 0x0000000000964ff3 in clone (). Thread 19 (LWP 7919 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:11570,optimiz,optimized,11570,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"rce restart with latest tmp 	false; Remove temporary files 	false. extractorfs kelp_database tmp/3499313520568641582/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2; --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-; starts 0 --id-offset 0 --create-lookup 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 714.62K 18s 1ms; Time for merging to q_orfs_aa_h: 0h 0m 17s 230ms; Time for merging to q_orfs_aa: 0h 0m 22s 109ms; Time for processing: 0h 1m 20s 933ms; prefilter tmp/3499313520568641582/q_orfs_aa uniref50 tmp/3499313520568641582/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --sp; lit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lo; wer-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed ; 0 -v 3 -s 5.7 . Query database size: 61153309 type: Aminoacid; Target split mode. Searching through 2 splits; Estimated memory consumption: 99G; Target database size: 48531432 type: Aminoacid; Process prefiltering step 1 of 2. Index table k-mer threshold: 122 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 24.26M 1m 44s 733ms; Index table: Masked residues: 187925951; Index table: fill; [=================================================================] 24.26M 3m 17s 822ms; Index statistics; Entries: 6286866786; DB size: 45739 MB; Avg k-mer size: 4.911615; Top 10 k-mers; DFEQLPH	32892; NVPGWSP	32831; FRYAFPS	32736; RYYVLGW	32688; WRLDFLN	31763; TVDGDFS	31579; NKTDFVQ	31135; QDWVQIP	30874; LDGAYVP	30051; ETGRYNV	29832; Ti",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/478:3526,load,load-mode,3526,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478,1,['load'],['load-mode']
Performance,"re](https://github.com/soedinglab/metaeuk-regression/tree/master/sacc_tax); 2. Run the commands above. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): e2510e8f6911e4340c62989aa9ba1b9c58e18d60; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.5.1, c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609; * Server specifications (especially CPU s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/320:1845,Load,Loading,1845,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320,2,['Load'],['Loading']
Performance,"read for database data file=mmseqstest_nucl.fasta_QDB_h, database index=; ```. All the previous steps seem to work correctly (createdb, createindex, search) and have contents inside their files. For example, running head on the _QDB_h and _TDB_h files return the below result (both _h files are identical since my query is the nucleotide version of the prot sequence). ```; evm.model.utg902.1.8.5abb479e; evm.model.utg902.1.9.5abb479e; evm.model.utg902.1.10.5abb479e; evm.model.utg1004.80; evm.model.utg8847.1_evm.model.utg8847.2.3.5abb479e; evm.model.utg8847.1_evm.model.utg8847.2; evm.model.utg8847.1_evm.model.utg8847.2.5.5abb479e; evm.model.utg1937.4; evm.model.utg12562.19; ```. Head of the mmseqstest_nucl.fasta_QDB_h_index file == . ```; 1 0 32; 2 32 32; 3 64 33; 4 97 23; 5 120 53; 6 173 42; 7 215 53; 8 268 22; 9 290 24; ```. The _SDB file has this as its head. ```; 2 585 0.986 1.536E-193 1248 2085 1044 0 279 281; 1 514 0.877 2.516E-168 1248 2085 1044 0 280 282; 3 497 0.852 1.632E-162 1248 2085 1044 0 280 282; 7 365 1.000 2.704E-120 1075 1579 507 0 168 170; 6 316 0.883 2.496E-103 1075 1579 507 0 170 172; 5 306 0.857 1.240E-99 1075 1579 507 0 170 172; 3 591 0.993 2.689E-197 1081 1921 843 0 280 282; 1 520 0.886 7.407E-172 1081 1921 843 0 280 282; 2 493 0.845 2.708E-162 1081 1921 843 0 279 281; 1 591 0.993 2.689E-197 1081 1921 843 0 280 282; ```. The reason I was performing this test was to see how nucleotide -> protein searches worked and to see if the little wrapper script I made to automate MMS2 searches needed any modifications. I figured I'd try using the protein DB as both query and target which resulted in search and convertalis working perfectly. Thus, I think the issue me and @CHEN-Zhihan are having is occurring when performing a nucleotide -> protein search (based off his query file being named ""read.fasta"" I expect that it is a nucleotide sequence) and seems to be limited to the convertalis step since search looks fine to me. Does this sound right to you?. Zac.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-377736994:2812,perform,performing,2812,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-377736994,2,['perform'],['performing']
Performance,"reateindex DB tmp; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; createindex DB tmp . Program received signal SIGILL, Illegal instruction.; Parameters::printParameters (this=0x56b9c090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; 2017	 ss << ByteParser::format(*((size_t *)par[i]->value), 'a', 'h');; (gdb) bt; #0 Parameters::printParameters (this=0x56b9c090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; #1 0x566a3d88 in Parameters::checkIfDatabaseIsValid (this=0x56b9c090, command=..., argc=2, argv=0xffffcddc, isStartVar=false, isMiddleVar=false, isEndVar=false); at ./src/commons/Parameters.cpp:1905; #2 0x566a7f29 in Parameters::parseParameters (this=0x56b9c090, argc=2, pargv=0xffffcddc, command=..., printPar=<optimized out>, parseFlags=0, outputFlags=0); at ./src/commons/Parameters.cpp:1850; #3 0x568ab4cc in createindex (argc=2, argv=0xffffcddc, command=...) at ./src/workflow/CreateIndex.cpp:137; #4 0x565bc79d in runCommand (p=0x56ba50c0, argc=2, argv=0xffffcddc) at ./src/commons/Application.cpp:38; #5 0x565ab4cb in main (argc=4, argv=0xffffcdd4) at ./src/commons/Application.cpp:196; ```; same with the sse4.1 variant, etc..; ```; (gdb) run createindex DB tmp; Starting program: /usr/bin/mmseqs-sse4.1 createindex DB tmp; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; createindex DB tmp . Program received signal SIGILL, Illegal instruction.; Parameters::printParameters (this=0x56bba090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; 2017	 ss << ByteParser::format(*((size_t *)par[i]->value), 'a', 'h');; (gdb) bt; #0 Parameters::printParameters (this",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418:1116,optimiz,optimized,1116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418,1,['optimiz'],['optimized']
Performance,"reateindex DB tmp; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; createindex DB tmp . Program received signal SIGILL, Illegal instruction.; Parameters::printParameters (this=0x56bba090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; 2017	 ss << ByteParser::format(*((size_t *)par[i]->value), 'a', 'h');; (gdb) bt; #0 Parameters::printParameters (this=0x56bba090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; #1 0x5669efec in Parameters::checkIfDatabaseIsValid (this=0x56bba090, command=..., argc=2, argv=0xffffcddc, isStartVar=false, isMiddleVar=false, isEndVar=false); at ./src/commons/Parameters.cpp:1905; #2 0x566a32a9 in Parameters::parseParameters (this=0x56bba090, argc=2, pargv=0xffffcddc, command=..., printPar=<optimized out>, parseFlags=0, outputFlags=0); at ./src/commons/Parameters.cpp:1850; #3 0x5689d5ac in createindex (argc=2, argv=0xffffcddc, command=...) at ./src/workflow/CreateIndex.cpp:137; #4 0x565bbf0d in runCommand (p=0x56bc30c0, argc=2, argv=0xffffcddc) at ./src/commons/Application.cpp:38; #5 0x565aabcb in main (argc=4, argv=0xffffcdd4) at ./src/commons/Application.cpp:196; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; ```; mmseqs-avx2 createdb examples/DB.fasta DB; mmseqs-avx2 createindex DB tmp; ```. ## MMseqs Output (for bugs); ```; Create directory tmp; createindex DB tmp . Illegal instruction (core dumped); ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418:2598,optimiz,optimized,2598,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418,1,['optimiz'],['optimized']
Performance,"red_nr/nr_rep_seq_to_taxid.map' -v 3; Create directory tmp; createtaxdb nr_rep_seq_db tmp --tax-mapping-file /data/clustered_nr/nr_rep_seq_to_taxid.map -v 3 . MMseqs Version: 	2fad714b525f1975b62c2d2b5aff28274ad57466; NCBI tax dump directory	; Taxonomy mapping file 	/data/clustered_nr/nr_rep_seq_to_taxid.map; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	20; Verbosity 	3. Download taxdump.tar.gz. 02/01 11:29:59 [NOTICE] Downloading 1 item(s); [#b8b044 0B/0B CN:1 DL:0B] ; 02/01 11:30:01 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; [#b8b044 51MiB/61MiB(84%) CN:1 DL:10MiB] ; 02/01 11:30:08 [NOTICE] Download complete: tmp/taxdump.tar.gz. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; b8b044|OK | 9.1MiB/s|tmp/taxdump.tar.gz. Status Legend:; (OK):download completed.; Loading nodes file ... Done, got 2550743 nodes; Loading merged file ... Done, added 75930 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```; ## Context; I want to search some query sequences locally against a clustered version of the NR database. I downloaded the clustered database and taxonomy files (nr_cluster_taxid_formatted_final.tsv.gz, nr_rep_seq.fasta.gz) from [here](https://osf.io/tejwd/), which was created as per: https://research.arcadiascience.com/pub/resource-nr-clustering/release/3. I then processed the files like so:. ```; gunzip -c nr_cluster_taxid_formatted_final.tsv.gz | cut -f1,2 > nr_rep_seq_to_taxid.map; mmseqs createdb nr_rep_seq.fasta.gz nr_rep_seq_db; ```. After these completed successfully, I tried to create the taxdb as per the above:. ```; mmseqs createtaxdb nr_rep_seq_db tmp --tax-mapping-file '/data/clustered_nr/nr_rep_seq_to_taxid.map' -v 3; ```. But the job was killed. Questions:; * Was it likely killed because of exhausting my available RAM? ; - If so, is there a way to restri",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/811:1613,Load,Loading,1613,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811,1,['Load'],['Loading']
Performance,"ref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; mpic++/ 4.8.5 20150623 (Red Hat 4.8.5-36); cmake/3.12.3 ; module load cmake/3.12.3 ; module load openmpi/gcc/64/1.10.3 ; cd mmseqs2; mkdir build ; cd build ; CC=mpicc CXX=mpic++ cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/hpcf/authorized_apps/rhel7_apps/mmseqs2/install/11-e1a1c_sse4.1 -DHAVE_SSE4_1=1 ; make; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; LSF with SSE4 support. The job was submitted using 24 slots with 8 slots per host with a total requested memory of 199992.00 MB; * Operating system and version:; uname -a; Linux nodecn104 3.10.0-957.21.3.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:45726,load,load,45726,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,2,['load'],['load']
Performance,"res calculation (step 1 of 1); Query db start 1 to 8338; Target db start 1 to 8338; [=================================================================] 8.34K 26s 907ms. 903.365687 k-mers per position; 4641 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 88 sequences passed prefiltering per query sequence; 76 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 36ms; Time for processing: 0h 0m 32s 520ms; align ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/pref_step2 ./mmseqs_output/tmp/5351426679731834765/aln_step2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 8338 type: Aminoacid; Target database size: 8338 type: Aminoacid; Calculation of alignments; [=================================================================] 8.34K 17s 958ms; Time for merging to aln_step2: 0h 0m 0s 88ms; 489475 alignments calculated; 8622 sequence pairs passed the thresholds (0.017615 of overall calculated); 1.034061 hits per query sequence; Time for processing: 0h 0m 18s 545ms; clust ./mmseqs_output/tmp/5351426679731834765/input_step2 ./mmseqs_output/tmp/5351426679731834765/aln_step2 ./mmseqs_output/tmp/5351426679731834765/clu_step2 --cluster-mode 1 --ma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:30831,load,load-mode,30831,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:3016,load,load-mode,3016,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['load'],['load-mode']
Performance,"rg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 20 (LWP 7920 ""mmseqs""):; #0 MathUtil::NormalizeTo1 (def_array=0x0, length=20, array=0x7ecabcfc9220) at /home/vsts/work/1/s/src/commons/MathUtil.h:248; #1 PSSMCalculator::computeContextSpecificWeights (this=this@entry=0x7f1ffd7dbc10, matchWeight=0x7ee3e2190040, wg=0x7ee412750010, Neff_M=<optimized out>, queryLength=queryLength@entry=8032918, setSize=setSize@entry=1, X=0x7f20081f9a70) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:533; #2 0x00000000006c9cd5 in PSSMCalculator::computePSSMFromMSA (this=this@entry=0x7f1ffd7dbc10, setSize=setSize@entry=1, queryLength=8032918, msaSeqs=0x7f20081f9a70, wg=<optimized out>, scoreBias=scoreBias@entry=0) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:163; #3 0x000000000065834b in _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:263; #4 0x00000000008ab97e in gomp_thread_start (); #5 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #6 0x0000000000964ff3 in clone (). Thread 19 (LWP 7919 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:4",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:12228,optimiz,optimized,12228,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"rget database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 15.11M 1h 57m 11s 538ms; Time for merging to aln: 0h 0m 19s 511ms. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:12806,load,load-mode,12806,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['load'],['load-mode']
Performance,"rging to query: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Database type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Time for merging to query.lookup: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Time for processing: 0h 0m 0s 0ms; docker-compose-mmseqs-web-worker-1 | Tmp /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp folder does not exist or is not a directory.; docker-compose-mmseqs-web-worker-1 | prefilter /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/query /opt/mmseqs-web/databases/pdb_protein_sequence.idx /opt/mmseqs-web/jobs/q5hCr61cwm2uVes0_CIgzMFmrMAPmDsNC3V2qg/tmp/4851513069255109370/search_tmp/15424620862237750751/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 2000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 7.5 ; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | Index version: 16; docker-compose-mmseqs-web-worker-1 | Generated by: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; docker-compose-mmseqs-web-worker-1 | ScoreMatrix: VTML80.out; docker-compose-mmseqs-web-worker-1 | Query database size: 1 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Estimated memory consumption: 1G; docker-compose-mmseqs-web-worker-1 | Target database size: 382389 type: Aminoacid; docker-compose-mmseqs-web-worker-1 | Process prefiltering step 1 of 1; docker-compose-mmseqs-web-worker-1 | ; docker-compose-mmseqs-web-worker-1 | k-mer similarity threshold: 96; docker-compose-mmseqs-web-worker-1 | Starting prefiltering scores calculation (step 1 of 1); docker-compose-mmseqs-web-worker-1 | Q",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717:3116,load,load-mode,3116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717,1,['load'],['load-mode']
Performance,"rity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 4000; Target db start 1 to 365688; [=================================================================] 100.00% 4.00K 0s 74ms ; [================================================================>] 99.72% 3.99K eta 0s ; 0.926667 k-mers per position; 434 DB matches per sequence; 0 overflows; 4 sequences passed prefiltering per query sequence; 1 median result list length; 1762 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 5ms; Time for processing: 0h 0m 40s 369ms; align tmp/7935334228278574252/query_seqs_split tmp/7935334228278574252/target_seqs_split tmp/7935334228278574252/search/pref_0 tmp/7935334228278574252/search/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 2 --max-seq-len 10000 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3 . Compute score only; Query database size: 4000 type: Nucleotide; Target database size: 365688 type: Nucleotide; Calculation of alignments; Query sequence 236 has a result with no diagonal information. Please check your database.; Error: Alignment died; Error: Search step died. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used:`df77d9e6cf640fe8990f247441ab44d4f4ad9cdc`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):**_Statically-compiled_**; * Server specifications (especially CPU support for AVX2/SSE",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747:6940,load,load-mode,6940,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747,1,['load'],['load-mode']
Performance,"roduce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 474ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --threads 12 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 6 type: Aminoacid; Target database size: 6 type: Aminoacid; Calculation of alignments; [=================================================================] 6 0s 1ms; Time for merging to aln_step2: 0h 0m 0s 3ms. 6 alignments calculated.; 6 sequence pairs passed the thresholds (1.000000 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 15ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/aln_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:31239,load,load-mode,31239,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['load'],['load-mode']
Performance,"rop 40 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score only; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; Calculation of alignments; [=================================================================] 1 0s 8ms; Time for merging to aln_0: 0h 0m 0s 0ms; 300 alignments calculated; 191 sequence pairs passed the thresholds (0.636667 of overall calculated); 191.000000 hits per query sequence; Time for processing: 0h 0m 0s 69ms; result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Target database size: 34746192 type: Aminoacid; [=================================================================Segmentation fault; Error: Create profile died; ```. ## Context. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; * Which MMseqs version was used:Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 32-core, 256 GB ram, vmtouch'ed target into memory (crash happens either way though); * Operating system and version: Debian GNU/Linux 11 (bullseye)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:6481,load,load-mode,6481,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['load'],['load-mode']
Performance,"rt + 1 + hsp.sbjct_end - hsp.sbjct_start + 1) / (alignment.length + record.query_length); if coverage < 0.9:; es.append(None); perc_identities.append(None). # check that the first hsp of the first align is indeed the best; for align in record.alignments:; for hsp in align.hsps:; if hsp.expect < e:; raise ValueError('Not the best hsp'). es.append(e); perc_identities.append(hsp.identities / ((alignment.length + record.query_length)/2)). num_aligned = len([e for e in es if e is not None]); # remove nans; es = [e for e in es if e is not None]; perc_identities = [p for p in perc_identities if p is not None]; mean_percid = sum(perc_identities)/len(perc_identities); mean_e = sum(es)/len(es); max_percid = max(perc_identities); min_e = min(es). result_dict = MMSEQS_PARAMS; result_dict['num_aligned'] = num_aligned; result_dict['mean_percid'] = mean_percid; result_dict['mean_e'] = mean_e; result_dict['max_percid'] = max_percid; result_dict['min_e'] = min_e. # load the current results (tsv) and append the new results; results_path = os.path.join('./', ""results.tsv""); if os.path.exists(results_path):; results = pd.read_csv(results_path, sep='\t'); results = results.append(result_dict, ignore_index=True); else:; results = pd.DataFrame([result_dict]). results.to_csv(results_path, sep='\t', index=False). if __name__ == ""__main__"":; main(); ```. ## MMseqs Output (for bugs); Here is one output example, though I have run the above script varying the parameters for a number of params. ```; cluster ./mms_smallDB ./mmseqs_output/mmseq_clu ./mmseqs_output/tmp --cluster-mode 1 --cluster-steps 3 --cluster-reassign 1 --cov-mode 0 -c 0.8 -e 0.001 -s 7 --min-seq-id 0.4 --threads 40 --max-seqs 200 --max-iterations 1000 --alignment-mode 3 --similarity-type 2 . MMseqs Version: 14.7e284; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 7; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:6639,load,load,6639,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load']
Performance,"rt mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. prefilter ../hmmsearchDB /home/mescalona/workspace/mmseqs_db/UniRef100 searchTMP/6207338591244691143/pref_0 --sub-mat aa:blosum62.out,nucl:nucleotide.out --seed-sub-mat aa:VTML80.out,nucl:nucleotide.out -k 0 --k-score 2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 -s 5.7. Query database size: 25293 type: Aminoacid; Estimated memory consumption: 18G; Target database size: 3570076 type: Aminoacid; Index table k-mer threshold: 112 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 3.57M 8s 444ms; Index table: Masked residues: 11969832; Index table: fill; [=================================================================] 100.00% 3.57M 8s 228ms; Index statistics; Entries: 1027253274; DB size: 6366 MB; Avg k-mer size: 16.050832; Top 10 k-mers; TGPTYY 27757; AFYRLP 26608; PIPVFY 26525; FTVGTY 26386; TLTNDY 25757; SALDYW 25262; EPVKNS 25067; GAFLPY 24885; AGYFDW 24698; HYFVAV 24187; Time for index table init: 0h 0m 17s 833m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/513:3359,load,load-mode,3359,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/513,1,['load'],['load-mode']
Performance,"rt-results 0 --global-alignment 0 --mask-profile 1 --e-profile 0.001 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --omit-consensus 0 --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --chain-alignments 0 --merge-query 1 --search-type 0 --num-iterations 1 --start-sens 4 --sens-steps 1 --slice-search 0 --strand 1 --disk-space-limit 0 --force-reuse 0 --remove-tmp-files 0. prefilter clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/tmp_hsp1/2842639954524457022/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.7. Using 24 threads.; Estimated memory consumption 413414 MB; Target database size: 119988216 type: Aminoacid; Query database size: 40624 type: Aminoacid; Process prefiltering step 1 of 1. Index table k-mer threshold: 122 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 119.99M 14m 40s 186ms; Index table: Masked residues: 372860390; Index table: fill; [=================================================================] 100.00% 119.99M 20m 55s 996ms; Index statistics; Entries: 38076912867; DB size: 227643 MB; Avg k-mer size: 29.747588; Top 10 k-mers; SGQQRIA	281769; GPGGKLL	259328; GQQVARA	172987; YTGTGKG	166889; GGQRVAR	143134; LLGPGKT	113836; LSGQQAI	94348; GGRRVAR	94149; ALGSGKS	92540; GRFVVEV	90006; Time for ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:4806,load,load-mode,4806,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,1,['load'],['load-mode']
Performance,"rtik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:33864,Load,Loaded,33864,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,"rubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 8; Verbosity 3; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Alphabet size 21; Kmer per sequence 21; Mask Residues 1; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner. Program call:; /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/ccs/ENSEMBL/1000000/ccs.fasta /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input --max-seq-len 65535 --dont-split-seq-by-len --dont-shuffle --id-offset 0 -v 3. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Max. sequence length 65535; Split Seq. by len false; Do not shuffle input database false; Offset of numeric ids 0; Verbosity 3. ...................................................................................................Time for merging files: 0h 0m 1s 611ms; Time for merging files: 0h 0m 1s 458ms; Time for processing: 0h 1m 30s 586ms; Program call:; /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/pre",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120:1537,perform,performs,1537,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120,1,['perform'],['performs']
Performance,"rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb --ncbi-tax-dump /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy --tax-mapping-file /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy/mapping_genomes --tax-mapping-mode 1 --threads 128 -v 3 . Loading nodes file ... Done, got 113318 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Error: createtaxdb died; ```. Any tips? Thanks.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:2381,Load,Loading,2381,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806,3,['Load'],['Loading']
Performance,"s 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter euk72-90.profile2 euk72-90.consensus2 .mmseqs_tmp/10144503605536445033/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 48 --compressed 0 -v 3 -s 7.0 . Query database size: 1270615 type: Profile; Estimated memory consumption: 7G; Target database size: 1270615 type: Aminoacid; Index table k-mer threshold: 0 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 1.27M 6s 285ms; Index table: Masked residues: 39476984; Index table: fill; [=================================================================] 1.27M 5s 428ms; Index statistics; Entries: 522806522; DB size: 3479 MB; Avg k-mer size: 8.168852; Top 10 k-mers; IHDKNI	9354; DVSGLL	6729; LGGFVY	6623; SSSSSS	5575; IGGFVY	4538; LSCHLV	4001; EKDYGV	3708; LIMAGS	3629; FGVKLP	3541; KSVSVV	3538; Time for index table init: 0h 0m 12s 974ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db start",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:8662,load,load-mode,8662,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['load'],['load-mode']
Performance,"s 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Prefilter mode 	0; Exhaustive search mode 	true; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter tmp/5233442526903138997/profileDB Documents/01_FAD_FAH_90_DB/FAD_FAH_90 tmp/5233442526903138997/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 75233 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 16 --compressed 0 -v 3 . Query database size: 75233 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 75233 type: Aminoacid; Index table k-mer threshold: 91 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 75.23K 0s 271ms ; Index table: Masked residues: 52417; Index table: fill; [=================================================================] 100.00% 75.23K 0s 415ms ; Index statistics; Entries: 23045881; DB size: 620 MB; Avg k-mer size: 0.360092; Top 10 k-mers; GGNQHH	4218; NTSHHH	3502; NYHFDY	2183; LEVYHY	2100; VTDHHH	1805; TPMRHS	1770; GWNHFP	1732; LIWRGT	1732; GLYIHL	1684; WAHVSS	1682; Time for index table init: 0h 0m 1s 16ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 91; Starting prefiltering scores calculation (step 1 of 1); Query db ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/814:3816,load,load-mode,3816,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/814,1,['load'],['load-mode']
Performance,"s --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --threads 2 --compressed 0 -v 3 . [] 4h 52m 19s 671ms; Time for merging files: 0h 0m 12s 453ms; Time for merging files: 0h 0m 37s 79ms; Time for processing: 4h 53m 13s 946ms; translatenucs tmp/15531098257495296432/q_orfs tmp/15531098257495296432/q_orfs_aa --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 2 . [] 4h 49m 49s 475ms; Time for merging files: 0h 0m 13s 279ms; Time for processing: 4h 50m 4s 882ms; prefilter tmp/15531098257495296432/q_orfs_aa /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx tmp/15531098257495296432/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 3 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 1.0 . Using 2 threads.; Index version: 15; Generated by: 73ce3b88754987122b4fc5e69a721beeecd677d0; ScoreMatrix: VTML80.out; Estimated memory consumption 372556 MB; Target database size: 134985288 type: Aminoacid; Query database size: 12189231 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12189231; Target db start 1 to 134985288; [] 5h 25m 52s 523ms. 5.520466 k-mers per position; 7748 DB matches per sequence; 0 overflows; 11 sequences passed prefiltering per query sequence; 8 median result list length; 2084890 sequences with 0 size result lists. Time for prefiltering scores calculation: 5h 25m 59s 596ms; Time for merging files: 0h 0m 17s 47ms; Time for processing: 5h 28m 30s 1",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:5064,load,load-mode,5064,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,1,['load'],['load-mode']
Performance,"s 128 --compressed 0 -v 3 ; ```; ### Without single-quotation; ```; createdb input.fasta input_script5/qdb ; Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 32ms; Time for merging to qdb: 0h 0m 0s 47ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 226ms; Create directory input_script5/tmp1; search input_script5/qdb uniref30_2302_db input_script5/res input_script5/tmp1 --num-iterations 3 --db-load-mode 0 -a --k-score seq:96,prof:80 -e 0.1 --max-seqs 10000 ; prefilter input_script5/qdb uniref30_2302_db.idx input_script5/tmp1/16308606893082150349/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:96,prof:80 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 ; ```; ## Context; I am trying to do a mmseqs2 colabfold search locally.; However, the local result doesn't match the MSA server results.; To reproduce the server results, I am trying to find out which option the MSA server is actually using. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): bb0a1b3569b9fe115f3bf63e5ba1da234748de23 or 14.7e284; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled or anaconda ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/759:3012,load,load-mode,3012,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/759,1,['load'],['load-mode']
Performance,"s 66ms; connected component mode; Total time: 0h 0m 0s 90ms. Size of the sequence database: 276; Size of the alignment database: 276; Number of clusters: 237. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 96ms; createsubdb tmpfiles//13298481167543164943/clu_step0 tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 237 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 237 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 237 0s 39ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 237 0s 9ms; Index statistics; Entries: 1403; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 25ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 237; Target db start 1 to 237; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:15641,load,load-mode,15641,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['load'],['load-mode']
Performance,"s calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Profile; Estimated memory consumption: 21K; Target database size: 5 type: Nucleotide; Can not allocate entries memory in IndexTable; Error: Prefilter died; Error: Search step died; Error: Search died. ## Your Environment; MMseqs2 Version: 13.45111 (installed from anaconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:14892,load,load-mode,14892,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['load'],['load-mode']
Performance,"s the NR database, but it keeps SegFaulting on me. The job had 750G memory available, and as far as I can tell it doesn't seem to be overblowing that (the core dump is <400G). I ran createindex in the same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1025,load,loading,1025,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,3,['load'],"['load', 'loading']"
Performance,"s, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file. This fasta file size <1gb but I first tried to run this process on a >80gb file on remote compute node and was concerned when I saw the job was using only a small part of the resources.; Not part of this issue but realted; also tried to do the same thing with a large protein file but I get invalid fasta entry errors (maybe because of the ""*"" marking STOPs left by the ORF predictor, but that wouldn't happen in the nucleic acid file example above). ## Your Environment; * Git commit used:; I tried on my personal machine and a compute node (PBS), similar behaviour in both. ; Personal machine MMseqs2 Version: 48a037a2e2cf5ea140c6c5de357b7147e5310b4d.; Server MMseqs2 Version: 2a8c5f00f820c5c9a577676707095ef17bcff04a.; * Which MMseqs version was used: Statically-compiled; * Server specifications:; Server: (2a8c5f00f820c5c9a577676707095ef17bcff04a); CPU: Intel(R) Xeon(R) Platinum 8168; Memory: 366 GB; Personal machine: (48a037a2e2cf5ea140c6c5de357b7147e5310b4d); CPU: Intel Core i7-8700 6-Core model: bits: 64 type: L2 cache: 12.0 MiB ; Memory: 15.33 GB; * Operating system and version:; Personal machine: Linux Mint 19.2 Tina Kernel: 4.15.0-72-generic x86_64; ; Server: Linux 3.10.0-693.el7.x86_64. Thanks for developing and maintaining this totally amazing tool !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261:3027,cache,cache,3027,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261,1,['cache'],['cache']
Performance,s; [=================================================================] 1.30M 1h 24m 48s 423ms; Time for merging to aln: 0h 0m 0s 504ms; 662682155 alignments calculated; 492943101 sequence pairs passed the thresholds (0.743861 of overall calculated); 379.633209 hits per query sequence; Time for processing: 1h 27m 9s 264ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 746ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/input_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; offsetalignment /tmp//2989869989197200687/query /tmp//2989869989197200687/search_tmp/6775691152365959592/query_seqs_split /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/search_tmp/6775691152365959592/target_seqs_split /tmp//2989869989197200687/search_tmp/6775691152365959592/aln /tmp//2989869989197200687/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 32 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 29ms; Writing results to: /tmp//2989869989197200687/result; [=================================================================] 514.46K 49s 642ms. Time for merging to result: 0h 0m 0s 988ms; Time for processing: 0h 0m 58s 569ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs_aa -v 3 . Time for proce,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:24961,load,load-mode,24961,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['load'],['load-mode']
Performance,"s; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_1 -v 3 . Time for processing: 0h 0m 0s 15ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_1 -v 3 . Time for processing: 0h 0m 0s 7ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 -v 3 . Time for processing: 0h 0m 0s 11ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_2 -v 3 . Time for processing: 0h 0m 0s 24ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_2 -v 3 . Time for processing: 0h 0m 0s 11ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_2 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 11ms; offsetalignment tmp/9700814981231218113/query tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/aln tmp/9700814981231218113/result --chain-alignments 0 --merge-query 1 --search-type 0 --threads 40 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 93ms; Writing results to: tmp/9700814981231218113/result; [=================================================================] 516.30K 0s 162ms. Time for merging to result: 0h 0m 0s 158ms; Time for processing: 0h 0m 1s 659ms; Remove temporary files; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa . Time for processing: 0h 0m 0s 45ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/t_orfs_aa . Time for processing: 0h 0m 0s 0ms; convertalis tmp/9700814981231218113/query /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/result test.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:16314,load,load-mode,16314,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['load'],['load-mode']
Performance,"s_exp_realign_filter""), base.joinpath(""uniref.a3m""), ""--msa-format-mode"",; ""6"", ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + filter_param); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign_filter"")]); ; if use_templates:; run_mmseqs(mmseqs, [""search"", base.joinpath(""prof_res""), dbbase.joinpath(template_db), base.joinpath(""res_pdb""),; base.joinpath(""tmp2""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads), ""-s"", ""7.5"", ""-a"", ""-e"", ""0.1"", ""--prefilter-mode"", str(prefilter_mode)]); run_mmseqs(mmseqs, [""convertalis"", base.joinpath(""prof_res""), dbbase.joinpath(f""{template_db}{dbSuffix3}""), base.joinpath(""res_pdb""),; base.joinpath(f""{template_db}""), ""--format-output"",; ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar"",; ""--db-output"", ""1"",; ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)]); run_mmseqs(mmseqs, [""unpackdb"", base.joinpath(f""{template_db}""), base.joinpath("".""), ""--unpack-name-mode"", ""0"", ""--unpack-suffix"", "".m8""]); run_mmseqs(mmseqs, [""rmdb"", base.joinpath(""res_pdb"")]); run_mmseqs(mmseqs, [""rmdb"", base.joinpath(f""{template_db}"")]). run_mmseqs(mmseqs, [""unpackdb"", base.joinpath(""final.a3m""), base.joinpath("".""), ""--unpack-name-mode"", ""0"", ""--unpack-suffix"", "".a3m""]); run_mmseqs(mmseqs, [""rmdb"", base.joinpath(""final.a3m"")]); run_mmseqs(mmseqs, [""rmdb"", base.joinpath(""uniref.a3m"")]); run_mmseqs(mmseqs, [""rmdb"", base.joinpath(""res"")]); # @formatter:on; # fmt: on. for file in base.glob(""prof_res*""):; file.unlink(); shutil.rmtree(base.joinpath(""tmp"")); if use_templates:; shutil.rmtree(base.joinpath(""tmp2"")); if use_env:; shutil.rmtree(base.joinpath(""tmp3""))`; ; ; <MMseqs2 (easy) search> ; mmseqs createdb {query_db.fa} {queryDB_name}; mmseqs createdb /applic/AlphaFold/curren",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:5732,load,load-mode,5732,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['load'],['load-mode']
Performance,"scores calculation (step 1 of 1); Query db start 1 to 10966; Target db start 1 to 10966; [=================================================================] 10.97K 3s 91ms. 46.510777 k-mers per position; 438 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 13 sequences passed prefiltering per query sequence; 7 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 41ms; Time for processing: 0h 0m 8s 706ms; align ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/pref_step1 ./mmseqs_output/tmp/5351426679731834765/aln_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 10966 type: Aminoacid; Target database size: 10966 type: Aminoacid; Calculation of alignments; [=================================================================] 10.97K 9s 362ms; Time for merging to aln_step1: 0h 0m 0s 91ms; 128470 alignments calculated; 17027 sequence pairs passed the thresholds (0.132537 of overall calculated); 1.552708 hits per query sequence; Time for processing: 0h 0m 9s 872ms; clust ./mmseqs_output/tmp/5351426679731834765/input_step1 ./mmseqs_output/tmp/5351426679731834765/aln_step1 ./mmseqs_output/tmp/5351426679731834765/clu_step1 --cluster-mode 1 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:26241,load,load-mode,26241,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"se; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 5.7 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1 type: Profile; Estimated memory consumption: 127G; Target database size: 34746192 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 110; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 34746192; [=================================================================] 1 0s 1ms. 5111.040161 k-mers per position; 5884143 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 434ms; align profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURAR",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592:3773,load,load-mode,3773,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592,1,['load'],['load-mode']
Performance,"search_tmp/16020913209305565279/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 12 --compressed 1 -v 3 . [=================================================================] 100.00% 10.00K 0s 19ms ; Time for merging to q_orfs_aa_h: 0h 0m 0s 0ms; Time for merging to q_orfs_aa: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 27ms; prefilter tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 1 -v 3 . Query database size: 0 type: Aminoacid; Estimated memory consumption: 557M; Target database size: 19482 type: Profile; Index table k-mer threshold: 90 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 100.00% 19.48K 4s 492ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 19.48K 11s 88ms ; Index statistics; Entries: 454766207; DB size: 2633 MB; Avg k-mer size: 111.350382; Top 10 k-mers; RRRRR 1414; QQQQQ 1135; RRRRQ 985; SPPPP 965; QRRRR 962; PPPPS 953; RQRRR 940; RRRQR 927; RHRRR 914; RKRRR 902; Time for index table init: 0h 0m 16s 838ms; Time for processing: 0h 0m 17s 228ms; swapresults tmp1/15089590555632328148/search_tmp/160209132093",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:4494,load,load-mode,4494,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947,1,['load'],['load-mode']
Performance,sions used and their invocation:; g++ (GCC) 5.4.0; cmake version 3.28.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; uname -a | grep x86_64; Linux node7 3.10.0-1160.11.1.el7.x86_64 #1 SMP Fri Dec 18 16:34:56 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; * Operating system and version:; CentOS Linux release 8 (Core). * packages in current environment; `conda list; packages in environment at /home/liuhongbin/anaconda3/envs/colabfoldMSA:. Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 2_gnu conda-forge; absl-py 1.4.0 pypi_0 pypi; alphafold-colabfold 2.3.6 pypi_0 pypi; appdirs 1.4.4 pypi_0 pypi; astunparse 1.6.3 pypi_0 pypi; binutils 2.40 hdd6e379_0 conda-forge; binutils_impl_linux-64 2.40 hf600244_0 conda-forge; binutils_linux-64 2.40 hbdbef99_2 conda-forge; biopython 1.82 pypi_0 pypi; bzip2 1.0.8 hd590300_5 conda-forge; c-compiler 1.7.0 hd590300_0 conda-forge; ca-certificates 2023.11.17 hbcca054_0 conda-forge; cachetools 5.3.2 pypi_0 pypi; certifi 2023.11.17 pypi_0 pypi; charset-normalizer 3.3.2 pypi_0 pypi; chex 0.1.85 pypi_0 pypi; colabfold 1.5.5 pypi_0 pypi; contextlib2 21.6.0 pypi_0 pypi; contourpy 1.2.0 pypi_0 pypi; cxx-compiler 1.7.0 h00ab1b0_0 conda-forge; cycler 0.12.1 pypi_0 pypi; dm-haiku 0.0.10 pypi_0 pypi; dm-tree 0.1.8 pypi_0 pypi; flatbuffers 23.5.26 pypi_0 pypi; fonttools 4.47.0 pypi_0 pypi; gast 0.5.4 pypi_0 pypi; gcc 12.3.0 h8d2909c_2 conda-forge; gcc_impl_linux-64 12.3.0 he2b93b0_3 conda-forge; gcc_linux-64 12.3.0 h76fc315_2 conda-forge; google-auth 2.26.1 pypi_0 pypi; google-auth-oauthlib 1.2.0 pypi_0 pypi; google-pasta 0.2.0 pypi_0 pypi; grpcio 1.60.0 pypi_0 pypi; gxx 12.3.0 h8d2909c_2 conda-forge; gxx_impl_linux-64 12.3.0 he2b93b0_3 conda-forge; gxx_linux-64 12.3.0 h8a814eb_2 conda-forge; h5py 3.10.0 pypi_0 pypi; idna 3.6 pypi_0 pypi; immutabledict 4.1.0 pypi_0 pypi; importlib-metadata 4.13.0 pypi_0 pypi; jax 0.4.23 pypi_0 pypi; jaxlib 0.4.23 pypi_0 pypi; jmp 0.0.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/795:2628,cache,cachetools,2628,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/795,1,['cache'],['cachetools']
Performance,"so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/librt.so.1...Reading symbols from /usr/lib/debug/usr/lib64/librt-2.17.so.debug...done.; done.; Loaded symbols for /lib64/librt.so.1; Reading symbols from /lib64/libdl.so.2...Reading symbols from /usr/lib/debug/usr/lib64/libdl-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libdl.so.2; futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44; 44	/home/conda/feedstock_root/build_artifacts/ctng-compilers_1610729750655/work/.build/x86_64-conda-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h: No such file or directory. (gdb) bt; #0 futex_wait (val=8, addr=0x2b0f2df68094); at /home/conda/feedstock_root/build_artifacts/ctn",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:34347,Load,Loaded,34347,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,"split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 split; [=================================================================] 100.00% 541.12M 11m 3s 10ms ; Sort kmer 0h 0m 24s 363ms; Sort by rep. sequence 0h 0m 9s 647ms; Generate k-mers list for 4 split; [=================================================================] 100.00% 541.12M 11m 6s 122ms ; Sort kmer 0h 0m 14s 827ms; Sort by rep. sequence 0h 0m 3s 410ms; Merge splits ... Time for fill: 0h 14m 22s 381ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 1h 16m 36s 224ms; rescorediagonal DB DB tmp/10260956542131223380/linclust/4311072182387952617/pref tmp/10260956542131223380/linclust/4311072182387952617/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 1 -v 3 . Can not touch 215222407074 into main memory; [> ] 0.00% 1 eta -. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:7002,load,load-mode,7002,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['load'],['load-mode']
Performance,"split; [=================================================================] 6 0s 1ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 22ms; rescorediagonal /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3. [=================================================================] 6 0s 3ms; Time for merging to pref_rescore1: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 23ms; clust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref_rescore1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 6 0s 0ms; Sort entries; Find missing connections; Found 0 new connections.; Reconstruct initial order; [========================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:9732,load,load-mode,9732,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['load'],['load-mode']
Performance,"ssed 0 -v 3 . [=================================================================] 100.00% 1.32M 0s 321ms ; Time for merging to query_seqs_h: 0h 0m 0s 490ms; Time for merging to query_seqs: 0h 0m 2s 39ms; Time for processing: 0h 0m 3s 738ms; splitsequence tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 100.00% 2.64M 0s 246ms ; Time for merging to query_seqs_split_h: 0h 0m 0s 507ms; Time for merging to query_seqs_split: 0h 0m 0s 573ms; Time for processing: 0h 0m 2s 178ms; prefilter tmp/11485603906739492364/tmp_hsp1/7610357885614778610/query_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/target_seqs_split tmp/11485603906739492364/tmp_hsp1/7610357885614778610/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 2.0 . Query database size: 2644526 type: Nucleotide; Target split mode. Searching through 13 splits; Estimated memory consumption: 247G; Target database size: 99637107 type: Nucleotide; Process prefiltering step 1 of 13. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: Prefilter died; Error: Search step died; Error: First search died. ```. ## Environment; * AMD EPYC 7502P 32-Core Processor; * 320GB memory; * OS:; Ubuntu 20.04.2 LTS; Kernel: 5.4.0-70-generic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438:6803,load,load-mode,6803,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438,1,['load'],['load-mode']
Performance,"st/10067396915876818640/pref_filter1 tmp/16479300059278292880/linclust/10067396915876818640/pref_filter2 --filter-file tmp/16479300059278292880/linclust/10067396915876818640/order_redundancy --threads 112 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 855.53K 0s 584ms; Time for merging to pref_filter2: 0h 0m 1s 180ms; Time for processing: 0h 0m 3s 237ms; align tmp/16479300059278292880/linclust/10067396915876818640/input_step_redundancy tmp/16479300059278292880/linclust/10067396915876818640/input_step_redundancy tmp/16479300059278292880/linclust/10067396915876818640/pref_filter2 tmp/16479300059278292880/linclust/10067396915876818640/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 112 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 855530 type: Nucleotide; Target database size: 855530 type: Nucleotide; Calculation of alignments; [=================================================================] 855.53K 2m 53s 344ms; Time for merging to aln: 0h 0m 0s 811ms; 12214778 alignments calculated; 932129 sequence pairs passed the thresholds (0.076312 of overall calculated); 1.089534 hits per query sequence; Time for processing: 0h 3m 4s 809ms; clust tmp/16479300059278292880/linclust/10067396915876818640/input_step_redundancy tmp/16479300059278292880/linclust/10067396915876818640/aln tmp/16479300059278292880/li",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:8406,load,load-mode,8406,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['load'],['load-mode']
Performance,"std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 20 (LWP 7920 ""mmseqs""):; #0 MathUtil::NormalizeTo1 (def_array=0x0, length=20, array=0x7ecabcfc9220) at /home/vsts/work/1/s/src/commons/MathUtil.h:248; #1 PSSMCalculator::computeContextSpecificWeights (this=this@entry=0x7f1ffd7dbc10, matchWeight=0x7ee3e2190040, wg=0x7ee412750010, Neff_M=<optimized out>, queryLength=queryLength@entry=8032918, setSize=setSize@entry=1, X=0x7f20081f9a70) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:533; #2 0x00000000006c9cd5 in PSSMCalculator::computePSSMFromMSA (this=this@entry=0x7f1ffd7dbc10, setSize=setSize@entry=1, queryLength=8032918, msaSeqs=0x7f20081f9a70, wg=<optimized out>, scoreBias=scoreBias@entry=0) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:163; #3 0x000000000065834b in _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:263; #4 0x00000000008ab97e in gomp_thread_start (); #5 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #6 0x0000000000964ff3 in clone (). Thread 19 (LWP 7919 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:11896,optimiz,optimized,11896,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,2,['optimiz'],['optimized']
Performance,"step 1 of 1. k-mer similarity threshold: 82; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1303062545; Target db start 1 to 349750; [=================================================================] 1.30B 86h 42m 2s 376ms. 0.785483 k-mers per position; 240012 DB matches per sequence; 5731753 overflows; 0 queries produce too many hits (truncated result); 269 sequences passed prefiltering per query sequence; 300 median result list length; 134238 sequences with 0 size result lists; Time for merging to pref: 0h 30m 15s 580ms; Time for processing: 88h 9m 11s 291ms; swapresults repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/q_orfs_aa databases/eggnog repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref_swapped --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --split-memory-limit 300G --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --threads 56 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 1.30B 2h 8m 45s 98ms. Reading results.; [=================================================================] 1.30B 5h 47m 7s 401ms. Output database: repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref_swapped; [=================================================================] 26.35K 11m 16s 126ms. Time for merging to pref_swapped_0: 0h 40m 12s 625ms. Reading results.; [=================================================================] 1.30B 5h 40m 43s 346ms. Output database: repSEQS_eggnog.tmp/16640501639052377423/search_tmp/1950629703809443685/search/pref_swapped; [=================================================================] 32.57K 11m 9s 696ms. Time for merging to pref_swapped_1: 0h 38m 42s 418ms. Reading results.; [=================================================================] 1.30B 5h 39m 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/594:19631,load,load-mode,19631,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/594,1,['load'],['load-mode']
Performance,"stive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/tmp/17728638439372299279/first /data/ct/tmp/17728638439372299279/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 . prefilter /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/query_seqs_split /data/ct/datenbank/silva_mmseqs/silva.idx /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 18G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; ^C===============> ] 25.00% 2.00K eta 5m 1s . **Runs of Intel computer**; [kabru@bwp-cfdmain test]$ mmseqs taxonomy testdb ~/datenbank/silvadb testx_result tmp; taxonomy testdb /home/kabru/datenbank/silvadb testx_result tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy outp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:3882,load,load-mode,3882,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,1,['load'],['load-mode']
Performance,"t HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salvocos/tmp/test_sonicpara/mmseqs2_src/build; ```; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 40 CPUs 500Gbytes of shared memory; ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fpu_exception	: yes; cpuid level	: 15; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer xsave avx f16c rdrand lahf_lm abm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm xsaveopt cqm_llc cqm_occup_llc dtherm ida arat pln pts; bogomips	: 5199.77; clflush size	: 64; cache_alignment	: 64; address sizes	: 46 bits physical, 48 bits virtual. ...; ```; * Operating system and version:; ```; $uname -a; Linux XXX 3.10.0-693.11.1.el7.x86_64 #1 SMP Fri Oct 27 05:39:05 EDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:13579,cache,cache,13579,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,1,['cache'],['cache']
Performance,"t nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:2610,load,load-mode,2610,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['load'],['load-mode']
Performance,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimate",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:26610,load,load-mode,26610,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['load'],['load-mode']
Performance,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:5368,load,load-mode,5368,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,26,['load'],['load-mode']
Performance,"t,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 22ms; Time for merging to pref_rescore2: 0h 0m 0s 3ms ] 49.02% 76 eta 0s; Time for processing: 0h 0m 0s 76ms; align clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore2 clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 34ms; Time for merging to aln: 0h 0m 0s 2ms; 154 alignments calculated; 154 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 142ms; clust clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/input_step_redundancy clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/aln clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/clust --cluster-mode 0 --max-iterations 1000 --similarity-typ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:24982,load,load-mode,24982,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"t: 0h 0m 0s 908ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 24ms. 15.668402 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 591ms; align tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/pref_step1 tmp//7897776346521331899/aln_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 124 type: Aminoacid; Target database size: 124 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 124 0s 26ms; Time for merging to aln_step1: 0h 0m 0s 3ms=================> ] 91.87% 114 eta 0s; 124 alignments calculated; 124 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 62ms; clust tmp//7897776346521331899/input_step1 tmp//7897776346521331899/aln_step1 tmp//7897776346521331899/clu_step1 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [====",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:17626,load,load-mode,17626,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['load'],['load-mode']
Performance,"tep 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [================================================================] =276 0s 28ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 5ms; Time for processing: 0h 0m 1s 852ms; align tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/pref_step0 tmpfiles//13298481167543164943/aln_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 276 type: Aminoacid; Target database size: 276 type: Aminoacid; Calculation of alignments; [=================================================================] 276 0s 39ms; Time for merging to aln_step0: 0h 0m 0s 2ms. 413 alignments calculated.; 406 sequence pairs passed the thresholds (0.983051 of overall calculated).; 1.471014 hits per query sequence.; Time for processing: 0h 0m 0s 82ms; clust tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/aln_step0 tmpfiles//13298481167543164943/clu_step0 --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================] 276 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:13314,load,load-mode,13314,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['load'],['load-mode']
Performance,"tep 1; [=================================================================] 20.94K 0s 219ms; Clustering step 2; [=================================================================] 10.97K 0s 427ms; Clustering step 3; [=================================================================] 8.34K 0s 657ms; Clustering step 4; [=================================================================] 8.19K 0s 758ms; Write merged clustering; [=================================================================] 100.00K 0s 956ms; Time for merging to clu: 0h 0m 0s 164ms; Time for processing: 0h 0m 1s 268ms; align ./mms_smallDB ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/clu ./mmseqs_output/tmp/5351426679731834765/aln --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 40 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 100000 type: Aminoacid; Target database size: 100000 type: Aminoacid; Calculation of alignments; [=================================================================] 8.19K 8s 160ms; Time for merging to aln: 0h 0m 0s 15ms; 99829 alignments calculated; 73771 sequence pairs passed the thresholds (0.738974 of overall calculated); 9.012951 hits per query sequence; Time for processing: 0h 0m 8s 437ms; subtractdbs ./mmseqs_output/tmp/5351426679731834765/clu ./mmseqs_output/tmp/5351426679731834765/aln ./mmseqs_output/tmp/5351426679731834765/clu_not_accepted --e-profile 100000000 -e 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:33900,load,load-mode,33900,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['load'],['load-mode']
Performance,"th 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 1.98M 1m 21s 501ms; Time for merging to orfs_aa_h: 0h 2m 11s 439ms; Time for merging to orfs_aa: 0h 2m 30s 736ms; Time for processing: 0h 7m 50s 411ms; prefilter /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 80G -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3. Query database size: 310097721 type: Aminoacid; Target split mode. Searching through 8 splits; Estimated memory consumption: 68G; Target database size: 130661074 type: Aminoacid; Process prefiltering step 1 of 8. Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 16.33M 1m 18s 71ms; Index table: Masked residues: 106561528; Index table: fill; [=================================================================] 100.00% 16.33M 1m 52s 198ms; Index statistics; Entries: 4547882850; DB size: 35788 MB; Avg k-mer size: 3.553033; Top 10 k-mers; SGQQRIA 34312; GPGGKLL 32728; YTGTGKG 22590; DFEQLPH 19435; NVPGWSP 19433; FRYAFPS 19408; RYYVLGW 19401; TVDGDFS 18652; NKTDFVQ 18480; QDWVQIP 183",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:7005,load,load-mode,7005,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['load'],['load-mode']
Performance,"that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-file ../test/nr.fsa.taxidmapping. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; NCBI tax dump directory ../test/taxonomy/; Taxonomy mapping file ../test/nr.fsa.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 36; Verbosity 3. Loading nodes file ... Done, got 2304309 nodes; Loading merged file ... Done, added 61039 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```; Thanks for taking the time to look at this!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401:3110,Load,Loading,3110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401,3,['Load'],['Loading']
Performance,"tide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [=================================================================] 280.71K 3m 53s 720ms; Time for merging to aln: 0h 0m 0s 84ms; 356937745 alignments calculated; 350790208 sequence pairs passed the thresholds (0.982777 of overall calculated); 1249.635620 hits per query sequence; Time for processing: 0h 3m 57s 914ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref -v 3 . Time for processing: 0h 0m 0s 432ms; swapresults /tmp/tmp_MMSeq2/17595625152138277869/search_tmp/17414849138893322762/target_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1.79769e+308 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================] 280.71K 0s 514ms. Reading results.; [=================================================================] 280.71K 1s 567ms. Output database: /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap; [=================================================================] 69.22K 3s 841ms. Time for merging to aln_swap: 0h 0m 0s 23ms; Time for processing: 0h 0m 12s 313ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln -v 3 . Time for processing: 0h 0m 11s 128ms; mvdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 176ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:10694,load,load-mode,10694,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['load'],['load-mode']
Performance,"tion (step 1 of 1); Query db start 1 to 4; Target db start 1 to 2; [================================================] 4 ================0s 6ms; =; 0.991092 k-mers per position; 4326 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 2 median result list length; 2 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 8s 1ms; align tmp/9586069750715556969/search_tmp/1133007989511978496/query_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 tmp/9586069750715556969/search_tmp/1133007989511978496/aln --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 4 type: Nucleotide; Target database size: 2 type: Nucleotide; Calculation of alignments; [=================================================================] 4 0s 0ms; Time for merging to aln: 0h 0m 0s 0ms; 4 alignments calculated; 4 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 17ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/pref_0 -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/search/aln_0 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:9203,load,load-mode,9203,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['load'],['load-mode']
Performance,"tmp --tax-mapping-file '/data/clustered_nr/nr_rep_seq_to_taxid.map' -v 3; Create directory tmp; createtaxdb nr_rep_seq_db tmp --tax-mapping-file /data/clustered_nr/nr_rep_seq_to_taxid.map -v 3 . MMseqs Version: 	2fad714b525f1975b62c2d2b5aff28274ad57466; NCBI tax dump directory	; Taxonomy mapping file 	/data/clustered_nr/nr_rep_seq_to_taxid.map; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	20; Verbosity 	3. Download taxdump.tar.gz. 02/01 11:29:59 [NOTICE] Downloading 1 item(s); [#b8b044 0B/0B CN:1 DL:0B] ; 02/01 11:30:01 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; [#b8b044 51MiB/61MiB(84%) CN:1 DL:10MiB] ; 02/01 11:30:08 [NOTICE] Download complete: tmp/taxdump.tar.gz. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; b8b044|OK | 9.1MiB/s|tmp/taxdump.tar.gz. Status Legend:; (OK):download completed.; Loading nodes file ... Done, got 2550743 nodes; Loading merged file ... Done, added 75930 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Killed; ```; ## Context; I want to search some query sequences locally against a clustered version of the NR database. I downloaded the clustered database and taxonomy files (nr_cluster_taxid_formatted_final.tsv.gz, nr_rep_seq.fasta.gz) from [here](https://osf.io/tejwd/), which was created as per: https://research.arcadiascience.com/pub/resource-nr-clustering/release/3. I then processed the files like so:. ```; gunzip -c nr_cluster_taxid_formatted_final.tsv.gz | cut -f1,2 > nr_rep_seq_to_taxid.map; mmseqs createdb nr_rep_seq.fasta.gz nr_rep_seq_db; ```. After these completed successfully, I tried to create the taxdb as per the above:. ```; mmseqs createtaxdb nr_rep_seq_db tmp --tax-mapping-file '/data/clustered_nr/nr_rep_seq_to_taxid.map' -v 3; ```. But the job was killed. Questions:; * Was it likely killed because of exhausting my available RAM",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/811:1565,Load,Loading,1565,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811,1,['Load'],['Loading']
Performance,"tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died; ```. I removed the temporary directory created by my previous failed run of `mmseq map`, and then this `Please provid",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:3946,perform,performs,3946,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['perform'],['performs']
Performance,"tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Program call:; extractorfs /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp//3961034198315058036/2495337974437510140/q_orfs --min-length ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651:3868,perform,performs,3868,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651,1,['perform'],['performs']
Performance,"tmp/2226585588535541735/search_tmp/11167723337111805049/aln tmp/2226585588535541735/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 26ms; Writing results to: tmp/2226585588535541735/result; [=================================================================] 419.27K 2s 43ms. Time for merging to result: 0h 0m 0s 264ms; Time for processing: 0h 0m 6s 8ms; Remove temporary files; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/q_orfs_aa . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs . Time for processing: 0h 0m 0s 0ms; rmdb tmp/2226585588535541735/search_tmp/11167723337111805049/t_orfs_aa . Time for processing: 0h 0m 0s 0ms; convertalis tmp/2226585588535541735/query tmp/2226585588535541735/target tmp/2226585588535541735/result output.tsv --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,evalue,pident,tstart,tend,qlen,alnlen,qcov --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 64 --compressed 0 -v 3 . [=================================================================] 419.27K 3s 600ms; Time for merging to output.tsv: 0h 0m 3s 849ms; Time for processing: 0h 0m 12s 294ms; Removing temporary files; rmdb tmp/2226585588535541735/result . Time for processing: 0h 0m 2s 15ms; rmdb tmp/2226585588535541735/target . Time for processing: 0h 0m 0s 486ms; rmdb tmp/2226585588535541735/target_h . Time for processing: 0h 0m 0s 1ms; rmdb tmp/2226585588535541735/query . Time for processing: 0h 0m 0s 102ms; rmdb tmp/2226585588535541735/query_h . Time for processing: 0h 0m 0s 5ms; ```. ## Your Environment. I'm using the `11.e1a1c` conda release on Linux;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/339:11471,load,load-mode,11471,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/339,1,['load'],['load-mode']
Performance,"tractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_1 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_query_20230412_142303/tmp/18292001434761310910/profile_0 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_0. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. result2profile result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/182",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:5215,load,load-mode,5215,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['load'],['load-mode']
Performance,"tractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_2 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_query_20230412_142303/tmp/18292001434761310910/profile_1 result_query_20230412_142303/res result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2. expandaln result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/res /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/res_exp --db-load-mode 2 --threads 96 --expansio",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:8499,load,load-mode,8499,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['load'],['load-mode']
Performance,"ts/tmp//6404161245249296443/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_rescore2: 0h 0m 0s 19ms=================>] 99.48% 24.47K eta 0s ; Time for processing: 0h 0m 0s 59ms; align experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_rescore2 experiments/tmp//6404161245249296443/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 12 --compressed 0 -v 3 . Compute score and coverage; Query database size: 24598 type: Aminoacid; Target database size: 24598 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 24.60K 0s 159ms ; Time for merging to aln: 0h 0m 0s 22ms. 25322 alignments calculated.; 24830 sequence pairs passed the thresholds (0.980570 of overall calculated).; 1.009432 hits per query sequence.; Time for processing: 0h 0m 0s 211ms; clust experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/aln experiments/tmp//6404161245249296443/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 24.60K 0s 10ms ; Sort entries",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:9327,load,load-mode,9327,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['load'],['load-mode']
Performance,"ttaching to process 9878. warning: process 9878 is a cloned process; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/mmseqs...(no debugging symbols found)...done.; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libatomic.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1...(no debugging symbols found)...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libz.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libbz2.so.1.0; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libstdc++.so.6; Reading symbols from /lib64/libm.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libm-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libm.so.6; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgomp.so.1; Reading symbols from /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1...done.; Loaded symbols for /home/dportik/.conda/envs/mmseqs/bin/../lib/libgcc_s.so.1; Reading symbols from /lib64/libpthread.so.0...Reading symbols from /usr/lib/debug/usr/lib64/libpthread-2.17.so.debug...done.; done.; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Loaded symbols for /lib64/libpthread.so.0; Reading symbols from /lib64/libc.so.6...Reading symbols from /usr/lib/debug/usr/lib64/libc-2.17.so.debug...done.; done.; Loaded symbols for /lib64/libc.so.6; Reading symbols from /lib64/ld-linux-x86-64.so.2...Reading symbols from /usr/lib/debug/usr/lib64/ld-2.17.so.debug...done.; done.; Loaded symbols for /lib64/ld-linux-x86-64.so.2; Reading symbols from /lib64/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:33575,Load,Loaded,33575,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Load'],['Loaded']
Performance,"type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB tmp/10260956542131223380/clu_redundancy tmp/10260956542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:3748,load,load-mode,3748,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['load'],['load-mode']
Performance,"ubdb /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/clu_step0 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step_redundancy /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 -v 3 --subdb-mode 1 . Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/input_step1 /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/pref_step1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 3.5 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 8 --compressed 0 -v 3 . Query database size: 6712 type: Aminoacid; Estimated memory consumption: 998M; Target database size: 6712 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 100.00% 6.71K 0s 98ms ; Index table: Masked residues: 74049; Index table: fill; [=================================================================] 100.00% 6.71K 0s 81ms ; Index statistics; Entries: 2455512; DB size: 502 MB; Avg k-mer size: 0.038367; Top 10 k-mers; IHDKNI 28; GPGGTL 17; LGGFVY 14; GQQVAR 10; SGQQAI 9; RDKELL 9; LQQESM 9; PGTNKN 9; EINVLQ 9; RARQDS 9; Time for index table init: 0h 0m 0s 735ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6712; Target db st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:21582,load,load-mode,21582,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['load'],['load-mode']
Performance,"ult.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1; Threads 	30; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using split mode; Index table: counting k-mers...; ......................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; ............",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1598,load,loading,1598,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['load'],['loading']
Performance,"um seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Force restart using the latest tmp false; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile.idx tmp/6822607060114486044/pref --sub-mat blosum62.out --seed-sub-mat VTML80.out -s 7.5 -k 6 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 10 --compressed 0 -v 3 . Initialising data structures...; Using 10 threads.; Substitution matrices...; Substitution matrices...; Use index pfam_profile.idx; Index version: 15; Generated by: 8-fac81; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqType: Profile; Headers1: 1; Headers2: 0; ScoreMatrix: VTML80.out; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1064365435 byte) of total memory (181308646195 byte); Target database: pfam_profile.idx(Size: 17772); Query database type: Aminoacid; Target database type: Profile; Time for init: 0h 4m 18s 41ms; Query database: pbps.neighbors.DB(size=1364570); Process prefiltering step 1 of 1. k-mer similarity threshold: 90; k-mer match probability: 0. Star",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:2550,load,load-mode,2550,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,1,['load'],['load-mode']
Performance,"um62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=================================================================] 140.20K 2m 37s 793ms; Time for merging to pref_rescore1: 0h 0m 0s 35ms; Time for processing: 0h 2m 48s 60ms; clust db/dbclust tmp/16437734971973434362/pref_rescore1 tmp/16437734971973434362/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 36 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 140.20K 0s 7ms; Sort entries; Find missing connections; Found 44 new connections.; Reconstruct initial order; [=================================================================] 140.20K 0s 7ms; Add missing connections; [=================================================================] 140.20K 0s 3ms. Time for read in: 0h 0m 0s 42ms; Total time: 0h 0m 0s 64ms. Size of the sequence database: 140204; Size of the alignment database: 140204; Number of clusters: 140160. Writing res",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:1917,load,load-mode,1917,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['load'],['load-mode']
Performance,"unadopted data in the 'assignGroup' function, allowing for more effective clustering. ### Details. **1 Extended Search Process :**. > For the same k-mer group, the process of combining the representative sequence with each sequence has been extended. The algorithm now calculates sequence dissimilarity using adjacent sequence information. The most dissimilar sequence is selected as the next representative sequence, and this exploration process is repeated. If there are multiple sequences with the same level of dissimilarity, the most recently explored sequence is chosen as the representative sequence. Additionally, the selection of the most dissimilar sequence is limited to sequences that follow the current representative sequence in the search order. **2. Data Structure Challenges**. > The implementation of this method introduced challenges in maintaining the original in-place data structure. To overcome these challenges, a new data structure has been introduced with an additional buffer (slack space) at the end. The new data structure includes a default buffer size of 5%. . **3. Dynamic Memory Allocation**. > If memory becomes insufficient during operation, the structure dynamically resizes by splitting and reallocating memory based on the progress of the previous process. This approach ensures efficient memory usage and prevents potential memory shortages. ### Benchmark Results. > I conducted benchmarking on datasets randomly selected from the UniParc dataset, with sizes of 1.3M, 2.7M, 5.3M, 11M, 21M, 42M, and 85M. The results confirmed that the new algorithm effectively reduces the number of clusters while maintaining linearity, showing no significant time difference compared to the existing Linclust method. Despite these improvements, the algorithm still lags behind the easy-cluster method and does not fully reach the ideal results obtained by performing a quadratic search that captures all possible combinations. Thus, there remains room for further improvement.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/873:2070,perform,performing,2070,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873,1,['perform'],['performing']
Performance,"unately no. Also, sorry for don't ask before. So I did this way: ; 1- Download the MMseqs2 Version: aa14ce37feb5eda7231af20259d8f2b659162236 ; 2- Compile as [described here](https://github.com/soedinglab/MMseqs2/#compile-from-source) but changing `cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..` by `cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=. ..` ; 3- Run all steps below:; > mmseqs createdb tcdb_query.nr.fa tcdb_query.nr.db 2>&1 >> log ; > mmseqs createdb all.fa all.db 2>&1 >> log; ; > mmseqs search tcdb_query.nr.db all.db tcdb_result.db tmp --threads 40 -s 7.5 --num-iterations 3 -a --max-seqs 17702628 -c 0.8 --add-self-matches 2>&1 >> log . 4- After crash:; > gdb --args mmseqs align tcdb_query.nr.db all.db tmp/1072319213335698383/pref_0 tmp/1072319213335698383/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 17702628 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 -v 3 . return:; ```; GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-114.el7; Copyright (C) 2013 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /home/acpguedes/source/MMseqs2/build/bin/mmseqs...done.; (gdb) bt; No stack.; ```. Important note:; I send the STDOUT and STDERR to log file but there are one message that was printed on the screen and not on log file: ; `scoreIdentical has different length L: scoreIdentical has different length L:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-455599510:1073,load,load-mode,1073,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-455599510,1,['load'],['load-mode']
Performance,uncated; > .Sequence 10717 produces too many hits. Results might be truncated; > Sequence 11844 produces too many hits. Results might be truncated; > Sequence 12630 produces too many hits. Results might be truncated; > Sequence 12971 produces too many hits. Results might be truncated; > ; > 38654 k-mers per position.; > 57944556 DB matches per sequence.; > 8775 Overflows.; > 1852622 sequences passed prefiltering per query sequence.; > Median result list size: 1612533; > 0 sequences with 0 size result lists.; > ; > Time for prefiltering scores calculation: 0h 56m 42s 147ms; > Time for merging files: 0h 17m 3s 113ms; > Time for processing: 1h 16m 55s 652ms; > Program call:; > align tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 tmp/18071041534032520912/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 17702628 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 15 -v 3 ; > ; > MMseqs Version: 	7ca117893675cdca309e2c9dfc444bbc7462e858; > Sub Matrix 	blosum62.out; > Add backtrace 	true; > Alignment mode 	2; > E-value threshold 	0.1; > Seq. Id Threshold 	0; > Seq. Id. Mode 	0; > Alternative alignments 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Max. sequence length 	65535; > Max. results per query 	17702628; > Compositional bias 	1; > Realign hit 	true; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id.	true; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	11; > Gap extension cost 	1; > Threads 	15; > Verbosity 	3; > ; > Init data structures...; > Compute score only.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength:,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:7225,load,load-mode,7225,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,1,['load'],['load-mode']
Performance,"undancy --threads 100 --compressed 0 -v 3 . Filtering using file(s); [=================================================================] 764.94M 1m 44s 691ms; Time for merging to pref_filter2: 0h 20m 18s 697ms; Time for processing: 0h 33m 25s 677ms; align /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref_filter2 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 100 --compressed 0 -v 3 . Compute score and coverage; Query database size: 764944038 type: Nucleotide; Target database size: 764944038 type: Nucleotide; Calculation of alignments; [=================================================================] 764.94M 11m 10s 977ms; Time for merging to aln: 0h 22m 11s 346ms. 781259144 alignments calculated.; 765501715 sequence pairs passed the thresholds (0.979831 of overall calculated).; 1.000729 hits per query sequence.; Time for processing: 0h 49m 18s 712ms; clust /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/input_step_redundancy /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/aln /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/prote",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:5910,load,load-mode,5910,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['load'],['load-mode']
Performance,"use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement for FreeBSD, but I think SSE2 is safe to assume for amd64, but I also added a pkg-message suggesting an optimized build from source. How much performance gain do you typically see from SSE4 or AVX?. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:2104,optimiz,optimized,2104,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555,2,"['optimiz', 'perform']","['optimized', 'performance']"
Performance,"ut,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100.00% 154 0s 7ms; Time for merging to pref_rescore2: 0h 0m 0s 1ms ] 49.67% 77 eta 0s; Time for processing: 0h 0m 0s 37ms; align clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore2 clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 16 --compressed 0 -v 3. Compute score, coverage and sequence identity; Query database size: 154 type: Aminoacid; Target database size: 154 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 154 0s 42ms; Time for merging to aln: 0h 0m 0s 4ms; 154 alignments calculated; 154 sequence pairs passed the thresholds (1.000000 of overall calculated); 1.000000 hits per query sequence; Time for processing: 0h 0m 0s 74ms; clust clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/input_step_redundancy clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/aln clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/clust --cluster-mode 0 --max-iterations 1000 --similarity-type",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:9361,load,load-mode,9361,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['load'],['load-mode']
Performance,"v-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 156ms; rescorediagonal DB_in/shuffle_in DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [==============================================================] ===1.95K 0s 40ms; Time for merging to pref_rescore1: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 71ms; clust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore1 DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 1.95K 0s 9ms; Sort entries; Find missing connections; Found 1534 new connections.; Reconstruct initial order; [=================================================================] 1.95K 0s 10ms; Add missing connections; [=================================================================] 1.95K 0s 0ms. Time for read in: 0h 0m 0s 95ms; Total time: 0h 0m 0s 137ms. Size of the sequence database: 1951; Si",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:4656,load,load-mode,4656,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['load'],['load-mode']
Performance,"v-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.31B 2h 34m 42s 85ms; Sort kmer 0h 0m 52s 653ms; Sort by rep. sequence 0h 0m 31s 645ms; Generate k-mers list for 2 split; [=================================================================] 1.31B 2h 36m 22s 543ms; Sort kmer 0h 0m 44s 690ms; Sort by rep. sequence 0h 0m 26s 121ms; Merge splits ... Time for fill: 1h 31m 44s 960ms; Time for merging to pref: 0h 0m 0s 6ms; Time for processing: 10h 13m 54s 576ms; rescorediagonal JGI JGI tmp/14756877054557405347/pref tmp/14756877054557405347/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 . Can not touch 407600133816 into main memory. ## Your Environment; Latest precompiled AVX2 version Release 15-6f452",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:4282,load,load-mode,4282,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['load'],['load-mode']
Performance,"value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp//3961034198315058036 --sub-mat blosum62.out -s 2 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 -v 3 --rescore-mode 2 --filter-hits 0 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --sort-results 1 --global-alignment 0 --min-length 1 --max-length 2147483647 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --start-sens 4 --sens-steps 1 --remove-tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Inclu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:2514,load,load-mode,2514,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['load'],['load-mode']
Performance,"value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp//3961034198315058036 --sub-mat blosum62.out -s 2 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 -v 3 --rescore-mode 2 --filter-hits 0 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --sort-results 1 --global-alignment 0 --min-length 1 --max-length 2147483647 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --start-sens 4 --sens-steps 1 --remove-tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Inclu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651:2436,load,load-mode,2436,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651,1,['load'],['load-mode']
Performance,"ve. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): e2510e8f6911e4340c62989aa9ba1b9c58e18d60; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.5.1, c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version: ubuntu1~16.04.12",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/320:1967,Load,Loading,1967,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320,1,['Load'],['Loading']
Performance,"version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Invalid database read for database data file=/home/username/project/my_local_DB/target_DB.idx, database index=/home/username/project/my_local_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); Traceback (most recent call last):; File ""/home/username/project/colabfold_batch/colabfold-conda/bin/colabfold_search"", line 8, in <module>; sys.exit(main()); File ""/home/username/project/colabfold_batch/colabfold-conda/lib/python3.7/site-packages/colabfold/mmseqs/search.py"", line 444, in main; threads=args.threads,; File ""/home/username/project/colabfold_batch/colabfold-conda/lib/python3.7/site-packages/colabfold/mmseqs/search.py"", line 86, in mmseqs_search_monomer; run_mmseqs(mmseqs, [""expandaln"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""), base.joinpath(""res""), dbbase.joinpath(f""{uniref_db}{dbSuffix2}""), base.joinpath(""res_exp""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + expand_param). File ""/home/username/project/colabfold_batch/colabfold-conda/lib/python3.7/site-packages/colabfold/mmseqs/search.py"", line 23, in run_mmseqs; subprocess.check_call([mmseqs] + params); File ""/home/username/project/colabfold_batch/colabfold-conda/lib/python3.7/subprocess.py"", line 363, in check_call; raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '[PosixPath('mmseqs'), 'expandaln', PosixPath('result_query_20230412_142303/qdb'), PosixPath('/home/username/project/my_local_DB/target_DB.idx'), PosixPath('result_query_20230412_142303/res'), PosixPath('/home/username/project/my_local_DB/target_DB.idx'), PosixPath('result_query_20230412_142303/res_exp'), '--db-load-mode', '2', '--threads', '96', '--expansion-mode', '0', '-e', '1.7976931348623157e+308', '--expand-filter-clusters', '1', '--max-seq-id', '0.95']' returned non-zero exit status 1. ```. `target_DB` is a brand new database; I have not added nor deleted r",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:11309,load,load-mode,11309,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['load'],['load-mode']
Performance,"wc -l test1`; 15447 test1. `wc -l test2`; 32 test2. The third command runs without issuing any warning (it effectively does nothing to the database). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1. Download a small NCBI-like taxonomy database **swissProtSomeClasses** from [here](https://github.com/soedinglab/metaeuk-regression/tree/master/sacc_tax); 2. Run the commands above. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test1 --taxon-list 4891||1075807||147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891||1075807||147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. and . ```; filtertaxseqdb metaeuk-regression-master/sacc_tax/swissProtSomeClasses test2 --taxon-list 4891,1075807,147549 . MMseqs Version:	e2510e8f6911e4340c62989aa9ba1b9c58e18d60; Compressed 	0; Selected taxa	4891,1075807,147549; Subdb mode 	0; Threads 	8; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 13938 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. The help for modules that use `--taxon-list` allows for comma separated values:; `--taxon-list STR Taxonomy ID, possibly multiple values separated by ',' []`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/320:1497,Load,Loading,1497,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320,1,['Load'],['Loading']
Performance,"with 0 size result lists; Time for merging to orfs_pref_tmp_7: 0h 3m 12s 265ms; Time for merging to orfs_pref_tmp_7_tmp: 0h 1m 51s 505ms; Merging 8 target splits to orfs_pref; Preparing offsets for merging: 0h 4m 24s 509ms; [=================================================================] 100.00% 310.10M 1m 43s 629ms; Time for merging to orfs_pref: 0h 2m 28s 649ms; Time for merging target splits: 0h 8m 46s 959ms; Time for merging to orfs_pref_tmp: 0h 1m 57s 44ms; Time for processing: 10h 1m 11s 163ms; rescorediagonal /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_pref /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aln --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 2 --wrapped-scoring 0 --filter-hits 0 -e 100 -c 0 -a 0 --cov-mode 0 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 24 --compressed 0 -v 3. [=================================================================] 100.00% 310.10M 1m 26s 457ms; Time for merging to orfs_aln: 0h 2m 24s 668ms; Time for processing: 0h 4m 43s 316ms; createsubdb /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aln.list /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aa /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter --subdb-mode 1 -v 3. Time for merging to orfs_filter: 0h 0m 0s 6ms; Time for processing: 0h 0m 41s 304ms; rmdb /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_filter_h -v 3. Time for processing: 0h 0m 0s 5ms; createsubdb /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113407709442268/orfs_aln.list /pbi/flash/dportik/mmseqs/14545297231079568357/taxonomy_tmp/8105113",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:18441,load,load-mode,18441,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['load'],['load-mode']
Performance,"x 	blosum62.out; > Add backtrace 	true; > Alignment mode 	2; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Seq. Id. Mode 	0; > Alternative alignments 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Max. sequence length 	65535; > Max. results per query 	17702628; > Compositional bias 	1; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	true; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	11; > Gap extension cost 	1; > Threads 	15; > Verbosity 	3; > Sensitivity 	7.5; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Split Memory Limit 	0; > Diagonal Scoring 	1; > Exact k-mer matching 	0; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Spaced k-mer pattern 	; > Rescore mode 	0; > Remove hits by seq.id. and coverage 	false; > Sort results 	0; > In substitution scoring mode, performs global alignment along the diagonal	false; > Mask profile 	1; > Profile e-value threshold 	0.1; > Use global sequence weighting 	false; > Filter MSA 	1; > Maximum sequence identity threshold 	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	1000; > Omit Consensus 	false; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward Frames 	1,2,3; > Reverse Frames 	1,2,3; > Translation Table 	1; > Use all table starts 	false; > Offset of numeric ids 	0; > Add Orf Stop 	false; > Number search iterations 	3; > Start sensitivity 	4; > Search steps 	1; > Run a seq-profile search in slice mode 	false; > Strand selection 	1; > Disk space limit 	0; > Sets the MPI runner 	; > Remove Temporary Files 	false; > ; > Program call:; > prefilter tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 --sub-mat blosum62.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134:1610,perform,performs,1610,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134,1,['perform'],['performs']
Performance,"x-gnu/libthread_db.so.1"".; nr_mmseqs/nr_db_mapping exists and will be overwritten; nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3 . MMseqs Version:	f5b588be54de35876eff90f3694b67e1d00856ef; Threads 	16; Verbosity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:343; #10 std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/666:2053,optimiz,optimized,2053,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666,2,['optimiz'],['optimized']
Performance,"x: :; [=================================================================] 323 0s 253ms; Time for merging into tmp/2730103712073724212/search/reverse_ungapaln by mergeResults: 0h 0m 0s 177ms; Time for processing: 0h 0m 0s 855ms; filterdb tmp/2730103712073724212/search/pref tmp/2730103712073724212/search/pref_filter --filter-file tmp/2730103712073724212/search/reverse_ungapaln --positive-filter 0 . Filtering with filter files.; [=================================================================] 323 0s 12ms; Time for merging into tmp/2730103712073724212/search/pref_filter by mergeResults: 0h 0m 0s 171ms; Time for processing: 0h 0m 0s 397ms; align /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/pref_filter tmp/2730103712073724212/search/reverse_aln --sub-mat nucl:nucleotide.out,aa:blos; um62.out -a 0 --alignment-mode 2 -e 100000 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2; 147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Compute score and coverage; Query database size: 561568 type: Aminoacid; Target database size: 14926 type: Aminoacid; Calculation of alignments; [=================================================================] 323 0s 62ms; Time for merging into tmp/2730103712073724212/search/reverse_aln by mergeResults: 0h 0m 0s 109ms. 335 alignments calculated.; 323 sequence pairs passed the thresholds (0.964179 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 427ms; swapresults /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/reverse_aln tmp/2730103712073724212/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out ; -e 0.001 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273:4896,load,load-mode,4896,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273,1,['load'],['load-mode']
Performance,"xdb target_DB target_DB --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 96; ```. Then I ran `colabfold_search`. Output is below. ```; CUDA_VISIBLE_DEVICES='0' colabfold_search; -s '8'; --db1 'target_DB'; --use-templates '0'; --db2 ''; --use-env '0'; --db3 ''; --filter '1'; --mmseqs 'mmseqs'; --expand-eval '1.7e+308'; --align-eval '10'; --diff '3000'; --qsc '-20.0'; --max-accept '1000000'; --db-load-mode '2'; --threads '96'; query.fasta; /home/username/project/my_local_DB; result_query_20230412_142303. createdb result_query_20230412_142303/query.fas result_query_20230412_142303/qdb --shuffle 0. search result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB result_query_20230412_142303/res result_query_20230412_142303/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tm",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:1795,load,load-mode,1795,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['load'],['load-mode']
Performance,"y db start 1 to 9; Target db start 1 to 713072; [=================================================================] 100.00% 9 0s 6ms. 10.636821 k-mers per position; 10265 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 66 sequences passed prefiltering per query sequence; 36 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 38ms; Time for processing: 0h 0m 0s 251ms; lcaalign tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/first --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Compute score only; Query database size: 9 type: Aminoacid; Target database size: 713072 type: Aminoacid; [=================================================================] 100.00% 9 0s 44ms; Time for merging to first: 0h 0m 0s 37ms; 128 alignments calculated; 88 sequence pairs passed the thresholds (0.687500 of overall calculated); 9.777778 hits per query sequence; Time for processing: 0h 0m 0s 189ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/115501",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:11198,load,load-mode,11198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,1,['load'],['load-mode']
Performance,"y-limit 60G; mmseqs createsubdb viral_clu viral_db viral_rep; ```; Then I merged 2 fastq files with _plass_; `plass mergereads ./OUT/8813_paired_1.fastq ./OUT/8813_paired_2.fastq ./OUT/8813_db --threads 10; `; I thought [this was the way](https://github.com/soedinglab/MMseqs2/issues/436) to feed the next steps, 8813_db would be the query in this case. I reasoned since the database of nonredundant proteins is in nucleotide format and the reads created a nucleotide database the search would be between nucleotide. . **I run** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --search-type 3; `. I got this error ; ```; Unrecognized parameter --search-type; Did you mean ""--seed-sub-mat""?; ```. **Or** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --seed-sub-mat nucl`. and I got this message error; ```; It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. Using 8813_FA as a query which -a simple database created from a fasta, part of the assembly of that sample, the search works. `mmseqs search 8813_FA ../DATABASE/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:1568,perform,performed,1568,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,1,['perform'],['performed']
Performance,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1072,Perform,Performing,1072,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,14,['Perform'],['Performing']
Performance,"y_h: 0h 0m 0s 0ms; Time for merging to query: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 4ms; Create directory tmp_easy_search/6745795380167965363/search_tmp; search tmp_easy_search/6745795380167965363/query target_DB tmp_easy_search/6745795380167965363/result tmp_easy_search/6745795380167965363/search_tmp -a 1 --alignment-mode 3 --threads 96 -s 5.7 --sort-results 0 --remove-tmp-files 0 . prefilter tmp_easy_search/6745795380167965363/query target_DB.idx tmp_easy_search/6745795380167965363/search_tmp/11203198373180040937/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3 -s 5.7 . Index version: 16; Generated by: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; ScoreMatrix: VTML80.out; Query database size: 1 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 104664 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 112; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 104664; [=================================================================] 1 0s 0ms. 182.205357 k-mers per position; 65472 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 300 sequences passed prefiltering per query sequence; 300 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 93ms; align tmp_easy_search/67457953801679",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693:5487,load,load-mode,5487,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693,1,['load'],['load-mode']
Performance,"y_local_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. I created `target_DB` from `target.fasta` which has 142 records in it:. ```; pwd; # /home/username/project/my_local_DB. mmseqs createdb target.fasta target_DB; mmseqs createindex target_DB tmp_createindex --threads 96. indexdb target_DB target_DB --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 96; ```. Then I ran `colabfold_search`. Output is below. ```; CUDA_VISIBLE_DEVICES='0' colabfold_search; -s '8'; --db1 'target_DB'; --use-templates '0'; --db2 ''; --use-env '0'; --db3 ''; --filter '1'; --mmseqs 'mmseqs'; --expand-eval '1.7e+308'; --align-eval '10'; --diff '3000'; --qsc '-20.0'; --max-accept '1000000'; --db-load-mode '2'; --threads '96'; query.fasta; /home/username/project/my_local_DB; result_query_20230412_142303. createdb result_query_20230412_142303/query.fas result_query_20230412_142303/qdb --shuffle 0. search result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB result_query_20230412_142303/res result_query_20230412_142303/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:1403,load,load-mode,1403,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['load'],['load-mode']
Performance,"y_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 24 --compressed 0 -v 3 . [=================================================================] 100.00% 9.78K 0s 59ms ; Time for merging to query_seqs_h: 0h 0m 0s 439ms; Time for merging to query_seqs: 0h 0m 0s 494ms; Time for processing: 0h 0m 2s 117ms; prefilter tmp/3198441352783276465/clu_tmp/13016959338117486175/query_seqs tmp/3198441352783276465/clu_tmp/13016959338117486175/input_step_redundancy tmp/3198441352783276465/clu_tmp/13016959338117486175/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 1 -k 15 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 5 --comp-bias-corr 0 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 1 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 60 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 24 --compressed 0 -v 3 . Query database size: 19552 type: Nucleotide; Estimated memory consumption: 8G; Target database size: 9776 type: Nucleotide; tmp/3198441352783276465/clu_tmp/13016959338117486175/nucleotide_clustering.sh: line 48: 1648954 Killed $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am trying to cluster a number of gene sequences with an identity of 0.8 and no minimum length for the aligned portion of the genes. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15.6f452; * Which MMseqs versio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:16440,load,load-mode,16440,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['load'],['load-mode']
Performance,"zdrop 40 --threads 1 --compressed 0 -v 3 . Compute score only; Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; Calculation of alignments; [=================================================================] 2 0s 0ms; Time for merging to aln_0: 0h 0m 0s 0ms; 0 alignments calculated; 0 sequence pairs passed the thresholds; 0.000000 hits per query sequence; Time for processing: 0h 0m 0s 32ms; result2profile tmp/18381709049222694944/search_tmp/5133381881548774306/query_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/aln_0 tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 1 --compressed 0 -v 3 . Query database size: 2 type: Nucleotide; Target database size: 5 type: Nucleotide; [=================================================================] 2 0s 0ms; Time for merging to profile_0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp/18381709049222694944/search_tmp/5133381881548774306/search/profile_0 tmp/18381709049222694944/search_tmp/5133381881548774306/target_seqs_split tmp/18381709049222694944/search_tmp/5133381881548774306/search/pref_tmp_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 1 --compressed 0 -v 3 . ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:13912,load,load-mode,13912,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['load'],['load-mode']
Performance,"}/prof_res""; ""${MMSEQS}"" lndb ""${BASE}/qdb_h"" ""${BASE}/prof_res_h""; **mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124** ; # I got stucked at the above command. **next I am gonna do** ; ""${MMSEQS}"" align ""${BASE}/prof_res"" ""${DB1}.idx"" ""${BASE}/res_exp"" ""${BASE}/res_exp_realign"" --db-load-mode 2 -e ${ALIGN_EVAL} --max-accept ${MAX_ACCEPT} --alt-ali 10 -a; ""${MMSEQS}"" filterresult ""${BASE}/qdb"" ""${DB1}.idx"" ""${BASE}/res_exp_realign"" ""${BASE}/res_exp_realign_filter"" --db-load-mode 2 --qid 0 --qsc $QSC --diff 0 --max-seq-id 1.0 --filter-min-enable 100. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; $ time mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124; expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124 . MMseqs Version: 	GITDIR-NOTFOUND; Expansion mode 	0; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Max sequence length 	65535; Score bias 	0; Compositional bias 	1; Compositional bias 	1; E-value threshold 	inf; Seq. id. threshold 	0; Coverage threshold 	0; Coverage mode 	0; Pseudo count mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Expand filter clusters 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.95; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	2; Compressed 	0; Threads 	124; Verbosity 	3. ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:2712,load,load-mode,2712,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['load'],['load-mode']
Performance,"렉토리에 저장됩니다; ; run_mmseqs(mmseqs, [""mvdb"", base.joinpath(""tmp/latest/profile_1""), base.joinpath(""prof_res"")]); run_mmseqs(mmseqs, [""lndb"", base.joinpath(""qdb_h""), base.joinpath(""prof_res_h"")]); ; run_mmseqs(mmseqs, [""expandaln"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""), base.joinpath(""res""), dbbase.joinpath(f""{uniref_db}{dbSuffix2}""), base.joinpath(""res_exp""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + expand_param); run_mmseqs(mmseqs, [""align"", base.joinpath(""prof_res""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""), base.joinpath(""res_exp""), base.joinpath(""res_exp_realign""), ""--db-load-mode"", str(db_load_mode), ""-e"", str(align_eval), ""--max-accept"", str(max_accept), ""--threads"", str(threads), ""--alt-ali"", ""10"", ""-a""]); run_mmseqs(mmseqs, [""filterresult"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign""), base.joinpath(""res_exp_realign_filter""), ""--db-load-mode"",; str(db_load_mode), ""--qid"", ""0"", ""--qsc"", str(qsc), ""--diff"", ""0"", ""--threads"",; str(threads), ""--max-seq-id"", ""1.0"", ""--filter-min-enable"", ""100""]); run_mmseqs(mmseqs, [""result2msa"", base.joinpath(""qdb""), dbbase.joinpath(f""{uniref_db}{dbSuffix1}""),; base.joinpath(""res_exp_realign_filter""), base.joinpath(""uniref.a3m""), ""--msa-format-mode"",; ""6"", ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)] + filter_param); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res"")]); subprocess.run([mmseqs] + [""rmdb"", base.joinpath(""res_exp_realign_filter"")]); ; if use_templates:; run_mmseqs(mmseqs, [""search"", base.joinpath(""prof_res""), dbbase.joinpath(template_db), base.joinpath(""res_pdb""),; base.joinpath(""tmp2""), ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads), ""-s"", ""7.5"", ""-a"", ""-e"", ""0.1"", ""--prefilter-mode"", str(prefilter_mode)]); run_mmseqs(mmseqs, [""convertalis""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:4417,load,load-mode,4417,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['load'],['load-mode']
Safety,"	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	1; Compressed 	0; Verbosity 	3; Rescore mode 	2; Allow wrapped scoring 	false; Remove hits by seq. id. and coverage	false; E-value threshold 	0.001; Add backtrace 	false; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Sort results 	1; Min codons in orf 	10; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Start sensitivity 	4; Search steps 	1; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. I don't know if the error is right at the start using _plass_ int this context or with the _map_ command. Could you let me know how to proceed to use paired fastq data with the 'map pipeline'? ; Thanks for your help!. ## Context. After clustering all the proteins found in several samples I am trying to estimate the relative abundance of proteins in a non-redundant database considering the paired read files I have. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; using MMseqs2 Version: 113e3212c137d026e297c7540e1fcd039f6812b1 or 12 in a cluster ; and the plass-linux-sse41.tar.gz executable for plass. ; * Operating system and version: Ubuntu 18.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:4099,redund,redundant,4099,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,1,['redund'],['redundant']
Safety," 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.75; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	62G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; Error: Pre-clustering step died; ```; I also have an error log : . ```; + mmseqs linclust /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB_clu /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp --min-seq-id 0.75 --threads 20 -v 3 --force-reuse 1 --split-memory-limit 62G; /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/linclust.sh: line 37: 1000278 Killed ""$MMSEQS"" clust ""$INPUT"" ""${TMP_PATH}/pref_rescore1"" ""${TMP_PATH}/pre_clust"" ${CLUSTER_PAR}. real	8m30.284s; user	12m57.207s; sys	2m3.531s; slurmstepd: error: Detected 1 oom_kill event in StepId=1504095.batch. Some of the step tasks have been OOM Killed.; ```. I see that it's a memory issue but I don't know what to do to solve this.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:10091,Detect,Detected,10091,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['Detect'],['Detected']
Safety," 184969)]; [New Thread 0x7f741fe0e700 (LWP 184970)]; [New Thread 0x7f741f60d700 (LWP 184971)]; [New Thread 0x7f741ee0c700 (LWP 184972)]; [New Thread 0x7f741e60b700 (LWP 184973)]; [New Thread 0x7f741de0a700 (LWP 184974)]; [New Thread 0x7f741d609700 (LWP 184975)]; [New Thread 0x7f741ce08700 (LWP 184976)]; [New Thread 0x7f741c607700 (LWP 184977)]; [New Thread 0x7f741be06700 (LWP 184978)]; [New Thread 0x7f741b605700 (LWP 184979)]; [New Thread 0x7f741ae04700 (LWP 184980)]; [New Thread 0x7f741a603700 (LWP 184981)]; [New Thread 0x7f7419e02700 (LWP 184982)]; [New Thread 0x7f7419601700 (LWP 184983)]; [New Thread 0x7f7418e00700 (LWP 184984)]; [New Thread 0x7f74185ff700 (LWP 184985)]; [New Thread 0x7f7417dfe700 (LWP 184986)]; [New Thread 0x7f74175fd700 (LWP 184987)]; Computing offsets.; [=================================================================] 100.00% 15.11M 19m 14s 460ms ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Thread 1 ""mmseqs"" received signal SIGABRT, Aborted.; __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; 51	../sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt ; #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; #1 0x00007ffff7438921 in __GI_abort () at abort.c:79; #2 0x00007ffff7ef6892 in __gnu_cxx::__verbose_terminate_handler () at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x00007ffff7ef4f69 in __cxxabiv1::__terminate (handler=<optimized out>) at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #4 0x00007ffff7ef4fab in std::terminate () at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #5 0x00007ffff7ef5194 in __cx",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:35873,Abort,Aborted,35873,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840,1,['Abort'],['Aborted']
Safety," CXX=""$(brew --prefix)/bin/gcc-6"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; -- The CXX compiler identification is GNU 6.2.0; -- Checking whether CXX compiler has -isysroot; -- Checking whether CXX compiler has -isysroot - yes; -- Checking whether CXX compiler supports OSX deployment target flag; -- Checking whether CXX compiler supports OSX deployment target flag - yes; -- Check for working CXX compiler: /usr/local/bin/gcc-6; -- Check for working CXX compiler: /usr/local/bin/gcc-6 -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Sourcedir /Users/moorer/Downloads/mmseqs2; -- Projectdir /Users/moorer/Downloads/mmseqs2; -- Compiler is GNU; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Failed; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 extensions, using flags: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Co",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:658,Detect,Detecting,658,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,4,['Detect'],['Detecting']
Safety," Environment. I am running this on an AWS EC2 instance of type g4dn (128GB RAM). Here you go:. $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) Platinum 8259CL CPU @ 2.50GHz; CPU family: 6; Model: 85; Thread(s) per core: 2; Core(s) per socket: 16; Socket(s): 1; Stepping: 7; BogoMIPS: 4999.98; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht; syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid ap; erfmperf tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt; tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch pti fsgsbase; tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx avx512f avx512dq rdseed adx smap clflushopt clwb avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves ida arat pku ospke avx512_vnni; Virtualization features: ; Hypervisor vendor: KVM; Virtualization type: full; Caches (sum of all): ; L1d: 512 KiB (16 instances); L1i: 512 KiB (16 instances); L2: 16 MiB (16 instances); L3: 35.8 MiB (1 instance); NUMA: ; NUMA node(s): 1; NUMA node0 CPU(s): 0-31; Vulnerabilities: ; Gather data sampling: Unknown: Dependent on hypervisor status; Itlb multihit: KVM: Mitigation: VMX unsupported; L1tf: Mitigation; PTE Inversion; Mds: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Meltdown: Mitigation; PTI; Mmio stale data: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Retbleed: Vulnerable; Spec rstack overflow: Not affected; Spec store bypass: Vulnerable; Spectre v1: Mitigation; usercopy/swapgs barriers and __user pointer sanitization; Spectre v2: Mitigation; Retpolines, STIBP disabled, RSB filling, PBRSB-eIBRS Not affected; Srbds: Not affected; Tsx async abort: Not affected",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822:3946,abort,abort,3946,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822,1,['abort'],['abort']
Safety," as I can tell it doesn't seem to be overblowing that (the core dump is <400G). I ran createindex in the same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib6",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1174,safe,safe-path,1174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['safe'],['safe-path']
Safety," files, however, only one (resultDB.index.7) is getting larger with time (and is > 0 in size). Meanwhile only one thread seems to be utilized (around 8% of the total 10 threads given).; When the clusthash finishes there is one resultsDB.index file, and 10 resultsDB files, 8 with zero size, and resultsDB.index7 and resultsDB.index both with the same size). After this, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file. This fasta file size <1gb but I first tried to run this process on a >80gb file on remote compute node and was concerned when I saw the job was using only a small part of the resources.; Not part of this issue but realted; also tried to do the same thing with a large protein file but I get invalid fasta entry errors (maybe because of the ""*"" marking STOPs left by the ORF predictor, but that wouldn't happen in the nucleic acid file example above). ## Your Environment; * Git commit used:; I tried on my personal machine and a compute node (PBS), similar behaviour in both. ; Personal machine MMseqs2 Version: 48a037a2e2cf5ea140c6c5de357b7147e5310b4d.; Server MMseqs2 Version: 2a8c5f00f820c5c9a577676707095ef17bcff04a.; * Which MMseqs version was used: Statically-compiled; * Server specifications:; Server: (2a8c5f00f820c5c9a577676707095ef17bcff04a); CPU: Intel(R) Xeon(R) Platinum 8168; Memory: 366 GB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261:1846,redund,redundancy,1846,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261,1,['redund'],['redundancy']
Safety," size 7 and split 1 using split mode 0; Needed memory (139010009596 byte) of total memory (67278442496 byte); WARNING: MMseqs processes needs more main memory than available.Increase the size of --split or set it to 0 to automatic optimize target database split.; WARNING: Split has to be computed by createindex if precomputed index is used.; Substitution matrices...; Time for init: 0 h 0 m 12s. Process prefiltering step 0 of 1. tmp/pref_1_tmp_0.0: File exists; Program call:; subseq_Mms.1 uniref90.mms tmp/pref_1 tmp/aln_1 --sub-mat blosum62.out -a --alignment-mode 0 -e 1e-10 --min-seq-id 0 -c 0 --max-seq-len 32000 --max-seqs 100000 --comp-bias-corr 1 --max-rejected 2147483647 --threads 8 -v 3 . MMseqs Version: c5615b34c686b1cf0f200670be8bc6cba76d90f9; Sub Matrix blosum62.out; Add backtrace true; Alignment mode 0; E-value threshold 1e-10; Seq. Id Threshold 0; Coverage threshold 0; Max. sequence length 32000; Max. results per query 100000; Compositional bias 1; Profile false; Realign hit false; Max Reject 2147483647; Detect fragments false; Include identical Seq. Id. false; Threads 8; Verbosity 3. Init data structures...; Compute score, coverage and sequence id.; Using 8 threads.; Could not open data file tmp/pref_1!; mv: impossible d'évaluer « tmp/aln_1 »: Aucun fichier ou dossier de ce type; ```; - Local indexing on 64GB node with explicit --split 6:. ```; $mmseqs createindex uniref90.mms uniref90.mms.sk7 tmp --split 6 --threads 12; Program call:; uniref90.mms uniref90.mms.sk7 tmp --split 6 --threads 12 . MMseqs Version: c5615b34c686b1cf0f200670be8bc6cba76d90f9; Sub Matrix blosum62.out; K-mer size 0; Alphabet size 21; Max. sequence length 32000; Split DB 6; Spaced Kmer 1; Threads 12; Verbosity 3. Substitution matrices...; Use kmer size 7 and split 6 using split mode; Index table: counting k-mers...; .WARNING: Sequence (dbKey=10870) contains only ATGC. It might be a nucleotide sequence.; .................................................................................",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349:4404,Detect,Detect,4404,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349,1,['Detect'],['Detect']
Safety," system messages (there is a floating point exception in tmp/blastp.sh : line 60, leading I guess to files missing tmp/pref_4 and tmp/aln_4):. ```; $mmseqs search tara_test.faa uniref90/uniref90.mms test1_uniref90 tmp --threads 24 -a > ; mmseqs_search_tara_1.out; tmp/blastp.sh : ligne 60 : 31911 Exception en point flottant (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET_DB_PREF"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Could not open data file /home/hingamp.p/tmp/pref_4!; mv: impossible d'évaluer '/home/hingamp.p/tmp/aln_4': Aucun fichier ou dossier de ce type. $more mmseqs_search_tara_1.out; Program call:; tara_test.faa uniref90/uniref90.mms test1_uniref90 tmp --threads 24 -a . MMseqs Version: e3588acbec735d8aa3158f7bdf38870bebc7d6df; Sub Matrix blosum62.out; Add backtrace true; Alignment mode 0; E-value threshold 0.001; Seq. Id Threshold 0; Coverage threshold 0; Max. sequence length 32000; Max. results per query 300; Compositional bias 1; Profile false; Realign hit false; Max Reject 2147483647; Detect fragments false; Include identical Seq. Id. false; Threads 24; Verbosity 3; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; Number search iterations 1; Start sensitivity 4; sensitivity step size 1; Sets the MPI runner . /home/hingamp.p; /home/hingamp.p; Program call:; tara_test.faa uniref90/uniref90.mms /home/hingamp.p/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 30; 0 --offset-result 0 --split 0 --split-mode 2 --comp-bias-corr 1 --diag-score 1 --min-ungapped-score 30 --spaced-kmer-mode 1 --threads 24 -v 3 -s 4 . MMseqs Ver",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251310375:1297,Detect,Detect,1297,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251310375,1,['Detect'],['Detect']
Safety,"""; Error: Prefilter died; createtsv phrogs_mmseqs_db/phrogs_profile_db mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins.target_seq mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins_mmseqs mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins_mmseqs.tsv --full-header . MMseqs Version: 	14.7e284; First sequence as representative	false; Target column 	1; Add full header 	true; Sequence source 	0; Database output 	false; Threads 	64; Compressed 	0; Verbosity 	3. No datafile could be found for mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins_mmseqs!; cp: cannot stat 'mmseqs_target_seq/[bacteria_of_interest]/[bacteria_of_interest]_targetofinterest_proteins_mmseqs.tsv': No such file or directory; file: mmseqs_target_seq/[bacteria_of_interest]_targetofinterest_proteins_mmseqs.tsv; sample: [bacteria_of_interest]; [bacteria_of_interest]; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=4226926.batch. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:7682,Detect,Detected,7682,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,1,['Detect'],['Detected']
Safety,"## Context; I need to create MSAs for a very large set of protein sequences: about 25 million. I was planning to use the ColabFold workflow. I figured that this would be achievable given the nonlinear scaling to large query sets. That being said, extremely remote alignments are not necessary for my use case in the same way they they are helpful for structure prediction. I am looking for relative small MSAs (no more than 256 sequences) of diverse sets that do not have small fragments eg. high coverage. . I had intended to run some scaling tests over query size as well as parameters (first thoughts being sensitivity, max_seqs, align eval, max_except), as well as not using the metagenomic database. I figured I would first **chat with experts and save some compute carbon** before doing this. Is there any params I am missing? Any that would be good to change from default and forget? Am I totally off in thinking my job is accessible with a 104 thread compute note and a week of runtime?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897:361,predict,prediction,361,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897,1,['predict'],['prediction']
Safety,"## Context; It appears that the documentation gives only 5 parameters for clusterupdate:; mmseqs clusterupdate oldDB newDB oldDB_clustering outDB tmp. However, from the code, it seems that mmseq2 actually requires 6 input parameters:; mmseqs clusterupdate OLDB NEWDB OLDCLUST NEWMAPDB NEWCLUST TMP_PATH. I am not sure what NEWMAPDB is vs NEWDB, and so I've tried running the code giving a unique name to each. The clustering appears to run, but the tools for generating fasta and tsv results fail (see detail below) . ## Expected Behavior; Looking to generate fasta and tsv results from updated clusters with a new database that contains both the old database and a set of new sequences. . ## Current Behavior; While clustering appears to run, I am not able to successfully generate fasta and tsv files. ; For the fasta, I get output that looks like the following: ; Entry does not contain a header!2509593Entry 4480592Entry ; Entry 1542108 does not contain a header! does not contain a header!4479347 does not contain a header!Entry ; 4477267; Entry ; Entry ; 5003334. For tsv, the tool fails with:; MMseqs Version: 	f3b88f27def72ac5392131b98e079930f3b087c7; first sequence as respresentative	false; Target column 	0; Add Full Header 	false. Query file is x; Data file is x_clu ; Start writing file to x.tsv; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_S_construct null not valid; Aborted. This issue was also brought to the attention of Dr. Söding in a recent email . Thank you, . Irena",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103:1428,Abort,Aborted,1428,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103,1,['Abort'],['Aborted']
Safety,"## Current Behavior; We are consistently receiving the following error:; munmap_chunk(): invalid pointer ; leading to ; .../linclust/sh: line 76: 2444 Aborted (core dumped) $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; leading to:; ""Error: Alignment step died""; ""Error: Search died"". ## Steps to Reproduce (for bugs); file used: seqs.fasta (download seqs.txt from this issue, then change the file name extension to .fasta); command used: mmseqs easy-linclust seqs.fasta /tmp/mmseqs /tmp --min-seq-id 0.9 -c 1.0 --cov-mode 0. ## MMseqs Output (for bugs); see screenshot. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 13.4511 (see screenshot); * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Bioconda; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: /; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): support for both AVX2 and SSE; * Operating system and version: centos 8, 48 CPU, 192 GB RAM, 512 GB disk memory (m5.12xlarge instance AWS). [seqs.txt](https://github.com/soedinglab/MMseqs2/files/7659879/seqs.txt). ![image](https://user-images.githubusercontent.com/81355666/144828610-af12b66a-7a58-4bf6-b90b-96e6dc7e3eb9.png). Please let us know if there is anything else you need. Thanks in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/511:151,Abort,Aborted,151,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/511,1,['Abort'],['Aborted']
Safety,"## Description; bugfix for a segmentation fault in `mmseqs prefilter`, which occured in the following circumstances:. - `seqLen` of sequences larger than `32768` are overridden to `1` to lower their priority in diagonal score calculation; - `min(seqs[i].seqLen - minDistToDiagonal, minSeqLen);` returns an underflowed value for low `seqLen`, which holds for the above case (`UngappedAlignment L:279`). => this invalid `seqLength` value causes `unrolledDiagonalScoring(...)` to access memory out of bounds, causing a seg fault. ## Changes; - added a safety check to prevent `seqLength` having invalid(underflowed) values; - `seqLen` larger than `32768` are overridden to `0` instead of `1`, in order to completely skip the processing inside `unrolledDiagonalScoring(...)`. ## Other Details; - error encountered when running mmseqs easy-cluster on uniparc DB; - stack trace:; ```; #0 UngappedAlignment::unrolledDiagonalScoring<21u> (...) ; at MMseqs2/src/prefiltering/UngappedAlignment.cpp:58; #1 UngappedAlignment::scoreDiagonalAndUpdateHits (...) ; at MMseqs2/src/prefiltering/UngappedAlignment.cpp:281; #2 UngappedAlignment::computeScores (...) ; at /MMseqs2/src/prefiltering/UngappedAlignment.cpp:349; #3 UngappedAlignment::align (...); at /MMseqs2/src/prefiltering/UngappedAlignment.cpp:26; #4 QueryMatcher::match (...); at /MMseqs2/src/prefiltering/QueryMatcher.cpp:295; #5 QueryMatcher::matchQuery (...); at /MMseqs2/src/prefiltering/QueryMatcher.cpp:103; #6 Prefiltering::runSplit (...); at /MMseqs2/src/prefiltering/Prefiltering.cpp:843; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/872:549,safe,safety,549,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/872,1,['safe'],['safety']
Safety,"## Expected Behavior ; I would like to run MMseq2 to search for genes in a reference genome. As a sanity check, I simply searched for the genes annotated on the genome in the reference genome, so they should match perfectly. (Next, I'll run it on genes that might not perfectly match the reference as they can have some differences in the third char of each coddon.). ## Current Behavior; When running a nucleotides search I get ~5K results, most of them are long enough and mapped well.; When running a translated search I get 89K results that are very short and non of them covers the entire gene.; I assume that this is not a bug but rather an intended behavior. What am I missing?. ## Steps to Reproduce (for bugs); the files can be found here:; query - https://files.cs.huji.ac.il/morani/cds_from_genomic.fna; target - https://files.cs.huji.ac.il/morani/GCF_000011885.1_ASM1188v1_genomic.fna ; translated search command -` mmseqs easy-search cds_from_genomic.fna GCF_000011885.1_ASM1188v1_genomic.fna memseq_igc_to_salmonella_atcc_9150_translated.m8 tmp --search-type 2 -a --format-mode 4 --format-output ""target,query,tstart,tend,nident,qlen""`; regular search command - `mmseqs easy-search cds_from_genomic.fna GCF_000011885.1_ASM1188v1_genomic.fna memseq_igc_to_salmonella_atcc_9150_nucleotides.m8 tmp --search-type 3 -a --format-mode 4 --format-output ""target,query,tstart,tend,nident,qlen""`. ## MMseqs Output (for bugs); output files:; translated search - https://files.cs.huji.ac.il/morani/memseq_igc_to_salmonella_atcc_9150_translated.m8; regular search - https://files.cs.huji.ac.il/morani/memseq_igc_to_salmonella_atcc_9150_nucleotides.m8. ## Context; For a pipeline I'm designing, I'm comparing a few tools that can search for gene in a reference genome. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used : 15.6f452; * Downloaded using conda; * Server info:; NAME=""Debian GNU/Linux""; VERSION_ID=""10""; VERSION=""10 (",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/796:98,sanity check,sanity check,98,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/796,1,['sanity check'],['sanity check']
Safety,"## Expected Behavior. Cluster nucleotide genome sequences (e.g., wgs records, contigs, scaffolds, complete genomes) in a few hours using `easy-linclust`. ## Current Behavior. Running `easy-linclust` using the following command ran for more than 24 hours and was at the `rescorediagonal` step for +20 hours:; ```; mmseqs easy-linclust input.fna cluster tmp --min-seq-id 0.9 -c 0.9 --alignment-mode 3 --db-load-mode 2 --split-memory-limit 2000G; ```. input.fna is 642 GB with approximately 2.5 MM sequences. ## Context. I want to cluster nucleotide genome sequences from NCBI to reduce the burden on similarity search for highly similar / redundant sequences. ## Your Environment; * MMseqs Version: Commit f5f780acd64482cd59b46eae0a107f763cd17b4d (statically-compiled AVX2); * Machine: 128 CPUs, 4 TB RAM, 2 x 1.9 TB NVMe SSD; * Operating system and version: Amazon Linux 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/726:637,redund,redundant,637,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/726,1,['redund'],['redundant']
Safety,"## Expected Behavior. Dear all, I created a toy example downloading 2 fastq.gz, assembling a bacterial genome and predicting proteins with prokka. Then I used just 3 proteins as a source of a collection of genes in order to estimate the abundance of these genes in each sample [and then scale this strategy further]. Yesterday Milot helped a lot by suggesting using '_summarizealis_' + '_createtsv_'. . ## Current Behavior. I am getting a table like the one below (I just added that row as 'headers' for simplicity). > **READS	PROTEIN	#3	#4	#5**; > SRR4213076.15870	EMNFODFG_00006	0.486	0.486	1; > SRR4213076.580999	EMNFODFG_00006	0.965	0.965	1; > SRR4213076.382442	EMNFODFG_00006	0.988	0.988	1. ## Steps to Reproduce (for bugs); I followed these steps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb protein.faa collection_db; mmseqs cluster collection_db collection_clu temporal; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporalx; mmseqs convertalis sample_db collection_db sample_map result.m8; mmseqs summarizealis sample_map sample_map_summary; mmseqs createtsv sample_db collection_db sample_map_summary sample_map_summary.tsv; ```. ## MMseqs Output (for bugs). The full file [sample_map_summary.tsv is here](https://github.com/soedinglab/MMseqs2/files/7523250/sample_map_summary.txt). ## Context. In the sample_map_summary.tsv when I sort it I get 1079 'lines' (hits?) for one of the proteins. **I have 2 questions** . A) can you detail what are columns 3-4-5 (I guess it is overlap protein/read estimated in different ways). B) is it correct then to calculate abundance [for this protein] as 1079 / [total number reads = wc -l sample_db.index ] or `1079/1443540` . I am trying to estimate the abundance and coverage of a collection of proteins in metagenomic data (using the reads as query in this case). I am trying to use mmseqs due to its speed and the scale of the task in this case. ; Thanks for your hel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/504:114,predict,predicting,114,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/504,1,['predict'],['predicting']
Safety,"## Expected Behavior. Dear all, my goal is to estimate the abundance of a collection of genes against several samples or reads from metagenomes. The strategy works fine but only if I use proteins instead of nucleotides. I created a toy example downloading two fastq.gz, assembling a bacterial genome with 'shovill' and then predicting proteins with prokka on top of this assembled genome. . For the example I used just 3 proteins (from the file genome.faa) like a collection of genes. Then when I try 3 nucleotide sequences (extracted from the genome.ffn file) it throws me the error copied below. I wanted to fix this since my collection contains nucleotide sequences. . ## Current Behavior. ```; **It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace)**; ```. ## Steps to Reproduce (for bugs). I followed these steps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb genome.faa collection_db; # or mmseqs createdb genome.ffn collection_db; mmseqs cluster collection_db collection_clu temp; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporal; ```. Here are both files ; [genome.ffn.txt](https://github.com/soedinglab/MMseqs2/files/7558993/genome.ffn.txt); [genome.faa.txt](https://github.com/soedinglab/MMseqs2/files/7558994/genome.faa.txt). ## MMseqs Output (for bugs). ```; MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/507:324,predict,predicting,324,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507,1,['predict'],['predicting']
Safety,"## Expected Behavior. I am following this tutorial https://github.com/soedinglab/MMseqs2/wiki/Tutorials#metagenomic-pathogen-detection , specially the **'Annotating the catalogue'** section, I followed this to search for Pfam domains in several genomes. The pipeline looks great and worked fine. From the tutorial, I understood column 5 is the e-value, the first 2 are self-explanatory and I am also familiar with the blast output but in this case I got 11 columns and I am not fully sure this tsv is similar. . My question is can I have a list of all the columns so I can parse it accordingly? Thanks ; ; Sorry if this info is elsewhere but I couldn't find it I also searched here the issues but I couldn't find it. ## Current Behavior. I got a tsv file with rows like this. `genome1 PF20143.1 100 0.412 3.484E-23 156 291 298 73 205 259`. ## Steps to Reproduce (for bugs). ## MMseqs Output (for bugs). I followed this tutorial https://github.com/soedinglab/MMseqs2/wiki/Tutorials#metagenomic-pathogen-detection no bug or anomaly in this case. ## Context. Sorry if the question is similar to https://github.com/soedinglab/MMseqs2/issues/434 but I don't even have the list of column headers in this cae. . ## Your Environment. MMseqs2 Version: 13.45111; Ubuntu 20.04",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/458:125,detect,detection,125,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/458,2,['detect'],['detection']
Safety,"## Expected Behavior. I'm doing a search of proteins against another protein database using high sensitivity and high number of iterations (`-s 7.5 --num-iterations 4`). ## Current Behavior. I get an error:. ```; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_M_construct null not valid; /scratch/aoh/qwfp/4982015852642442181/blastpgp.sh: line 81: 24849 Aborted (core dumped) $RUNNER ""$MMSEQS"" result2profile ""$QUERYDB"" ""$2"" ""$TMP_PATH/aln_0"" ""$TMP_PATH/profile_$STEP"" ${TMP}; ```. However, when I use `--num-iterations 1`, I don't get the error. ## Steps to Reproduce (for bugs). I took a small sample of sequences to reproduce the error. ```; mmseqs createdb two.fa two.db; mmseqs createdb rest.fa rest.db; mmseqs search two.db rest.db two_v_rest.db /scratch/aoh/qwfp -s 7.5 --num-iterations 4; ```. Here are the files used to recreate the error. [rest.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890804/rest.fa.txt); [two.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890805/two.fa.txt). ## MMseqs Output (for bugs). [mmseqs.err.txt](https://github.com/soedinglab/MMseqs2/files/1890802/mmseqs.err.txt); [mmseqs.out.txt](https://github.com/soedinglab/MMseqs2/files/1890803/mmseqs.out.txt). ## Your Environment. * Git commit used: `2cfdedc95f6a998826f45a7594971751a5e535f3`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * Operating system and version: Fedora release 24 server edition. Here are the outputs from `make` and `cmake` from when I compiled mmseqs like so:. ```; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. 1> cmake.out.txt 2> cmake.err.txt; make -j32 1> make.out.txt 2> make.err.txt; make install 1> make_install.out.txt 2> make_install.err.txt; ```. [mmseqs_build_output.tar.gz](https://github.com/soedinglab/MMseqs2/files/1890845/mmseqs_build_output.tar.gz)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/79:397,Abort,Aborted,397,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/79,1,['Abort'],['Aborted']
Safety,"## Expected Behavior. I'm using gene predictions form Refseq. They unified the gene names, so that the same gene in different genomes has the same name, e.g. `WP_012419350.1`. Now I can pass this perfectly trough linclust, createtsv and result2repseq . The two identical proteins get clustered to the same cluster. And some end up as cluster representative. Which then put them multiple times in the `result2flat` output. . I wondered if mmseqs uses the sequence names, what if the sequences are different but the names are the same?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/270:37,predict,predictions,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/270,1,['predict'],['predictions']
Safety,"## Expected Behavior. Running a cluster analysis in all 128 cores. ## Current Behavior. I'm running a clustering analysis to leave out redundant sequences in a big dataset of approximately 10 millon DNA sequences of lengths varying between 1150 and 1250 bp. The problem I'm having is that it looks like the program is running in a single core instead of the 128 threads I tell the program to use, hence it takes a really long time to analyze this dataset. I'm assuming it shouldn't take long based on the fact that your package is supposed to analyze even bigger datasets in a couple hours. . I ran into the same issue running CD-HIT, and this is why I'm giving a try to your package. I've already tried compiling your package using:. cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. .. However this gave me issues when running a submission script and my job was killed with the error:. mpirun noticed that process rank 2 with PID xxxx on node xxxx exited on signal 9 (Killed). . For this reason I decided to install mmseqs in a conda environment using:; conda install -c conda-forge -c bioconda mmseqs2. I know the program is running in a single core because I'm using ssh cpu-<number> and ps aux | grep <username> and only one process appears to be running the prefilter step right now. . ## Steps to Reproduce (for bugs). #!/bin/bash; #SBATCH --job-name=mmseqs; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=name; #SBATCH --nodes=1; #SBATCH --ntasks=128. mmseqs cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128. ## MMseqs Output (for bugs); cluster DB DB_out tmp --cov-mode 1 -c 0.9 --threads 128 . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	15; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:135,redund,redundant,135,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['redund'],['redundant']
Safety,"## Expected Behavior. When aligning assembled proteins to representative sequences of clusters (clustered at 90% amino acid identity) there should be 0 or 1 hit with > 90% identity and >90% coverage. ## Current Behavior. A single protein can align to over 200 representative sequences while fitting the identity and coverage criteria. ## Steps to Reproduce (for bugs). ### Data. 95,303,635 non-redundant proteins from UHGP v2.0 ([FTP link](http://ftp.ebi.ac.uk/pub/databases/metagenomics/mgnify_genomes/human-gut/v2.0/protein_catalogue/uhgp-100.tar.gz)). 2 proteins serving as probes (uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing)). ### Clustering. 3 different clustering approaches were tested:; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering`. However, all three approaches lead to the same behavior (although the exact number of alignments changes) . ### Testing. `mmseqs easy-search probes/probes.faa {clustering_dir}/uhgp90_rep_seq.fasta results/single-step-clustering-uhgp90.m8 tmp --min-seq-id 0.9 -c 0.9 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln"" --threads 16`. ## Output. The m8 files obtained with the `easy-search` command were uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing). ## Context. I want to assign assembled proteins from metagenomes to clusters from a catalog of bacterial proteins, namely [UHGP](https://www.ebi.ac.uk/metagenomics/genome-catalogues/human-gut-v2-0). I have noticed that ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/639:394,redund,redundant,394,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/639,1,['redund'],['redundant']
Safety,"## Expected Behavior. `asan` and `msan` should not detect issues. ## Current Behavior. We ran address sanitizer and memory sanitizer on mmseqs2 and they flagged a few issues. #### asan. 1. ODR violation over `binary_name`.; 2. Possible signed overflow in random number generation using unsigned integer types.; 3. '[initialisation order fiasco](https://github.com/google/sanitizers/wiki/AddressSanitizerInitializationOrderFiasco)'. #### msan; 4. String not terminated. ## Fixes. We fixed these issues, respectively, by:. 1. Changing [this line](https://github.com/soedinglab/MMseqs2/blob/master/src/mmseqs.cpp#L5) to:; ```; __attribute__ ((weak)) const char* binary_name = ""mmseqs"";; ```. 2. Applying this patch to [lib/alp/njn_random.cpp](https://github.com/soedinglab/MMseqs2/blob/master/lib/alp/njn_random.cpp):. ```; --- a/lib/alp/njn_random.cpp; +++ b/lib/alp/njn_random.cpp; @@ -50,19 +50,19 @@ namespace {; ; 	const size_t r_off = 12;; ; -	long	state [33] = {; -	static_cast <long> (0xd53f1852), static_cast <long> (0xdfc78b83), static_cast <long> (0x4f256096), static_cast <long> (0xe643df7),; -	static_cast <long> (0x82c359bf), static_cast <long> (0xc7794dfa), static_cast <long> (0xd5e9ffaa), static_cast <long> (0x2c8cb64a),; -	static_cast <long> (0x2f07b334), static_cast <long> (0xad5a7eb5), static_cast <long> (0x96dc0cde), static_cast <long> (0x6fc24589),; -	static_cast <long> (0xa5853646), static_cast <long> (0xe71576e2), static_cast <long> (0xdae30df), static_cast <long> (0xb09ce711),; -	static_cast <long> (0x5e56ef87), static_cast <long> (0x4b4b0082), static_cast <long> (0x6f4f340e), static_cast <long> (0xc5bb17e8),; -	static_cast <long> (0xd788d765), static_cast <long> (0x67498087), static_cast <long> (0x9d7aba26), static_cast <long> (0x261351d4),; -	static_cast <long> (0x411ee7ea), static_cast <long> (0x393a263), static_cast <long> (0x2c5a5835), static_cast <long> (0xc115fcd8),; -	static_cast <long> (0x25e9132c), static_cast <long> (0xd0c6e906), static_cast <long> (0xc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/661:51,detect,detect,51,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661,1,['detect'],['detect']
Safety,"## Expected Behavior. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 469186; Target db start 1 to 579233; [=================================================================] 100.00% 469.19K 3s 382ms. 6.094516 k-mers per position; 435 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 464221 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 0s 75ms; munmap_chunk(): invalid pointer; tmp/12438089539006473617/taxonomy_tmp/18301032544654743241/taxpercontig.sh: line 66: 3001403 Aborted (core dumped) $RUNNER ""$MMSEQS"" prefilter ""${ORFS_DB}"" ""${TARGETDB_IDX}"" ""${TMP_PATH}/orfs_pref"" ${ORF_FILTER_PREFILTER}; Error: orf filter prefilter died; Error: Search died. ## Steps to Reproduce (for bugs); mmseqs easy-taxonomy -s 7.5 C10.fasta ../db/refseq-prot/mmseqs/refseq_viral result tmp --lca-mode 2. ## Context. I try to annotate virus contig with refseq database uing mmseqs easy-taxonomy, I get errors below, When I use the same command with tmp files, I can get the taxonomy annotation files. But I use '--orf-filter 0', I get no errors. ## Your Environment. mmseqs version; 45111b641859ed0ddd875b94d6fd1aef1a675b7e; mmseqs2-sse4-r13",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/556:682,Abort,Aborted,682,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/556,1,['Abort'],['Aborted']
Safety,"## Expected Behavior; After using “mmseqs easy-linclust” clustering, the retained sequence is non-redundant. ## Current Behavior; After using “mmseqs easy-linclust” clustering, he retained sequence is redundant，and clustering again with the same parameters, there are still many sequences that are filtered out. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. this is my command,. mmseqs easy-linclust all.pep.fa all.pep.clust ./temp1 --threads 10 --cov-mode 1 -c 0.99 --min-seq-id 0.95. input file: **all.pep.fa** the number of Sequences in **all.pep.fa**: **202272018** . output file: all.pep.clust_cluster.tsv,**all.pep.clust_rep_seq.fasta**,all.pep.clust_all_seqs.fasta. the number of sequecses in **all.pep.clust_rep_seq.fasta** : **115242017**. Cluster again：. mmseqs easy-linclust all.pep.clust_rep_seq.fasta all_lincluster1 ./temp2 --threads 10 --cov-mode 1 -c 0.99 --min-seq-id 0.95. output file: all_lincluster1_cluster.tsv,**all_lincluster1_rep_seq.fasta**,all_lincluster1_all_seqs.fasta; the number of sequecses in **all_lincluster1_rep_seq.fasta** : **112714365**. my question is, Why are there so many redundant sequences after the first clustering?. and another question: Can MMseq2 software be used for nucleotide clustering? Is there any published paper. . Thanks a lot; David",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/420:98,redund,redundant,98,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/420,3,['redund'],['redundant']
Safety,"## Expected Behavior; Completion of download and db creation for GTDB. ## Current Behavior; I installed release 14-7e284 via conda yesterday and tried to download various databases via the databases module. The following error messages were generated for GTDB; other databases were generated without errors. I thought problems with GTDB were fixed in previous versions (e.g., see issue [#742](https://github.com/soedinglab/MMseqs2/pull/742)), but perhaps changes were reverted in the latest release via conda?. Here are the relevant error messages (full output also included below):. 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseComma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:625,abort,aborted,625,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['abort'],['aborted']
Safety,"## Expected Behavior; Downloading NR database using ```mmseqs databases NR NR tmp```; ## Current Behavior; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operati",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/668:440,Abort,Aborted,440,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668,1,['Abort'],['Aborted']
Safety,"## Expected Behavior; I am using the easy cluster pipeline to cluster sequences with min-seq-id = 0.5. So, the centroids of the clusters should be less than 50% identical. . ## Current Behavior; However, when I am running a sanity check to make sure that the centroids are indeed less than 50% identical I get . 1. # Centroids with identity > 50%: ~10000; 2. # Centroids with identity < 70%: ~9000; 3. # Centroids with identity > 90%: ~500; 4. # Centroids with identity == 100%: ~70. So, identities of around 50% were expected. But anything over 90% and especially 100% identical was a surprise. ; ; ## Steps to Reproduce (for bugs); **Clustring Pipeline:** ; mmseqs easy-cluster sequences.fasta mmseqs_clustered tmp -s 7.5 -c 0.8 --cov-mode 0 --min-seq-id 0.5 --cluster-reassign --alignment-mode 3. **Sanity Check:**; 1. mmseqs createdb mmseqs_clustered_rep_seq.fasta DataBases/SeqDB; 2. mmseqs createindex DataBases/SeqDB tmp; 3. mmseqs search DataBases/SeqDB DataBases/SeqDB DataBases/AlnDB tmp --min-seq-id 0.5 -s 7.0 -c 0.8 --cov-mode 0 --alignment-mode 3; 4. mmseqs convertalis DataBases/SeqDB DataBases/SeqDB DataBases/AlnDB Alignment_Results --format-output ""query,target,evalue,pident""; 5. FIlter of Alignment_Results: Remove rows where QueryID == TargetID (They will always have 100% identity)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/612:224,sanity check,sanity check,224,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612,2,"['Sanity Check', 'sanity check']","['Sanity Check', 'sanity check']"
Safety,"## Expected Behavior; I created a database of 100% identical amino acid sequences with 100% coverage. I expect after going through the prefiltering step and alignment step I would see 100% identical hits. ; ## Current Behavior; Instead I found hits with of approximately 93% with reported mismatches of 22 with the same e-values as those with 100% identity. ; ## Steps to Reproduce (for bugs). Attached is the example sequence I found for this bug ([redundant.zip](https://github.com/user-attachments/files/16111570/redundant.zip)). Protein sequence is 303 AA in length with fake names given to the same sequence. I ran the following commands to create the alignment file where I found the issue. . ```; mmseqs createdb redundant.fasta sequenceDB; mmseqs kmermatcher sequenceDB prefilterDB; mmseqs align sequenceDB sequenceDB prefilterDB alignmentDB; mmseqs convertalis sequenceDB sequenceDB alignmentDB alignmentFile; ```. ## MMseqs Output (for bugs); Below is the TSV file of the resulting alignment. As you can see these identical sequences sometimes match at 100% others at 93% with some amount of mismatch and all the same bit-scores etc. ; ![Screenshot from 2024-07-05 10-47-23](https://github.com/soedinglab/MMseqs2/assets/44539035/4d073d41-99e7-4abc-b057-70974cde7ab0). ## Context. I am attempting to replicate some uniref clusters and found this irregularity and chose to isolate and replicate the issue by creating a completely redundant database. This may be a related to #688 . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 6f45232ac8daca14e354ae320a4359056ec524c2. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled from release 15-6f452. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; AMD 3950X with 128GB ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/861:450,redund,redundant,450,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/861,3,['redund'],['redundant']
Safety,"## Expected Behavior; I tried using easy-clust to perform clustering to generate smaller representative subsets from Uniref50 (Uniref40, Uniref 30, Uniref 20, etc.). ## Current Behavior; The clustering dies after a few steps with an Out of Memory Error. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; tmp/5521603387764364218/clu_tmp/3834389364932800683/cascaded_clustering.sh: line 102: 208445 Killed $RUNNER ""$MMSEQS"" prefilter; ""$INPUT"" ""$INPUT"" ""${TMP_PATH}/pref_step$STEP"" ${TMP}; slurmstepd: error: Detected 1 oom_kill event in StepId=16746209.batch. Some of the step tasks have been OOM Killed. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; #SBATCH --output=slurm_mlm.out; #SBATCH -e slurm_mlm.err; #SBATCH -p scavenger-gpu; #SBATCH --gres=gpu:1; #SBATCH --mem=200G; #SBATCH -c 32; mmseqs easy-cluster /hpc/group/naderilab/eleanor/prose/data/uniref50.fasta uniref40 tmp --min-seq-id 0.4 -c 0.8 --cov-mode 1 --split-memory-limi; t 160G --threads 12. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/898:723,Detect,Detected,723,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/898,1,['Detect'],['Detected']
Safety,"## Expected Behavior; I'm using mmseqs driven by colabfold to search against large db.; ## Current Behavior; When colabfold executing ""search"" step, mmseqs generates ""prefilter"" step, and args are ""--split 0 --split-mode 2 --split-memory-limit 0"", then the split number is set to 3 but smaller than 4. So mmseqs use entire index, which is too large for my memory (64GB). Thus mmseqs avoid using index, which makes searching step very slow.; ## Steps to Reproduce (for bugs); colabfold_search x.fasta ColabFold/Datas/ --use-env 1 --use-templates 0 MSA_200 ; (colabfold_search execute search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 ). ## MMseqs Output (for bugs). MSA_200/qdb exists and will be overwritten; createdb MSA_200/query.fas MSA_200/qdb --shuffle 0 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Database type 	0; Shuffle input database	false; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [; Time for merging to qdb_h: 0h 0m 0s 0ms; Time for merging to qdb: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 0ms; search MSA_200/qdb ColabFold/Datas/uniref30_2202_db MSA_200/res MSA_200/tmp --threads 64 --num-iterations 3 --db-load-mode 0 -a -s 8 -e 0.1 --max-seqs 10000 . MMseqs Version: 	f5b588be54de35876eff90f3694b67e1d00856ef; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	true; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:383,avoid,avoid,383,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['avoid'],['avoid']
Safety,## Expected Behavior; It would build succesfully; ## Current Behavior; it fails; ## Steps to Reproduce (for bugs). cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. -DHAVE_MPI=1 -DHAVE_SSE4_1=1 .. ## MMseqs Output (for bugs); ```; -- The CXX compiler identification is GNU 5.4.0; -- The C compiler identification is GNU 5.4.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; --,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:445,Detect,Detecting,445,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,11,['Detect'],['Detecting']
Safety,"## Expected Behavior; MSA completes. ## Current Behavior; Currently, the result2msa command seems to be throwing errors on any operating system and build I try. Also perhaps worth noting it only happens on certain input sequences for whatever reason (you can see from my Windows attempt, it aborts halfway through). ## Steps to Reproduce (for bugs); create db; index db; search db with query file; try to run result2msa -> crash; Files can be supplied as requested. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Ubuntu, self-compile:. mmseqs result2msa /hdd/mmtestoutput3/mmseqs_files/in.mmdb /hdd/humanref/jhhutargetDB /hdd/mmtestoutput3/mmseqs_files//out.mm_search /hdd/mmtestoutput3/mmseqs_files//out.mm_msa; result2msa /hdd/mmtestoutput3/mmseqs_files/in.mmdb /hdd/humanref/jhhutargetDB /hdd/mmtestoutput3/mmseqs_files//out.mm_search /hdd/mmtestoutput3/mmseqs_files//out.mm_msa . MMseqs Version: 	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 	0.001; Allow deletions 	false; Add internal id. 	false; Compositional bias 	1; Filter MSA 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Threads 	4; Compress MSA 	false; Summarize headers 	false; Summary prefix 	cl; Omit consensus 	false; Skip query 	false; Gap open cost 	11; Gap extension cost 	1; Compressed 	0; Verbosity 	3. Start computing multiple sequence alignments.; Query database size: 11 type: Aminoacid; Target database size: 20667 type: Aminoacid; [> ] 0.00% 1 eta [======> ] 10.00% 2 etaSegmentation fault (core dumped). Windows 7 static compile (different db/query file):. F:\>mmseqs result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkou; t2/mmseqs_files/out.mm_search plsworkout2/mmseqs_files/out.mm_msa; result2msa plsworkout2/mmseqs_files/in.mmdb db/test",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/229:291,abort,aborts,291,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229,1,['abort'],['aborts']
Safety,## Expected Behavior; Obtain a result2dnamsa . ## Current Behavior; Error in execution. ## Steps to Reproduce (for bugs); mmseqs.sse41 result2dnamsa all.mmseq all.mmseq all.cluster try.msa. ## MMseqs Output (for bugs); result2dnamsa all.mmseq all.mmseq all.cluster try.msa . MMseqs Version:	113e3212c137d026e297c7540e1fcd039f6812b1; Threads 	24; Skip query	false; Compressed	0; Verbosity 	3. Query database size: 244672 type: Nucleotide; Target database size: 244672 type: Nucleotide; Invalid alignment result record. ] 0.00% 1 eta -; Invalid alignment result record.; Invalid alignment result record. ## Context; I'm trying to recover the msa alingment of each cluster but I have an error. However the same steps with Aminoacid database (same dataset but translated) work really well.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/364:628,recover,recover,628,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/364,1,['recover'],['recover']
Safety,"## Expected Behavior; The search function should complete for any combination of amino acid gap open and gap extension parameters. ## Current Behavior; The search function fails for amino acid gap open penalties below 8 and/or a gap extension penalty of 0. ; It gives an error:; ```; terminate called after throwing an instance of 'Sls::error'; Aborted Error: ; Alignment died.; ```. It fails in the ""align"" step. ## Steps to Reproduce (for bugs). `mmseqs search {dataset} {dataset} {dataset_output} tmp --gap-open nucl:5,aa:2 --gap-extend nucl:5,aa:0`. Using the following dataset of 74 amino acid sequences:; CAAAPAVMTAGWFDPW; CAKDGSGSYYGWFDPW; CAREGEVEGYNDFWSGYSRDRYYFDYW; CATSFPIRGDPSYYYYYYGMDVW; CARDPRVVVTARMYNWFDPW; CARRSTSRWGYYYMDVW; CARRSYRSSWYYYYGMDVW; CARDPGSRYSGGWYDYYYAMDVW; CARDLERAGGMDVW; CARDWAPTYYDMPSAFDIW; CAHRRGILTEDAFDIW; CAREAYGMDVW; CAREARSRYFDWLPSYYFDYW; CAQGRGGYYSPFDDW; CARDLVWATVSGTMDVW; CARDQEWFRELFLFDYW; CAREGQGTYLDYW; CAKDTGYCGDDCYIKLIRGGPDYW; CARVNGNSNWNFGSYYYYYMDVW; CARRGEAAGIWYFDLW; CARPPRNYYDRSGYYQRAEYFQHW; CARWLQLRSDYYYFGMDVW; CARDGGNAYSSGWYRYYYHMDVW; CARVEWAAAGTFYW; CARAPRERLQWGEYYFDYW; CARRTYYDLWSAYSSTAYYCMDVW; CARGVEDPVVPAAIPWCWFDPW; CARPPQAARIHYYYYMDVW; CARGLISLFRGAIFHYYYGMDVW; CARDYTRGAWFGESLIGGFDNW; CAKNERITMLVVVTLFDYW; CARDRSNLERLVMTFGGIIAGAFDIW; CARHDGSGEMDTITWGPIYYYMDVW; CAIYGYYYYGLDVW; CARTTWGTWIQAWYFDIW; CARLTFGGSGSYYFYYNGMDVW; CAKLLGSGITLDNDAFDIW; CARSPPASYYNPSTGYFDYW; CARRGNYYDSKNWFDPW; CAHRAVILNFDHW; CARDPYDLYGDYGGTFDYW; CAKEGGSGSLRYYYYGMDVW; CAREDYYGSGSLVDPYYYYRMDVW; CATSTAVAGTPDLFDYYYGMDVW; CARGWGWGAVAGRAEYYFDYW; CARDWDYDILTGSWFGAFDIW; CARDQRQFQLLGRFGWFDPW; CARELFTAVAGKGGIDYW; CARGWYFDYW; CARSSSRGFDYW; CARIVLGASGTYPSPGFDPW; CARIPGWDRGTDRNWNDDW; CAKDSRSGIAGVDAFDIW; CARTYSFDSSGYYYDYW; CARDQDSGYPTYYYYYMDVW; CARAFYDSNWSVGSYFDSW; CARDSGGNYGDSYFDYW; CAKDVRYCSSTSCYFSAFDIW; CARDLAGVPAALGCWFDPW; CARGGGSYYYWFDPW; CVRDLALFEVVIQQGVW; CARVQRYYPDSSGFYGRRFDIW; CAHNRFQYCSSTTCYTLLPFDYW; CARSGGGSYRGPFDYW; CARRRSSSRYSSGWYMYYYYMDVW; CAKEGRPSDIVVVVAF",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:345,Abort,Aborted,345,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,1,['Abort'],['Aborted']
Safety,"## Issue. Hello, I want to use easy-taxonomy on homology hits I got from mmseqs search between insect genomes and viruses (Refseq viruses). I want to run taxonomic assignment on the hits to determine which are really viral sequences and which are eukaryotic sequences that hit on viruses in the homology search step. For taxonomic assignment, I use a taxonomic generalist database from which I remove insect sequences. ; I'd like help in choosing the parameters and options useful for maximizing the sensitivity of taxonomic assignment, to make sure that when it's a sequence of viral origin it's detected as such (reduce the unclassified portion). ; I've identified these parameters as potentially interesting, but I don't know which values to choose, and if it's really these parameters that I should use : . --max-seqs INT Maximum results per query sequence allowed to pass the prefilter (affects sensitivity) [0.000]; --min-ungapped-score INT Accept only matches with ungapped alignment score above threshold [15]; -e DOUBLE List matches below this E-value (range 0.0-inf) [1.000E-03]; --min-aln-len INT Minimum alignment length (range 0-INT_MAX) [0]; --e-profile DOUBLE Include sequences matches with < E-value thr. into the profile (>=0.0) [1.000E-03]; --lca-mode INT LCA Mode 1: single search LCA , 2/3: approximate 2bLCA, 4: top hit [3]; --allow-deletion BOOL Allow deletions in a MSA [0]; --max-gaps INT Maximum number of codons with gaps or unknown residues before an open reading frame is rejected [2147483647]. Thank you for your help !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/767:597,detect,detected,597,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/767,1,['detect'],['detected']
Safety,"...................................... 5 Mio. sequences processed; ................................................................................................... 6 Mio. sequences processed; ................................................................................................... 7 Mio. sequences processed; ................................................................................................... 8 Mio. sequences processed; ................................................................................................... 9 Mio. sequences processed; ..................................; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 3630865490; DB Size: 36193901268 (byte); Avg Kmer Size: 2.01593; Top 10 Kmers; XXXXXXL 328142; XXXXXXP 320052; PXXXXXX 301922; LXXXXXX 241818; RXXXXXX 240178; SXXXXXX 235598; TXXXXXX 219310; KXXXXXX 203132; QXXXXXX 188408; VXXXXXX 176435; Min Kmer Size: 0; Empty list: 1073051111. Time for index table init: 0 h 5 m 36s. k-mer similarity threshold: 115; k-mer match probability: 0. Starting prefiltering scores calculation (step 0 of 4); Query db start 0 to 0; Target db start 0 to 9343283; Program call:; tara_test.faa uniref90/uniref90.mms /home/hingamp.p/tmp/pref_4 /home/hingamp.p/tmp/aln_4 --sub-mat blosum62.out -a --alignment-mode 0 -e 0.001 --min-seq-id 0 -c; 0 --max-seq-len 32000 --max-seqs 300 --comp-bias-corr 1 --max-rejected 2147483647 --threads 24 -v 3 . MMseqs Version: e3588acbec735d8aa3158f7bdf38870bebc7d6df; Sub Matrix blosum62.out; Add backtrace true; Alignment mode 0; E-value threshold 0.001; Seq. Id Threshold 0; Coverage threshold 0; Max. sequence length 32000; Max. results per query 300; Compositional bias 1; Profile false; Realign hit false; Max Reject 2147483647; Detect fragments false; Include identical Seq. Id. false; Threads 24; Verbosity 3. MPI Init...; Rank: 0 Size: 1; Init data structures...; Compute score, coverage and sequence id.; Using 24 threads. ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251310375:6970,Detect,Detect,6970,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251310375,1,['Detect'],['Detect']
Safety,"0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124 . MMseqs Version: 	GITDIR-NOTFOUND; Expansion mode 	0; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Max sequence length 	65535; Score bias 	0; Compositional bias 	1; Compositional bias 	1; E-value threshold 	inf; Seq. id. threshold 	0; Coverage threshold 	0; Coverage mode 	0; Pseudo count mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Expand filter clusters 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.95; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	2; Compressed 	0; Threads 	124; Verbosity 	3. Input database ""./uniprot/uniprotdb.index"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid. ## Context; trying to get the mmseqs out in the MSA format so we can input that to Alphafold to predict the structure of protein. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 (Many against Many sequence searching) is an open-source software suite for very fast, ; parallelized protein sequence searches and clustering of huge protein sequence data sets. Please cite: M. Steinegger and J. Soding. MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). MMseqs2 Version: GITDIR-NOTFOUND; © Martin Steinegger (martin.steinegger@snu.ac.kr). usage: mmseqs <command> [<args>]. Easy workflows for plain text input/output; easy-search 	Sensitive homology search; easy-cluster 	Slower, sensitive clustering; easy-linclust 	Fast linear time cluster, less sensitive clustering; easy-taxonomy 	Taxonomic classificatio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:3975,predict,predict,3975,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['predict'],['predict']
Safety,"0; Top 10 k-mers; VVGAAA	1; PILEAA	1; DFNFAA	1; VGVIAA	1; GDCKAA	1; GVDVAA	1; CSEYAA	1; AVFCDA	1; CFRVDA	1; IMTAEA	1; Time for index table init: 0h 0m 6s 612ms; Entries: 629; DB size: 488 MB; Avg k-mer size: 0.000010; Top 10 k-mers; VVGAAA	1; PILEAA	1; DFNFAA	1; VGVIAA	1; GDCKAA	1; GVDVAA	1; CSEYAA	1; AVFCDA	1; CFRVDA	1; IMTAEA	1; Time for index table init: 0h 0m 6s 606ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:44630,abort,aborted,44630,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['abort'],['aborted']
Safety,"0m 6s 612ms; Entries: 629; DB size: 488 MB; Avg k-mer size: 0.000010; Top 10 k-mers; VVGAAA	1; PILEAA	1; DFNFAA	1; VGVIAA	1; GDCKAA	1; GVDVAA	1; CSEYAA	1; AVFCDA	1; CFRVDA	1; IMTAEA	1; Time for index table init: 0h 0m 6s 606ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; mpic++/ 4.8.5 20150623 (Red Hat 4.8.5-36); cmake/3.12.3 ; module load cmake/3.12.3 ; module load openm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287:44784,detect,detected,44784,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287,1,['detect'],['detected']
Safety,"1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3. Compute score and coverage; Query database size: 31979 type: Aminoacid; Target database size: 119988216 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 31.98K 20s 768ms; Time for merging files: 0h 0m 0s 85ms. 4578438 alignments calculated.; 4551951 sequence pairs passed the thresholds (0.994215 of overall calculated).; 142.341873 hits per query sequence.; Time for processing: 0h 0m 36s 82ms; mergedbs tmp_part-14/17957680840564044329/top1 tmp_part-14/17957680840564044329/merged tmp_part-14/17957680840564044329/top1 tmp_part-14/17957680840564044329/round2. Merging the results to tmp_part-14/17957680840564044329/merged; Time for merging files: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 699ms; filterdb tmp_part-14/17957680840564044329/merged tmp_part-14/17957680840564044329/2b_ali --beats-first --filter-column 4 --comparison-operator le. Filter by numerical comparison to first row.; [=================================================================] 100.00% 40.62K 0s 991ms; Time for merging files: 0h 0m 0s 235ms; Time for processing: 0h 0m 1s 633ms; lca /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/2b_ali clusters_rep-seqs.part-14_tax_db --compressed 0 --lca-ranks kingdom:phylum:class:order:family:genus:species --blacklist 12908,28384 --tax-lineage 0 --threads 24 -v 3. Loading NCBI taxonomy; Loading nodes file ... Done, got 2043406 nodes; Loading merged file ... Done, added 52532 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Computing LCA; terminate called after throwing an instance of 'std::out_of_range'] 0.11% 0.46 eta 1h 20m 23s; terminate called recursively; Aborted; Error: Lca died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:10644,Abort,Aborted,10644,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,1,['Abort'],['Aborted']
Safety,2 minor improvements for safety and expressiveness,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/254:25,safe,safety,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/254,2,['safe'],['safety']
Safety,"23-1:104230] Failing at address: 0x14758c03a9e9; [cpu-23-1:104233] *** Process received signal ***; [cpu-23-1:104233] Signal: Bus error (7); [cpu-23-1:104233] Signal code: Non-existant physical address (2); [cpu-23-1:104233] Failing at address: 0x151209f6d9c4; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . mmseqs createdb ""${QUERYFASTA}"" ""${QUERYDB}""; mmseqs splitdb ""${QUERYDB}"" ""${QUERYDB}_split"" --split $SPLITS. for file in $(ls ""${QUERYDB}_split""_*_$SPLITS); do; mmseqs createsubdb ""${file}.index"" ""${QUERYDB}_h"" ""${file}_h""; done. split=0; for file in $(ls ""${QUERYDB}_split""_*_$SPLITS); do; RUNNER=""mpirun -np 128 -p nocona"" bsub mmseqs cluster ""${file}"" chiropteraDB aln_${split} tmp --cov-mode 1 -c 0.9 --threads 128; ((split++)); ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:1450,abort,aborted,1450,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604,1,['abort'],['aborted']
Safety,"25 million MSAs is quite considerable. Following is a brain dump of some things to consider. Sorry it’s not super organized. You can scale down sensitivity. `-s 6` might be sufficient and much faster than the default. You can consider searching only against the uniref and omitting the colabfold db. I think a batch size of 50k-100k queries is probably going to work to be sufficient. I have also recently tweaked the setup_databases.sh script to not store the databases in a compressed form, this will increase RAM use but avoid constant decompression. However, I’ve not commited this change yet. Storage space is likely going to be one of the bigger issues, since 25M MSA will be quite large. You might want to extract the mmseqs shell commands from the colabfold_search python script (https://github.com/sokrypton/ColabFold/blob/main/colabfold/mmseqs/search.py) so you have an easier time tweaking them. One option might be to run all searches in batches, but not run the final result2msa and unpackdb steps yet, as they are comparatively cheap and the filesize increases a lot from the internal result format to the MSA a3m format. You can also run another mmseqs module here (filterdb --extract-lines) to return only a maximum number hits to be converted to a MSA. Currently, colabfold_search materializes each MSA as an individual file to the file system (through the unpackdb) call. We have been meaning to make colabfold_batch work directly with the internal database format. I assume you don’t actually want to ran 25M structure predictions and instead want to run something else that is faster. You might want to implement something that reads from the MMseqs2 databases directly, this will save a lot of filesystem headache.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2427904599:524,avoid,avoid,524,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2427904599,2,"['avoid', 'predict']","['avoid', 'predictions']"
Safety,"4-linux-gnu/libasan.so.4+0x37d2f); #1 0x7fc0f70d7f5f (/usr/lib/x86_64-linux-gnu/libgomp.so.1+0x16f5f); #2 0x7fc0f70ceed9 in GOMP_parallel (/usr/lib/x86_64-linux-gnu/libgomp.so.1+0xded9); #3 0x7ffc996a2d2f (<unknown module>). SUMMARY: AddressSanitizer: heap-buffer-overflow /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/alignment/MultipleAlignment.cpp:168 in MultipleAlignment::updateGapsInSequenceSet(char**, unsigned long, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > > const&, std::vector<Matcher::result_t, std::allocator<Matcher::result_t> > const&, unsigned int*, bool); Shadow bytes around the buggy address:; 0x0c347fffc620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; =>0x0c347fffc670: 00 00 00 00 00 00 00 00 00 00 00 00[fa]fa fa fa; 0x0c347fffc680: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c347fffc690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc6a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc6b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc6c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==71239==ABORTING; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:7418,ABORT,ABORTING,7418,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245,1,['ABORT'],['ABORTING']
Safety,"700 (LWP 39216)]; [New Thread 0x7f7424de8700 (LWP 39217)]; [New Thread 0x7f74245e7700 (LWP 39218)]; [New Thread 0x7f7423de6700 (LWP 39219)]; [New Thread 0x7f74235e5700 (LWP 39220)]; [New Thread 0x7f7422de4700 (LWP 39221)]; [New Thread 0x7f74225e3700 (LWP 39222)]; [New Thread 0x7f7421de2700 (LWP 39223)]; [New Thread 0x7f74215e1700 (LWP 39224)]; [New Thread 0x7f7420de0700 (LWP 39225)]; [New Thread 0x7f74205df700 (LWP 39226)]; [New Thread 0x7f741fdde700 (LWP 39227)]; [New Thread 0x7f741f5dd700 (LWP 39228)]; [New Thread 0x7f741eddc700 (LWP 39229)]; [New Thread 0x7f741e5db700 (LWP 39230)]; [New Thread 0x7f741ddda700 (LWP 39231)]; [New Thread 0x7f741d5d9700 (LWP 39232)]; [New Thread 0x7f741cdd8700 (LWP 39233)]; [New Thread 0x7f741c5d7700 (LWP 39234)]; [New Thread 0x7f741bdd6700 (LWP 39235)]; [New Thread 0x7f741b5d5700 (LWP 39236)]; [New Thread 0x7f741add4700 (LWP 39237)]; [New Thread 0x7f741a5d3700 (LWP 39238)]; [New Thread 0x7f7419dd2700 (LWP 39239)]; Computing offsets.; [=================================================================] 100.00% 15.11M 19m 10s 206ms ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Thread 1 ""mmseqs"" received signal SIGABRT, Aborted.; 0x0000000000853207 in raise (); (gdb) bt; #0 0x0000000000853207 in raise (); #1 0x0000000000853421 in abort (); #2 0x00000000007b7505 in __gnu_cxx::__verbose_terminate_handler() (); #3 0x000000000071f7a6 in __cxxabiv1::__terminate(void (*)()) (); #4 0x000000000071f7f1 in std::terminate() (); #5 0x000000000071d9e4 in __cxa_throw (); #6 0x000000000071f97c in operator new(unsigned long) (); #7 0x00000000005f7e0b in doswap (par=..., isGeneralMode=false) at /home/vsts/work/1/s/src/util/swapresults.cpp:170; #8 0x00000000004122db in runCommand (p=0xd63aa0, argc=argc@entry=22, argv=argv@entry=0x7fffffffde28) at /home/vsts/work/1/s/src/commons/Application.cpp:38; #9 0x00000000004016fa in main (argc=24, argv=0x7fffffffde18) at /home/vsts/work/1/s/src/commons/Application.cpp:196",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473:35055,Abort,Aborted,35055,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762432473,2,"['Abort', 'abort']","['Aborted', 'abort']"
Safety,"79/result /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best -a 1 --overlap 0 -e 0.001 -c 0 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | [=================================================================] 100.00% 0.01 eta -; mmseqs-web-worker_1 | Can not map any alingment results for entry 0!; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 1ms; mmseqs-web-worker_1 | terminate called after throwing an instance of 'std::logic_error'; mmseqs-web-worker_1 | what(): basic_string::_M_construct null not valid; mmseqs-web-worker_1 | convertalis /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/query /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/alis --sub-mat blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Error: Convert Alignments died; mmseqs-web-worker_1 | Aborted (core dumped); mmseqs-web-worker_1 | 2019/07/02 08:52:20 Execution Error: exit status 1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/216:14300,Abort,Aborted,14300,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216,1,['Abort'],['Aborted']
Safety,"8c9700 (LWP 28908)]; [New Thread 0x1555546c8700 (LWP 28909)]; [New Thread 0x1554ea593700 (LWP 28921)]; [New Thread 0x1554ea392700 (LWP 28922)]; [New Thread 0x1554ea191700 (LWP 28923)]; [New Thread 0x1554e9f90700 (LWP 28924)]; [New Thread 0x15549ceb2700 (LWP 28925)]; [New Thread 0x15549ccb1700 (LWP 28926)]; [New Thread 0x15549cab0700 (LWP 28927)]; [New Thread 0x15549c8af700 (LWP 28928)]; [New Thread 0x15549c6ae700 (LWP 28929)]; [New Thread 0x1554996f9700 (LWP 28930)]; [New Thread 0x1554994f8700 (LWP 28931)]; [New Thread 0x1554992f7700 (LWP 28932)]; terminate called after throwing an instance of 'std::bad_alloc' ] 3.00% 15.44K eta 2h 43m 11s ; what(): std::bad_alloc. Thread 14 ""mmseqs"" received signal SIGABRT, Aborted.; [Switching to Thread 0x1554996f9700 (LWP 28930)]; 0x000000000086fbd7 in raise (); (gdb) bt; #0 0x000000000086fbd7 in raise (); #1 0x000000000086fdf1 in abort (); #2 0x00000000007d3e15 in __gnu_cxx::__verbose_terminate_handler() (); #3 0x000000000073c0b6 in __cxxabiv1::__terminate(void (*)()) (); #4 0x000000000073c101 in std::terminate() (); #5 0x000000000073a2f4 in __cxa_throw (); #6 0x000000000073c28c in operator new(unsigned long) (); #7 0x000000000078720a in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (); #8 0x00000000007887eb in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long) (); #9 0x0000000000550fc6 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append (__str=..., this=0x1554996f8520) at /usr/include/c++/7/bits/basic_string.h:1212; #10 convertalignments (argc=<optimized out>, argv=<optimized out>, command=...) at /home/vsts/work/1/s/src/util/convertalignments.cpp:495; #11 0x0000000000848be6 in gomp_thread_start (); #12 0x000000000085a66b in start_thread (arg=0x1554996f9700) at pthread_create.c:463; #13 0x00000000008f609f in clone (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:3792,abort,abort,3792,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628,1,['abort'],['abort']
Safety,"915501/query --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3 . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query ... Done.; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query_h ... Done.; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 38ms; mmseqs search:; Searches with the sequences or profiles query DB through the target sequence DB by running the prefilter tool and the align tool for Smith-Waterman alignment. For each query a results file with sequence matches is written as entry into a database of search results (alignmentDB).; In iterative profile search mode, the detected sequences satisfying user-specified criteria are aligned to the query MSA, and the resulting query profile is used for the next search iteration. Iterative profile searches are usually much more sensitive than (and at least as sensitive as) searches with single query sequences. Please cite:; Steinegger, M. & Soding, J. MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). © Martin Steinegger <martin.steinegger@mpibpc.mpg.de>. Usage: <i:queryDB> <i:targetDB> <o:alignmentDB> <tmpDir> [options]. prefilter options 	default 	description [value range]; --comp-bias-corr 	0 	correct for locally biased amino acid composition [0,1] ; --add-self-matches 	false 	artificially add entries of queries with themselves (for clustering); -s 	5.700 	sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive [1.0,7.5]; -k 	0 	k-mer size in the range (0: set automatically to optimum) ; --k-score 	2147483647	k-mer threshold for generating similar-k-mer lists ; --alph-si",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:3941,detect,detected,3941,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['detect'],['detected']
Safety,"; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	true. indexdb colabfold_envdb_202108_db colabfold_envdb_202108_db --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 1 --split-memory-limit 0 -v 3 --threads 56 . Estimated memory consumption: 780G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write ALNINDEX (24); Write ALNDATA (25); Index table: counting k-mers; [=================================================================tmp2/7152678087979496025/createindex.sh: line 56: 37309 Killed ""$MMSEQS"" $INDEXER ""$INPUT"" ""$INPUT"" ${INDEX_PAR}; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Your Environment; I am running the script on a cluster. You will find below the batch script parameters:; #!/bin/bash; #SBATCH --job-name Install_ColabFold_DB; ##SBATCH --account=def-someuser; #SBATCH --time 24:00:00 ### (HH:MM:SS) the job will expire after this time, the maximum is 168:00:00; #SBATCH -N 1 ### number of nodes (1 node -> several CPUs); #SBATCH --ntasks 1; #SBATCH --cpus-per-task 24; #SBATCH --mem-per-cpu 10000; #SBATCH -A p_linkpredic; ##SBATCH -e %j.err ### redirects stderr to this file; ##SBATCH -o %j.out ### redirects standard output stdout to this file; #SBATCH -p haswell ### types of nodes on taurus: west, dandy, smp, gpu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/583:5078,Detect,Detected,5078,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583,1,['Detect'],['Detected']
Safety,"> I think I encountered same question like you, and my HPC node similar with yours, it kept running almost 17h and no progress, I'm wondering that when you set the param `--db-load-mode 3` then rerun it, how long could you detect the output?; > ; > Any anwser would be helpful! Thanks!. Hard to give a number. `--db-load-mode 2` will halt indefinitely. `--db-load-mode 3` at least can give results.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422791910:223,detect,detect,223,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422791910,1,['detect'],['detect']
Safety,"> Instead I took a look at what instructions are missing for SSE2 support . I think more those are required for not-X86 ?. I've force pushed to this branch [with a newer SIMDe version](https://github.com/nemequ/simde/compare/0a0cdd20c9ac4f0cd787f60cca30c0aa1e71b6c1...aa6c5739159ca2a862b50258ad8f61afed4ca94f) including the following fixes:. https://github.com/nemequ/simde/commit/9d29f2b56ff3a93e4f13ab2075fe043ca10b7e7e common: prefer __builtin_isnan over std::isnan ; https://github.com/nemequ/simde/commit/c0af7afcc8290fba98803febb503015c2cf5a4d7 avx2: fix -Wconversion warning when assigning int to int16_t; https://github.com/nemequ/simde/commit/6791c8f891a4153a8736b7b7cdbc6f4bda7e31f8 Switch some C-style casts to use HEDLEY_STATIC_CAST.; https://github.com/nemequ/simde/commit/dbf8394561e699cb11a75a2e26d1efa121f11c79 mmx, sse, sse2: get rid of compound literals; https://github.com/nemequ/simde/commit/7185559a4df6cfb00d4730b9edb7bdb7ac3967b8 common: add -Wc++98-compat-pedantic to list of disabled warnings ; https://github.com/nemequ/simde/commit/f11544f282376cd06f53e694e9d5fd51b640e67d avx: fix aliasing issue in simde_mm_maskload_pd; https://github.com/nemequ/simde/commit/e314ce18967350aec8e899eb2acae59b95e07660 math: fix detection of __builtin_* functions; https://github.com/nemequ/simde/commit/bdf27512d41d583278ae5efee02a636d139fd806 test: disable -Wreserved-id-macro in µnit header. ; https://github.com/nemequ/simde/commit/aa6c5739159ca2a862b50258ad8f61afed4ca94f sse2, sse4.1, avx2: add some additional casts to vector types . So hopefully the result is less daunting!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-629985459:1239,detect,detection,1239,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-629985459,1,['detect'],['detection']
Safety,"> Thanks a lot for your contribution and finding about this edge case.; > ; > We try to avoid Modern C++ features, could you please implement this without `auto`, lambdas and std::replace. I think `FileUtil` might be an appropriate place for this function.; > ; > The `SSTR(key)` branch is always numeric and doesn't require a call to `path_substitution`. Thank you for your review. These C++ 11 features will be removed in a couple of days. I will push next request before this Friday.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/467#issuecomment-873693087:88,avoid,avoid,88,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/467#issuecomment-873693087,1,['avoid'],['avoid']
Safety,> The current issues seem to be:. I think if the issues are related to SIMDe on x86 CPU. We can avoid some of the issues by enabling SIMDe only on non-x86 CPU architectures like this for now. https://github.com/lh3/minimap2/blob/master/ksw2_extd2_sse.c. ```; #ifdef __SSE2__; #ifdef USE_SIMDE; #include <simde/x86/sse2.h>; #else; #include <emmintrin.h>; #endif; ...; #ifdef __SSE4_1__; #ifdef USE_SIMDE; #include <simde/x86/sse4.1.h>; #else; #include <smmintrin.h>; #endif; #endif; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-627354222:96,avoid,avoid,96,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-627354222,1,['avoid'],['avoid']
Safety,"> We also use an SSSE3 instruction in some important place (iirc), so should we also enable that explicitly?. Yes we should probably have a `HAVE_SSE3` option for that as well. > I don't really like it a lot that with this change -DHAVE_AVX2 -DHAVE_ARM8 would be a possible but nonsensical combination. Well yes, but if the user sets nonsensical flags it is not that big of a problem if the outcome is (expected) nonsense. Is there an easy way we can avoid this?. > BTW Debian uses -DNATIVE_ARCH=0 (https://salsa.debian.org/med-team/mmseqs2/-/blob/master/debian/rules) and compiles multiple SIMD levels and adds a SIMD dispatcher (https://salsa.debian.org/med-team/mmseqs2/-/blob/master/debian/bin/simd-dispatch), if that is in any way useful for you. In Gentoo this is controlled by `CPU_FLAGS_X86` variable at build time. In general we don't use dispatchers for this because there isn't really a point if things are built exactly according to the users set preference. The problem here is that the user preference is not respected because the flags are treated as mutually exclusive.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/533#issuecomment-1038288605:451,avoid,avoid,451,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/533#issuecomment-1038288605,1,['avoid'],['avoid']
Safety,"> `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`; > ; > MMseqs Version: 12.113e3; > Compressed 0; > Extract mode 2; > Preload mode 0; > Threads 40; > Verbosity 3; > ; > Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. I tried to reproduce the above error on a different target database to see if its something to do with the sequences and got the same error with the following additional error messages. Just thought reporting it might help to figure out what's wrong. `free(): corrupted unsorted chunks`; `Aborted (core dumped)`. @milot-mirdita or @martin-steinegger do you have any idea what's going on? Any help is appreciated. . Thanks,; Manu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568:553,Abort,Aborted,553,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568,1,['Abort'],['Aborted']
Safety,"?Dear Milot,. I restarted the clustering to make a new DB, EarthMicrobiomeDB20200910, that includes previous representative DNA gene sequences (~800 million) and recently obtained redundant sequences (around 12 million), using the following command:. mmseqs cluster EarthICEmetagenomesDB EarthICEmetagenomesDB_clu EarthICEmetagenomesDB.tmp --min-seq-id 0.95 --cov-mode 2 -c 0.8 --max-seq-len 132768 --threads 32 >EarthICEmetagenomesDB_clu.log 2>&1 &. It is running since September 10, attached is the log, what do you think how long it will take to finish?. ?Many Thanks,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Intikhab S. Alam; Sent: 10 September 2020 00:45; To: soedinglab/MMseqs2; soedinglab/MMseqs2; Cc: Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscie",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180:180,redund,redundant,180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180,1,['redund'],['redundant']
Safety,"@adriaaula If you used the file I shared, the predicted ORFs have been dereplicated using MMseqs2 by tax_id, @martin-steinegger I will post the workflow we use when I am back from vacation.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570608627:46,predict,predicted,46,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570608627,1,['predict'],['predicted']
Safety,"@fstrozzi thank you for providing this file. I was only able to detect four sequences that could not find themselves by searching the subset against itself,. ```; mmseqs search missed_exact_matches_mmseqs2 missed_exact_matches_mmseqs2_second aln_s4 tmp -s 4 --max-seqs 4000; ```. The sequences are:; (1) `LINRKREKKERKKERKKERKKERKKERKKERKKERKKGRKKERKKERKKERKKERKKERKKERKKERKKERKKERKKEKRKEETKEGRKEGRKRKKEKRKKQANKQIE`; (2) `MAVGTGVAVADGTAVGVGLGVGIGVSLGVAVGVGTRVGARVAVGAEVGVGARVGGTAVGLGAAVAVGVGSGVMVGVGCP`; (3) `TTTPTTTPSTTTLTKTPTTTTTATTTPTTTTPSTTTPTTTTTTTTKPTTITPTATTPTTTTPTTTPTTTTPTTTSLTTTTPTRTKQPTTTPTKTPSTTTPTTTPKTTPSTTTPTTTTPTTTTPTTTTPTTTTPTTTIPTKTTTTAPTTTTSTTTTPTTTPSTTTPTTTTPTTTTPITTTPTTTPTTTTPTTTPSTTTPTTTTHTTTTHTTTTPTKTTPTTTTPTTTTPTTTIPTKTTTTAPTTTTSTTTTPTTTPSTTTPTTTTPTTTTPTTTTPTTTPTTTSTTTPSTTRLTTTTPSTTTPTTTTPTTTSPTTTTSTTTPTTTTPTTTPTTTPTTTPTTTTPTTTPSTTTLTKTPTTTTPATTTTTTTTPSTTTPTTTTTITTKPTTITPTATTPTTTIPTTTTPTSTTPTTTKPTTTTPTTTTPITIIPITSTPTTLTPTTTTSTTTKPTTTHSTNTPTTTTP`; (4) `MLTKSRQIISS`. Sequence (1) could not find a hit mostly because of the low complexity repeat of the pattern ""KKER""; `LINRKREKKERKKERKKERKKERKKERKKERKKERKKGRKKERKKERKKERKKERKKERKKERKKERKKERKKERKKEKRKEETKEGRKEGRKRKKEKRKKQANKQIE`. Tantan masks nearly the whole sequence:; `; LINRKREXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIE; `. The compositional bias correction of MMseqs2 further punishes this hit. If you turn off masking and composition bias correction this hit will be found (`--mask 0 --comp-bias-corr 0`). ; We apply these strict criteria to avoid high scoring false positives. . Masking and low composition bias correction are also the reason for (1), (2), (3) to miss the self-hits. . Sequence (4) does not fulfill the e-value criteria, probably because of its length.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-394397871:64,detect,detect,64,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-394397871,2,"['avoid', 'detect']","['avoid', 'detect']"
Safety,"@kad-ecoli thank you for reporting this issues. . Yes, the issues is related to https://github.com/soedinglab/MMseqs2/issues/88. I do not find solution 1. very elegant since we do need more CPU time, IO and hard disk space.; If you do not mind this slight overhead than you could just run clusthash (see https://github.com/soedinglab/MMseqs2/wiki#how-to-redundancy-filter-sequences-with-identical-length-and-100-length-overlap). . I will think about a more elegant solution for this problem.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/104#issuecomment-406959901:354,redund,redundancy-filter-sequences-with-identical-length-and-,354,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/104#issuecomment-406959901,1,['redund'],['redundancy-filter-sequences-with-identical-length-and-']
Safety,"@martin-steinegger I am encountering a similar error when using a custom database to generate the MSA to be used by Colabfold for structure prediction. . `Invalid database read for database data file=/media/data/Databases/database_50_db.idx, database index=/media/data/Databases/database_50_db.idx.index; getData: local id (4294967295) >= db size (50); Traceback (most recent call last):; File ""/media/data/tools/ColabFold/colabfold/mmseqs/search.py"", line 487, in <module>; main(); File ""/media/data/tools/ColabFold/colabfold/mmseqs/search.py"", line 427, in main; mmseqs_search_monomer(; File ""/media/data/tools/ColabFold/colabfold/mmseqs/search.py"", line 108, in mmseqs_search_monomer; run_mmseqs(mmseqs, [""expandaln"", base.joinpath(""prof_res""), dbbase.joinpath(f""{metagenomic_db}{dbSuffix1}""), base.joinpath(""res_env""), dbbase.joinpath(f""{metagenomic_db}{dbSuffix2}""), base.joinpath(""res_env_exp""), ""-e"", str(expand_eval), ""--expansion-mode"", ""0"", ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)]); File ""/media/data/tools/ColabFold/colabfold/mmseqs/search.py"", line 23, in run_mmseqs; subprocess.check_call([mmseqs] + params); File ""/media/data/tools/ColabFold/localcolabfold/colabfold-conda/lib/python3.10/subprocess.py"", line 369, in check_call; raise CalledProcessError(retcode, cmd); subprocess.CalledProcessError: Command '[PosixPath('mmseqs'), 'expandaln', PosixPath('test_msa/prof_res'), PosixPath('/media/data/Databases/database_50_db.idx'), PosixPath('test_msa/res_env'), PosixPath('/media/data/Databases/database_50_db.idx'), PosixPath('test_msa/res_env_exp'), '-e', 'inf', '--expansion-mode', '0', '--db-load-mode', '0', '--threads', '96']' returned non-zero exit status 1.` . I have replaced the third metagenomic database with a custom database, any suggestions on how I could fix this issue would be highly appreciated.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1706126605:140,predict,prediction,140,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1706126605,1,['predict'],['prediction']
Safety,"@martin-steinegger Thank you very much. You are absolutely right, it took now 7 minutes as you correctly predicted.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535569679:105,predict,predicted,105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535569679,1,['predict'],['predicted']
Safety,"@martin-steinegger Thanks for the answer!; Intuitively, I've already tried running your latest suggested command:; `mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln"" --gap-open 3 --gap-extend 0`. However, no output file is generated (in this case, `alnRes.txt`) when the gap options are passed to convertalis. As for the warning, I am quickly testing things on my PC, but the usually I will run this for bigger datasets on a Linux machine. I will test on Linux as well to see if there is any difference. EDIT - On Linux:; `5316 Aborted (core dumped) mmseqs convertalis seqsDB revDB alignDB alnRes.txt --search-type 3 --format-output ""query,target,raw"" --gap-open 3 --gap-extend 1`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491344481:600,Abort,Aborted,600,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491344481,1,['Abort'],['Aborted']
Safety,"@nick-youngblut I am sorry about the multi output. The main reason for them is to avoid IO. Slow IO system can take hours/days to merge tera bytes of data and MMseqs2 modular architecture require multiple IO steps unlike other aligners. The IO step is especially critical if the search was performed using many threads since the merging runs single threaded. ; However, every module should create a `.dbtype` file at the end, which can be used to check if the module finished successfully. . The `clusterupdate` is one of the modules that needs ground up rebuild. Too much of its logic is done in Bash steps that do not verify the consistency correctly. . I am a bit confused why your `clusterupdate` uses `extractorfs`. What is your exact setup? Do you try to update protein clusters using genomes?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664790179:82,avoid,avoid,82,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664790179,1,['avoid'],['avoid']
Safety,"@ppflrs I have rebuilt the metaclust database by adding new identifier and reclustering everything. Every protein source should be now labeled with uniq identifier which can be used to traced the protein to the JGI, OM-RGC, Uniprot or NCBI. ; The new release is available here https://metaclust.mmseqs.com/2018_06/ ; ; The identifier looks like this now. >RifCSPlowO2_12_1023861.scaffolds.fasta_scaffold367679_1 # 24 # 428 # -1 # ID=367679_1;partial=00;start_type=ATG;rbs_motif=None;rbs_spacer=None;gc_cont=0.435. `RifCSPlowO2_12` identifies the JGI project. The project can be accessed the following way (you need an JGI account): . https://genome.jgi.doe.gov/portal/pages/dynamicOrganismDownload.jsf?organism=RifCSPlowO2_12. Within the project the contig is contained in the file `1023861.scaffolds.fasta` at fasta record `scaffold367679_1`. . The rest of the header contains the prodigal prediction information. . I have also added a file metaclust_50_cluster.fasta.gz which contains all cluster member in a fasta like fromat https://github.com/soedinglab/MMseqs2/wiki#cluster-fasta-like-format.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/87#issuecomment-399853855:891,predict,prediction,891,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/87#issuecomment-399853855,1,['predict'],['prediction']
Safety,"@zkstewart it will be a bit harder to support iterative searches with multiple hits detection. I will see if it is possible the next days. . The easiest solution, currently working solution is to first perform an iterative search followed by a profiles sequence search using the alternative alignment mode. This should be sensitive and include alternative alignments. mmseqs search qDB tDB resDB tmp ... --num-iterations 3; mmseqs result2profile qDB tDB resDB qProfDB; mmseqs search qProfDB tDB resDB tmp --alt-ali 5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/86#issuecomment-416247457:84,detect,detection,84,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/86#issuecomment-416247457,1,['detect'],['detection']
Safety,According to NCBI they clustered NR at 90% id and 90% cov. I was wondering what would be the correct cluster mode & cover mode to reproduce the clustering?. >Reduced redundancy. Faster searches. More diverse proteins and organisms in your BLAST results. Check out our new ClusteredNR database – derived from the default BLAST protein nr database by clustering sequences at 90% identity / 90% length ([details below](https://ncbiinsights.ncbi.nlm.nih.gov/2022/05/02/clusterednr_1/#more-about-clusters)). Get quicker results and access to information about the distribution of your hits across a wider range of organisms and evolutionary distances.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/651:166,redund,redundancy,166,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/651,1,['redund'],['redundancy']
Safety,"After I fix the above mentioned bug, my output is like this:; $ mmseqs search queryDB targetDB resultDB tmp --use-index. Program call:; queryDB targetDB resultDB tmp --use-index . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - '[' -z /home/zcx/Program/MMseqs/2.0 ']'; - '[' 4 -ne 4 ']'; - '[' '!' -f queryDB ']'; - '[' '!' -f targetDB ']'; - '[' -f resultDB ']'; - '[' '!' -d tmp ']'; - export OMP_PROC_BIND=TRUE; - OMP_PROC_BIND=TRUE; ++ dirname queryDB; - cd .; ++ basename queryDB; - QUERY_FILE=queryDB; ++ pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; ++ pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - '[' 4 -le 4 ']'; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - '[' '!' -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ']'; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/z",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:362,Detect,Detect,362,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,1,['Detect'],['Detect']
Safety,Avoid index after query seq name & Deal with MPI parameter.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/163:0,Avoid,Avoid,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/163,1,['Avoid'],['Avoid']
Safety,Avoid sequence id parsing,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/565:0,Avoid,Avoid,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/565,1,['Avoid'],['Avoid']
Safety,Avoid tmp file,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/237:0,Avoid,Avoid,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/237,1,['Avoid'],['Avoid']
Safety,"Based on the graph below, which I pulled from the MMSeqs2 [paper supplement](https://www.biorxiv.org/content/biorxiv/suppl/2017/06/07/079681.DC5/079681-1.pdf), I was expecting my query to take less than an hour (even with higher sensitivity). However, it seems to be taking much, much longer. Additionally, it seems to be hanging on the stage after `Index table: fill` is printed, after printing a good portion of the progress bar. . ![image](https://github.com/soedinglab/MMseqs2/assets/49450966/7ed7b5b0-8236-477c-93f1-904cb461d691). My query database is only 14 sequences in size (which I realize is much smaller than the MMSeqs2 program is intended to work with). The target database, which is the result of splitting all of GTDB into sub-datasets, is about 6 million sequences (6,263,739 to be exact). This is the command I executed. . `mmseqs easy-search -s 7 query.fasta targetDB_split result.m8`. Here is some information about my computing environment. I should also note that I am submitting the job using ``slurm``, and allocated 50 GB of memory (which is less than the 23 GB predicted by the program). . ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Thread(s) per core: 1; Core(s) per socket: 16; ```; It is possible that this is just a slurm issue, or something else going on which is not related to MMSeqs -- I just wanted to double-check that there is nothing glaringly wrong with this workflow. Also, thank you so much for how quickly you respond to issue requests! I really appreciate it.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805:1087,predict,predicted,1087,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805,1,['predict'],['predicted']
Safety,"Because we don't develop the .sh script anymore and it's not up-to-date. The development is happening in the python version now. If you want to use the server - with fast response times, like our has - you need a server with ~1TB permanently committed RAM. Anything less will not work.; `colabfold_search` does not have this issue, however, it has slightly different performance pitfalls to look out for. Single query searches will remain slow, with `colabfold_search`. Our proposed workflow is to gather a few hundred to thousands of queries. Do the MSA generation stage with `colabfold_search` and then batch predict them with `colabfold_batch`. Edit: the python `colabfold_search` is also pip-installed together with `colabfold_batch`. If you installed with localcolabfold (recommended) or with pip. You will have both available.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497:611,predict,predict,611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497,1,['predict'],['predict']
Safety,"Can you check how much swap spaces is being used (`free -h`). I guess the automatic memory limit detection is going wrong somehow. Do you set memory limits in the cluster environments? Can you restart without/higher memory limits? I am not sure if SemiBin exposes MMseqs2 options to users, but you could set `--split-memory-Limit` so it processes the GTDB in smaller chunks. You would set this parameter to about 70-80% of total allowed RAM.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894187795:97,detect,detection,97,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894187795,1,['detect'],['detection']
Safety,"Can you run `createindex` with manually passing it `--split 8` to recreate the index with more subsets?; Right now it probably has a very small RAM safety margin and could crash with a larger query sequence set. The warnings seem to be quite weird and buggy, we have to take a look at that. By the way, if you want a set of stickers (see https://twitter.com/thesteinegger/status/1201076220957315074), send me your address to milot at mirdita de.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/278#issuecomment-590570666:148,safe,safety,148,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278#issuecomment-590570666,1,['safe'],['safety']
Safety,Can you set some breakpoints and run again:; ```; b exit; b _exit; b _Exit; b abort; r; ... wait until crash/exit ...; bt; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591447563:78,abort,abort,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591447563,1,['abort'],['abort']
Safety,"Careful about the parameters though, they are not quite the same for the two tools, if I remember correctly. I would recommend to install `libopenmpi-dev` (or your OS equivalent) and rebuild the HH-suite, it will detect the presence of MPI and build cstranslate_mpi, ffindex_apply_mpi, hhblits_mpi etc.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/83#issuecomment-383552461:213,detect,detect,213,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/83#issuecomment-383552461,1,['detect'],['detect']
Safety,Commit 14014cd0ec50049f796f153ea8a72164ff4b8b45 should be stable and safe to use. Could you please test if the instability was resolved on your dataset?. You will find precompiled binaries [here](http://mmseqs.com/archive/14014cd0ec50049f796f153ea8a72164ff4b8b45) (once the CI builds them).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-593713722:69,safe,safe,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-593713722,1,['safe'],['safe']
Safety,"Could you give us a short description of what you want to achieve?. We do not support using MMseqs2 as a shared library, especially since we use exit() for aborting in error conditions. You probably don't want your libraries to kill your application.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/81#issuecomment-381911141:156,abort,aborting,156,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/81#issuecomment-381911141,1,['abort'],['aborting']
Safety,"Could you please upload some of those 500 sequences that did not find themselves?. There are primarily three reasons why they couldn't be found:. - The sequences might be locally biased, and the compositional bias correction will then get rid of them (`--comp-bias-corr 0` to disable this behavior) ; - The masking might mask out all the low complexity regions and basically mask out the whole sequence and won't be able to find anything (`--mask 0`); - The sequence identity approximation might not be good enough for the self-match, add the `-a` parameter to compute the full backtrace including the exact sequence identity. Other options you can use for trying to recover self-matches are `--exact-kmer-matching 1`, which will disable the similar k-mer generator and only use the exact k-mer for searching.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-393926958:667,recover,recover,667,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-393926958,1,['recover'],['recover']
Safety,"Cryptic_DB/Cryptic_DB`. `mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0`; `mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0`. `mmseqs search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf -s 2 --spaced-kmer-pattern 11011101 --gap-open 16 --gap-extend 2 -k 6 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. This didn't find all the peptides. I have experimented with increasing gap penalties, variying k-mer sizes (5-7), and sensitivity. I have also tried explicitly stating --spaced-kmer-pattern and k-mer length during createindex step. ; The best result I got with:. `mmseqs search \; --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 \; --start-sens 1 --sens-steps 3 -s 12 \; --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp`. After I filtered seqIdentity == 1 and checked the fraction of identified peptides by length, I have discovered that 8-10 mers are not detected at all (in any search I've tried). . Peptide_length | Number | Found | Fraction; -------------------- | -------- | ---------- | -----------; 8 | 1150 | NA | NA ; 9 | 5465 | NA | NA ; 10 | 1159 | NA | NA ; 11 | 417 | 305 | 0.731; 12 | 107 | 73 | 0.682; 13 | 56 | 38 | 0.679; 14 | 28 | 18 | 0.643; 15 | 26 | 15 | 0.577. Can you suggest an approach to tackle the problem?; Thanks in advance,; Yehor. ## MMseqs Output; search --seed-sub-mat VTML40.out --comp-bias-corr 0 --mask 0 -e inf --max-seqs 200000 --start-sens 1 --sens-steps 3 -s 12 --spaced-kmer-pattern 11011101 --gap-open 20 --gap-extend 3 --max-seq-id 1 IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp . MMseqs Version: 	12.113e3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	inf; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391:1622,detect,detected,1622,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391,1,['detect'],['detected']
Safety,"Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 18:53; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). I think it's probably salvageable. I'll need to look over your output in detail. Another question: This was clustered using easy-linclust not using easy-cluster right? Cluster update currently will try to use the normal clustering for the sequences that cannot be assigned to an existing cluster. This will also likely be very slow (probably slower than clustering anew using linclust). We will have to build support for updating with linclust. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688971058",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616:295,redund,redundant,295,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616,2,['redund'],['redundant']
Safety,"Dear all I think I fixed the strategy I was trying... . After looking at older issues I tried the following:. ```; mmseqs createdb genome.ffn ./NUC/collection_db --dbtype 2; mmseqs cluster --threads 7 ./NUC/collection_db ./NUC/collection_clu XOXO; mmseqs createsubdb ./NUC/collection_clu.index ./NUC/collection_db ./NUC/collection_rep; mmseqs createindex ./NUC/collection_rep xxxxx --search-type 3 # this is the addition I made; mmseqs map sample_db ./NUC/collection_rep ./NUC/mapped XXX --threads 7; mmseqs convertalis sample_db ./NUC/collection_db ./NUC/mapped nuc_results.tsv; ```. Looking at the results for 2 proteins/predictions the number of hits seem similar. Best,. Andrés",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/507#issuecomment-981968527:623,predict,predictions,623,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507#issuecomment-981968527,1,['predict'],['predictions']
Safety,"Dear mmseqs2 developvers,. I have a list of thousands of subject - query fasta pairs, and I would like to run mmseqs to align each of these pairs in a way that each sequence is only aligned to its pair. This is how my list looks:. ```; S10CNODE_1.fasta S1CNODE_25.fasta; S10CNODE_2.fasta S2CNODE_8.fasta ; S10CNODE_3.fasta S5CNODE_11.fasta ; S10CNODE_4.fasta S3CNODE_7.fasta; S10CNODE_5.fasta S6CNODE_10.fasta; ```; Is there an efficient way to perform these 1:1 alignments? Could I create a database that contains all sequences and then align a database subentry?. I am trying to avoid aligning all against all.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/813:581,avoid,avoid,581,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/813,1,['avoid'],['avoid']
Safety,"Dear, . I am using mmseqs2 to remove redundant sequences and isoforms from eukaryotic proteomes. However, we obtained some unexpected and undesired clusters and we would like to understand what is going on. We would like to know if this result is actually the expected one (which I'm not sure beucase both clustered seqs are divergent), or if this is a bug, or something that we do not consider in the command line. . We used the proteome of Trichoplax adhaerens (https://www.uniprot.org/proteomes/UP000009022). **## Expected Behavior**; We have focused on two sequences as example that should be in different clusters, B3RQY5 and B3S420. ; The sequence similarity of both sequences is the following (aligned with needle):; - Length: 643; - Identity: 146/643 (22.7%); - Similarity: 199/643 (30.9%); - Gaps: 358/643 (55.7%); - Score: 682.5; >B3S420 ; DHVFANENDNSDVYQKVASPIVTAAMEGFNGTIFAYGQTSSGKTHTMMGNHNDPGVIPLA; VNEIFRYINQKPNREFLLRVSYMEIYNEVITDLLNPSNTNLKIHENQKKEVYVGSLTENI; VNSPSQILTIMTQGETHRHTGGTNMNERSSRSHTIFRMIIESREQNQDQNEADQDTAVKV; SALNLVDLAGSERVSQTGSEGIRLKEGGFINKSLLTLGSVIAKLSEGEGNFIPFRDSKLT; RILQSSLGGNALTAIICTVTPVSLDETSSTLKFASRAKKIKNKPEVNEVVDDE; > B3RQY5; MNSEDACNIRVVCRVRPLNSAETHAGSEFIPKFPNEGQIVLSGKSFSFDHVLNSSTNQQS; MYDIAAKPIVKDVLAGYNGTIFAYGQTSSGKTHTMEGVIGDPEWQGIIPRIIGDIFAYIY; TMDENLEFHIKVSYFEIYMDKIRDLLDVTKTNLAVHEDKNRIPYVKNITERFVSSPEEVF; EIIDEGKSNRHVAVTNMNEHSSRSHSIFLIHIKQENVETHKSVHGKLYLVDLAGSEKVSK; TGAEGMVLDEAKNINKSLSALGNVISALSEATKSHVPYRDSKLTRILQESLGGNARTTII; ICCSPSSINESETKTTLQFGARAKTIKNSVKVNEELPAEEWKRRYEKEREKSSRIKRVLE; NYELELKKWRDGENVPVNEQAGGKDEGKLTSNHSTSKINIADALGESERVQFDEERNRLY; EQIDEKDDELNNRNTLIEQLRRQLEDKDEEFHLIKNESTRRQAQINALEDELQDSKDEVK; EVLNALEELYVNFDEKSRQLEVKSQEYEKNLEELMGIKSKLSNMEENFEETKDTEKRYKR; RVTESIKNLLQDMHEIGDVLQDEELKTAIAKDSEKVSDEELTLARLHFGKIKGELKILVS; RNHTIESERAELEKKLNVSEANLSENQLLLTEACF. **## Current Behavior**; Both sequences are in the same cluster using easy-cluster. . **## Steps to Reproduce (for bugs)**; We used this command to obtain such result:; mmseqs easy-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/544:37,redund,redundant,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/544,1,['redund'],['redundant']
Safety,"Debian patch works is that on distros such as Debian (and Fedora and Gentoo) the system zstd library can optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be file",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1210,risk,risk,1210,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463,2,['risk'],['risk']
Safety,"For Unexpected Behavior 2 & 3. There is a sequence length limitation in MMseqs2. With spaced 6-mer it needs at least 13 residues to detect a hit, w/o spacing just 12. You could try to run them with -k 5. . What is the use case for this small sequences?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275110965:132,detect,detect,132,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275110965,1,['detect'],['detect']
Safety,"Greetings,. The program correctly detects and parses Uniprot header, as described in [https://github.com/soedinglab/mmseqs2/wiki#identifier-parsing](url). Is there a way to avoid parsing it and keep the entire FASTA sequence identifier (e.g. `sp|Q8I6R7|ACN2_ACAGO` instead of only `Q8I6R7`) in the result file when doing a search ?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/565:34,detect,detects,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/565,2,"['avoid', 'detect']","['avoid', 'detects']"
Safety,"Hello @milot-mirdita and @martin-steinegger . ; Sorry if it took me some time to extra testing. As Milot was suggesting the problem happens when `createindex` and `search` are not set to use the Matrix.; Following I am showing the results alignments of a proteome against itself, using different combinations of of VTML80 and blosum62 for `createindex` and `search`. . | Pair | createindex | search | count | seconds |; | ------ | ------ | ------ | ------ | ------ |; | a-a | blosum62 | blosum62 | 10205 | 17.11 |; | a-a | VTML80 | blosum62 | 13962 | 91.36 |; | a-a | VTML80 | VTML80 | 14268 | 98.56 |; | a-a | blosum62 | VTML80 | 10709 | 16.5 |; | a-a | VTML40 | VTML40 | 14032 | 105.10 |. # Same alignments without indexing. | Pair | createindex | search | count | seconds |; | ------ | ------ | ------ | ------ | ------ |; | a-a | none | VTML80 | 14268 | 69.96 |; | a-a | none | blosum62 | 10205 | 13.66 |. As you can see from the second line, the results are same as in the first line of the fist table (in which only blosum62 was used). . I guess this solves the issue, and I am happy we found the problem :) ; Nevertheless, it would be very useful to have some kind of warning or even better, error message to avoid such things to happen (unless it is not the user's decision, in which case a ""--force-submat"" parameter might be handy). . Also, as I understand, among the `BLOSUM` matrixes only `blosum62` can be set at present, while different VTML matrixes can be set. . Could you please point me to somewhere I can see which MATRIXES can be used? ; Most matrixes files are under the `data` directory, but many did not work in my tests.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-674686756:1216,avoid,avoid,1216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-674686756,1,['avoid'],['avoid']
Safety,"Hello there, . I want to create a taxonomy db from the GTDB release 89. . I have found that Annotree presents a file with all the predicted gene sequences here:; [https://data.ace.uq.edu.au/public/misc_downloads/annotree/r89/](https://data.ace.uq.edu.au/public/misc_downloads/annotree/r89/). From this I could obtain a db easily and generate a tab-separating mapping file explicitly pointing to a genome: . ```; NZ_FWXU01000077.1_1 RS_GCF_900176345.1; NZ_FWXU01000059.1_5 RS_GCF_900176345.1; NZ_FWXU01000047.1_9 RS_GCF_900176345.1; NZ_FWXU01000020.1_25 RS_GCF_900176345.1; NZ_FWXU01000020.1_57 RS_GCF_900176345.1; NZ_FWXU01000020.1_89 RS_GCF_900176345.1; NZ_FWXU01000018.1_9 RS_GCF_900176345.1; NZ_FWXU01000018.1_41 RS_GCF_900176345.1; NZ_FWXU01000018.1_73 RS_GCF_900176345.1; NZ_FWXU01000018.1_105 RS_GCF_900176345.1; ```; There is also a taxonomy file [here](https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/) in which for each genome there is the taxonomic information in the following structure: . ```; RS_GCF_900234795.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Methylobacterium;s__Methylobacterium extorquens; RS_GCF_000012905.2	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhodobacterales;f__Rhodobacteraceae;g__Rhodobacter_A;s__Rhodobacter_A sphaeroides; GB_GCA_003096615.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Methylobacterium;s__Methylobacterium organophilum; GB_GCA_002709955.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__UBA8366;f__GCA-2696645;g__GCA-2696645;s__GCA-2696645 sp002709955; RS_GCF_001556125.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Bosea;s__Bosea sp001556125; RS_GCF_001555965.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Sphingomonadales;f__Sphingomonadaceae;g__Sphingomonas;s__Sphingomonas sp001555965; RS_GCF_900101505.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacte",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/244:130,predict,predicted,130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/244,1,['predict'],['predicted']
Safety,Hello! I used MMseqs2 concatdb to concatenate two reference databases (NR and MMETSP) and everything ran fine with Metaeuk (predictexons and reduceredundancy) but when I try to do unitesetstofasta it says the db_h file is not there. I realise when I did concatdb it did not generate a concatdb_h file or a concatdb_h.dbtype or concatdb_h.index.; I tried just manually concatenating the two _h files (NR_h and MMETSP_h) and that seems to work but it also asks for the .index file and I don't really know what that contains or how to generate it. ; Help please? Thank you!!,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/537:124,predict,predictexons,124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/537,1,['predict'],['predictexons']
Safety,"Hello, . I've been encountering an issue for creating index of ColabDB. It looks like it is a memory consumption issue. Could you help me with this matter please? ; Thank you in advance for your help. . Sincerely,; Ilyes. ## Expected Behavior; An index file of the colabfold_envdb_202108_db is computed for a fast read-in. ## Current Behavior; Error: indexdb died; slurmstepd: error: Detected 1 oom-kill event(s) in StepId=27501792.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ## Steps to Reproduce (for bugs); I am using the following commands to build the database as indicated here: https://colabfold.mmseqs.com/; Uniref30 was successful but not ColabDB. . `wget https://raw.githubusercontent.com/sokrypton/ColabFold/main/setup_databases.sh`; `chmod +x setup_databases.sh`; `./setup_databases.sh database/`. ## MMseqs Output (for bugs). + ARIA_NUM_CONN=8; + WORKDIR=database/; + cd database/; ++ pwd; + export PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + PATH=/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/alphafold_output/Output_test_running_time/database/mmseqs/bin/:/lustre/ssd/ws/iabdelha-IA-AF-SSD-workspace/alphafold/data/colabfold_batch/bin:/usr/lib64/qt-3.3/bin:/sw/taurus/tools/slurmtools/default/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin; + STRATEGY=; + hasCommand aria2c; + command -v aria2c; + hasCommand curl; + command -v curl; + STRATEGY=' CURL'; + hasCommand wget; + command -v wget; + STRATEGY=' CURL WGET'; + '[' ' CURL WGET' = '' ']'; + '[' '!' -f COLABDB_READY ']'; + mmseqs createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1; createindex colabfold_envdb_202108_db tmp2 --remove-tmp-files 1 --split 1 . MMseqs Vers",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/583:384,Detect,Detected,384,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583,1,['Detect'],['Detected']
Safety,"Hello, ; I am trying to use MMSEQS2 to assign taxonomy to a large set of predicted genes. However, the command “mmseqs taxonomy” is not identified. ; I am using version 1d62934a57769c971fec3724d3e805f8162b976a . Could you please let me know how I should enable this option?; Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/71:73,predict,predicted,73,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/71,1,['predict'],['predicted']
Safety,"Hello, I have a huge target database (123K microbial genomes) and must `search` 60 datasets ranging from a few sequences of size 31 to 200K sequences with some reaching more than 100K nucleotides. Even for the smallest query, the pre-filter step takes most of the time (about 30 hours) on an EPYC cpu (120 threads used). The total run time would be about 80 days. How much could I improve the running time if I `createindex` the database ? I couldnt find the information in the publication, and the other issue I found was about `taxonomy`. EDIT: the target dabatase:; ```; total 299G; -rwxrwx--- 1 guelou01 4294967294 447G Aug 18 19:33 NCBI_ALL_DB; -rwxrwx--- 1 guelou01 4294967294 4 Aug 18 19:34 NCBI_ALL_DB.dbtype; -rwxrwx--- 1 guelou01 4294967294 954M Aug 18 18:11 NCBI_ALL_DB_h; -rwxrwx--- 1 guelou01 4294967294 4 Aug 18 18:11 NCBI_ALL_DB_h.dbtype; -rwxrwx--- 1 guelou01 4294967294 195M Aug 18 19:34 NCBI_ALL_DB_h.index; -rwxrwx--- 1 guelou01 4294967294 236M Aug 18 19:34 NCBI_ALL_DB.index; -rwxrwx--- 1 guelou01 4294967294 257M Aug 18 19:34 NCBI_ALL_DB.lookup; -rwxrwx--- 1 guelou01 4294967294 17 Aug 18 18:10 NCBI_ALL_DB.source; ```; Is there a way to predict how much space it can take ?. Command:; ```; mmseqs search query_DB target_DB result_DB ~/tmp --search-type 3 --threads 120 -a --max-seq-len 1000000 --start-sens 1 --sens-steps 3 -s 7 ; ``` ; Any other suggestions to speed up the process ?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/748:1159,predict,predict,1159,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748,1,['predict'],['predict']
Safety,"Hello,. First, thank you for the fantastic work on mmseqs2, its super fast! I think I’ve come across an issue where exact matches arent being detected by the mmseqs2 search algorithm. . ## Expected Behavior; Exact matches hit eachother. ## Current Behavior; When a subset of sequences from a reference database are searched against the database, a surprisingly large fraction of proteins do not return themselves as their best hit. The severity of the problem depends on the database size, in the example below 2.8% of proteins do not hit themselves, but when I came across this issue I was generating a larger database where using the same test 31% of proteins were not hitting themselves at all. This result does not change if sensitivity is increased to the maximum (-s 8.5). I find this behaviour concerning given you’d expect an exact matches to be returned in a relatively small database. ## Steps to Reproduce (for bugs); If I grab 10 random genomes ([genome_proteins.tar.gz](https://github.com/soedinglab/MMseqs2/files/1444710/genome_proteins.tar.gz)) from NCBI and create a reference database using their proteins, and use one of these genomes as the query database:; ```; cat *faa > pooled.faa. mmseqs createdb \; 	pooled.faa \; 	reference_DB. mmseqs createdb \; 	GCF_000352185.1_protein.faa \; 	query_DB; ```; Then search query against the reference using default settings, and convert this to a blast-like output:; ```; mkdir tmp . mmseqs search \; 	query_DB \; 	reference_DB \; 	result_DB \; 	tmp . mmseqs convertalis \; 	query_DB \; 	reference_DB \; 	result_DB \; 	result_DB.m8; ```. and grab the top hit for each protein (i.e. first listed):. ```; for i in `cat result_DB.m8 | awk '{print $1}' | uniq `; 	do grep -m 1 -w ^$i result_DB.m8; done > result_DB.top_hits.m8; ```; Then, when we check the results in R:; ```; library('data.table'); d = fread('result_DB.top_hits.m8'); # Check if query matches the reference sequence ID; d$self_match = d$V1 == d$V2. # Check percentage of total ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/48:142,detect,detected,142,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/48,1,['detect'],['detected']
Safety,"Hello,. I downloaded and set up the Uniref100 database for the taxonomy pipeline according to the instructions, but when I run the taxonomy command, the output says `Computed index is too large. Avoid using the index`. It also says `split was set to 5 but at least 8 are required. Please run with default paramerters` even though I never adjusted the default. Are these things I should be worried about, and could I be doing something different to make this search more efficient? I know it is a huge database. Full traceback of commands below. Thank you in advance,; -Matt. ## Commands to set up the taxonomy database; ```; mmseqs databases UniRef100 uniref100.mmseqs tmp. mmseqs createtaxdb uniref100.mmseqs tmp --threads 8; createtaxdb uniref100.mmseqs tmp --threads 8. mmseqs createindex uniref100.mmseqs tmp --threads 8; createindex uniref100.mmseqs tmp --threads 8; ```. ## Search commands; ```; mmseqs createdb N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.faa N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db. mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_42; 5.proteins.taxonomy temp --threads 8; ```. ## Full traceback of search command; ```; mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8; Tmp temp folder does not exist or is not a directory.; Create dir temp; taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8. MMseqs Version: ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/278:195,Avoid,Avoid,195,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278,1,['Avoid'],['Avoid']
Safety,"Hello. I am currently running a variant impact prediction based on MSA.; Recently, an [preprint](https://www.biorxiv.org/content/10.1101/2022.12.13.520259v1.full) was published. . > Alignment-based protein mutational landscape prediction: doing more with less, Marina Abakarova, Céline Marquet, Michael Rera, Burkhard Rost, Elodie Laine, bioRxiv 2022.12.13.520259; doi: https://doi.org/10.1101/2022.12.13.520259. This is that MSAs that can be created in colabfold using mmseqs2 are useful for variant impact prediction. Now that we have our gene database, we would like to run this workflow using our own database.; So we looked at the contents of the colabfold script and found that we need the expandable profile databases that are created by mmseqs2. However, when I looked for how to create this database, I could not find it.; I found the following command on the wiki, which converts already created expandable profile databases, right?; ```; wget http://wwwuser.gwdg.de/~compbiol/colabfold/uniref30_2103.tar.gz; tar xzvf uniref30_2103.tar.gz; mmseqs tsv2exprofiledb uniref30_2103 uniref30_2103_db; ```. Can you please tell me how to create it?; Thank you in advance. Keigo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/656:47,predict,prediction,47,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/656,3,['predict'],['prediction']
Safety,Here is my initial clustering update:; `mmseqs clusterupdate Uniprot_Unreviewed_Zmays /home/ec2-user/MMSeqs2/Uniprot_Unreviewed_Zmays_Tomato_Dmagna_kmer20_results/Uniprot_Unreviewed_Zmays_Tomato_Dmagna Uniprot_Unreviewed_Zmays_clu Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu ./tmp`. And the tsv generation:; `mmseqs createtsv ./Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu.tsv`. tsv error message:; ```; MMseqs Version: f3b88f27def72ac5392131b98e079930f3b087c7; first sequence as respresentative false; Target column 0; Add Full Header false. Query file is ./Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB; Target file is Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB; Data file is Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu; Start writing file to Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu.tsv; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_S_construct null not valid; Aborted; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404865556:1236,Abort,Aborted,1236,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404865556,1,['Abort'],['Aborted']
Safety,"Hi . thanks for reporting this issues. Could you please provide the output of MMseqs2 and the how you called it?. I tried to reproduce Unexpected Behavior 1 by using this workflow. ```; mmseqs createdb test.fasta test; mmseqs search test test res /tmp/res/ -a; mmseqs convertalis test test res res.tsv; ```. The output is . ```. 0000_A 0000_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0000_A 0002_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0000_A 0001_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0001_A 0001_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0001_A 0000_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0001_A 0002_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0002_A 0002_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0002_A 0000_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0002_A 0001_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; ```. Unexpected Behavior 3:; There is a sequence length limitation in MMseqs2. With 6-mer spaced it needs at least 13 residues to detect a hit, w/o spacing just 12.; I can run this example 3 without any error message.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275014229:918,detect,detect,918,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275014229,1,['detect'],['detect']
Safety,"Hi @martin-steinegger . Thanks for the notice. I got a different error; ```; Reading context library for pseudocounts from context_data.lib ...; Reading context library for pseudocounts from context_data.lib ...; Reading context library for pseudocounts from context_data.lib ...; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ...; Reading abstract state alphabet from cs219.lib ...; Reading abstract state alphabet from cs219.lib ...; Reading abstract state alphabet from cs219.lib ...; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 0 with PID 0 on node haldane exited on signal 11 (Segmentation fault).; --------------------------------------------------------------------------. ```. It failed in the last step. ```; mpirun -np 4 cstranslate -i subset.MSA_ca3m.ffdata -o subset.MSA_cs219 -A /home/linuxbrew/anaconda3/data/cs219.lib -D /home/linuxbrew/anaconda3/data/context_data.lib -x 0.4 -c 4 -I ca3m; ```. The complete steps I used are described in this script. ```; #!/usr/bin/env bash. ## define files and parameters here; ## sequence file name like ""NAME.fa"" use only the base name NAME and the script will add the ""*.fa"" grob; BASE=""subset""; HH_CONTEXT_DATA=""/home/linuxbrew/anaconda3/data/context_data.lib""; HH_LIB=""/home/linuxbrew/anaconda3/data/cs219.lib""; THREADS=4; SENSITIVITY=7.5; IDENTITY=0; COVERAGE=0.8; EVALUE=0.00001. CLU_MODE=1. FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FI",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081:749,abort,aborted,749,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081,1,['abort'],['aborted']
Safety,"Hi @milot-mirdita . I was needing more than one hit per query. Actually, I was trying to find domains/regions with a high score but since I have a lot of multidomain proteins I need all high score local alignments. So I remove redundancy at 30% of identity, searched all against all, I have removed self-matches and choose hits with very low e-value. I preferred to do this externally to MMSeqs. Now I'm clustering these regions. . Anyway, I did test those commands anyway. ```; mmseqs filterdb pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.top1 --extract-lines 1; mmseqs extractalignedregion id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN.top1 pbps.neighbors.rep30.ALN.SEQ --threads 40; mmseqs cluster pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ.CLU -c 0 -e 1e-10 --threads 40 --max-seqs 300 --kmer-per-seq 80 -s 7.5 -a; mmseqs createtsv pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ.CLU pbps.neighbors.rep30.ALN.SEQ.CLU.tsv; ```. Also, I did use coordinates of matches in target and extract with any other sequence manipulation tool. ```; mmseqs createdb pbps.neighbors.regions.fa pbps.neighbors.regions.DB; mmseqs cluster pbps.neighbors.regions.DB pbps.neighbors.regions.CLU /tmp/ --threads 40 -c 0.8 --min-seq-id 0.8; mmseqs createtsv pbps.neighbors.regions.DB pbps.neighbors.regions.CLU pbps.neighbors.regions.CLU.tsv --threads 40; mmseqs result2repseq pbps.neighbors.regions.DB pbps.neighbors.regions.CLU pbps.neighbors.regions.CLU.REP ; ln -s pbps.neighbors.regions.DB_h pbps.neighbors.regions.CLU.REP_h ; ln -s pbps.neighbors.regions.DB_h.index pbps.neighbors.regions.CLU.REP_h.index ; mmseqs cluster pbps.neighbors.regions.CLU.REP pbps.neighbors.regions.CLU.REP.CLU tmp -c 0 -e 1e-10 --threads 40 --max-seqs 300 --kmer-per-seq 80 -s 7.5 -a ; mmseqs createtsv pbps.neighbors.regions.CLU.REP pbps.neighbors.regions.CLU.REP.CLU pbps.neighbors.regions.CLU.REP.CLU.tsv --threads 40 ; mmseqs createseqf",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/210#issuecomment-499589040:227,redund,redundancy,227,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/210#issuecomment-499589040,1,['redund'],['redundancy']
Safety,"Hi @milot-mirdita, thanks! I updated the mmseqs to the latest version and set the --split-memory-limit parameter to 250G, this time I didn't get that error, but it threw me another error:. ```. Not enough memory to process at once need to split; [=================================================================tmp/2319642838547372155/clu_tmp/15550839581876067830/linclust.sh: line 26: 344 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: Search died; finished; slurmstepd: error: Detected 1 oom-kill event(s) in step 30119673.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ```; The command I'm using is like this:. `mmseqs easy-linclust ${sample}_R2.fastq.gz $OUT tmp -c 0.95 --split-memory-limit 250G`. Could you give me some help on that?. Thanks so much!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611:550,Detect,Detected,550,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611,1,['Detect'],['Detected']
Safety,"Hi Martin; ffindex_apply is awesome, I've been playing around and it is quite straight forward to plug it in our pipeline avoiding the generation of the files. Just for reference, a quick example on how to perform a MSA for each cluster with >= 10 members:; ```; #!/bin/bash. SEQS=$(perl -ne 'print $_' ""${1}""); if [ ""$(echo ""${SEQS}"" | grep -c '>')"" -ge 10 ]; then; echo ""Num seqs: $(echo ""${SEQS}"" | grep -c '>')""; REP=""$(echo ""${SEQS}"" | head -n 1 | cut -f 2 -d '|')""; ALN=cluster_""$(grep -n ""${REP}"" DB_clu_wide.tsv | cut -f1 -d ':')"".aln; famsa-1.2.1-osx <(echo ""${SEQS}"") ""${ALN}""; fi; ```; and we run it like:; ```; ffindex_apply DB_db_fa DB_db_fa.index -- bash aln.sh; ```. Many thanks!; Antonio",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/50#issuecomment-343730359:122,avoid,avoiding,122,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/50#issuecomment-343730359,1,['avoid'],['avoiding']
Safety,"Hi mmseq team,. I need some help in updating a previous mmseq based (near complete) clustered db (A) with additional sequences (B). My mmseq run for A, using easy-cluster, timed out at the stage of moving result files and deleting temporary files, a log and resulting files list is attached.; [mmseq.earthbiome.fna.2tb.log.gz](https://github.com/soedinglab/MMseqs2/files/5187248/mmseq.earthbiome.fna.2tb.log.gz); [resultfiles.txt](https://github.com/soedinglab/MMseqs2/files/5187249/resultfiles.txt). Now I have additional sequences as set B that I want to use to update set A to perform clustering and updating the final database. mmseq GitHub documentation says about updating a database as:. mmseqs createdb DB_trimmed.fasta DB_trimmed; mmseqs cluster DB_trimmed DB_trimmed_clu tmp. To update the clustering DB_trimmed_clu with the new version of your database DB_new:. mmseqs createdb DB.fasta DB_new; mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_new_updated DB_update_clu tmp. My worry is if If I cluster bigger dataset A again, it will take quite a few days, as in the last case the job was terminated on a 3 Tb memory machine after 7 days, without completing the last step of moving results and deleting temp files. In summary I need help in 1. saving or moving important result files and safely remove temporary files. and 2. a correct way of updating and clustering my dataset B with database A. Many Thanks,. IA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348:1308,safe,safely,1308,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348,1,['safe'],['safely']
Safety,"Hi there, was wondering if this feature is in process of development? If so, any idea on timeline?; From doing a comparison analysis between mmseqs and taxonomic binning tool with frameshift-aware alignment (DIAMOND+MEGAN), we saw significantly improved results with this frameshift feature. Ex. In a metagenomic sample, 9 out of 10 organisms were correctly identified to species level with frameshift-corrected alignment, whereas mmseqs could only identify 6 out of 10 organisms to species level. Another feature that MEGAN provides (that would be very useful in mmseqs) is that it exports frameshift-corrected contigs, which is advantageous in performance improvement of downstream tools (ie. AMR detection).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/417#issuecomment-805219866:699,detect,detection,699,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/417#issuecomment-805219866,1,['detect'],['detection']
Safety,"Hi there,. I runned mmseqs cluster on my dataset of 5,061,557 protein sequences using these 3 command lines (MMseqs2 Version: 9f493f538d28b1412a2d124614e9d6ee27a55f45). ```; mmseqs createdb 3600genomes.4pub.cleaned.faa 3600genomes.4pub.cleaned.faa.mmseqsDB >mmseqs_createdb.log. mmseqs cluster 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB_clu tmp --threads 48 -s 7.5 -c 0.5 --cov-mode 0 --max-seqs 5000 -e 0.001 --cluster-mode 0 >mmseqs_cluster.log. mmseqs createtsv 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB_clu 3600genomes.4pub.cleaned.faa.mmseqsDB_clu.tsv >mmseqs_createtsv.log; ```. When I had a look of the final tsv file (3600genomes.4pub.cleaned.faa.mmseqsDB_clu.tsv), I got two more sequences (5,061,559 instead of 5,061,557). Looking in details 4 new sequences was added:; RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1_0; RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1_1; GWA2_OP3_45_18_gwa2_scaffold_308_1_1; GWA2_OP3_45_18_gwa2_scaffold_308_1_0. whereas 2 sequences were removed:; 'RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1'; 'GWA2_OP3_45_18_gwa2_scaffold_308_1'. looks like mmseqs added a _0 or _1 suffix to the names of the two sequences missing. I'm pretty sure that there are no redundant sequence names in my fasta file dataset (I checked it out). Is there an explanation for these suffix ? . many thanks . Raph",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/97:1435,redund,redundant,1435,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/97,1,['redund'],['redundant']
Safety,"Hi!. I copied the tutorial from the wiki into a Jupyter notebook, and configured binder to be able to run it. Here is an example: [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/luizirber/MMseqs2/tutorial_in_binder?filepath=tutorial%2Ftutorial.ipynb). ## Notes. - I'm building MMseqs2 from master, but you can also pick a specific tag to put in the binder link. ## TODO. - [ ] Link in README.md? (or at least back in the wiki?); - [ ] Tutorial from wiki failed for me because `--report-mode` is missing in the bioconda package?; - [ ] Preload data during the `postBuild` step in binder? Not sure about this one, since it changes the tutorial a bit, but avoids redownloading everything during runtime.; * Need to at least preload the taxdump, I think binder is blocking the download (is it an FTP link? [binder](https://github.com/binder-examples/getting-data/blob/4c9deceab9e4fbe095e704a3aa11671321e0584f/README.md#large-public-files) blocks FTP downloads...); - [ ] Clean up outputs (don't want to spoil what is the mystery pathogen!); - [ ] Fix path to logo in the intro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/250:681,avoid,avoids,681,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/250,1,['avoid'],['avoids']
Safety,"Hi, . Here are the following settings I used in order to get a .m8 file. . ```; mmseqs2=/beegfs/home/TOOLS/mmseqs2/bin/mmseqs; $mmseqs2 createdb\; /path/species.fa\; /path/species_mmseqs2_db; $mmseqs2 search\; /path/species_mmseqs2_db\; /path1/path2/refseq/viral_queries_seq/mmseq_db\; /path1/path2/species/result_mmseqs2\; /path1/path2/species/tpm -a -s 7.5 -e 0.1; $mmseqs2 convertalis\; /path/species_mmseqs2_db\; /path1/path2/refseq/viral_queries_seq/mmseq_db\; /path1/path2/species/result_mmseqs2\; /path1/path2/species/result_mmseqs2_db.m8; ```. and here is the head file.m8 I get: . ```; scaffold_2855_1	YP_009173613.1	0.742	377	96	1	55020	53895	70	446	1.803E-180	566; scaffold_2855_1	YP_004091438.1	0.729	377	101	1	55020	53895	66	442	2.282E-173	546; scaffold_2855_1	YP_007676312.1	0.721	377	104	1	55020	53895	65	441	4.321E-170	536; scaffold_2855_0	YP_093986897.1	0.683	376	119	0	55020	53895	67	442	3.184E-167	528; scaffold_2855_2	YP_009894551.1	0.672	376	123	0	55020	53895	67	442	3.210E-164	519; ```. Here is my question.; **First**, do you know how could I avoid to add the `index _number` after the query's name? such as `scaffold_2855_1 or scaffold_2855_0 or scaffold_2855_2` etc. **Second question:**; I did not really understand the MPI parameters in order to be faster. I have actually a SLURM server where I submit all my jobs (so actually it is one job with 20 threads per run), if I well understood I can run the program from different machines by using this parameter? How could I do with the settings I used above? . Thank you for you help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/163:1066,avoid,avoid,1066,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/163,1,['avoid'],['avoid']
Safety,"Hi, . I have a ~150 samples of protein fasta files, which I'd like to generate a non-redundant set of proteins from. I have tried concatenating the files to run the following:; ```; mmseqs easy-linclust --cov-mode 0 -c 0.8 --min-seq-id 0.3 all_nomis_proteins.faa mmseqs2_output tmp; ```. However, the concatenated file has 400 Mio genes, making it computationally infeasible. What may be the best approach here?. 1. cluster smaller sets of samples and then re-cluster? ; 2. for point-1 above, can one provide multiple inputs or should concatenate the smaller sets?; 3. for `re-clustering` after an initial round, is it possible to output the `non-redundant` fasta file?. Thank you for your input!; -Susheel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/608:85,redund,redundant,85,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608,2,['redund'],['redundant']
Safety,"Hi, I am trying to run `alignall` on a clusterDB and it fails due to lacking `diagonal information` in some queries. . Thank you for this awesome piece of software!. ## Expected Behavior; Alignment of all cluster members when clustering a nucleotide fasta file. ## Current Behavior. `mmseqs alignall` dies with an error. ## Steps to Reproduce (for bugs). `tmp.fa` contains 425 nucleotide sequences between 100 kb to ~5 kb. ```; mmseqs createdb tmp.fa db ; mmseqs cluster db clu /tmp/ --max-seqs 1000 --threads 40 --min-seq-id 0.8 -e 0.000010 -c 0.8; mmseqs alignall db clu alignDb -a ; mmseqs createtsv db db clu clu.tsv; ```. ## MMseqs Output (for bugs); `mmseqs alignall db clu alignDb -a ` returns. ```; Query sequence 400 has a result with no diagonal information. Please check your database.; ```. ## Context; I am trying to cluster TE models predicted by RepeatModeler2, so there is likely quite a bit repetitiveness within and across the sequences. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; `MMseqs2 Version: 7e2840992948ee89dcc336522dc98a74fe0adf00`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled as a HPC cluster module. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; I requested a node with 40 CPUs and 160 GB ram for this job. * Operating system and version:; `uname -a` gives:; ```; Linux g-02-c0082 3.10.0-1062.4.1.el7.x86_64 #1 SMP Fri Oct 18 17:15:30 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/654:848,predict,predicted,848,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/654,1,['predict'],['predicted']
Safety,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/212:1612,Abort,Aborted,1612,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212,1,['Abort'],['Aborted']
Safety,"Hi, just a direct question that when the ORF fasta files (predicted by prodigal) is the input file with easy-taxonomy (MMseqs Version: 	14.7e284), whether the fasta sequence will be again used to predict the ORF first or without ORF prediction and directly for a taxonomy assigment?. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/722:58,predict,predicted,58,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/722,3,['predict'],"['predict', 'predicted', 'prediction']"
Safety,"Hi, sorry for bringing up an old thread, but I came across this when looking for how to remove identical sequences, and tried following the steps mentioned above by @martin-steinegger, and am surprised with the results tbh... Not sure if this is an issue, but please could you be so kind as to confirm that the above/below options still do as intended in this thread? (If you'd prefer I open a new issue and link back to this one, please let me know 🙂) . Essentially I've got three proteomes from the same species, and I'd like to remove identical redundant proteins and fragments, keeping the longest protein only, discarding any fragments that are a subsequence of anything else. This is what I understand is effectively the method followed to create the UniRef100 database, but I'd like to do it just for these three proteomes... **Protein counts for source files**; ```; $ for f in *.fasta; do echo -n ""$f "" ; grep '^>' $f | wc -l ; done; proteome-1.fasta 23885; proteome-2.fasta 23758; proteome-3.fasta 28118; proteomes-appended.fasta 75761; ```. **Create database**; `$ mmseqs createdb proteomes-appended.fasta db`. **Remove redundant proteins** (using options mentioned above in https://github.com/soedinglab/MMseqs2/issues/104#issuecomment-411727699); `$ mmseqs cluster db db_clu tmp --min-seq-id 1.0 -c 0.9 --cov-mode 1`. Do these options still perform a bidirectional search, removing only redundant proteins with 100% identity? Any fragments of longer proteins should be removed. However `-c 0.9` doesn't seem correct.... **Export consensus sequences to fasta file**; ```; $ mmseqs result2repseq db db_clu db_clu_rep; $ mmseqs result2flat db db db_clu_rep db_clu_rep.fasta --use-fasta-header; ```. **How many sequences?**; ```; $ grep '^>' db_clu_rep.fasta | wc -l; 58339; ```. So this has removed 17422 sequences, but tbh I was expecting to have an end result closer to ~30k proteins. Please can you confirm if I have done as I intended?. Best,; Alex",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/104#issuecomment-1105387969:548,redund,redundant,548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/104#issuecomment-1105387969,3,['redund'],['redundant']
Safety,"Hi,. I have written a tool called pharokka (https://github.com/gbouras13/pharokka) that annotates bacteriophage genomes. Pharokka uses mmseqs2 to match predicted CDS to the PHROGs (https://phrogs.lmge.uca.fr), CARD and VFDB databases using mmseqs2 which follows the method at https://phrogs.lmge.uca.fr/READMORE.php. Mmseqs2 is amazingly fast especially for large input metaviromes, so it's a brilliant choice for this clustering - thanks for developing it!. I am coming across a problem with the new version released 10 days ago. With v 13.4511, the 3 mmseqs2 searches take approximately 5-10 minutes in total depending on input, architecture and threads used. However, since mmseqs2 v14-7e284 has been released, users of pharokka have reported that the mmseqs2 step hangs indefinitely (at least 20+ hours) when pharokka with mmseqs2 v14-7e284 is installed with bioconda. I have replicated the issue on my machines also. . The relevant lines in pharokka are 358-369:. https://github.com/gbouras13/pharokka/blob/3b8f7ae207b367366765f482c9dce1dd2cccee80/bin/processes.py#L358 . # create target db; ""mmseqs"", ""createdb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/625:152,predict,predicted,152,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625,1,['predict'],['predicted']
Safety,"Hi,. I see that in the Cluster module of MMseqs2, there is a function that converts sequence identity to a corresponding sensitivity value:; `. float setAutomaticThreshold(float seqId) {; float sens;; if (seqId <= 0.3) {; sens = 6;; } else if (seqId > 0.8) {; sens = 1.0;; } else {; sens = 1.0 + (1.0 * (0.7 - seqId) * 10);; }; return sens; }. `. So if you call it with seqId = 0.4, it would return `-s` as 4. But there are some caveats to this:; 1. This function is used for clustering, where the meaning of a slightly wrong `-s` value is slightly worse clustering, but not loss of information (as all the input will be clustered, no matter what `-s` value is selected). This is not the case here and a too low `-s` might cause losing hits.; 2. The function is not based on thorough benchmarking, it is more a ""rule of thumb"". Therefore, we recommend you:; 1. Easy: select a slightly higher `-s` than the seqId you are interested in, to be on the safe side; 2. Involved: keep an eye on the results and see if big things get lost.; 3. More involved: benchmark for your purposes. For example, create a dataset of homologous pairs at 40% id of taxa relevant for your study and see how many can be recovered using various `-s`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849056333:948,safe,safe,948,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849056333,2,"['recover', 'safe']","['recovered', 'safe']"
Safety,"Hi,. I'm looking to use the UniRef90 sequences as representatives of gene clusters and then extend these clusters with additional sequences. Is it possible to take the set of ~153 million UniRef90 sequences and indicate that each one should be used as a cluster representative (i.e. if there are X input sequences, I want exactly X clusters)? Ideally, I'd avoid doing any actual clustering here since I've pre-selected the representatives. Thanks for any suggestions or insights you can provide. Cheers,; Donovan",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/671:356,avoid,avoid,356,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/671,1,['avoid'],['avoid']
Safety,"Hi,. I'm trying to convert the MSA of a cluster DB to HH-blits format. . So, I follow [this tutorial](https://github.com/soedinglab/mmseqs2/wiki#how-to-create-a-hhblits-database). > mmseqs result2msa pbps.DB pbps.DB pbps.CLU pbps.CLU.msa --compress ; > ln -s pbps.DB_h pbps_MSA_header.ffdata ; > ln -s pbps.DB_h.index pbps_MSA_header.ffdindex ; > ln -s pbps.DB_h.index pbps_MSA_header.ffindex ; > ln -s pbps.DB pbps_MSA.ffdata ; > ln -s pbps.DB.index pbps_MSA.ffindex . All commands above work nicely, the `pbps.CLU` database are also nice capable to generate the TSV file with all clusters. But when I run:; > mpirun -np 2 /usr/lib/hh/bin/cstranslate -i pbps.CLU.msa_ca3m.ffdata -o pbps.CLU.msa_cs219 -A /usr/lib/hh/data/cs219.lib -D /usr/lib/hh/data/context_data.lib -x 0.4 -c 4 -I ca3m. I got this message:; ```; Reading context library for pseudocounts from context_data.lib ...; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[19728,1],1]; Exit code: 1; --------------------------------------------------------------------------; ```. How can I debug this error?? . Also, when I used the `mmseqs result2msa` with `--compress` option the output are two files with `_ca3m.ffdata` and `_ca3m.ffindex`. Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174:1260,abort,aborted,1260,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174,2,"['abort', 'detect']","['aborted', 'detected']"
Safety,"Hi,. I'm using the mmseqs hosted in linuxbrew version 3-be8f6. I'm using a routine to hierarchical cluster which I remove gradually the redundancy. ; I've got some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/102:136,redund,redundancy,136,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102,1,['redund'],['redundancy']
Safety,"Hi,; I am new to MMSeqs2. It is really a good tool. However, I have 2 queries, may be basic too. But I want your opinions.; In an attempt to build a set of 30-90% sequence similarity, I removed the redundant hits myself firstly and then deployed a minimum sequence identity threshold of 30% and coverage 1 (All 92 input sequences are close homologues and so I want to avoid the partial match to build the good set), it resulted in 52 hits. So, now as you are guiding, the multiple resultant cluster sets have the sequence identity lesser than 30%, but the 52 hits share a sequence identity > 30%. Is this correct that this way my reduced set of 52 hits contains the sequences that are 30-90% identical?. Further, why is it that for another sequence-group, the resultant set spans the same 45 sequences for both 30% and 90% cutoffs. So, does it mean that the length of atleast 1 representative sequence is bigger and it spans multiple sequences in either of these ranges to result in the same set? How should this result be defined?; Thanks for your clarifications.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/173:198,redund,redundant,198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/173,2,"['avoid', 'redund']","['avoid', 'redundant']"
Safety,"Hi,; I think the following error is related to this issue as well. When searching against Uniref90 on 31e1fddc9b9368570bb39be3051232d4e64f7ae9 I am getting the following error:; ```; *** Error in `*** Error in `mmseqs*** ; Error in `mmseqs': free(): invalid pointer: 0x0000000000ccb6d8 ***; *** Error in `tmp8/4822298374491924264/blastp.sh: line 86: 6866 Aborted ; $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; ```; Many thanks; Antonio",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357820039:355,Abort,Aborted,355,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357820039,1,['Abort'],['Aborted']
Safety,"Hi,; is it please possible to set a limit on the amount of memory MMseqs2 uses for its computations? Or to set the number of computation chunks?; I know from the MMseqs2 wiki it automatically detects how much memory it can use and eventually it splits database into chunks etc. But this is not practical for grid computing environment where you have to request a specific amount of memory a priori and your job is then executed on a machine which actually has much more memory but it is shared with other jobs. It can then happen that MMseqs2 will consume more memory than allowed just because its available from the system point of view. The queue management software will then kill the job as it exceeded assigned resources.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58:192,detect,detects,192,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58,1,['detect'],['detects']
Safety,"Hi. I am having some strange behavior when using the easy-taxonomy with a query with only one contig. Here you can find the [contig](https://github.com/soedinglab/MMseqs2/files/6821433/477fb4bafa.assm.refined.fasta.gz) and the [log](https://github.com/soedinglab/MMseqs2/files/6821435/477fb4bafa.contig-taxonomy.GTDB.log). I don't think it is related to https://github.com/soedinglab/MMseqs2/issues/31 or https://github.com/soedinglab/MMseqs2/issues/447 . The DB seems fine. I processed hundreds of samples using the same MMseqs2 command, and I only had problems in files with one contig. The samples are complicated to assemble, and sometimes I only can recover one contig. ## Current Behavior. When running ; ```; mmseqs easy-taxonomy /vol/cloud/geogenetics/KapK/results/assembly-refined/477fb4bafa.assm.refined.fasta /vol/cloud/geogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/473:655,recover,recover,655,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473,1,['recover'],['recover']
Safety,"Hi; this is not an issue but a potential enhancement we discussed with @martin-steinegger.; We have a seed clustering database that is continuously updated with new sequences. The size of the DB is growing quite fast, and eventually, we will have problems storing and distributing it. As we have many redundant sequences in each cluster. We thought that having a module that takes a DB and then filters it based on a criterion similar to `--diff` from `result2msa` or `result2profile` would be very useful to keep only informative sequences in the clusters. Thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/316:301,redund,redundant,301,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316,1,['redund'],['redundant']
Safety,"How does the truncated length make it into the index file though?; In https://github.com/soedinglab/MMseqs2/blob/master/src/prefiltering/PrefilteringIndexReader.cpp#L247, things look 64-bit safe.; Calls https://github.com/soedinglab/MMseqs2/blob/master/src/commons/DBWriter.cpp#L403, which eventually calls https://github.com/soedinglab/MMseqs2/blob/master/src/commons/DBWriter.cpp#L379 where the length is computed from offsets.; And eventually formatted to text as a 64-bit integer https://github.com/soedinglab/MMseqs2/blob/master/src/commons/DBWriter.cpp#L415.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/868#issuecomment-2260217457:190,safe,safe,190,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/868#issuecomment-2260217457,1,['safe'],['safe']
Safety,How to avoid getting multiple split databases,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/644:7,avoid,avoid,7,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/644,1,['avoid'],['avoid']
Safety,"I am having a very similar error:. **Current behaviour**; After submitting a `mmseqs taxonomy` run, this sub command is being executed (and dies):. ```; aggregatetaxweights mmseqs_database/database tmp1/14824571404584235274/orfs_h_swapped tmp1/14824571404584235274/orfs_tax tmp1/14824571404584235274/orfs_tax_aln SWH_IN_taxonomy/SWH_IN --lca-ranks kingdom,phylum,class,order,family,genus,species --tax-lineage 1 --compressed 1 --threads 12 -v 3; ```. **MMseqs output**. ```; Missing key 0 in tax result; tmp1/14824571404584235274/taxpercontig.sh: line 85: 206297 Aborted (core dumped) ""$MMSEQS"" aggregatetaxweights ""${TAX_SEQ_DB}"" ""${TMP_PATH}/orfs_h_swapped"" ""${TMP_PATH}/orfs_tax"" ""${TMP_PATH}/orfs_tax_aln"" ""${RESULTS}"" ${AGGREGATETAX_PAR}; Error: aggregatetaxweights died; ```. **Environment**. - singularity container of mmseqs2 version 15.6f452 (build pl5321h6a68c12_0); - HPC (Linux + slurm); - 950 GB RAM. **Comment**; I know that for mmseqs taxonomy classification with GTDB at least 900 GB RAM are needed, so I am not surprised that your process died @AstrobioMike. And since I seem to have a very similar error (if not the same) maybe even my 950 GB RAM are not enough, I wonder...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/806#issuecomment-2377150051:563,Abort,Aborted,563,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806#issuecomment-2377150051,1,['Abort'],['Aborted']
Safety,"I am having the same issue when trying to cluster a catalog of bacterial proteins, namely [UHGP](https://www.ebi.ac.uk/metagenomics/genome-catalogues/human-gut-v2-0). . I have noticed that when I align assembled bacterial proteins from my dataset to UHGP reresentative sequences of clusters at 90% amino acid identity, some of them align to over 1200 representative sequences with identity over 90% and almost 100% coverage. The UHGP clusters were generated with `linclust`, so I attempted to cluster de-duplicated sequences from this catalogue with the `easy-cluster` workflow, hoping to improve the results. However, while there is an improvement, the situation is still far from ideal. ## Input data; 95,303,635 non-redundant proteins from UHGP v2.0 ([FTP link](http://ftp.ebi.ac.uk/pub/databases/metagenomics/mgnify_genomes/human-gut/v2.0/protein_catalogue/uhgp-100.tar.gz)). ## Expected behavior; Each protein from my assemblies will align to zero or one representative sequence with identity > 90% and coverage > 90%. Due to heuristics, I would not be surprised if there were a couple of such proteins, but with one standing out in terms of identity %. ## Current behavior. Some of the proteins align to many (more than 100) representative sequences with pident over 90%. ### Default easy-cluster. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 ```. A single protein aligns up to 147 representative sequences with average pident of 97%. ### Cluster reassign. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign```. A single protein aligns up to 164 representative sequences with average pident of 97%. ### Single-step clustering. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering```. A single protein aligns up to ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1322374871:719,redund,redundant,719,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1322374871,1,['redund'],['redundant']
Safety,"I assume the message comes from alignments that find --max-seqs similiar sequences. So the filter would remove all sequences but then add back the query sequence. I would recommend to work on a redundancy reduced database. E.g. Uniclust90 (uniclust.mmseqs.com). I forgot, you need to add the flat --add-self-matches to your search. . mmseqs search pdb_05_profile pdb_05_rep pdb_05_pp_res tmp --threads 110 -e 0.05 --add-self-matches; mmseqs clust pdb_05_profile pdb_05_pp_res pdb_05_pp_clu --threads 110 --cluster-mode 1 --similarity-type 1. Do you use MMseqs2 on a computer with 110 core?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369616060:194,redund,redundancy,194,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369616060,1,['redund'],['redundancy']
Safety,"I don't know your exact use-case and if this is actually important for you, I am just warning you that how you are currently using MMseqs2, might be a bit problematic with this specific target database. The results you are already getting with your current usage might already by completely fine for your current use-case. I will just explain what you could do if you might want more ""complete"" results. Furthermore, this is unrelated to the stability problem (that one should now be solved). The very redundant target database you are using is a bit of a weak point in MMseqs2. ; The MMseqs2 prefiltering module reports all the best double-consecutive-kmer matches either down to the `--min-ungapped-score` threshold or as many as `--max-seqs` allows. The `--min-ungapped-score` criterion removes many hits that could never reach a good E-value anyway. . The `--max-seqs` parameters prevents a explosion of disk space while accepting the risk of losing some redundant hits. This is not that much of a problem since we normally search against the representatives of a clustered database, which are sufficiently dissimilar to not enter this case. Now you have a target database with many very similar sequence and will run into this case. The effect is that a good (maybe even the best) hit in the target database might not be found, since its outside the limit given by `--max-seqs`. We have a different search mode that accepts some inefficiency, while dealing with correctly with very redundant database and you can access this mode by passing the `--slice-search` parameter to either `easy-search` or `search`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917:502,redund,redundant,502,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917,4,"['redund', 'risk']","['redundant', 'risk']"
Safety,"I encountered an error while executing the command cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ... My cmake version is 3.28.0, and gcc version 7.3. The error message I received is as follows:. -- The CXX compiler identification is GNU 7.3.0 ; -- The C compiler identification is GNU 7.3.0 ; -- Detecting CXX compiler ABI info ; -- Detecting CXX compiler ABI info - failed ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ - broken ; CMake Error at /usr/local/share/cmake-3.28/Modules/CMakeTestCXXCompiler.cmake:60 (message): ; The C++ compiler; ""/home/anaconda3/envs/AlphaFlow/bin/c++"" ; is not able to compile a simple test program. ; It fails with the following output:; Change Dir: '/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz'; Run Build Command(s): /usr/local/bin/cmake -E env VERBOSE=1 /usr/bin/gmake -f Makefile cmTC_8b7b3/fast ; /usr/bin/gmake -f CMakeFiles/cmTC_8b7b3.dir/build.make CMakeFiles/cmTC_8b7b3.dir/build; gmake[1]: Entering directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; Building CXX object CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o ; /home/anaconda3/envs/AlphaFlow/bin/c++ -o CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -c /home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz/testCXXCompiler.cxx ; Linking CXX executable cmTC_8b7b3 ; /usr/local/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8b7b3.dir/link.txt --verbose=1 ; /home/anaconda3/envs/AlphaFlow/bin/c++ -rdynamic CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -o cmTC_8b7b3 ; collect2: fatal error: cannot find 'ld' compilation terminated. ; gmake[1]: *** [cmTC_8b7b3] Error 1 ; gmake[1]: Leaving directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; gmake: *** [cmTC_8b7b3/fast] Error 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/816:308,Detect,Detecting,308,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/816,2,['Detect'],['Detecting']
Safety,"I figure out that I have a lot of file as `subsetMSA_ca3m.ffdata.{NUMBER}`, but only `subsetMSA_ca3m.ffdata.0` has data. ; So I remove all other files and rename `subsetMSA_ca3m.ffdata.0` to `subsetMSA_ca3m.ffdata`. I got other error.; command: ; `cstranslate -i subsetMSA_ca3m.ffdata -o subsetMSA_cs219 -A /home/linuxbrew/anaconda3/data/cs219.lib -D /home/linuxbrew/anaconda3/data/context_data.lib -x 0.3 -c 4 -I ca3m`; error:; ```; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ...; malloc(): memory corruption; Aborted (core dumped); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484672522:583,Abort,Aborted,583,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484672522,1,['Abort'],['Aborted']
Safety,"I had carefully read this similar issue below. I think my problem may be different and with more details.; https://github.com/soedinglab/MMseqs2/issues/658; ## Expected Behavior; mmseqs local runs with similar response time as that in mmseqs colabfold api.; Is there a solution for ColabFold multimer prediction msa search with a good speed(not fastest, but faster) with 256GB memeory?; ## Current Behavior; for 1 sequence pair(164 mers and 6 mers) input, local mmseqs msa server use more than 4 hours to process, even much slower than Alphafold orig MSA local running at the same local hardware environment.; **I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.**; **Is this very low speed caused by I didn't keep all database into memory?**; >HAGPIA; ## Steps to Reproduce (for bugs); I follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing tru",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690:301,predict,prediction,301,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690,1,['predict'],['prediction']
Safety,I had this same issue when trying to use mmseqs2. Are you sure it's safe to simply rename these files?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/68#issuecomment-435239641:68,safe,safe,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/68#issuecomment-435239641,2,['safe'],['safe']
Safety,"I have installed the latest version available via ; `conda install -c conda-forge -c bioconda mmseqs2`. I tried to download the PDB database via ; `mmseqs databases PDB pdb_db tmp`. This leads to the process just hanging. One of the error messages printed shows that the URL seems to be inactive, as described in this [issue](https://github.com/soedinglab/MMseqs2/issues/772#issue-1977470516) (#772). . 03/11 13:57:28 [ERROR] CUID#7 - Download aborted. URI=https://ftp.wwpdb.org/pub/pdb/derived_data/pdb_seqres.txt.gz; Exception: [AbstractCommand.cc:340] errorCode=2 Timeout. Is there a way to specify the URL when calling `mmseqs databases`? Or could you suggest a fix for the code when installed via conda?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/820:444,abort,aborted,444,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/820,2,"['Timeout', 'abort']","['Timeout', 'aborted']"
Safety,"I have problems constructing a redundant database that reproduces this issue. Something is odd with this part of the output:; ```; 320.495474 k-mers per position; 1748306 DB matches per sequence; 674 overflows; ```. Can you share some approximate composition/construction of the database so I can try to make something from public data?. I improve the reliability of your own search, I would recommend to cluster your database at a high seq.id./coverage to collapse some of the redundancy. This will speed up the search and probably also not go into the possibly problematic code branch I suspect is causing the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592526278:31,redund,redundant,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592526278,2,['redund'],"['redundancy', 'redundant']"
Safety,I manually removed the redundancies before entering into mmseqs and it worked again. I suspect there is something off about the redundancy filter in mmseqs.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384874532:23,redund,redundancies,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384874532,2,['redund'],"['redundancies', 'redundancy']"
Safety,I might have a solution to accept sequences until 2^16. This should avoid this annoying few cases (e.g. Titin). I will implement this in the next days.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/89#issuecomment-393070760:68,avoid,avoid,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/89#issuecomment-393070760,1,['avoid'],['avoid']
Safety,"I searched with your example query.fasta (101mA, 10mhA) against the target.fasta (A0A021WW32, A0A021WZA4). MMseqs2 can not detect any alignments. I aligned these sequences with smith waterman and the sequence identity is <= 20%. Is this intended? Maybe you want to use profiles? . Please don't use the parameter --include-id if the query database and target database do not contain the same identifier. The --include-id is just important for clustering. The option --max-seq-id 1.0 is just needed if you try to compute profiles and you don't use profiles in this example. . Could you provide the whole dataset please? So we can test this behavior? I tried to reproduce it with some fasta files on my computer but I was not able to. . Thanks a lot for your feedback.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-247860090:123,detect,detect,123,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-247860090,2,['detect'],['detect']
Safety,"I think I encountered same question like you, and my HPC node similar with yours, it kept running almost 17h and no progress, I'm wondering that when you set the param `--db-load-mode 3` then rerun it, how long could you detect the output?. Any anwser would be helpful! Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-1814045055:221,detect,detect,221,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-1814045055,1,['detect'],['detect']
Safety,I think the issue here is that the detection of NA/prot goes wrong at indexing time. So what is also needed is the equivalent to `--dbtype 2` but for indexing.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611#issuecomment-1276522464:35,detect,detection,35,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611#issuecomment-1276522464,1,['detect'],['detection']
Safety,"I think this sequence broke the nucl-prot detection heuristic:; ```; >5DO4_3; GGGAAXAAAGXUGAAGUXXUUAXXX; ```. MMseqs2 assumes that the unknown residue for nucleotides is `N` and not `X`. The heuristic for differing between the two is as follows:. * check the first 10 sequences if they are all nucleotide sequences; * check every 100th sequence; * check that all of these are at least 90% composed of `ATGCUN`. if all of these are nucleotide sequences, declare the database to be a nucleotide database. You can disable the heuristic and fix the database to be a nucleotide db by passing `--dbtype 2` to `easy-search` (in this case the `search` entry in the `.params` file.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611#issuecomment-1275782810:42,detect,detection,42,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611#issuecomment-1275782810,1,['detect'],['detection']
Safety,"I tried to reconstruct the command that probably crashed. Could you run it again inside a debugger to recover the backtrace? I have no clue what could have gone wrong so early in the command invocation (the running module had no output at all before it crashed).; 1) Run the following command; ```; gdb --args mmseqs rescorediagonal /export/tmp/MERC/4233864688410091672/input_step_redundancy /export/tmp/MERC/4233864688410091672/input_step_redundancy /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter2 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3; ```; 2) wait for a command prompt; 3) press `r` for run and then enter; 4) wait for the crash; 5) press `bt` for backtrace and then enter; 6) copy the output and paste it here. Thanks a lot for reporting the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649841049:102,recover,recover,102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649841049,1,['recover'],['recover']
Safety,"I used a sequenceDB file, not an alignmentDB file, because I expected it to work like ""cluster"". **Edit:** Actually... I'm not sure if I understand anything anymore! :D Clusthash **does** seem to expect a sequenceDB. I still struggle a bit with understanding the output of the cluster modules. What I actually want to do, is to use ""clusthash"" to reduce the redundancy of the PDB. The hope is, that this will reduce the number of chains enough, so I can create a somewhat useful visualization of the distance graph.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/6#issuecomment-263835793:358,redund,redundancy,358,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/6#issuecomment-263835793,1,['redund'],['redundancy']
Safety,"I used easy-linclust (with parameters: -c 0.9; --min-seq-id 0.9; --cov-mode 1; --cluster-mode 2) for clustering and obtained representative sequences. Then I divided it into single sequences (singleton clusters) and representative sequences of non-singleton clusters (those containing ≥ 2 sequences). Subsequently, I used DIAMOND to create a database of representative sequences of non-singleton clusters and then compared the single sequence with the database using diamond blastp (--id 90, --subject-cover 90, or had tried --query-cover 90). The results showed that a large number of sequences were shared over 90% identity (some sequences shared Identity=100%). In the MMseq Output provided below, I have removed the information on Converting sequences, which is over 400 million and too long to read.; ## Expected Behavior; Non-redundant representative sequences should be obtained; ## Current Behavior; a large number of representative sequences are redundant; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; > mmseqs easy-linclust /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort.faa /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort All_cohort_tmp/ --min-seq-id 0.9 --cov-mode 1 -c 0.9 --cluster-mode 2 --max-seq-len 10000 --threads 56; ## MMseqs Output (for bugs); Create directory All_cohort_tmp/; easy-linclust /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort.faa /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort All_cohort_tmp/ --min-seq-id 0.9 --cov-mode 1 -c 0.9 --cluster-mode 2 --max-seq-len 10000 --threads 56 . MMseqs Version: 	13-45111+ds-2; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Threads 	56; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:832,redund,redundant,832,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,2,['redund'],['redundant']
Safety,"I used the following command: . ```; zcat source_taxonomy.tsv.gz | cut -f1,5,6,7,8,9,10 | taxonkit create-taxdump -A 1 -O taxdump/; ```. My file looks like this: . ```; (base) zcat source_taxonomy.tsv.gz | cut -f1,5,6,7,8,9,10 | head; id_source	class	order	family	genus	species	strain; Aalte1	Dothideomycetes	Pleosporales	Pleosporaceae	Alternaria	Alternaria alternata; Aaoar1	Dothideomycetes	Pleosporales		Aaosphaeria	Aaosphaeria arxii; Abobi1	Agaricomycetes	Polyporales	Podoscyphaceae	Abortiporus	Abortiporus biennis; Abobie1	Agaricomycetes	Polyporales	Podoscyphaceae	Abortiporus	Abortiporus biennis; Abscae1	Mucoromycetes	Mucorales	Cunninghamellaceae	Absidia	Absidia caerulea; Absrep1	Mucoromycetes	Mucorales	Cunninghamellaceae	Absidia	Absidia repens; Acain1	Exobasidiomycetes	Exobasidiales	Cryptobasidiaceae	Acaromyces	Acaromyces ingoldii; acanthamoeba_castellanii_str_neff_gca_000313135		Longamoebia	Acanthamoebidae	Acanthamoeba	Acanthamoeba castellanii	Acanthamoeba castellanii str. Neff; Acastr1	Lecanoromycetes	Acarosporales	Acarosporaceae	Acarospora	Acarospora strigata; ```. However, further down in the file there are certain taxonomic fields that are missing. . Once I created my taxdump files. I used the following to convert my MMSEQS sequence database to a taxonomy database: . ```; mmseqs createtaxdb MicroEuk100.eukaryota_odb10 tmp/ --ncbi-tax-dump taxdump/ --tax-mapping-file taxdump/taxid.map; mmseqs createindex MicroEuk100.eukaryota_odb10 tmp/; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872504249:486,Abort,Abortiporus,486,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872504249,4,['Abort'],['Abortiporus']
Safety,"I want to do multiple things.; First I want to reduce the redundancy of the DB by filtering out exact duplicates. ""Hashclust"" seems to detect exact duplicates after reducing the alphabet, which might be even better for my use case.; Later, I want to compare different clustering methods, including the ones provided by MMseqs. If I understand the module correctly, ""hashclust"" creates an alignmentDB that includes all exact matches between sequences that have had their alphabet reduced. This alignmentDB can then be used by ""clust"" to cluster the sequences. If I use sequence identity in ""clust"", which can only be 1 or 0 (not listed) when I use ""hashclust"" the resulting clusters should contain only said reduced-alphabet-exact-matches. Is that correct?. **Edit:** It seems that after using ""mmseqs createseqfiledb DB clu clu_seq"" every header in clu_seq containing a cluster representing sequence ID starts with a null byte. I used that to create a fasta file that only contains non-redundant (with regard to ""clusthash"") sequences.; I hope that what I got is what I think I got.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/6#issuecomment-263872227:58,redund,redundancy,58,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/6#issuecomment-263872227,3,"['detect', 'redund']","['detect', 'redundancy', 'redundant']"
Safety,"I wanted to run the MSA calculation of a set of proteins to do structure prediction. I used the script that calls the mmseqs2 API that colabfold uses for the MSA calculation.; Except that now, I wanted to use mmseqs2 directly to be able to run my calculation in a cluster.; To do this, I used the script colabfold_search.sh without a precomputed index(https://gist.github.com/milot-mirdita/67509c248746c4c774128fc84ab91b6f), with the two databases uniref30_2103 and colabfold_envdb_202108. I set USE_ENV to 1, USE_TEMPLATE to 0 and the FILTER to 1.; The problem is that the resulting MSA is very different from the MSA I got from using the API.; For example, with this protein sequence of 679 in length.; With the API I get an MSA of 20446 sequences, while with colabfold_search.sh I get an MSA of 20865 in size, and only 1150 sequences in common between the two methods.; Is there any way to get the same output as the API using the colabfold_search.sh script?; the input and the outputs are here : ; https://drive.google.com/drive/folders/1ZcAHKRzxT4hK-Bjb8ZKozDfaO_cTptwO?usp=sharing; - The msa of the mmseqs2 API is stored in msa_api.pickle; - The msa of mmseqs2 launched in the cluster is in the form of file.a3m I converted it myself in file msa_mmseqs2.pickle to make the comparison.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/552:73,predict,prediction,73,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/552,1,['predict'],['prediction']
Safety,"I was looking for a command/option to merge the raw alignments or taxonomy files once they have been computed on different input sequence sets against the same database (and the use the convertalis or taxonomyreport commands on the merged output). Some of those alignments were already calculated, and I wondered if it was possible to avoid running again those into a merged input file on search/taxonomy commands. I really appreciate your suggestions and those by Martin and I will take into account for future searches with MMseq2. Thanks again for your help... Josep F. > However, you can bundle more queries into one run by giving more input fasta/q files to `createdb`:; > ; > ```; > mmseqs createdb fasta1.fa fasta2.fa target; > mmseqs search query target aln tmp; > ```; > ; > Now you can additionally give the `qset` column to `convertalis` to resolve from which input fasta file each search result came from.; > ; > ```; > mmseqs convertalis query target aln aln.m8 --format-output qset,query,target,etc...; > ```; > ; > You will get an output similar to this:; > ; > ```; > fasta1.fa q1 t5 ...; > fasta1.fa q2 t7 ...; > fasta2.fa q6 t1 ...; > ...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/267#issuecomment-580775351:335,avoid,avoid,335,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/267#issuecomment-580775351,1,['avoid'],['avoid']
Safety,"I was looking for the same info (coming from the colab fold paper). I havent tried running it yet. I believe that given your query db (sequences of a complex), the target db (e.g. uniref), the alignments (sequences vs. uniref) pairaln will create pairings that satisfy the conditions:. - paired sequences must come from the same species; - each query must have a hit within a species; - 50% of query sequence needs to be covered in the alignment. The paragraph from the paper:. > MSA pairing for complex prediction. A paired MSA helps AlphaFold2 to predict complexes more accurately only if orthologous genes are paired with each other. We followed a similar strategy as Bryant et al.22 to pair sequences according to their taxonomic identifier. For the pairing we search each distinct sequence of a complex against the UniRef100 using the same procedure as described in section 2.2.1. We return only hits that cover all complex proteins within one species and pair only the best hit (smallest E-value) with an alignment that covers the query to at least 50%. The pairing is implemented in the new MMseqs2 module pairaln.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/628#issuecomment-1448271839:504,predict,prediction,504,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/628#issuecomment-1448271839,2,['predict'],"['predict', 'prediction']"
Safety,"I was trying to avoid MPI so far... Mostly because I run mmseqs as part of a nextflow pipeline, and I'm not even sure if it is possible to use MPI from there, because nextflow usually takes care of the parallelization.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/376#issuecomment-734387106:16,avoid,avoid,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/376#issuecomment-734387106,1,['avoid'],['avoid']
Safety,"I will appreciate if you can help me with a couple of questions regarding; MMseqs2. I've been running it using both approaches, for the alignment against; sequence dbs (mmseq search -> convertalis) and for the taxonomical binning; (mmseq taxonomy -> taxonomyreport), either with a single sequences set or; multiple sets after de-multiplexing barcodes from sequencing run. * The first question is if it is possible to get a taxonomy report directly from; ""search"" option or the other way around, say here get search alignments (or; convertalis-like) from ""taxonomy"" option, in order to avoid two runs of mmseqs; (one for search and one for taxonomy).; * The second question relates to merging the mmseq output, either from search or; taxonomy options, after running mmseqs2 separately on each sequence bin. Is it; possible to get convertalis or taxonomyreport from the output from several; mmseqs ""search"" or ""taxonomy"" runs?. Thanks for your assistance on those questions... Josep F. ## Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MMseqs2 from github, version: 5fcc48fbf4f6697e73e1e2a4b3f53c6cdf87e8f1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; 4 AMD Opteron 6386 SE (avx/sse4_1/sse4_2), 64 cores, 512GB RAM; * Operating system and version:; Linux 4.9.0-9-amd64 #1 SMP Debian 4.9.168-1+deb9u5 (2019-08-11)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/267:585,avoid,avoid,585,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/267,1,['avoid'],['avoid']
Safety,I would like to use `mmseqs taxonomy` to detect contaminations within a transcriptome assembly. The transcriptome is from a metazoan organism. Contaminations are mainly bacterial. I would like to use NR and NT databases for a start (and I successfully run first analyses with mmseqs2). But I can also build my own database.; EDIT: Level of contamination is quite high and contamination is taxonomically quite diverse. Otherwise it would be rather easy. First question: do you have specific recommendations when dealing with a transcriptome as the query? For example taking into account the rather short contigs and splicing. Second question: There are no genome assemblies form closely related species available. What are your thoughts regarding nucl-nucl search VS translated_nucl-prot search in this case?. Third questions: In case I do a translated_nucl-prot search how do I deal with the fact that my queries are both from Euk. and Prok. origin? I mean regarding translation table. Would you worry about this?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/444:41,detect,detect,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444,1,['detect'],['detect']
Safety,I would still try to avoid placing the temp directory on NFS. Maybe that would help in the future.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423#issuecomment-797846442:21,avoid,avoid,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423#issuecomment-797846442,1,['avoid'],['avoid']
Safety,I'd like to know whats the difference between `createlinindex` and `createindex`. I did the index to `nr` with `createindex` and after I did `createlinindex` which overwrites the `*.idx` files of the previous index. . There is a way to keep both indexes avoiding one overwrite the other.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/306:254,avoid,avoiding,254,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/306,1,['avoid'],['avoiding']
Safety,"I'm also getting this error. What's the current workaround? . ```bash; Reading LCA results; [=================================================================] 100.00% 3.34M 0s 428ms . Found 34 different taxa for 3340500 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/6531700399628113911/easy-taxonomy.sh: line 39: 138605 Aborted (core dumped) ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```. EDIT: Same error, new microbe:. <details><summary>Ending error here:</summary>. ```bash; Loading NCBI taxonomy; Loading nodes file ... Done, got 2213844 nodes; Loading merged file ... Done, added 56043 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Reading LCA results; [=================================================================] 100.00% 2.27K 0s 0ms . Found 2 different taxa for 2272 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/16886106523447294388/easy-taxonomy.sh: line 39: 11990 Aborted ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```; </details>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067:389,Abort,Aborted,389,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067,2,['Abort'],['Aborted']
Safety,"I'm getting the following error when clustering DNA sequences of genes predicted using [prodigal](https://github.com/hyattpd/Prodigal). ```; there must be an error: 4555074 deleted from 8264926 that now is empty, but not assigned to a cluster; there must be an error: 2084676 deleted from 4818957 that now is empty, but not assigned to a cluster; there must be an error: 1856143 deleted from 5943940 that now is empty, but not assigned to a cluster; there must be an error: 5296758 deleted from 711843 that now is empty, but not assigned to a cluster; there must be an error: 7150694 deleted from 6155612 that now is empty, but not assigned to a cluster; there must be an error: 8533816 deleted from 9452727 that now is empty, but not assigned to a cluster; there must be an error: 9521033 deleted from 8465434 that now is empty, but not assigned to a cluster; there must be an error: 2376789 deleted from 9427595 that now is empty, but not assigned to a cluster; ```. I have attached the error and output file for your reference.; Thanks!. [mmseqs2.409914.out.txt](https://github.com/soedinglab/MMseqs2/files/11750406/mmseqs2.409914.out.txt); [mmseqs2.409914.err.txt](https://github.com/soedinglab/MMseqs2/files/11750407/mmseqs2.409914.err.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/719:71,predict,predicted,71,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/719,1,['predict'],['predicted']
Safety,"I've been trying to generate an MSA of each cluster using an external tool. The problem is the external tool doesn't accept input from stdin and requires a file. My workaround was to use ```ffindex_unpack``` to generate a file for each cluster and then pass those to external tool. But this can lead to a lot of trouble and I want to avoid it,. How would one proceed to use ```mmseqs apply``` to generate a temporary file and pass that file to the external tool? . I've been trying to generate a bash script for this but it's my first ever attempt with bash scripting and I'm having trouble ""capturing"" the entire cluster in the temporary file.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/536:334,avoid,avoid,334,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/536,1,['avoid'],['avoid']
Safety,"If you provide me the mmseqs command call for your search an the log of the run then I can tell you why MMseqs2 is not much faster and what parameter you can tweak to be faster. My assumption is that you waste a lot of time on alignments that do not have to be computed since the chance of being homologous is not high. . The warning ""Sequence XXX produces too many hits. Results might be truncated"" indicates that their are too many high scoring diagonal (> target database size / 2). Is your database highly redundant?. MMseqs2 produces in default only one smith-waterman alignment per sequence. You can increase the alignments with` --alt-ali`. If you want just the best hit than you could use `filterdb` to reduce just extract the first line of each query result. Also if you are just interested at the top hit than you can speed up MMseqs2 quite a lot by using an iterative search. See https://github.com/soedinglab/mmseqs2/wiki#how-to-find-the-best-hit-the-fastest-way . In my example MMseqs2 was able to detect the sequence pair you mentioned. I search sequence `10141.SETX` (query) against sequence `6334.TSP_11650` (target) and both could be detect by MMseqs2. . The command I used was . mmseqs search query target aln tmp -a -s 7.5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407433121:510,redund,redundant,510,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407433121,3,"['detect', 'redund']","['detect', 'redundant']"
Safety,"In order to identify the best settings I have changed the search conditions. Now looking for a set of ~11K peptides (8-15 mers) against the human proteome. All the peptides are known to occur at least once in the target database. . My findings over the last week:; 1. not running `createindex` helps; 2. In order to find 8-mer peptides the `--spaced-kmer-pattern 110111 -k 5` or any other with 1 non-informative positions works. When increasing the number of non-informative positions or using 6-mers, numbers of detected 8-mer peptides drop dramatically. Changing the non-informative position leads to different peptides not being found. ; 3. Masking and compositional bias correction at 0 helps; 4. `--exact-kmer-matching` increases the numbers of detected peptides, alternatively I was able to reach similar numbers of detected peptides by running an iterative search with a lot of iterative searches which was slower. ; 5. `mmseqs search` was producing false-positive mappings, fixed by using `map`. These I have identified manually. . As a result, the current command looks like this:; ```; mmseqs map --comp-bias-corr 0 --mask 0 -e inf --max-seqs 300 --exact-kmer-matching 1 \; --spaced-kmer-pattern 110111 -k 5 -a 1 --min-seq-id 1 \; IP_nonspliced_DB/IP_nonspliced_DB proteome_DB/proteome_DB result_DB/result_DB tmp; ```. This yields 98-99% of the peptides mapped to the proteome. ; When using the translated genome database which is the actual target I see ~90% peptides mapped.; 100% true positive mapping without mismatches is my main goal when using mmseqs, because in the experiment context it is very important to find peptides even if they are mapped only to a single location and all the other locations for multi-mappers. . Can this result be improved to 100% or is this the limit in your opinion?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-767698082:513,detect,detected,513,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-767698082,3,['detect'],['detected']
Safety,"Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Intikhab S. Alam; Sent: 10 September 2020 00:45; To: soedinglab/MMseqs2; soedinglab/MMseqs2; Cc: Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 18:53; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180:1545,redund,redundant,1545,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180,2,['redund'],['redundant']
Safety,"It's a new week and we serve new (RNA) data. Now it's working again for our production data. However, the example above is still broken. Is there some auto-detect step that determine the database type from the provided sequences? The only thing that changed is the sequence file.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611#issuecomment-1261228576:156,detect,detect,156,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611#issuecomment-1261228576,1,['detect'],['detect']
Safety,"LFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKG. >S6; ANINAVTKIGNTPLHT. >S7; IVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPIDDFSKSSDLLLCYLRYKFNGSLNYYVLYKLLTKGSDPNCVDEDGLTSLHYYCKHISAFHESNYYKSKSHTKMRAEKRFIYAIIDHGANINAVTKIGNTPLHTYLQQYTKHSPRVVYALLSRGADTRIRNNLNCTPIMEYIKNDCATGHILIMLLNWHEQKYGKLQKEEGQHLLYLFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHKSKLVDKALNKLESTIDSQSRLSYLPPEIMRNIITKLSDYHLNSMLYGKNHY. >S8; LFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHK; ```. ## MMSeqs Tested Command ; ### Test 1 (--min-seq-id 1); mmseqs cluster test_mmseqs/DB test_mmseqs/seqid1_v2 seqid1_tmp_v2 --min-seq-id 1. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1 |; | S2 | S2 |; | S3 | S3 |; | S5 | S5 |; | S6 | S6 |; | S7 | S4, S7 |; | S8 | S8 |. ### Test 2 (--min-seq-id 1, -c 1.0, and --cov-mode 1); mmseqs cluster test/DB test/seqid1_test seqid1_tmp --min-seq-id 1 --cov-mode 1 -c 1.0. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1, S3, S2 |; | S4 | S4, S5, S7, S8 | ; | S6 | S6 | . ** PS: ; 1. This result is close to expected. However, I have no idea why the mmseqs does not group the S6 within the S4 cluster since S6 is a partial sequence of S4. ; 2. There are no differences in the results if reducing the -c from 1.0 to 0. . With these results, I am not sure if I use the correct parameter settings. Kindly advise me on the corresponding parameter to set for the MMSeqs2 cluster that is equivalent to CDHIT in order to have a non-redundant sequence dataset. . Regards, ; Chong",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/601:3744,redund,redundant,3744,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/601,1,['redund'],['redundant']
Safety,"MMSeqs2 considers only hits with two k-mers on a diagonal. In default MMSeqs2 uses spaced k-mers of length 13 (mask: 11010110011). This means that we can only find hits of at least 14 length. It is possible to turn off spaced k-mers `--spaced-kmer-mode 0`, this makes it possible to detect 8 residue long sequences. You could also define your own more compact spaced pattern using `--spaced-kmer-pattern`. Another option is to decrease the k-mer length using `-k`. Changing the substitution matrix also helps to detect shorter sequences. You might want to look into the publication ""Selecting the Right Similarity-Scoring Matrix"" from Pearson et al (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3848038/)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/125#issuecomment-581274532:283,detect,detect,283,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/125#issuecomment-581274532,2,['detect'],['detect']
Safety,MMseqs can create asymetric sequence alignemnts. . For example 1: composition bias correction is just applied on the query not on the target sequence. There for the alignment can differ. ; For example 2: It can also happen that seq_A detects seq_B but seq_B does not detect seq_A at the prefilter stage.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275378500:234,detect,detects,234,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275378500,2,['detect'],"['detect', 'detects']"
Safety,"MMseqs2 can now compute alternative alignments. MMseqs2 only produces the best scoring alignment by default. However it is possible to create alternative alignments using the parameter `--alt-ali`. It adjust the number of alternative alignments that should be computed. We report only alternative hits that fulfill the alignment criteria: coverage `-c`, sequence identity `--min-seq-id`, max accept `--max-accept`, and e-value `-e`. Suppose we have two sequences:; (1) query sequence with domains A, B and C; (2) target sequence with homologous domains B' and A' C' . MMseqs2 will first align the highest scoring domain B and B'. For the next `--alt-ali` iteration we mask region B' in the target and align again. Now the alignment detects A and A'. Then we mask region B' and A' in the target and align again. resulting in an alignment of C and C'. I will add the support to switch the masking between target and query in future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/86#issuecomment-393068844:732,detect,detects,732,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/86#issuecomment-393068844,1,['detect'],['detects']
Safety,Maybe we should add a do not hash flags to the parameters to avoid this.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461806077:61,avoid,avoid,61,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461806077,1,['avoid'],['avoid']
Safety,"My assumption is that the long sequences dominates the run time. Linclust was built for short sequences < 100kb and is slow when you try to align genomes against each other. . One trick that might speed up the process would be to use bi-directional coverage `--cov-mode 0`. This coverage mode rejects all sequences that cannot fulfil the coverage criteria, which hopefully avoids most of the long running alignments.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-706849886:373,avoid,avoids,373,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-706849886,1,['avoid'],['avoids']
Safety,"My point of view is that of a computational biologist who is both an end-user and developer of software that includes mmseqs as a dependency. As a developer myself, I view end users who are sophisticated enough to say things about builds as a fairly precious resource. So let me make my point one more time before I accept your decision and move on. . While I admit there are things that suck about semantic versioning, it has two outstanding qualities: (1) it has a controlled syntax that is widely used, and (2) it's easy to determine whether software that follow the pattern is older, newer, or equal to a reference version that someone else tested. Among the three recipes shown above and the binaries available for download, it seems that there are 3 different versioning schemes in use that will show up as the output of ""mmseqs version"" (12.11e3, 12-11e3, and the full SHA1). If I add my software (which uses VERSION_OVERRIDE=12.0 internally for compatibility with python semantic versioning), that's a 4th. My install code can't easily determine if a binary of unknown provenance is lower, equal, or higher than the recommended version. Neither can any downstream users without the sophistication to look at your repository's version tags. Using semantic versioning as a standard (that can be overridden by packagers or users if needed) would avoid this issue. To finish with something nice, your build system is well-done and build are smooth on the various linux and macos BigSur platforms I've tested it on. Feel free to close this issue after reading.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559:1351,avoid,avoid,1351,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559,1,['avoid'],['avoid']
Safety,"No, I just saw an ad on Stack Overflow and was randomly looking for something I could improve. It’s not my project, so it’s not for me to judge, but just out of curiosity: why not use unique_ptr instead of manual memory management whenever ownership is clear? It’s safer, shorter (no delete) and has zero overhead. I get that you don’t want to use more questionable C++ features like inheritance, RTTI or exceptions, but zero-cost static GC is the most useful thing you can pick up in C++ coming from C. And range-based for just makes code more readable and thus easier to support. Iterators are out of place there, they’re from a [lower abstraction level](https://www.fluentcpp.com/2016/12/15/respect-levels-of-abstraction/) than the surrounding code. I’ll pass, but thanks :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/255#issuecomment-563504356:265,safe,safer,265,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/255#issuecomment-563504356,2,['safe'],['safer']
Safety,"No, currently query/target always parses the accession:; ```; { ""uc"", 2, 0}, // Uniclust; { ""cl|"", 3, 1},; { ""sp|"", 3, 1}, // Swiss prot; { ""tr|"", 3, 1}, // trembl; { ""gb|"", 3, 1}, // GenBank; { ""ref|"", 4, 1}, // NCBI Reference Sequence; { ""pdb|"", 4, 1}, // Brookhaven Protein Data Bank; { ""bbs|"", 4, 1}, // GenInfo Backbone Id; { ""lcl|"", 4, 1}, // Local Sequence identifier; { ""pir||"", 5, 1}, // NBRF PIR; { ""prf||"", 5, 1}, // Protein Research Foundation; { ""gnl|"", 4, 2}, // General database identifier; { ""pat|"", 4, 2}, // Patents; { ""gi|"", 3, 3} // NCBI GI; ```. These are the header formats that get parsed, you can try to avoid these prefices. It wouldn't be to hard to add an option to avoid parsing, but we have out hands quite full currently.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/793#issuecomment-1871240398:628,avoid,avoid,628,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/793#issuecomment-1871240398,2,['avoid'],['avoid']
Safety,"Not sure if this is a bug or if I am missing a flag that would make this all work as expected. ## Expected Behavior; I wish to taxonomically annotate contigs using the `mmseqs easy-taxonomy` workflow.; I see from your documentation (https://github.com/soedinglab/MMseqs2/wiki#taxonomy-output-and-tsv) that it is possible to calculate the LCA of a contig predicted ORFs. With the output file produced listing the contig_name along with the total number of predicted ORFs and the number of those ORFs with top hits that agree with the assigned LCA of the contig. ## Current Behavior; When I run the following command:; ```bash; mmseqs easy-taxonomy contigs.fasta swissprotDB tax tmp; ```; I get the following results files:; ```bash; tax_lca.tsv; tax_report; tax_tophit_aln; tax_tophit_report; ```; None of which contain the expected output described in the documentation. I have had a look at using `aggregatetax` command, but run into problem with the `createtsv` command not reassigning the contig names correctly.; ```bash; mmseqs createdb contigs.fasta contigsDb; mmseqs extractorfs contigsDb orfsAaDb --translate 1; mmseqs taxonomy orfsAaDb swissprotDB taxPerOrf tmp --tax-output-mode 2; mmseqs aggregatetaxweights swissprotDB orfsAaDb_h taxPerOrf taxPerOrf_aln taxPerContig --majority 0.5; mmseqs createtsv orfsAaDb contigsDb taxPerContig aggregatetaxResult.tsv; ```. ## Your Environment; ```bash; MMseqs2 Version: 113e3212c137d026e297c7540e1fcd039f6812b1; Pre-compiled binary; ```. Thanks for your help in advance. Cheers,; Tim.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/851:354,predict,predicted,354,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/851,2,['predict'],['predicted']
Safety,"Ok thank you for your time, I was really helpful. . About the index _number added at each queries' names, have you an idea to avoid a such adding? because I have to get the fasta sequences after this process and for that I need the exact scaffold's name, without an index added.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/163#issuecomment-462773727:126,avoid,avoid,126,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/163#issuecomment-462773727,1,['avoid'],['avoid']
Safety,"Okay, the standard output is here https://gist.github.com/bastian-wur/1b978870a88c3ead69f51e77e65b4696 ; You can see that ""sequence pairs passed the thresholds"" is different for all 3 of them. Maybe of importance, not sure: The used database is pretty redundant. Not sure if there are many identical matches in there, but many which are pretty close to each other.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590294564:252,redund,redundant,252,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590294564,1,['redund'],['redundant']
Safety,Output of cmake call:; ```; -- The CXX compiler identification is GNU 10.3.0; -- The C compiler identification is GNU 10.3.0; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:444,Detect,Detecting,444,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,2,['Detect'],['Detecting']
Safety,Question: recommendations for contaminant detection within transcriptome assembly,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/444:42,detect,detection,42,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444,1,['detect'],['detection']
Safety,"RI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. .... **The input files have no entry: - tmp/3290078511923703767/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died**. ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 245 0 --:--:-- --:--:-- --:--:-- 245. 09/27 13:21:54 [NOTICE] Downloading 1 item(s). 09/27 13:21:54 [NOTICE] Allocat",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:1773,abort,aborted,1773,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['abort'],['aborted']
Safety,"Release 214 of the [GTDB](https://gtdb.ecogenomic.org/) was published in April 2023. A few changes to file formats in the GTDB seems to have broken the `mmseqs databases GTDB` command. ## Expected Behavior; Running `mmseqs databases GTDB gtdb tmp` should install the GTDB database for use with mmseqs. ## Current Behavior; An `errorCode=3 Resource not found` error occurs. ## Steps to Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:764,abort,aborted,764,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,1,['abort'],['aborted']
Safety,Sorry for the late answer @ksteczk. ; What do you mean by PSI-BLAST distances? . The following workflow is a profile consensus clustering. As a first step I would remove redundancy from your set: ; ; mmseqs linclust NR NR_95_90_clu /tmp -c 0.95 --min-seq-id 0.95; mmseqs createsubdb NR_95_90_clu NR NR_95_90_repseq. Create profiles by iterative search:. mmseqs search NR_95_90_repseq NR_95_90_repseq NR_res /tmp --num-iterations 3 ; mmseqs result2profile NR_95_90_repseq NR_95_90_repseq NR_res NR_profile. Cluster profiles: . mmseqs search NR_profile NR_consensus NR_pp_res /tmp # Add your cluster criteria here; mmseqs clust NR_profile NR_pp_res NR_pp_clu,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-367905853:170,redund,redundancy,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-367905853,1,['redund'],['redundancy']
Safety,"Thank you for sharing the data. There are two problems, which avoids the sequences to be clustered together (1) sensitivity issue of Linclust and (2) result size issue of the all against all clustering algorithm. Either of the following two solutions solves the problem:. 1.) You can increase the sensitivity of Linclust by adjusting `--kmer-per-seq`. I would recommend to set it to 80.; 2.) You can increase `--max-seqs` to reduce the truncation of clusters. The default is 30. You could increase it to 300 e.g. . I did cluster your data using `mmseqs cluster panproteome/panproteome.db clu_linclust3 tmp --kmer-per-seq 80 --min-seq-id 0.8`. Both sequences (GCF_001249795.1_3002_8_6_genomic_02902, GCF_001259475.1_4370_2_2_genomic_00977) got clustered.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-392657600:62,avoid,avoids,62,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-392657600,1,['avoid'],['avoids']
Safety,Thank you for the example. The issue is that `YP_009345691` is at 40% sequence identity. You need to increase the sensitivity to find the hit (see https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter). E.g. `-s 6.5` can detect the hit. mmseqs easy-search loci.fna db.faa aln tmp -s 6.5,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/264#issuecomment-574384604:239,detect,detect,239,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/264#issuecomment-574384604,1,['detect'],['detect']
