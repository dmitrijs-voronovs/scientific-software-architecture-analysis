quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Testability,"s.py:1869: in _run_once; event_list = self._selector.select(timeout); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . self = <selectors.EpollSelector object at 0x7fae890f2d30>; timeout = 15.402000000000001. def select(self, timeout=None):; if timeout is None:; timeout = -1; elif timeout <= 0:; timeout = 0; else:; # epoll_wait() has a resolution of 1 millisecond, round away; # from zero to wait *at least* timeout seconds.; timeout = math.ceil(timeout * 1e3) * 1e-3; ; # epoll_wait() expects `maxevents` to be greater than zero;; # we want to make sure that `select()` can be called when no; # FD is registered.; max_ev = max(len(self._fd_to_key), 1); ; ready = []; try:; > fd_event_list = self._selector.poll(timeout, max_ev); E Failed: Timeout >360.0s. usr/lib/python3.9/selectors.py:469: Failed; ------------------------------ Captured log setup ------------------------------; 2023-09-06T21:45:24 INFO test.conftest conftest.py:14:log_before_after starting test; 2023-09-06T21:45:24 INFO hailtop.aiocloud.aioazure.credentials credentials.py:99:default_credentials using credentials file /test-gsa-key/key.json; ------------------------------ Captured log call -------------------------------; 2023-09-06T21:45:25 INFO azure.identity.aio._internal.get_token_mixin get_token_mixin.py:93:get_token ClientSecretCredential.get_token succeeded; 2023-09-06T21:45:25 INFO batch_client.aioclient aioclient.py:809:_submit created batch 191; 2023-09-06T21:47:17 WARNING hailtop.utils utils.py:842:retry_transient_errors_with_debug_string A transient error occured. We will automatically retry. Do not be alarmed. We have thus far seen 2 transient errors (next delay: 3.794s). The most recent error was <class 'asyncio.exceptions.TimeoutError'> . ------------------------------ live log teardown -------------------------------; 2023-09-06T21:51:25 INFO test.conftest conftest.py:16:log_before_after ending test. ```. ### Version. 0.2.120. ### Relevant log output. _No resp",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13582:3830,test,test,3830,https://hail.is,https://github.com/hail-is/hail/issues/13582,1,['test'],['test']
Testability,"s/315"">#315</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>)</li>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>)</li>; </ul>; <h3>Features</h3>; <ul>; <li>add api key support (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/472"">#472</a>) (<a href=""https://github.com/googleapis/python-logging/commit/81ca8c616acb988be1fbecfc2a0b1a5b39280149"">81ca8c6</a>)</li>; <li>add json_fields extras argument for adding to jsonPayload (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/447"">#447</a>) (<a href=""https://github.com/googleapis/python-logging/commit/a760e02371a55d6262e42de9e0222fffa2c7192b"">a760e02</a>)</li>; <li>avoid importing grpc when explicitly disabled (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/416"">#416</a>) (<a href=""https://github.com/googleapis/python-logging/commit/818213e143d6a1941211a48e0b23069a426ac300"">818213e</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>) (<a href=""https://github.com/googleapis/python-logging/commit/c63250399fcd6e1317d341e98fab11095c443e5e"">c632503</a>)</li>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>) (<a href=""https://github.com/googleapis/python-logging/commit/83d9ca8521fe7c470bb6755a48a97496515d7abc"">83d9ca8</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>) (<a href=""https://github.com/googleapis/python-logging/commit/5267152574b2ee96eb6f5c536a762f58bd2f886e"">5267152</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logg",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:1986,log,logging,1986,https://hail.is,https://github.com/hail-is/hail/pull/11574,2,['log'],['logging']
Testability,"s/339"">#339</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>)</li>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>)</li>; </ul>; <h3>Features</h3>; <ul>; <li>add api key support (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/472"">#472</a>) (<a href=""https://github.com/googleapis/python-logging/commit/81ca8c616acb988be1fbecfc2a0b1a5b39280149"">81ca8c6</a>)</li>; <li>add json_fields extras argument for adding to jsonPayload (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/447"">#447</a>) (<a href=""https://github.com/googleapis/python-logging/commit/a760e02371a55d6262e42de9e0222fffa2c7192b"">a760e02</a>)</li>; <li>avoid importing grpc when explicitly disabled (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/416"">#416</a>) (<a href=""https://github.com/googleapis/python-logging/commit/818213e143d6a1941211a48e0b23069a426ac300"">818213e</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>) (<a href=""https://github.com/googleapis/python-logging/commit/c63250399fcd6e1317d341e98fab11095c443e5e"">c632503</a>)</li>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>) (<a href=""https://github.com/googleapis/python-logging/commit/83d9ca8521fe7c470bb6755a48a97496515d7abc"">83d9ca8</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>) (<a href=""https://github.com/googleapis/python-logging/commit/5267152574b2ee96eb6f5c5",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:1793,log,logging,1793,https://hail.is,https://github.com/hail-is/hail/pull/11574,2,['log'],['logging']
Testability,"s/master-init.sh \; 	--packages slackclient==2.0.0,websocket-client,sklearn,tabulate,statsmodels,scikit-learn,hdbscan,matplotlib bw2. Fails with the following error:; ```; gcloud beta dataproc clusters create \; bw2 \; --image-version=1.4-debian9 \; --properties=spark:spark.driver.maxResultSize=0,spark:spark.task.maxFailures=20,spark:spark.kryoserializer.buffer.max=1g,spark:spark.driver.extraJavaOptions=-Xss4M,spark:spark.executor.extraJavaOptions=-Xss4M,hdfs:dfs.replication=1,dataproc:dataproc.logging.stackdriver.enable=false,dataproc:dataproc.monitoring.stackdriver.enable=false,spark:spark.driver.memory=41g \; --initialization-actions=gs://hail-common/hailctl/dataproc/0.2.18/init_notebook.py,gs://gnomad-public/tools/inits/master-init.sh \; --metadata=^|||^WHEEL=gs://hail-common/hailctl/dataproc/0.2.18/hail-0.2.18-py3-none-any.whl|||PKGS=aiohttp|bokeh>1.1,<1.3|decorator<5|gcsfs==0.2.1|hurry.filesize==0.9|ipykernel<5|nest_asyncio|numpy<2|pandas>0.22,<0.24|parsimonious<0.9|PyJWT|python-json-logger==0.1.11|requests>=2.21.0,<2.21.1|scipy>1.2,<1.4|tabulate==0.8.3|slackclient==2.0.0|websocket-client|sklearn|tabulate|statsmodels|scikit-learn|hdbscan|matplotlib \; --master-machine-type=n1-highmem-8 \; --master-boot-disk-size=100GB \; --num-master-local-ssds=0 \; --num-preemptible-workers=0 \; --num-worker-local-ssds=0 \; --num-workers=2 \; --preemptible-worker-boot-disk-size=40GB \; --worker-boot-disk-size=40 \; --worker-machine-type=n1-standard-8 \; --zone=us-central1-b \; --initialization-action-timeout=20m \; --labels=creator=weisburd_broadinstitute_org \; --max-idle=12h; Starting cluster 'bw2'...; Waiting on operation [projects/seqr-project/regions/global/operations/46f1d37d-798a-3fc0-8f70-eac304448a08].; Waiting for cluster creation operation...; WARNING: For PD-Standard without local SSDs, we strongly recommend provisioning 1TB or larger to ensure consistently high I/O performance. See https://cloud.google.com/compute/docs/disks/performance for information on disk I/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6634:1087,log,logger,1087,https://hail.is,https://github.com/hail-is/hail/issues/6634,1,['log'],['logger']
Testability,"s/py4j/clientserver.py"", line 58 in run; File ""/usr/lib/python3.9/threading.py"", line 980 in _bootstrap_inner; File ""/usr/lib/python3.9/threading.py"", line 937 in _bootstrap. Current thread 0x00007fa52bd6b000 (most recent call first):; File ""/usr/local/lib/python3.9/dist-packages/hail/backend/py4j_backend.py"", line 217 in _rpc; File ""/usr/local/lib/python3.9/dist-packages/hail/backend/backend.py"", line 212 in table_type; File ""/usr/local/lib/python3.9/dist-packages/hail/ir/table_ir.py"", line 438 in _compute_type; File ""/usr/local/lib/python3.9/dist-packages/hail/ir/base_ir.py"", line 406 in compute_type; File ""/usr/local/lib/python3.9/dist-packages/hail/ir/base_ir.py"", line 415 in typ; File ""/usr/local/lib/python3.9/dist-packages/hail/table.py"", line 393 in __init__; File ""/usr/local/lib/python3.9/dist-packages/hail/methods/impex.py"", line 3293 in read_table; File ""/usr/local/lib/python3.9/dist-packages/hail/typecheck/check.py"", line 584 in wrapper; File ""<decorator-gen-1482>"", line 2 in read_table; File ""/io/test/hail/matrixtable/test_file_formats.py"", line 104 in test_backward_compatability_ht; File ""/usr/local/lib/python3.9/dist-packages/_pytest/python.py"", line 194 in pytest_pyfunc_call; File ""/usr/local/lib/python3.9/dist-packages/pluggy/_callers.py"", line 102 in _multicall; File ""/usr/local/lib/python3.9/dist-packages/pluggy/_manager.py"", line 119 in _hookexec; File ""/usr/local/lib/python3.9/dist-packages/pluggy/_hooks.py"", line 501 in __call__; File ""/usr/local/lib/python3.9/dist-packages/_pytest/python.py"", line 1792 in runtest; File ""/usr/local/lib/python3.9/dist-packages/_pytest/runner.py"", line 169 in pytest_runtest_call; File ""/usr/local/lib/python3.9/dist-packages/pluggy/_callers.py"", line 102 in _multicall; File ""/usr/local/lib/python3.9/dist-packages/pluggy/_manager.py"", line 119 in _hookexec; File ""/usr/local/lib/python3.9/dist-packages/pluggy/_hooks.py"", line 501 in __call__; File ""/usr/local/lib/python3.9/dist-packages/_pytest/runner.py"", line 262 in",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14299:4709,test,test,4709,https://hail.is,https://github.com/hail-is/hail/issues/14299,1,['test'],['test']
Testability,"s://redirect.github.com/Textualize/rich/issues/2875"">Textualize/rich#2875</a></li>; <li>Fix rich.pretty.install breakage in iPython <a href=""https://redirect.github.com/Textualize/rich/issues/3013"">Textualize/rich#3013</a></li>; </ul>; <h3>Added</h3>; <ul>; <li>Added Text.extend_style method.</li>; <li>Added Span.extend method.</li>; </ul>; <h3>Changed</h3>; <ul>; <li>Text.tab_size now defaults to <code>None</code> to indicate that Console.tab_size should be used.</li>; </ul>; <h2>v13.4.2</h2>; <h2>[13.4.2] - 2023-06-12</h2>; <h3>Changed</h3>; <ul>; <li>Relaxed markdown-it-py dependency</li>; </ul>; <h2>Hot fix for typing extension issue</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/Textualize/rich/blob/master/CHANGELOG.md"">rich's changelog</a>.</em></p>; <blockquote>; <h2>[13.5.2] - 2023-08-01</h2>; <h3>Fixed</h3>; <ul>; <li>Fixed Text.expand_tab assertion error</li>; </ul>; <h2>[13.5.1] - 2023-07-31</h2>; <h3>Fixed</h3>; <ul>; <li>Fix tilde character (<code>~</code>) not included in link regex when printing to console <a href=""https://redirect.github.com/Textualize/rich/issues/3057"">Textualize/rich#3057</a></li>; </ul>; <h2>[13.5.0] - 2023-07-29</h2>; <h3>Fixed</h3>; <ul>; <li>Fixed Text.expand_tabs not expanding spans.</li>; <li>Fixed TimeElapsedColumn from showing negative.</li>; <li>Fix for escaping strings with a trailing backslash <a href=""https://redirect.github.com/Textualize/rich/issues/2987"">Textualize/rich#2987</a></li>; <li>Fixed exception in Markdown with partial table <a href=""https://redirect.github.com/Textualize/rich/issues/3053"">Textualize/rich#3053</a></li>; <li>Fixed the HTML export template so that the <code>&lt;html&gt;</code> tag comes before the <code>&lt;head&gt;</code> tag <a href=""https://redirect.github.com/Textualize/rich/issues/3021"">Textualize/rich#3021</a></li>; <li>Fixed issue with custom classes overwriting",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13380:2675,assert,assertion,2675,https://hail.is,https://github.com/hail-is/hail/pull/13380,2,['assert'],['assertion']
Testability,"s://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-6036192) | `cryptography:` <br> `3.3.2 -> 41.0.6` <br> | No | No Known Exploit ; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **616/1000** <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.9 | NULL Pointer Dereference <br/>[SNYK-PYTHON-CRYPTOGRAPHY-6092044](https://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-6092044) | `cryptography:` <br> `3.3.2 -> 41.0.6` <br> | No | Proof of Concept ; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **519/1000** <br/> **Why?** Has a fix available, CVSS 6.1 | Information Exposure <br/>[SNYK-PYTHON-REQUESTS-5595532](https://snyk.io/vuln/SNYK-PYTHON-REQUESTS-5595532) | `requests:` <br> `2.27.1 -> 2.31.0` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0Yzg3NGFkNy01NjNmLTQ5Y2QtOTc3My04YjlmMTA5NWUzNmMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjRjODc0YWQ3LTU2M2YtNDljZC05NzczLThiOWYxMDk1ZTM2YyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14148:9020,test,tested,9020,https://hail.is,https://github.com/hail-is/hail/pull/14148,1,['test'],['tested']
Testability,"s</code></a> is running in parallel with testcases in the group (Anton Velma); Fixed: Possible StringIndexOutOfBoundsException in XmlReporter (Anton Velma); Fixed: GITHUB-2754: <a href=""https://github.com/AfterGroups""><code>@​AfterGroups</code></a> is executed for each &quot;finished&quot; group when it has multiple groups defined (Anton Velma)</p>; <p>7.5; Fixed: GITHUB-2701: Bump gradle version to 7.3.3 to support java17 build (ZhangJian He); Fixed: GITHUB-2646: Streamline Logging Across TestNG (Krishnan Mahadevan); Fixed: GITHUB-2658: Inheritance + dependsOnMethods (Krishnan Mahadevan)</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/cbeust/testng/commit/b94395dea479308ea3fe825269730b960f44d805""><code>b94395d</code></a> Bump version to 7.7.1 for release</li>; <li><a href=""https://github.com/cbeust/testng/commit/89dc5845fcb46c26af187e50ea907a7382d06e72""><code>89dc584</code></a> Streamline overloaded assertion methods for Groovy</li>; <li><a href=""https://github.com/cbeust/testng/commit/5ac0021d14f7eb00804fe235aaefc5c2fbce57d1""><code>5ac0021</code></a> Adding release notes</li>; <li><a href=""https://github.com/cbeust/testng/commit/c0e1e772f1fc0ab2142f3a4114a2b8cfe60fa7e1""><code>c0e1e77</code></a> Adjust version reference in deprecation msgs.</li>; <li><a href=""https://github.com/cbeust/testng/commit/011527d9bf0f91a40539f5e5467cc106888810d9""><code>011527d</code></a> Bump version to 7.7.0 for release</li>; <li><a href=""https://github.com/cbeust/testng/commit/7846c444a411647f7e401a097224702188c93835""><code>7846c44</code></a> Deprecate support for running JUnit tests</li>; <li><a href=""https://github.com/cbeust/testng/commit/8630a7e8fe12985d71c00212f9362fd38fb0cb9e""><code>8630a7e</code></a> Ensure ITestContext available for JUnit4 tests</li>; <li><a href=""https://github.com/cbeust/testng/commit/7070b020def0089d0d9dc695a5762ad16e974ce6""><code>7070b02</code></a> ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:14972,test,testng,14972,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,"['assert', 'test']","['assertion', 'testng']"
Testability,"s</h2>; <ul>; <li>The minimum supported python version is now 2.7 or 3.4 and greater (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1093"">#1093</a>)</li>; <li>The minimum supported Sphinx version is now 1.6 (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1091"">#1091</a>)</li>; </ul>; <h2>Deprecated</h2>; <ul>; <li>Support for Sphinx's HTML4 writer is deprecated and will be removed in version 2.0 (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1091"">#1091</a>)</li>; </ul>; <h2>Features</h2>; <ul>; <li>Add support for Sphinx 4.x (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1123"">#1123</a>)</li>; <li>Add support for Docutils 0.17 (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1185"">#1185</a> and <a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1199"">#1199</a>)</li>; <li>Fixed logo scaling on IE11 (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1183"">#1183</a>)</li>; <li>Added support for logos as URLs (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1171"">#1171</a>)</li>; <li>Align top and side navigation background colors on mobile (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1132"">#1132</a>)</li>; <li>Added support for deep toc levels (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1089"">#1089</a>)</li>; <li>Updated translations for Chinese, Dutch, Estonian, French, German, Italian,; Lithuanian, Persian, Polish, Portuguese, Russian, Spanish, Swedish, and; Turkish locales</li>; </ul>; <p>A number of accessibility features were added in this release:</p>; <ul>; <li>Allow keyboard to toggle menu expansion (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1167"">#1167</",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11464:1352,log,logo,1352,https://hail.is,https://github.com/hail-is/hail/pull/11464,2,['log'],['logo']
Testability,"s`: this parameter now defaults to `True` and includes the; response body text in the error message. Both; Both parameters may be overridden on a per-request basis. - `httpx.ResponseManager` and `httpx.ClientSession` work together to enable; `retry_transient` and `raise_for_status`. Aiohttp has this unusual structure where; all the request methods are synchronous but they return an object that is both; awaitable and an async context manager. I mirror their structure exactly. The; `httpx.ResponseManager` is both awaitable and an async context manager. Its; `response_coroutine` field is a coroutine that includes the retry and; raise-for-status logic. - The `HailResolver` overrides domain name resolution to first consult the Hail; `address` service. `address` is effectively a domain name server. It watches; kubernetes services and publishes the pod IPs. It supports two name styles:; `service` and `service.namespace`. The former uses the deploy config to; determine in which namespace to find the given service. Currently, the; client-side library only looks up IPs for `shuffler` and `address`. - `BlockingClientSession` and `BlockingContextManager` wrap the; aforementioned `httpx` classes. `BlockingClientResponse` wraps an; `aiohttp.ClientResponse`. ---. Examples of correct usage:. A blocking HTTPS request:. ```python3; with httpx.blocking_client_session() as session:; with session.post(url, json=config, headers=headers) as resp:; assert resp.status == 200; print(resp.text()); ```. An asynchronous HTTPS request to auth:; ```python3; async with httpx.client_session() as session:; async with session.get(; deploy_config.url('auth', '/api/v1alpha/userinfo'),; headers=headers) as resp:; assert resp.status == 200; print(await resp.json()); ```. A blocking HTTPS session with a large default timeout:. ```python3; httpx.blocking_client_session(; headers=service_auth_headers(deploy_config, 'query'),; timeout=aiohttp.ClientTimeout(total=600)); ```. cc: @catoverdrive @Dania-Abuhijleh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9554:2894,assert,assert,2894,https://hail.is,https://github.com/hail-is/hail/pull/9554,2,['assert'],['assert']
Testability,"saghul/pycares/releases"">pycares's releases</a>.</em></p>; <blockquote>; <h2>4.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump cibuildwheel to build for Python 3.11 + CI total time speedups by <a href=""https://github.com/Jackenmen""><code>@​Jackenmen</code></a> in <a href=""https://github-redirect.dependabot.com/saghul/pycares/pull/174"">saghul/pycares#174</a></li>; <li>Fix tests that depended on external sites by <a href=""https://github.com/Jackenmen""><code>@​Jackenmen</code></a> in <a href=""https://github-redirect.dependabot.com/saghul/pycares/pull/180"">saghul/pycares#180</a></li>; <li>Complete the Python 3.11 support by <a href=""https://github.com/Jackenmen""><code>@​Jackenmen</code></a> in <a href=""https://github-redirect.dependabot.com/saghul/pycares/pull/179"">saghul/pycares#179</a></li>; <li>Drop CPython 3.6 by <a href=""https://github.com/saghul""><code>@​saghul</code></a> in <a href=""https://github-redirect.dependabot.com/saghul/pycares/pull/181"">saghul/pycares#181</a></li>; <li>Improve test compatibility with pytest by <a href=""https://github.com/saghul""><code>@​saghul</code></a> in <a href=""https://github-redirect.dependabot.com/saghul/pycares/pull/182"">saghul/pycares#182</a></li>; <li>Update c-ares submodule to 1.18.1 by <a href=""https://github.com/saghul""><code>@​saghul</code></a> in <a href=""https://github-redirect.dependabot.com/saghul/pycares/pull/183"">saghul/pycares#183</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/saghul/pycares/compare/pycares-4.2.2...pycares-4.3.0"">https://github.com/saghul/pycares/compare/pycares-4.2.2...pycares-4.3.0</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/saghul/pycares/commit/036aafd253b39f7459a86a5574daae8c5b681bc2""><code>036aafd</code></a> Bump version to 4.3.0</li>; <li><a href=""https://github.com/saghul/pycares/commit/22a37d760349787704f8901c19e149915a7f1b26""><code>22a37d7</code></a> Update c-ares submodule to 1.18.1</li",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12559:1172,test,test,1172,https://hail.is,https://github.com/hail-is/hail/pull/12559,1,['test'],['test']
Testability,"sal_newlines, startupinfo, creationflags); 388 p2cread, p2cwrite,; 389 c2pread, c2pwrite,; --> 390 errread, errwrite); 391 except Exception:; 392 # Preserve original exception in case os.close raises. /scratch/PI/dpwall/computeEnvironments/miniconda2/lib/python2.7/subprocess.pyc in _execute_child(self, args, executable, preexec_fn, close_fds, cwd, env, universal_newlines, startupinfo, creationflags, shell, to_close, p2cread, p2cwrite, c2pread, c2pwrite, errread, errwrite); 1022 raise; 1023 child_exception = pickle.loads(data); -> 1024 raise child_exception; 1025; 1026. OSError: [Errno 2] No such file or directory. and the second error we would get would be. ------------------------------------------------------------------------- Py4JJavaError Traceback (most recent call last) <ipython-input-6-93fa734a63bb> in <module>() ----> 1 hc_nate = HailContext() /scratch/PI/dpwall/computeEnvironments/hail/python/hail/context.pyc in __init__(self, sc, appName, master, local, log, quiet, append, parquet_compression, min_block_size, branching_factor, tmp_dir) 60 self._jhc = scala_object(self._hail, 'HailContext').apply( 61 jsc, appName, joption(master), local, log, quiet, append, ---> 62 parquet_compression, min_block_size, branching_factor, tmp_dir) 63 64 self._jsc = self._jhc.sc() /share/sw/free/spark.2.1.0/spark-2.1.0-bin-hadoop2.7/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py in __call__(self, *args) 1131 answer = self.gateway_client.send_command(command) 1132 return_value = get_return_value( -> 1133 answer, self.gateway_client, self.target_id, self.name) 1134 1135 for temp_arg in temp_args: /share/sw/free/spark.2.1.0/spark-2.1.0-bin-hadoop2.7/python/pyspark/sql/utils.py in deco(*a, **kw) 61 def deco(*a, **kw): 62 try: ---> 63 return f(*a, **kw) 64 except py4j.protocol.Py4JJavaError as e: 65 s = e.java_exception.toString() /share/sw/free/spark.2.1.0/spark-2.1.0-bin-hadoop2.7/python/lib/py4j-0.10.4-src.zip/py4j/protocol.py in get_return_value(answer, gateway_client, tar",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1525:3517,log,log,3517,https://hail.is,https://github.com/hail-is/hail/issues/1525,1,['log'],['log']
Testability,"sandbox/hail [master|𝚫8?2]; snafu$ ipython ; Python 3.8.6 (default, Jan 27 2021, 15:42:20) ; Type 'copyright', 'credits' or 'license' for more information; IPython 7.21.0 -- An enhanced Interactive Python. Type '?' for help. In [1]: import hail; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-1-e24d842d2b9a> in <module>; ----> 1 import hail. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/hail/__init__.py in <module>; 32 # F401 '.expr.*' imported but unused; 33 # E402 module level import not at top of file; ---> 34 from .table import Table, GroupedTable, asc, desc # noqa: E402; 35 from .matrixtable import MatrixTable, GroupedMatrixTable # noqa: E402; 36 from .expr import * # noqa: F401,F403,E402. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/hail/table.py in <module>; 2 import itertools; 3 import pandas; ----> 4 import pyspark; 5 from typing import Optional, Dict, Callable; 6 . ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/__init__.py in <module>; 49 ; 50 from pyspark.conf import SparkConf; ---> 51 from pyspark.context import SparkContext; 52 from pyspark.rdd import RDD, RDDBarrier; 53 from pyspark.files import SparkFiles. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/context.py in <module>; 29 from py4j.protocol import Py4JError; 30 ; ---> 31 from pyspark import accumulators; 32 from pyspark.accumulators import Accumulator; 33 from pyspark.broadcast import Broadcast, BroadcastPickleRegistry. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/accumulators.py in <module>; 95 import socketserver as SocketServer; 96 import threading; ---> 97 from pyspark.serializers import read_int, PickleSerializer; 98 ; 99 . ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/serializers.py in <module>; 69 xrange = range; 70 ; ---> 71 from pyspark import cloudpickle; 72 from pyspark.util import _exception_message; 73 . ~/sandbox/hail/venv/3.8/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/10197:10437,sandbox,sandbox,10437,https://hail.is,https://github.com/hail-is/hail/issues/10197,1,['sandbox'],['sandbox']
Testability,"sc ;;; 4: len 6; hex 00000025f0cd; asc % ;;; 5: len 7; hex 010000008c0bd1; asc ;;; 6: len 8; hex 80000000004c0108; asc L ;;. Record lock, heap no 273 PHYSICAL RECORD: n_fields 7; compact format; info bits 0; 0: len 4; hex 74657374; asc test;;; 1: len 8; hex 64676f6c64737465; asc dgoldste;;; 2: len 4; hex 8000000a; asc ;;; 3: len 4; hex 80000038; asc 8;;; 4: len 6; hex 00000025f0cd; asc % ;;; 5: len 7; hex 010000008c17e1; asc ;;; 6: len 8; hex 8000000000370dc0; asc 7 ;;. Record lock, heap no 284 PHYSICAL RECORD: n_fields 7; compact format; info bits 0; 0: len 4; hex 74657374; asc test;;; 1: len 8; hex 64676f6c64737465; asc dgoldste;;; 2: len 4; hex 80000009; asc ;;; 3: len 4; hex 800000bd; asc ;;; 4: len 6; hex 00000025f0cd; asc % ;;; 5: len 7; hex 010000008c204f; asc O;;; 6: len 8; hex 8000000000427f70; asc B p;;. Record lock, heap no 288 PHYSICAL RECORD: n_fields 7; compact format; info bits 0; 0: len 4; hex 74657374; asc test;;; 1: len 8; hex 64676f6c64737465; asc dgoldste;;; 2: len 4; hex 80000009; asc ;;; 3: len 4; hex 80000038; asc 8;;; 4: len 6; hex 00000025f0cd; asc % ;;; 5: len 7; hex 010000008c17a6; asc ;;; 6: len 8; hex 8000000000370dc0; asc 7 ;;. Record lock, heap no 316 PHYSICAL RECORD: n_fields 7; compact format; info bits 0; 0: len 4; hex 74657374; asc test;;; 1: len 8; hex 64676f6c64737465; asc dgoldste;;; 2: len 4; hex 80000009; asc ;;; 3: len 4; hex 8000008f; asc ;;; 4: len 6; hex 00000025f0cd; asc % ;;; 5: len 7; hex 010000008c10d0; asc ;;; 6: len 8; hex 800000000030c078; asc 0 x;;. *** (2) WAITING FOR THIS LOCK TO BE GRANTED:; RECORD LOCKS space id 312 page no 896 n bits 168 index PRIMARY of table `dgoldste-batch`.`jobs` trx id 2486477 lock_mode X locks rec but not gap waiting; Record lock, heap no 27 PHYSICAL RECORD: n_fields 18; compact format; info bits 128; 0: len 8; hex 8000000000000095; asc ;;; 1: len 4; hex 80002156; asc !V;;; 2: len 6; hex 00000025eff8; asc % ;;; 3: len 7; hex 020000018e1add; asc ;;; 4: len 7; hex 52756e6e696e67; asc Runni",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14380:5956,test,test,5956,https://hail.is,https://github.com/hail-is/hail/issues/14380,1,['test'],['test']
Testability,"scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:289); at scala.collection.AbstractIterator.toArray(Iterator.scala:1336); at org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$13.apply(RDD.scala:936); at org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$13.apply(RDD.scala:936); at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2069); at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2069); at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87); at org.apache.spark.scheduler.Task.run(Task.scala:108); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:338); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); at java.lang.Thread.run(Thread.java:748); Hail version: devel-824968e; Error summary: AssertionError: assertion failed; ```; import_vcf error:; Just stayed at 0 out of 1 complete on the cloud, looked into the processes, it had failed 9 times, and here's the message I could dig out:; ```; is.hail.utils.HailException: hapmap_3.3_hg19_pop_stratified_af.vcf.gz: caught java.lang.NegativeArraySizeException: null; offending line: chr7 71494997 rs844684 A C . PASS AC=1191;AF=0.42627;ALL={A*...; at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:17); at is.hail.utils.package$.fatal(package.scala:26); at is.hail.utils.Context.wrapException(Context.scala:23); at is.hail.io.vcf.LoadVCF$$anonfun$parseLines$1$$anon$1.hasNext(LoadVCF.scala:767); at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); at is.hail.rvd.OrderedRVD$$anonfun$apply$16$$anon$3.hasNext(OrderedRVD.scala:911); at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); at scala.collection.Iterator$class.foreach(Iterator.scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3507:11528,Assert,AssertionError,11528,https://hail.is,https://github.com/hail-is/hail/issues/3507,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,scala:32); 	at is.hail.expr.ir.IRParser$.$anonfun$parse_value_ir$1(Parser.scala:2157); 	at is.hail.expr.ir.IRParser$.parse(Parser.scala:2153); 	at is.hail.expr.ir.IRParser$.parse_value_ir(Parser.scala:2157); 	at is.hail.backend.spark.SparkBackend.$anonfun$parse_value_ir$2(SparkBackend.scala:691); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:76); 	at is.hail.utils.package$.using(package.scala:637); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:76); 	at is.hail.utils.package$.using(package.scala:637); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:62); 	at is.hail.backend.spark.SparkBackend.$anonfun$withExecuteContext$1(SparkBackend.scala:345); 	at is.hail.backend.spark.SparkBackend.$anonfun$parse_value_ir$1(SparkBackend.scala:690); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.utils.ExecutionTimer$.logTime(ExecutionTimer.scala:59); 	at is.hail.backend.spark.SparkBackend.parse_value_ir(SparkBackend.scala:689); 	at sun.reflect.GeneratedMethodAccessor193.invoke(Unknown Source); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182); 	at py4j.ClientServerConnection.run(ClientServerConnection.java:106); 	at java.lang.Thread.run(Thread.java:750). java.lang.ClassCastException: null; 	at . Hail version: 0.2.123-a21b8ad2f534; Error summary: ClassCastException: null; ```. ### Version. 0.2.123. ### Relevant log output. _No response_,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13693:2695,log,log,2695,https://hail.is,https://github.com/hail-is/hail/issues/13693,1,['log'],['log']
Testability,"scussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: 0.2.11. ### What you did: ./gradlew -Dspark.version=2.2.1 -Dspark.version=2.2.1 -Dpy4j.version=0.10.4 -Dbreeze.version=0.13.1 shadowJar. ### What went wrong (all error messages here, including the full java stack trace):; :compileJava UP-TO-DATE; :generateBuildInfo; :nativeLib; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux testutils/unit-tests.cpp -MG -M -MF build/testutils/unit-tests.d -MT build/testutils/unit-tests.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux test.cpp -MG -M -MF build/test.d -MT build/test.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux ibs.cpp -MG -M -MF build/ibs.d -MT build/ibs.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux davies.cpp -MG -M -MF build/davies.d -MT build/davies.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux cache-tests.cpp -MG -M -MF build/cache-tests.d -MT build/cache-tests.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5659:1109,test,test,1109,https://hail.is,https://github.com/hail-is/hail/issues/5659,1,['test'],['test']
Testability,"search(criteria)]; 262 if criteria(self):; 263 return others + [self]. File ~/.local/lib/python3.9/site-packages/hail/ir/base_ir.py:261, in IR.search(self, criteria); 260 def search(self, criteria):; --> 261 others = [node for child in self.children if isinstance(child, IR) for node in child.search(criteria)]; 262 if criteria(self):; 263 return others + [self]. File ~/.local/lib/python3.9/site-packages/hail/ir/base_ir.py:261, in <listcomp>(.0); 260 def search(self, criteria):; --> 261 others = [node for child in self.children if isinstance(child, IR) for node in child.search(criteria)]; 262 if criteria(self):; 263 return others + [self]. File ~/.local/lib/python3.9/site-packages/hail/ir/base_ir.py:261, in IR.search(self, criteria); 260 def search(self, criteria):; --> 261 others = [node for child in self.children if isinstance(child, IR) for node in child.search(criteria)]; 262 if criteria(self):; 263 return others + [self]. File ~/.local/lib/python3.9/site-packages/hail/ir/base_ir.py:261, in <listcomp>(.0); 260 def search(self, criteria):; --> 261 others = [node for child in self.children if isinstance(child, IR) for node in child.search(criteria)]; 262 if criteria(self):; 263 return others + [self]. File ~/.local/lib/python3.9/site-packages/hail/ir/base_ir.py:262, in IR.search(self, criteria); 260 def search(self, criteria):; 261 others = [node for child in self.children if isinstance(child, IR) for node in child.search(criteria)]; --> 262 if criteria(self):; 263 return others + [self]; 264 return others. File ~/.local/lib/python3.9/site-packages/hail/utils/misc.py:496, in process_joins.<locals>.<lambda>(a); 493 used_joins = set(); 495 for e in exprs:; --> 496 joins = e._ir.search(lambda a: isinstance(a, hail.ir.Join)); 497 for j in sorted(joins, key=lambda j: j.idx): # Make sure joins happen in order; 498 if j.idx not in used_joins:. AttributeError: module 'hail' has no attribute 'ir'; ```. ### Version. 0.2.119-ca0ff87b1687. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13230:7185,log,log,7185,https://hail.is,https://github.com/hail-is/hail/issues/13230,1,['log'],['log']
Testability,sed by: java.lang.AssertionError; Running test: Test method testEmptyKeys(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testEmptyKeys FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testUpperBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be)(is.hail.io.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:1763,test,testLowerBound,1763,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['testLowerBound']
Testability,see test for example.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7766:4,test,test,4,https://hail.is,https://github.com/hail-is/hail/pull/7766,1,['test'],['test']
Testability,"seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, gcs_requester_pays_configuration); 425 app_name = app_name or 'Hail'; 426 gcs_requester_pays_project, gcs_requester_pays_buckets = convert_gcs_requester_pays_configuration_to_hadoop_conf_style(gcs_requester_pays_configuration); --> 427 backend = SparkBackend(; 428 idempotent, sc, spark_conf, app_name, master, local, log,; 429 quiet, append, min_block_size, branching_factor, tmpdir, local_tmpdir,. TypeError: SparkBackend__init__() got an unexpected keyword argument 'gcs_requester_pays_project'`. - Hail was able to initialize by itself; `import hail as hl; print(hl.version()); hl.init()`; `0.2.112-31ceff2fb5fd; Running on Apache Spark version 3.3.2; SparkUI available at http://57ba6dc5f4a9:4040/; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.112-31ceff2fb5fd; LOGGING: writing to /content/hail-20230410-0617-0.2.112-31ceff2fb5fd.log`. ### Version. 0.2.112. ### Relevant log output. ```shell; using variant-spark jar at '/usr/local/lib/python3.9/dist-packages/varspark/jars/variant-spark_2.12-0.5.2-all.jar'; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-8-3d2ff0083f18> in <cell line: 3>(); 1 import hail as hl; 2 import varspark.hail as vshl; ----> 3 vshl.init(). 4 frames; <decorator-gen-1907> in init(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, backend, driver_cores, driver_memory, worker_cores, worker_memory, gcs_requester_pays_configuration, regions). <decorator-gen-1909> in init_spark(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, gc",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12859:2574,log,log,2574,https://hail.is,https://github.com/hail-is/hail/issues/12859,1,['log'],['log']
Testability,"separate nodes?). The type of a `Ref` node was already mutable to allow this sort of deferred annotation, and I've had to make a few other things mutable as well. Alternatively we could rebuild the entire IR to include type annotations, but I think the mutation is sufficiently well localized, and this is a common compiler pattern. This touches a lot of lines, but the high level changes are:; * Remove the `refMap` from the `IRParserEnvironment`, and remove all code that modifies the typing environment from the parser. Nodes like `Ref` that need a type from the environment get types set to `null`, to be filled in after parsing.; * Add `annotateTypes` pass to fill in type annotations from the environment. This is currently written in the parser, and always called after parsing. This means for the moment we can only parse type correct IR. But in the future we could move this to a separate stage of the compilation pipeline.; * Move typechecking logic on relational nodes from the constructors to a `typecheck` method, which is called from the `TypeCheck` pass.; * Make the `typ` field on IR nodes consistently lazy (or a def when the type is a child's type without modification). Before we sometimes did this for performance, but it's now required to avoid querying children's types during construction.; * Make types mutable on `AggSignature` and `ComparisonOp`, so they can be filled in after parsing.; * Ensure that the structure in `Binds.scala` satisfies the following invariant: to construct the typing environment of child `i`, we only need the types of children with index less than `i`. This was almost always satisfied already, and allows us to use the generic binds infrastucture in the pass to annotate types (where when visiting child `i`, we can only query types of already visited children).; * Change the text representation of `TailLoop`/`Recur` to move the explicit type annotation from `Recur` to `TailLoop`. This is necessary to comply with the previous point. It's also c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13990:2735,log,logic,2735,https://hail.is,https://github.com/hail-is/hail/pull/13990,1,['log'],['logic']
Testability,separate steps for Java and cpp codegen tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6194:40,test,tests,40,https://hail.is,https://github.com/hail-is/hail/pull/6194,1,['test'],['tests']
Testability,seqr-project.internal): org.apache.spark.SparkException: Task failed while writing rows; 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer.writeRows(WriterContainer.scala:261); 	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand$$anonfun$run$1$$anonfun$apply$mcV$sp$1.apply(InsertIntoHadoopFsRelationCommand.scala:143); 	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand$$anonfun$run$1$$anonfun$apply$mcV$sp$1.apply(InsertIntoHadoopFsRelationCommand.scala:143); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70); 	at org.apache.spark.scheduler.Task.run(Task.scala:86); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.methods.VEP$$anonfun$16$$anon$1.hasNext(VEP.scala:398); 	at is.hail.sparkextras.OrderedRDD$$anonfun$apply$7$$anon$2.hasNext(OrderedRDD.scala:211); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer$$anonfun$writeRows$1.apply$mcV$sp(WriterContainer.scala:253); 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer$$anonfun$writeRows$1.apply(WriterContainer.scala:252); 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer$$anonfun$writeRows$1.apply(WriterContainer.scala:252); 	at org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1348); 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer.writeRows(WriterContainer.scala:258); 	,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822:4619,Assert,AssertionError,4619,https://hail.is,https://github.com/hail-is/hail/issues/1822,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"ser=ci; uuid=f53f127847864f1cbf7d4bdc911a6646; Annotations: <none>; Status: Pending; IP: ; Containers:; main:; Container ID: ; Image: gcr.io/hail-vdc/ci-intermediate:oyyg6y2um4kx; Image ID: ; Port: <none>; Host Port: <none>; Command:; bash; -c; set -e; gcloud -q auth activate-service-account --key-file=/test-gsa-key/privateKeyData; gsutil -m cp -r /test/resources/* gs://hail-test-1c9nm/sj0nb47zqys1/pipeline/input/; State: Waiting; Reason: ContainerCreating; Ready: False; Restart Count: 0; Requests:; cpu: 100m; memory: 500M; Environment:; POD_IP: (v1:status.podIP); POD_NAME: batch-3-job-41-39d17b (v1:metadata.name); Mounts:; /gsa-key from gsa-key (rw); /test-gsa-key from test-gsa-key (rw); /var/run/secrets/kubernetes.io/serviceaccount from default-token-8h99c (ro); Conditions:; Type Status; Initialized True ; Ready False ; ContainersReady False ; PodScheduled True ; Volumes:; test-gsa-key:; Type: Secret (a volume populated by a Secret); SecretName: test-gsa-key; Optional: false; gsa-key:; Type: Secret (a volume populated by a Secret); SecretName: ci-gsa-key; Optional: false; default-token-8h99c:; Type: Secret (a volume populated by a Secret); SecretName: default-token-8h99c; Optional: false; QoS Class: Burstable; Node-Selectors: <none>; Tolerations: node.kubernetes.io/not-ready:NoExecute for 300s; node.kubernetes.io/unreachable:NoExecute for 300s; preemptible=true; Events:; Type Reason Age From Message; ---- ------ ---- ---- -------; Normal Scheduled 13m default-scheduler Successfully assigned batch-pods/batch-3-job-41-39d17b to gke-vdc-preemptible-pool-9c7148b2-1f89; Warning FailedCreatePodSandBox 13m kubelet, gke-vdc-preemptible-pool-9c7148b2-1f89 Failed create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container ""99ac9edad98221dbfaf4ab8eb443bc6d3fdc6df84164594469900813652fd913"" network for pod ""batch-3-job-41-39d17b"": NetworkPlugin kubenet failed to set up pod ""batch-3-job-41-39d17b_batch-pods"" network: Error adding container to network",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6625:1476,test,test-gsa-key,1476,https://hail.is,https://github.com/hail-is/hail/issues/6625,2,['test'],['test-gsa-key']
Testability,sertionError: java.lang.ArrayIndexOutOfBoundsException: 3. 	at is.hail.check.GenProp1$$anonfun$apply$1.apply$mcVI$sp(Prop.scala:38); 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:160); 	at is.hail.check.GenProp1.apply(Prop.scala:26); 	at is.hail.check.Prop.check(Prop.scala:19); 	at is.hail.expr.ir.OrderingSuite.testBinarySearchOnDict(OrderingSuite.scala:357); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123); Caused by: java.lang.ArrayIndexOutOfBoundsException: 3; 	at scala.collection.mutable.Wra,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5630:1200,Test,TestMethodWorker,1200,https://hail.is,https://github.com/hail-is/hail/issues/5630,1,['Test'],['TestMethodWorker']
Testability,"server. I'm glad this gets rid of that. ### Accessing the database server; We use the DB pod's service DNS name as the `host` so inside Kubernetes this Just Works. The one caveat is the CI pipeline in which we run migrations in batch jobs. Those jobs need a way to reach the DB pod. I achieve this with a NodePort and then use the job's K8s credentials to resolve the node and port that the DB is on. The code I've added to do this resolution feels a bit janky, wouldn't mind some feedback on that. In terms of security, if a user job was able to somehow resolve the address of a test db, they would still not have the credentials to access it, and this is currently also the case with the production database. Nevertheless, this does raise an action item that we should only allow traffic to the k8s and DB subnets for `network=private` jobs, but I think we should make that a separate PR. ### Database creation; In order to test this properly in a dev deploy, I needed to make some changes to `create_database.py`. In main, dev deploys can't create databases. I think they should be able to, and those operations should just be idempotent. When allowing dev deploys to create databases, I hit the `ALTER USER` lines in `create_database.py` which lock out any already-deployed application, which feels silly. Instead, I create the mysql user and create the corresponding secret iff the mysql username does not already exist. ### create_initial_account.py; When starting off with a fresh database, we encounter a bootstrapping problem where we need to add the developer's user. The current way to add the developer's user is through `create_initial_account.py` which assumes that the developer's gsa key secret is not already in the namespace, but now it could be, so I delete the key in the namespace if it exists before creating it. This could all change with my other PR to add devs to test namespaces. But this change to allow ephemeral dev databases will make testing that other PR *way* easier.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13030:2855,test,test,2855,https://hail.is,https://github.com/hail-is/hail/pull/13030,2,['test'],"['test', 'testing']"
Testability,"service] make user cache thread-safe; - [ ] (@tpoterba) c315fcb0b1 [query-service] bugfix: preserve globals through a shuffle; - [ ] (@catoverdrive) 912c21f709 [shuffler] log ShuffleCodecSpec anytime it is created; - [x] (@daniel-goldstein) c2495837e7 [scala-lsm] bugfix: least key may equal greatest key; - [x] (@daniel-goldstein) 5fb3db703e [services] discovered new transient error; - [x] (@daniel-goldstein) 9cd0999938 [shuffler] more assertions in ShuffleClient; - [x] (@daniel-goldstein) a71a3c9b8c [shuffler] bugfix: shuffler needs a HailContext to decode loci; - [x] (@daniel-goldstein) 41b06aeaa8 [query-service] move hail.jar earlier in Dockerfile; - [x] (@daniel-goldstein) 8df4029698 [query-service] permit pod scaling and remove cpu limit; - [ ] (@catoverdrive) 0354e1f557 [query-service] simplify socket handling; - [x] (@jigold) 6690a4decc [batch] teach JVMJob where to find the hail configuration files; - [x] (@daniel-goldstein) ae2e3d2996 [query-service] switch to services team approved logging; - [ ] (@tpoterba) b18f86e647 [query-service] query workers need a hail context; - [ ] (@daniel-goldstein, @catoverdrive) 6d5d0b68af [query-service] use a UNIX Domain Socket for Py-Scala communication; - [ ] (@daniel-goldstein, @catoverdrive) 0d42df8b08 [query-service] run tests against query service; - [x] (@jigold) f9d361e686 [query-service] aiohttp.ClientSession must be created in async code; - [ ] (@cseed) c35f2e10e3 [query-service][hail][build.yaml] address miscellaneous comments from cotton; - [x] (@daniel-goldstein) 7f1b1363e9 [query-service] use two containers sharing an empty volume; - [x] (@daniel-goldstein) 2a8f23404a [query-service] in the service, log everything to stdout; - [x] (trivial) d8104a1dc4 [query-service] do not catch CancelledError; - [x] (trivial) efcb345185 [query-service] slightly more useful error message when socket dies; - [ ] (@tpoterba) f79c4023cf [shuffler] if we have an ExecuteContext, use it; - [x] (@daniel-goldstein,fyi: @tpoterba) 259f",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10100:1485,log,logging,1485,https://hail.is,https://github.com/hail-is/hail/pull/10100,2,"['log', 'test']","['logging', 'tests']"
Testability,set content-type: text/plain on uploaded logs,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4536:41,log,logs,41,https://hail.is,https://github.com/hail-is/hail/pull/4536,1,['log'],['logs']
Testability,"sets of intervals. The visual conception of the partitioning of this matrix table (with its globals, column margin data, row margin data, and entry data) might look like:. ```; +--+ +-----+--+--++---+------+------+; | | | | | || | | |; +--+ +-----+--+--++---+------+------+. ck1 ck2 ...; +--+ rk1 +-----+--+--++---+------+------+; | | | | | || | | |; | | | | | || | | |; +--+ rk2 +-----+--+--++---+------+------+; | | | | | || | | |; +--+ ... +-----+--+--++---+------+------+; | | | | | || | | |; | | | | | || | | |; | | | | | || | | |; +--+ +-----+--+--++---+------+------+; | | | | | || | | |; | | | | | || | | |; +--+ +-----+--+--++---+------+------+; +--+ +-----+--+--++---+------+------+; | | | | | || | | |; | | | | | || | | |; | | | | | || | | |; +--+ +-----+--+--++---+------+------+; ```. The first row-key interval is `[rk1, rk2)`. The first col-key interval is `[ck1, ck2)`. These intervals are define a ""rectangle"" corresponding to the first partition. . All the partitions in the fourth partition column are empty (perhaps these column keys are absent in this dataset). Likewise, all the partitions in the fifth partition row are empty. ---. Global values are still global and must be stored in memory for each partition. The columns table becomes a distributed table like the rows table. Its partitioning must match the column partitioning of the blocks. `annotate_cols` and `aggregate_cols` become distributed operations. The rows table is mostly unchanged. `annotate_rows` and `annotate_cols`, when used with aggregation, become symmetric. They both aggregate across partitions as column aggregation did before. `annotate_entries`, `annotate_rows` with aggregation, and `annotate_cols` with aggregation now read the corresponding row and column partition. Each row partition is read once per column block. Similarly for column partitions. In particular, we need not load the entire column table into RAM for each partition. ### Version. 0.2.124. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13800:2830,log,log,2830,https://hail.is,https://github.com/hail-is/hail/issues/13800,1,['log'],['log']
Testability,"setup.py opens the requirements.txt file, because of this it must be in any source distribution. This will become more relevant as we start distributing more (any) native code, reducing the number of platforms where `pip install hail` installs a binary distribution. tested manually with:; ```; make copy-py-files; cd build/deploy; python3 setup.py sdist; cd dist; tar xf hail-0.2.64.tar.gz; cd hail-0.2.64; python setup.py bdist_wheel; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10339:267,test,tested,267,https://hail.is,https://github.com/hail-is/hail/pull/10339,1,['test'],['tested']
Testability,"shed to avoid using code generation abstractions (in this case, just factoring code into smaller functions), because they generate worse code.). The method is pretty simple. SNDArray shapes are now arrays of `SizeValue`, which is a sum type with cases `SizeValueDyn(Value[Long])` and `SizeValueStatic(Long)`. I don't think static sizes occur very often, but it was a simple addition. `SizeValue`s can be compared statically with `==`, or at runtime with `ceq`: the former is true only if we can prove statically that the two sizes must be equal, while the latter emits code to check equality at runtime, using static knowledge to elide dynamic checks where possible. The way we encode static knowledge that two sizes are equal is by using the same local variable to store both. The primary interface to introduce that static knowledge (other than using the same set of sizes to construct multiple SNDArrays), is the method `coerceToShape(cb: CodeBuilder, newShape: Seq[SizeValue]): SNDArrayValue`, which emits code to dynamically assert that `this.shape` agrees with `newShape`, then returns `this` with shape replaced by `newShape`. Thus, `a.coerceToShape(cb, newShape).shape == newShape` will always be true, preserving the static knowledge about the shape of `a`. As a simple example, `gemm` verifies its inputs with (simplifying to the case with no transposes); ```; val Seq(m, n) = C.shapes; val k = A.shapes(1); A.assertHasShape(cb, FastIndexedSeq(m, k), errMsg); B.assertHasShape(cb, FastIndexedSeq(k, n), errMsg); ```; If we call this with; ```; val m, n, k = \\ compute expected dim sizes. \\ emit dynamic size checks once; val A_ = A.coerceToShape(cb, IndexedSeq(m, k)); val B_ = B.coerceToShape(cb, IndexedSeq(k, n)); val C_ = C.coerceToShape(cb, IndexedSeq(m, n)). \\ this generates no new dynamic shape checks; SNDArray.gemm(cb, A, B, C); ```; then we can emit one set of runtime shape assertions, and further calls to methods with shape preconditions generate no new runtime assertions.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10783:1723,assert,assertHasShape,1723,https://hail.is,https://github.com/hail-is/hail/pull/10783,4,['assert'],"['assertHasShape', 'assertions']"
Testability,"shing when a type guard import fails to resolve</li>; <li>When resolving type guard imports if the target module does not have source code (such is the case for C-extension; modules) do nothing instead of crashing</li>; </ul>; <h2>1.15.1</h2>; <ul>; <li>Fix <code>fully_qualified</code> should be <code>typehints_fully_qualified</code></li>; </ul>; <h2>1.15.0</h2>; <ul>; <li>Resolve type guard imports before evaluating annotations for objects</li>; <li>Remove <code>set_type_checking_flag</code> flag as this is now done by default</li>; <li>Fix crash when the <code>inspect</code> module returns an invalid python syntax source</li>; <li>Made formatting function configurable using the option <code>typehints_formatter</code></li>; </ul>; <h2>1.14.1</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/73aa9b6aea40720ca270b1107c1980b909943cb3""><code>73aa9b6</code></a> Fix mock imports on guarded imports (<a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/issues/225"">#225</a>)</li>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/4d5867d5a235040b3e7d3373a56c5b2b580db7b7""><code>4d5867d</code></a> Handle UnionType (<a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/issues/221"">#221</a>)</li>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/13ca2b458b0ee9c8d1c980b6a5e97a6ee78f46c7""><code>13ca2b4</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/issues/226"">#226</a>)</li>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/def37f75a11237a3889c9179d17a6635f8062604""><code>def37f7</code></a> Support and require nptyping 2</li>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/ede082a858e1f7353cc502fd89a80736b",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11773:2516,mock,mock,2516,https://hail.is,https://github.com/hail-is/hail/pull/11773,1,['mock'],['mock']
Testability,"shoudn't be terribly surprising that `rand_unif` has weird behavior, but here's a case that is definitely The Wrong Thing:. ```; Python 3.6.0 |Continuum Analytics, Inc.| (default, Dec 23 2016, 13:19:00); Type 'copyright', 'credits' or 'license' for more information; IPython 7.6.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import hail as hl. In [2]: r = hl.rand_unif(0, 1). In [3]: hl.eval(r); Out[3]: 0.5387579341676381. In [4]: hl.eval(hl.tuple([r, r])); Out[4]: (0.5387579341676381, 0.5387579341676381); ```. okay, this makes sense becuase they have the same seed:; ```; In [5]: print(hl.tuple([r, r])._ir); (MakeTuple (0 1) (ApplySeeded rand_unif 806694938962853089 Float64 (Apply toFloat64 Float64 (I32 0)) (Apply toFloat64 Float64 (I32 1))) (ApplySeeded rand_unif 806694938962853089 Float64 (Apply toFloat64 Float64 (I32 0)) (Apply toFloat64 Float64 (I32 1)))); ```. how about this:; ```; In [6]: hl.eval(hl.range(2).map(lambda x: r)); Out[6]: [0.5387579341676381, 0.9394799645512691]; ```. odd. but maybe rand_unif inside an iteration has some semantics for advancing the RNG (like an aggregation). ```; In [7]: p = 1 - r. In [8]: hl.eval(hl.range(2).map(lambda x: p)); Out[8]: [0.46124206583236194, 0.06052003544873086]; ```; ok... ```; In [9]: hl.eval((p, hl.range(2).map(lambda x: p))); Out[9]: (0.46124206583236194, [0.46124206583236194, 0.46124206583236194]); ```; wtf? . if you look in the logs, its explained by the fact that only the final IR triggers CSE:; ```; (Let __cse_1; (ApplyBinaryPrimOp Subtract; (ApplyIR toFloat64 Float64; (I32 1)); (ApplySeeded rand_unif 806694938962853089 Float64; (ApplyIR toFloat64 Float64; (I32 0)); (ApplyIR toFloat64 Float64; (I32 1)))); (MakeTuple (0 1); (Ref __cse_1); (ArrayMap __uid_5; (ArrayRange; (I32 0); (I32 2); (I32 1)); (Ref __cse_1)))); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7572:1423,log,logs,1423,https://hail.is,https://github.com/hail-is/hail/issues/7572,1,['log'],['logs']
Testability,simplified python normalization logic in pca,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2529:32,log,logic,32,https://hail.is,https://github.com/hail-is/hail/pull/2529,2,['log'],['logic']
Testability,simplify error handling logic,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1888:24,log,logic,24,https://hail.is,https://github.com/hail-is/hail/pull/1888,2,['log'],['logic']
Testability,"sing for years for sequence datasets, I now run into an error during parsing of certain lines from the VCF file. Specifically, the Hail outputs the error ""cannot set missing field for required type +PFloat64"". I was concerned that there may have been issues in the actual VCF file, and therefore I tested the script on older datasets that I managed to process without any problem previously; the error was recapitulated on all these old datasets. Therefore I do not think there is an intrinsic issue in the VCFs, but rather in the way the current version of Hail (inside the terra container) is parsing information from the lines. I was not capable of running older versions of the Terra container (1.0.x) because the versions of Hail implemented there are not compatible with the current version of Spark on Terra. . I hope you may have a solution to this irritating problem. I have added the scripts and logs below. . Thanks in advance,; Sean Jurgens. ### Version. 0.2.126-ee77707f4fab. ### Relevant log output. ```shell; ## PLEASE NOTE: to protect privacy as much as possible, I have removed almost all entries shown by the code, and for the few line entries that remain I have changed/randomized the numeric values. The order and structure is preserved for enrtries nonetheless. `#import libraries; import os; import hail as hl; from pprint import pprint. #### Start hail; hl.init(); hl.spark_context()`. /opt/conda/lib/python3.10/site-packages/hailtop/aiocloud/aiogoogle/user_config.py:44: UserWarning:. Reading spark-defaults.conf to determine GCS requester pays configuration. This is deprecated. Please use `hailctl config set gcs_requester_pays/project` and `hailctl config set gcs_requester_pays/buckets`. SLF4J: No SLF4J providers were found.; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.; SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.; SLF4J: Ignoring",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14102:1294,log,log,1294,https://hail.is,https://github.com/hail-is/hail/issues/14102,1,['log'],['log']
Testability,"sion?. Thank you for your services. My <bashrc>, <conf/spark-defaults.conf> and <./spark-env.sh> are below. **<.bashrc>**; ```; #SPARK; export SPARK_HOME=/home/edu1/tools/spark-2.2.0-bin-hadoop2.6; export PATH=$PATH:$SPARK_HOME/bin:$SPARK_HOME/python:$PATH; export PYTHONPATH=$HAIL_HOME/python:$SPARK_HOME/python:$(echo ${SPARK_HOME}/python/lib/py4j-*-src.zip):$PYTHONPATH. # Hail; export HAIL_HOME=/home/edu1/miniconda2/envs/Hail-on-spark/lib/python3.7/site-packages/hail; export PATH=$PATH:$HAIL_HOME/bin; export PYTHONPATH=$PYTHONPATH:$HAIL_HOME/python; export SPARK_CLASSPATH=$HAIL_HOME/backend/hail-all-spark.jar. # JAVA (I just can modify .bashrc, so This would not apply to java path.); export JAVA_HOME=/home/edu1/tools/jdk-1.8.0_231; export PATH=$PATH:$JAVA_HOME/bin; export CLASSPATH=$JAVA_HOME/lib/tools.jar. # Hadoop; export HADOOP_INSTALL=/home/edu1/tools/hadoop-2.6.0; export PAHT=$PATH:$HADOOP_INSTALL/bin; export LD_LIBRARY_PATH=$HADOOP_INSTALL/lib/native; ```; **</spark/conf/spark-defaults.conf>**; ```; spark.master spark://training.server:7077. spark.serializer org.apache.spark.serializer.KryoSerializer; spark.kryo.registrator is.hail.kryo.HailKryoRegistrator; spark.speculation True. spark.driver.memory 37414m; spark.executor.memory 37414m; spark.executor.instances 1. spark.driver.extraClassPath /home/edu1/miniconda2/envs/Hail-on-spark/lib/python3.7/site-packages/hail/backend/hail-all-spark.jar; spark.executor.extraClassPath /home/edu1/miniconda2/envs/Hail-on-spark/lib/python3.7/site-packages/hail/hail-all-spark.jar; spark.jars /home/edu1/miniconda2/envs/Hail-on-spark/lib/python3.7/site-packages/hail/backend/hail-all-spark.jar. spark.eventLog.enabled true; spark.history.fs.logDirectory file:/tmp/spark-events; spark.enevtLog.dir file:/tmp/spark-events. spark.ui.reverseProxy true; spark.ui.reverseProxyUrl spark://training.server/spark; spark.executor.extraJavaOptions -Dlog4j.debug=true; ```; **</spark/conf/spark-env.sh>**; ```; export SPARK_WORKER_INSTANCES=1; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/10590:2760,log,logDirectory,2760,https://hail.is,https://github.com/hail-is/hail/issues/10590,1,['log'],['logDirectory']
Testability,"small improvements to BlockMatrix write logic, added add / subtract to Python",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2861:40,log,logic,40,https://hail.is,https://github.com/hail-is/hail/pull/2861,1,['log'],['logic']
Testability,"so the scan operations are just built in to MatrixMapRows, MatrixMapCols, TableMapRows, as an alternative to #3855. I had to modify the CompileWithAggregators interface slightly so that aggregations could be extracted in multiple steps. This lets us have aggregations within a scan expression pretty easily. I've implemented scans in MatrixMapRows for testing but plan to save the MatrixMapCols and TableMapRows implementation for a separate PR since this one is getting large.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3874:352,test,testing,352,https://hail.is,https://github.com/hail-is/hail/pull/3874,1,['test'],['testing']
Testability,"so using the basic usage of the vds on a small data set with a single region, . ```; result = vds.aggregate_intervals('region_test.log',; 'n_total = variants.count()','out.log'); ```; ; has an out.log file like so . ```; Contig Start End [Ljava.lang.String;@1787beef; 22	16050213 16050608 21; ```. As I understand it, the first line should have the header to the fourth column as n_total. Thought would give a heads up",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1567:131,log,log,131,https://hail.is,https://github.com/hail-is/hail/issues/1567,3,['log'],['log']
Testability,some header tweaks to speed up C++ IR tests a tad,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4868:38,test,tests,38,https://hail.is,https://github.com/hail-is/hail/pull/4868,1,['test'],['tests']
Testability,some version of `hl.float('test')` that returns `None` if it can't be coerced (rather than throw `NumberFormatException`) would be super useful. or a regex check could also accomplish this (with a `case`).,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7408:27,test,test,27,https://hail.is,https://github.com/hail-is/hail/issues/7408,1,['test'],['test']
Testability,source_usage BlockBlob Hot 64 application/octet-stream 2023-06-09T12:43:36+00:00; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/1/i4CoSh/status.json BlockBlob Hot 1240 application/octet-stream 2023-06-09T12:43:36+00:00; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/2/31Owgv/main/log BlockBlob Hot 16626 application/octet-stream 2023-06-09T12:44:22+00:00; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/2/31Owgv/main/resource_usage BlockBlob Hot 680 application/octet-stream 2023-06-09T12:44:22+00:00; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/2/31Owgv/status.json BlockBlob Hot 4453 application/octet-stream 2023-06-09T12:44:22+00:00; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/bunch/dK3o5ZfXmYSkP5TA/specs BlockBlob Hot 1264 application/octet-stream 2023-06-09T12:43:37+00:00; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/bunch/dK3o5ZfXmYSkP5TA/specs.idx BlockBlob Hot 16 application/octet-stream 2023-06-09T12:43:37+00:00; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/bunch/eOrFpVrN98GBIizi/specs BlockBlob Hot 1264 application/octet-stream 2023-06-09T12:43:34+00:00; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/bunch/eOrFpVrN98GBIizi/specs.idx BlockBlob Hot 16 application/octet-stream 2023-06-09T12:43:34+00:00; ```. I looked at the status:. ```; az storage blob download --account-name haildevtest --container test --name batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/2/31Owgv/status.json | jq '.' | less; ```. which contained an error (I un-escaped the string here):. ```; JVMUserError: java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.lang.reflect.InvocationTargetException; 	at java.util.concurrent.FutureTask.report(FutureTask.java:122); 	at java.util.concurrent.FutureTask.get(FutureTask.java:192); 	at is.hail.JVMEntryway.retrieveException(JVMEntryway.java:253); 	at is.hail.JVMEntryway.finishFutures(JVMEntryway.java:215); 	at is.hail.JVMEntryway.main(JVMEntryway.java:185); Caused by: java.lang.RuntimeException: java.lang.reflect.InvocationTargetException; 	a,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13160:3159,log,logs,3159,https://hail.is,https://github.com/hail-is/hail/pull/13160,2,['log'],['logs']
Testability,"sp-5k.hg38.tileDB.recalibrate_SNP.chr22.biallelic.4795samples.g.vcf.bgz').write('/project/casa/vdf.5k/test.vdf'). ### What went wrong (all error messages here, including the full java stack trace):; Error summary: ClassNotFoundException: is.hail.utils.SerializableHadoopConfiguration; Running on Apache Spark version 2.2.0; SparkUI available at http://10.48.225.55:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version devel-abac611; NOTE: This is a beta version. Interfaces may change; during the beta period. We also recommend pulling; the latest changes weekly.; [Stage 1:======================================================>(243 + 1) / 244]2018-04-10 09:30:24 Hail: INFO: Coerced sorted dataset; Traceback (most recent call last):; File ""/restricted/projectnb/genpro/github/hail/test.py"", line 3, in <module>; hl.import_vcf('/project/casa/vcf.5k/gatk.hc/adsp-5k.hg38.tileDB.recalibrate_SNP.chr22.biallelic.4795samples.g.vcf.bgz').write('/project/casa/vdf.5k/test. vdf'); File ""<decorator-gen-546>"", line 2, in write; File ""/restricted/projectnb/genpro/github/hail/build/distributions/hail-python.zip/hail/typecheck/check.py"", line 481, in _typecheck; File ""/restricted/projectnb/genpro/github/hail/build/distributions/hail-python.zip/hail/matrixtable.py"", line 1956, in write; File ""/share/pkg/spark/2.2.0/install/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/restricted/projectnb/genpro/github/hail/build/distributions/hail-python.zip/hail/utils/java.py"", line 196, in deco; hail.utils.java.FatalError: ClassNotFoundException: is.hail.utils.SerializableHadoopConfiguration. Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 6 in stage 2.0 failed 4 times, most recent failure: Lost task 6.3 in stage 2.0 (TID 2 53, scc-q15.scc.bu.edu, executor 1): java.io.IOException: com.esotericsoftware.kryo.KryoException: Error during Java deserialization.; at org.apache.spark.util.Utils$.t",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3342:1605,test,test,1605,https://hail.is,https://github.com/hail-is/hail/issues/3342,1,['test'],['test']
Testability,specify how to find lmmreg delta table in log file,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2667:42,log,log,42,https://hail.is,https://github.com/hail-is/hail/pull/2667,1,['log'],['log']
Testability,"sprojects.com/en/2.10.x/changelog/#version-2-10-3"">http://jinja.palletsprojects.com/en/2.10.x/changelog/#version-2-10-3</a></li>; </ul>; <h2>2.10.2</h2>; <ul>; <li>Changes: <a href=""http://jinja.palletsprojects.com/en/2.10.x/changelog/#version-2-10-2"">http://jinja.palletsprojects.com/en/2.10.x/changelog/#version-2-10-2</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pallets/jinja/blob/master/CHANGES.rst"">jinja2's changelog</a>.</em></p>; <blockquote>; <h2>Version 2.11.3</h2>; <p>Released 2021-01-31</p>; <ul>; <li>Improve the speed of the <code>urlize</code> filter by reducing regex; backtracking. Email matching requires a word character at the start; of the domain part, and only word characters in the TLD. :pr:<code>1343</code></li>; </ul>; <h2>Version 2.11.2</h2>; <p>Released 2020-04-13</p>; <ul>; <li>Fix a bug that caused callable objects with <code>__getattr__</code>, like; :class:<code>~unittest.mock.Mock</code> to be treated as a; :func:<code>contextfunction</code>. :issue:<code>1145</code></li>; <li>Update <code>wordcount</code> filter to trigger :class:<code>Undefined</code> methods; by wrapping the input in :func:<code>soft_str</code>. :pr:<code>1160</code></li>; <li>Fix a hang when displaying tracebacks on Python 32-bit.; :issue:<code>1162</code></li>; <li>Showing an undefined error for an object that raises; <code>AttributeError</code> on access doesn't cause a recursion error.; :issue:<code>1177</code></li>; <li>Revert changes to :class:<code>~loaders.PackageLoader</code> from 2.10 which; removed the dependency on setuptools and pkg_resources, and added; limited support for namespace packages. The changes caused issues; when using Pytest. Due to the difficulty in supporting Python 2 and; :pep:<code>451</code> simultaneously, the changes are reverted until 3.0.; :pr:<code>1182</code></li>; <li>Fix line numbers in error messages when newlines are stripped.; :pr:<code>1178</c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10209:3228,mock,mock,3228,https://hail.is,https://github.com/hail-is/hail/pull/10209,1,['mock'],['mock']
Testability,"ss/releases/tag/3.6.2"">3.6.2</a>. [#302 by Anthony Sottile]</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/sass/libsass-python/blob/master/docs/changes.rst"">libsass's changelog</a>.</em></p>; <blockquote>; <h1>Changelog</h1>; <h2>Version 0.21.1</h2>; <p>Released on May 20, 2021.</p>; <ul>; <li>Fix build on OpenBSD. [:issue:<code>310</code> by Denis Fondras].</li>; <li>Produce abi3 wheels on windows. [:issue:<code>322</code> by Anthony Sottile]</li>; <li>Make the manpage build reproducible. [:issue:<code>319</code> by Chris Lamb]</li>; <li>Follow up the libsass upstream: 3.6.5 --- See the release notes of LibSass; 3.6.5__. [:issue:<code>344</code> by Anthony Sottile]</li>; </ul>; <p>__ <a href=""https://github.com/sass/libsass/releases/tag/3.6.5"">https://github.com/sass/libsass/releases/tag/3.6.5</a></p>; <h2>Version 0.20.1</h2>; <p>Released on August 27, 2020.</p>; <ul>; <li>(no changes, re-releasing to test build automation)</li>; </ul>; <h2>Version 0.20.0</h2>; <p>Released on May 1, 2020.</p>; <ul>; <li>Produce abi3 wheels on macos / linux [:issue:<code>307</code> by Anthony Sottile]</li>; <li>Follow up the libsass upstream: 3.6.4 --- See the release notes of LibSass; 3.6.4__. [:issue:<code>313</code> by Anthony Sottile]</li>; </ul>; <p>__ <a href=""https://github.com/sass/libsass/releases/tag/3.6.4"">https://github.com/sass/libsass/releases/tag/3.6.4</a></p>; <h2>Version 0.19.4</h2>; <p>Released on November 3, 2019.</p>; <ul>; <li>Follow up the libsass upstream: 3.6.3 --- See the release notes of LibSass; 3.6.3__. [:issue:<code>304</code> by Anthony Sottile]</li>; </ul>; <p>__ <a href=""https://github.com/sass/libsass/releases/tag/3.6.3"">https://github.com/sass/libsass/releases/tag/3.6.3</a></p>; <h2>Version 0.19.3</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/sass/libsass-p",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11508:2426,test,test,2426,https://hail.is,https://github.com/hail-is/hail/pull/11508,1,['test'],['test']
Testability,"ssages here, including the full java stack trace):; ```; testCppCodegen; :compileJava UP-TO-DATE; :generateBuildInfo; :nativeLib; tar -xzf libsimdpp-2.1.tar.gz; :compileScala UP-TO-DATE; :processResources UP-TO-DATE; :classes UP-TO-DATE; :compileTestJava UP-TO-DATE; :compileTestScala UP-TO-DATE; :processTestResources UP-TO-DATE; :testClasses UP-TO-DATE; :testCppCodegen; Running test: Test method testReadWrite(is.hail.annotations.AnnotationsSuite). Gradle suite > Gradle test > is.hail.annotations.AnnotationsSuite.testReadWrite FAILED; org.apache.spark.SparkException at AnnotationsSuite.scala:76; Caused by: java.lang.AssertionError; Running test: Test method testEmptyKeys(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testEmptyKeys FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:1158,Assert,AssertionError,1158,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['Assert'],['AssertionError']
Testability,"sspath. We cache jars on the local filesystem. I had to abandon the old approach for two reasons:. 1. Multiple JVMs race to download the JAR. In the new approach, the python worker process uses a; lock to ensure at most one coroutine is downloading a given version of a JAR at the same time. 2. The JVM assumes that a child ClassLoader does not redefine a class from the parent; ClassLoader. That's why ClassLoaders always prefer to load a class from the parent ClassLoader's; classes. When we decide to re-use JVMs or use a single multi-threaded JVM, we'll need to ensure the top-level; ClassLoader *does not have Hail on its classpath*. I looked briefly at this approach and found it; more work than the current approach. ---. My apologies for eliminating JVMProcess in this PR. It's an unrelated change which facilitated my; understanding worker.py. I essentially inlined JVMProcess into JVMJob and eliminated any duplicative; code. ---. After making this change I restored the tests. Some tests had bitrotted. In the process of fixing; those tests, I found a few other bugs. Fixing these lower-level bugs unlocked a number of new; tests. A couple tests (which were added since the service tests were removed) had to be marked as; failing. Here are the bugs I fixed:. 1. Correct the error message raised when tests are run in a non-main thread (we look for this; message and start an event loop for Hail's async code because asyncio refuses to start an event; loop in a non-main thread). 2. Use a `SafeRow` to copy the globals data out of a Region and into durable, GC'ed objects. 3. Re-enable serialization of GoogleStorageFS (including its private key, which we really shouldn't; do; Tim is working on it), which was broken (presumably) when we changed Scala versions. The; `var` modifier ensures the name is compiled as a JVM field. 4. Correctly convert from a `Byte` to an `Int`. By default `Byte` to `Int` conversion (which is done; automatically when you return a `Byte` from a function whos",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10390:1408,test,tests,1408,https://hail.is,https://github.com/hail-is/hail/pull/10390,1,['test'],['tests']
Testability,st > is.hail.io.IndexSuite.writeReadGivesSameAsInput[12]([Ljava.lang.String;@21ebf782) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[13]([Ljava.lang.String;@3bda762a)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[13]([Ljava.lang.String;@3bda762a) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[14]([Ljava.lang.String;@4898b38e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[14]([Ljava.lang.String;@4898b38e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[15]([Ljava.lang.String;@51684a)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[15]([Ljava.lang.String;@51684a) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[19]([Ljava.lang.String;@3e391ee2)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[19]([L,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:6835,test,test,6835,https://hail.is,https://github.com/hail-is/hail/issues/4718,2,"['Test', 'test']","['Test', 'test']"
Testability,st > is.hail.io.IndexSuite.writeReadGivesSameAsInput[13]([Ljava.lang.String;@3bda762a) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[14]([Ljava.lang.String;@4898b38e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[14]([Ljava.lang.String;@4898b38e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[15]([Ljava.lang.String;@51684a)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[15]([Ljava.lang.String;@51684a) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[19]([Ljava.lang.String;@3e391ee2)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[19]([Ljava.lang.String;@3e391ee2) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testCXXCodeFunctions(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testCXXCodeFu,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:7113,test,test,7113,https://hail.is,https://github.com/hail-is/hail/issues/4718,2,"['Test', 'test']","['Test', 'test']"
Testability,st > is.hail.io.IndexSuite.writeReadGivesSameAsInput[14]([Ljava.lang.String;@4898b38e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[15]([Ljava.lang.String;@51684a)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[15]([Ljava.lang.String;@51684a) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[19]([Ljava.lang.String;@3e391ee2)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[19]([Ljava.lang.String;@3e391ee2) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testCXXCodeFunctions(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testCXXCodeFunctions PASSED; Running test: Test method testNativeBuild(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeBuild PASSED; Running test: Test method testNativeCallSpeed(is.hail.nativecode.NativeCodeSuite). Gradle suite,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:7391,test,test,7391,https://hail.is,https://github.com/hail-is/hail/issues/4718,2,"['Test', 'test']","['Test', 'test']"
Testability,"st from GHSA-29gw-9793-fvw7</li>; <li><a href=""https://github.com/ipython/ipython/commit/e548ee23ac460a99901f1cd43b94ae84a35ec393""><code>e548ee2</code></a> Swallow potential exceptions from showtraceback() (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13934"">#13934</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/0694b08b436203817059ec7e7136cf8561a6f013""><code>0694b08</code></a> MAINT: mock slowest test. (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13885"">#13885</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/865591252a67c6907fe03228b4053305715286e6""><code>8655912</code></a> MAINT: mock slowest test.</li>; <li><a href=""https://github.com/ipython/ipython/commit/a011765b44febfb11bae122d2ed7db763621ac8f""><code>a011765</code></a> Isolate the attack tests with setUp and tearDown methods</li>; <li><a href=""https://github.com/ipython/ipython/commit/c7a9470e540392c575aac46c3ee5cf4fe5123eb1""><code>c7a9470</code></a> Add some regression tests for this change</li>; <li><a href=""https://github.com/ipython/ipython/commit/fd34cf5f1f6e243243c738c6e0cf62eb682c4d68""><code>fd34cf5</code></a> Swallow potential exceptions from showtraceback()</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.34.0...8.10.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.34.0&new-version=8.10.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12683:1842,test,tests,1842,https://hail.is,https://github.com/hail-is/hail/pull/12683,1,['test'],['tests']
Testability,"st); 366 return hail_event_loop().run_until_complete(; 367 init_batch(; 368 log=log,; (...); 383 ); 384 ); 385 if backend == 'spark':; --> 386 return init_spark(; 387 sc=sc,; 388 app_name=app_name,; 389 master=master,; 390 local=local,; 391 min_block_size=min_block_size,; 392 branching_factor=branching_factor,; 393 spark_conf=spark_conf,; 394 _optimizer_iterations=_optimizer_iterations,; 395 log=log,; 396 quiet=quiet,; 397 append=append,; 398 tmp_dir=tmp_dir,; 399 local_tmpdir=local_tmpdir,; 400 default_reference=default_reference,; 401 global_seed=global_seed,; 402 skip_logging_configuration=skip_logging_configuration,; 403 gcs_requester_pays_configuration=gcs_requester_pays_configuration,; 404 ); 405 if backend == 'local':; 406 return init_local(; 407 log=log,; 408 quiet=quiet,; (...); 414 gcs_requester_pays_configuration=gcs_requester_pays_configuration,; 415 ); File <decorator-gen-1762>:2, in init_spark(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, gcs_requester_pays_configuration); File /databricks/python/lib/python3.10/site-packages/hail/typecheck/check.py:584, in _make_dec.<locals>.wrapper(__original_func, *args, **kwargs); 581 @decorator; 582 def wrapper(__original_func: Callable[..., T], *args, **kwargs) -> T:; 583 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 584 return __original_func(*args_, **kwargs_); File /databricks/python/lib/python3.10/site-packages/hail/context.py:476, in init_spark(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, gcs_requester_pays_configuration); 467 app_name = app_name or 'Hail'; 468 (; 469 gcs_requester_pays_project,; 470 gcs_requester_pays_buckets,; (...)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14462:2816,log,log,2816,https://hail.is,https://github.com/hail-is/hail/issues/14462,1,['log'],['log']
Testability,"st); File ""/usr/local/lib/python3.6/dist-packages/aiohttp_session/__init__.py"", line 152, in factory; response = await handler(request); File ""/usr/local/lib/python3.6/dist-packages/prometheus_async/aio/_decorators.py"", line 42, in time_decorator; rv = await wrapped(*args, **kw); File ""/usr/local/lib/python3.6/dist-packages/gear/auth.py"", line 86, in wrapped; return await fun(request, userdata, *args, **kwargs); File ""/usr/local/lib/python3.6/dist-packages/batch/front_end/front_end.py"", line 383, in ui_get_job_log; 'job_log': await _get_job_log(request.app, batch_id, job_id, user); File ""/usr/local/lib/python3.6/dist-packages/batch/front_end/front_end.py"", line 112, in _get_job_log; job_log = await job._read_logs(); File ""/usr/local/lib/python3.6/dist-packages/batch/batch.py"", line 57, in _read_logs; return {k: v for k, v in await future_logs}; File ""/usr/local/lib/python3.6/dist-packages/batch/batch.py"", line 52, in _read_log_from_gcs; pod_log = await self.app['log_store'].read_gs_file(LogStore.container_log_path(self.directory, task_name)); File ""/usr/local/lib/python3.6/dist-packages/batch/log_store.py"", line 40, in read_gs_file; return await self.gcs.read_gs_file(uri); File ""/usr/local/lib/python3.6/dist-packages/batch/google_storage.py"", line 27, in read_gs_file; return await self._wrapped_read_gs_file(self, uri); File ""/usr/local/lib/python3.6/dist-packages/batch/google_storage.py"", line 37, in wrapped; **kwargs); File ""/usr/local/lib/python3.6/dist-packages/hailtop/utils/utils.py"", line 33, in blocking_to_async; thread_pool, lambda: fun(*args, **kwargs)); File ""/usr/lib/python3.6/concurrent/futures/thread.py"", line 56, in run; result = self.fn(*self.args, **self.kwargs); File ""/usr/local/lib/python3.6/dist-packages/hailtop/utils/utils.py"", line 33, in <lambda>; thread_pool, lambda: fun(*args, **kwargs)); File ""/usr/local/lib/python3.6/dist-packages/batch/google_storage.py"", line 53, in _read_gs_file; content = f.download_as_string(); File ""/usr/local/lib/pyth",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7412:4031,Log,LogStore,4031,https://hail.is,https://github.com/hail-is/hail/pull/7412,1,['Log'],['LogStore']
Testability,"st.collect</code> module - import from <code>pytest</code> directly.</li>; </ul>; <p>For more information consult; <a href=""https://docs.pytest.org/en/latest/deprecations.html"">Deprecations and Removals</a> in the docs.</p>; </li>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9437"">#9437</a>: Dropped support for Python 3.6, which reached <a href=""https://devguide.python.org/#status-of-python-branches"">end-of-life</a> at 2021-12-23.</p>; </li>; </ul>; <h2>Improvements</h2>; <ul>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/5192"">#5192</a>: Fixed test output for some data types where <code>-v</code> would show less information.</p>; <p>Also, when showing diffs for sequences, <code>-q</code> would produce full diffs instead of the expected diff.</p>; </li>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9362"">#9362</a>: pytest now avoids specialized assert formatting when it is detected that the default <code>__eq__</code> is overridden in <code>attrs</code> or <code>dataclasses</code>.</p>; </li>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9536"">#9536</a>: When <code>-vv</code> is given on command line, show skipping and xfail reasons in full instead of truncating them to fit the terminal width.</p>; </li>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9644"">#9644</a>: More information about the location of resources that led Python to raise <code>ResourceWarning</code>{.interpreted-text role=&quot;class&quot;} can now; be obtained by enabling <code>tracemalloc</code>{.interpreted-text role=&quot;mod&quot;}.</p>; <p>See <code>resource-warnings</code>{.interpreted-text role=&quot;ref&quot;} for more information.</p>; </li>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9678"">#9678</a>: More types are now accepted in the <code>ids</code> argument to <cod",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11571:1809,assert,assert,1809,https://hail.is,https://github.com/hail-is/hail/pull/11571,3,['assert'],['assert']
Testability,"st: Test method testCXXCodeFunctions(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testCXXCodeFunctions PASSED; Running test: Test method testNativeBuild(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeBuild PASSED; Running test: Test method testNativeCallSpeed(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeCallSpeed PASSED; Running test: Test method testNativeGlobal(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeGlobal PASSED; Running test: Test method testNativePtr(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativePtr PASSED; Running test: Test method testNativeUpcall(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeUpcall PASSED; Running test: Test method testObjectArray(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testObjectArray PASSED; Running test: Test method testShuffleAndJoinDoesntMemoryLeak(is.hail.expr.ir.TableIRSuite). Gradle suite > Gradle test > is.hail.expr.ir.TableIRSuite.testShuffleAndJoinDoesntMemoryLeak PASSED; Running test: Test method testBufferWriteReadDoubles(is.hail.annotations.UnsafeSuite). Gradle suite > Gradle test > is.hail.annotations.UnsafeSuite.testBufferWriteReadDoubles PASSED; Running test: Test method testCodec(is.hail.annotations.UnsafeSuite); #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007fe4a85738ec, pid=23790, tid=0x00007fe48cdfa700; #; # JRE version: OpenJDK Runtime Environment (8.0_181-b13) (build 1.8.0_181-8u181-b13-0ubuntu0.18.04.1-b13); # Java VM: OpenJDK 64-Bit Server VM (25.181-b13 mixed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:8956,test,test,8956,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['test']
Testability,"st; tmpfs 14.7G 0 14.7G 0% /proc/scsi; tmpfs 14.7G 0 14.7G 0% /sys/firmware; ```. Which isn't much larger than it was before the scaling tests. It appears to slowly increase the amount of memory it needs:; ```; 1 0 nobody S 30.9g103.7 1 11.5 /bin/prometheus --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus --web.console.libraries=/usr/share/prometheus/console_libraries --web.console.templates=/usr/share/prometheus/consoles --web.external; ```. caping out at 31.5 GB (the disk is 31.2 GB). Now, it is presumably trying to recover. It's been up for about 7 minutes. Still unavailable:; ```; /prometheus $ wget localhost:9090/monitoring/prometheus; Connecting to localhost:9090 (127.0.0.1:9090); wget: server returned error: HTTP/1.1 503 Service Unavailable; /prometheus $ ; ```. https://github.com/prometheus/prometheus/issues/5727#issuecomment-510818825; https://github.com/prometheus/prometheus/issues/4324#issuecomment-460243182. ```; # k logs -n monitoring prometheus-0 ; level=info ts=2019-07-31T15:45:51.990Z caller=main.go:286 msg=""no time or size retention was set so using the default time retention"" duration=15d; level=info ts=2019-07-31T15:45:51.991Z caller=main.go:322 msg=""Starting Prometheus"" version=""(version=2.10.0, branch=HEAD, revision=d20e84d0fb64aff2f62a977adc8cfb656da4e286)""; level=info ts=2019-07-31T15:45:51.991Z caller=main.go:323 build_context=""(go=go1.12.5, user=root@a49185acd9b0, date=20190525-12:28:13)""; level=info ts=2019-07-31T15:45:51.991Z caller=main.go:324 host_details=""(Linux 4.14.127+ #1 SMP Tue Jun 18 18:32:10 PDT 2019 x86_64 prometheus-0 (none))""; level=info ts=2019-07-31T15:45:51.991Z caller=main.go:325 fd_limits=""(soft=1048576, hard=1048576)""; level=info ts=2019-07-31T15:45:51.991Z caller=main.go:326 vm_limits=""(soft=unlimited, hard=unlimited)""; level=info ts=2019-07-31T15:45:51.993Z caller=main.go:645 msg=""Starting TSDB ...""; level=info ts=2019-07-31T15:45:51.994Z caller=web.go:417 component=web msg=""Start listening ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6773:2287,log,logs,2287,https://hail.is,https://github.com/hail-is/hail/issues/6773,1,['log'],['logs']
Testability,"stacked on 3 other ci2 PRs. - add heal logic; - add job log endpoint; - some simplifications: PRs have a watched branch target (which has a sha) and a source sha, but don't need the source branch. Got rid of FQSHA.; - Ran by hand, seems to work. Will add tests back once build is actually doing something non-trivial.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5814:39,log,logic,39,https://hail.is,https://github.com/hail-is/hail/pull/5814,3,"['log', 'test']","['log', 'logic', 'tests']"
Testability,stacked on: https://github.com/hail-is/hail/pull/6139. create test jwt-secret-key secret and corresponding Hail service accounts.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6140:62,test,test,62,https://hail.is,https://github.com/hail-is/hail/pull/6140,1,['test'],['test']
Testability,"stacks on #5540. Will re-assign when notebook2-no-svc is merged. This is needed because, unwittingly due to networking issues, or just having 2 open sessions, two notebooks could be created. If so, this would trigger the assert len(notebooks) == 1 and prevent the user from using the service again. Adresses: https://github.com/hail-is/hail/issues/5487. Relevant commits:; https://github.com/hail-is/hail/pull/5549/commits/901b1e16daeda9209424319ebbeea2b451862876. Once that goes in, a few small changes to notebook.py to store multiple notebooks in a session (and pass the notebooks array to templates), and then loop over the array in notebook-state.html (which retains all of the same per-notebook ui). . I also removed the explicit reachability check on refresh for {% if ready %}. I believe when you .watch(list_namespaced_pods), the first request gets up-to-date status, so no real need to separately check reachability on refresh (we could back port this to #5540 if needed). <img width=""607"" alt=""screen shot 2019-03-06 at 3 58 32 pm"" src=""https://user-images.githubusercontent.com/5543229/53919928-b28d8780-4028-11e9-8665-4d2a7c10c8cf.png"">. cc @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5549:221,assert,assert,221,https://hail.is,https://github.com/hail-is/hail/pull/5549,1,['assert'],['assert']
Testability,"static openapi file captured in api/openapi-spec (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/109179"">kubernetes/kubernetes#109179</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG Apps and Auth]</li>; <li>Fixes a regression in v1beta1 PodDisruptionBudget handling of &quot;strategic merge patch&quot;-type API requests for the <code>selector</code> field. Prior to 1.21, these requests would merge <code>matchLabels</code> content and replace <code>matchExpressions</code> content. In 1.21, patch requests touching the <code>selector</code> field started replacing the entire selector. This is consistent with server-side apply and the v1 PodDisruptionBudget behavior, but should not have been changed for v1beta1. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/108139"">kubernetes/kubernetes#108139</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG Auth and Testing]</li>; <li>Fix OpenAPI serialization of the x-kubernetes-validations field (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/108030"">kubernetes/kubernetes#108030</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG API Machinery]</li>; <li>A new field <code>omitManagedFields</code> has been added to both <code>audit.Policy</code> and <code>audit.PolicyRule</code>; so cluster operators can opt in to omit managed fields of the request and response bodies from; being written to the API audit log. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/94986"">kubernetes/kubernetes#94986</a>, <a href=""https://github.com/tkashem""><code>@​tkashem</code></a>) [SIG API Machinery, Auth, Cloud Provider and Testing]</li>; <li>A small regression in Service updates was fixed. The circumstances are so unlikely that probably nobody would ever hit it. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/104601"">kubernetes/kubernetes#10",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11957:1352,Test,Testing,1352,https://hail.is,https://github.com/hail-is/hail/pull/11957,1,['Test'],['Testing']
Testability,"status description is limited to like 120 characters, so I gave up on this a while ago, but never removed the code). - `.strip()` the GitHub token in case there are newlines. - print the SHA being deployed in the log statement. - add `hail-ci-build.sh` to CI, which just invokes `make test-in-cluster`(which in turn runs `test-in-cluster.sh`. - `test-in-cluster.sh` copies the secrets for testing to the expected locations and exposes the pod in which it is running with an internal service, recent changes to `site` [redirect sub URLs of ci.test.is to services named using this scheme](https://github.com/hail-is/hail/blob/master/site/hail.nginx.conf#L38-L41). GitHub uses these URLs to send updates to the CI under test about the watched repositories. - `test-locally.sh` now installs `../batch` into the currently running `pip` before testing (NB: if you edit batch and run the tests without committing the changes you've made to batch, this will pass tests but fail when pushed to a PR!). - `test-locally.sh` activates the `hail-ci` conda environment itself because it was not being propagated from the `Makefile`. I don't know why, but this is a simple fix. - `test-locally.sh` starts the ci after the repository is created. CI will print error messages if a watched repository doesn't exist. - `test/test-ci.py` now uses access tokens for all interaction with GitHub, previously it relied on the latent privileges that I and Cotton had in our environments. - `test/test-ci.py` uses a temporary, but not automatically deleted, directory when the environment variable `IN_CLUSTER` is set to `true` (to which it is set by `test-in-cluster.sh`). I noticed that, when running in a batch job pod, if an error occurred, `pytest` failed to print any error information and instead failed because the current working directory no longer existed. I found very little information on Google about this. It seems safe to not clean up temporary directories created in the batch job pod because pods are ephemer",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4474:1362,test,test-locally,1362,https://hail.is,https://github.com/hail-is/hail/pull/4474,1,['test'],['test-locally']
Testability,status is just status returned by worker; unify job /log and /status into single job page (batch2 and ci); include spec in GET job (api and ui) calls,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7530:53,log,log,53,https://hail.is,https://github.com/hail-is/hail/pull/7530,1,['log'],['log']
Testability,still needs test.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11086:12,test,test,12,https://hail.is,https://github.com/hail-is/hail/pull/11086,1,['test'],['test']
Testability,"stng/pull/2820"">cbeust/testng#2820</a></li>; <li>Refactoring by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2821"">cbeust/testng#2821</a></li>; <li>Fixing bug with DataProvider retry by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2822"">cbeust/testng#2822</a></li>; <li>Add config key for callback discrepancy behavior by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2823"">cbeust/testng#2823</a></li>; <li>Upgrading versions by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2824"">cbeust/testng#2824</a></li>; <li>Fix <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2770"">#2770</a>: FileAlreadyExistsException on copy by <a href=""https://github.com/melloware""><code>@​melloware</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2827"">cbeust/testng#2827</a></li>; <li>JarFileUtils.delete(File f) throw actual exception (instead of FileNotFound) when file cannot be deleted <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2825"">#2825</a> by <a href=""https://github.com/speedythesnail""><code>@​speedythesnail</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2826"">cbeust/testng#2826</a></li>; <li>GITHUB-2830 - Failsafe parameter.toString by <a href=""https://github.com/seregamorph""><code>@​seregamorph</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2831"">cbeust/testng#2831</a></li>; <li>Changing assertion message of the osgitest by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:4433,test,testng,4433,https://hail.is,https://github.com/hail-is/hail/pull/12665,1,['test'],['testng']
Testability,"such as chr13, it worked well in Terra. Since we will convert multiple plink files to hailmatrix table using Terra platform in future, I need to figure the problem out. Any advise would be appreciated. ### Version. 0.2.127. ### Relevant log output. ```shell; 2024/01/17 20:20:25 Starting container setup.; 2024/01/17 20:20:26 Done container setup.; 2024/01/17 20:20:27 Starting localization.; 2024/01/17 20:20:34 Localization script execution started...; 2024/01/17 20:20:34 Localizing input gs://fc-5a8938eb-1299-4afc-957f-afb53ef602b9/submissions/e8747e74-47d1-4f52-acfc-1ac7f81d79ba/VUMCBed2HailMatrix/683447d9-9342-4058-bcfc-ba21422d3121/call-Bed2HailMatrix/script -> /cromwell_root/script; 2024/01/17 20:20:36 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.bed -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.bed; 2024/01/17 20:59:18 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.fam -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.fam; 2024/01/17 20:59:18 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.bim -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.bim; Copying gs://hui-sandbox/ICA-AGD/plink1/chr12.fam...; / [0 files][ 0.0 B/910.3 KiB] / [1 files][910.3 KiB/910.3 KiB] Copying gs://hui-sandbox/ICA-AGD/plink1/chr12.bim...; / [1 files][910.3 KiB/369.7 MiB] - - [1 files][ 51.9 MiB/369.7 MiB] \ | | [1 files][107.6 MiB/369.7 MiB] / - - [1 files][162.3 MiB/369.7 MiB] \ \ [1 files][213.9 MiB/369.7 MiB] | / / [1 files][286.6 MiB/369.7 MiB] - \ \ [1 files][342.1 MiB/369.7 MiB] |; Operation completed over 2 objects/369.7 MiB.; | [2 files][369.7 MiB/369.7 MiB] 2024/01/17 20:59:27 Localization script execution complete.; 2024/01/17 20:59:38 Done localization.; 2024/01/17 20:59:39 Running user action: docker run -v /mnt/local-disk:/cromwell_root --entrypoint=/bin/bash hailgenetics/hail@sha256:3f22576793ce3161893aed2bd40949b1fc822d2b7e6517dc0ac993b62badaff8 /cromwell_root/script; Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=/cromwell_root/tmp.81879b1c; P",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14168:9918,sandbox,sandbox,9918,https://hail.is,https://github.com/hail-is/hail/issues/14168,1,['sandbox'],['sandbox']
Testability,"sues/1765"">#1765</a>)</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/3b8d137a113376d7dac9010b9207d435df2622f7""><code>3b8d137</code></a> docs: annotate all Option factory methods with their Nullability bounds (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1775"">#1775</a>)</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/ba49f9d903d1c68f2a67ea56489fc64907d7d31d""><code>ba49f9d</code></a> test(deps): update kms.version to v0.100.0 (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1774"">#1774</a>)</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/8c59c64ccf0dd7753467b4c0f0bcf5f4b49c5bf0""><code>8c59c64</code></a> fix: update GrpcStorageImpl#get(BlobId) to return null on 404 (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1772"">#1772</a>)</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/2770a38409e89f4f291ebf9ef23db0def0458b02""><code>2770a38</code></a> test(deps): update dependency org.mockito:mockito-core to v4.9.0 (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1773"">#1773</a>)</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/45b2b38c3850da1795a7fbd33e0560b949cb7810""><code>45b2b38</code></a> chore: use gcp-docuploader 0.6.3 (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1708"">#1708</a>) (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1769"">#1769</a>)</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/e0efa85c3cc7a0a092ab96a13f121b2d0e553c38""><code>e0efa85</code></a> test(deps): update dependency com.google.cloud:google-cloud-pubsub to v1.120....</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/feb9f06d7031915ce50a609f99a4d885e2b21f34""><code>feb9f06</code></a> test(deps): update dependency com.google.api.grpc:proto-google-cloud-pubsub-v...</li>; <",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12529:12314,test,test,12314,https://hail.is,https://github.com/hail-is/hail/pull/12529,1,['test'],['test']
Testability,"sues/6"">#6</a>...</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/19e6531068cf95d602054ff8638adcb79971d552""><code>19e6531</code></a> Fix crash on unbalanced tuple unpacking</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/2066cab9bbe43341b84014ac9610e275db586431""><code>2066cab</code></a> Bump pylint to 2.13.2, update changelog</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/6a25d7048edadc18a05e999021049ade86ef2bd9""><code>6a25d70</code></a> Better error message when we cant write the crash files (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5987"">#5987</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/c42fe73a1613bbfb52a5ba9129efa45a3fd76401""><code>c42fe73</code></a> Fix false negative for <code>protected-access</code> on functions (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5990"">#5990</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/dec241b1787e6c99a092bb9ef6a993abf51fea91""><code>dec241b</code></a> Add regression test for <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5982"">#5982</a> upgrade astroid to 2.11.2 (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5988"">#5988</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/b25859c4a56ccce61087f7a1270f40deaed68169""><code>b25859c</code></a> Fix false positive for <code>superfluous-parens</code> for <code>return (a or b) in iterable</code>...</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/0e1ca11ac65cbe5a65437518fca1e25f1ad0e48e""><code>0e1ca11</code></a> Bump pylint to 2.13.1, update changelog</li>; <li>Additional commits viewable in <a href=""https://github.com/PyCQA/pylint/compare/v2.12.2...v2.13.3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pylint&package-manager=pip&previous-version=2.12.2&new-version=2.13.3)](https://docs.github.c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11702:3984,test,test,3984,https://hail.is,https://github.com/hail-is/hail/pull/11702,1,['test'],['test']
Testability,support larger class of tests in linear,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/133:24,test,tests,24,https://hail.is,https://github.com/hail-is/hail/issues/133,1,['test'],['tests']
Testability,switched up module test setup,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3090:19,test,test,19,https://hail.is,https://github.com/hail-is/hail/pull/3090,1,['test'],['test']
Testability,"synchronous wrapper around; `hailtop.aiotools.fs.AsyncRouterFS`. A ""router"" file system is one which operates on URLs instead of; paths. It uses the URL's protocol to determine which concrete file system to use. For example, a; router fs can `open` both `gs://danking/abc` and `s3a://danking/abc`. Each Hail Query Python Backend is associated with one file system class. This PR associates the; ServiceBackend with `RouterFS`, enabling `hl.current_backend().fs.open`, `hl.hadoop_open`, etc. to; read from S3, GCS, ABS, and the local file system. We should deprecate `hail.utils.hadoop_utils`; because it is not Hadoop-specific. We should instead advertise the class-based `hail.fs` or create a; new function-based interface (e.g. `hl.fs.open(...)`. # Test Clean-up. The Hail Query local and spark tests should now work in Azure. I moved all the `hail.fs` and; `hailtop.aiotools.fs` tests into two build.yaml steps: `test_hail_python_fs` and; `test_hail_scala_fs`. These tests are exhaustive: they test every file system: S3, ABS, and GCS. The only file system tests that remain in the Hail Query tests are the tests of; `hail.utils.hadoop_utils`. The hadoop tests are not exhaustive: they only test the *current* file; system. In Azure, they test ABS. In Google, they test GCS. I have not decided yet if we should enable the hail python tests in Azure. It seems mostly wasteful. # Local Cache. I added a local cache directory. It defaults to `$XDG_CONFIG_HOME/hail/cache` or; `~/.config/hail/cache` if `XDG_CONFIG_HOME` is not set. I store Python reference genome metadata; here. # Batch Attributes. The ServiceBackend `batch_attributes` attribute specifies the attributes for any batch created by; the ServiceBackend. I modified the tests so that the test function name is use the ""name"" of the; batch. When a Hail Query driver job executes `parallelizeAndComputeWithIndex`, it uses its name with; a unique suffix as the name of the batch of worker jobs. # Changes to Hail Scala. I think the only cha",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11194:5819,test,tests,5819,https://hail.is,https://github.com/hail-is/hail/pull/11194,2,['test'],"['test', 'tests']"
Testability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0MmRjMDIwMC02MDI1LTQ1M2QtYWUxNC00NDRlZjM5MmU4NTciLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjQyZGMwMjAwLTYwMjUtNDUzZC1hZTE0LTQ0NGVmMzkyZTg1NyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""42dc0200-6025-453d-ae14-444ef392e857"",""prPublicId"":""42dc0200-6025-453d-ae14-444ef392e857"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.17"",""to"":""1.26.18""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-6002459""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[496],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13854:2660,log,logic,2660,https://hail.is,https://github.com/hail-is/hail/pull/13854,1,['log'],['logic']
Testability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3OWQ3MTdiYy05MThjLTRlMjctOGQ2OC0xNTNhNWIxZGFmM2YiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6Ijc5ZDcxN2JjLTkxOGMtNGUyNy04ZDY4LTE1M2E1YjFkYWYzZiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""79d717bc-918c-4e27-8d68-153a5b1daf3f"",""prPublicId"":""79d717bc-918c-4e27-8d68-153a5b1daf3f"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.17"",""to"":""1.26.18""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-6002459""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[496],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13850:2658,log,logic,2658,https://hail.is,https://github.com/hail-is/hail/pull/13850,1,['log'],['logic']
Testability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI4MmZhNTRjZC0yOGI4LTQ3OTUtYWFjNy02MDE0NjY3NjMwNTUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjgyZmE1NGNkLTI4YjgtNDc5NS1hYWM3LTYwMTQ2Njc2MzA1NSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""82fa54cd-28b8-4795-aac7-601466763055"",""prPublicId"":""82fa54cd-28b8-4795-aac7-601466763055"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.16"",""to"":""1.26.17""}],""packageManager"":""pip"",""projectPublicId"":""b72ce54d-5de3-48e5-a1d4-6f8967681a12"",""projectUrl"":""https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-5926907""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13771:2576,log,logic,2576,https://hail.is,https://github.com/hail-is/hail/pull/13771,1,['log'],['logic']
Testability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxNGQyZDIxMi00ZjI4LTQ0OGEtYWRkNS02NThkNDEwNzQxZDYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjE0ZDJkMjEyLTRmMjgtNDQ4YS1hZGQ1LTY1OGQ0MTA3NDFkNiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""14d2d212-4f28-448a-add5-658d410741d6"",""prPublicId"":""14d2d212-4f28-448a-add5-658d410741d6"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.17"",""to"":""1.26.18""}],""packageManager"":""pip"",""projectPublicId"":""b72ce54d-5de3-48e5-a1d4-6f8967681a12"",""projectUrl"":""https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-6002459""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[496],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13847:2576,log,logic,2576,https://hail.is,https://github.com/hail-is/hail/pull/13847,1,['log'],['logic']
Testability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxOGU4YzI4Yi1kYWQ0LTQ5ZDUtOTExNi04NjFkYTdkODk5OTYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjE4ZThjMjhiLWRhZDQtNDlkNS05MTE2LTg2MWRhN2Q4OTk5NiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""18e8c28b-dad4-49d5-9116-861da7d89996"",""prPublicId"":""18e8c28b-dad4-49d5-9116-861da7d89996"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.16"",""to"":""1.26.17""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-5926907""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13773:2660,log,logic,2660,https://hail.is,https://github.com/hail-is/hail/pull/13773,1,['log'],['logic']
Testability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiNzM0YmY4Ni1mNzQyLTQyMjMtOWVlYS1lNGU3ZjNmMTVlYWMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImI3MzRiZjg2LWY3NDItNDIyMy05ZWVhLWU0ZTdmM2YxNWVhYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""b734bf86-f742-4223-9eea-e4e7f3f15eac"",""prPublicId"":""b734bf86-f742-4223-9eea-e4e7f3f15eac"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.16"",""to"":""1.26.17""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-5926907""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13772:2590,log,logic,2590,https://hail.is,https://github.com/hail-is/hail/pull/13772,1,['log'],['logic']
Testability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiODhmOTA3Ny02ZjlmLTRiZjEtYjFiYy0yZjNkNTE1MDEwYWEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImI4OGY5MDc3LTZmOWYtNGJmMS1iMWJjLTJmM2Q1MTUwMTBhYSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""b88f9077-6f9f-4bf1-b1bc-2f3d515010aa"",""prPublicId"":""b88f9077-6f9f-4bf1-b1bc-2f3d515010aa"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.16"",""to"":""1.26.17""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-5926907""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13783:2652,log,logic,2652,https://hail.is,https://github.com/hail-is/hail/pull/13783,1,['log'],['logic']
Testability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmNDI4YzVjNi05NmZmLTQ1ZTMtYjY4ZC0zYzU5NjY3MjA3MGUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImY0MjhjNWM2LTk2ZmYtNDVlMy1iNjhkLTNjNTk2NjcyMDcwZSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""f428c5c6-96ff-45e3-b68d-3c596672070e"",""prPublicId"":""f428c5c6-96ff-45e3-b68d-3c596672070e"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.17"",""to"":""1.26.18""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-6002459""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[496],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13851:2652,log,logic,2652,https://hail.is,https://github.com/hail-is/hail/pull/13851,1,['log'],['logic']
Testability,"t array *must* be the JAR URL and the SHA-1 is confusing. Instead, there are now two keys in a JVM process specification:; 1. `jar_spec`, which may be either `{""type"": ""jar_url"", ""value"": ""gs://..../abc123....jar""}` or `{""type"":""git_revision"", ""value"": ""abc123...""}`.; 2. `argv`, an opaque list of strings which are passed, by the JVMEntryway, along with a few more args, to `is.hail.backend.service.Main`. The `Main` class dispatches to either `ServiceBackendSocketAPI2` or the `Worker` based on the first element of `argv`. Each class expects different contents in `argv` that suits its needs. Second, I completely eliminated the HAIL_SHA/revision from the Worker and Hail Query Java code. This was only ever used as unique name for the JAR. Instead, I just use the full JAR URL as a unique name for the JAR. If you need to defeat the cache, just create a new git commit before running `make -C query ipython`. If defeating the cache becomes a common problem, we can add a ""reload_jar"" parameter or similar to the job spec. Third, I renamed `push-jar` in `query/Makefile` to `upload-query-jar` to mirror the build.yaml step. Fourth, I embraced the use of `NAMEPSACE` in `query/Makefile` instead of relying on the minor hack that our laptop usernames match our namespace names. This does mean you need to always specify NAMESPACE when uploading a jar. Finally, a pleasant outcome of this change is the elimination of a bunch of conditional build.yaml logic in the service backend tests!. I think this will simplify the use of Hail Query by Australia et al. because I've isolated the use of hail-specific data to `query/Makefile`. If there's a way to access the relevant global-config variables from `query/Makefile`, I can also fix the `query/Makefile` to be deployment-independent. cc: @lgruen @illusional @tpoterba . [1] For our default namespace deployment, `gs://hail-query/jars/{GIT_REVISION}.jar`. In general, `{HAIL_QUERY_STORAGE_URI}{HAIL_QUERY_ACCEPTABLE_JAR_SUBFOLDER}/{GIT_REVISION}.jar`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11645:2887,log,logic,2887,https://hail.is,https://github.com/hail-is/hail/pull/11645,2,"['log', 'test']","['logic', 'tests']"
Testability,"t dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzNTM4YWIwOC03Yzk4LTRjMDUtOTQ0Ny0yMjYwYjliNjhmY2IiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjM1MzhhYjA4LTdjOTgtNGMwNS05NDQ3LTIyNjBiOWI2OGZjYiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""3538ab08-7c98-4c05-9447-2260b9b68fcb"",""prPublicId"":""3538ab08-7c98-4c05-9447-2260b9b68fcb"",""dependencies"":[{""name"":""pillow"",""from"":""9.5.0"",""to"":""10.0.1""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-PILLOW-5918878""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown""],""priorityScoreList"":[null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13708:2528,log,logic,2528,https://hail.is,https://github.com/hail-is/hail/pull/13708,1,['log'],['logic']
Testability,"t even attempt to fit.; - `max_iter == 1` means take one gradient step, if you've converged, then return successfully, otherwise fail.; - etc. The `main` branch currently always fails if you set `max_iter == 1`, even if the first step lands on the true maximum likelihood fit. I substantially refactored logistic regression. There were dead code paths (e.g. the covariates array is known to be non-empty). I also found all the function currying and comingling of fitting and testing really confusing. To be fair, the Scala code does this (and its really confusing). I think the current structure is easier to follow:. 1. Fit the null model.; 2. If wald, assume the beta for the genotypes is zero and use the rest of the parameters from the null model fit to compute the score (i.e. the gradient of the likelihood). Recall calculus: gradient near zero => value near the maximum. Return: this is the test.; 3. Otherwise, fit the full model starting at the null fit parameters.; 4. Test the ""goodness"" of this new & full fit. ---. Poisson regression is similar but with a different likelihood function and gradient thereof. Notice that I `key_cols_by()` to indicate to Hail that the order of the cols is irrelevant (the result is a locus-keyed table after all). This is necessary at least until #12753 merges. I think it's generally a good idea though: it indicates to Hail that the ordering of the columns is irrelevant, which is potentially useful information for the optimizer!. ---. Both logistic and Poisson regression can benefit from BLAS3 by running at least the score test for multiple variants at once. ---. I'll attach an image in the comments, but I spend ~6 seconds compiling this trivial model and ~140ms testing it. ```python3; import hail as hl; mt = hl.utils.range_matrix_table(1, 3); mt = mt.annotate_entries(x=hl.literal([1, 3, 10, 5])); ht = hl.poisson_regression_rows(; 'wald', y=hl.literal([0, 1, 1, 0])[mt.col_idx], x=mt.x[mt.col_idx], covariates=[1], max_iterations=2); ht.collec",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12793:1415,Test,Test,1415,https://hail.is,https://github.com/hail-is/hail/pull/12793,1,['Test'],['Test']
Testability,"t is resolved.</p>; <h2>pytest-asyncio 0.23.5a0</h2>; <h1>0.23.5 (UNRELEASED)</h1>; <ul>; <li>Declare compatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; <li>Fix typing errors with recent versions of mypy <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/769"">#769</a></li>; </ul>; <h2>Known issues</h2>; <p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706"">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.4</h2>; <h1>0.23.4 (2024-01-28)</h1>; <ul>; <li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729"">#729</a></li>; <li>Addresses further issues that caused an internal pytest error during test collection</li>; <li>Declares incompatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; </ul>; <h2>pytest-asyncio 0.23.4a2</h2>; <h1>0.23.4 (UNRELEASED)</h1>; <ul>; <li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729"">#729</a></li>; <li>Addresses further issues that caused an internal pytest error during test col",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14507:4956,test,test,4956,https://hail.is,https://github.com/hail-is/hail/pull/14507,2,['test'],"['test', 'tests']"
Testability,"t is.hail.methods.MendelErrors.nErrorPerNuclearFamily(MendelErrors.scala:144); 	at is.hail.methods.MendelErrors.fMendelKT(MendelErrors.scala:183); 	at is.hail.variant.MatrixTable.mendelErrors(MatrixTable.scala:1915); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:280); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:214); 	at java.lang.Thread.run(Thread.java:748). Hail version: devel-42db165; Error summary: AssertionError: assertion failed; ```; Pipeline (happens on the 2nd mendel_errrors):; ```; vds = vds.select_rows(vds.locus, vds.alleles); fam_kt = hl.import_fam(fam_file); vds = vds.annotate_cols(fam=fam_kt[vds.s]). # Unphased for now, since mendel_errors does not support phased alleles; vds = vds.annotate_entries(GT=hl.call(vds.GT[0], vds.GT[1], phased=False)); ped = hl.Pedigree.read(fam_file); tdt_table = hl.tdt(vds, ped); _, _, per_sample, per_variant = hl.mendel_errors(vds, ped); family_stats = Struct(mendel=per_variant[(vds.locus, vds.alleles)],; tdt=tdt_table[(vds.locus, vds.alleles)],; ac_unrelated_qc=hl.agg.sum(hl.agg.filter(; True & hl.is_missing(vds.fam.pat_id),; vds.GT.num_alt_alleles())),; meta={'group': 'raw'}); vds = vds.annotate_rows(family_stats=[family_stats]). vds = filter_to_adj(vds); adj_tdt_table = hl.tdt(vds, ped); _, _, adj_per_sample, adj_per_variant = hl.mendel_errors(vds, ped); family_stats_adj = Struct(mendel=adj_per_variant[(vds.locus, vds.alleles)],; tdt=adj_tdt_table[(vds.locus, vds.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3039:11636,Assert,AssertionError,11636,https://hail.is,https://github.com/hail-is/hail/issues/3039,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"t one pre-existing blank line (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2736"">#2736</a>)</li>; <li>Black now normalizes string prefix order (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2297"">#2297</a>)</li>; <li>Remove spaces around power operators if both operands are simple (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2726"">#2726</a>)</li>; <li>Work around bug that causes unstable formatting in some cases in the presence of the; magic trailing comma (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2807"">#2807</a>)</li>; <li>Use parentheses for attribute access on decimal float and int literals (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2799"">#2799</a>)</li>; <li>Don't add whitespace for attribute access on hexadecimal, binary, octal, and complex; literals (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2799"">#2799</a>)</li>; <li>Treat blank lines in stubs the same inside top-level <code>if</code> statements (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2820"">#2820</a>)</li>; <li>Fix unstable formatting with semicolons and arithmetic expressions (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2817"">#2817</a>)</li>; <li>Fix unstable formatting around magic trailing comma (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2572"">#2572</a>)</li>; </ul>; <h3>Parser</h3>; <ul>; <li>Fix mapping cases that contain as-expressions, like <code>case {&quot;key&quot;: 1 | 2 as password}</code>; (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2686"">#2686</a>)</li>; <li>Fix cases that contain multiple top-level as-expressions, like <code>case 1 as a, 2 as b</code>; (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2716"">#2716</a>)</li>; <li>Fix call patterns that contain as-expressions with keyword arguments, like; <code>case Foo(bar=baz as quux)</code> (<a href=""https://g",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11468:9096,stub,stubs,9096,https://hail.is,https://github.com/hail-is/hail/pull/11468,1,['stub'],['stubs']
Testability,"t will identify the correct version of mill to use for the project you're in and invoke that. For more details on the installation options, see the github for the wrapper script [here](https://github.com/lefou/millw). To verify that it's working, and download the actual mill jar, run `./millw --version` (or `mill --version` if you put it on your path) from the `hail/` subdirectory. It should report version `0.11.6`. ## Mill from the command line. * `mill clean` - delete all output files (in `hail/hail/out`). Or only delete the output of one target, e.g. `mill clean test.compile`; * `mill compile` - compiles the root module (not including tests); * `mill test.compile` - compiles tests (and, transitively, the rest of the root module); * `mill test.test`, or for short `mill test` - run all tests. You can pass options to the test runner (TestNG currently), e.g.* * `mill test -methods is.hail.expr.ir.CallFunctionsSuite.constructors` to run one test, or `mill test -threadcount 4 -parallel classes` to use 4 threads and parallelize over test classes; * `mill test.testOnly is.hail.expr.ir.CallFunctionsSuite` - run all tests in one or more specified classes. You can use `*` to match anything, e.g. `mill test.testOnly ""*.CallFunctionsSuite""`, or `mill test.testOnly ""is.hail.expr.ir.*""`. You can pass options to the test runner (TestNG currently) after a `--`, e.g. `mill test.testOnly ""is.hail.expr.ir.*"" -- -parallel classes`; * `mill __.testCached` - once the codebase is more modularized, will run tests on only modules whose dependencies have changed since the last test run; * `mill reformat` - runs scalafmt on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.reformat` runs scalaformat on all sources in all modules. `mill __.checkFormat` only checks for rule failures (we run this in ci); * `mill fix` - runs scalafix on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill _",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14147:1218,test,test,1218,https://hail.is,https://github.com/hail-is/hail/pull/14147,4,['test'],['test']
Testability,"t, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, gcs_requester_pays_configuration); 425 app_name = app_name or 'Hail'; 426 gcs_requester_pays_project, gcs_requester_pays_buckets = convert_gcs_requester_pays_configuration_to_hadoop_conf_style(gcs_requester_pays_configuration); --> 427 backend = SparkBackend(; 428 idempotent, sc, spark_conf, app_name, master, local, log,; 429 quiet, append, min_block_size, branching_factor, tmpdir, local_tmpdir,. TypeError: SparkBackend__init__() got an unexpected keyword argument 'gcs_requester_pays_project'`. - Hail was able to initialize by itself; `import hail as hl; print(hl.version()); hl.init()`; `0.2.112-31ceff2fb5fd; Running on Apache Spark version 3.3.2; SparkUI available at http://57ba6dc5f4a9:4040/; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.112-31ceff2fb5fd; LOGGING: writing to /content/hail-20230410-0617-0.2.112-31ceff2fb5fd.log`. ### Version. 0.2.112. ### Relevant log output. ```shell; using variant-spark jar at '/usr/local/lib/python3.9/dist-packages/varspark/jars/variant-spark_2.12-0.5.2-all.jar'; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-8-3d2ff0083f18> in <cell line: 3>(); 1 import hail as hl; 2 import varspark.hail as vshl; ----> 3 vshl.init(). 4 frames; <decorator-gen-1907> in init(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, backend, driver_cores, driver_memory, worker_cores, worker_memory, gcs_requester_pays_configuration, regions). <decorator-gen-1909> in init_spark(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent,",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12859:2464,LOG,LOGGING,2464,https://hail.is,https://github.com/hail-is/hail/issues/12859,1,['LOG'],['LOGGING']
Testability,"t-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706"">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.5a0</h2>; <h1>0.23.5 (UNRELEASED)</h1>; <ul>; <li>Declare compatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; <li>Fix typing errors with recent versions of mypy <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/769"">#769</a></li>; </ul>; <h2>Known issues</h2>; <p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706"">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.4</h2>; <h1>0.23.4 (2024-01-28)</h1>; <ul>; <li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729"">#729</a></li>; <li>Address",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14507:4494,test,test,4494,https://hail.is,https://github.com/hail-is/hail/pull/14507,1,['test'],['test']
Testability,"t.</h3>. #### Changes included in this PR. - Changes to the following files to upgrade the vulnerable dependencies to a fixed version:; - hail/python/pinned-requirements.txt. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **581/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 5.9 | Denial of Service (DoS) <br/>[SNYK-PYTHON-CRYPTOGRAPHY-5663682](https://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-5663682) | `cryptography:` <br> `40.0.2 -> 41.0.0` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhYmU2OWI5ZC1kMzViLTQ1Y2ItYWY2NS04ZDEwN2YxZWMzZmMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImFiZTY5YjlkLWQzNWItNDVjYi1hZjY1LThkMTA3ZjFlYzNmYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13139:1243,test,tested,1243,https://hail.is,https://github.com/hail-is/hail/pull/13139,1,['test'],['tested']
Testability,"t.dependabot.com/googleapis/python-logging/issues/456"">#456</a>) (<a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544"">8a67b73</a>)</li>; </ul>; <h2><a href=""https://www.github.com/googleapis/python-logging/compare/v2.6.0...v2.7.0"">2.7.0</a> (2021-11-02)</h2>; <h3>Features</h3>; <ul>; <li>add context manager support in client (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/415"">#415</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/f5af16439807a0954ee78fa91cb69b9493b80176"">f5af164</a>)</li>; <li>added support for iam AuditData proto (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/396"">#396</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use structured logging on GCF with python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/434"">#434</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/googleapis/python-logging/commit/10727ef3c8cca7e20484e58e6afdc79e81a4d4c9""><code>10727ef</code></a> chore(main): release 3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/473"">#473</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/d86be6cf83c3f3b91c4fc0b2e0666b0ca1d7e248""><code>d86be6c</code></a> chore(deps): update dependency google-cloud-storage to v2.1.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/469"">#469</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544""><code>8a67b73</code></a> docs: update usag",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:10807,log,logging,10807,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,"t.extend_style method.</li>; <li>Added Span.extend method.</li>; </ul>; <h3>Changed</h3>; <ul>; <li>Text.tab_size now defaults to <code>None</code> to indicate that Console.tab_size should be used.</li>; </ul>; <h2>[13.4.2] - 2023-06-12</h2>; <h3>Changed</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/Textualize/rich/commit/e9f75c9912ed25b9777bc0257853370951220b17""><code>e9f75c9</code></a> Merge branch 'py312'</li>; <li><a href=""https://github.com/Textualize/rich/commit/35b64f1237f1c64326329b4668b116809a7fc596""><code>35b64f1</code></a> Merge pull request <a href=""https://redirect.github.com/Textualize/rich/issues/3139"">#3139</a> from Textualize/py312</li>; <li><a href=""https://github.com/Textualize/rich/commit/c8ff546416b086c92d1ab9a1a0bb24447da12826""><code>c8ff546</code></a> version bump</li>; <li><a href=""https://github.com/Textualize/rich/commit/3f8c4af45133590590257de90fcbdc40834c0775""><code>3f8c4af</code></a> tests for 3.12</li>; <li><a href=""https://github.com/Textualize/rich/commit/ef90daf98f113dee532761d069baebf9b4de646e""><code>ef90daf</code></a> enable py312</li>; <li><a href=""https://github.com/Textualize/rich/commit/ec91917deb47b43188312e0e3f03bbab7e4e2e7e""><code>ec91917</code></a> changelog</li>; <li><a href=""https://github.com/Textualize/rich/commit/5360fe6fe4f582e5a5bec591cf7433ed85e6863d""><code>5360fe6</code></a> version bump</li>; <li><a href=""https://github.com/Textualize/rich/commit/e0d3aee1eccd424c98d05b94910f9d5ddb821a40""><code>e0d3aee</code></a> Merge pull request <a href=""https://redirect.github.com/Textualize/rich/issues/3132"">#3132</a> from Textualize/fix-markdown-on-light</li>; <li><a href=""https://github.com/Textualize/rich/commit/db07a2aad2c18a1a4ab2345bb2d5adbd2f9c0eaa""><code>db07a2a</code></a> Restore text</li>; <li><a href=""https://github.com/Textualize/rich/commit/44e36aaf6f8c5b4aba4d66bcf895b25c3b5fa32e""><code>44e36aa</code",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13758:5700,test,tests,5700,https://hail.is,https://github.com/hail-is/hail/pull/13758,2,['test'],['tests']
Testability,"t.primitives.serialization.load_pem_private_key</code>,; :func:<code>~cryptography.hazmat.primitives.serialization.load_der_private_key</code>,; and; :meth:<code>~cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateNumbers.private_key</code>.; This speeds up key loading but is :term:<code>unsafe</code> if you are loading potentially; attacker supplied keys.</li>; <li>Significantly improved performance for; :class:<code>~cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305</code></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pyca/cryptography/commit/d6951dca25de45abd52da51b608055371fbcde4e""><code>d6951dc</code></a> changelog + security fix backport (<a href=""https://github-redirect.dependabot.com/pyca/cryptography/issues/8231"">#8231</a>)</li>; <li><a href=""https://github.com/pyca/cryptography/commit/138da90c8450446b19619e3faa77b9da54c34be3""><code>138da90</code></a> workaround scapy bug in downstream tests (<a href=""https://github-redirect.dependabot.com/pyca/cryptography/issues/8218"">#8218</a>) (<a href=""https://github-redirect.dependabot.com/pyca/cryptography/issues/8228"">#8228</a>)</li>; <li><a href=""https://github.com/pyca/cryptography/commit/69527bc79095c9646d7e839121f0783477892ecc""><code>69527bc</code></a> bookworm is py311 now (<a href=""https://github-redirect.dependabot.com/pyca/cryptography/issues/8200"">#8200</a>)</li>; <li><a href=""https://github.com/pyca/cryptography/commit/111deefb659b8d73c56d3ce89458f2df973d60e4""><code>111deef</code></a> backport main branch CI to 39.0.x (<a href=""https://github-redirect.dependabot.com/pyca/cryptography/issues/8153"">#8153</a>)</li>; <li><a href=""https://github.com/pyca/cryptography/commit/338a65a7df74e189f6b5d1d3a6315ffa911b21c2""><code>338a65a</code></a> 39.0.0 version bump (<a href=""https://github-redirect.dependabot.com/pyca/cryptography/issues/7954"">#7954</a>)</li>; <li><a href=""https://g",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12668:3766,test,tests,3766,https://hail.is,https://github.com/hail-is/hail/pull/12668,4,['test'],['tests']
Testability,"t/.pixi/envs/default/lib/python3.12/site-packages/hail/fs/hadoop_fs.py"", line 8, in <module>; from hailtop.fs.fs import FS; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/fs/__init__.py"", line 1, in <module>; from .fs_utils import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/fs/fs_utils.py"", line 4, in <module>; from hailtop.aiocloud.aiogoogle import GCSRequesterPaysConfiguration; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiocloud/aiogoogle/__init__.py"", line 1, in <module>; from .client import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiocloud/aiogoogle/client/__init__.py"", line 8, in <module>; from .storage_client import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiocloud/aiogoogle/client/storage_client.py"", line 14, in <module>; from hailtop.aiotools import FeedableAsyncIterable, WriteBuffer; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiotools/__init__.py"", line 1, in <module>; from .fs import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiotools/fs/__init__.py"", line 1, in <module>; from .copier import Copier, CopyReport, SourceCopier, SourceReport, Transfer, TransferReport; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiotools/fs/copier.py"", line 7, in <module>; import humanize; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/humanize/__init__.py"", line 1, in <module>; import pkg_resources; ModuleNotFoundError: No module named 'pkg_resources'. ```. I think this is largely because hail requires an ancient version of humanize (v1 vs v4). In any case, the wheel on PyPI is broken and un-importable. . There are other issues stemming from the underlying issue that there is no clear description of requirements and dependenc",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14630:1820,test,test,1820,https://hail.is,https://github.com/hail-is/hail/issues/14630,1,['test'],['test']
Testability,"t/5cf810870073693f7ec2e1f2efe030567c973fb4""><code>5cf8108</code></a> [SPARK-37959][ML] Fix the UT of checking norm in KMeans &amp; BiKMeans</li>; <li><a href=""https://github.com/apache/spark/commit/75ea6457471cf3df55e7641c4dc6ba66b03e733b""><code>75ea645</code></a> Preparing development version 3.2.2-SNAPSHOT</li>; <li><a href=""https://github.com/apache/spark/commit/ea8ce995b7651bda7ef8c2e89c39b92f17e55402""><code>ea8ce99</code></a> Preparing Spark release v3.2.1-rc2</li>; <li><a href=""https://github.com/apache/spark/commit/66e1231621fc0721a8b1a5e77a8ff84b8e665ea8""><code>66e1231</code></a> [SPARK-37859][SQL] Do not check for metadata during schema comparison</li>; <li><a href=""https://github.com/apache/spark/commit/a58b8a864bb03bcdfe69b157bc7aec39b68556fa""><code>a58b8a8</code></a> [SPARK-37855][SQL][3.2] IllegalStateException when transforming an array insi...</li>; <li><a href=""https://github.com/apache/spark/commit/31dfbdeb1b076f521bc3fa4fd9b97e425c20da31""><code>31dfbde</code></a> [SPARK-37871][TESTS] Use <code>python3</code> instead of <code>python</code> in BaseScriptTransform...</li>; <li><a href=""https://github.com/apache/spark/commit/deb6776b705423141abe92715c3d93b23f082503""><code>deb6776</code></a> [SPARK-37866][TESTS] Set <code>file.encoding</code> to UTF-8 for SBT tests</li>; <li><a href=""https://github.com/apache/spark/commit/db1023c728c5e0bdcd4ef457cf5f7ba4f13cb79d""><code>db1023c</code></a> [SPARK-37860][UI] Fix taskindex in the stage page task event timeline</li>; <li>Additional commits viewable in <a href=""https://github.com/apache/spark/compare/v3.1.1...v3.2.1"">compare view</a></li>; </ul>; </details>; <br />. Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11547:1569,TEST,TESTS,1569,https://hail.is,https://github.com/hail-is/hail/pull/11547,1,['TEST'],['TESTS']
Testability,"t/75ea6457471cf3df55e7641c4dc6ba66b03e733b""><code>75ea645</code></a> Preparing development version 3.2.2-SNAPSHOT</li>; <li><a href=""https://github.com/apache/spark/commit/ea8ce995b7651bda7ef8c2e89c39b92f17e55402""><code>ea8ce99</code></a> Preparing Spark release v3.2.1-rc2</li>; <li><a href=""https://github.com/apache/spark/commit/66e1231621fc0721a8b1a5e77a8ff84b8e665ea8""><code>66e1231</code></a> [SPARK-37859][SQL] Do not check for metadata during schema comparison</li>; <li><a href=""https://github.com/apache/spark/commit/a58b8a864bb03bcdfe69b157bc7aec39b68556fa""><code>a58b8a8</code></a> [SPARK-37855][SQL][3.2] IllegalStateException when transforming an array insi...</li>; <li><a href=""https://github.com/apache/spark/commit/31dfbdeb1b076f521bc3fa4fd9b97e425c20da31""><code>31dfbde</code></a> [SPARK-37871][TESTS] Use <code>python3</code> instead of <code>python</code> in BaseScriptTransform...</li>; <li><a href=""https://github.com/apache/spark/commit/deb6776b705423141abe92715c3d93b23f082503""><code>deb6776</code></a> [SPARK-37866][TESTS] Set <code>file.encoding</code> to UTF-8 for SBT tests</li>; <li><a href=""https://github.com/apache/spark/commit/db1023c728c5e0bdcd4ef457cf5f7ba4f13cb79d""><code>db1023c</code></a> [SPARK-37860][UI] Fix taskindex in the stage page task event timeline</li>; <li>Additional commits viewable in <a href=""https://github.com/apache/spark/compare/v3.1.1...v3.2.1"">compare view</a></li>; </ul>; </details>; <br />. Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11547:1797,TEST,TESTS,1797,https://hail.is,https://github.com/hail-is/hail/pull/11547,1,['TEST'],['TESTS']
Testability,"t/casa/bayestyper/vcf/adsp5k.cadre.chr*.norm.ann2.ruth.fix.vcf.gz""; mt=""/project/casa/bayestyper/mt/adsp5k.cadre.bayestyper.autosome.mt""; print(""Converting vcf ""+vcf+"" to mt ""+ mt); hl.import_vcf(vcf,force_bgz=True).write(mt); ```; -----------------------------------------------------------------------------; ```; $ submit ./vcf2mt_all.py; Loading modules; /share/pkg.7/gcc/8.3.0/install/lib64:/share/pkg.7/gcc/8.3.0/install/lib:/share/pkg.7/python3/3.7.7/install/lib:/usr/hdp/2.6.5.0-292/hadoop/lib/native/; Export env vars; Submitting Spark job; 20/08/17 23:24:46 WARN util.Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.; Running on Apache Spark version 2.4.3; SparkUI available at http://scc-hadoop.bu.edu:4041; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.46-6ef64c08b000; LOGGING: writing to /restricted/projectnb/casa/wgs.hg38/pipelines/bayestyper/merge/hail-20200817-2324-0.2.46-6ef64c08b000.log; Converting vcf /project/casa/bayestyper/vcf/adsp5k.cadre.chr*.norm.ann2.ruth.fix.vcf.gz to mt /project/casa/bayestyper/mt/adsp5k.cadre.bayestyper.autosome.mt; [Stage 1:==================================================>(30467 + 1) / 30468]2020-08-17 23:59:36 Hail: INFO: Coerced almost-sorted dataset; 2020-08-17 23:59:37 Hail: INFO: Coerced dataset with out-of-order partitions.; [Stage 2:================> (9622 + 90) / 30468]Traceback (most recent call last):; File ""/restricted/projectnb/casa/wgs.hg38/pipelines/bayestyper/merge/./vcf2mt_all.py"", line 10, in <module>; hl.import_vcf(vcf,force_bgz=True).write(mt); File ""<decorator-gen-1213>"", line 2, in write; File ""/share/pkg.7/hail/0.2.46/install/lib/python3.7/site-packages/hail/typecheck/check.py"", line 614, in wrapper; return __original_func(*args_, **kwargs_); File ""/share/pkg.7/hail/0.2.46/install/lib/python3.7/site-packages/hail/matrixtable.py"", line 2524, in write; Env.backend().execute(ir.MatrixWrite(self._mir, writer)); File ""/share/pkg.7/hail/0.2.46/i",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9293:1366,log,log,1366,https://hail.is,https://github.com/hail-is/hail/issues/9293,1,['log'],['log']
Testability,"t/chardet) from 4.0.0 to 5.0.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/chardet/chardet/releases"">chardet's releases</a>.</em></p>; <blockquote>; <h2>chardet 5.0.0</h2>; <p>⚠️ This release is the first release of chardet that no longer supports Python &lt; 3.6 ⚠️</p>; <p>In addition to that change, it features the following user-facing changes:</p>; <ul>; <li>Added a prober for Johab Korean (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/207"">#207</a>, <a href=""https://github.com/grizlupo""><code>@​grizlupo</code></a>)</li>; <li>Added a prober for UTF-16/32 BE/LE (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/109"">#109</a>, <a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/206"">#206</a>, <a href=""https://github.com/jpz""><code>@​jpz</code></a>)</li>; <li>Added test data for Croatian, Czech, Hungarian, Polish, Slovak, Slovene, Greek, and Turkish, which should help prevent future errors with those languages</li>; <li>Improved XML tag filtering, which should improve accuracy for XML files (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/208"">#208</a>)</li>; <li>Tweaked <code>SingleByteCharSetProber</code> confidence to match latest uchardet (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/209"">#209</a>)</li>; <li>Made <code>detect_all</code> return child prober confidences (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/210"">#210</a>)</li>; <li>Updated examples in docs (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/223"">#223</a>, <a href=""https://github.com/domdfcoding""><code>@​domdfcoding</code></a>)</li>; <li>Documentation fixes (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/212"">#212</a>, <a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/224"">#224</a>, <a href=""https://github-redirect.dependabot.com/chardet/c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12107:934,test,test,934,https://hail.is,https://github.com/hail-is/hail/pull/12107,1,['test'],['test']
Testability,"t/f5af16439807a0954ee78fa91cb69b9493b80176"">f5af164</a>)</li>; <li>added support for iam AuditData proto (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/396"">#396</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use structured logging on GCF with python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/434"">#434</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/googleapis/python-logging/commit/10727ef3c8cca7e20484e58e6afdc79e81a4d4c9""><code>10727ef</code></a> chore(main): release 3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/473"">#473</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/d86be6cf83c3f3b91c4fc0b2e0666b0ca1d7e248""><code>d86be6c</code></a> chore(deps): update dependency google-cloud-storage to v2.1.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/469"">#469</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544""><code>8a67b73</code></a> docs: update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3""><code>e0c5fc0</code></a> feat: trace improvements (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/450"">#450</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce""><code>97e32b6</code></a> fix: allow reading logs f",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:11340,log,logging,11340,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,"t/testng/pull/2832"">cbeust/testng#2832</a></li>; <li>hidden spotbugs in release <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2829"">#2829</a> by <a href=""https://github.com/bobshie""><code>@​bobshie</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2833"">cbeust/testng#2833</a></li>; <li>Enhancing the Matrix by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2834"">cbeust/testng#2834</a></li>; <li>Avoid Compilation errors on Semeru JDK flavour. by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2835"">cbeust/testng#2835</a></li>; <li>Add addition yml extension by <a href=""https://github.com/speedythesnail""><code>@​speedythesnail</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2837"">cbeust/testng#2837</a></li>; <li>Support getting dependencies info for a test by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2839"">cbeust/testng#2839</a></li>; <li>Honour regex in dependsOnMethods by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2838"">cbeust/testng#2838</a></li>; <li>Ensure All tests run all the time by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2842"">cbeust/testng#2842</a></li>; <li>Deprecate support for running Spock Tests by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2846"">cbeust/testng#2846</a></li>; <li>Streamline dependsOnMethods for configurations by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</cod",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:6403,test,testng,6403,https://hail.is,https://github.com/hail-is/hail/pull/12665,3,['test'],"['test', 'testng']"
Testability,t; fixed css sort tringles (&lt;a href=&quot;https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/409&quot;&gt;#409&lt;/a&gt;)&lt;/li&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/pytest-dev/pytest-html/commit/e00532d9c8a598fb848d16b0ce23665789e3517a&quot;&gt;&lt;code&gt;e00532d&lt;/code&gt;&lt;/a&gt; Use scss nesting &amp;amp; variables (&lt;a href=&quot;https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/393&quot;&gt;#393&lt;/a&gt;)&lt;/li&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/pytest-dev/pytest-html/commit/9bd4907682f10849dde1fe866b5a71402c74e551&quot;&gt;&lt;code&gt;9bd4907&lt;/code&gt;&lt;/a&gt; remove all read the doc documentation from the repo (&lt;a href=&quot;https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/405&quot;&gt;#405&lt;/a&gt;)&lt;/li&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/pytest-dev/pytest-html/commit/21fafe40b19e7d1c8b4b8bceb7fe1410e2cbdc2a&quot;&gt;&lt;code&gt;21fafe4&lt;/code&gt;&lt;/a&gt; Document how to modify the environment section after tests are finished (&lt;a href=&quot;https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/400&quot;&gt;#400&lt;/a&gt;)&lt;/li&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/pytest-dev/pytest-html/commit/8b7bdc1fc5f21e94610c3b7bcb06006271c27390&quot;&gt;&lt;code&gt;8b7bdc1&lt;/code&gt;&lt;/a&gt; Better error on missing CSS files. (&lt;a href=&quot;https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/390&quot;&gt;#390&lt;/a&gt;)&lt;/li&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/pytest-dev/pytest-html/commit/817d04df5875b143bc23fa6f4c78d0bc9ccece58&quot;&gt;&lt;code&gt;817d04d&lt;/code&gt;&lt;/a&gt; Move documentation to read the docs (&lt;a href=&quot;https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/402&quot;&gt;#402&lt;/a&gt;)&lt;/li&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/pytest-dev/pytest-html/commit/ba4f15431c42f6b650e78c9d3895e9212cf35663&quot;&gt;&lt,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11524:15291,test,tests,15291,https://hail.is,https://github.com/hail-is/hail/pull/11524,1,['test'],['tests']
Testability,tIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testUpperBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[2]([Ljava.lang.String;@7c5e570e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[2]([Ljava.lang.String;@7c5e570e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[3]([Ljava.lang.String;@3c90c5dc)(is.hail.io.IndexSuite). Gradl,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:2333,test,testUpperBound,2333,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['testUpperBound']
Testability,tNGSuite.newAssertionFailedException(TestNGSuite.scala:67); 	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:501); 	at is.hail.io.fs.FSSuite.largeDirectoryOperations(FSSuite.scala:413); 	at is.hail.io.fs.FSSuite.largeDirectoryOperations$(FSSuite.scala:398); 	at is.hail.io.fs.GoogleStorageFSSuite.largeDirectoryOperations(GoogleStorageFSSuite.scala:10); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333). test is.hail.io.fs.GoogleStorageFSSuite.largeDirectoryOperations FAILURE; ```. ### Version. 0.2.124. ### Relevant log outpu,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13827:1645,Test,TestMethodWorker,1645,https://hail.is,https://github.com/hail-is/hail/issues/13827,1,['Test'],['TestMethodWorker']
Testability,tRelation.scala:404); at org.apache.spark.sql.execution.datasources.parquet.ParquetRelation.org$apache$spark$sql$execution$datasources$parquet$ParquetRelation$$metadataCache$lzycompute(ParquetRelation.scala:145); at org.apache.spark.sql.execution.datasources.parquet.ParquetRelation.org$apache$spark$sql$execution$datasources$parquet$ParquetRelation$$metadataCache(ParquetRelation.scala:143); at org.apache.spark.sql.execution.datasources.parquet.ParquetRelation$$anonfun$6.apply(ParquetRelation.scala:196); at org.apache.spark.sql.execution.datasources.parquet.ParquetRelation$$anonfun$6.apply(ParquetRelation.scala:196); at scala.Option.getOrElse(Option.scala:120); at org.apache.spark.sql.execution.datasources.parquet.ParquetRelation.dataSchema(ParquetRelation.scala:196); at org.apache.spark.sql.sources.HadoopFsRelation.schema$lzycompute(interfaces.scala:561); at org.apache.spark.sql.sources.HadoopFsRelation.schema(interfaces.scala:560); at org.apache.spark.sql.execution.datasources.LogicalRelation.<init>(LogicalRelation.scala:31); at org.apache.spark.sql.SQLContext.baseRelationToDataFrame(SQLContext.scala:389); at org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:267); at org.broadinstitute.hail.variant.VariantSampleMatrix$.read(VariantSampleMatrix.scala:132); at org.broadinstitute.hail.driver.Read$.run(Read.scala:29); at org.broadinstitute.hail.driver.Read$.run(Read.scala:6); at org.broadinstitute.hail.driver.Command.runCommand(Command.scala:238); at org.broadinstitute.hail.driver.Main$.runCommand(Main.scala:86); at org.broadinstitute.hail.driver.Main$$anonfun$runCommands$1$$anonfun$1.apply(Main.scala:111); at org.broadinstitute.hail.driver.Main$$anonfun$runCommands$1$$anonfun$1.apply(Main.scala:111); at org.broadinstitute.hail.Utils$.time(Utils.scala:1185); at org.broadinstitute.hail.driver.Main$$anonfun$runCommands$1.apply(Main.scala:110); at org.broadinstitute.hail.driver.Main$$anonfun$runCommands$1.apply(Main.scala:104); at scala.collection.IndexedS,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/621:2137,Log,LogicalRelation,2137,https://hail.is,https://github.com/hail-is/hail/issues/621,1,['Log'],['LogicalRelation']
Testability,"tTask.scala:70); at org.apache.spark.scheduler.Task.run(Task.scala:86); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: java.lang.RuntimeException: Error while encoding: java.lang.RuntimeException: org.apache.spark.sql.catalyst.expressions.GenericRow is not a valid external type for schema of boolean; named_struct(contig, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true], top level row object), 0, variant), StructField(contig,StringType,false), StructField(start,IntegerType,false), StructField(ref,StringType,false), StructField(altAlleles,ArrayType(StructType(StructField(ref,StringType,false), StructField(alt,StringType,false)),false),false)), 0, contig), StringType), true), start, validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true], top level row object), 0, variant), StructField(contig,StringType,false), StructField(start,IntegerType,false), StructField(ref,StringType,false), StructField(altAlleles,ArrayType(StructType(StructField(ref,StringType,false), StructField(alt,StringType,false)),false),false)), 1, start), IntegerType), ref, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true], top level row object), 0, variant), StructField(contig,StringType,false), StructField(start,IntegerType,false), StructField(ref,StringType,false), StructField(altAlleles,ArrayType(StructType(StructField(ref,StringType,false",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1260:8091,assert,assertnotnull,8091,https://hail.is,https://github.com/hail-is/hail/issues/1260,1,['assert'],['assertnotnull']
Testability,"table1:; ```; 'Table{global:+Struct{},key:[s],row:Struct{s:String,PC1:Float64,PC2:Float64,PC3:Float64,PC4:Float64,PC5:Float64,PC6:Float64,PC7:Float64,PC8:Float64,PC9:Float64,PC10:Float64,PC11:Float64,PC12:Float64,PC13:Float64,PC14:Float64,PC15:Float64,PC16:Float64,PC17:Float64,PC18:Float64,PC19:Float64,PC20:Float64,source:String}}'; ```. table2:; ```; 'Table{global:Struct{},key:[s],row:Struct{s:String,PC1:Float64,PC2:Float64,PC3:Float64,PC4:Float64,PC5:Float64,PC6:Float64,PC7:Float64,PC8:Float64,PC9:Float64,PC10:Float64,PC11:Float64,PC12:Float64,PC13:Float64,PC14:Float64,PC15:Float64,PC16:Float64,PC17:Float64,PC18:Float64,PC19:Float64,PC20:Float64,source:String}}'; ```. `table1.union(table2)` fails with:; ```; Java stack trace:; java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.expr.TableUnion.<init>(Relational.scala:1996); at is.hail.table.Table.union(Table.scala:947); at is.hail.table.Table.union(Table.scala:945); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3639:749,Assert,AssertionError,749,https://hail.is,https://github.com/hail-is/hail/issues/3639,3,"['Assert', 'assert']","['AssertionError', 'assert', 'assertion']"
Testability,tables README logic typo fix,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5311:14,log,logic,14,https://hail.is,https://github.com/hail-is/hail/pull/5311,1,['log'],['logic']
Testability,"tadata:; creationTimestamp: ""2019-07-12T17:17:15Z""; labels:; app: batch-job; batch_id: ""3""; hail.is/batch-instance: cd50b95a89914efb897965a5e982a29d; job_id: ""41""; task: main; user: ci; uuid: f53f127847864f1cbf7d4bdc911a6646; name: batch-3-job-41-39d17b; namespace: batch-pods; resourceVersion: ""87247110""; selfLink: /api/v1/namespaces/batch-pods/pods/batch-3-job-41-39d17b; uid: e4d87ac3-a4c8-11e9-a4bb-42010a8000af; spec:; containers:; - command:; - bash; - -c; - |-; set -e; gcloud -q auth activate-service-account --key-file=/test-gsa-key/privateKeyData; gsutil -m cp -r /test/resources/* gs://hail-test-1c9nm/sj0nb47zqys1/pipeline/input/; env:; - name: POD_IP; valueFrom:; fieldRef:; apiVersion: v1; fieldPath: status.podIP; - name: POD_NAME; valueFrom:; fieldRef:; apiVersion: v1; fieldPath: metadata.name; image: gcr.io/hail-vdc/ci-intermediate:oyyg6y2um4kx; imagePullPolicy: IfNotPresent; name: main; resources:; requests:; cpu: 100m; memory: 500M; terminationMessagePath: /dev/termination-log; terminationMessagePolicy: File; volumeMounts:; - mountPath: /test-gsa-key; name: test-gsa-key; - mountPath: /gsa-key; name: gsa-key; - mountPath: /var/run/secrets/kubernetes.io/serviceaccount; name: default-token-8h99c; readOnly: true; dnsPolicy: ClusterFirst; enableServiceLinks: true; nodeName: gke-vdc-preemptible-pool-9c7148b2-1f89; priority: 500000; priorityClassName: user; restartPolicy: Never; schedulerName: default-scheduler; securityContext: {}; serviceAccount: default; serviceAccountName: default; terminationGracePeriodSeconds: 30; tolerations:; - key: preemptible; value: ""true""; - effect: NoExecute; key: node.kubernetes.io/not-ready; operator: Exists; tolerationSeconds: 300; - effect: NoExecute; key: node.kubernetes.io/unreachable; operator: Exists; tolerationSeconds: 300; volumes:; - name: test-gsa-key; secret:; defaultMode: 420; optional: false; secretName: test-gsa-key; - name: gsa-key; secret:; defaultMode: 420; secretName: ci-gsa-key; - name: default-token-8h99c; secret",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6625:3767,log,log,3767,https://hail.is,https://github.com/hail-is/hail/issues/6625,3,"['log', 'test']","['log', 'test-gsa-key']"
Testability,"tain a fixed width (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91207"">kubernetes/kubernetes#91207</a>, <a href=""https://github.com/iamchuckss""><code>@​iamchuckss</code></a>) [SIG Apps and Node]</li>; <li>Generic ephemeral volumes, a new alpha feature under the <code>GenericEphemeralVolume</code> feature gate, provide a more flexible alternative to <code>EmptyDir</code> volumes: as with <code>EmptyDir</code>, volumes are created and deleted for each pod automatically by Kubernetes. But because the normal provisioning process is used (<code>PersistentVolumeClaim</code>), storage can be provided by third-party storage vendors and all of the usual volume features work. Volumes don't need to be empt; for example, restoring from snapshot is supported. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92784"">kubernetes/kubernetes#92784</a>, <a href=""https://github.com/pohly""><code>@​pohly</code></a>) [SIG API Machinery, Apps, Auth, CLI, Instrumentation, Node, Scheduling, Storage and Testing]</li>; <li>Go1.14.4 is now the minimum version required for building Kubernetes (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92438"">kubernetes/kubernetes#92438</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG API Machinery, Auth, CLI, Cloud Provider, Cluster Lifecycle, Instrumentation, Network, Node, Release, Storage and Testing]</li>; <li>Hide managedFields from kubectl edit command (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91946"">kubernetes/kubernetes#91946</a>, <a href=""https://github.com/soltysh""><code>@​soltysh</code></a>) [SIG CLI]</li>; <li>K8s.io/apimachinery - scheme.Convert() now uses only explicitly registered conversions - default reflection based conversion is no longer available. <code>+k8s:conversion-gen</code> tags can be used with the <code>k8s.io/code-generator</code> component to generate conversions. (<a href=""https://gi",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11462:8005,Test,Testing,8005,https://hail.is,https://github.com/hail-is/hail/pull/11462,1,['Test'],['Testing']
Testability,"talocker, which is not installed.; aiosignal 1.3.1 requires frozenlist, which is not installed.; aiohttp 3.8.5 requires frozenlist, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **496/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 4.2 | Information Exposure Through Sent Data <br/>[SNYK-PYTHON-URLLIB3-6002459](https://snyk.io/vuln/SNYK-PYTHON-URLLIB3-6002459) | `urllib3:` <br> `1.26.17 -> 1.26.18` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0MmRjMDIwMC02MDI1LTQ1M2QtYWUxNC00NDRlZjM5MmU4NTciLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjQyZGMwMjAwLTYwMjUtNDUzZC1hZTE0LTQ0NGVmMzkyZTg1NyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13854:1514,test,tested,1514,https://hail.is,https://github.com/hail-is/hail/pull/13854,1,['test'],['tested']
Testability,"talocker, which is not installed.; aiosignal 1.3.1 requires frozenlist, which is not installed.; aiohttp 3.8.5 requires frozenlist, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **496/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 4.2 | Information Exposure Through Sent Data <br/>[SNYK-PYTHON-URLLIB3-6002459](https://snyk.io/vuln/SNYK-PYTHON-URLLIB3-6002459) | `urllib3:` <br> `1.26.17 -> 1.26.18` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmNDI4YzVjNi05NmZmLTQ1ZTMtYjY4ZC0zYzU5NjY3MjA3MGUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImY0MjhjNWM2LTk2ZmYtNDVlMy1iNjhkLTNjNTk2NjcyMDcwZSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13851:1506,test,tested,1506,https://hail.is,https://github.com/hail-is/hail/pull/13851,1,['test'],['tested']
Testability,"talocker, which is not installed.; aiosignal 1.3.1 requires frozenlist, which is not installed.; aiohttp 3.8.5 requires frozenlist, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **581/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 5.9 | Information Exposure Through Sent Data <br/>[SNYK-PYTHON-URLLIB3-5926907](https://snyk.io/vuln/SNYK-PYTHON-URLLIB3-5926907) | `urllib3:` <br> `1.26.16 -> 1.26.17` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxOGU4YzI4Yi1kYWQ0LTQ5ZDUtOTExNi04NjFkYTdkODk5OTYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjE4ZThjMjhiLWRhZDQtNDlkNS05MTE2LTg2MWRhN2Q4OTk5NiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13773:1514,test,tested,1514,https://hail.is,https://github.com/hail-is/hail/pull/13773,1,['test'],['tested']
Testability,"talocker, which is not installed.; aiosignal 1.3.1 requires frozenlist, which is not installed.; aiohttp 3.8.5 requires frozenlist, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **581/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 5.9 | Information Exposure Through Sent Data <br/>[SNYK-PYTHON-URLLIB3-5926907](https://snyk.io/vuln/SNYK-PYTHON-URLLIB3-5926907) | `urllib3:` <br> `1.26.16 -> 1.26.17` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiODhmOTA3Ny02ZjlmLTRiZjEtYjFiYy0yZjNkNTE1MDEwYWEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImI4OGY5MDc3LTZmOWYtNGJmMS1iMWJjLTJmM2Q1MTUwMTBhYSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13783:1506,test,tested,1506,https://hail.is,https://github.com/hail-is/hail/pull/13783,1,['test'],['tested']
Testability,"tandard TLS [X.509 certificates](https://en.wikipedia.org/wiki/X.509). Our; private keys are RSA 4096 keys. The configuration file lists every principal in the system and the ""ssl-mode"" of; the system. The ""ssl-mode"" is inspired by MySQL's ssl-mode's and is one of (in; order from most to least secure): VERIFY_CA, REQUIRED, DISABLED. |mode | incoming connections must use TLS | clients verify hostnames on server cert | servers only accept trusted clients |; |---|---|---|---|; |VERIFY_CA|yes|yes|yes|; |REQUIRED|yes|no|no|; |DISABLED|no|no|no|. `create_certs.py` converts this global configuration file into a secret for each; principal. For NGINX principals, we generate the nginx conf in; `create_certs.py`. Unfortunately, I have no simple way to change the ports and; `ssl` status on nginx servers. For DISABLED, we send empty configuration; files. For REQUIRED, we load server certs and client certs, but we do not verify; (proxied) servers. I load the client certificates anyway so that I can smoke; test them before I require servers verify them. For VERIFY_CA, we load server; certs, load client certs, verify clients, and verify (proxied) servers. For Hail principals, we only generate a json configuration; file containing the ssl mode and some named paths. The new `hailtop/ssl.py`; module defines the mapping from configuration to Python's; [`SSLContext`](https://docs.python.org/3.6/library/ssl.html#ssl.SSLContext). There is also one ""curl"" principal: the admin-pod. REQUIRED and DISABLED are; mostly the same because required passes the `insecure` flag. As curl is; client-only, there is no notion of ""incoming connection"". ---. FAQ. Does this recreate certs on each deploy?. Yes. How do services speak to each other while a deploy is happening? Newly deployed; services will only trust newly deployed clients?. `create_certs.py` includes the previous deploy's certificates in the trust; chain, so we can always accept clients from one deploy backwards. Old services; will not trust th",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8513:4690,test,test,4690,https://hail.is,https://github.com/hail-is/hail/pull/8513,1,['test'],['test']
Testability,"tdt: added pval, fixed tests, updated and editted docs",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1054:23,test,tests,23,https://hail.is,https://github.com/hail-is/hail/pull/1054,1,['test'],['tests']
Testability,"te `0000 1111` is converted to the `Int` 15 and the byte; `1000 1111` is converted to the `Int` -113. The contract of; [`InputStream.read`](https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html#read--); is to return the unsigned integeral value of the next `Byte` or `-1` if we've reached the end of; the stream. `DataInputStream` treats any negative value as EOS which lead to perplexing EOSes; when reading data from GCS. 5. Retain the `gs://` protocol when reading MTs and Ts. `uriPath` strips *all* protocols. Before the; Query Service, these code paths were only used by the LocalBackend. In the LocalBackend, the only; URIs generated are `file://`. However, UNIX/JVM file system operations do not support URIs, they; want bare paths. 6. Implement missing cases for EShuffle and PShuffle. 7. BLAS and LAPACK need to be thread-local. 8. The LSM-tree used by the Shuffler needs to permit multiple values for the same key. There was; some subtlety here around fine-grained locking. Unfortunately, the LSM doesn't expose the right; operations (putIfAbsent) to make this easy, so I had to use a concurrent hash map of locks. ---. I've already updated the cluster with the new bucket and the corresponding change to the; `global-config` secret. We'll should notify Leo et al. about the Terraform changes. ---. Small changes and fixes:. - Rename `key.json` to `/worker-key.json` for clarity, this is the worker's own GCP service account; key. - Create a test query-gsa-key in test and dev namespaces. - Add terraform rules for the query service account. It already existed, but it was missing from the; Terraform file. You can verify the permissions grant by inspecting `gsutil iam get; gs://hail-query`. - The `query` user was missing from bootstrap-create-accounts. - Remove the auto-scaling and remove the k8s grace period. Neither of these really works right. We; will live without the auto-scaling for now. I have to fix the grace period thing before we let; users run real pipelines.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10390:3947,test,test,3947,https://hail.is,https://github.com/hail-is/hail/pull/10390,2,['test'],['test']
Testability,"te(); File ""/usr/local/lib/python3.9/dist-packages/batch/worker/worker.py"", line 840, in create; await self._run_until_done_or_deleted(self.image.pull); File ""/usr/local/lib/python3.9/dist-packages/batch/worker/worker.py"", line 1014, in _run_until_done_or_deleted; raise ContainerDeletedError from e; ContainerDeletedError. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/usr/local/lib/python3.9/dist-packages/batch/worker/worker.py"", line 1887, in run_container; await container.run(on_completion); File ""/usr/local/lib/python3.9/dist-packages/batch/worker/worker.py"", line 920, in run; await on_completion(*args, **kwargs); File ""/usr/lib/python3.9/contextlib.py"", line 137, in __exit__; self.gen.throw(typ, value, traceback); File ""/usr/local/lib/python3.9/dist-packages/hailtop/utils/utils.py"", line 1154, in step; yield; File ""/usr/local/lib/python3.9/dist-packages/batch/worker/worker.py"", line 1873, in on_completion; await self.worker.fs.read(container.log_path),; File ""/usr/local/lib/python3.9/dist-packages/hailtop/aiotools/fs/fs.py"", line 281, in read; async with await self.open(url) as f:; File ""/usr/local/lib/python3.9/dist-packages/hailtop/aiotools/router_fs.py"", line 76, in open; return await fs.open(url); File ""/usr/local/lib/python3.9/dist-packages/hailtop/aiotools/local_fs.py"", line 252, in open; f = await blocking_to_async(self._thread_pool, open, self._get_path(url), 'rb'); File ""/usr/local/lib/python3.9/dist-packages/hailtop/utils/utils.py"", line 181, in blocking_to_async; return await asyncio.get_event_loop().run_in_executor(; File ""/usr/lib/python3.9/concurrent/futures/thread.py"", line 58, in run; result = self.fn(*self.args, **self.kwargs); File ""/usr/local/lib/python3.9/dist-packages/hailtop/utils/utils.py"", line 182, in <lambda>; thread_pool, lambda: fun(*args, **kwargs)); FileNotFoundError: [Errno 2] No such file or directory: '/batch/35055eff18f547de9c77b9e80744e362/main/container.log'; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13906:2831,log,log,2831,https://hail.is,https://github.com/hail-is/hail/issues/13906,1,['log'],['log']
Testability,te). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testUpperBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[2]([Ljava.lang.String;@7c5e570e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[2]([Ljava.lang.String;@7c5e570e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[3]([Ljava.lang.String;@3c90c5dc)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[3]([Ljava.lang.String;@3c90c5dc) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[4]([Ljava.lang.String;@165d0f2d)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[4]([Ljava.la,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:2689,test,test,2689,https://hail.is,https://github.com/hail-is/hail/issues/4718,2,"['Test', 'test']","['Test', 'test']"
Testability,ted at: org.apache.spark.SparkContext.<init>(SparkContext.scala:76) is.hail.HailContext$.configureAndCreateSparkContext(HailContext.scala:84) is.hail.HailContext$.apply(HailContext.scala:164) sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) java.lang.reflect.Method.invoke(Method.java:498) py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244) py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357) py4j.Gateway.invoke(Gateway.java:280) py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132) py4j.commands.CallCommand.execute(CallCommand.java:79) py4j.GatewayConnection.run(GatewayConnection.java:214) java.lang.Thread.run(Thread.java:745) at org.apache.spark.SparkContext$$anonfun$assertNoOtherContextIsRunning$2.apply(SparkContext.scala:2278) at org.apache.spark.SparkContext$$anonfun$assertNoOtherContextIsRunning$2.apply(SparkContext.scala:2274) at scala.Option.foreach(Option.scala:257) at org.apache.spark.SparkContext$.assertNoOtherContextIsRunning(SparkContext.scala:2274) at org.apache.spark.SparkContext$.markPartiallyConstructed(SparkContext.scala:2353) at org.apache.spark.SparkContext.<init>(SparkContext.scala:85) at is.hail.HailContext$.configureAndCreateSparkContext(HailContext.scala:84) at is.hail.HailContext$.apply(HailContext.scala:164) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244) at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357) at py4j.Gateway.invoke(Gateway.java:280) at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132) at,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1525:5972,assert,assertNoOtherContextIsRunning,5972,https://hail.is,https://github.com/hail-is/hail/issues/1525,1,['assert'],['assertNoOtherContextIsRunning']
Testability,"ted dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxNjVmNDVkMi00ZDM3LTRmNzAtOGU1OC00OGIxOGJhNmVlOTgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjE2NWY0NWQyLTRkMzctNGY3MC04ZTU4LTQ4YjE4YmE2ZWU5OCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""165f45d2-4d37-4f70-8e58-48b18ba6ee98"",""prPublicId"":""165f45d2-4d37-4f70-8e58-48b18ba6ee98"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.7"",""to"":""42.0.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6050294"",""SNYK-PYTHON-CRYPTOGRAPHY-6126975""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[479,616],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14203:3027,log,logic,3027,https://hail.is,https://github.com/hail-is/hail/pull/14203,1,['log'],['logic']
Testability,"ted dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJkYWIzNjU3Mi1hNTUwLTQwY2EtYThjZi0zN2ZjODljOWI1OGEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImRhYjM2NTcyLWE1NTAtNDBjYS1hOGNmLTM3ZmM4OWM5YjU4YSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""dab36572-a550-40ca-a8cf-37fc89c9b58a"",""prPublicId"":""dab36572-a550-40ca-a8cf-37fc89c9b58a"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.7"",""to"":""42.0.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6050294"",""SNYK-PYTHON-CRYPTOGRAPHY-6126975""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[265,402],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14201:2977,log,logic,2977,https://hail.is,https://github.com/hail-is/hail/pull/14201,1,['log'],['logic']
Testability,"ted issues and pull requests on GitHub:</em>; <a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8012"">#8012</a>.</p>; </li>; <li>; <p>Fixed double compress when compression enabled and compressed file exists in server file responses.</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/aio-libs/aiohttp/blob/master/CHANGES.rst"">aiohttp's changelog</a>.</em></p>; <blockquote>; <h1>3.9.3 (2024-01-29)</h1>; <h2>Bug fixes</h2>; <ul>; <li>; <p>Fixed backwards compatibility breakage (in 3.9.2) of <code>ssl</code> parameter when set outside; of <code>ClientSession</code> (e.g. directly in <code>TCPConnector</code>) -- by :user:<code>Dreamsorcerer</code>.</p>; <p><em>Related issues and pull requests on GitHub:</em>; :issue:<code>8097</code>, :issue:<code>8098</code>.</p>; </li>; </ul>; <h2>Miscellaneous internal changes</h2>; <ul>; <li>; <p>Improved test suite handling of paths and temp files to consistently use pathlib and pytest fixtures.</p>; <p><em>Related issues and pull requests on GitHub:</em>; :issue:<code>3957</code>.</p>; </li>; </ul>; <hr />; <h1>3.9.2 (2024-01-28)</h1>; <h2>Bug fixes</h2>; <ul>; <li>; <p>Fixed server-side websocket connection leak.</p>; <p><em>Related issues and pull requests on GitHub:</em>; :issue:<code>7978</code>.</p>; </li>; <li>; <p>Fixed <code>web.FileResponse</code> doing blocking I/O in the event loop.</p>; <p><em>Related issues and pull requests on GitHub:</em>; :issue:<code>8012</code>.</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/bf4edce5d6c967fa1d6a581b3aaab1bd2f5121cd""><code>bf4edce</code></a> Release v3.9.3 (<a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8102"">#8102</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp/co",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14219:2413,test,test,2413,https://hail.is,https://github.com/hail-is/hail/pull/14219,2,['test'],['test']
Testability,"tedcontainers/commit/7dc426c95a0c329d5514e6198d92080f1ffc1e5e""><code>7dc426c</code></a> Fix update() ordering to be more consistent with add() ordering (<a href=""https://github-redirect.dependabot.com/grantjenks/python-sortedcontainers/issues/159"">#159</a>)</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/13d30bc654eb9e6be092282ca502967fcb7f0113""><code>13d30bc</code></a> Bump version to 2.2.2</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/4997d0e849f2275d1931772a5432163ecc20e0b0""><code>4997d0e</code></a> Refactor small slice optimization in SortedList.<strong>getitem</strong></li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/6ee5d57fc8d691fbab4972b853a60348d0f922ef""><code>6ee5d57</code></a> improve SortedList.<strong>getitem</strong>() performance for small slices</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/ac80254fb6a08045ced7d9704412878ff8000fa7""><code>ac80254</code></a> suppress warning in test of deprecated function (<a href=""https://github-redirect.dependabot.com/grantjenks/python-sortedcontainers/issues/118"">#118</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/grantjenks/python-sortedcontainers/compare/v2.1.0...v2.4.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=sortedcontainers&package-manager=pip&previous-version=2.1.0&new-version=2.4.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11476:3458,test,test,3458,https://hail.is,https://github.com/hail-is/hail/pull/11476,1,['test'],['test']
Testability,"ter this PR is that devs will be able to access `internal.hail.is/<PR-namespace>/<service>` while it is running and see jobs submitted by tests. Well, that and you can add another developer to a dev namespace as a developer without destroying the developer's existing namespace. Subsequent PRs will introduce on-demand dev namespaces and the ability to suspend the deletion of a test namespace. New context added to the CI pipeline is treated as optional to be backward compatible with the current CI. So devs won't be able to log in to test namespaces on *this* PR but will be able to once this PR becomes main. ### What has changed; - All developers from default are now added to all test namespaces using the `add_users` build.yaml step and removed at the end of the PR run through the `delete_users` step. These use the normal create and delete API instead of copying the user's gsa from the production namespace. This relies on / tests that the delete user endpoint is properly deleting cloud identities when the users are deleted (previously broken in GCP but fixed in this PR.; - The developer role no longer implicitly deletes and recreates a corresponding namespace. I wanted adding developers to test namespaces not to have side-effects that leaked out of the namespace. A follow-up PR will incorporate the ability for a developer to request an on-demand dev namespace, which should be made a lot easier after these changes. I think this also means that we can remove some permissions from the auth K8s ServiceAccount since it no longer needs the ability to create and delete namespaces.; - A fixed-but-sufficient number of oauth2 callbacks are hard-coded into the oauth2 secret from GCP/azure and then allocated to a given namespace. This is fairly self-contained, all that needs to happen is to tell `auth` what callback to use and rewrite those callback urls in gateway to route back to the appropriate auth. This is done only for test namespaces, production still just uses `auth.hail.i",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12751:964,test,tests,964,https://hail.is,https://github.com/hail-is/hail/pull/12751,1,['test'],['tests']
Testability,"ter/../../debugpy/launcher/../../debugpy/../debugpy/server/cli.py"", line 430, in main; run(); File ""/home/edmund/.vscode/extensions/ms-python.debugpy-2024.6.0-linux-x64/bundled/libs/debugpy/adapter/../../debugpy/launcher/../../debugpy/../debugpy/server/cli.py"", line 284, in run_file; runpy.run_path(target, run_name=""__main__""); File ""/home/edmund/.vscode/extensions/ms-python.debugpy-2024.6.0-linux-x64/bundled/libs/debugpy/_vendored/pydevd/_pydevd_bundle/pydevd_runpy.py"", line 321, in run_path; return _run_module_code(code, init_globals, run_name,; File ""/home/edmund/.vscode/extensions/ms-python.debugpy-2024.6.0-linux-x64/bundled/libs/debugpy/_vendored/pydevd/_pydevd_bundle/pydevd_runpy.py"", line 135, in _run_module_code; _run_code(code, mod_globals, init_globals,; File ""/home/edmund/.vscode/extensions/ms-python.debugpy-2024.6.0-linux-x64/bundled/libs/debugpy/_vendored/pydevd/_pydevd_bundle/pydevd_runpy.py"", line 124, in _run_code; exec(code, run_globals); File ""/home/edmund/.local/src/hail/test.py"", line 34, in <module>; main(); File ""/home/edmund/.local/src/hail/test.py"", line 28, in main; r2_adj = r2_adj.checkpoint(f'{tmp}/adj', overwrite=args.overwrite); File ""<decorator-gen-1508>"", line 2, in checkpoint; File ""/home/edmund/.local/src/hail/hail/python/hail/typecheck/check.py"", line 584, in wrapper; return __original_func(*args_, **kwargs_); File ""/home/edmund/.local/src/hail/hail/python/hail/linalg/blockmatrix.py"", line 679, in checkpoint; self.write(path, overwrite, force_row_major, stage_locally); File ""<decorator-gen-1506>"", line 2, in write; File ""/home/edmund/.local/src/hail/hail/python/hail/typecheck/check.py"", line 584, in wrapper; return __original_func(*args_, **kwargs_); File ""/home/edmund/.local/src/hail/hail/python/hail/linalg/blockmatrix.py"", line 656, in write; Env.backend().execute(BlockMatrixWrite(self._bmir, writer)); File ""/home/edmund/.local/src/hail/hail/python/hail/backend/backend.py"", line 190, in execute; raise e.maybe_user_error(ir) from N",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14537:3132,test,test,3132,https://hail.is,https://github.com/hail-is/hail/issues/14537,1,['test'],['test']
Testability,"tes.io/last-applied-configuration"":""""]] ""spec"":map[""replicas"":'\x01' ""selector"":map[""matchLabels"":map[""app"":""batch""]] ""template"":map[""metadata"":map[""labels"":map[""app"":""batch"" ""hail.is/sha"":""1c6dbf20333a""]] ""spec"":map[""containers"":[map[""image"":""gcr.io/broad-ctsa/batch:4b4139c73fe9be3bee6c2895aa74059e157eb861d2bdac7d2304ba44b5421f88"" ""name"":""batch"" ""ports"":[map[""containerPort"":'\u1388']]]] ""serviceAccountName"":""batch-svc""]]]]}; from server for: ""deployment.yaml"": deployments.apps ""batch-deployment"" is forbidden: User ""system:serviceaccount:batch-pods:deploy-svc"" cannot get deployments.apps in the namespace ""batch-pods"": Unknown user ""system:serviceaccount:batch-pods:deploy-svc""; Error from server (Forbidden): error when retrieving current configuration of:; Resource: ""/v1, Resource=services"", GroupVersionKind: ""/v1, Kind=Service""; Name: ""batch"", Namespace: ""batch-pods""; Object: &{map[""apiVersion"":""v1"" ""kind"":""Service"" ""metadata"":map[""namespace"":""batch-pods"" ""annotations"":map[""kubectl.kubernetes.io/last-applied-configuration"":""""] ""labels"":map[""app"":""batch""] ""name"":""batch""] ""spec"":map[""ports"":[map[""port"":'P' ""protocol"":""TCP"" ""targetPort"":'\u1388']] ""selector"":map[""app"":""batch""]]]}; from server for: ""deployment.yaml"": services ""batch"" is forbidden: User ""system:serviceaccount:batch-pods:deploy-svc"" cannot get services in the namespace ""batch-pods"": Unknown user ""system:serviceaccount:batch-pods:deploy-svc""; make: *** [deploy-batch] Error 1; Makefile:45: recipe for target 'deploy-batch' failed; ```; [deploy.log](https://github.com/hail-is/hail/files/2504429/deploy.log). Service accounts:; ```; error: the server doesn't have a resource type ""service-accounts""; # kubectl get serviceaccounts ; NAME SECRETS AGE; batch-svc 1 9h; default 1 113d; # kubectl get serviceaccounts -n batch-pods; NAME SECRETS AGE; default 1 7d; deploy-svc 1 1d; test-svc 1 1d; # kubectl get serviceaccounts -n test ; NAME SECRETS AGE; default 1 1d; ```. Apparently this is caused by a lack of permissions",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4609:5172,log,log,5172,https://hail.is,https://github.com/hail-is/hail/issues/4609,4,"['log', 'test']","['log', 'test', 'test-svc']"
Testability,"tes/kubernetes/pull/106163"">kubernetes/kubernetes#106163</a>, <a href=""https://github.com/aojea""><code>@​aojea</code></a>) [SIG API Machinery, Apps, Architecture, Auth, Autoscaling, CLI, Cloud Provider, Contributor Experience, Instrumentation, Network, Node, Release, Scalability, Scheduling, Storage, Testing and Windows]</li>; <li>If a conflict occurs when creating an object with <code>generateName</code>, the server now returns an &quot;AlreadyExists&quot; error with a retry option. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/104699"">kubernetes/kubernetes#104699</a>, <a href=""https://github.com/vincepri""><code>@​vincepri</code></a>)</li>; <li>Implement support for recovering from volume expansion failures (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/106154"">kubernetes/kubernetes#106154</a>, <a href=""https://github.com/gnufied""><code>@​gnufied</code></a>) [SIG API Machinery, Apps and Storage]</li>; <li>In kubelet, log verbosity and flush frequency can also be configured via the configuration file and not just via command line flags. In other commands (kube-apiserver, kube-controller-manager), the flags are listed in the &quot;Logs flags&quot; group and not under &quot;Global&quot; or &quot;Misc&quot;. The type for <code>-vmodule</code> was made a bit more descriptive (<code>pattern=N,...</code> instead of <code>moduleSpec</code>). (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/106090"">kubernetes/kubernetes#106090</a>, <a href=""https://github.com/pohly""><code>@​pohly</code></a>) [SIG API Machinery, Architecture, CLI, Cluster Lifecycle, Instrumentation, Node and Scheduling]</li>; <li>Introduce <code>OS</code> field in the PodSpec (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/104693"">kubernetes/kubernetes#104693</a>, <a href=""https://github.com/ravisantoshgudimetla""><code>@​ravisantoshgudimetla</code></a>)</li>; <li>Introduce <code>v1beta3</code> API",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11957:4866,log,log,4866,https://hail.is,https://github.com/hail-is/hail/pull/11957,1,['log'],['log']
Testability,test,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9481:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/9481,4,['test'],['test']
Testability,test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[19]([Ljava.lang.String;@3e391ee2)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[19]([Ljava.lang.String;@3e391ee2) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testCXXCodeFunctions(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testCXXCodeFunctions PASSED; Running test: Test method testNativeBuild(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeBuild PASSED; Running test: Test method testNativeCallSpeed(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeCallSpeed PASSED; Running test: Test method testNativeGlobal(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeGlobal PASSED; Running test: Test method testNativePtr(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativePtr PASSED; Running test: Test method testNativeUpcall(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle tes,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:7947,test,test,7947,https://hail.is,https://github.com/hail-is/hail/issues/4718,3,"['Test', 'test']","['Test', 'test', 'testCXXCodeFunctions']"
Testability,test VSM.read with no partitioner,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/794:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/issues/794,1,['test'],['test']
Testability,test against central1-b to ensure AVX2 instructions are available,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2164:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/2164,1,['test'],['test']
Testability,test against central1-b to ensure AVX2 instructions are available (0.1),MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2165:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/2165,1,['test'],['test']
Testability,test against python3,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1392:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/issues/1392,1,['test'],['test']
Testability,test export .columns files,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/277:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/issues/277,1,['test'],['test']
Testability,test expr with scalacheck,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/231:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/issues/231,1,['test'],['test']
Testability,test file format forward compatibility,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8249:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/issues/8249,1,['test'],['test']
Testability,test issue,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/issues/1,1,['test'],['test']
Testability,test nan conversion,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3021:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/issues/3021,1,['test'],['test']
Testability,test only,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11029:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/11029,1,['test'],['test']
Testability,test pull request,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/365:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/365,1,['test'],['test']
Testability,test representation of variants/etc against htsjdk,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1670:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/issues/1670,1,['test'],['test']
Testability,test upload,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4539:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/issues/4539,1,['test'],['test']
Testability,"test, ignore",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10151:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/10151,1,['test'],['test']
Testability,"test-dataproc was taking over an hour, for two reasons:. 1. Starting two vep clusters sequentially is slow.; 2. A very small cluster was working on submits that sometimes had 10k partitions. To solve this, I've:. 1. Split test-dataproc into test-dataproc-37 and test-dataproc-38; 2. Added a few preemptibles to cluster create script.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11273:0,test,test-dataproc,0,https://hail.is,https://github.com/hail-is/hail/pull/11273,4,['test'],"['test-dataproc', 'test-dataproc-']"
Testability,"test-dev/pytest-xdist/blob/master/CHANGELOG.rst"">pytest-xdist's changelog</a>.</em></p>; <blockquote>; <h1>pytest-xdist 2.5.0 (2021-12-10)</h1>; <h2>Deprecations and Removals</h2>; <ul>; <li><code>[#468](https://github.com/pytest-dev/pytest-xdist/issues/468) &lt;https://github.com/pytest-dev/pytest-xdist/issues/468&gt;</code>_: The <code>--boxed</code> command line argument is deprecated. Install pytest-forked and use <code>--forked</code> instead. pytest-xdist 3.0.0 will remove the <code>--boxed</code> argument and pytest-forked dependency.</li>; </ul>; <h2>Features</h2>; <ul>; <li>; <p><code>[#722](https://github.com/pytest-dev/pytest-xdist/issues/722) &lt;https://github.com/pytest-dev/pytest-xdist/issues/722&gt;</code>_: Full compatibility with pytest 7 - no deprecation warnings or use of legacy features.</p>; </li>; <li>; <p><code>[#733](https://github.com/pytest-dev/pytest-xdist/issues/733) &lt;https://github.com/pytest-dev/pytest-xdist/issues/733&gt;</code>_: New <code>--dist=loadgroup</code> option, which ensures all tests marked with <code>@pytest.mark.xdist_group</code> run in the same session/worker. Other tests run distributed as in <code>--dist=load</code>.</p>; </li>; </ul>; <h2>Trivial Changes</h2>; <ul>; <li>; <p><code>[#708](https://github.com/pytest-dev/pytest-xdist/issues/708) &lt;https://github.com/pytest-dev/pytest-xdist/issues/708&gt;</code>_: Use <code>@pytest.hookspec</code> decorator to declare hook options in <code>newhooks.py</code> to avoid warnings in <code>pytest 7.0</code>.</p>; </li>; <li>; <p><code>[#719](https://github.com/pytest-dev/pytest-xdist/issues/719) &lt;https://github.com/pytest-dev/pytest-xdist/issues/719&gt;</code>_: Use up-to-date <code>setup.cfg</code>/<code>pyproject.toml</code> packaging setup.</p>; </li>; <li>; <p><code>[#720](https://github.com/pytest-dev/pytest-xdist/issues/720) &lt;https://github.com/pytest-dev/pytest-xdist/issues/720&gt;</code>_: Require pytest&gt;=6.2.0.</p>; </li>; <li>; <p><code>[#721](https://",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11491:1218,test,tests,1218,https://hail.is,https://github.com/hail-is/hail/pull/11491,2,['test'],['tests']
Testability,testAll triggers testHail and test. test no longer triggers testHail. **WARNING:** the CI server will not run `testHail` on this branch nor will it run `testHail` after this branch is merged; we must manually edit the,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1769:0,test,testAll,0,https://hail.is,https://github.com/hail-is/hail/pull/1769,7,['test'],"['test', 'testAll', 'testHail']"
Testability,testCppCodegen; :compileJava UP-TO-DATE; :generateBuildInfo; :nativeLib; tar -xzf libsimdpp-2.1.tar.gz; :compileScala UP-TO-DATE; :processResources UP-TO-DATE; :classes UP-TO-DATE; :compileTestJava UP-TO-DATE; :compileTestScala UP-TO-DATE; :processTestResources UP-TO-DATE; :testClasses UP-TO-DATE; :testCppCodegen; Running test: Test method testReadWrite(is.hail.annotations.AnnotationsSuite). Gradle suite > Gradle test > is.hail.annotations.AnnotationsSuite.testReadWrite FAILED; org.apache.spark.SparkException at AnnotationsSuite.scala:76; Caused by: java.lang.AssertionError; Running test: Test method testEmptyKeys(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testEmptyKeys FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test:,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:1205,test,test,1205,https://hail.is,https://github.com/hail-is/hail/issues/4718,3,"['Test', 'test']","['Test', 'test', 'testIntervalIteratorWorksWithGeneralEndpoints']"
Testability,"tested 3 cases, when a commit has a results file, doesn't have a results file but has a running batch, or no file and no running batch.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9689:0,test,tested,0,https://hail.is,https://github.com/hail-is/hail/pull/9689,1,['test'],['tested']
Testability,testing,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11126:0,test,testing,0,https://hail.is,https://github.com/hail-is/hail/pull/11126,8,['test'],['testing']
Testability,testing 1 2 3,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9057:0,test,testing,0,https://hail.is,https://github.com/hail-is/hail/pull/9057,1,['test'],['testing']
Testability,testing a merge of all active service backend PRs,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11618:0,test,testing,0,https://hail.is,https://github.com/hail-is/hail/pull/11618,1,['test'],['testing']
Testability,testing lmm changes on 0.1,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2077:0,test,testing,0,https://hail.is,https://github.com/hail-is/hail/pull/2077,1,['test'],['testing']
Testability,"testing on CI, please ignore",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11616:0,test,testing,0,https://hail.is,https://github.com/hail-is/hail/pull/11616,1,['test'],['testing']
Testability,testing only,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11073:0,test,testing,0,https://hail.is,https://github.com/hail-is/hail/pull/11073,1,['test'],['testing']
Testability,testing things do not merge,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5917:0,test,testing,0,https://hail.is,https://github.com/hail-is/hail/pull/5917,1,['test'],['testing']
Testability,"testing, nothing to see here",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11761:0,test,testing,0,https://hail.is,https://github.com/hail-is/hail/pull/11761,1,['test'],['testing']
Testability,"tfilter</code> and <code>environmentfunction</code> are replaced; by <code>pass_environment</code>.</li>; <li><code>Markup</code> and <code>escape</code> should be imported from MarkupSafe.</li>; <li>Compiled templates from very old Jinja versions may need to be; recompiled.</li>; <li>Legacy resolve mode for <code>Context</code> subclasses is no longer; supported. Override <code>resolve_or_missing</code> instead of; <code>resolve</code>.</li>; <li><code>unicode_urlencode</code> is renamed to <code>url_quote</code>.</li>; </ul>; </li>; <li>; <p>Add support for native types in macros. :issue:<code>1510</code></p>; </li>; <li>; <p>The <code>{% trans %}</code> tag can use <code>pgettext</code> and <code>npgettext</code> by; passing a context string as the first token in the tag, like; <code>{% trans &quot;title&quot; %}</code>. :issue:<code>1430</code></p>; </li>; <li>; <p>Update valid identifier characters from Python 3.6 to 3.7.; :pr:<code>1571</code></p>; </li>; <li>; <p>Filters and tests decorated with <code>@async_variant</code> are pickleable.; :pr:<code>1612</code></p>; </li>; <li>; <p>Add <code>items</code> filter. :issue:<code>1561</code></p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/jinja/commit/b08cd4bc64bb980df86ed2876978ae5735572280""><code>b08cd4b</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pallets/jinja/issues/1660"">#1660</a> from pallets/release-3.1.2</li>; <li><a href=""https://github.com/pallets/jinja/commit/1e68ba86177504bb6404288610608b855eab93fa""><code>1e68ba8</code></a> release version 3.1.2</li>; <li><a href=""https://github.com/pallets/jinja/commit/8efee35092404ba67ede8316566be4f430e7b61d""><code>8efee35</code></a> pre-commit updates latest release branch</li>; <li><a href=""https://github.com/pallets/jinja/commit/a24df26d54fa2ccbe9bdaa0bb9419075a00e2699""><code>a24df26</code></a> ignor",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12173:4237,test,tests,4237,https://hail.is,https://github.com/hail-is/hail/pull/12173,1,['test'],['tests']
Testability,"than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0M2ViODJhZS04ZDkwLTRjZWUtYjIzMS01ZDMyYmZiZWM4OWEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjQzZWI4MmFlLThkOTAtNGNlZS1iMjMxLTVkMzJiZmJlYzg5YSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""43eb82ae-8d90-4cee-b231-5d32bfbec89a"",""prPublicId"":""43eb82ae-8d90-4cee-b231-5d32bfbec89a"",""dependencies"":[{""name"":""jinja2"",""from"":""3.1.2"",""to"":""3.1.3""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-JINJA2-6150717""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[556],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Cross-site Scripting (XSS)](https://learn.snyk.io/lesson/xss/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14136:2629,log,logic,2629,https://hail.is,https://github.com/hail-is/hail/pull/14136,1,['log'],['logic']
Testability,"than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlOTc1OTMyYy1kNmNhLTQ0NTUtYmU4ZC04NzY1ZGY0MTZjMWMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImU5NzU5MzJjLWQ2Y2EtNDQ1NS1iZThkLTg3NjVkZjQxNmMxYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""e975932c-d6ca-4455-be8d-8765df416c1c"",""prPublicId"":""e975932c-d6ca-4455-be8d-8765df416c1c"",""dependencies"":[{""name"":""jinja2"",""from"":""3.1.2"",""to"":""3.1.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-JINJA2-6150717""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[556],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Cross-site Scripting (XSS)](https://learn.snyk.io/lesson/xss/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14141:2947,log,logic,2947,https://hail.is,https://github.com/hail-is/hail/pull/14141,1,['log'],['logic']
Testability,"than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlYTQ5ODFkZC02M2FmLTQ4YzYtYTIwMC05NjkyZjg2ZTlhNjIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImVhNDk4MWRkLTYzYWYtNDhjNi1hMjAwLTk2OTJmODZlOWE2MiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""ea4981dd-63af-48c6-a200-9692f86e9a62"",""prPublicId"":""ea4981dd-63af-48c6-a200-9692f86e9a62"",""dependencies"":[{""name"":""jinja2"",""from"":""3.1.2"",""to"":""3.1.3""}],""packageManager"":""pip"",""projectPublicId"":""b7c31419-ec34-40f1-8bc6-ad8303fb329b"",""projectUrl"":""https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-JINJA2-6150717""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[556],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Cross-site Scripting (XSS)](https://learn.snyk.io/lesson/xss/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14140:2503,log,logic,2503,https://hail.is,https://github.com/hail-is/hail/pull/14140,1,['log'],['logic']
Testability,"that start with <code>_</code>.</li>; </ul>; <h2>1.2.0 - 2017-11-15</h2>; <ul>; <li>Added <code>transform</code> argument to :func:<code>string</code> and :func:<code>string_from</code>.</li>; <li>Made :meth:<code>Parser.combine_dict</code> accept lists of name value pairs,; and filter out keys with value <code>None</code>.</li>; <li>Added :func:<code>from_enum</code>.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-parsy/parsy/commit/c4f01f1f44b8e0afb6d3467051ca1d220cc005e3""><code>c4f01f1</code></a> Updated release process</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/03807bcef9cf0a5ff0583d6398f9d4a1eeb67ef2""><code>03807bc</code></a> Version bump - 1.4.0</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/c38eda7dfe58e9619d3b1a7f2210cdbb112bac1b""><code>c38eda7</code></a> Docs improvement</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/4486f90b4097805193d77c1c891817f281d89461""><code>4486f90</code></a> Fixed tests on Python 3.5</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/87e622e145482d93b9bb4fe137c4c76b4ef2a2b8""><code>87e622e</code></a> Added forward_declaration</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/2968580f9e98b44181d2c6c48c4890bc03081ebd""><code>2968580</code></a> Version bump for 1.4.0-dev1</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/bbc1d75065108a4de64f10e169ea542b6f3167b6""><code>bbc1d75</code></a> Test example code as part of tests</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/18df37a479f1bc4170999866433ca19f92f19f63""><code>18df37a</code></a> Dropped Python 3.4 from tox</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/1d7189b5bf78bd0d8d6e4bb2170dfeabba659c5c""><code>1d7189b</code></a> Merge branch 'master' of github.com:python-parsy/parsy</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/8ec01153ccf6c58e2811c0e4c760b98125aeebca""><code",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12007:2058,test,tests,2058,https://hail.is,https://github.com/hail-is/hail/pull/12007,1,['test'],['tests']
Testability,the 1b_1k benchmark goes from 100s to 0.12s,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7176:10,benchmark,benchmark,10,https://hail.is,https://github.com/hail-is/hail/pull/7176,1,['benchmark'],['benchmark']
Testability,"the PR namespace from the CI:. ```; pr-13135-default-u5tt5011yt5w; ```. Then I went to the Azure [Log Analytics workspace haildev-logs](https://portal.azure.com/#@haildev.onmicrosoft.com/resource/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/haildev/providers/Microsoft.OperationalInsights/workspaces/haildev-logs/logs). I went to ""Queries"", selected ""DK's AKS Pod Logs"", modified the namespace to the aforementioned one, and added a filter for ""hail-az://"". ```; let startTimestamp = ago(2h);; KubePodInventory; | where TimeGenerated > startTimestamp; | extend PodName=Name; | where Namespace == ""pr-13135-default-u5tt5011yt5w"" and PodName startswith ""batch-driver""; | distinct ContainerID, PodName, Namespace; | join (; ContainerLog; | where TimeGenerated > startTimestamp; ) on ContainerID; | project TimeGenerated, message=parse_json(LogEntry).message, LogEntry=parse_json(LogEntry); | where message contains ""hail-az://""; | order by TimeGenerated desc; ```. That revealed the batch logs path:. ```; EXAMPLE BATCH_JOB_LOGS_PATH hail-az://haildevtest/test/batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1/1/abc123/main/log; ```. In the [failing PR test job logs](https://ci.azure.hail.is/batches/3956877/jobs/152), I found the batch id:. ```; [2023-06-09 12:43:34] test/hail/methods/test_impex.py::BGENTests::test_import_bgen_row_fields; -------------------------------- live log call ---------------------------------; INFO batch_client.aioclient:aioclient.py:753 created batch 1148. INFO batch_client.aioclient:aioclient.py:770 updated batch 1148. FAILED; ```. I listed the job logs:. ```; (base) dking@wm28c-761 hail % az storage blob list --account-name haildevtest --container test --prefix batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/ -o table; Name Blob Type Blob Tier Length Content Type Last Modified Snapshot; ----------------------------------------------------------------------------- ----------- ----------- -------- ------------------------ ------------------------- -",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13160:1026,log,logs,1026,https://hail.is,https://github.com/hail-is/hail/pull/13160,1,['log'],['logs']
Testability,"the `@benchmark` decorator).; By convention, benchmarks are python tests whose names are prefixed by `benchmark_` and are located in files with the same prefix.; Nothing enforces this, however, so you could name your benchmarks `test_*` and put them in files named `test_*.py`.; Benchmarks may import and use any test code or utilities defined in `test/`.; The results of each benchmark are outputted as json lines (`.jsonl`) to the file specified by the `--output` pytest arg or stdout. The folder structure should be familiar, resembling our `test/` directory.; I believe this is flexible enough to add `hailtop` benchmarks should we so wish:; ```; pytest.ini - hoisted from `test/` to include benchmark marks; benchmark/; - conftest.py for custom pytest command line args ; - hail/; - confest.py for custom plugin that runs hail benchmarks; - benchmark_*.py hail query benchmark code; - tools/; - shared utilites, including the `@benchmark`; ```; Supporting pytest fixtures required writing a custom plugin to run benchmarks, as using off-the-shelf; solutions like `pytest-benchmark` would forbid method level fixtures like `tmp_path` etc.; The plugin is designed to run ""macro-benchmarks"" (ie long-running tests) and fully supports pytest parameterisation.; For each benchmark, the plugin initialises hail and then repeats (for a number of iterations defined by the pytest mark); acquiring fixtures, timing invocation and tearing-down fixtures, finally stopping hail. It is therefore unsuitable for; microbenchmarks, for which we currenly have none in python. If we add them we'd need to tweak this so support them.; Perhaps an inner loop or something. The process of submitting benchmarks to batch is greatly simplified as the old `Makefile` infrastructure for ; building wheels and docker images etc has been replaced with the script `benchmark_in_batch.py`.; Benchmark images are now based off the `hail-dev` image built in CI (or via the `hail-dev-image` make target). ; Furthermore, you can ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14565:1269,benchmark,benchmark,1269,https://hail.is,https://github.com/hail-is/hail/pull/14565,4,['benchmark'],"['benchmark', 'benchmarks']"
Testability,"the `resource` directory is `src/test/resources`, not meant for output.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6315:33,test,test,33,https://hail.is,https://github.com/hail-is/hail/pull/6315,1,['test'],['test']
Testability,the `test_dataproc` steps need what is in ci-utils but also the tools in base_image to build hail. Tested with a dev deploy of `test_dataproc-37`,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12874:99,Test,Tested,99,https://hail.is,https://github.com/hail-is/hail/pull/12874,1,['Test'],['Tested']
Testability,"the current structure is easier to follow:. 1. Fit the null model.; 2. If wald, assume the beta for the genotypes is zero and use the rest of the parameters from the null model fit to compute the score (i.e. the gradient of the likelihood). Recall calculus: gradient near zero => value near the maximum. Return: this is the test.; 3. Otherwise, fit the full model starting at the null fit parameters.; 4. Test the ""goodness"" of this new & full fit. ---. Poisson regression is similar but with a different likelihood function and gradient thereof. Notice that I `key_cols_by()` to indicate to Hail that the order of the cols is irrelevant (the result is a locus-keyed table after all). This is necessary at least until #12753 merges. I think it's generally a good idea though: it indicates to Hail that the ordering of the columns is irrelevant, which is potentially useful information for the optimizer!. ---. Both logistic and Poisson regression can benefit from BLAS3 by running at least the score test for multiple variants at once. ---. I'll attach an image in the comments, but I spend ~6 seconds compiling this trivial model and ~140ms testing it. ```python3; import hail as hl; mt = hl.utils.range_matrix_table(1, 3); mt = mt.annotate_entries(x=hl.literal([1, 3, 10, 5])); ht = hl.poisson_regression_rows(; 'wald', y=hl.literal([0, 1, 1, 0])[mt.col_idx], x=mt.x[mt.col_idx], covariates=[1], max_iterations=2); ht.collect(); ```. I grabbed some [sample code from; scikit-learn](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.PoissonRegressor.html) for Poisson regression (doing a score test rather than a wald test) and timed it. It takes ~8ms. So we're 3 orders of magnitude including the compiler, and ~1.2 orders of magnitude off without the compiler. Digging in a bit:; - ~65ms for class loading.; - ~15ms for region allocation.; - ~20ms various little spots. Leaving about 40ms strictly executing generated code That's about 5x which is starting to feel reasonable.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12793:2152,test,testing,2152,https://hail.is,https://github.com/hail-is/hail/pull/12793,3,['test'],"['test', 'testing']"
Testability,"the error. ### What went wrong (all error messages here, including the full java stack trace):; ```; [Stage 6:> (0 + 8) / 5000]; [Stage 6:> (0 + 4) / 5000]; [Stage 6:> (0 + 8) / 5000]Traceback (most recent call last):; File ""/home/hail/hail.zip/hail/utils/java.py"", line 185, in handle_py4j; File ""/home/hail/hail.zip/hail/table.py"", line 1058, in aggregate; File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/usr/lib/spark/python/lib/pyspark.zip/pyspark/sql/utils.py"", line 63, in deco; File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/protocol.py"", line 319, in get_return_value; py4j.protocol.Py4JJavaError: An error occurred while calling o30335.query.; : org.apache.spark.SparkException: Job aborted due to stage failure: Task 7 in stage 6.0 failed 20 times, most recent failure: Lost task 7.19 in stage 6.0 (TID 179, robert1-w-0.c.ccdg-wgs.internal, executor 4): java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.annotations.RegionValueBuilder.endStruct(RegionValueBuilder.scala:109); at is.hail.variant.MatrixTable$$anonfun$filterGenotypes$1$$anonfun$apply$80.apply(MatrixTable.scala:2645); at is.hail.variant.MatrixTable$$anonfun$filterGenotypes$1$$anonfun$apply$80.apply(MatrixTable.scala:2615); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:730); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:730); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:730); at scala.collectio",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3063:1472,assert,assert,1472,https://hail.is,https://github.com/hail-is/hail/issues/3063,1,['assert'],['assert']
Testability,"the following tests causes a segfault:. ```python; def test_agg_table_take(self):; ht = hl.utils.range_table(10).annotate(x = 'a'); ht.aggregate(agg.take(ht.x, 2)); ```. *only* as long as you run the test `test_init_hail_context_twice` in the same execution, i.e. ```; hail/python $ pytest -k 'test_init_hail_context_twice or test_agg_table_take'; platform darwin -- Python 3.6.0, pytest-4.5.0, py-1.8.0, pluggy-0.12.0; collected 653 items / 651 deselected / 2 selected ; test/hail/test_context.py . [ 50%]; test/hail/expr/test_expr.py F [100%]. .... # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x000000010ac8bbe2, pid=92110, tid=0x0000000000013d03; #; # JRE version: Java(TM) SE Runtime Environment (8.0_211-b12) (build 1.8.0_211-b12); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.211-b12 mixed mode bsd-amd64 compressed oops); # Problematic frame:; # J 5335 C1 is.hail.annotations.Region$.loadInt(J)I (5 bytes) @ 0x000000010ac8bbe2 [0x000000010ac8bb40+0xa2]; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/mturner/Documents/hail/hail/python/hs_err_pid92110.log; Compiled method (c1) 4061 5335 3 is.hail.annotations.Region$::loadInt (5 bytes); total in heap [0x000000010ac8b9d0,0x000000010ac8bd78] = 936; relocation [0x000000010ac8baf8,0x000000010ac8bb28] = 48; main code [0x000000010ac8bb40,0x000000010ac8bc60] = 288; stub code [0x000000010ac8bc60,0x000000010ac8bcf0] = 144; oops [0x000000010ac8bcf0,0x000000010ac8bcf8] = 8; metadata [0x000000010ac8bcf8,0x000000010ac8bd08] = 16; scopes data [0x000000010ac8bd08,0x000000010ac8bd30] = 40; scopes pcs [0x000000010ac8bd30,0x000000010ac8bd70] = 64; dependencies [0x000000010ac8bd70,0x000000010ac8bd78] = 8; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp. ....; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6860:14,test,tests,14,https://hail.is,https://github.com/hail-is/hail/issues/6860,6,"['log', 'stub', 'test']","['log', 'stub', 'test', 'tests']"
Testability,"the gcloud command write to `stderr` which gets interpreted as errors in the logs and causes [a lot of noise](https://console.cloud.google.com/logs/query;query=resource.type%3D%22k8s_container%22%0Aseverity%3DERROR%0Aresource.labels.namespace_name%3D%22default%22%0Aresource.labels.container_name%3D%22image-fetcher%22;timeRange=PT3H?project=hail-vdc&folder=true&organizationId=548622027621&query=%0A). . Added `gcr.io` because without it `configure-docker` would configure all the registries it can find, which is unnecessary. Also removed `-x` from the site script since each line of that goes to error logs and none of it is helpful. If errors occur they will show up in some other form.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9991:77,log,logs,77,https://hail.is,https://github.com/hail-is/hail/pull/9991,3,['log'],['logs']
Testability,"the local_path_uri function simply prepends 'file://' to the path provided. This leads to an odd situation were a relative path is transformed into 'file://relative/path/to/log', which parses as:. SCHEME: file; HOST : relative; PATH : path/to/log. To fix this, compute the real path of the log file and use that as the path for the local_path_uri",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13340:173,log,log,173,https://hail.is,https://github.com/hail-is/hail/pull/13340,3,['log'],['log']
Testability,the test case that I added was failing before this fix.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4304:4,test,test,4,https://hail.is,https://github.com/hail-is/hail/pull/4304,1,['test'],['test']
Testability,the uri got dropped in refactoring on PR that just went in #5686. Reverted the change and added a test to cluster sanity check.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5709:98,test,test,98,https://hail.is,https://github.com/hail-is/hail/pull/5709,1,['test'],['test']
Testability,"there aren't any scorecard tests, and running it in tests is blowing; out Github request limits. FYI @tpoterba",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6309:27,test,tests,27,https://hail.is,https://github.com/hail-is/hail/pull/6309,2,['test'],['tests']
Testability,"there's also a small amount of refactoring that was necessary to send TableIRSuite.testRangeCount through the lowered, jvm-emitted path to test the CollectDistributedArray implementation. cc @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6087:83,test,testRangeCount,83,https://hail.is,https://github.com/hail-is/hail/pull/6087,2,['test'],"['test', 'testRangeCount']"
Testability,these are the last of the changes from #6480; really this should be several distinct PRs and if I have a chance to refactor the tests I'll split it apart. notes to follow in the morning.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6518:128,test,tests,128,https://hail.is,https://github.com/hail-is/hail/pull/6518,1,['test'],['tests']
Testability,"thibaudcolas/curlylint/pull/68"">#68</a>).</li>; <li>Declare support for Python 3.9.</li>; <li>Tentatively declare support for Python 3.10 (tested with <code>Python 3.10.0a6+</code>).</li>; </ul>; <h3>Fixed</h3>; <ul>; <li>Fix Python 3.10 deprecation warning by importing Iterable from collections.abc (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/68"">#68</a>).</li>; </ul>; <h2><a href=""https://github.com/thibaudcolas/curlylint/releases/tag/v0.12.2"">v0.12.2</a> 2021-03-06</h2>; <h3>Fixed</h3>; <ul>; <li>The <code>image_alt</code> rule no longer crashes when encountering template conditionals in img attributes (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/57"">#57</a>). Thanks to <a href=""https://github.com/adrien-delhorme""><code>@​adrien-delhorme</code></a>.</li>; </ul>; <h2><a href=""https://github.com/thibaudcolas/curlylint/releases/tag/v0.12.1"">v0.12.1</a> 2021-03-06</h2>; <h3>Fixed</h3>; <ul>; <li>The project’s sdist now includes all needed files to run the test suite (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/49"">#49</a>, <a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/50"">#50</a>). Thanks to <a href=""https://github.com/jayvdb""><code>@​jayvdb</code></a>.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/20d279d3cba11d64529ee88c5a2092c5c09919b6""><code>20d279d</code></a> Release v0.13.1</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/5bd2922633791277f3073135f779fee3e6684bb4""><code>5bd2922</code></a> Update <code>patch_click</code> to fix compatibility issue with click 8.1.0. Fix <a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/132"">#132</a> (#...</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/e16056828523d9af3e13b67243d62830ff03d89d""><code>e160568</code></a> chore(deps): update act",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11713:6499,test,test,6499,https://hail.is,https://github.com/hail-is/hail/pull/11713,1,['test'],['test']
Testability,"thibaudcolas/curlylint/pull/68"">#68</a>).</li>; <li>Declare support for Python 3.9.</li>; <li>Tentatively declare support for Python 3.10 (tested with <code>Python 3.10.0a6+</code>).</li>; </ul>; <h3>Fixed</h3>; <ul>; <li>Fix Python 3.10 deprecation warning by importing Iterable from collections.abc (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/68"">#68</a>).</li>; </ul>; <h2><a href=""https://github.com/thibaudcolas/curlylint/releases/tag/v0.12.2"">v0.12.2</a> 2021-03-06</h2>; <h3>Fixed</h3>; <ul>; <li>The <code>image_alt</code> rule no longer crashes when encountering template conditionals in img attributes (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/57"">#57</a>). Thanks to <a href=""https://github.com/adrien-delhorme""><code>@​adrien-delhorme</code></a>.</li>; </ul>; <h2><a href=""https://github.com/thibaudcolas/curlylint/releases/tag/v0.12.1"">v0.12.1</a> 2021-03-06</h2>; <h3>Fixed</h3>; <ul>; <li>The project’s sdist now includes all needed files to run the test suite (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/49"">#49</a>, <a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/50"">#50</a>). Thanks to <a href=""https://github.com/jayvdb""><code>@​jayvdb</code></a>.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/e6f6869fddbf307e3267ac164561c669039d557a""><code>e6f6869</code></a> Release v0.13.0 (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/78"">#78</a>)</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/2afa4b2934c3b61b96259d548c26cd49e03daf24""><code>2afa4b2</code></a> Implement --template-tags CLI flag</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/28316eea40acb6f67f267a0fa1545d81fb3ed59a""><code>28316ee</code></a> Re-add repo token</li>; <li><a href=""https://github.com/thibaudcolas/curlyl",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11494:4879,test,test,4879,https://hail.is,https://github.com/hail-is/hail/pull/11494,2,['test'],['test']
Testability,this deploys a standard ghost installation to the default namespace and routes to it from blog.hail.is; can be customized once deployed. This won't pass tests until #7413 is in.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7381:153,test,tests,153,https://hail.is,https://github.com/hail-is/hail/pull/7381,1,['test'],['tests']
Testability,"this project.</h3>. #### Changes included in this PR. - Changes to the following files to upgrade the vulnerable dependencies to a fixed version:; - hail/python/dev/pinned-requirements.txt. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **591/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 6.1 | Information Exposure <br/>[SNYK-PYTHON-REQUESTS-5595532](https://snyk.io/vuln/SNYK-PYTHON-REQUESTS-5595532) | `requests:` <br> `2.28.2 -> 2.31.0` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzYWEwNDk2OC02NDIxLTRmODktYTBjYy03MjE4MzExNDNiZGQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjNhYTA0OTY4LTY0MjEtNGY4OS1hMGNjLTcyMTgzMTE0M2JkZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13100:1232,test,tested,1232,https://hail.is,https://github.com/hail-is/hail/pull/13100,1,['test'],['tested']
Testability,"this the exception (attached the log):. ``` ; File ""/tmp/7f8f775e-2ec3-40ee-ad5b-3e4df5649682/annotate_and_generate_scores_cloud.py"", line 24, in <module>; .vep(config='/vep/vep-gcloud.properties', root='va.vep', force=True); File ""/home/teamcity/TeamCityAgent1/work/591c293e3f6bfb1d/python/hail/dataset.py"", line 3095, in vep; File ""/home/teamcity/TeamCityAgent1/work/591c293e3f6bfb1d/python/hail/context.py"", line 81, in run_command; File ""/home/teamcity/TeamCityAgent1/work/591c293e3f6bfb1d/python/hail/java.py"", line 5, in jarray; File ""/usr/lib/spark/python/lib/py4j-0.10.3-src.zip/py4j/java_collections.py"", line 228, in __setitem__; File ""/usr/lib/spark/python/lib/py4j-0.10.3-src.zip/py4j/java_collections.py"", line 211, in __set_item; File ""/usr/lib/spark/python/lib/py4j-0.10.3-src.zip/py4j/protocol.py"", line 323, in get_return_value; py4j.protocol.Py4JError: An error occurred while calling None.None. Trace:; java.lang.IllegalArgumentException: array element type mismatch; at java.lang.reflect.Array.set(Native Method); at py4j.commands.ArrayCommand.setArray(ArrayCommand.java:141); at py4j.commands.ArrayCommand.execute(ArrayCommand.java:94); at py4j.GatewayConnection.run(GatewayConnection.java:214); at java.lang.Thread.run(Thread.java:745) ; ```. [hail.txt](https://github.com/hail-is/hail/files/725407/hail.txt)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1284:33,log,log,33,https://hail.is,https://github.com/hail-is/hail/issues/1284,1,['log'],['log']
Testability,"thlib-1.3.0 rsa-4.7.2 scipy-1.6.1 six-1.15.0 tabulate-0.8.3 tornado-6.1 tqdm-4.42.1 traitlets-5.0.5 typing-extensions-3.7.4.3 urllib3-1.25.11 wcwidth-0.2.5 wrapt-1.12.1 yarl-1.6.3; (3.8) ✔ ~/sandbox/hail [master|𝚫8?2]; snafu$ ipython ; Python 3.8.6 (default, Jan 27 2021, 15:42:20) ; Type 'copyright', 'credits' or 'license' for more information; IPython 7.21.0 -- An enhanced Interactive Python. Type '?' for help. In [1]: import hail; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-1-e24d842d2b9a> in <module>; ----> 1 import hail. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/hail/__init__.py in <module>; 32 # F401 '.expr.*' imported but unused; 33 # E402 module level import not at top of file; ---> 34 from .table import Table, GroupedTable, asc, desc # noqa: E402; 35 from .matrixtable import MatrixTable, GroupedMatrixTable # noqa: E402; 36 from .expr import * # noqa: F401,F403,E402. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/hail/table.py in <module>; 2 import itertools; 3 import pandas; ----> 4 import pyspark; 5 from typing import Optional, Dict, Callable; 6 . ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/__init__.py in <module>; 49 ; 50 from pyspark.conf import SparkConf; ---> 51 from pyspark.context import SparkContext; 52 from pyspark.rdd import RDD, RDDBarrier; 53 from pyspark.files import SparkFiles. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/context.py in <module>; 29 from py4j.protocol import Py4JError; 30 ; ---> 31 from pyspark import accumulators; 32 from pyspark.accumulators import Accumulator; 33 from pyspark.broadcast import Broadcast, BroadcastPickleRegistry. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/accumulators.py in <module>; 95 import socketserver as SocketServer; 96 import threading; ---> 97 from pyspark.serializers import read_int, PickleSerializer; 98 ; 99 . ~/sandbox/hail/venv/3.8/lib/python3.8/s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/10197:10246,sandbox,sandbox,10246,https://hail.is,https://github.com/hail-is/hail/issues/10197,1,['sandbox'],['sandbox']
Testability,"thon-logging/issues/456"">#456</a>) (<a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544"">8a67b73</a>)</li>; </ul>; <h2>v2.7.0</h2>; <h3>Features</h3>; <ul>; <li>add context manager support in client (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/415"">#415</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/f5af16439807a0954ee78fa91cb69b9493b80176"">f5af164</a>)</li>; <li>added support for iam AuditData proto (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/396"">#396</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use structured logging on GCF with python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/434"">#434</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/googleapis/python-logging/blob/main/CHANGELOG.md"">google-cloud-logging's changelog</a>.</em></p>; <blockquote>; <h2><a href=""https://github.com/googleapis/python-logging/compare/v2.7.0...v3.0.0"">3.0.0</a> (2022-01-27)</h2>; <h3>⚠ BREAKING CHANGES</h3>; <ul>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/pytho",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:5356,log,logging,5356,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,"thub.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2820"">cbeust/testng#2820</a></li>; <li>Refactoring by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2821"">cbeust/testng#2821</a></li>; <li>Fixing bug with DataProvider retry by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2822"">cbeust/testng#2822</a></li>; <li>Add config key for callback discrepancy behavior by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2823"">cbeust/testng#2823</a></li>; <li>Upgrading versions by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2824"">cbeust/testng#2824</a></li>; <li>Fix <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2770"">#2770</a>: FileAlreadyExistsException on copy by <a href=""https://github.com/melloware""><code>@​melloware</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2827"">cbeust/testng#2827</a></li>; <li>JarFileUtils.delete(File f) throw actual exception (instead of FileNotFound) when file cannot be deleted <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2825"">#2825</a> by <a href=""https://github.com/speedythesnail""><code>@​speedythesnail</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2826"">cbeust/testng#2826</a></li>; <li>GITHUB-2830 - Failsafe parameter.toString by <a href=""https://github.com/seregamorph""><code>@​seregamorph</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2831"">cbeust/testng#2831</a></li>; <li>Changing assertion message of the osgitest by <a href=""https://github.com/krm",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:4323,test,testng,4323,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['test'],['testng']
Testability,"time"": ""2019-07-11 14:19:34,974"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""_delete_pvc:251"", ""message"": ""deleting persistent volume claim batch-9-job-1-c8b9b2""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,976"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1145"", ""message"": ""update job (9, 1, 'main') with pod batch-9-job-1-c8b9b2""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,977"", ""filename"": ""web_log.py"", ""funcNameAndLine"": ""log:233"", ""message"": ""10.32.4.199 [11/Jul/2019:14:19:34 +0000] \""GET /api/v1alpha/batches/9 HTTP/1.1\"" 200 279 \""-\"" \""Python/3.6 aiohttp/3.5.4\"""", ""remote_address"": ""10.32.4.199"", ""request_start_time"": ""[11/Jul/2019:14:19:34 +0000]"", ""first_request_line"": ""GET /api/v1alpha/batches/9 HTTP/1.1"", ""response_status"": 200, ""response_size"": 279, ""request_header"": {""Referer"": ""-"", ""User-Agent"": ""Python/3.6 aiohttp/3.5.4""}}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,985"", ""filename"": ""web_log.py"", ""funcNameAndLine"": ""log:233"", ""message"": ""10.32.4.199 [11/Jul/2019:14:19:34 +0000] \""GET /api/v1alpha/batches/9 HTTP/1.1\"" 200 279 \""-\"" \""Python/3.6 aiohttp/3.5.4\"""", ""remote_address"": ""10.32.4.199"", ""request_start_time"": ""[11/Jul/2019:14:19:34 +0000]"", ""first_request_line"": ""GET /api/v1alpha/batches/9 HTTP/1.1"", ""response_status"": 200, ""response_size"": 279, ""request_header"": {""Referer"": ""-"", ""User-Agent"": ""Python/3.6 aiohttp/3.5.4""}}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,991"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1145"", ""message"": ""update job (9, 1, 'main') with pod batch-9-job-1-c8b9b2""}; ```. Recall that pod creation happens in the background, so the `batches/9/create` and `batches/9/close` endpoints return to the client before pods are necessarily created. See batch.py:866, `Batch.close`. Likewise, the `batches/9/cancel` endpoint returns before the individual jobs are cancelled. There are now at most three concurrent threads of control interacting with the ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6617:4001,log,log,4001,https://hail.is,https://github.com/hail-is/hail/issues/6617,1,['log'],['log']
Testability,"timizer_iterations, backend, driver_cores, driver_memory); 299 return asyncio.get_event_loop().run_until_complete(init_batch(; 300 log=log,; 301 quiet=quiet,; (...); 309 name_prefix=app_name; 310 )); 311 if backend == 'spark':; --> 312 return init_spark(; 313 app_name=app_name,; 314 master=master,; 315 local=local,; 316 min_block_size=min_block_size,; 317 branching_factor=branching_factor,; 318 spark_conf=spark_conf,; 319 _optimizer_iterations=_optimizer_iterations,; 320 log=log,; 321 quiet=quiet,; 322 append=append,; 323 tmp_dir=tmp_dir,; 324 local_tmpdir=local_tmpdir,; 325 default_reference=default_reference,; 326 global_seed=global_seed,; 327 skip_logging_configuration=skip_logging_configuration; 328 ); 329 if backend == 'local':; 330 return init_local(; 331 log=log,; 332 quiet=quiet,; (...); 337 skip_logging_configuration=skip_logging_configuration; 338 ). File <decorator-gen-1705>:2, in init_spark(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations). File ~/miniforge3/envs/hail/lib/python3.9/site-packages/hail/typecheck/check.py:577, in _make_dec.<locals>.wrapper(__original_func, *args, **kwargs); 574 @decorator; 575 def wrapper(__original_func, *args, **kwargs):; 576 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 577 return __original_func(*args_, **kwargs_). File ~/miniforge3/envs/hail/lib/python3.9/site-packages/hail/context.py:384, in init_spark(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations); 381 optimizer_iterations = get_env_or_default(_optimizer_iterations, 'HAIL_OPTIMIZER_ITERATIONS', 3); 383 app_name = app_name or 'Hail'; --> 384 backend = SparkBackend(; 385 idempotent, sc, spark_conf, a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/11827:4116,log,log,4116,https://hail.is,https://github.com/hail-is/hail/issues/11827,1,['log'],['log']
Testability,"ting grpc when explicitly disabled (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/416"">#416</a>) (<a href=""https://github.com/googleapis/python-logging/commit/818213e143d6a1941211a48e0b23069a426ac300"">818213e</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>) (<a href=""https://github.com/googleapis/python-logging/commit/c63250399fcd6e1317d341e98fab11095c443e5e"">c632503</a>)</li>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>) (<a href=""https://github.com/googleapis/python-logging/commit/83d9ca8521fe7c470bb6755a48a97496515d7abc"">83d9ca8</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>) (<a href=""https://github.com/googleapis/python-logging/commit/5267152574b2ee96eb6f5c536a762f58bd2f886e"">5267152</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>) (<a href=""https://github.com/googleapis/python-logging/commit/6fa17735fe3edb45483ec5e3abd1f53c24ffa881"">6fa1773</a>)</li>; <li>trace improvements (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/450"">#450</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3"">e0c5fc0</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/444"">#444</a>) (<a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce"">97e32b6</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>) (<a href=""https://github.com/googleapis/pyt",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:2824,log,logging,2824,https://hail.is,https://github.com/hail-is/hail/pull/11574,2,['log'],['logging']
Testability,"tion, rather than a class)](https://reactjs.org/docs/components-and-props.html). 4) NextJS includes a light, fast router. Routes are matched based on the names of files in `pages/`, with index.js mapping to `/`. For instance, to navigate to `domain.com/scorecard/users`, you'd make the folder structure:. pages/; * scorecard.tsx; * scorecard/; * users.tsx. These 'pages' components are just like normal react components, except they expose `getInitialProps`, described above. Each page file must export 1 default component:. ```js; #Page file; import React from 'react';. const index = () => <div>Hello World</div>; export default index;; ```. There is nothing else to do to get routing to work, a quite nice solution. ### JS pragma; 1. `this` is different than in most (every?) other language. scope of this is bound to caller, not object containing the method; * Solution: use arrow functions. ```js; class Something {; constructor() {; this.bar = 'foo';; } ; //Do; onSubmit = () => {; console.log(this.bar) //prints foo; }. // Don't; onSubmitBad() {; console.log(this.bar) //may be undefined; }; }. const barrer = new Something();; console.info(""good"", barrer.onSubmit());; console.info(""bad"", barrer.onSubmitBad());; ```. # Tips . ### Client-side routing; Wrap a normal anchor tag in `<Link ></Link>`; ex:; ```jsx; <Link href='/path/to/page'><a>Page Name</a></Link>; ```. This simply adds the client-side routing logic, and passes the href to <a href=. . ### Prefetching; One of the neat things about Next is how easy it makes prefetching pages. This allows perceived page loading times on the order of 5ms, even when the page requires very complex state (say a GraphQL or series of REST calls with large responses). ```jsx; <Link href='/expensive-page' prefetch><a>Expensive Page</a></Link>; ```; ### Make your app do ONLY server-side routing; Meaning every time you click on a link in your page, you hit the server, just like the first visited page. . Simply use `<a>` directly. ### Caching and ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5162:13169,log,log,13169,https://hail.is,https://github.com/hail-is/hail/pull/5162,1,['log'],['log']
Testability,"tionCounts: int64}),filePath)),array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/cols/rows,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""EBaseStruct{s:EBinary}"",""_vType"":""Struct{s:String}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray(),JArray(List(JObject(List((start,JObject(List())), (end,JObject(List())), (includeStart,JBool(true)), (includeEnd,JBool(true)))))),null,Map()))), WriteMetadata(MakeArray(ArrayBuffer(GetField(Ref(__iruid_368,struct{filePath: str, partitionCounts: int64}),partitionCounts)),array<int64>),TableSpecWriter(gs://danking/workshop-test/1kg.mt/cols,Table{global:Struct{},key:[s],row:Struct{s:String}},rows,../globals/rows,../references,false)), Let(__iruid_374,ToArray(StreamMap(ToStream(Ref(__iruid_369,array<struct{filePath: str, partitionCounts: int64}>),false),__iruid_375,GetField(Ref(__iruid_375,struct{filePath: str, partitionCounts: int64}),filePath))),Begin(ArrayBuffer(WriteMetadata(Ref(__iruid_374,array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/rows/rows,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{locus:+EBaseStruct{contig:+EBinary,position:+EInt32},alleles:+EArray[+EBinary],rsid:EBinary,qual:EFloat64,filters:EArray[+EBinary],info:+EBaseStruct{AC:EArray[EInt32],AF:EArray[EFloat64],AN:EInt32,BaseQRankSum:EFloat64,ClippingRankSum:EFloat64,DP:EInt32,DS:+EBoolean,FS:EFloat64,HaplotypeScore:EFloat64,InbreedingCoeff:EFloat64,MLEAC:EArray[EInt32],MLEAF:EArray[EFloat64],MQ:EFloat64,MQ0:EInt32,MQRankSum:EFloat64,QD:EFloat64,ReadPosRankSum:EFloat64,set:EBinary}}"",""_vType"":""Struct{locus:Locus(GRCh37),alleles:Array[String],rsid:String,qual:Float64,filters:Set[String],info:Struct{AC:Array[Int32],AF:Array[Float64],AN:Int32,BaseQRankSum:Float64,ClippingRankSum:Float64,DP:Int32,DS:Boolean,FS:Float64,HaplotypeScore:Float64,InbreedingCoeff:Float64,MLEAC:Ar",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9856:12879,test,test,12879,https://hail.is,https://github.com/hail-is/hail/issues/9856,1,['test'],['test']
Testability,tionFailedException(TestNGSuite.scala:67); 	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:501); 	at is.hail.io.fs.FSSuite.largeDirectoryOperations(FSSuite.scala:413); 	at is.hail.io.fs.FSSuite.largeDirectoryOperations$(FSSuite.scala:398); 	at is.hail.io.fs.GoogleStorageFSSuite.largeDirectoryOperations(GoogleStorageFSSuite.scala:10); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333). test is.hail.io.fs.GoogleStorageFSSuite.largeDirectoryOperations FAILURE; ```. ### Version. 0.2.124. ### Relevant log output. _No response_,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13827:1680,Test,TestMethodWorker,1680,https://hail.is,https://github.com/hail-is/hail/issues/13827,33,"['Test', 'log', 'test']","['TestMethodWorker', 'TestNG', 'TestRunner', 'log', 'test', 'testng']"
Testability,tionHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123); Caused by: java.lang.ArrayIndexOutOfBoundsException: 3; 	at scala.collection.mutable.WrappedArray$ofRef.apply(WrappedArray.scala:127); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.getKey$1(OrderingSuite.scala:345); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.apply(OrderingSuite.scala:347); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.apply(OrderingSuite.scala:318); 	at is.hail.utils.package$.using(package.scala:613); 	at is.hail.annotations.Region$.scoped(Region.scala:13); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33.apply(OrderingSuite.scala:318); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33.apply(OrderingSuite.scala:314); 	at is.hail.check.GenProp1$$anonfun$apply$1$$anonfun$1.apply$mcZ$sp(Prop.scala:28); 	at is.hail.check.GenProp1$$anonfun$apply$1$$anonfun$1.ap,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5630:1950,test,testng,1950,https://hail.is,https://github.com/hail-is/hail/issues/5630,1,['test'],['testng']
Testability,"tition the `size` of a random generator, we partition using a [Dirichlet-Multinomial distribution](https://en.wikipedia.org/wiki/Dirichlet-multinomial_distribution) with all α_n set to `parts`, which tends towards a uniformly distributed vector. Upon writing this PR, I realize it might be more desirable to set all α_n to 1. Commentary welcome. 3. When we choose the length of a random sequence, we choose it using the [Beta-Binomial Distribution](https://en.wikipedia.org/wiki/Beta-binomial_distribution) with `n` set to the maximum sequence size (usually the Gen's `size`), α set to `3` and β set to `6 * ln(n + 0.01)`. My choice of β is motivated by keeping the mass away from `0` when `n` is small. In particular, I'd like the mean to be greater than or equal to one, so `nα/(α+β) >= 1` so for, say, n=4, `β/α <= 3`. For large values of `n` I want values closer to zero than given by α=3, β=4. I really want commentary on how to choose sequence lengths. Choosing from a Beta-Binomial with a beta weighted by the natural log (shifted by 0.01 to avoid ln(1) = 0) seems very unnatural. Here's α=3, β=6, at n=4 and n=100:. <img width=""752"" alt=""screen shot 2017-06-05 at 2 40 04 pm"" src=""https://cloud.githubusercontent.com/assets/106194/26798031/1c14c0d4-49fd-11e7-9423-0cc46f412145.png"">; <img width=""752"" alt=""screen shot 2017-06-05 at 2 40 18 pm"" src=""https://cloud.githubusercontent.com/assets/106194/26798032/1c16b7d6-49fd-11e7-9a5c-04766ddab9ba.png"">. Note that the mean for n=100 is close to 35, pretty big. Now here's α=3, β=6*ln(n+0.01), at n=4 and n=100:. <img width=""752"" alt=""screen shot 2017-06-05 at 2 40 54 pm"" src=""https://cloud.githubusercontent.com/assets/106194/26798030/1bfc3e06-49fd-11e7-80d9-882e050c5087.png"">; <img width=""752"" alt=""screen shot 2017-06-05 at 2 40 34 pm"" src=""https://cloud.githubusercontent.com/assets/106194/26798033/1c1ad85c-49fd-11e7-8294-b8a5466ade4c.png"">. The n=4 case doesn't change much but the n=100 case biases towards smaller values, which is gener",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1902:10936,log,log,10936,https://hail.is,https://github.com/hail-is/hail/pull/1902,1,['log'],['log']
Testability,"tiveBuild PASSED; Running test: Test method testNativeCallSpeed(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeCallSpeed PASSED; Running test: Test method testNativeGlobal(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeGlobal PASSED; Running test: Test method testNativePtr(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativePtr PASSED; Running test: Test method testNativeUpcall(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeUpcall PASSED; Running test: Test method testObjectArray(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testObjectArray PASSED; Running test: Test method testShuffleAndJoinDoesntMemoryLeak(is.hail.expr.ir.TableIRSuite). Gradle suite > Gradle test > is.hail.expr.ir.TableIRSuite.testShuffleAndJoinDoesntMemoryLeak PASSED; Running test: Test method testBufferWriteReadDoubles(is.hail.annotations.UnsafeSuite). Gradle suite > Gradle test > is.hail.annotations.UnsafeSuite.testBufferWriteReadDoubles PASSED; Running test: Test method testCodec(is.hail.annotations.UnsafeSuite); #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007fe4a85738ec, pid=23790, tid=0x00007fe48cdfa700; #; # JRE version: OpenJDK Runtime Environment (8.0_181-b13) (build 1.8.0_181-8u181-b13-0ubuntu0.18.04.1-b13); # Java VM: OpenJDK 64-Bit Server VM (25.181-b13 mixed mode linux-amd64 compressed oops); # Problematic frame:; # J 9008 C1 is.hail.annotations.UnsafeRow$.readBinary(Lis/hail/annotations/Region;J)[B (39 bytes) @ 0x00007fe4a85738ec [0x00007fe4a8573600+0x2ec]; #; # Core dump written. Default location: /home/BROAD.MIT.EDU/cvittal/src/hail/hail/core or core.23790 (max size 9223372036854775 kB). To ensur",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:9304,test,test,9304,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['test']
Testability,"to complete before it starts the next iteration of the scheduler. This leaves the scheduler vulnerable to problematic workers or workers that happen to be preempted during the scheduling process. So, the driver sets a [2 second timeout](https://github.com/hail-is/hail/blob/b27737f67bf9e69f1abed2fec07fc7c921790ef8/batch/batch/driver/job.py#L585) on the call to `/api/v1alpha/batches/jobs/create`. Additionally, this general design means that in the event of a request timeout or transient error, Batch cannot guarantee that there is always at most one concurrent running attempt for a given job. This ends up being a fine (and intentional) concession in practice because the idempotent design of preemptible jobs tends to cover this scenario, but it is regardless wasted compute and cost to users. Nevertheless, we strive to minimize cases where we might halt the scheduling loop or double-schedule work, and one way to do that in the current design is to minimize the variance in latency of `/api/v1alpha/batches/jobs/create`. The largest source of this latency is the request to blob storage. While GCS and ABS are relatively fast and highly available, Batch in Azure Terra requires first obtaining SAS tokens from the Terra control plane, which can introduce much higher and more variable latency. There have also been occurrences in the past of corrupted or deleted specs, which introduce unexpected failure modes that should error the job but instead disrupt the scheduling loop. Many of these problems would be mitigated by moving the read from object storage outside of the `/api/v1alpha/batches/jobs/create` endpoint. The endpoint should push this read into the asynchronous task that ultimately runs the job and therefore return its acknowledgement to the driver faster. If the worker encounters errors later on while reading the spec, those should result in `error`ing the job instead of raising a 500 in the scheduling request. ### Version. 0.2.129. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14456:2920,log,log,2920,https://hail.is,https://github.com/hail-is/hail/issues/14456,1,['log'],['log']
Testability,"to download the JAR. In the new approach, the python worker process uses a; lock to ensure at most one coroutine is downloading a given version of a JAR at the same time. 2. The JVM includes assumes that a child ClassLoader does not redefine a class from the parent; ClassLoader. That's why ClassLoaders always prefer to load a class from the parent ClassLoader's; classes. When we decide to re-use JVMs or use a single multi-threaded JVM, we'll need to ensure the top-level; ClassLoader *does not have Hail on its classpath*. I looked briefly at this approach and found it; more work than the current approach. ---. My apologies for eliminating JVMProcess in this PR. It's an unrelated change which facilitated my; understanding of worker.py. I essentially inlined JVMProcess into JVMJob and eliminated any duplicative; code. ---. After making this change I restored the tests. Some tests had bitrotted. In the process of fixing; those tests, I found a few other bugs. Fixing these lower-level bugs unlocked a number of new; tests. One test (which was added since the service tests were removed) had to be marked as failing. Some; Hail operations rely on writing to the local file system. Implementing that properly in the Query; Worker will take some thought. Here are the bugs I fixed:. 1. Correct the error message raised when tests are run in a non-main thread (we look for this; message and start an event loop for Hail's async code because asyncio refuses to start an event; loop in a non-main thread). 2. Use a `SafeRow` to copy the globals data out of a Region and into durable, GC'ed objects. 3. Re-enable serialization of GoogleStorageFS (including its private key, which we really shouldn't; do; Tim is working on it), which was broken (presumably) when we changed Scala versions. The; `var` modifier ensures the name is compiled as a JVM field. 4. Correctly convert from a `Byte` to an `Int`. By default `Byte` to `Int` conversion (which is done; automatically when you return a `Byte` fr",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10314:1563,test,tests,1563,https://hail.is,https://github.com/hail-is/hail/pull/10314,1,['test'],['tests']
Testability,to ensure that combOps are being tested somewhere.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3806:33,test,tested,33,https://hail.is,https://github.com/hail-is/hail/pull/3806,1,['test'],['tested']
Testability,"to merge 22 vcf.gz into a matrix table.; ```python3; import hail as hl; import sys. hl.init(default_reference='GRCh38'); vcf=""/project/casa/bayestyper/vcf/adsp5k.cadre.chr*.norm.ann2.ruth.fix.vcf.gz""; mt=""/project/casa/bayestyper/mt/adsp5k.cadre.bayestyper.autosome.mt""; print(""Converting vcf ""+vcf+"" to mt ""+ mt); hl.import_vcf(vcf,force_bgz=True).write(mt); ```; -----------------------------------------------------------------------------; ```; $ submit ./vcf2mt_all.py; Loading modules; /share/pkg.7/gcc/8.3.0/install/lib64:/share/pkg.7/gcc/8.3.0/install/lib:/share/pkg.7/python3/3.7.7/install/lib:/usr/hdp/2.6.5.0-292/hadoop/lib/native/; Export env vars; Submitting Spark job; 20/08/17 23:24:46 WARN util.Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.; Running on Apache Spark version 2.4.3; SparkUI available at http://scc-hadoop.bu.edu:4041; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.46-6ef64c08b000; LOGGING: writing to /restricted/projectnb/casa/wgs.hg38/pipelines/bayestyper/merge/hail-20200817-2324-0.2.46-6ef64c08b000.log; Converting vcf /project/casa/bayestyper/vcf/adsp5k.cadre.chr*.norm.ann2.ruth.fix.vcf.gz to mt /project/casa/bayestyper/mt/adsp5k.cadre.bayestyper.autosome.mt; [Stage 1:==================================================>(30467 + 1) / 30468]2020-08-17 23:59:36 Hail: INFO: Coerced almost-sorted dataset; 2020-08-17 23:59:37 Hail: INFO: Coerced dataset with out-of-order partitions.; [Stage 2:================> (9622 + 90) / 30468]Traceback (most recent call last):; File ""/restricted/projectnb/casa/wgs.hg38/pipelines/bayestyper/merge/./vcf2mt_all.py"", line 10, in <module>; hl.import_vcf(vcf,force_bgz=True).write(mt); File ""<decorator-gen-1213>"", line 2, in write; File ""/share/pkg.7/hail/0.2.46/install/lib/python3.7/site-packages/hail/typecheck/check.py"", line 614, in wrapper; return __original_func(*args_, **kwargs_); File ""/share/pkg.7/hail/0.2.46/install/lib/python3.7/site-packages/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9293:1244,LOG,LOGGING,1244,https://hail.is,https://github.com/hail-is/hail/issues/9293,1,['LOG'],['LOGGING']
Testability,"to mirror MakeArray; typecheck in evalsEqualTo; add If asserts in constructor, Emit",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4664:55,assert,asserts,55,https://hail.is,https://github.com/hail-is/hail/pull/4664,1,['assert'],['asserts']
Testability,"to replicate:. ```python; def tmt2(table, row_key, col_key, row_fields=[], col_fields=[], n_partitions=None):; ht = table.key_by(). non_entry_fields = set(itertools.chain(row_key, col_key, row_fields, col_fields)); entry_fields = [x for x in ht.row if x not in non_entry_fields]. if not entry_fields:; raise ValueError(...). col_data = hl.rbind(; hl.array(; hl.dict(; ht.aggregate(; hl.agg.collect_as_set(; (ht.row.select(*col_key),; ht.row.select(*col_fields)))))),; lambda data: hl.struct(data=data,; key_to_index=hl.dict(hl.range(0, hl.len(data)).map(lambda i: (data[i][0], i)))); ). col_data_uid = Env.get_uid(); ht = ht.drop(*col_fields); ht = ht.annotate_globals(**{col_data_uid: col_data}). entries_uid = Env.get_uid(); ht = (ht.group_by(*row_key); .partition_hint(n_partitions); .aggregate(**{x: hl.agg._prev_nonnull(ht[x]) for x in row_fields},; **{entries_uid: hl.rbind(; hl.dict(hl.agg.collect((ht[col_data_uid]['key_to_index'][ht.row.select(*col_key)],; ht.row.select(*entry_fields)))),; lambda entry_dict: hl.range(0, hl.len(ht[col_data_uid]['key_to_index'])); .map(lambda i: entry_dict.get(i))); })); ht = ht.annotate_globals(; **{col_data_uid: hl.array(ht[col_data_uid]['data'].map(lambda elt: hl.struct(**elt[0], **elt[1])))}); return ht._unlocalize_entries(entries_uid, col_data_uid, col_key). N, M = 50, 50; mt = hl.utils.range_matrix_table(N, M); mt = mt.key_cols_by(s = 'Col' + hl.str(M - mt.col_idx)); mt = mt.annotate_cols(c1 = hl.rand_bool(0.5)); mt = mt.annotate_rows(r1 = hl.rand_bool(0.5)); mt = mt.annotate_entries(e1 = hl.rand_bool(0.5)). re_mt = tmt2(mt.entries(), ['row_idx'], ['s'], ['r1'], ['col_idx', 'c1']); new_col_order = re_mt.col_idx.collect(); mapping = [t[1] for t in sorted([(old, new) for new, old in enumerate(new_col_order)])]. assert re_mt.choose_cols(mapping).drop('col_idx')._same(mt.drop('col_idx')); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5345:1772,assert,assert,1772,https://hail.is,https://github.com/hail-is/hail/issues/5345,1,['assert'],['assert']
Testability,"to replicate:; ```python; In [2]: mt = hl.import_vcf('src/test/resources/sample.vcf'); In [3]: mt.aggregate_entries(hl.agg.counter(hl.agg.explode(mt.PL))); ```; ```; Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 2.0 failed 1 times, most recent failure: Lost task 0.0 in stage 2.0 (TID 2, localhost, executor driver): java.lang.NullPointerException; 	at is.hail.codegen.generated.C1.apply(Unknown Source); 	at is.hail.codegen.generated.C1.apply(Unknown Source); 	at is.hail.expr.CM$$anonfun$runWithDelayedValues$1.apply(CM.scala:84); 	at is.hail.expr.CM$$anonfun$runWithDelayedValues$1.apply(CM.scala:82); 	at is.hail.expr.AST$$anonfun$runAggregator$1.apply(AST.scala:270); 	at is.hail.expr.AST$$anonfun$runAggregator$1.apply(AST.scala:268); 	at is.hail.methods.Aggregators$$anonfun$11.apply(Aggregators.scala:304); 	at is.hail.methods.Aggregators$$anonfun$11.apply(Aggregators.scala:300); 	at is.hail.variant.MatrixTable$$anonfun$82$$anonfun$apply$64$$anonfun$apply$65.apply(MatrixTable.scala:1743); 	at is.hail.variant.MatrixTable$$anonfun$82$$anonfun$apply$64$$anonfun$apply$65.apply(MatrixTable.scala:1741); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at is.hail.annotations.UnsafeIndexedSeq.foreach(UnsafeRow.scala:51); 	at is.hail.variant.MatrixTable$$anonfun$82$$anonfun$apply$64.apply(MatrixTable.scala:1741); 	at is.hail.variant.MatrixTable$$anonfun$82$$anonfun$apply$64.apply(MatrixTable.scala:1734); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at is.hail.variant.MatrixTable$$anonfun$82.apply(MatrixTable.scala:1734); 	at is.hail.variant.MatrixTable$$anonfun$82.apply(MatrixTable.scala:1728); 	at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:79",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3276:58,test,test,58,https://hail.is,https://github.com/hail-is/hail/issues/3276,1,['test'],['test']
Testability,"to solve Duncan's problems in time for conference, still needs docs and tests but I think the math is right. PRing now so @danking and I can hack on it tomorrow",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4501:72,test,tests,72,https://hail.is,https://github.com/hail-is/hail/pull/4501,1,['test'],['tests']
Testability,"tools:htsjdk's releases</a>.</em></p>; <blockquote>; <h3>3.0.4</h3>; <p>Hotfix for <a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1637"">#1637</a></p>; <p>This is a single change e2943b78ff595e144281b8a3c126be5a4d70085d which reverts <a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1593"">#1593</a></p>; <h2>3.0.3</h2>; <h1>Serious Known issue</h1>; <p>We've introduced a serious bug by making the VCF sort order more stable in many situations when outputting vcfs. This introduced the side effect of causing many valid VCF's to be incorrectly flagged as invalid when reading existing VCFS.</p>; <p><strong>We recommend against updating to this version, prefer 3.0.4 or 3.0.2</strong></p>; <h2>What's Changed</h2>; <ul>; <li>Use allele info in VariantContext comparisons for stable sorts by <a href=""https://github.com/clintval""><code>@​clintval</code></a> in <a href=""https://github-redirect.dependabot.com/samtools/htsjdk/pull/1593"">samtools/htsjdk#1593</a></li>; <li>Fix HtsCRAMCodec test data provider. by <a href=""https://github.com/cmnbroad""><code>@​cmnbroad</code></a> in <a href=""https://github-redirect.dependabot.com/samtools/htsjdk/pull/1632"">samtools/htsjdk#1632</a></li>; <li>Allow the BAM index to be up to 5 seconds older than the BAM before e… by <a href=""https://github.com/tfenne""><code>@​tfenne</code></a> in <a href=""https://github-redirect.dependabot.com/samtools/htsjdk/pull/1634"">samtools/htsjdk#1634</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/samtools/htsjdk/compare/3.0.2...3.0.3"">https://github.com/samtools/htsjdk/compare/3.0.2...3.0.3</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/samtools/htsjdk/commit/e2943b78ff595e144281b8a3c126be5a4d70085d""><code>e2943b7</code></a> Revert &quot;Use allele info in VariantContext comparisons for stable sorts (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/159",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12700:1258,test,test,1258,https://hail.is,https://github.com/hail-is/hail/pull/12700,1,['test'],['test']
Testability,"tp://dev.hail.is/t/proposal-for-aggregators/93/3. Builds on: https://github.com/hail-is/hail/pull/3552. I still need to finish converting some tests from ExtractAggregatorSuite (they are currently commented out). Old-style aggregators (filter, map, flatMap) are expanded at toIR conversion time to ApplyAggOp and SeqOp. ApplyAggOp returns the result of the aggregation. ApplyAggOp's first argument, which must be of type TVoid, is the expression to run for each element being aggregated over. SeqOp merges a computed value into the RegionValueAggregator. I added a AggSignature that holds the AggOp, type being aggregated over and the RegionValueAggregator constructor argument types. This is stored by the ApplyAggOp and the SeqOp. @tpoterba I believe TAggregable is no longer used in the IR code and can go away when the AST gets ripped out. @danking I added some IR testing logic to TestUtils. Namely, `eval` evaluates an IR with environments, args and/or aggregations with a single call (and verifies that the interpret with and without optimization and compiler all agree). There are also functions for asserting the result of aggregations, for example:. ```; val aggSig = AggSignature(Sum(), TFloat64(), FastSeq()); assertEvalsTo(ApplyAggOp(; SeqOp(ApplyBinaryPrimOp(Multiply(), Ref(""a"", TFloat64()), Ref(""b"", TFloat64())), I32(0), aggSig),; FastSeq(), aggSig),; (FastIndexedSeq(Row(1.0, 10.0), Row(10.0, 10.0), Row(null, 10.0)), TStruct(""a"" -> TFloat64(), ""b"" -> TFloat64())),; 110.0); ```. The line:. > (FastIndexedSeq(Row(1.0, 10.0), ...), TStruct(""a"" -> TFloat64(), ""b"" -> TFloat64())),. is the IndexedSeq of values to aggregate over, along with their signature. The struct type is used to build the scope in which aggregators are evaluated. (A little noisy because of the aggregator syntax. It's noisier than I'd like it to be.). This nicely paves the way for aggregators with multi-argument seqOps (like takeBy) that were previously handled by lambdas and we didn't have a clear plan for.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3570:1168,assert,asserting,1168,https://hail.is,https://github.com/hail-is/hail/pull/3570,2,['assert'],"['assertEvalsTo', 'asserting']"
Testability,"tps://github-redirect.dependabot.com/cbeust/testng/pull/2793"">cbeust/testng#2793</a></li>; <li>Fix issue 2801 - Only resolve hostname once by <a href=""https://github.com/spkrka""><code>@​spkrka</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2802"">cbeust/testng#2802</a></li>; <li>[SECURITY] Fix Zip Slip Vulnerability; by <a href=""https://github.com/JLLeitschuh""><code>@​JLLeitschuh</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2806"">cbeust/testng#2806</a></li>; <li>GITHUB-2807 - Failsafe buildStackTrace by <a href=""https://github.com/seregamorph""><code>@​seregamorph</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2808"">cbeust/testng#2808</a></li>; <li>Prevent overlogging of debug msgs in Graph impl by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2813"">cbeust/testng#2813</a></li>; <li>Streamline dataprovider invoking in abstract classes by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2814"">cbeust/testng#2814</a></li>; <li>Streamline TestResult due to expectedExceptions by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2815"">cbeust/testng#2815</a></li>; <li>Unexpected test runs count with retry analyzer by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2816"">cbeust/testng#2816</a></li>; <li>Make PackageUtils compliant with JPMS by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2817"">cbeust/testng#2817</a></li>; <li>Ability to retry a data provider during failures by <a href=""https://github.com/krmahad",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:2317,test,testng,2317,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['test'],['testng']
Testability,"tps://github.com/thockin""><code>@​thockin</code></a>)</li>; <li>Added a feature gate <code>StatefulSetAutoDeletePVC</code>, which allows PVCs automatically created for StatefulSet pods to be automatically deleted. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/99728"">kubernetes/kubernetes#99728</a>, <a href=""https://github.com/mattcary""><code>@​mattcary</code></a>)</li>; <li>Client-go impersonation config can specify a UID to pass impersonated uid information through in requests. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/104483"">kubernetes/kubernetes#104483</a>, <a href=""https://github.com/margocrawf""><code>@​margocrawf</code></a>)</li>; <li>Create HPA v2 from v2beta2 with some fields changed. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/102534"">kubernetes/kubernetes#102534</a>, <a href=""https://github.com/wangyysde""><code>@​wangyysde</code></a>) [SIG API Machinery, Apps, Auth, Autoscaling and Testing]</li>; <li>Ephemeral containers graduated to beta and are now available by default. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/105405"">kubernetes/kubernetes#105405</a>, <a href=""https://github.com/verb""><code>@​verb</code></a>)</li>; <li>Fix kube-proxy regression on UDP services because the logic to detect stale connections was not considering if the endpoint was ready. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/106163"">kubernetes/kubernetes#106163</a>, <a href=""https://github.com/aojea""><code>@​aojea</code></a>) [SIG API Machinery, Apps, Architecture, Auth, Autoscaling, CLI, Cloud Provider, Contributor Experience, Instrumentation, Network, Node, Release, Scalability, Scheduling, Storage, Testing and Windows]</li>; <li>If a conflict occurs when creating an object with <code>generateName</code>, the server now returns an &quot;AlreadyExists&quot; error with a retry option. (<a href=""https://github-redirect.depend",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11957:3405,Test,Testing,3405,https://hail.is,https://github.com/hail-is/hail/pull/11957,1,['Test'],['Testing']
Testability,"tps://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use structured logging on GCF with python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/434"">#434</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/googleapis/python-logging/blob/main/CHANGELOG.md"">google-cloud-logging's changelog</a>.</em></p>; <blockquote>; <h2><a href=""https://github.com/googleapis/python-logging/compare/v2.7.0...v3.0.0"">3.0.0</a> (2022-01-27)</h2>; <h3>⚠ BREAKING CHANGES</h3>; <ul>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>)</li>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>)</li>; </ul>; <h3>Features</h3>; <ul>; <li>add api key support (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/472"">#472</a>) (<a href=""https://github.com/googleapis/python-logging/commit/81ca8c616acb988be1fbecfc2a0b1a5b39280149"">81ca8c6</a>)</li>; <li>add json_fields ext",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:5994,log,logging,5994,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,"transmitted. In `start.py` we just use exec-style invocation, so there's no equivalent issue. ```; 7c7; < --properties=^|||^spark:spark.task.maxFailures=20|||spark:spark.driver.extraJavaOptions=-Xss4M|||spark:spark.executor.extraJavaOptions=-Xss4M|||spark:spark.speculation=true|||hdfs:dfs.replication=1|||dataproc:dataproc.logging.stackdriver.enable=false|||dataproc:dataproc.monitoring.stackdriver.enable=false|||spark:spark.driver.memory=36g|||yarn:yarn.nodemanager.resource.memory-mb=29184|||yarn:yarn.scheduler.maximum-allocation-mb=14592|||spark:spark.executor.cores=4|||spark:spark.executor.memory=5837m|||spark:spark.executor.memoryOverhead=8755m|||spark:spark.memory.storageFraction=0.2|||spark:spark.executorEnv.HAIL_WORKER_OFF_HEAP_MEMORY_PER_CORE_MB=3648 \; ---; > '--properties=^|||^spark:spark.task.maxFailures=20|||spark:spark.driver.extraJavaOptions=-Xss4M|||spark:spark.executor.extraJavaOptions=-Xss4M|||spark:spark.speculation=true|||hdfs:dfs.replication=1|||dataproc:dataproc.logging.stackdriver.enable=false|||dataproc:dataproc.monitoring.stackdriver.enable=false|||spark:spark.driver.memory=36g|||yarn:yarn.nodemanager.resource.memory-mb=29184|||yarn:yarn.scheduler.maximum-allocation-mb=14592|||spark:spark.executor.cores=4|||spark:spark.executor.memory=5837m|||spark:spark.executor.memoryOverhead=8755m|||spark:spark.memory.storageFraction=0.2|||spark:spark.executorEnv.HAIL_WORKER_OFF_HEAP_MEMORY_PER_CORE_MB=3648' \; 9c9; < --metadata=^|||^WHEEL=gs://hail-30-day/hailctl/dataproc/dking-dev/0.2.126-a51eabd65859/hail-0.2.126-py3-none-any.whl|||PKGS=aiodns==2.0.0|aiohttp==3.9.1|aiosignal==1.3.1|async-timeout==4.0.3|attrs==23.1.0|avro==1.11.3|azure-common==1.1.28|azure-core==1.29.5|azure-identity==1.15.0|azure-mgmt-core==1.4.0|azure-mgmt-storage==20.1.0|azure-storage-blob==12.19.0|bokeh==3.3.1|boto3==1.33.1|botocore==1.33.1|cachetools==5.3.2|certifi==2023.11.17|cffi==1.16.0|charset-normalizer==3.3.2|click==8.1.7|commonmark==0.9.1|contourpy==1.2.0|cryptography==41.0.7|d",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14127:1238,log,logging,1238,https://hail.is,https://github.com/hail-is/hail/pull/14127,1,['log'],['logging']
Testability,"ts for STG78 GA (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/20491"">#20491</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/e572c97e53510572b0a515547bb711a9c7282ae5""><code>e572c97</code></a> [Storage]fix live test (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/20463"">#20463</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/d3d7e3e719a079415b0d955112b7e185791b5f0c""><code>d3d7e3e</code></a> Fix type annotation in azure.storage.blob (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/20084"">#20084</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/7e7f55233be72e999ffee255697665921df14f76""><code>7e7f552</code></a> keyvault and storage have a conflict between mindependency and what local azu...</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/a152bfbd45103013f6ca27dbbded03913cd43dc0""><code>a152bfb</code></a> [Storage]fix live test (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/20217"">#20217</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/Azure/azure-sdk-for-python/compare/azure-storage-blob_12.8.1...azure-storage-blob_12.9.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=azure-storage-blob&package-manager=pip&previous-version=12.8.1&new-version=12.9.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11484:2809,test,test,2809,https://hail.is,https://github.com/hail-is/hail/pull/11484,2,['test'],['test']
Testability,"ttps://github.com/Azure/azure-sdk-for-python/commit/e40d3e1d985cee13a2e0d070fb8e04958905f468""><code>e40d3e1</code></a> [storage.blob] Remove aiohttp as dependency for storage.blob.aio (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/24965"">#24965</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/7915719f211cc1217dfca6f3973a2b1f04c2e3f5""><code>7915719</code></a> [Storage] Prepare for STG83 GA release (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/25040"">#25040</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/155eb8b69b3cd2f8ef992cf1436bf2751769ac42""><code>155eb8b</code></a> [Storage] Add <code>progress_hook</code> to file-share upload/download (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/24997"">#24997</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/66dd3bef2d6e531e83cefd65be4cbbf41fcf2531""><code>66dd3be</code></a> [Storage] Fix more flaky lease tests (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/25011"">#25011</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/030141734a239fa6fb1aa7a8c43d322c82753510""><code>0301417</code></a> [Storage] Add argument to perf tests to use client-side encryption (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/24978"">#24978</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/Azure/azure-sdk-for-python/compare/azure-storage-blob_12.11.0...azure-storage-blob_12.13.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=azure-storage-blob&package-manager=pip&previous-version=12.11.0&new-version=12.13.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12109:4023,test,tests,4023,https://hail.is,https://github.com/hail-is/hail/pull/12109,1,['test'],['tests']
Testability,"ttps://www.github.com/googleapis/python-storage/commit/f81a2d054616c1ca1734997a16a8f47f98ab346b"">f81a2d0</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>raise a ValueError in BucketNotification.create() if a topic name is not set (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/617"">#617</a>) (<a href=""https://www.github.com/googleapis/python-storage/commit/9dd78df444d21af51af7858e8958b505a26c0b79"">9dd78df</a>)</li>; </ul>; <h3>Documentation</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/googleapis/python-storage/commit/8622440f216a9de36698f6af67af249a52134bd7""><code>8622440</code></a> chore(main): release 2.1.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/695"">#695</a>)</li>; <li><a href=""https://github.com/googleapis/python-storage/commit/46c3e66862b536393503ad213a30670f2f5e752e""><code>46c3e66</code></a> chore(python): Noxfile recognizes that tests can live in a folder (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/696"">#696</a>)</li>; <li><a href=""https://github.com/googleapis/python-storage/commit/8789afaaa1b2bd6f03fae72e3d87ce004ec10129""><code>8789afa</code></a> feat: avoid authentication with storage emulator (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/679"">#679</a>)</li>; <li><a href=""https://github.com/googleapis/python-storage/commit/71a453531603b442e26f1c78ab519cc0248e16c8""><code>71a4535</code></a> samples: add async upload sample (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/665"">#665</a>)</li>; <li><a href=""https://github.com/googleapis/python-storage/commit/4dafc815470480ce9de7f0357e331d3fbd0ae9b7""><code>4dafc81</code></a> feat: add turbo replication support and samples (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/622"">#622</a>)<",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11520:6055,test,tests,6055,https://hail.is,https://github.com/hail-is/hail/pull/11520,1,['test'],['tests']
Testability,"tures attribute for CMS</li>; <li>Add RFC5275 providing CMS Symmetric Key Management and Distribution</li>; <li>Add RFC8702 providing SHAKE One-way Hash Functions in the CMS</li>; <li>Add RFC8708 providing HSS/LMS Hash-based Signature Algorithm for CMS</li>; <li>Advance copyright statement to the year 2020</li>; <li>Add RFC8769 providing CBOR and CBOR Sequence content types for CMS</li>; </ul>; <p>A full list of changes could be seen in the <a href=""https://github.com/pyasn1/pyasn1-modules/blob/main/CHANGES.txt"">CHANGELOG</a>.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pyasn1/pyasn1-modules/blob/main/CHANGES.txt"">pyasn1-modules's changelog</a>.</em></p>; <blockquote>; <h2>Revision 0.3.0, released 19-04-2023</h2>; <ul>; <li>Added support for Python 3.8, 3.9, 3.10, 3.11</li>; <li>Removed support for EOL Pythons 2.4, 2.5, 2.6, 3.2, 3.3, 3.4, 3.5</li>; <li>Added support for PyPy 3.7, 3.8, 3.9</li>; <li>Modernized packaging and testing. pyasn1-modules now uses <code>setup.cfg</code>,; <code>pyproject.toml</code>, <a href=""https://pypi.org/project/build/"">build</a>, and; GitHub Actions.</li>; <li>PyPI package ownership for <code>pyasn1</code> and <code>pyasn1-module</code> has been; transfered to <em>Christian Heimes</em> and <em>Simon Pichugin</em> in; [PyPI support ticket <a href=""https://redirect.github.com/pyasn1/pyasn1-modules/issues/2090"">#2090</a>](<a href=""https://redirect.github.com/pypa/pypi-support/issues/2090"">pypa/pypi-support#2090</a>).</li>; <li>The upstream repositories for <code>pyasn1</code> and <code>pyasn1-modules</code> are now; in the GitHub organization <a href=""https://github.com/pyasn1/"">https://github.com/pyasn1/</a>.</li>; <li>Added tox runner with a handful of basic jobs</li>; <li>Add RFC3125 providing Electronic Signature Policies</li>; <li>Add RFC5126 providing CMS Advanced Electronic Signatures (CAdES)</li>; <li>Removed support for EOL Pythons 2.4, 2.5, 2.6, 3.2, 3.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12928:3456,test,testing,3456,https://hail.is,https://github.com/hail-is/hail/pull/12928,1,['test'],['testing']
Testability,turn off lowered compile except for tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6321:36,test,tests,36,https://hail.is,https://github.com/hail-is/hail/pull/6321,1,['test'],['tests']
Testability,tweak to logreg doc,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1412:9,log,logreg,9,https://hail.is,https://github.com/hail-is/hail/pull/1412,1,['log'],['logreg']
Testability,two tests were broken but have been fixed in another branch.; disabling for now.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2875:4,test,tests,4,https://hail.is,https://github.com/hail-is/hail/pull/2875,1,['test'],['tests']
Testability,"type; (namely, <code>module</code>, <code>keyword</code>, <code>operator</code>, <code>object</code>, <code>exception</code>,; <code>statement</code>, and <code>builtin</code>) in the :rst:dir:<code>index</code> directive, and; set the removal version to Sphinx 9. Patch by Adam Turner.</li>; </ul>; <h2>Features added</h2>; <ul>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11415"">#11415</a>: Add a checksum to JavaScript and CSS asset URIs included within; generated HTML, using the CRC32 algorithm.</li>; <li>:meth:<code>~sphinx.application.Sphinx.require_sphinx</code> now allows the version; requirement to be specified as <code>(major, minor)</code>.</li>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11011"">#11011</a>: Allow configuring a line-length limit for object signatures, via; :confval:<code>maximum_signature_line_length</code> and the domain-specific variants.; If the length of the signature (in characters) is greater than the configured; limit, each parameter in the signature will be split to its own logical line.; This behaviour may also be controlled by options on object description; directives, for example :rst:dir:<code>py:function:single-line-parameter-list</code>.; Patch by Thomas Louf, Adam Turner, and Jean-François B.</li>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/10983"">#10983</a>: Support for multiline copyright statements in the footer block.; Patch by Stefanie Molin</li>; <li><code>sphinx.util.display.status_iterator</code> now clears the current line; with ANSI control codes, rather than overprinting with space characters.</li>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11431"">#11431</a>: linkcheck: Treat SSL failures as broken links.; Patch by Bénédikt Tran</li>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11157"">#11157</a>: Keep the <code>translated</code> attribute on translated nodes.</li>; <li><a href=""https://redirect.github.com",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13295:2643,log,logical,2643,https://hail.is,https://github.com/hail-is/hail/pull/13295,1,['log'],['logical']
Testability,uate.scala:45); at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:600); at is.hail.backend.spark.SparkBackend.$anonfun$execute$4(SparkBackend.scala:636); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:84); at is.hail.backend.spark.SparkBackend.$anonfun$execute$3(SparkBackend.scala:631); at is.hail.backend.spark.SparkBackend.$anonfun$execute$3$adapted(SparkBackend.scala:630); at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:78); at is.hail.utils.package$.using(package.scala:664); at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:78); at is.hail.utils.package$.using(package.scala:664); at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:65); at is.hail.backend.spark.SparkBackend.$anonfun$withExecuteContext$2(SparkBackend.scala:407); at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:55); at is.hail.utils.ExecutionTimer$.logTime(ExecutionTimer.scala:62); at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:393); at is.hail.backend.spark.SparkBackend.execute(SparkBackend.scala:630); at is.hail.backend.BackendHttpHandler.handle(BackendServer.scala:88); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:83); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:82); at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:822); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:794); at sun.net.httpserver.ServerImpl$DefaultExecutor.execute(ServerImpl.java:199); at sun.net.httpserver.ServerImpl$Dispatcher.handle(ServerImpl.java:544); at sun.net.httpserver.ServerImpl$Dispatcher.run(ServerImpl.java:509); at java.lang.Thread.run(Thread.java:750). Hail version: 0.2.127-d82c34a83360; Error summary: NullPointerException: null; ```,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14249:6503,log,logTime,6503,https://hail.is,https://github.com/hail-is/hail/issues/14249,1,['log'],['logTime']
Testability,uate.scala:45); at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:601); at is.hail.backend.spark.SparkBackend.$anonfun$execute$4(SparkBackend.scala:637); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:84); at is.hail.backend.spark.SparkBackend.$anonfun$execute$3(SparkBackend.scala:632); at is.hail.backend.spark.SparkBackend.$anonfun$execute$3$adapted(SparkBackend.scala:631); at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:77); at is.hail.utils.package$.using(package.scala:665); at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:77); at is.hail.utils.package$.using(package.scala:665); at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:64); at is.hail.backend.spark.SparkBackend.$anonfun$withExecuteContext$2(SparkBackend.scala:407); at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:55); at is.hail.utils.ExecutionTimer$.logTime(ExecutionTimer.scala:62); at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:393); at is.hail.backend.spark.SparkBackend.execute(SparkBackend.scala:631); at is.hail.backend.BackendHttpHandler.handle(BackendServer.scala:89); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:83); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:82); at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:822); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:794); at sun.net.httpserver.ServerImpl$DefaultExecutor.execute(ServerImpl.java:199); at sun.net.httpserver.ServerImpl$Dispatcher.handle(ServerImpl.java:544); at sun.net.httpserver.ServerImpl$Dispatcher.run(ServerImpl.java:509); at java.lang.Thread.run(Thread.java:750). Hail version: 0.2.127-bb535cd096c5; Error summary: NegativeArraySizeException: nul,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14168:25240,log,logTime,25240,https://hail.is,https://github.com/hail-is/hail/issues/14168,1,['log'],['logTime']
Testability,uate.scala:45); at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:601); at is.hail.backend.spark.SparkBackend.$anonfun$execute$4(SparkBackend.scala:637); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:84); at is.hail.backend.spark.SparkBackend.$anonfun$execute$3(SparkBackend.scala:632); at is.hail.backend.spark.SparkBackend.$anonfun$execute$3$adapted(SparkBackend.scala:631); at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:77); at is.hail.utils.package$.using(package.scala:665); at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:77); at is.hail.utils.package$.using(package.scala:665); at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:64); at is.hail.backend.spark.SparkBackend.$anonfun$withExecuteContext$2(SparkBackend.scala:407); at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:55); at is.hail.utils.ExecutionTimer$.logTime(ExecutionTimer.scala:62); at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:393); at is.hail.backend.spark.SparkBackend.execute(SparkBackend.scala:631); at is.hail.backend.BackendHttpHandler.handle(BackendServer.scala:89); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:83); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:82); at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:822); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:794); at sun.net.httpserver.ServerImpl$DefaultExecutor.execute(ServerImpl.java:199); at sun.net.httpserver.ServerImpl$Dispatcher.handle(ServerImpl.java:544); at sun.net.httpserver.ServerImpl$Dispatcher.run(ServerImpl.java:509); at java.lang.Thread.run(Thread.java:750). java.lang.NegativeArraySizeException: null; at com.esotericsoftware.kryo.util.Iden,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14168:17712,log,logTime,17712,https://hail.is,https://github.com/hail-is/hail/issues/14168,1,['log'],['logTime']
Testability,"uate.scala:45); at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:601); at is.hail.backend.spark.SparkBackend.$anonfun$execute$4(SparkBackend.scala:637); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:84); at is.hail.backend.spark.SparkBackend.$anonfun$execute$3(SparkBackend.scala:632); at is.hail.backend.spark.SparkBackend.$anonfun$execute$3$adapted(SparkBackend.scala:631); at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:77); at is.hail.utils.package$.using(package.scala:665); at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:77); at is.hail.utils.package$.using(package.scala:665); at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:64); at is.hail.backend.spark.SparkBackend.$anonfun$withExecuteContext$2(SparkBackend.scala:407); at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:55); at is.hail.utils.ExecutionTimer$.logTime(ExecutionTimer.scala:62); at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:393); at is.hail.backend.spark.SparkBackend.execute(SparkBackend.scala:631); at is.hail.backend.BackendHttpHandler.handle(BackendServer.scala:89); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:83); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:82); at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:822); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:794); at sun.net.httpserver.ServerImpl$DefaultExecutor.execute(ServerImpl.java:199); at sun.net.httpserver.ServerImpl$Dispatcher.handle(ServerImpl.java:544); at sun.net.httpserver.ServerImpl$Dispatcher.run(ServerImpl.java:509); at java.lang.Thread.run(Thread.java:750); ```. Interesting thing is, when I tried to convert the exactly same data in local ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14168:7765,log,logTime,7765,https://hail.is,https://github.com/hail-is/hail/issues/14168,1,['log'],['logTime']
Testability,"ub-redirect.dependabot.com/cbeust/testng/pull/2824"">cbeust/testng#2824</a></li>; <li>Fix <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2770"">#2770</a>: FileAlreadyExistsException on copy by <a href=""https://github.com/melloware""><code>@​melloware</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2827"">cbeust/testng#2827</a></li>; <li>JarFileUtils.delete(File f) throw actual exception (instead of FileNotFound) when file cannot be deleted <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2825"">#2825</a> by <a href=""https://github.com/speedythesnail""><code>@​speedythesnail</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2826"">cbeust/testng#2826</a></li>; <li>GITHUB-2830 - Failsafe parameter.toString by <a href=""https://github.com/seregamorph""><code>@​seregamorph</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2831"">cbeust/testng#2831</a></li>; <li>Changing assertion message of the osgitest by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2832"">cbeust/testng#2832</a></li>; <li>hidden spotbugs in release <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2829"">#2829</a> by <a href=""https://github.com/bobshie""><code>@​bobshie</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2833"">cbeust/testng#2833</a></li>; <li>Enhancing the Matrix by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2834"">cbeust/testng#2834</a></li>; <li>Avoid Compilation errors on Semeru JDK flavour. by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2835"">cbeust/testng#2835</a></li>; <li>Add addition yml extension by <a href=""https://githu",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:5234,test,testng,5234,https://hail.is,https://github.com/hail-is/hail/pull/12665,3,"['assert', 'test']","['assertion', 'testng']"
Testability,"ub-redirect.dependabot.com/cbeust/testng/pull/2842"">cbeust/testng#2842</a></li>; <li>Deprecate support for running Spock Tests by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2846"">cbeust/testng#2846</a></li>; <li>Streamline dependsOnMethods for configurations by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2845"">cbeust/testng#2845</a></li>; <li>Ensure ITestContext available for JUnit4 tests by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2848"">cbeust/testng#2848</a></li>; <li>Deprecate support for running JUnit tests by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2849"">cbeust/testng#2849</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/gruenich""><code>@​gruenich</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2781"">cbeust/testng#2781</a></li>; <li><a href=""https://github.com/anatolyuzhakov""><code>@​anatolyuzhakov</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2793"">cbeust/testng#2793</a></li>; <li><a href=""https://github.com/spkrka""><code>@​spkrka</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2802"">cbeust/testng#2802</a></li>; <li><a href=""https://github.com/JLLeitschuh""><code>@​JLLeitschuh</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2806"">cbeust/testng#2806</a></li>; <li><a href=""https://github.com/seregamorph""><code>@​seregamorph</code></a> made their first contribution in <a href=""https://githu",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:7981,test,testng,7981,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['test'],['testng']
Testability,"ub.com/googleapis/python-logging/commit/83d9ca8521fe7c470bb6755a48a97496515d7abc"">83d9ca8</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>) (<a href=""https://github.com/googleapis/python-logging/commit/5267152574b2ee96eb6f5c536a762f58bd2f886e"">5267152</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>) (<a href=""https://github.com/googleapis/python-logging/commit/6fa17735fe3edb45483ec5e3abd1f53c24ffa881"">6fa1773</a>)</li>; <li>trace improvements (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/450"">#450</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3"">e0c5fc0</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/444"">#444</a>) (<a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce"">97e32b6</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e1506fa9030776353878048ce562c53bf6ccf7bf"">e1506fa</a>)</li>; </ul>; <h3>Miscellaneous Chores</h3>; <ul>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e3cac888d40bf67af11e57b74615b0c3b8e8aa3e"">e3cac88</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>) (<a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544"">",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:3541,log,logging,3541,https://hail.is,https://github.com/hail-is/hail/pull/11574,2,['log'],['logging']
Testability,"ub.com/madzak/python-json-logger/commit/7c40f4abf46ee6f3b5f4290f12ff3e9872ff9892""><code>7c40f4a</code></a> removed typo around build badge</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/0837da313ea796e353b40b574e3f82591a698caf""><code>0837da3</code></a> added env to git ignore</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/c58d7d4660780e3d4872189f9889200917a8930f""><code>c58d7d4</code></a> manifest will now include readme for setup.py long description. tox and</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/03e831488ce55e4aaf886806b2c66082fb8c4027""><code>03e8314</code></a> Removed references to travis</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/e8a8a20e09d66bcce41010f29b37107eafae6ba4""><code>e8a8a20</code></a> fixed python version mapping and typo in tox name</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/d02050343b58d4585145b5f19b0499d01ef9a1d8""><code>d020503</code></a> initial conversion from travis</li>; <li>Additional commits viewable in <a href=""https://github.com/madzak/python-json-logger/compare/v0.1.11...v2.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=python-json-logger&package-manager=pip&previous-version=0.1.11&new-version=2.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate t",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11467:4370,log,logger,4370,https://hail.is,https://github.com/hail-is/hail/pull/11467,1,['log'],['logger']
Testability,"ub.com/saschagrunert""><code>@​saschagrunert</code></a>) [SIG Apps, Auth, CLI and Node]</li>; <li>Adds the ability to disable Accelerator/GPU metrics collected by Kubelet (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91930"">kubernetes/kubernetes#91930</a>, <a href=""https://github.com/RenaudWasTaken""><code>@​RenaudWasTaken</code></a>) [SIG Node]</li>; <li>Admission webhooks can now return warning messages that are surfaced to API clients, using the <code>.response.warnings</code> field in the admission review response. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92667"">kubernetes/kubernetes#92667</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG API Machinery and Testing]</li>; <li>CertificateSigningRequest API conditions were updated:; <ul>; <li>a <code>status</code> field was added; this field defaults to <code>True</code>, and may only be set to <code>True</code> for <code>Approved</code>, <code>Denied</code>, and <code>Failed</code> conditions</li>; <li>a <code>lastTransitionTime</code> field was added</li>; <li>a <code>Failed</code> condition type was added to allow signers to indicate permanent failure; this condition can be added via the <code>certificatesigningrequests/status</code> subresource.</li>; <li><code>Approved</code> and <code>Denied</code> conditions are mutually exclusive</li>; <li><code>Approved</code>, <code>Denied</code>, and <code>Failed</code> conditions can no longer be removed from a CSR (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/90191"">kubernetes/kubernetes#90191</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG API Machinery, Apps, Auth, CLI and Node]</li>; </ul>; </li>; <li>Cluster admins can now turn off /logs endpoint in kubelet by setting enableSystemLogHandler to false in their kubelet configuration file. enableSystemLogHandler can be set to true only when enableDebuggingHandlers is also set ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11462:4032,Test,Testing,4032,https://hail.is,https://github.com/hail-is/hail/pull/11462,1,['Test'],['Testing']
Testability,"uded in this PR. - Changes to the following files to upgrade the vulnerable dependencies to a fixed version:; - hail/python/hailtop/pinned-requirements.txt. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![low severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/l.png ""low severity"") | **471/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 3.7 | Improper Following of a Certificate&#x27;s Chain of Trust <br/>[SNYK-PYTHON-CERTIFI-5805047](https://snyk.io/vuln/SNYK-PYTHON-CERTIFI-5805047) | `certifi:` <br> `2023.5.7 -> 2023.7.22` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1NDMwZTFmMi0wNDZjLTQwNDctYmI3Mi1hZmJkZmM1MDViNGEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjU0MzBlMWYyLTA0NmMtNDA0Ny1iYjcyLWFmYmRmYzUwNWI0YSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13304:1269,test,tested,1269,https://hail.is,https://github.com/hail-is/hail/pull/13304,1,['test'],['tested']
Testability,"ues/22625"">#22625</a>)</li>; <li>Added <code>resource_id</code> support for user-assigned managed identity (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/22329"">#22329</a>)</li>; <li>Added <code>ClientAssertionCredential</code> support (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/22328"">#22328</a>)</li>; <li>Updated App service API version to &quot;2019-08-01&quot; (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23034"">#23034</a>)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/e650a8ca8b4cf01ec7a2961f4a50187d1528a122""><code>e650a8c</code></a> update troubleshooting (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23681"">#23681</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/58613a167a5383a459a57b34c6208d7762b90264""><code>58613a1</code></a> enable pii logging (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23658"">#23658</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/ab4c52ce05bb3fda401a834cbf669c32d6d83b90""><code>ab4c52c</code></a> add doc string for authority setting (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23659"">#23659</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/68dda72cab22a13014012c6b88137684180e941b""><code>68dda72</code></a> add app service api 2017 backward compatibility support (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23626"">#23626</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/1b23cab27114193fa8c19bfd47627093052d8212""><code>1b23cab</code></a> remove validate_authority (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23625"">#23625</a>)</li>; <li><",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11752:2566,log,logging,2566,https://hail.is,https://github.com/hail-is/hail/pull/11752,1,['log'],['logging']
Testability,"ues/316"">#316</a>)</li>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>)</li>; </ul>; <h3>Features</h3>; <ul>; <li>add api key support (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/472"">#472</a>) (<a href=""https://github.com/googleapis/python-logging/commit/81ca8c616acb988be1fbecfc2a0b1a5b39280149"">81ca8c6</a>)</li>; <li>add json_fields extras argument for adding to jsonPayload (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/447"">#447</a>) (<a href=""https://github.com/googleapis/python-logging/commit/a760e02371a55d6262e42de9e0222fffa2c7192b"">a760e02</a>)</li>; <li>avoid importing grpc when explicitly disabled (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/416"">#416</a>) (<a href=""https://github.com/googleapis/python-logging/commit/818213e143d6a1941211a48e0b23069a426ac300"">818213e</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>) (<a href=""https://github.com/googleapis/python-logging/commit/c63250399fcd6e1317d341e98fab11095c443e5e"">c632503</a>)</li>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>) (<a href=""https://github.com/googleapis/python-logging/commit/83d9ca8521fe7c470bb6755a48a97496515d7abc"">83d9ca8</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>) (<a href=""https://github.com/googleapis/python-logging/commit/5267152574b2ee96eb6f5c536a762f58bd2f886e"">5267152</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>) (<a href=""https://github.com/googleapis/python-logging/commit/6fa17735fe3edb45483ec5e3abd1f53c24f",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:2063,log,logging,2063,https://hail.is,https://github.com/hail-is/hail/pull/11574,4,['log'],"['logger', 'logging']"
Testability,"uilder. I didn't change it in HadoopFS because (a) Hail's native I/O has buffering and (b) buffering and position tracking requires work.; 2. Avoid String allocation, String to UTF8 conversion, and Array[Byte] allocation in VCF writing. In particular, for the most common types of Calls, I just return the UTF8 byte array in a switch statement.; 3. Use a fast path for diploid genotypes. In the worst case, we did 5 branches and now we do 2 which should be well predicted.; 4. Remove an allocation of a lambda in a hot method in Genotype.scala. Future Work:; 1. The randomness stuff still has a lot of low hanging fruit. NumPy can generate random numbers at bandwidths far above what we're managing here.; 2. For VCFs with more entry fields, we should not write ints and floats by generating strings and getting their UTF8 encoding; 3. Invert the writing control flow: serialization methods should take an OutputStream and write bytes directly into it. Contrast that with passing around arrays which are memcopied into a buffer. ---. Range table test:; ```; import hail as hl; hl.init(master='local[1]'); hl._set_flags(write_ir_files='1'); mt = hl.utils.range_matrix_table(n_rows=1000_000, n_cols=4_000); mt = mt.key_cols_by(s = hl.str(mt.col_idx)); mt = mt.key_rows_by(locus = hl.locus(""1"", mt.row_idx + 1), alleles = ['G', 'T']); mt = mt.annotate_entries(GT = hl.call(mt.row_idx % 2, mt.col_idx % 2)); hl.export_vcf(mt, '/tmp/foo.vcf'); ```. Balding Nichols Test:; ```; import hail as hl; hl.init(master='local[1]'); hl._set_flags(write_ir_files='1'); mt = hl.balding_nichols_model(1, n_variants=100_000, n_samples=4_000); mt = mt.key_cols_by(s = hl.str(mt.sample_idx)); hl.export_vcf(mt, '/tmp/foo.vcf'); ```. Bandwidth is: `time python3 file.py` / `ls -l /tmp/foo.vcf`. | code | test | size | bandwidth (MiB/s) |; | ---- | ----- | ------- | ----------------- |; | main | range | 1Mx4K | 32 |; | this | range | 1Mx4K | 93 (~3x) |; | main | BN | 100Kx4K | 19 |; | this | BN | 100Kx4K | 28 (~1.5x) |",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12733:2695,test,test,2695,https://hail.is,https://github.com/hail-is/hail/pull/12733,3,"['Test', 'test']","['Test', 'test']"
Testability,"ul>; <li>install <code>colorama</code> on Windows (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1139"">#1139</a>, <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/454"">#454</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/tqdm/tqdm/commit/f3fb54eb161a9f5de13352e16a70a9960946605b""><code>f3fb54e</code></a> bump version, merge pull request <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1302"">#1302</a> from tqdm/devel</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/a6139189856349e96b5bfad30e0c296d44861fb1""><code>a613918</code></a> tests: pin py3.5 keras</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/02b29234f88272778b879b3da7589cbb9ce13dfd""><code>02b2923</code></a> tests: drop py3.6 nbval</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/2a9f1d23d3033c40ba9568285a144d711aa7d02b""><code>2a9f1d2</code></a> tests: fix pytest-nbval, tidy versions</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/6ba43f2631a18f8bfe2cd1bb2071c507e88ce6d8""><code>6ba43f2</code></a> tests: fix pytest-asyncio usage</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/6426c55b0f546a51be6e60034f34fbcaa87f679b""><code>6426c55</code></a> cli: fix py3.9 <code>importlib</code> usage</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/c1e7acebad76c0a6d17ce005d46e55f06bda1c09""><code>c1e7ace</code></a> tests: coverage warning</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/2190b1b76d4c496a75a5e37560c5f24edfff6a74""><code>2190b1b</code></a> tests: add py3.10</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/a14ea74a81be2bc0abe5b64e45e57cbd1d2687b1""><code>a14ea74</code></a> tests: fix nbval</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/7cdbfee224f94c8bc63dceaab42637962f2f2a04""><code>7cdbfee</code></a> autonotebook: check for ipywidgets</li>; <li>Additional commits viewable in <a href=""ht",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11587:5230,test,tests,5230,https://hail.is,https://github.com/hail-is/hail/pull/11587,1,['test'],['tests']
Testability,"ule named 'pyspark'. During handling of the above exception, another exception occurred:. ModuleNotFoundError Traceback (most recent call last); /tmp/ipykernel_233/4275665471.py in <module>; ----> 1 combined_pandas = pd.read_pickle(gwas_pandas_file). /opt/conda/lib/python3.7/site-packages/pandas/io/pickle.py in read_pickle(filepath_or_buffer, compression, storage_options); 220 # ""No module named 'pandas.core.sparse.series'""; 221 # ""Can't get attribute '__nat_unpickle' on <module 'pandas._libs.tslib""; --> 222 return pc.load(handles.handle, encoding=None); 223 except UnicodeDecodeError:; 224 # e.g. can occur for files written in py27; see GH#28645 and GH#31988. /opt/conda/lib/python3.7/site-packages/pandas/compat/pickle_compat.py in load(fh, encoding, is_verbose); 272 up.is_verbose = is_verbose; 273 ; --> 274 return up.load(); 275 except (ValueError, TypeError):; 276 raise. /opt/conda/lib/python3.7/pickle.py in load(self); 1086 raise EOFError; 1087 assert isinstance(key, bytes_types); -> 1088 dispatch[key[0]](self); 1089 except _Stop as stopinst:; 1090 return stopinst.value. /opt/conda/lib/python3.7/pickle.py in load_stack_global(self); 1383 if type(name) is not str or type(module) is not str:; 1384 raise UnpicklingError(""STACK_GLOBAL requires str""); -> 1385 self.append(self.find_class(module, name)); 1386 dispatch[STACK_GLOBAL[0]] = load_stack_global; 1387 . /opt/conda/lib/python3.7/site-packages/pandas/compat/pickle_compat.py in find_class(self, module, name); 204 key = (module, name); 205 module, name = _class_locations_map.get(key, key); --> 206 return super().find_class(module, name); 207 ; 208 . /opt/conda/lib/python3.7/pickle.py in find_class(self, module, name); 1424 elif module in _compat_pickle.IMPORT_MAPPING:; 1425 module = _compat_pickle.IMPORT_MAPPING[module]; -> 1426 __import__(module, level=0); 1427 if self.proto >= 4:; 1428 return _getattribute(sys.modules[module], name)[0]. /opt/conda/lib/python3.7/site-packages/hail/__init__.py in <module>; 31 # F401",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14004:3148,assert,assert,3148,https://hail.is,https://github.com/hail-is/hail/issues/14004,1,['assert'],['assert']
Testability,"ull/93264"">kubernetes/kubernetes#93264</a>, <a href=""https://github.com/justaugustus""><code>@​justaugustus</code></a>) [SIG API Machinery, Auth, CLI, Cloud Provider, Cluster Lifecycle, Instrumentation, Network, Node, Release, Scalability, Storage and Testing]</li>; </ul>; </li>; <li>Promote Immutable Secrets/ConfigMaps feature to Beta and enable the feature by default.; This allows to set <code>Immutable</code> field in Secrets or ConfigMap object to mark their contents as immutable. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/89594"">kubernetes/kubernetes#89594</a>, <a href=""https://github.com/wojtek-t""><code>@​wojtek-t</code></a>) [SIG Apps and Testing]</li>; <li>Remove <code>BindTimeoutSeconds</code> from schedule configuration <code>KubeSchedulerConfiguration</code> (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91580"">kubernetes/kubernetes#91580</a>, <a href=""https://github.com/cofyc""><code>@​cofyc</code></a>) [SIG Scheduling and Testing]</li>; <li>Remove kubescheduler.config.k8s.io/v1alpha1 (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/89298"">kubernetes/kubernetes#89298</a>, <a href=""https://github.com/gavinfish""><code>@​gavinfish</code></a>) [SIG Scheduling]</li>; <li>Reserve plugins that fail to reserve will trigger the unreserve extension point (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92391"">kubernetes/kubernetes#92391</a>, <a href=""https://github.com/adtac""><code>@​adtac</code></a>) [SIG Scheduling and Testing]</li>; <li>Resolve regression in <code>metadata.managedFields</code> handling in update/patch requests submitted by older API clients (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91748"">kubernetes/kubernetes#91748</a>, <a href=""https://github.com/apelisse""><code>@​apelisse</code></a>)</li>; <li>Scheduler: optionally check for available storage capacity before scheduling pods which have unbound volu",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11462:11857,Test,Testing,11857,https://hail.is,https://github.com/hail-is/hail/pull/11462,1,['Test'],['Testing']
Testability,"ummary changes:; - batch and batch2: Removed /batch endpoint limit and offset options, added include_jobs. Limit was ever only 0 or None. Going forward, /batch should never return jobs, and /jobs endpoint should always paginate.; - Got rid of pods. There is no pod_status options on the client, but they are left in for legacy reasons (batch).; - Simplified worker startup and cleaned up logging paths. The old code could restart the worker after a failure after it had activated. I don't think we're equipped for that case. I do explicitly pull the worker image (with one retry) before trying to run it.; - Batch and Job are gone. database.py is effectively gone. Almost everywhere interacts directly with the database using the simple gear.Database interface, and drops down to aiomysql directly when that is insufficient (e.g. transaction with multiple executemany for /jobs/create). When we pass around data representing a job or batch, it's normally a data record (a dict).; - Added the running log test from your PR.; - The job status is no longer written to a file, just in the database jobs.status.; - I moved the INSTANCE_ID to the database. There is now a table called tokens. It has the instance id and a token for securing communication between the front end and the driver (currently unused).; - Operations that need to be atomic in the database are now implemented as stored procedures which can be called with the check_call_procedure helper in database.py. They return a row with a field rc (return code) that is 0 on success and non-zero on failure.; - Renamed Driver => Scheduler. Scheduler has two threads, one that schedules jobs that are in the Ready state, and one that cancels cancelled jobs in the Running state. There is a new job state Ready. A job is Ready if its parents are complete and it is not scheduled (instance_id is null). A job is Running if it is scheduled (instance_id is not null).; - The full set of instances are mirrored in memory as Instance objects.; - Ad",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7420:1040,log,log,1040,https://hail.is,https://github.com/hail-is/hail/pull/7420,2,"['log', 'test']","['log', 'test']"
Testability,"un$22.apply(RDD.scala:1113); at org.apache.spark.SparkContext$$anonfun$33.apply(SparkContext.scala:2118); at org.apache.spark.SparkContext$$anonfun$33.apply(SparkContext.scala:2118); at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87); at org.apache.spark.scheduler.Task.run(Task.scala:108); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); ... 1 more. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/tmp/b09ec92a-49f4-4d16-ad6d-efc5a5805e92/05_variant_qc.py"", line 201, in <module>; cumcounts = {'step0': rt.aggregate(hl.agg.sum(hl.cond(rt.qccum.step0, 1, 0))),; File ""<decorator-gen-519>"", line 2, in aggregate; File ""/home/hail/hail.zip/hail/utils/java.py"", line 191, in handle_py4j; hail.utils.java.FatalError: AssertionError: assertion failed. Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 7 in stage 6.0 failed 20 times, most recent failure: Lost task 7.19 in stage 6.0 (TID 179, robert1-w-0.c.ccdg-wgs.internal, executor 4): java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.annotations.RegionValueBuilder.endStruct(RegionValueBuilder.scala:109); at is.hail.variant.MatrixTable$$anonfun$filterGenotypes$1$$anonfun$apply$80.apply(MatrixTable.scala:2645); at is.hail.variant.MatrixTable$$anonfun$filterGenotypes$1$$anonfun$apply$80.apply(MatrixTable.scala:2615); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:730); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3063:11741,Assert,AssertionError,11741,https://hail.is,https://github.com/hail-is/hail/issues/3063,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,un$main$6(ServiceBackend.scala:462); E 	at is.hail.backend.service.ServiceBackendSocketAPI2$.$anonfun$main$6$adapted(ServiceBackend.scala:461); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.backend.service.ServiceBackendSocketAPI2$.$anonfun$main$5(ServiceBackend.scala:461); E 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); E 	at is.hail.services.package$.retryTransientErrors(package.scala:134); E 	at is.hail.backend.service.ServiceBackendSocketAPI2$.$anonfun$main$4(ServiceBackend.scala:460); E 	at is.hail.backend.service.ServiceBackendSocketAPI2$.$anonfun$main$4$adapted(ServiceBackend.scala:459); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.backend.service.ServiceBackendSocketAPI2$.$anonfun$main$3(ServiceBackend.scala:459); E 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); E 	at is.hail.services.package$.retryTransientErrors(package.scala:134); E 	at is.hail.backend.service.ServiceBackendSocketAPI2$.main(ServiceBackend.scala:458); E 	at is.hail.backend.service.Main$.main(Main.scala:15); E 	at is.hail.backend.service.Main.main(Main.scala); E 	at sun.reflect.GeneratedMethodAccessor62.invoke(Unknown Source); E 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); E 	at java.lang.reflect.Method.invoke(Method.java:498); E 	at is.hail.JVMEntryway$1.run(JVMEntryway.java:119); E 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); E 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); E 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); E 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); E 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); E 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); E 	at java.lang.Thread.run(Thread.java:750); ```. ### Version. 0.2.116. ### Relevant log output. _No response_,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13074:15749,log,log,15749,https://hail.is,https://github.com/hail-is/hail/issues/13074,1,['log'],['log']
Testability,"understand one commit at a time, because it actually worked out quite cleanly. I'll describe each commit, to make review easier:; * **remove `TableValue.enforceOrderingRVD`** - I could have removed `enforceOrderingRVD` earlier, as soon as tables were always sorted by key. This also loosens the `TableValue` invariant: Before, we required that if `key=None` then the `rvd` is an `UnpartitionedRVD`, but it was okay to have `key=Some(..)` and an `UnpartitionedRVD`. Then, once all tables were sorted by key, I strengthened it to `key=None` if and only if `rvd` is an `UnpartitionedRVD`. Now, I'm weakening it in the other direction, to allow `key=None` with `rvd` an `OrderedRVD`, possibly with some non-empty key. This is consistent with the rule that the `rvd` must always have a stronger/longer key than the `TableType`.; * **small tweaks** - Now I start working through the `TableIR` nodes, rewriting them to remove explicit uses of `UnpartitionedRVD`. The general plan is to sandwich the rvd logic between `toOrderedRVD` and `toOldStyleRVD`. The first takes an `UnpartitionedRVD` to an `OrderedRVD` with empty key (and leaves `OrderedRVD`s alone), and the second takes an `OrderedRVD` to an `UnpartitionedRVD` if its key was empty, and leaves it alone otherwise. Once they're all rewritten this way, I redefine `toOldStyleRVD` to always return `OrderedRVD`, and `UnpartitionedRVD` is no longer used.; * **remove `TableUnkey`** - With `UnpartitionedRVD` going away, `TableUnkey` is no longer necessary, it's equivalent to keying by an empty key.; * **small tweaks** - these next two rewrite more `TableIR` nodes; * **Merge master** - the big one; * **tweak MatrixColsTable** - 1) Optimize `coerce` by checking if the requested key is empty, avoiding a scan in that case. 2) Optimize `sortedColsValue` by checking if the column key is empty, avoiding the sort in that case. 3) Simplify `colsRVD`, removing the case on the type of the `RVD`, just calling `coerce` and letting the previous optimizati",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4319:1146,log,logic,1146,https://hail.is,https://github.com/hail-is/hail/pull/4319,1,['log'],['logic']
Testability,unify logic for ir.Compile.apply methods of various argument lengths,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3183:6,log,logic,6,https://hail.is,https://github.com/hail-is/hail/pull/3183,1,['log'],['logic']
Testability,unning test: Test method testIntervalIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testUpperBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSa,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:1984,Assert,AssertionError,1984,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['Assert'],['AssertionError']
Testability,"up fails because the `…/counts.counts.tsv` file no longer exists because it was removed by `bgzip`. In any case, we don't want to write that one to the final bucket anyway. Hence the two separate `write_output` invocations for the two desired output files.). This fails in the second `write_output` with a fairly mysterious exception:. ```; File ""…"", line 92, in test; b.write_output(j.counts['tsv.gz.tbi'], output_index_path); File ""…/lib/python/site-packages/hailtop/batch/batch.py"", line 595, in write_output; name = resource._source._resources_inverse[resource]; KeyError: __RESOURCE_FILE__11; ```. Checking that line of _batch.py_, it is failing while trying to print an error message because `_resources_inverse` is not set up for the JobResourceFiles within ResourceGroups. PR #13192 is a suggested fix for this. With that PR applied, this results in a more useful hail error message exception:. ```; hailtop.batch.exceptions.BatchException: undefined resource 'counts[""tsv.gz.tbi""]'; Hint: resources must be defined within the job methods 'command' or 'declare_resource_group'; ```. This can be worked around by mentioning the filename in the commands to be run — in a comment, because none of the commands actually need to specify the `.tbi` output filename:. ```python; …; j.command(f""""""; gatk SubCommand … --output {j.counts['tsv']}; bgzip {j.counts['tsv']}; gatk IndexFeatureFile --input {j.counts['tsv.gz']}; : {j.counts['tsv.gz.tbi']}; """"""); …; ```. This produces the desired two files — compressed data and the associated index — written to the final bucket. Is it kosher to use `write_output` on the individual items within a ResourceGroup like this?. However this resource **was** defined by a `declare_resource_group` invocation. So it seems to me that this too (namely, the BatchException encountered) is a bug and it should not be necessary to work around the lack of `j.counts['tsv.gz.tbi']` being mentioned like this. ### Version. 0.2.118. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13191:2945,log,log,2945,https://hail.is,https://github.com/hail-is/hail/issues/13191,1,['log'],['log']
Testability,"update (#14233). ```; The [relevant part of the diff](https://github.com/hail-is/hail/commit/d2615543476bde5d01061499c92f26124b85caf3#diff-332ea445eb23998f4f4e34a9bb687fa533a063641eb05f791c105a187bf0c19bL101-R101; ):; ```diff; -orjson==3.9.10; +orjson==3.9.12; ```. orjson [reduced the frequency of this segfault in 3.9.13](https://github.com/ijl/orjson/commit/58a8bd3e31aa3b5fd3d962fb5b03479fa0014ee9) by eliding some of the code that caused buffer overheads; however, [the problem persists](https://github.com/ijl/orjson/issues/452#issuecomment-1943053799). I complete fix is currently awaiting [pull request review](https://github.com/ijl/orjson/pull/457). Reports:; - https://hail.zulipchat.com/#narrow/stream/127527-team/topic/seg.20faults.20in.20tests; - https://hail.zulipchat.com/#narrow/stream/123011-Hail-Query-Dev/topic/segfault.20in.20ci.20tests. Batches:; - https://batch.hail.is/batches/8123269/jobs/86; - https://batch.hail.is/batches/8127894/jobs/53. ### Version. 0.2.127. ### Relevant log output. ```shell; [2024-02-08 22:36:47] test/hail/matrixtable/test_file_formats.py::test_backward_compatability_ht[/io/resources/backward_compatability/1.6.0/table/6.ht/] Fatal Python error: Segmentation fault. Thread 0x00007fa51d817640 (most recent call first):; File ""/usr/lib/python3.9/selectors.py"", line 416 in select; File ""/usr/lib/python3.9/socketserver.py"", line 232 in serve_forever; File ""/usr/lib/python3.9/threading.py"", line 917 in run; File ""/usr/lib/python3.9/threading.py"", line 980 in _bootstrap_inner; File ""/usr/lib/python3.9/threading.py"", line 937 in _bootstrap. Thread 0x00007fa5273ff640 (most recent call first):; File ""/usr/local/lib/python3.9/dist-packages/py4j/clientserver.py"", line 58 in run; File ""/usr/lib/python3.9/threading.py"", line 980 in _bootstrap_inner; File ""/usr/lib/python3.9/threading.py"", line 937 in _bootstrap. Current thread 0x00007fa52bd6b000 (most recent call first):; File ""/usr/local/lib/python3.9/dist-packages/hail/backend/py4j_backend.py"", li",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14299:3000,log,log,3000,https://hail.is,https://github.com/hail-is/hail/issues/14299,1,['log'],['log']
Testability,update test-gcp.sh to be closer to modern use,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14272:7,test,test-gcp,7,https://hail.is,https://github.com/hail-is/hail/pull/14272,1,['test'],['test-gcp']
Testability,upload is a service that displays uploaded data. It uses Google authentication to only allow the Hail team to view uploads. Pipeline uploads can be enabled with `enable_pipeline_upload(email)` and you can upload the current Hail log with `hl.upload_log(email)`. Pipeline uploads happen in the background asynchronously (and errors are ignored). Log upload is synchronous. I generated certs for upload and this is the upload that is currently deployed.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4509:229,log,log,229,https://hail.is,https://github.com/hail-is/hail/pull/4509,2,"['Log', 'log']","['Log', 'log']"
Testability,"ups: [""""]; resources: [""pods""]; verbs: [""*""]; ---; kind: RoleBinding; apiVersion: rbac.authorization.k8s.io/v1; metadata:; namespace: default; name: notebook-create-services-and-pods; subjects:; - kind: ServiceAccount; name: notebook; namespace: default; roleRef:; kind: Role; name: create-services #this was causing the error, and of course the create-services role is superseded by the the create-services-and-pods role; apiGroup: """"; ---; ```. After:; ```yaml; kind: Role; apiVersion: rbac.authorization.k8s.io/v1; metadata:; namespace: default; name: create-services-and-pods; rules:; - apiGroups: [""""]; resources: [""services""]; verbs: [""*""]; - apiGroups: [""""]; resources: [""pods""]; verbs: [""*""]; ---; kind: RoleBinding; apiVersion: rbac.authorization.k8s.io/v1; metadata:; namespace: default; name: notebook-create-services-and-pods; subjects:; - kind: ServiceAccount; name: notebook; namespace: default; roleRef:; kind: Role; name: create-services-and-pods; apiGroup: """"; ---; ```. ### Results of test runs. Before:. ```sh; kubectl apply -f k8s-config.yaml; ERROR: (gcloud.compute.addresses.describe) Could not fetch resource:; - Required 'compute.addresses.get' permission for 'projects/hail-vdc-staging/regions/us-central1/addresses/site'. namespace/batch-pods unchanged; ...; The RoleBinding ""notebook-create-services-and-pods"" is invalid: roleRef: Invalid value: rbac.RoleRef{APIGroup:""rbac.authorization.k8s.io"", Kind:""Role"", Name:""create-services""}: cannot change roleRef; make: *** [k8s-config] Error 1; ```. After:; ```sh; ERROR: (gcloud.compute.addresses.describe) Could not fetch resource:; - Required 'compute.addresses.get' permission for 'projects/hail-vdc-staging/regions/us-central1/addresses/site'. ...; role.rbac.authorization.k8s.io/create-services-and-pods unchanged; rolebinding.rbac.authorization.k8s.io/notebook-create-services-and-pods configured; role.rbac.authorization.k8s.io/read-get-user-secret unchanged; rolebinding.rbac.authorization.k8s.io/notebook-read-get-user",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5746:2348,test,test,2348,https://hail.is,https://github.com/hail-is/hail/pull/5746,1,['test'],['test']
Testability,"ure storage. Basic summary of the changes:; 	- Update `AzureAsyncFS` url parsing function to look for and separate out a SAS-token-like query string. Note: made fairly specific to SAS tokens - generic detection of query string syntax interferes with glob support and '?' characters in file names; 	- Added `generate_sas_token` convenience function to `AzureAsyncFS`. Adds new `azure-mgmt-storage` package requirement.; 	- Updated `AzureAsyncFS` to use `(account, credential)` tuple as internal `BlobServiceClient` cache key; 	- Updated `AzureAsyncFSURL` and `AzureFileListEntry` to track the token separately from the name, and extend the base classes to allow returning url with or without a token ; 	- Update `RouterFS.ls` function and associated `listfiles` function to allow for trailing query strings during path traversal ; 	- Change to existing behavior: `LocalAsyncFSURL.__str__`no longer returns 'file:' prefix. Done to make `str()` output be appropriate for input to `fs` functions across all subclasses; 	- Updated `inter_cloud/test_fs.py` to generically use query-string-friendly file path building functions; - Updated InputResource to not include the SAS token as part of the destination file name . `test_fs.py` has been updated to respect the new model, where it is no longer safe to extend URLs by just appending new segments with + ""/"" because there may be a query string. But actually running those tests for the SAS case will require some new test variables to allow the test code to generate SAS tokens (`build.yaml/test_hail_python_fs`): ; ```; export HAIL_TEST_AZURE_ACCOUNT=hailtest; export HAIL_TEST_AZURE_CONTAINER=hail-test-4nxei; # Required for SAS testing on Azure; export HAIL_TEST_AZURE_RESGRP=hailms02; export HAIL_TEST_AZURE_SUBID=12ab51c6-da79-4a99-8dec-3d2decc97343; ```; So the SAS case is disabled for now (`test_fs.py`):; ```; @pytest.fixture(params=['file', 'gs', 's3', 'hail-az', 'router/file', 'router/gs', 'router/s3', 'router/hail-az']) # 'sas/hail-az'; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12877:1533,test,tests,1533,https://hail.is,https://github.com/hail-is/hail/pull/12877,5,['test'],"['test', 'test-', 'testing', 'tests']"
Testability,"us"": 200, ""response_size"": 158, ""request_header"": {""Referer"": ""-"", ""User-Agent"": ""Python/3.6 aiohttp/3.5.4""}}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,967"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1145"", ""message"": ""update job (9, 1, 'main') with pod batch-9-job-1-c8b9b2""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,969"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""set_state:501"", ""message"": ""job (9, 1, 'main') changed state: Ready -> Cancelled""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,974"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""_delete_pvc:251"", ""message"": ""deleting persistent volume claim batch-9-job-1-c8b9b2""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,976"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1145"", ""message"": ""update job (9, 1, 'main') with pod batch-9-job-1-c8b9b2""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,977"", ""filename"": ""web_log.py"", ""funcNameAndLine"": ""log:233"", ""message"": ""10.32.4.199 [11/Jul/2019:14:19:34 +0000] \""GET /api/v1alpha/batches/9 HTTP/1.1\"" 200 279 \""-\"" \""Python/3.6 aiohttp/3.5.4\"""", ""remote_address"": ""10.32.4.199"", ""request_start_time"": ""[11/Jul/2019:14:19:34 +0000]"", ""first_request_line"": ""GET /api/v1alpha/batches/9 HTTP/1.1"", ""response_status"": 200, ""response_size"": 279, ""request_header"": {""Referer"": ""-"", ""User-Agent"": ""Python/3.6 aiohttp/3.5.4""}}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,985"", ""filename"": ""web_log.py"", ""funcNameAndLine"": ""log:233"", ""message"": ""10.32.4.199 [11/Jul/2019:14:19:34 +0000] \""GET /api/v1alpha/batches/9 HTTP/1.1\"" 200 279 \""-\"" \""Python/3.6 aiohttp/3.5.4\"""", ""remote_address"": ""10.32.4.199"", ""request_start_time"": ""[11/Jul/2019:14:19:34 +0000]"", ""first_request_line"": ""GET /api/v1alpha/batches/9 HTTP/1.1"", ""response_status"": 200, ""response_size"": 279, ""request_header"": {""Referer"": ""-"", ""User-Agent"": ""Python/3.6 aiohttp/3.5.4""}}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:3",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6617:3474,log,log,3474,https://hail.is,https://github.com/hail-is/hail/issues/6617,1,['log'],['log']
Testability,use a smaller test cluster,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4625:14,test,test,14,https://hail.is,https://github.com/hail-is/hail/pull/4625,1,['test'],['test']
Testability,use combOps in ir.TestUtils.eval,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3806:18,Test,TestUtils,18,https://hail.is,https://github.com/hail-is/hail/pull/3806,1,['Test'],['TestUtils']
Testability,use nonExtremeDouble to avoid test failures,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2366:30,test,test,30,https://hail.is,https://github.com/hail-is/hail/pull/2366,1,['test'],['test']
Testability,"use the sample file of GWAS Tutorial. Code: ; hl.utils.get_1kg('data/'); vcfVds = hl.import_vcf('data/1kg.vcf.bgz', min_partitions=8); vds = hl.nirvana(vcfVds,'data/nirvana.properties'). Version:; Running on Apache Spark version 2.2.1; Hail version: 0.2.10-ceb85fc87544. We got this error massage:; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""</usr/local/lib/python3.6/dist-packages/decorator.py:decorator-gen-1226>"", line 2, in nirvana; File ""/seqslab/hail/hail/build/distributions/hail-python.zip/hail/typecheck/check.py"", line 561, in wrapper; File ""/seqslab/hail/hail/build/distributions/hail-python.zip/hail/methods/qc.py"", line 860, in nirvana; File ""/usr/local/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/seqslab/hail/hail/build/distributions/hail-python.zip/hail/utils/java.py"", line 227, in deco; hail.utils.java.FatalError: AssertionError: assertion failed. Java stack trace:; java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.methods.Nirvana$.annotate(Nirvana.scala:361); at is.hail.methods.Nirvana$.apply(Nirvana.scala:487); at is.hail.methods.Nirvana.apply(Nirvana.scala); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:498); at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); at py4j.Gateway.invoke(Gateway.java:280); at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); at py4j.commands.CallCommand.execute(CallCommand.java:79); at py4j.GatewayConnection.run(GatewayConnection.java:214); at java.lang.Thread.run(Thread.java:748). Hail version: 0.2.10-ceb85fc87544; Error summary: AssertionError: assertion failed. W",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5657:1036,Assert,AssertionError,1036,https://hail.is,https://github.com/hail-is/hail/issues/5657,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"user endpoint is properly deleting cloud identities when the users are deleted (previously broken in GCP but fixed in this PR.; - The developer role no longer implicitly deletes and recreates a corresponding namespace. I wanted adding developers to test namespaces not to have side-effects that leaked out of the namespace. A follow-up PR will incorporate the ability for a developer to request an on-demand dev namespace, which should be made a lot easier after these changes. I think this also means that we can remove some permissions from the auth K8s ServiceAccount since it no longer needs the ability to create and delete namespaces.; - A fixed-but-sufficient number of oauth2 callbacks are hard-coded into the oauth2 secret from GCP/azure and then allocated to a given namespace. This is fairly self-contained, all that needs to happen is to tell `auth` what callback to use and rewrite those callback urls in gateway to route back to the appropriate auth. This is done only for test namespaces, production still just uses `auth.hail.is/oauth2callback`. This gets around a long-standing limitation of Google oauth2 clients where there is no programmatic way to change the oauth2 callbacks. ### What has stayed the same; - The lifecycle of dev and test namespaces has not changed (future PR).; - The semantics of a dev deploy has not changed (other than a different oauth2 callback which the user will not notice). ### Testing; I've tested this branch in my own google project both by deploying main and updating to this branch and by deploying this branch from the beginning. The CI in my project ran both some dev deploys and a test batch because I PR'd this branch against my fork. Tested that I could access both my dev namespace and the test namespace in that deployment. I manually verified that dev cloud identities in the test namespace were deleted after the namespace was cleaned up. I dev deployed this branch in Azure and made sure that create-user and delete-user created and delet",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12751:1973,test,test,1973,https://hail.is,https://github.com/hail-is/hail/pull/12751,1,['test'],['test']
Testability,"ustomPlugin and DescribeConnector responses to return errors from asynchronous resource creation.</li>; </ul>; <h1>1.21.9</h1>; <ul>; <li>api-change:<code>finspace-data</code>: [<code>botocore</code>] Add new APIs for managing Users and Permission Groups.</li>; <li>api-change:<code>amplify</code>: [<code>botocore</code>] Add repositoryCloneMethod field for hosting an Amplify app. This field shows what authorization method is used to clone the repo: SSH, TOKEN, or SIGV4.</li>; <li>api-change:<code>fsx</code>: [<code>botocore</code>] This release adds support for the following FSx for OpenZFS features: snapshot lifecycle transition messages, force flag for deleting file systems with child resources, LZ4 data compression, custom record sizes, and unsetting volume quotas and reservations.</li>; <li>api-change:<code>fis</code>: [<code>botocore</code>] This release adds logging support for AWS Fault Injection Simulator experiments. Experiment templates can now be configured to send experiment activity logs to Amazon CloudWatch Logs or to an S3 bucket.</li>; <li>api-change:<code>route53-recovery-cluster</code>: [<code>botocore</code>] This release adds a new API option to enable overriding safety rules to allow routing control state updates.</li>; <li>api-change:<code>amplifyuibuilder</code>: [<code>botocore</code>] We are adding the ability to configure workflows and actions for components.</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/boto/boto3/commit/67b84e02c185294c54a8e49510d4cb962e89cee2""><code>67b84e0</code></a> Merge branch 'release-1.21.13'</li>; <li><a href=""https://github.com/boto/boto3/commit/99acd545b20fe30ffa2f589a674c5a7ad74c266b""><code>99acd54</code></a> Bumping version to 1.21.13</li>; <li><a href=""https://github.com/boto/boto3/commit/83a8f662655bada44d442df7f33cb20d71ead257""><code>83a8f66</code></a> Add changelog entries from botocore",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11504:5046,log,logs,5046,https://hail.is,https://github.com/hail-is/hail/pull/11504,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"ustomPlugin and DescribeConnector responses to return errors from asynchronous resource creation.</li>; </ul>; <h1>1.21.9</h1>; <ul>; <li>api-change:<code>finspace-data</code>: [<code>botocore</code>] Add new APIs for managing Users and Permission Groups.</li>; <li>api-change:<code>amplify</code>: [<code>botocore</code>] Add repositoryCloneMethod field for hosting an Amplify app. This field shows what authorization method is used to clone the repo: SSH, TOKEN, or SIGV4.</li>; <li>api-change:<code>fsx</code>: [<code>botocore</code>] This release adds support for the following FSx for OpenZFS features: snapshot lifecycle transition messages, force flag for deleting file systems with child resources, LZ4 data compression, custom record sizes, and unsetting volume quotas and reservations.</li>; <li>api-change:<code>fis</code>: [<code>botocore</code>] This release adds logging support for AWS Fault Injection Simulator experiments. Experiment templates can now be configured to send experiment activity logs to Amazon CloudWatch Logs or to an S3 bucket.</li>; <li>api-change:<code>route53-recovery-cluster</code>: [<code>botocore</code>] This release adds a new API option to enable overriding safety rules to allow routing control state updates.</li>; <li>api-change:<code>amplifyuibuilder</code>: [<code>botocore</code>] We are adding the ability to configure workflows and actions for components.</li>; <li>api-change:<code>athena</code>: [<code>botocore</code>] This release adds support for updating an existing named query.</li>; <li>api-change:<code>ec2</code>: [<code>botocore</code>] This release adds support for new AMI property 'lastLaunchedTime'</li>; <li>api-change:<code>servicecatalog-appregistry</code>: [<code>botocore</code>] AppRegistry is deprecating Application and Attribute-Group Name update feature. In this release, we are marking the name attributes for Update APIs as deprecated to give a heads up to our customers.</li>; </ul>; <h1>1.21.8</h1>; <ul>; <li>api-chan",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11486:3599,log,logs,3599,https://hail.is,https://github.com/hail-is/hail/pull/11486,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"ut it on your path) from the `hail/` subdirectory. It should report version `0.11.6`. ## Mill from the command line. * `mill clean` - delete all output files (in `hail/hail/out`). Or only delete the output of one target, e.g. `mill clean test.compile`; * `mill compile` - compiles the root module (not including tests); * `mill test.compile` - compiles tests (and, transitively, the rest of the root module); * `mill test.test`, or for short `mill test` - run all tests. You can pass options to the test runner (TestNG currently), e.g.* * `mill test -methods is.hail.expr.ir.CallFunctionsSuite.constructors` to run one test, or `mill test -threadcount 4 -parallel classes` to use 4 threads and parallelize over test classes; * `mill test.testOnly is.hail.expr.ir.CallFunctionsSuite` - run all tests in one or more specified classes. You can use `*` to match anything, e.g. `mill test.testOnly ""*.CallFunctionsSuite""`, or `mill test.testOnly ""is.hail.expr.ir.*""`. You can pass options to the test runner (TestNG currently) after a `--`, e.g. `mill test.testOnly ""is.hail.expr.ir.*"" -- -parallel classes`; * `mill __.testCached` - once the codebase is more modularized, will run tests on only modules whose dependencies have changed since the last test run; * `mill reformat` - runs scalafmt on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.reformat` runs scalaformat on all sources in all modules. `mill __.checkFormat` only checks for rule failures (we run this in ci); * `mill fix` - runs scalafix on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.fix` runs scalafix on all sources in all modules. `mill __.fix --check` only checks for rule failures (we run this in ci). You can pass any options to scalafix, e.g. `mill fix --help`.; * `mill inspect` - see the docstring and dependencies for any target, e.g. `mill inspect compile`; * `mill ivyDepsTree` - show the tree of externa",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14147:1590,test,test,1590,https://hail.is,https://github.com/hail-is/hail/pull/14147,2,"['Test', 'test']","['TestNG', 'test']"
Testability,"ut.committer.class org.apache.spark.sql.parquet.DirectParquetOutputCommitter; spark.hadoop.mapred.output.committer.class org.apache.hadoop.mapred.DirectFileOutputCommitter; spark.hadoop.mapreduce.use.directfileoutputcommitter true; spark.hadoop.spark.sql.parquet.output.committer.class org.apache.spark.sql.parquet.DirectParquetOutputCommitter; ```. Code and stack trace:; ```; ================================================================================================== FAILURES ===================================================================================================; __________________________________________________________________________________________ TestHAIL.test_export_vcf ___________________________________________________________________________________________. self = <test_hail.TestHAIL testMethod=test_export_vcf>. def test_export_vcf(self):; # define files; bgen_file = os.path.join(self.testdir, 'example.10bits.bgen'); sample_file = os.path.join(self.testdir, 'example.sample'); # make index; self.hc.index_bgen(bgen_file); # load to vds; bgen_vds = self.hc.import_bgen(bgen_file, sample_file=sample_file); # export vcf; out_path = 'file://' + os.path.join(self.tmpdir, 'test_vcf_export.vcf.bgz'); > bgen_vds.export_vcf(out_path, export_pp=False, parallel=False). tests/hail/test_hail.py:55:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; <decorator-gen-398>:2: in export_vcf; ???; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. func = <function export_vcf at 0x7fa13c4d9938>, args = (<hail.dataset.VariantDataset object at 0x7fa13c3c9390>, 'file:///scratch/test_vcf_export.vcf.bgz', None, False, False), kwargs = {}; e = Py4JJavaError",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3946:1618,test,testdir,1618,https://hail.is,https://github.com/hail-is/hail/issues/3946,1,['test'],['testdir']
Testability,va.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[8]([Ljava.lang.String;@3c215dd4)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[8]([Ljava.lang.String;@3c215dd4) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[9]([Ljava.lang.String;@5a40cc5)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[9]([Ljava.lang.String;@5a40cc5) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[10]([Ljava.lang.String;@69594c0e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[10]([Ljava.lang.String;@69594c0e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[11]([Ljava.lang.String;@5ea39a14)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[11]([Ljava.lang.String;@5ea39a14) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[12]([Ljava.lang.String;@21ebf782)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[12]([Ljava.lang.String;@21ebf782) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[13]([Ljava.lang.String;@3bda762a)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[13]([Ljava.lang.String;@3bda762a) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[14]([Ljava.lang.String;@4898b38e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[14]([Ljava.lang.String;@4898b38e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: ,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:5573,test,test,5573,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['test']
Testability,"va:83); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:82); at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:822); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:794); at sun.net.httpserver.ServerImpl$DefaultExecutor.execute(ServerImpl.java:199); at sun.net.httpserver.ServerImpl$Dispatcher.handle(ServerImpl.java:544); at sun.net.httpserver.ServerImpl$Dispatcher.run(ServerImpl.java:509); at java.lang.Thread.run(Thread.java:750); ```. Interesting thing is, when I tried to convert the exactly same data in local computer using singularity instead of docker, it worked. Also, for the the other chromosomes with less variants but same samples, such as chr13, it worked well in Terra. Since we will convert multiple plink files to hailmatrix table using Terra platform in future, I need to figure the problem out. Any advise would be appreciated. ### Version. 0.2.127. ### Relevant log output. ```shell; 2024/01/17 20:20:25 Starting container setup.; 2024/01/17 20:20:26 Done container setup.; 2024/01/17 20:20:27 Starting localization.; 2024/01/17 20:20:34 Localization script execution started...; 2024/01/17 20:20:34 Localizing input gs://fc-5a8938eb-1299-4afc-957f-afb53ef602b9/submissions/e8747e74-47d1-4f52-acfc-1ac7f81d79ba/VUMCBed2HailMatrix/683447d9-9342-4058-bcfc-ba21422d3121/call-Bed2HailMatrix/script -> /cromwell_root/script; 2024/01/17 20:20:36 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.bed -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.bed; 2024/01/17 20:59:18 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.fam -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.fam; 2024/01/17 20:59:18 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.bim -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.bim; Copying gs://hui-sandbox/ICA-AGD/plink1/chr12.fam...; / [0 files][ 0.0 B/910.3 KiB] / [1 files][910.3 KiB/910.3 KiB] Copying gs://hui-sa",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14168:9144,log,log,9144,https://hail.is,https://github.com/hail-is/hail/issues/14168,1,['log'],['log']
Testability,"van""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2849"">cbeust/testng#2849</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/gruenich""><code>@​gruenich</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2781"">cbeust/testng#2781</a></li>; <li><a href=""https://github.com/anatolyuzhakov""><code>@​anatolyuzhakov</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2793"">cbeust/testng#2793</a></li>; <li><a href=""https://github.com/spkrka""><code>@​spkrka</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2802"">cbeust/testng#2802</a></li>; <li><a href=""https://github.com/JLLeitschuh""><code>@​JLLeitschuh</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2806"">cbeust/testng#2806</a></li>; <li><a href=""https://github.com/seregamorph""><code>@​seregamorph</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2808"">cbeust/testng#2808</a></li>; <li><a href=""https://github.com/melloware""><code>@​melloware</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2827"">cbeust/testng#2827</a></li>; <li><a href=""https://github.com/speedythesnail""><code>@​speedythesnail</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2826"">cbeust/testng#2826</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/cbeust/testng/blob/master/CHANGES.txt"">org.testng:testng's changelog</a>.</em></p>; <blockquote>; <p>7.7.1; Fixed: GITHUB-2854: overloaded assertEquals methods do not work from",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:8855,test,testng,8855,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['test'],['testng']
Testability,"vascript brings to mind ""bloated""; this is an implementation issue. PHP/Python/Perl websites also used to be slow and ugly (Geocities).; * NodeJS/Javascript/V8 JIT is consistently faster than PHP, Python, and ~Java: https://www.techempower.com/benchmarks/. ## Why NodeJS, React, etc; 1. Javascript is the only language supported by modern browsers. Web assembly will change this (compile target == web assembly, language == rust | go | python), but is not nearly as mature; 2. Ecosystem. Chosen technologies are (likely) by far the most popular. We should quantify this better; 3. Performance. NodeJS is faster than Flask, React is ~fastest JS view layer. Next makes it really easy to split app into page bundles, and (on localhost) achieves DOMContentLoaded of ~70-100ms, and faster interactivity: first loaded page (the page of the current route) is ~6-10ms.; * [Techempower]: https://www.techempower.com/benchmarks/; * [Node vs , ](https://medium.com/@mihaigeorge.c/web-rest-api-benchmark-on-a-real-life-application-ebb743a5d7a3). * React vs other client side micro bench (pay attention to ""Non-keyed""): https://krausest.github.io/js-framework-benchmark/current.html; 4. Structure, aforementioned; 5. Path to relatively performant desktop and mobile applications, via [Electron](https://getstream.io/blog/takeaways-on-building-a-react-based-app-with-electron/). [Visual Studio Code](https://github.com/Microsoft/vscode) and [Slack](https://slack.engineering/growing-pains-migrating-slacks-desktop-app-to-browserview-2759690d9c7b) are good examples. Facebook Messenger written in React Native, which we have an even more straightforward path to.; 6. Low cognitive cost (relative to Angular, others. React is just a view layer, and has a tiny API. I've develop a large application in AngularJS, and have spent a bit of time with Angular2+. There is no comparison: Angular takes months to know well, React days at worst. Also, by not buying into a full framework, we achieve modularity: If we end up ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931:3744,benchmark,benchmark-on-a-real-life-application-,3744,https://hail.is,https://github.com/hail-is/hail/pull/4931,1,['benchmark'],['benchmark-on-a-real-life-application-']
Testability,"vascript/V8 JIT is consistently faster than PHP, Python, and ~Java: https://www.techempower.com/benchmarks/. ## Why NodeJS, React, etc; 1. Javascript is the only language supported by modern browsers. Web assembly will change this (compile target == web assembly, language == rust | go | python), but is not nearly as mature; 2. Ecosystem. Chosen technologies are (likely) by far the most popular. We should quantify this better; 3. Performance. NodeJS is faster than Flask, React is ~fastest JS view layer. Next makes it really easy to split app into page bundles, and (on localhost) achieves DOMContentLoaded of ~70-100ms, and faster interactivity: first loaded page (the page of the current route) is ~6-10ms.; * [Techempower]: https://www.techempower.com/benchmarks/; * [Node vs , ](https://medium.com/@mihaigeorge.c/web-rest-api-benchmark-on-a-real-life-application-ebb743a5d7a3). * React vs other client side micro bench (pay attention to ""Non-keyed""): https://krausest.github.io/js-framework-benchmark/current.html; 4. Structure, aforementioned; 5. Path to relatively performant desktop and mobile applications, via [Electron](https://getstream.io/blog/takeaways-on-building-a-react-based-app-with-electron/). [Visual Studio Code](https://github.com/Microsoft/vscode) and [Slack](https://slack.engineering/growing-pains-migrating-slacks-desktop-app-to-browserview-2759690d9c7b) are good examples. Facebook Messenger written in React Native, which we have an even more straightforward path to.; 6. Low cognitive cost (relative to Angular, others. React is just a view layer, and has a tiny API. I've develop a large application in AngularJS, and have spent a bit of time with Angular2+. There is no comparison: Angular takes months to know well, React days at worst. Also, by not buying into a full framework, we achieve modularity: If we end up finding React too slow, even with [planned 2019 improvements](https://reactjs.org/blog/2018/11/27/react-16-roadmap.html), there are plenty of others",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931:3909,benchmark,benchmark,3909,https://hail.is,https://github.com/hail-is/hail/pull/4931,1,['benchmark'],['benchmark']
Testability,"vcf; running: write -o /Users/cseed/sample.vds; Exception in thread ""main"" java.lang.AssertionError: assertion failed: Unsound substitution from List(type T) to List(); at scala.reflect.internal.Types$SubstMap.<init>(Types.scala:4644); at scala.reflect.internal.Types$SubstTypeMap.<init>(Types.scala:4761); at scala.reflect.internal.Types$Type.subst(Types.scala:796); at scala.reflect.internal.Types$TypeApiImpl.substituteTypes(Types.scala:321); at scala.reflect.internal.Types$TypeApiImpl.substituteTypes(Types.scala:298); ```. and so on. I'm guessing this has to do with the doubly-nested Maps. The following fixes the problem (but of course throws out all the annotations):. ```; diff --git a/src/main/scala/org/broadinstitute/hail/variant/VariantSampleMatrix.scala b/src/main/scala/org/broadinstitute/hail/variant/VariantSampleMatrix.scala; index 2c95bd0..c480c86 100644; --- a/src/main/scala/org/broadinstitute/hail/variant/VariantSampleMatrix.scala; +++ b/src/main/scala/org/broadinstitute/hail/variant/VariantSampleMatrix.scala; @@ -30,7 +30,7 @@ object VariantSampleMatrix {; // val df = sqlContext.read.parquet(dirname + ""/rdd.parquet""); val df = sqlContext.parquetFile(dirname + ""/rdd.parquet""); new VariantSampleMatrix[Genotype](metadata, df.rdd.map(r =>; - (r.getVariant(0), r.getVariantAnnotations(1), r.getGenotypeStream(2)))); + (r.getVariant(0), Annotations.emptyOfData(), r.getGenotypeStream(1)))); }; }. @@ -326,7 +326,7 @@ class RichVDS(vds: VariantDataset) {. // rdd.toDF().write.parquet(dirname + ""/rdd.parquet""); vds.rdd; - .map { case (v, va, gs) => (v, va, gs.toGenotypeStream(v, compress)) }; + .map[(Variant, GenotypeStream)] { case (v, va, gs) => (v, gs.toGenotypeStream(v, compress)) }; .toDF(); .saveAsParquetFile(dirname + ""/rdd.parquet""); }; ```. You should probably serialize the Annotations in some way in the map before writing them out (and deserialize when reading them in). Ugh. Also: add a test that does write vds, read, compare! I can't believe we missed this.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/116:2076,test,test,2076,https://hail.is,https://github.com/hail-is/hail/issues/116,1,['test'],['test']
Testability,"vds: caught exception: java.lang.IllegalArgumentException: requirement failed: nPartitions = 2847, ranges = 2844; 	at scala.Predef$.require(Predef.scala:233); 	at org.broadinstitute.hail.sparkextras.OrderedPartitioner.<init>(OrderedPartitioner.scala:27); 	at org.broadinstitute.hail.sparkextras.OrderedPartitioner$.read(OrderedPartitioner.scala:110); 	at org.broadinstitute.hail.variant.VariantSampleMatrix$$anonfun$8.apply(VariantSampleMatrix.scala:185); 	at org.broadinstitute.hail.variant.VariantSampleMatrix$$anonfun$8.apply(VariantSampleMatrix.scala:184); 	at org.broadinstitute.hail.utils.richUtils.RichHadoopConfiguration$.readObjectFile$extension(RichHadoopConfiguration.scala:205); 	at org.broadinstitute.hail.variant.VariantSampleMatrix$.read(VariantSampleMatrix.scala:184); 	at org.broadinstitute.hail.driver.Read$$anonfun$1.apply(Read.scala:41); 	at org.broadinstitute.hail.driver.Read$$anonfun$1.apply(Read.scala:41); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244); 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244); 	at scala.collection.mutable.ArrayOps$ofRef.map(ArrayOps.scala:108); 	at org.broadinstitute.hail.driver.Read$.run(Read.scala:41); 	at org.broadinstitute.hail.driver.Read$.run(Read.scala:9); 	at org.broadinstitute.hail.driver.Command.runCommand(Command.scala:259); 	at org.broadinstitute.hail.driver.Command.run(Command.scala:264); 	at org.broadinstitute.hail.driver.AnnotateVariantsVDS$.run(AnnotateVariantsVDS.scala:61); 	at org.broadinstitute.hail.driver.AnnotateVariantsVDS$.run(AnnotateVariantsVDS.scala:9)```. however, the same commands work on the hail version built on Spark 2. ; Here the log: https://storage.googleapis.com/maryam_lipids/hailL.log. thanks",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1213:2030,log,log,2030,https://hail.is,https://github.com/hail-is/hail/issues/1213,2,['log'],['log']
Testability,"ve all metadata, no metadata, or a; specific set of metadata fields. 5. The records are written to Google Cloud Logging. The pricing of VPC Flow Logs is described at the [network pricing page](https://cloud.google.com/vpc/network-pricing#network-telemetry). Notice that, if logs are only sent to Cloud Logging (not to BigQuery, Pub/Sub, or Cloud Storage):. > If you store your logs in Cloud Logging, logs generation charges are waived, and only Logging charges apply. I believe in this phrase ""logs generation charges"" refers to *VPC Flow logs* generation charges. The Google Cloud Logging [pricing page](https://cloud.google.com/stackdriver/pricing#google-clouds-operations-suite-pricing) indicates that, after 50 GiB of free logs, the user is charged 0.50 USD per GiB of logs. Storage is free for thirty days and 0.01 USD per GiB for each additional day. We can calculate the cost of our logs as follows. Refer to the [definition of the record format](https://cloud.google.com/vpc/docs/flow-logs#record_format) for details. ```python3; ip_string = len(""123.123.123.123""); ip_connection = 4 + ip_string + ip_string + 4 + 4; date_time = len(""1937-01-01T12:00:27.87+00:20""); record_bytes = sum((; ip_connection,; max(len('SRC'), len('DEST')),; 8,; 8,; 8,; date_time,; date_time,; )); assert record_bytes == 126. hours_per_month = 24 * 60; seconds_per_hour = 60 * 60. seconds_per_interval = 15 * 60; vms = 10000; sampling_rate = 0.5; connections_per_vm_per_aggregation_interval = 100. intervals_per_hour = seconds_per_hour / seconds_per_interval; records_per_hour = intervals_per_hour * vms * connections_per_vm_per_aggregation_interval * sampling_rate; bytes_per_hour = records_per_hour * record_bytes; bytes_per_month = bytes_per_hour * hours_per_month; GiB_per_month = bytes_per_month / 1024. / 1024 / 1024. USD_per_month = max(0, GiB_per_month - 50) * 0.5. print(GiB_per_month); print(USD_per_month); ```. This works out to 143 USD to run a 10,000 VM cluster 24 hours a day for 30 days. I suspect o",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12883:2390,log,logs,2390,https://hail.is,https://github.com/hail-is/hail/pull/12883,1,['log'],['logs']
Testability,"ved for enrtries nonetheless. `#import libraries; import os; import hail as hl; from pprint import pprint. #### Start hail; hl.init(); hl.spark_context()`. /opt/conda/lib/python3.10/site-packages/hailtop/aiocloud/aiogoogle/user_config.py:44: UserWarning:. Reading spark-defaults.conf to determine GCS requester pays configuration. This is deprecated. Please use `hailctl config set gcs_requester_pays/project` and `hailctl config set gcs_requester_pays/buckets`. SLF4J: No SLF4J providers were found.; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.; SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.; SLF4J: Ignoring binding found at [jar:file:/usr/lib/spark/jars/log4j-slf4j-impl-2.18.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; Running on Apache Spark version 3.3.0; SparkUI available at http://saturn-3f2d119c-05e5-496d-97b9-8f40efff98a3-m.c.terra-db12d060.internal:36235/; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.126-ee77707f4fab; LOGGING: writing to /home/jupyter/Ellinor_Lubitz_PHB_Joint_Analyses/edit/hail-20231216-1801-0.2.126-ee77707f4fab.log. SparkContext. [Spark UI](http://saturn-3f2d119c-05e5-496d-97b9-8f40efff98a3-m.c.terra-db12d060.internal:36235/). Version; v3.3.0; Master; yarn; AppName; pyspark-shell. `#### Read vcf; vcfs = [""gs://path/to/bucket/chrY.*.hard_filtered_with_genotypes.vcf.gz""]. #####; ##### Read vcf file; mt = hl.import_vcf(vcfs , force_bgz= True, reference_genome='GRCh38', find_replace=('null', '.')). mt.count(); `. 2023-12-16 18:02:00.897 Hail: INFO: scanning VCF for sortedness... (4 + 3) / 7]; 2023-12-16 18:02:16.278 Hail: INFO: Coerced sorted VCF - no additiona",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14102:2541,log,logging,2541,https://hail.is,https://github.com/hail-is/hail/issues/14102,1,['log'],['logging']
Testability,"ved the code). - `.strip()` the GitHub token in case there are newlines. - print the SHA being deployed in the log statement. - add `hail-ci-build.sh` to CI, which just invokes `make test-in-cluster`(which in turn runs `test-in-cluster.sh`. - `test-in-cluster.sh` copies the secrets for testing to the expected locations and exposes the pod in which it is running with an internal service, recent changes to `site` [redirect sub URLs of ci.test.is to services named using this scheme](https://github.com/hail-is/hail/blob/master/site/hail.nginx.conf#L38-L41). GitHub uses these URLs to send updates to the CI under test about the watched repositories. - `test-locally.sh` now installs `../batch` into the currently running `pip` before testing (NB: if you edit batch and run the tests without committing the changes you've made to batch, this will pass tests but fail when pushed to a PR!). - `test-locally.sh` activates the `hail-ci` conda environment itself because it was not being propagated from the `Makefile`. I don't know why, but this is a simple fix. - `test-locally.sh` starts the ci after the repository is created. CI will print error messages if a watched repository doesn't exist. - `test/test-ci.py` now uses access tokens for all interaction with GitHub, previously it relied on the latent privileges that I and Cotton had in our environments. - `test/test-ci.py` uses a temporary, but not automatically deleted, directory when the environment variable `IN_CLUSTER` is set to `true` (to which it is set by `test-in-cluster.sh`). I noticed that, when running in a batch job pod, if an error occurred, `pytest` failed to print any error information and instead failed because the current working directory no longer existed. I found very little information on Google about this. It seems safe to not clean up temporary directories created in the batch job pod because pods are ephemeral. cc: @cseed. Assigning to @tpoterba since he has the most context on this stuff other than Cotton.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4474:1532,test,test-locally,1532,https://hail.is,https://github.com/hail-is/hail/pull/4474,6,['test'],"['test', 'test-ci', 'test-in-cluster', 'test-locally']"
Testability,very helpful when executing tests locally. Most of the lines here are noise because I added a function that wraps `client.create_batch` so needed to replace usages everywhere.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12884:28,test,tests,28,https://hail.is,https://github.com/hail-is/hail/pull/12884,1,['test'],['tests']
Testability,"vsm.annotatesamples had a really bad problem with it, where it was reducing the dimension of sampleAnnotations to the dimension of localSamples. Broke it with a test, and fixed the problem.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/239:161,test,test,161,https://hail.is,https://github.com/hail-is/hail/pull/239,1,['test'],['test']
Testability,"w index to support this. In case it's hard to find the exact comment in the PR, I pasted an example thread below:. Example comment from Dan: https://github.com/hail-is/hail/pull/14170/files#r1476847018. This is my concrete critqiue: the two SQL queries are nearly the same, but they are long enough to; make seeing that challenging. ```sql; SELECT jobs.batch_id, jobs.job_id; FROM jobs FORCE INDEX(jobs_batch_id_state_always_run_cancelled); WHERE batch_id = %s AND job_group_id = %s AND state = 'Ready' AND always_run = 0; LIMIT %s;; ```. ```sql; SELECT jobs.batch_id, jobs.job_id; FROM jobs FORCE INDEX(jobs_batch_id_state_always_run_cancelled); WHERE batch_id = %s AND job_group_id = %s AND state = 'Ready' AND always_run = 0 AND cancelled = 1; LIMIT %s;; ```. They only differ in the cancelled condition. As a reader, I'd prefer code that revealed that; similarity and used names to suggest what the difference was doing, and maybe a comment, if there is; no better way to say it, indicaing what you indicated in your GitHub comment. ```python3; if job_group['cancelled']:; where_job_needs_cancelling = '' # every job in a cancelled group needs cancelling; else:; where_job_needs_cancelling = 'AND jobs.cancelled' # jobs.cancelled means child of a failed job; query_for_jobs_to_be_cancelled = f""""""; SELECT jobs.batch_id, jobs.job_id; FROM jobs FORCE INDEX(jobs_batch_id_state_always_run_cancelled); WHERE batch_id = %s; AND job_group_id = %s; AND state = 'Ready'; AND NOT always_run; {where_job_needs_cancelling}; LIMIT %s;; """"""; async for record in self.db.select_and_fetchall(; query_for_jobs_to_be_cancelled,; (job_group['batch_id'], job_group['job_group_id'], remaining.value),; ):; yield record; ```. Other similar threads:. - https://github.com/hail-is/hail/pull/14282#discussion_r1487118601; - https://github.com/hail-is/hail/pull/14282#discussion_r1487150061; - https://github.com/hail-is/hail/pull/14282#discussion_r1487156802. ### Version. 0.2.128. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14412:2481,log,log,2481,https://hail.is,https://github.com/hail-is/hail/issues/14412,1,['log'],['log']
Testability,wait 900s for pipeline test,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6092:23,test,test,23,https://hail.is,https://github.com/hail-is/hail/pull/6092,1,['test'],['test']
Testability,wait for deployment before testing service,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6011:27,test,testing,27,https://hail.is,https://github.com/hail-is/hail/pull/6011,1,['test'],['testing']
Testability,"we recommend that users check that; their own code does not use deprecated SciPy functionality (to do so,; run your code with <code>python -Wd</code> and check for <code>DeprecationWarning</code> s).; Our development attention will now shift to bug-fix releases on the; 1.8.x branch, and on adding new features on the master branch.</p>; <p>This release requires Python <code>3.8+</code> and <code>NumPy 1.17.3</code> or greater.</p>; <p>For running on PyPy, PyPy3 <code>6.0+</code> is required.</p>; <h1>Highlights of this release</h1>; <ul>; <li>A sparse array API has been added for early testing and feedback; this; work is ongoing, and users should expect minor API refinements over; the next few releases.</li>; <li>The sparse SVD library PROPACK is now vendored with SciPy, and an interface; is exposed via <code>scipy.sparse.svds</code> with <code>solver='PROPACK'</code>. It is currently; default-off due to potential issues on Windows that we aim to; resolve in the next release, but can be optionally enabled at runtime for; friendly testing with an environment variable setting of <code>USE_PROPACK=1</code>.</li>; <li>A new <code>scipy.stats.sampling</code> submodule that leverages the <code>UNU.RAN</code> C; library to sample from arbitrary univariate non-uniform continuous and; discrete distributions</li>; <li>All namespaces that were private but happened to miss underscores in; their names have been deprecated.</li>; </ul>; <h1>New features</h1>; <h1><code>scipy.fft</code> improvements</h1>; <p>Added an <code>orthogonalize=None</code> parameter to the real transforms in <code>scipy.fft</code>; which controls whether the modified definition of DCT/DST is used without; changing the overall scaling.</p>; <p><code>scipy.fft</code> backend registration is now smoother, operating with a single</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/scipy/scipy/commit/b5d8",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11538:1765,test,testing,1765,https://hail.is,https://github.com/hail-is/hail/pull/11538,1,['test'],['testing']
Testability,we should do a random test:; - gen a multiallelic vds; - annotate variants (Still multi) with range(v.nAlleles).map(x => if (x == 0) NA: AltAllele else va.altAlleles[x]); - split; - ensure that va.anno[va.aIndex] == va.altAllele,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1160:22,test,test,22,https://hail.is,https://github.com/hail-is/hail/issues/1160,1,['test'],['test']
Testability,"we; timeout substantially more frequently. I have observed this myself on my laptop. Just this; morning I saw it happen to Daniel. 2. When using an `aiohttp.AsyncIterablePayload`, it is *critical* to always check if the coroutine; which actually writes to GCS (which is stashed in the variable `request_task`) is still; alive. In the current `main`, we do not do this which causes hangs (in particular the timeout; exceptions are never thrown ergo we never retry). To understand the second problem, you must first recall how writing works in aiogoogle. There are; two Tasks and an `asyncio.Queue`. The terms ""writer"" and ""reader"" are somewhat confusing, so let's; use left and right. The left Task has the owning reference to both the source ""file"" and the; destination ""file"". In particular, it is the *left* Task which closes both ""files"". Moreover, the; left Task reads chunks from the source file and places those chunks on the `asyncio.Queue`. The; right Task takes chunks off the queue and writes those chunks to the destination file. This situation can go awry in two ways. First, if the right Task encounters any kind of failure, it will stop taking chunks off of the; queue. When the queue (which has a size limit of one) is full, the left Task will hang. The system; is stuck. The left Task will wait forever for the right Task to empty the queue. The second scenario is exactly the same except that the left Task is trying to add the ""stop""; message to the queue rather than a chunk. In either case, it is critical that the left Task waits simultaneously on the queue operation *and*; on the right Task completing. If the right Task has died, no further writes can occur and the left; Task must raise an exception. In the first scenario, we do not observe the right Task's exception; because that will be done when we close the `InsertObjectStream` (which represents the destination; ""file""). ---. I also added several types, assertions, and a few missing `async with ... as resp:` blocks.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11830:2156,assert,assertions,2156,https://hail.is,https://github.com/hail-is/hail/pull/11830,1,['assert'],['assertions']
Testability,"which is not installed.; aiosignal 1.3.1 requires frozenlist, which is not installed.; aiohttp 3.8.5 requires frozenlist, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png ""high severity"") | **661/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 7.5 | Improper Neutralization of Special Elements in Data Query Logic <br/>[SNYK-PYTHON-MSAL-5904284](https://snyk.io/vuln/SNYK-PYTHON-MSAL-5904284) | `msal:` <br> `1.24.0 -> 1.24.1` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI2NWVkZTk2ZC0xYjZkLTQ1ZjktOTU3OC00NzdjMWNmNDhiZmQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjY1ZWRlOTZkLTFiNmQtNDVmOS05NTc4LTQ3N2MxY2Y0OGJmZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13754:1524,test,tested,1524,https://hail.is,https://github.com/hail-is/hail/pull/13754,1,['test'],['tested']
Testability,"which is not installed.; aiosignal 1.3.1 requires frozenlist, which is not installed.; aiohttp 3.8.5 requires frozenlist, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png ""high severity"") | **661/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 7.5 | Improper Neutralization of Special Elements in Data Query Logic <br/>[SNYK-PYTHON-MSAL-5904284](https://snyk.io/vuln/SNYK-PYTHON-MSAL-5904284) | `msal:` <br> `1.24.0 -> 1.24.1` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhYjlhNGM2ZS0xOTg1LTRmYTctYjg0OC0zOTNmOWE3MGJkMWEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImFiOWE0YzZlLTE5ODUtNGZhNy1iODQ4LTM5M2Y5YTcwYmQxYSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13753:1516,test,tested,1516,https://hail.is,https://github.com/hail-is/hail/pull/13753,1,['test'],['tested']
Testability,"wip. A few remaining tests fail. Includes a number of fixes to InferPType, InferType. Plan is to get this working before optimize, since that is the simple case, and then move to pre-simplify",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8063:21,test,tests,21,https://hail.is,https://github.com/hail-is/hail/pull/8063,1,['test'],['tests']
Testability,wip; testing,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6608:5,test,testing,5,https://hail.is,https://github.com/hail-is/hail/pull/6608,1,['test'],['testing']
Testability,"with profile75.vds:; linreg with 10 PCs: 58s, 59s, 59s; plink2: 38s, 39s, 39s; variantqc: 142s, 141s, 144s; sampleqc: 231s, 233s, 233s; linreg with 10 PCs, 8 cores: 23s, 24s, 24s; pca, 8 cores: 179s. hail command:; ~/hail/build/install/hail/bin/hail read -i ~/data/profile75.vds linreg -c ~/data/profile75.cov -f ~/data/profile.fam -o ~/data/profile75.linreg. read: 1570.888546; linreg: 58496.508588. plink vcf command to create bed/bim/fam:; ./plink --vcf ~/data/profile75.vcf.bgz; - rename plink.bed/bim/fam to profile75.bed/bim/fam; - create covar with FID column by doubling first column of cov file (use cut and paste in bash). plink linreg command:; time ./plink --bfile profile75 --double-id --pheno ~/data/profile.pheno --allow-no-sex --covar ~/data/profile75.covar --linear --out ~/data/profile75.plink. PLINK v1.90b3w 64-bit (3 Sep 2015) https://www.cog-genomics.org/plink2; (C) 2005-2015 Shaun Purcell, Christopher Chang GNU General Public License v3; Logging to /Users/Jon/data/profile75.plink.log.; Options in effect:; --allow-no-sex; --bfile profile75; --covar /Users/Jon/data/profile75.covar; --double-id; --linear; --out /Users/Jon/data/profile75.plink; --pheno /Users/Jon/data/profile.pheno. 16384 MB RAM detected; reserving 8192 MB for main workspace.; 74885 variants loaded from .bim file.; 2535 people (0 males, 0 females, 2535 ambiguous) loaded from .fam.; Ambiguous sex IDs written to /Users/Jon/data/profile75.plink.nosex .; 2535 phenotype values present after --pheno.; Using 1 thread.; Warning: This run includes BLAS/LAPACK linear algebra operations which; currently disregard the --threads limit. If this is problematic, you may want; to recompile against single-threaded BLAS/LAPACK.; --covar: 10 covariates loaded.; Before main variant filters, 2535 founders and 0 nonfounders present.; Calculating allele frequencies... done.; Total genotyping rate is 0.914041.; 74885 variants and 2535 people pass filters and QC.; Phenotype data is quantitative.; Writing linear model a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/61:963,Log,Logging,963,https://hail.is,https://github.com/hail-is/hail/pull/61,1,['Log'],['Logging']
Testability,"work updates; <ul>; <li>enable <code>py3.10</code> tests</li>; <li>add <code>conda</code> dependencies</li>; <li>update pre-commit hooks</li>; <li>fix <code>pytest</code> config (<code>nbval</code>, <code>asyncio</code>)</li>; <li>fix dependencies &amp; tests</li>; <li>fix site deployment</li>; </ul>; </li>; </ul>; <h2>tqdm v4.62.3 stable</h2>; <ul>; <li>fix minor typo (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1246"">#1246</a>)</li>; <li>minor example fix (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1246"">#1246</a>)</li>; <li>misc tidying &amp; refactoring</li>; <li>misc build/dev framework updates; <ul>; <li>update dependencies</li>; <li>update linters</li>; <li>update docs deployment branches</li>; </ul>; </li>; <li>misc test/ci updates; <ul>; <li>test forks</li>; <li>tidy OS &amp; Python version tests</li>; <li>bump primary python version 3.7 =&gt; 3.8</li>; <li>beta py3.10 testing</li>; <li>fix py2.7 tests</li>; <li>better timeout handling</li>; </ul>; </li>; </ul>; <h2>tqdm v4.62.2 stable</h2>; <ul>; <li>fix notebook memory leak (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1216"">#1216</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/tqdm/tqdm/commit/6791e8c5b3d6c30bdd2060c346996bfb5a6f10d1""><code>6791e8c</code></a> bump version, merge pull request <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1366"">#1366</a> from tqdm/devel</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/754186291e6b4e28ea8b56c9493adc03bf14c404""><code>7541862</code></a> tests: hotfix skip windows errors</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/8fb3d91f561e2a286a7fda13291eda16613dac39""><code>8fb3d91</code></a> fix ipywidgets&gt;=8 display</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/05e3d32a5fc8559e133e6d627d44afda93018637""><code>05e3d32</code></a> fix jupyterla",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12260:3644,test,tests,3644,https://hail.is,https://github.com/hail-is/hail/pull/12260,1,['test'],['tests']
Testability,"work updates; <ul>; <li>enable <code>py3.10</code> tests</li>; <li>add <code>conda</code> dependencies</li>; <li>update pre-commit hooks</li>; <li>fix <code>pytest</code> config (<code>nbval</code>, <code>asyncio</code>)</li>; <li>fix dependencies &amp; tests</li>; <li>fix site deployment</li>; </ul>; </li>; </ul>; <h2>tqdm v4.62.3 stable</h2>; <ul>; <li>fix minor typo (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1246"">#1246</a>)</li>; <li>minor example fix (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1246"">#1246</a>)</li>; <li>misc tidying &amp; refactoring</li>; <li>misc build/dev framework updates; <ul>; <li>update dependencies</li>; <li>update linters</li>; <li>update docs deployment branches</li>; </ul>; </li>; <li>misc test/ci updates; <ul>; <li>test forks</li>; <li>tidy OS &amp; Python version tests</li>; <li>bump primary python version 3.7 =&gt; 3.8</li>; <li>beta py3.10 testing</li>; <li>fix py2.7 tests</li>; <li>better timeout handling</li>; </ul>; </li>; </ul>; <h2>tqdm v4.62.2 stable</h2>; <ul>; <li>fix notebook memory leak (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1216"">#1216</a>)</li>; <li>fix <code>contrib.concurrent</code> with generators (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1233"">#1233</a> &lt;- <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1231"">#1231</a>)</li>; </ul>; <h2>tqdm v4.62.1 stable</h2>; <ul>; <li><code>contrib.logging</code>: inherit existing handler output stream (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1191"">#1191</a>)</li>; <li>fix <code>PermissionError</code> by using <code>weakref</code> in <code>DisableOnWriteError</code> (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1207"">#1207</a>)</li>; <li>fix <code>contrib.telegram</code> creation rate limit handling (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1223"">#1223</a>, <a href=""https://github-redirect.depend",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11587:1854,test,tests,1854,https://hail.is,https://github.com/hail-is/hail/pull/11587,1,['test'],['tests']
Testability,write codegen tests to their own directory,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5275:14,test,tests,14,https://hail.is,https://github.com/hail-is/hail/pull/5275,1,['test'],['tests']
Testability,write gVCF combiner tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5390:20,test,tests,20,https://hail.is,https://github.com/hail-is/hail/issues/5390,1,['test'],['tests']
Testability,"writing a simple command such as read and write produces different type of error, but all related to memory issues. ; The most explicit error is: . ```; error='Cannot allocate memory' (errno=12); # There is insufficient memory for the Java Runtime Environment to continue.; # Native memory allocation (mmap) failed to map 7376207872 bytes for committing reserved memory.; ```. But also get this issue in other occasions:. ```; ExecutorLostFailure (executor 2265 exited caused by one of the running tasks) Reason: Container marked as failed: container_1481808189977_0001_01_002296 on host: gnomadpsychk-sw-wpt8.c.wgspd-147615.internal. Exit status: 50. Diagnostics: Exception from container-launch.; Container id: container_1481808189977_0001_01_002296; Exit code: 50; Stack trace: ExitCodeException exitCode=50:; 	at org.apache.hadoop.util.Shell.runCommand(Shell.java:582); 	at org.apache.hadoop.util.Shell.run(Shell.java:479); 	at org.apache.hadoop.util.Shell$ShellCommandExecutor.execute(Shell.java:773); 	at org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor.launchContainer(DefaultContainerExecutor.java:212); 	at org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch.call(ContainerLaunch.java:302); 	at org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch.call(ContainerLaunch.java:82); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745). Container exited with a non-zero exit code 50. Driver stacktrace:; ```. Log for this last error is here: https://storage.googleapis.com/wgspd_urv/hailNEW.log. I tried different projects and get the same error, both with pyhail and native hail. I don't see the same error when running on cray.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1186:1716,Log,Log,1716,https://hail.is,https://github.com/hail-is/hail/issues/1186,2,"['Log', 'log']","['Log', 'log']"
Testability,"ww.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/googleapis/python-logging/blob/main/CHANGELOG.md"">google-cloud-logging's changelog</a>.</em></p>; <blockquote>; <h2><a href=""https://github.com/googleapis/python-logging/compare/v2.7.0...v3.0.0"">3.0.0</a> (2022-01-27)</h2>; <h3>⚠ BREAKING CHANGES</h3>; <ul>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>)</li>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>)</li>; </ul>; <h3>Features</h3>; <ul>; <li>add api key support (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/472"">#472</a>) (<a href=""https://github.com/googleapis/python-logging/commit/81ca8c616acb988be1fbecfc2a0b1a5b39280149"">81ca8c6</a>)</li>; <li>add json_fields extras argument for adding to jsonPayload (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/447"">#447</a>) (<a href=""https://github.com/googleapis/python-logging/commit/a760e02371a55d6262e42de9e0222fffa2c7192b"">a760e02</a>)</li>; <li>avoid importing grp",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:6282,log,logging,6282,https://hail.is,https://github.com/hail-is/hail/pull/11574,2,['log'],"['logger', 'logging']"
Testability,"x compatibility issue with click 8.1.0. Fix <a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/132"">#132</a> (#...</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/e16056828523d9af3e13b67243d62830ff03d89d""><code>e160568</code></a> chore(deps): update actions/cache action to v3</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/bce95021c33e9206104512c412751ee435a6606b""><code>bce9502</code></a> chore(deps): update dependency prettier to v2.6.1</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/c7ebbaedf5bc6a8c562a46941681d7bc8598497b""><code>c7ebbae</code></a> chore(deps): update dependency prettier to v2.6.0</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/efd710b42cf0982582bb8a4f345ccfa967866b97""><code>efd710b</code></a> chore(deps): update dependency coverage to v6.3.2</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/438cf6131c1784de8bc9b34970beace1ec7c52af""><code>438cf61</code></a> Update tested Python versions on GitHub (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/122"">#122</a>)</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/b64ec22effafffc6a1371e544c560e6bfc24b56e""><code>b64ec22</code></a> Add explicit name in setup.py</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/4f8ef056177513ea599597d4089fed4275ae5d12""><code>4f8ef05</code></a> chore(deps): update actions/checkout action to v3 (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/121"">#121</a>)</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/6389c5acb15153df43b0681cb1333bbd892c3a16""><code>6389c5a</code></a> chore: allow automerge for official GitHub Actions</li>; <li>Additional commits viewable in <a href=""https://github.com/thibaudcolas/curlylint/compare/v0.12.0...v0.13.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11713:8188,test,tested,8188,https://hail.is,https://github.com/hail-is/hail/pull/11713,1,['test'],['tested']
Testability,"x.builders.html.HTMLTranslator</code> attributes.</li>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11385"">#11385</a>: Remove support for HTML 4 output.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/d48cc783b6e48b99cbbcf5462f44c59a4ed78e6a""><code>d48cc78</code></a> Bump to 7.0.1 final</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/de6b18ac7de317030be4344ea7a9d553c423ffcf""><code>de6b18a</code></a> Remove remaining references to the setuptools integration (<a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11418"">#11418</a>)</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/db546189ce1d2a345f4399367ced6ecdd538be5d""><code>db54618</code></a> Support Docutils 0.20 (<a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11411"">#11411</a>)</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/8942a1dddf2355928f088d6b631db8658034eaae""><code>8942a1d</code></a> Test with Docutils 0.20</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/c9d0933e5d8e34aa9d2c1d88c5a80b46b575730e""><code>c9d0933</code></a> linkcheck: Use context managers for HTTP requests (<a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11318"">#11318</a>)</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/2b1c106bbff5265e8a6076318db5d083c329d575""><code>2b1c106</code></a> Update documentation workflow</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/ba7408209e84ee413f240afc20f3c6b484a81f8f""><code>ba74082</code></a> Change concurrency groups for GitHub workflows</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/b546879539200ec4128bcc6d0ed911ebf28bb3cb""><code>b546879</code></a> Bump version</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/d568b2f4f7cca743fcbf70814d15602d8129b790""><code>d568b2f</code></a> Bump to 7.0.0 final</li>; <li><a href=""https://github.com/sphinx-do",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13054:5442,Test,Test,5442,https://hail.is,https://github.com/hail-is/hail/pull/13054,1,['Test'],['Test']
Testability,xception: files not deleted:; gs://hail-test-ezlis/fs-suite/delete-many-files/c287f9de-7e80-4d34-b22e-eb91736aeaac/467.suffix; 	at org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:528); 	at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:527); 	at org.scalatest.testng.TestNGSuite.newAssertionFailedException(TestNGSuite.scala:67); 	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:501); 	at is.hail.io.fs.FSSuite.largeDirectoryOperations(FSSuite.scala:413); 	at is.hail.io.fs.FSSuite.largeDirectoryOperations$(FSSuite.scala:398); 	at is.hail.io.fs.GoogleStorageFSSuite.largeDirectoryOperations(GoogleStorageFSSuite.scala:10); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.t,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13827:1334,test,testng,1334,https://hail.is,https://github.com/hail-is/hail/issues/13827,1,['test'],['testng']
Testability,"xception; /usr/lib/python3.8/asyncio/tasks.py:280: in __step; result = coro.send(None); /usr/local/lib/python3.8/dist-packages/hail/backend/service_backend.py:509: in _async_execute; _, resp, timings = await self._rpc('execute(...)', inputs, ir=ir, progress=progress); /usr/local/lib/python3.8/dist-packages/hail/backend/service_backend.py:451: in _rpc; result_bytes = await retry_transient_errors(self._read_output, ir, iodir + '/out'); /usr/local/lib/python3.8/dist-packages/hailtop/utils/utils.py:781: in retry_transient_errors; return await retry_transient_errors_with_debug_string('', 0, f, *args, **kwargs); /usr/local/lib/python3.8/dist-packages/hailtop/utils/utils.py:794: in retry_transient_errors_with_debug_string; return await f(*args, **kwargs); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . self = <hail.backend.service_backend.ServiceBackend object at 0x7f63d6b90bb0>; ir = <hail.ir.ir.TableWrite object at 0x7f63d4e70c70>; output_uri = 'hail-az://haildevtest/test/tmp/hail/FCIxoO1REfjctjXVpyHiF1/vwzzlTSQqo/out'. async def _read_output(self, ir: Optional[BaseIR], output_uri: str) -> bytes:; assert self._batch; ; try:; driver_output = await self._async_fs.open(output_uri); except FileNotFoundError as exc:; raise FatalError('Hail internal error. Please contact the Hail team and provide the following information.\n\n' + yamlx.dump({; 'service_backend_debug_info': self.debug_info(),; 'batch_debug_info': await self._batch.debug_info(); })) from exc; ; async with driver_output as outfile:; success = await read_bool(outfile); if success:; return await read_bytes(outfile); ; short_message = await read_str(outfile); expanded_message = await read_str(outfile); error_id = await read_int(outfile); ; reconstructed_error = fatal_error_from_java_error_triplet(short_message, expanded_message, error_id); if ir is None:; raise reconstructed_error; > raise reconstructed_error.maybe_user_error(ir); E hail.utils.java.FatalError: NativeIoException: read",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12980:3321,test,test,3321,https://hail.is,https://github.com/hail-is/hail/issues/12980,1,['test'],['test']
Testability,"xception; /usr/lib/python3.8/asyncio/tasks.py:280: in __step; result = coro.send(None); /usr/local/lib/python3.8/dist-packages/hail/backend/service_backend.py:509: in _async_execute; _, resp, timings = await self._rpc('execute(...)', inputs, ir=ir, progress=progress); /usr/local/lib/python3.8/dist-packages/hail/backend/service_backend.py:451: in _rpc; result_bytes = await retry_transient_errors(self._read_output, ir, iodir + '/out'); /usr/local/lib/python3.8/dist-packages/hailtop/utils/utils.py:781: in retry_transient_errors; return await retry_transient_errors_with_debug_string('', 0, f, *args, **kwargs); /usr/local/lib/python3.8/dist-packages/hailtop/utils/utils.py:794: in retry_transient_errors_with_debug_string; return await f(*args, **kwargs); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . self = <hail.backend.service_backend.ServiceBackend object at 0x7ff6aa3b15b0>; ir = <hail.ir.ir.MakeTuple object at 0x7ff6a73b8d30>; output_uri = 'hail-az://haildevtest/test/tmp/hail/mGZ0y8JSUQM6CVs20XzdIu/eLwQUTyLRv/out'. async def _read_output(self, ir: Optional[BaseIR], output_uri: str) -> bytes:; assert self._batch; ; try:; driver_output = await self._async_fs.open(output_uri); except FileNotFoundError as exc:; raise FatalError('Hail internal error. Please contact the Hail team and provide the following information.\n\n' + yamlx.dump({; 'service_backend_debug_info': self.debug_info(),; 'batch_debug_info': await self._batch.debug_info(); })) from exc; ; async with driver_output as outfile:; success = await read_bool(outfile); if success:; return await read_bytes(outfile); ; short_message = await read_str(outfile); expanded_message = await read_str(outfile); error_id = await read_int(outfile); ; reconstructed_error = fatal_error_from_java_error_triplet(short_message, expanded_message, error_id); if ir is None:; raise reconstructed_error; > raise reconstructed_error.maybe_user_error(ir); E hail.utils.java.FatalError: RuntimeException: Strea",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12976:12656,test,test,12656,https://hail.is,https://github.com/hail-is/hail/issues/12976,1,['test'],['test']
Testability,"xpr(Parser.scala:511); 	at is.hail.expr.ir.IRParser$.named_value_ir(Parser.scala:494); 	at is.hail.expr.ir.IRParser$$anonfun$named_value_irs$1.apply(Parser.scala:489); 	at is.hail.expr.ir.IRParser$$anonfun$named_value_irs$1.apply(Parser.scala:489); 	at is.hail.expr.ir.IRParser$.repUntil(Parser.scala:281); 	at is.hail.expr.ir.IRParser$.named_value_irs(Parser.scala:489); 	at is.hail.expr.ir.IRParser$.ir_value_expr_1(Parser.scala:670); 	at is.hail.expr.ir.IRParser$.ir_value_expr(Parser.scala:511); 	at is.hail.expr.ir.IRParser$.matrix_ir_1(Parser.scala:920); 	at is.hail.expr.ir.IRParser$.matrix_ir(Parser.scala:885); 	at is.hail.expr.ir.IRParser$.matrix_ir_1(Parser.scala:923); 	at is.hail.expr.ir.IRParser$.matrix_ir(Parser.scala:885); 	at is.hail.expr.ir.IRParser$$anonfun$parse_matrix_ir$2.apply(Parser.scala:1023); 	at is.hail.expr.ir.IRParser$$anonfun$parse_matrix_ir$2.apply(Parser.scala:1023); 	at is.hail.expr.ir.IRParser$.parse(Parser.scala:1007); 	at is.hail.expr.ir.IRParser$.parse_matrix_ir(Parser.scala:1023); 	at is.hail.expr.ir.IRParser$.parse_matrix_ir(Parser.scala:1022); 	at is.hail.expr.ir.IRParser.parse_matrix_ir(Parser.scala); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:280); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:214); 	at java.lang.Thread.run(Thread.java:748). Hail version: 0.2.5-e017bef1c26c; Error summary: AssertionError: assertion failed: cov1 not in struct{__y: float64, __cov0: float64}; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4941:3141,Assert,AssertionError,3141,https://hail.is,https://github.com/hail-is/hail/issues/4941,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,xt$.$anonfun$scoped$3(ExecuteContext.scala:75); 	at is.hail.utils.package$.using(package.scala:635); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:75); 	at is.hail.utils.package$.using(package.scala:635); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:63); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:350); 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$1(SparkBackend.scala:495); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.backend.spark.SparkBackend.executeEncode(SparkBackend.scala:494); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182); 	at py4j.ClientServerConnection.run(ClientServerConnection.java:106); 	at java.base/java.lang.Thread.run(Thread.java:829). Hail version: 0.2.120-f00f916faf78; Error summary: ClassCastException: class is.hail.types.physical.stypes.concrete.SIndexablePointer cannot be cast to class is.hail.types.physical.stypes.concrete.SJavaArrayString (is.hail.types.physical.stypes.concrete.SIndexablePointer and is.hail.types.physical.stypes.concrete.SJavaArrayString are in unnamed module of loader 'app'); ```. ### Version. 0.2.122. ### Relevant log output. _No response_,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13633:13967,log,log,13967,https://hail.is,https://github.com/hail-is/hail/issues/13633,1,['log'],['log']
Testability,"xtualize/rich#3013</a></li>; </ul>; <h3>Added</h3>; <ul>; <li>Added Text.extend_style method.</li>; <li>Added Span.extend method.</li>; </ul>; <h3>Changed</h3>; <ul>; <li>Text.tab_size now defaults to <code>None</code> to indicate that Console.tab_size should be used.</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/Textualize/rich/blob/master/CHANGELOG.md"">rich's changelog</a>.</em></p>; <blockquote>; <h2>[13.5.3] - 2023-09-17</h2>; <h3>Fixed</h3>; <ul>; <li>Markdown table rendering issue with inline styles and links <a href=""https://redirect.github.com/Textualize/rich/issues/3115"">Textualize/rich#3115</a></li>; <li>Fix Markdown code blocks on a light background <a href=""https://redirect.github.com/Textualize/rich/issues/3123"">Textualize/rich#3123</a></li>; </ul>; <h2>[13.5.2] - 2023-08-01</h2>; <h3>Fixed</h3>; <ul>; <li>Fixed Text.expand_tabs assertion error</li>; </ul>; <h2>[13.5.1] - 2023-07-31</h2>; <h3>Fixed</h3>; <ul>; <li>Fix tilde character (<code>~</code>) not included in link regex when printing to console <a href=""https://redirect.github.com/Textualize/rich/issues/3057"">Textualize/rich#3057</a></li>; </ul>; <h2>[13.5.0] - 2023-07-29</h2>; <h3>Fixed</h3>; <ul>; <li>Fixed Text.expand_tabs not expanding spans.</li>; <li>Fixed TimeElapsedColumn from showing negative.</li>; <li>Fix for escaping strings with a trailing backslash <a href=""https://redirect.github.com/Textualize/rich/issues/2987"">Textualize/rich#2987</a></li>; <li>Fixed exception in Markdown with partial table <a href=""https://redirect.github.com/Textualize/rich/issues/3053"">Textualize/rich#3053</a></li>; <li>Fixed the HTML export template so that the <code>&lt;html&gt;</code> tag comes before the <code>&lt;head&gt;</code> tag <a href=""https://redirect.github.com/Textualize/rich/issues/3021"">Textualize/rich#3021</a></li>; <li>Fixed issue with custom classes overwriting",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13651:3271,assert,assertion,3271,https://hail.is,https://github.com/hail-is/hail/pull/13651,2,['assert'],['assertion']
Testability,"y installed hail-0.2.124; hailctl config set query/backend spark; ```; * At this point Hail seems correcly installed; ```sh; $ pip show hail; Name: hail; Version: 0.2.124; Summary: Scalable library for exploring and analyzing genomic data.; Home-page: https://hail.is; Author: Hail Team; Author-email: hail@broadinstitute.org; License: UNKNOWN; Location: /home/hadoop/.local/lib/python3.9/site-packages; ```; * For sake of configuration I create a symlink of the hail backend; ```sh; sudo ln -sf /home/hadoop/.local/lib/python3.9/site-packages/hail/backend /opt/hail/backend; ```; * Confident of the. installation I try to run spark shell; ```sh; $ spark-shell; [...]; Exception in thread ""main"" java.lang.NoSuchMethodError: 'scala.reflect.internal.settings.MutableSettings ; ```. I am out of idea on how to solve the current situation. ; Thanks. ### Version. 0.2.124. ### Relevant log output. ```shell; $ spark-shell; SLF4J: No SLF4J providers were found.; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.; SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.; SLF4J: Ignoring binding found at [jar:file:/usr/lib/spark/jars/log4j-slf4j-impl-2.17.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; Exception in thread ""main"" java.lang.NoSuchMethodError: 'scala.reflect.internal.settings.MutableSettings scala.reflect.internal.settings.MutableSettings$.SettingsOps(scala.reflect.internal.settings.MutableSettings)'; at scala.tools.nsc.interpreter.ILoop.$anonfun$chooseReader$1(ILoop.scala:914); at scala.tools.nsc.interpreter.ILoop.mkReader$1(ILoop.scala:920); at scala.tools.nsc.interpreter.ILoop.$anonfun$chooseReader$4(ILoop.scala:926); at scala.tools.nsc.inte",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13837:1843,log,logger,1843,https://hail.is,https://github.com/hail-is/hail/issues/13837,1,['log'],['logger']
Testability,"y keyed by locus, and removed the MatrixKeyRowsBy in combine_gvcfs. To goal here is to avoid re-buidling an re-broadcasting the partitioner once for each gVCF. We'll need to re-key at the very end. I'm not so familiar with the end of the joint calling pipeline. @chrisvittal can you take care of that?. Second, I don't repartition in TableMultiWayZipJoin if the partitioners all match (which they should in in the joint calling pipeline). For that to work right, I need allowedOverlap == 0 (or to verify the partitions are in fact disjoint). Turns out allowedOverlap wasn't being propagated in various places. I fixed that. @patrick-schultz can you look at the RVDPartitioner changes? They just look like oversights to me, but maybe there was a reason why, for example, copy and coarsen wasn't preserving allowedOverlap?. Finally, now the joint calling pipeline/test_combiner_works segfaults, ugh:. ```; $ hail -m unittest test.hail.methods.test_impex.VCFTests.test_combiner_works; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x000000010e5fa090, pid=64905, tid=33795; #; # JRE version: Java(TM) SE Runtime Environment (8.0_45-b14) (build 1.8.0_45-b14); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.45-b02 mixed mode bsd-amd64 compressed oops); # Problematic frame:; # J 8877 C1 is.hail.expr.types.physical.PLocus$$anon$1.compare(Lis/hail/annotations/Region;JLis/hail/annotations/Region;J)I (117 bytes) @ 0x000000010e5fa090 [0x000000010e5f9de0+0x2b0]; #; ```. The rest of the tests pass (the other Python failures are cascaded failures from test_combiner_works, I double-checked in the hopes of finding an easier example to debug.) It is pretty clearly related to the no repartition optimization. If I disable it, test_combiner_works passes. I haven't tracked this down, but I do have one question @chrisvittal: who's responsible for freeing the inputs (that is, clearing the input regions) to multi-way zip join? I don't see where that happens.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5424:1587,test,tests,1587,https://hail.is,https://github.com/hail-is/hail/pull/5424,1,['test'],['tests']
Testability,"y require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.5a0</h2>; <h1>0.23.5 (UNRELEASED)</h1>; <ul>; <li>Declare compatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; <li>Fix typing errors with recent versions of mypy <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/769"">#769</a></li>; </ul>; <h2>Known issues</h2>; <p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706"">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.4</h2>; <h1>0.23.4 (2024-01-28)</h1>; <ul>; <li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729"">#729</a></li>; <li>Addresses further issues that caused an internal pytest error during test collection</li>; <li>Declares incompatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; </ul>; <h2>pytest-asyncio 0.23.4a2</h2>; <h1>0.23.4 (UNRELEASED)</h1>; <ul>; <li>pytest-asyncio no longer imports addition",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14507:4838,test,test,4838,https://hail.is,https://github.com/hail-is/hail/pull/14507,1,['test'],['test']
Testability,"y that uses more memory or (2) is newly lowering code that exposes a latent issue in memory management that uses too much (or leaks) memory.]. Reported by Ben Weisburd and Julia Goodrich. [Ben is] running the first step of readviz for gnomAD v4 and we are hitting a 137 error on a partition that includes a site that has 27374 alleles. His code is [here](https://github.com/broadinstitute/gnomad-readviz/blob/step1_optimizations/step1__select_samples.py). I was testing his code out on just that failing partition (just added mt = vds.variant_data._filter_partitions([41229])) and I was able to recreate the error using Hail 0.2.119 (this is what Ben was using when he hit the error on the full dataset). However, the first time I tried to recreate the error I was accidentally using a different version of Hail and it ran with no memory error. It seems that 0.2.117 runs without error, but 0.2.118 and 0.2.119 both hit the 137 error. I am currently rerunning these tests so I can get logs:. Test with Hail 0.2.118:. Cluster:; ```; hailctl dataproc start readviz-118 \; --requester-pays-allow-all \; --packages=""git+https://github.com/broadinstitute/gnomad_methods.git@main"",""git+https://github.com/broadinstitute/gnomad_qc.git@main"" \; --autoscaling-policy=max-20 \; --master-machine-type n1-highmem-16 \; --no-off-heap-memory \; --worker-machine-type n1-highmem-8 \; --max-idle 560m \; --labels gnomad_release=gnomad_v4,gnomad_v4_testing=readviz_test_118; ```; Command:; ```; hailctl dataproc submit readviz-118 /Users/jgoodric/PycharmProjects/gnomad-readviz/step1__select_samples.py --sample-metadata-tsv gs://gnomad-readviz/v4.0/gnomad.exomes.v4.0.metadata.tsv.gz --output-ht-path gs://gnomad-tmp/julia/readviz/gnomad.exomes.v4.0.readviz_crams.part_41229.hail_118.ht; Job Link: https://console.cloud.google.com/dataproc/jobs/4db24eb6f93b491f8f07babc25c0d9c9/monitoring?region=us-central1&project=broad-mpg-gnomad; ```; Test with Hail 0.2.117:. Cluster:; ```; hailctl dataproc start readviz-117 \;",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13248:1232,Test,Test,1232,https://hail.is,https://github.com/hail-is/hail/issues/13248,1,['Test'],['Test']
Testability,"y, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0Y2E5NmE2ZC02MjMxLTQ1YTctYmQyOS1kYTA0ZmZhNTliYzQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjRjYTk2YTZkLTYyMzEtNDVhNy1iZDI5LWRhMDRmZmE1OWJjNCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""4ca96a6d-6231-45a7-bd29-da04ffa59bc4"",""prPublicId"":""4ca96a6d-6231-45a7-bd29-da04ffa59bc4"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.7"",""to"":""42.0.2""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6210214""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[451],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [NULL Pointer Dereference](https://learn.snyk.io/lesson/null-dereference/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14238:2649,log,logic,2649,https://hail.is,https://github.com/hail-is/hail/pull/14238,1,['log'],['logic']
Testability,"y, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1MzAxOWZkZC04YjQwLTQ5NmUtYjRmYS0wMzA5MTAxOTBkZWMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjUzMDE5ZmRkLThiNDAtNDk2ZS1iNGZhLTAzMDkxMDE5MGRlYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""53019fdd-8b40-496e-b4fa-030910190dec"",""prPublicId"":""53019fdd-8b40-496e-b4fa-030910190dec"",""dependencies"":[{""name"":""cryptography"",""from"":""42.0.2"",""to"":""42.0.4""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6261585""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [NULL Pointer Dereference](https://learn.snyk.io/lesson/null-dereference/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14344:2655,log,logic,2655,https://hail.is,https://github.com/hail-is/hail/pull/14344,1,['log'],['logic']
Testability,"y:. [root@**\* bin]# ./hail -h; usage: hail [global options] <cmd1> [cmd1 args]; [<cmd2> [cmd2 args] ... <cmdN> [cmdN args]]. But ,When excuting “gradle check” and ""gradle coverage"", encounter ""100 tests completed, 3 failed :test FAILED"" ""Build FAILED"" , how to fix ? Thanks . [root@**\* hail]# gradle check; Using a seed of [1] for testing.; Build file '*****/hail/build.gradle': line 188; useAnt has been deprecated and is scheduled to be removed in Gradle 3.0. The Ant-Based Scala compiler is deprecated, please see https://docs.gradle.org/current/userguide/scala_plugin.html.; :compileJava UP-TO-DATE; :compileScala UP-TO-DATE; :processResources UP-TO-DATE; :classes UP-TO-DATE; :compileTestJava UP-TO-DATE; :compileTestScala UP-TO-DATE; :processTestResources UP-TO-DATE; :testClasses UP-TO-DATE; :test. ........... FAILED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportPlinkSuite.testBiallelic FAILED; java.io.FileNotFoundException at ExportPlinkSuite.scala:17; Running test: Test method test(org.broadinstitute.hail.methods.ExportSuite); ........... FAILED; Gradle suite > Gradle test > org.broadinstitute.hail.driver.GRMSuite.test FAILED; java.io.FileNotFoundException at GRMSuite.scala:20; Running test: Test method testGenotypeStream(org.broadinstitute.hail.variant.GenotypeStreamSuite); ........... FAILED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ImputeSexSuite.testImputeSexPlinkVersion FAILED; java.io.FileNotFoundException at ImputeSexSuite.scala:17; Running test: Test method test(org.broadinstitute.hail.variant.IntervalListSuite). ..........; 100 tests completed, 3 failed; :test FAILED. FAILURE: Build failed with an exception.; - What went wrong:; Execution failed for task ':test'.; ; > There were failing tests. See the report at: file:///****/hail/build/reports/tests/index.html; - Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. BUILD FAILED. Total time: 9 mins 25.533",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/457:1069,test,test,1069,https://hail.is,https://github.com/hail-is/hail/issues/457,3,"['Test', 'test']","['Test', 'test']"
Testability,"y_pass, fastcgi_pass, uwsgi_pass, scgi_pass, memcached_pass, or grpc_pass, then the special processing is performed. In response to a request with URI equal to this string, but without the trailing slash, a permanent redirect with the code 301 will be returned to the requested URI with the slash appended. The docs appear incomplete, though, because this is a `return` rule, but it gets the 301. Question two: does this redirect `hail.is/docs/foo` to `/docs/0.2/foo`. No, the docs redirect is an `=` or exact match so `hail.is/docs/foo` is a 404. Question three: does this redirect `/hail/overview.html` redirect to `docs/0.1/overview.html`. Yes, the regex for rules two matches `/hail`, `/hail/`, `/hail/overview.html`, etc. and redirects, replacing the hail with `docs/0.1`. One last note: I used 301 Permanent Redirect for the `/hail` since that's a dead url. I used 307 Temporary Redirect for `/docs` since that will change when versions change. Here's a test interaction. I interleaved my curl commands with the logs. ```; $ curl localhost/hail; 172.17.0.1 - - [07/Dec/2018:19:35:30 +0000] ""GET /hail HTTP/1.1"" 301 185 ""-"" ""curl/7.61.0""; 172.17.0.1 - - [07/Dec/2018:19:35:30 +0000] ""GET /docs/0.1 HTTP/1.1"" 301 185 ""-"" ""curl/7.61.0""; 172.17.0.1 - - [07/Dec/2018:19:35:30 +0000] ""GET /docs/0.1/ HTTP/1.1"" 200 11994 ""-"" ""curl/7.61.0""; $ curl localhost/hail/; 172.17.0.1 - - [07/Dec/2018:19:36:06 +0000] ""GET /hail/ HTTP/1.1"" 301 185 ""-"" ""curl/7.61.0""; 172.17.0.1 - - [07/Dec/2018:19:36:06 +0000] ""GET /docs/0.1/ HTTP/1.1"" 200 11994 ""-"" ""curl/7.61.0""; $ curl localhost/hail/overview.html; 172.17.0.1 - - [07/Dec/2018:19:36:27 +0000] ""GET /hail/overview.html HTTP/1.1"" 301 185 ""-"" ""curl/7.61.0""; 172.17.0.1 - - [07/Dec/2018:19:36:27 +0000] ""GET /docs/0.1/overview.html HTTP/1.1"" 200 37288 ""-"" ""curl/7.61.0""; $ curl localhost/docs; 172.17.0.1 - - [07/Dec/2018:19:36:37 +0000] ""GET /docs HTTP/1.1"" 301 185 ""-"" ""curl/7.61.0""; 172.17.0.1 - - [07/Dec/2018:19:36:37 +0000] ""GET /docs/ HTTP/1.1"" 307 187 """,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4929:2425,log,logs,2425,https://hail.is,https://github.com/hail-is/hail/pull/4929,1,['log'],['logs']
Testability,"ycares/commit/22a37d760349787704f8901c19e149915a7f1b26""><code>22a37d7</code></a> Update c-ares submodule to 1.18.1</li>; <li><a href=""https://github.com/saghul/pycares/commit/b5165834724340d27da642f554431514fd62ccb4""><code>b516583</code></a> Improve test compatibility with pytest</li>; <li><a href=""https://github.com/saghul/pycares/commit/356118f2985de1fdb09d2db8951f592fc6418fda""><code>356118f</code></a> Drop tox</li>; <li><a href=""https://github.com/saghul/pycares/commit/baad65cd4088f7a7108e3b2e3d5c1f4b97fc6a7e""><code>baad65c</code></a> Drop CPython 3.6</li>; <li><a href=""https://github.com/saghul/pycares/commit/24fea0ce9988c3985892104f55c4ad256e28a78f""><code>24fea0c</code></a> Run tests on Python 3.11</li>; <li><a href=""https://github.com/saghul/pycares/commit/0e970c4b27bcdc940d972eaf3c57a3c93e79be78""><code>0e970c4</code></a> Add Python 3.11 classifier to setup.py</li>; <li><a href=""https://github.com/saghul/pycares/commit/05c74ef9e4f302ba433368f3c5c714abcadec40c""><code>05c74ef</code></a> Fix some tests that depended on external sites</li>; <li><a href=""https://github.com/saghul/pycares/commit/06d1ecdd57d4da4ddbe751463c576dcaf0f3baf8""><code>06d1ecd</code></a> build: bump cibuildwheel to build for Python 3.11 + CI total time speedups</li>; <li>See full diff in <a href=""https://github.com/saghul/pycares/compare/pycares-4.2.2...pycares-4.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pycares&package-manager=pip&previous-version=4.2.2&new-version=4.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>D",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12559:3063,test,tests,3063,https://hail.is,https://github.com/hail-is/hail/pull/12559,1,['test'],['tests']
Testability,"ygosity-stdev 0.01 --standard-min-confidence-threshold-for-calling 10.0 --max-alternate-alleles 6 --max-genotype-count 1024 --sample-ploidy 2 --disable-tool-default-annotations false --only-output-calls-starting-in-intervals false --interval-set-rule UNION --interval-padding 0 --interval-exclusion-padding 0 --interval-merging-rule ALL --read-validation-stringency SILENT --seconds-between-progress-updates 10.0 --disable-sequence-dictionary-validation false --create-output-bam-index true --create-output-bam-md5 false --create-output-variant-md5 false --lenient false --add-output-sam-program-record true --add-output-vcf-command-line true --cloud-prefetch-buffer 40 --cloud-index-prefetch-buffer -1 --disable-bam-index-caching false --help false --version false --showHidden false --QUIET false --use-jdk-deflater false --use-jdk-inflater false --gcs-max-retries 20 --disable-tool-default-read-filters false"",Version=4.0.1.2,Date=""March 22, 2018 1:12:03 AM EDT"">; ##INFO=<ID=ClippingRankSum,Number=1,Type=Float,Description=""Z-score From Wilcoxon rank sum test of Alt vs. Ref number of hard clipped bases"">; ##INFO=<ID=DB,Number=0,Type=Flag,Description=""dbSNP Membership"">; ##INFO=<ID=END,Number=1,Type=Integer,Description=""Stop position of the interval"">; ##VEP=""v91"" time=""2018-03-22 04:15:25"" cache=""/media/SE5/.vep/homo_sapiens/91_GRCh38"" db=""homo_sapiens_core_91_38@ensembldb.ensembl.org"" ensembl-variation=91.c78d8b4 ensembl-funcgen=91.4681d69 ensembl-io=91.923d668 ensembl=91.18ee742 1000genomes=""phase3"" COSMIC=""82"" ClinVar=""201710"" ESP=""V2-SSA137"" HGMD-PUBLIC=""20172"" assembly=""GRCh38.p10"" dbSNP=""150"" gencode=""GENCODE 27"" genebuild=""2014-07"" gnomAD=""170228"" polyphen=""2.2.2"" regbuild=""16"" sift=""sift5.2.2""; ##INFO=<ID=CSQ,Number=.,Type=String,Description=""Consequence annotations from Ensembl VEP. Format: Allele|Consequence|IMPACT|SYMBOL|Gene|Feature_type|Feature|BIOTYPE|EXON|INTRON|HGVSc|HGVSp|cDNA_position|CDS_position|Protein_position|Amino_acids|Codons|Existing_variation|DISTANCE|",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8469:24465,test,test,24465,https://hail.is,https://github.com/hail-is/hail/issues/8469,1,['test'],['test']
Testability,"ync/commit/8af33182b5a0f8e2b6a5735cffff3b1f973e25d2""><code>8af3318</code></a> Block github from linkcheck</li>; <li><a href=""https://github.com/hynek/prometheus-async/commit/356ab35846a8a408b75c37697261238d3660382a""><code>356ab35</code></a> Remove stray whitespace</li>; <li><a href=""https://github.com/hynek/prometheus-async/commit/fc873f4b4351b6428375eb35e8dc1d471f4185a3""><code>fc873f4</code></a> Port changelog to Keep a Changelog</li>; <li><a href=""https://github.com/hynek/prometheus-async/commit/c021ce58432b27ac9035fc53c23273bff6ea4f70""><code>c021ce5</code></a> Port from rST to md/MyST (<a href=""https://github-redirect.dependabot.com/hynek/prometheus-async/issues/27"">#27</a>)</li>; <li><a href=""https://github.com/hynek/prometheus-async/commit/36bfe3f427c4206828d2d99f5aeefac2ec8d8226""><code>36bfe3f</code></a> count_exceptions only needs an Incrementer</li>; <li><a href=""https://github.com/hynek/prometheus-async/commit/82766062e8d64b56999d150dd2b4f60d4b6dd33d""><code>8276606</code></a> Expand regression test to signatures</li>; <li>Additional commits viewable in <a href=""https://github.com/hynek/prometheus-async/compare/19.2.0...22.1.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=prometheus-async&package-manager=pip&previous-version=19.2.0&new-version=22.1.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11536:3993,test,test,3993,https://hail.is,https://github.com/hail-is/hail/pull/11536,1,['test'],['test']
Testability,"ypecheck; return __orig_func__(*args_, **kwargs_); File ""/Users/konradk/Dropbox/src/python/hail/table.py"", line 1101, in show; print(self._show(n,width, truncate, types)); File ""/Users/konradk/Dropbox/src/python/hail/table.py"", line 1104, in _show; return self._jt.showString(n, joption(truncate), types, width); File ""/Users/konradk/programs/spark-2.2.0-bin-hadoop2.7/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; answer, self.gateway_client, self.target_id, self.name); File ""/Users/konradk/Dropbox/src/python/hail/utils/java.py"", line 196, in deco; 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; hail.utils.java.FatalError: AssertionError: assertion failed; Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 9.0 failed 1 times, most recent failure: Lost task 0.0 in stage 9.0 (TID 49, localhost, executor driver): java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$16$$anon$3.next(OrderedRVD.scala:926); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$16$$anon$3.next(OrderedRVD.scala:908); 	at scala.collection.Iterator$$anon$12.next(Iterator.scala:444); 	at is.hail.utils.package$.getIteratorSizeWithMaxN(package.scala:349); 	at is.hail.sparkextras.ContextRDD$$anonfun$12.apply(ContextRDD.scala:433); 	at is.hail.sparkextras.ContextRDD$$anonfun$12.apply(ContextRDD.scala:433); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1$$anonfun$apply$34.apply(ContextRDD.scala:458); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1$$anonfun$apply$34.apply(ContextRDD.scala:458); 	at is.hail.utils.package$.using(package.scala:577); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1.apply(ContextRDD.scala:458); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1.apply(ContextRDD.scala:458); 	at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2062); 	at org.apache.spark.SparkCont",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3516:1954,assert,assert,1954,https://hail.is,https://github.com/hail-is/hail/issues/3516,1,['assert'],['assert']
Testability,"ystem is one which operates on URLs instead of; paths. It uses the URL's protocol to determine which concrete file system to use. For example, a; router fs can `open` both `gs://danking/abc` and `s3a://danking/abc`. Each Hail Query Python Backend is associated with one file system class. This PR associates the; ServiceBackend with `RouterFS`, enabling `hl.current_backend().fs.open`, `hl.hadoop_open`, etc. to; read from S3, GCS, ABS, and the local file system. We should deprecate `hail.utils.hadoop_utils`; because it is not Hadoop-specific. We should instead advertise the class-based `hail.fs` or create a; new function-based interface (e.g. `hl.fs.open(...)`. # Test Clean-up. The Hail Query local and spark tests should now work in Azure. I moved all the `hail.fs` and; `hailtop.aiotools.fs` tests into two build.yaml steps: `test_hail_python_fs` and; `test_hail_scala_fs`. These tests are exhaustive: they test every file system: S3, ABS, and GCS. The only file system tests that remain in the Hail Query tests are the tests of; `hail.utils.hadoop_utils`. The hadoop tests are not exhaustive: they only test the *current* file; system. In Azure, they test ABS. In Google, they test GCS. I have not decided yet if we should enable the hail python tests in Azure. It seems mostly wasteful. # Local Cache. I added a local cache directory. It defaults to `$XDG_CONFIG_HOME/hail/cache` or; `~/.config/hail/cache` if `XDG_CONFIG_HOME` is not set. I store Python reference genome metadata; here. # Batch Attributes. The ServiceBackend `batch_attributes` attribute specifies the attributes for any batch created by; the ServiceBackend. I modified the tests so that the test function name is use the ""name"" of the; batch. When a Hail Query driver job executes `parallelizeAndComputeWithIndex`, it uses its name with; a unique suffix as the name of the batch of worker jobs. # Changes to Hail Scala. I think the only changes outside of `is.hail.backend.service` and `is.hail.services` are:. 1. More re",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11194:5909,test,tests,5909,https://hail.is,https://github.com/hail-is/hail/pull/11194,3,['test'],['tests']
Testability,"ython-logging/issues/444"">#444</a>) (<a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce"">97e32b6</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e1506fa9030776353878048ce562c53bf6ccf7bf"">e1506fa</a>)</li>; </ul>; <h3>Miscellaneous Chores</h3>; <ul>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e3cac888d40bf67af11e57b74615b0c3b8e8aa3e"">e3cac88</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>) (<a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544"">8a67b73</a>)</li>; </ul>; <h2>v2.7.0</h2>; <h3>Features</h3>; <ul>; <li>add context manager support in client (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/415"">#415</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/f5af16439807a0954ee78fa91cb69b9493b80176"">f5af164</a>)</li>; <li>added support for iam AuditData proto (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/396"">#396</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use structured logging on GCF with python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/434"">#434</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:4501,log,logging,4501,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,"ze check was missing (Adam Kaczmarek); Fixed: GITHUB-2709: Testnames not working together with suites in suite (Martin Aldrin); Fixed: GITHUB-2704: IHookable and IConfigurable callback discrepancy (Krishnan Mahadevan); Fixed: GITHUB-2637: Upgrade to JDK11 as the minimum JDK requirements (Krishnan Mahadevan); Fixed: GITHUB-2734: Keep the initial order of listeners (Andrei Solntsev); Fixed: GITHUB-2359: Testng <a href=""https://github.com/BeforeGroups""><code>@​BeforeGroups</code></a> is running in parallel with testcases in the group (Anton Velma); Fixed: Possible StringIndexOutOfBoundsException in XmlReporter (Anton Velma); Fixed: GITHUB-2754: <a href=""https://github.com/AfterGroups""><code>@​AfterGroups</code></a> is executed for each &quot;finished&quot; group when it has multiple groups defined (Anton Velma)</p>; <p>7.5; Fixed: GITHUB-2701: Bump gradle version to 7.3.3 to support java17 build (ZhangJian He); Fixed: GITHUB-2646: Streamline Logging Across TestNG (Krishnan Mahadevan); Fixed: GITHUB-2658: Inheritance + dependsOnMethods (Krishnan Mahadevan)</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/cbeust/testng/commit/b94395dea479308ea3fe825269730b960f44d805""><code>b94395d</code></a> Bump version to 7.7.1 for release</li>; <li><a href=""https://github.com/cbeust/testng/commit/89dc5845fcb46c26af187e50ea907a7382d06e72""><code>89dc584</code></a> Streamline overloaded assertion methods for Groovy</li>; <li><a href=""https://github.com/cbeust/testng/commit/5ac0021d14f7eb00804fe235aaefc5c2fbce57d1""><code>5ac0021</code></a> Adding release notes</li>; <li><a href=""https://github.com/cbeust/testng/commit/c0e1e772f1fc0ab2142f3a4114a2b8cfe60fa7e1""><code>c0e1e77</code></a> Adjust version reference in deprecation msgs.</li>; <li><a href=""https://github.com/cbeust/testng/commit/011527d9bf0f91a40539f5e5467cc106888810d9""><code>011527d</code></a> Bump version to 7.7.0 for r",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:14529,Log,Logging,14529,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,"['Log', 'Test']","['Logging', 'TestNG']"
Testability,zf libsimdpp-2.1.tar.gz; :compileScala UP-TO-DATE; :processResources UP-TO-DATE; :classes UP-TO-DATE; :compileTestJava UP-TO-DATE; :compileTestScala UP-TO-DATE; :processTestResources UP-TO-DATE; :testClasses UP-TO-DATE; :testCppCodegen; Running test: Test method testReadWrite(is.hail.annotations.AnnotationsSuite). Gradle suite > Gradle test > is.hail.annotations.AnnotationsSuite.testReadWrite FAILED; org.apache.spark.SparkException at AnnotationsSuite.scala:76; Caused by: java.lang.AssertionError; Running test: Test method testEmptyKeys(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testEmptyKeys FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test ,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:1315,test,test,1315,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['test']
Testability,"| `sphinx:` <br> `1.8.6 -> 3.3.0` <br> | No | Proof of Concept ; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-PYTHON-SPHINX-5812109](https://snyk.io/vuln/SNYK-PYTHON-SPHINX-5812109) | `sphinx:` <br> `1.8.6 -> 3.3.0` <br> | No | Proof of Concept ; ![low severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/l.png ""low severity"") | Open Redirect <br/>[SNYK-PYTHON-TORNADO-5537286](https://snyk.io/vuln/SNYK-PYTHON-TORNADO-5537286) | `tornado:` <br> `5.1.1 -> 6.3.3` <br> | No | No Known Exploit ; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | HTTP Request Smuggling <br/>[SNYK-PYTHON-TORNADO-5840803](https://snyk.io/vuln/SNYK-PYTHON-TORNADO-5840803) | `tornado:` <br> `5.1.1 -> 6.3.3` <br> | No | No Known Exploit . Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI4OGE5ZjRlMS0yNGNjLTQ5NDYtYWYwYy03OWJlZTNkNTg3YzUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6Ijg4YTlmNGUxLTI0Y2MtNDk0Ni1hZjBjLTc5YmVlM2Q1ODdjNSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13835:7352,test,tested,7352,https://hail.is,https://github.com/hail-is/hail/pull/13835,1,['test'],['tested']
Testability,"| `sphinx:` <br> `1.8.6 -> 3.3.0` <br> | No | Proof of Concept ; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-PYTHON-SPHINX-5812109](https://snyk.io/vuln/SNYK-PYTHON-SPHINX-5812109) | `sphinx:` <br> `1.8.6 -> 3.3.0` <br> | No | Proof of Concept ; ![low severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/l.png ""low severity"") | Open Redirect <br/>[SNYK-PYTHON-TORNADO-5537286](https://snyk.io/vuln/SNYK-PYTHON-TORNADO-5537286) | `tornado:` <br> `5.1.1 -> 6.3.3` <br> | No | No Known Exploit ; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | HTTP Request Smuggling <br/>[SNYK-PYTHON-TORNADO-5840803](https://snyk.io/vuln/SNYK-PYTHON-TORNADO-5840803) | `tornado:` <br> `5.1.1 -> 6.3.3` <br> | No | No Known Exploit . Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmY2JlODM3Mi04NzYwLTQyYjEtOGU0ZS1jZDZlNGZkNjNhYzYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImZjYmU4MzcyLTg3NjAtNDJiMS04ZTRlLWNkNmU0ZmQ2M2FjNiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13866:7378,test,tested,7378,https://hail.is,https://github.com/hail-is/hail/pull/13866,1,['test'],['tested']
Testability,"~So this PR is me trying to switch just `TableFilter` over to the correct region memory management model we've decided on.~. ~I used this `usingFreshContext` method to pass a new context to the producer that filter is consuming from so that filter can clear unused rows.~. This PR is where I'm cleaning up region management. So far, I've decided the following:. Addressed: ; - `TableFilter`; - `TableHead` (via `rvd.head`); - `TableTail` (via `rvd.tail`). No change needed: ; - `TableMapRows`; - `TableMapGlobals`; - `TableRange`; - `TableLiteral`. I also added a test using the new `hl.zeros` that's intended to catch memory leaks in filter by going through lots of large rows. For some reason, this test is failing on CI with OOM despite seeming to use constant memory on my local machine, I am still looking into why this is. Mostly, I'm wondering if this is consistent with what y'all imagined correct Region management would look like before I go through and do the rest of them. ; @cseed @tpoterba @catoverdrive @patrick-schultz",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8199:564,test,test,564,https://hail.is,https://github.com/hail-is/hail/pull/8199,2,['test'],['test']
Testability,"~Stacked on #10770~; ~Stacked on #10791~. This PR attempts to allow linear algebra codegen methods, like the LAPACK wrappers and the local whitening methods I'm working on, to defensively assert shape compatibility preconditions, without generating redundant runtime checks. (I always hate when we're pushed to avoid using code generation abstractions (in this case, just factoring code into smaller functions), because they generate worse code.). The method is pretty simple. SNDArray shapes are now arrays of `SizeValue`, which is a sum type with cases `SizeValueDyn(Value[Long])` and `SizeValueStatic(Long)`. I don't think static sizes occur very often, but it was a simple addition. `SizeValue`s can be compared statically with `==`, or at runtime with `ceq`: the former is true only if we can prove statically that the two sizes must be equal, while the latter emits code to check equality at runtime, using static knowledge to elide dynamic checks where possible. The way we encode static knowledge that two sizes are equal is by using the same local variable to store both. The primary interface to introduce that static knowledge (other than using the same set of sizes to construct multiple SNDArrays), is the method `coerceToShape(cb: CodeBuilder, newShape: Seq[SizeValue]): SNDArrayValue`, which emits code to dynamically assert that `this.shape` agrees with `newShape`, then returns `this` with shape replaced by `newShape`. Thus, `a.coerceToShape(cb, newShape).shape == newShape` will always be true, preserving the static knowledge about the shape of `a`. As a simple example, `gemm` verifies its inputs with (simplifying to the case with no transposes); ```; val Seq(m, n) = C.shapes; val k = A.shapes(1); A.assertHasShape(cb, FastIndexedSeq(m, k), errMsg); B.assertHasShape(cb, FastIndexedSeq(k, n), errMsg); ```; If we call this with; ```; val m, n, k = \\ compute expected dim sizes. \\ emit dynamic size checks once; val A_ = A.coerceToShape(cb, IndexedSeq(m, k)); val B_ = B.coerce",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10783:188,assert,assert,188,https://hail.is,https://github.com/hail-is/hail/pull/10783,1,['assert'],['assert']
Testability,"~Stacked on #10791~. A few high level changes got mixed up in this PR, since I couldn't predict where a thread would lead once I started pulling. If you would like, I can try to disentangle them. Here are the conceptual changes:; * add a CodeBuilder argument to `getEmitParam`, so that parameters which are pointers to region values can be loaded into `SValue`s with multiple locals; * make `EmitValue` a concrete class, consisting of an optional boolean value and an `SValue`; * add `valueTuple` to both `SValue` and `EmitValue`; * copy the `SCode` interface onto `SValue`, to make it easier to replace `SCode`s with `SValues` ; * add `loadToSValue` to `SingleCodeType`; * add `SStreamValue`. This loses the single use assertion, but that doesn't seem like it asserts much, since the stream producer can be freely accessed without memoizing the `SStreamCode`",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10797:720,assert,assertion,720,https://hail.is,https://github.com/hail-is/hail/pull/10797,2,['assert'],"['assertion', 'asserts']"
Testability,"~Stacked on #8917~. Adds `zipPartitions`, `extendKeyPreservesPartitioning`, `orderedJoin`, and `alignAndZipPartitions` methods to `TableStage`, trying to mirror the `RVD` implementation, especially concerning the partitioning logic. Adds lowering case for `TableJoin`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8921:226,log,logic,226,https://hail.is,https://github.com/hail-is/hail/pull/8921,1,['log'],['logic']
Testability,~~Need to get sccache working for building LLVM~~. Install llvm/mlir from apt.llvm.org. Need to get llvm-lit working for the tests.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12410:125,test,tests,125,https://hail.is,https://github.com/hail-is/hail/pull/12410,1,['test'],['tests']
Testability,"~~Stacked on #9106.~~. Adds an enumeration to control the allocation strategy in emitted code. There are currently three options, `Default`, `OneRegion`, and `ManyRegions`. `OneRegion` replicates the current behavior, and is the default for now. `ManyRegions` always allocates new regions when given the choice. This PR makes Java tests use the `ManyRegions` strategy to catch more lifetime errors. `Default` is somewhere in the middle, and will become the default. It will use one region (at least a constant number of regions) per row of a table. `Default` currently behaves the same as `ManyRegions`. Future work will implement the per-row behavior.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9220:331,test,tests,331,https://hail.is,https://github.com/hail-is/hail/pull/9220,1,['test'],['tests']
Testability,"~~Stacked on #9320~~. Use the framework introduced in #9320 to make the IR parser stack safe. This touches a lot of lines, but it is a completely mechanical refactoring. I did some preliminary benchmarking by timing the parse of the IR in `test_ld_prune`. (I chose that test fairly arbitrarily, and we can probably find better test cases, or generate synthetic large IRs.) Running a loop parsing the same IR repeatedly, with 10 burn-in rounds, and 60 timed rounds, I got the following results:; * On main; ```; quartiles = [4.55816, 5.209579, 5.647135]; avg = 5.332496950000001, std = 1.13761574944604; ```; * Using `StackSafe`, without the optimization in `repUntil`; ```; quantiles = [4.610798, 5.09793, 7.159075]; avg = 5.7519015000000016, std = 1.612397075594852; ```; * Using `StackSafe, with the optimization which reuses the `cont` closure, instead of allocating a new one for each token.; ```; quantiles = [4.466849, 4.826873, 5.719238]; avg = 5.2787357833333335, std = 1.272006325411254; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9332:193,benchmark,benchmarking,193,https://hail.is,https://github.com/hail-is/hail/pull/9332,3,"['benchmark', 'test']","['benchmarking', 'test']"
Testability,"~~~~~; File ""/usr/lib/python3.9/threading.py"", line 937, in _bootstrap; self._bootstrap_inner(); File ""/usr/lib/python3.9/threading.py"", line 980, in _bootstrap_inner; self.run(); File ""/usr/lib/python3.9/threading.py"", line 917, in run; self._target(*self._args, **self._kwargs); File ""/usr/lib/python3.9/concurrent/futures/thread.py"", line 81, in _worker; work_item = work_queue.get(block=True). ~~~~~~~~~~~~~~~~~~~~~ Stack of asyncio_0 (139802248206080) ~~~~~~~~~~~~~~~~~~~~~; File ""/usr/lib/python3.9/threading.py"", line 937, in _bootstrap; self._bootstrap_inner(); File ""/usr/lib/python3.9/threading.py"", line 980, in _bootstrap_inner; self.run(); File ""/usr/lib/python3.9/threading.py"", line 917, in run; self._target(*self._args, **self._kwargs); File ""/usr/lib/python3.9/concurrent/futures/thread.py"", line 81, in _worker; work_item = work_queue.get(block=True). +++++++++++++++++++++++++++++++++++ Timeout ++++++++++++++++++++++++++++++++++++. ------------------------------ live log teardown -------------------------------; INFO hailtop.utils:utils.py:450 discarding exception; Traceback (most recent call last):; File ""/usr/local/lib/python3.9/dist-packages/hailtop/aiotools/local_fs.py"", line 378, in rm_dir; await self.rmdir(path); File ""/usr/local/lib/python3.9/dist-packages/hailtop/aiotools/local_fs.py"", line 352, in rmdir; return await blocking_to_async(self._thread_pool, os.rmdir, path); File ""/usr/local/lib/python3.9/dist-packages/hailtop/utils/utils.py"", line 162, in blocking_to_async; return await asyncio.get_event_loop().run_in_executor(; File ""/usr/lib/python3.9/asyncio/futures.py"", line 284, in __await__; yield self # This tells Task to wait for completion.; File ""/usr/lib/python3.9/asyncio/tasks.py"", line 328, in __wakeup; future.result(); File ""/usr/lib/python3.9/asyncio/futures.py"", line 201, in result; raise self._exception; File ""/usr/lib/python3.9/concurrent/futures/thread.py"", line 58, in run; result = self.fn(*self.args, **self.kwargs); File ""/usr/local/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13361:2646,log,log,2646,https://hail.is,https://github.com/hail-is/hail/issues/13361,1,['log'],['log']
Testability,"~~~~~~~~ Stack of asyncio_0 (140387515627072) ~~~~~~~~~~~~~~~~~~~~~; File ""/usr/lib/python3.9/threading.py"", line 937, in _bootstrap; self._bootstrap_inner(); File ""/usr/lib/python3.9/threading.py"", line 980, in _bootstrap_inner; self.run(); File ""/usr/lib/python3.9/threading.py"", line 917, in run; self._target(*self._args, **self._kwargs); File ""/usr/lib/python3.9/concurrent/futures/thread.py"", line 81, in _worker; work_item = work_queue.get(block=True). +++++++++++++++++++++++++++++++++++ Timeout ++++++++++++++++++++++++++++++++++++; FAILED; _________________ test_always_run_job_private_instance_cancel __________________. client = <hailtop.batch_client.client.BatchClient object at 0x7fae899806a0>. def test_always_run_job_private_instance_cancel(client: BatchClient):; b = create_batch(client); resources = {'machine_type': smallest_machine_type()}; j = b.create_job(DOCKER_ROOT_IMAGE, ['true'], resources=resources, always_run=True); b.submit(); b.cancel(); > status = j.wait(). io/test/test_batch.py:1487: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; usr/local/lib/python3.9/dist-packages/hailtop/batch_client/client.py:84: in wait; return async_to_blocking(self._async_job.wait()); usr/local/lib/python3.9/dist-packages/hailtop/utils/utils.py:156: in async_to_blocking; return loop.run_until_complete(task); usr/lib/python3.9/asyncio/base_events.py:634: in run_until_complete; self.run_forever(); usr/lib/python3.9/asyncio/base_events.py:601: in run_forever; self._run_once(); usr/lib/python3.9/asyncio/base_events.py:1869: in _run_once; event_list = self._selector.select(timeout); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . self = <selectors.EpollSelector object at 0x7fae890f2d30>; timeout = 15.402000000000001. def select(self, timeout=None):; if timeout is None:; timeout = -1; elif timeout <= 0:; timeout = 0; else:; # epoll_wait() has a resolution of 1 millisecond, round away; # from zero to wait *at",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13582:2261,test,test,2261,https://hail.is,https://github.com/hail-is/hail/issues/13582,1,['test'],['test']
Testability,"​manics</code></a> | <a href=""https://github.com/search?q=repo%3Ajupyterlab%2Fjupyterlab_server+involves%3Awelcome+updated%3A2024-03-11..2024-04-08&amp;type=Issues""><code>@​welcome</code></a></p>; <!-- raw HTML omitted -->; <h2>2.25.4</h2>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab_server/compare/v2.25.3...15e796699f04e06db9ed23a689d454feae36ffbd"">Full Changelog</a>)</p>; <h3>Maintenance and upkeep improvements</h3>; <ul>; <li>Use updated releaser workflows <a href=""https://redirect.github.com/jupyterlab/jupyterlab_server/pull/442"">#442</a> (<a href=""https://github.com/blink1073""><code>@​blink1073</code></a>)</li>; <li>Use json5 typings <a href=""https://redirect.github.com/jupyterlab/jupyterlab_server/pull/441"">#441</a> (<a href=""https://github.com/blink1073""><code>@​blink1073</code></a>)</li>; <li>Enforce pytest 7 <a href=""https://redirect.github.com/jupyterlab/jupyterlab_server/pull/439"">#439</a> (<a href=""https://github.com/blink1073""><code>@​blink1073</code></a>)</li>; <li>Fix test util typings <a href=""https://redirect.github.com/jupyterlab/jupyterlab_server/pull/437"">#437</a> (<a href=""https://github.com/blink1073""><code>@​blink1073</code></a>)</li>; </ul>; <h3>Contributors to this release</h3>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab_server/graphs/contributors?from=2024-02-14&amp;to=2024-03-11&amp;type=c"">GitHub contributors page for this release</a>)</p>; <p><a href=""https://github.com/search?q=repo%3Ajupyterlab%2Fjupyterlab_server+involves%3Ablink1073+updated%3A2024-02-14..2024-03-11&amp;type=Issues""><code>@​blink1073</code></a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/jupyterlab/jupyterlab_server/commit/cca5a50acfedfb45a843acf733ddbb410634451e""><code>cca5a50</code></a> Publish 2.26.0</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab_server/commit/2cc9672e751943f5c51af9d4174f0b4d986e74a0""><code>2cc9672</code></a> Ignore pageconfig file if JSON is zero-leng",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14483:5929,test,test,5929,https://hail.is,https://github.com/hail-is/hail/pull/14483,1,['test'],['test']
Testability,… test,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10887:2,test,test,2,https://hail.is,https://github.com/hail-is/hail/pull/10887,1,['test'],['test']
Testability,"…IntInsnNode, and add assert on allocLocal. cc @danking, we found where the problem was.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2566:22,assert,assert,22,https://hail.is,https://github.com/hail-is/hail/pull/2566,1,['assert'],['assert']
Testability,"…a2c778969c1422ba. The tabix line iterator works by building a list of virtual offsets from; the index that correspond to a requested interval. We recently; discovered an issue that would lead to a runtime exception if the; following conditions held:. * An offset pair ended exactly on a block boundary.; * The block boundary was exactly the start of a line. In a blocked file with virtual offsets, there are two ways to point to; the start of every block, (previous block start offset, previous block size) or; (current block start offset, 0). Because of the way curOff was calculated in TabixLineIterator, this would; lead to a situation where curOff was the (previous block start offset, previous block size); value, causing the jump to next chunk comparision `!TbiOrd.less64(curOff, offsets(i)._2)`; to fail when it should succeed, causing an extra line to be read, which; then makes the assertion check in the next iteration. Here we revert the improvements made earlier in; 3302850eb9d93c30793dc231a2c778969c1422ba which is where this logic error; was introduced.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9298:892,assert,assertion,892,https://hail.is,https://github.com/hail-is/hail/pull/9298,2,"['assert', 'log']","['assertion', 'logic']"
Testability,…ate the benchmark,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10717:9,benchmark,benchmark,9,https://hail.is,https://github.com/hail-is/hail/pull/10717,1,['benchmark'],['benchmark']
Testability,🐎 💨 . I tested this pretty heavily during my scale testing.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6801:8,test,tested,8,https://hail.is,https://github.com/hail-is/hail/pull/6801,2,['test'],"['tested', 'testing']"
Usability," (i.e. proxy-side) TLS in a location block.; - `ssl-config.curlrc`: a curl configuration file.; A [PEM file](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail) is a; base64 encoding standard for certificates and keys. Our certificates are; standard TLS [X.509 certificates](https://en.wikipedia.org/wiki/X.509). Our; private keys are RSA 4096 keys. The configuration file lists every principal in the system and the ""ssl-mode"" of; the system. The ""ssl-mode"" is inspired by MySQL's ssl-mode's and is one of (in; order from most to least secure): VERIFY_CA, REQUIRED, DISABLED. |mode | incoming connections must use TLS | clients verify hostnames on server cert | servers only accept trusted clients |; |---|---|---|---|; |VERIFY_CA|yes|yes|yes|; |REQUIRED|yes|no|no|; |DISABLED|no|no|no|. `create_certs.py` converts this global configuration file into a secret for each; principal. For NGINX principals, we generate the nginx conf in; `create_certs.py`. Unfortunately, I have no simple way to change the ports and; `ssl` status on nginx servers. For DISABLED, we send empty configuration; files. For REQUIRED, we load server certs and client certs, but we do not verify; (proxied) servers. I load the client certificates anyway so that I can smoke; test them before I require servers verify them. For VERIFY_CA, we load server; certs, load client certs, verify clients, and verify (proxied) servers. For Hail principals, we only generate a json configuration; file containing the ssl mode and some named paths. The new `hailtop/ssl.py`; module defines the mapping from configuration to Python's; [`SSLContext`](https://docs.python.org/3.6/library/ssl.html#ssl.SSLContext). There is also one ""curl"" principal: the admin-pod. REQUIRED and DISABLED are; mostly the same because required passes the `insecure` flag. As curl is; client-only, there is no notion of ""incoming connection"". ---. FAQ. Does this recreate certs on each deploy?. Yes. How do services speak to each other while a deploy is happen",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8513:4420,simpl,simple,4420,https://hail.is,https://github.com/hail-is/hail/pull/8513,1,['simpl'],['simple']
Usability," -- ExtractIntervalFilters : 6.413ms, total 235.357ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- Simplify : 4.736ms, total 240.359ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ForwardLets : 38.152ms, total 278.793ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ForwardRelationalLets : 3.185ms, total 282.285ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- PruneDeadFields : 25.086ms, total 307.692ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- FoldConstants : 1.938ms, total 310.139ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ExtractIntervalFilters : 13.601ms, total 324.665ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- Simplify : 4.231ms, total 329.178ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ForwardLets : 27.172ms, total 356.625ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ForwardRelationalLets : 6.605ms, total 363.564ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- PruneDeadFields : 29.964ms, total 394.795ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize : 371.542ms, total 395.164ms(); 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- LowerMatrixToTable -- Verify : 3.975ms, total 407.299ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- LowerMatrixToTable -- LoweringTransformation : 77.664ms, total 485.244ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken f",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7476:2324,Simpl,Simplify,2324,https://hail.is,https://github.com/hail-is/hail/pull/7476,1,['Simpl'],['Simplify']
Usability," :pr:<code>2493</code></li>; <li>Parsing of some invalid header characters is more robust. :pr:<code>2494</code></li>; <li>When starting the development server, a warning not to use it in a; production deployment is always shown. :issue:<code>2480</code></li>; <li><code>LocalProxy.__wrapped__</code> is always set to the wrapped object when; the proxy is unbound, fixing an issue in doctest that would cause it; to fail. :issue:<code>2485</code></li>; <li>Address one <code>ResourceWarning</code> related to the socket used by; <code>run_simple</code>. :issue:<code>2421</code></li>; </ul>; <h2>Version 2.2.1</h2>; <p>Released 2022-07-27</p>; <ul>; <li>Fix router so that <code>/path/</code> will match a rule <code>/path</code> if strict; slashes mode is disabled for the rule. :issue:<code>2467</code></li>; <li>Fix router so that partial part matches are not allowed; i.e. <code>/2df</code> does not match <code>/&lt;int&gt;</code>. :pr:<code>2470</code></li>; <li>Fix router static part weighting, so that simpler routes are matched; before more complex ones. :issue:<code>2471</code></li>; <li>Restore <code>ValidationError</code> to be importable from; <code>werkzeug.routing</code>. :issue:<code>2465</code></li>; </ul>; <h2>Version 2.2.0</h2>; <p>Released 2022-07-23</p>; <ul>; <li>Deprecated <code>get_script_name</code>, <code>get_query_string</code>,; <code>peek_path_info</code>, <code>pop_path_info</code>, and; <code>extract_path_info</code>. :pr:<code>2461</code></li>; <li>Remove previously deprecated code. :pr:<code>2461</code></li>; <li>Add MarkupSafe as a dependency and use it to escape values when; rendering HTML. :issue:<code>2419</code></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/werkzeug/commit/15fcb87d36f4ed45b127692d2d739266b918503c""><code>15fcb87</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pallets/wer",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12119:3730,simpl,simpler,3730,https://hail.is,https://github.com/hail-is/hail/pull/12119,1,['simpl'],['simpler']
Usability," <pre><code>; Released on Dec 5, 2021; <p>This is the first non-alpha release of mistune v2.</p>; <p>Version 2.0.0rc1; </code></pre></p>; <p>Released on Feb 16, 2021</p>; <p>Version 2.0.0a6</p>; <pre><code>; &lt;/tr&gt;&lt;/table&gt; ; </code></pre>; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/lepture/mistune/commit/3f422f1e84edae0f39756c45be453ecde534b755""><code>3f422f1</code></a> Version bump 2.0.3</li>; <li><a href=""https://github.com/lepture/mistune/commit/a6d43215132fe4f3d93f8d7e90ba83b16a0838b2""><code>a6d4321</code></a> Fix asteris emphasis regex CVE-2022-34749</li>; <li><a href=""https://github.com/lepture/mistune/commit/5638e460459cb59ceb20e4ce4716c802d4d73c53""><code>5638e46</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/lepture/mistune/issues/307"">#307</a> from jieter/patch-1</li>; <li><a href=""https://github.com/lepture/mistune/commit/0eba47196a81453bafe1f2492748a87475063dff""><code>0eba471</code></a> Fix typo in guide.rst</li>; <li><a href=""https://github.com/lepture/mistune/commit/61e9337884e20f9f8fdc0b7788d319afdd259729""><code>61e9337</code></a> Fix table plugin</li>; <li><a href=""https://github.com/lepture/mistune/commit/76dec68c4514c2612ef9263b49c6ec7f4d77bd14""><code>76dec68</code></a> Add documentation for renderer heading when TOC enabled</li>; <li><a href=""https://github.com/lepture/mistune/commit/799cd118cc5e664b72e98410ce1b68645f1a38c0""><code>799cd11</code></a> Version bump 2.0.2</li>; <li><a href=""https://github.com/lepture/mistune/commit/babb0cfa57a983ead615286a2b7c8f6885c46721""><code>babb0cf</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/lepture/mistune/issues/295"">#295</a> from dairiki/bug.escape_url</li>; <li><a href=""https://github.com/lepture/mistune/commit/fc2cd53d7698e432ab5b250ffac53458263a49e2""><code>fc2cd53</code></a> Make mistune.util.escape_url less aggressive</li>; <li><a href=""https://gith",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12064:2689,guid,guide,2689,https://hail.is,https://github.com/hail-is/hail/pull/12064,1,['guid'],['guide']
Usability," Fix temporary directory hijacking or temporary directory information disclosure (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1621"">#1621</a>); 9fd0ecf21 Disable codecov until we can fix the uploader (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1622"">#1622</a>); 347c0ac57 Fix EdgeReadIterator (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1616"">#1616</a>); d15a5bacb Added ULTIMA and ELEMENT as valid value for RG-PL according to SAM spec. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1619"">#1619</a>)</p>; <h2>3.0.0</h2>; <p>Htsjdk 3.0.0: Revenge of the Simple Allele</p>; <p>This is the first htsjdk with a major version increase in a long time. We bumped it to indicate there are some breaking changes that will potentially require downstream code changes. Notably, <code>Allele</code> became an interface instead of a concrete class. <code>SimpleAllele</code> may be used as a replacement if you have classes which previously subclassed allele.</p>; <p>New Plugin Infrastructure:; 6a60de7c2 Move API marker annotations into new annotation package. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1558"">#1558</a>); 7ac95d5f7 Plugin framework and interfaces for versioned file format codecs (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1525"">#1525</a>); d40fe5412 Beta implementation of Bundles. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1546"">#1546</a>)</p>; <p>CRAM; 489c4192d Support CRAM reference regions. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1605"">#1605</a>); 22aec6782 Fix decoding of CRAM Scores read feature during normalization. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1592"">#1592</a>); 6507249a4 Make the CRAM MD5 failure message more user friendly. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1607"">#160",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12229:1489,Simpl,SimpleAllele,1489,https://hail.is,https://github.com/hail-is/hail/pull/12229,2,['Simpl'],['SimpleAllele']
Usability," For instance, `c`'s environment might add a new bindings (e.g. in the body of a `StreamMap`), or it might drop all bindings, isolating the child, so that it cannot refer to anything bound outside of `x` (e.g. all relational nodes). The binding structure is complicated by the separation of the environment into ""eval"", ""agg"", ""scan"", and ""relational"" scopes. The child `c`'s environment might add new bindings in any of these scopes, and it might modify the parent's environment in other ways, like replacing the ""eval"" scope with the ""agg"" scope. In `Binds.scala`, the encoding of this relationship between parent's and child's environments was split across many methods, separately encoding bindings added to each of the scopes, and a prior modification to the parent scope. This made it difficult to understand the binding behavior of any particular node. And for nodes with more complicated binding behavior, these separate encodings became confusingly entangled. In this PR, `Binds.scala` is rewritten so that the binding behavior of a node is specified in a single place. Instead of computing a list of new bindings, it simply takes the parent's environment and returns the child's. Some use cases do require knowing what new bindings are added by a node in a child's environment. To support this, I made the `BindingEnvironment` interface a trait, and added another implementor `SegregatedBindingEnv`, which wraps two separate `BindingEnvironment`s, and puts all new bindings into the second. This satisfies the invariant that for any function `f(GenericBindingEnv): GenericBindingEnv` which modifies an environment using only the `GenericBindingEnv` interface, and any `env: BindingEnv[T]`,; ```; f(env) == f(SegregatedBindingEnv(env)).unified; ```; i.e. the segregation doesn't have any effect, other than keeping track of which bindings are new. Now that all binding structure for a node is encoded in one place, a future change could move this encoding to live in the node class directly.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14404:1505,simpl,simply,1505,https://hail.is,https://github.com/hail-is/hail/pull/14404,1,['simpl'],['simply']
Usability," There [was a; PR](kubernetes/kubernetes#61231) to allow httpGet probes; to send the kubelet certificate, but it was closed because, apparently, the; [httpGet probes can be targeted at arbitrary IP; addresses](kubernetes/kubernetes#61231 (review)) (what; the hell?), ergo Confused Deputy. ### Future Work. - Require TLS 1.3 everywhere.; - Comply with Mozilla's ""Modern"" recommendations.; - [Incoming Trust](#incoming-trust).; - Refresh certificates after deploying new ones. ### Footnotes. [1] TLS: Transport Layer Security. Preceded by Secure Sockets Layer (SSL) which; is not obsolete and insecure. After SSL version 3, a new version of SSL was; proposed in RFC 2246. This new version was backwards-incompatible and was; thus given a new name: Transport Layer Security. In common discussion, SSL; and TLS are used interchangeable. Indeed, the python TLS library is called; `ssl`. [2] Forward secrecy is a property of an encryption system. Forward secrecy means; a message cannot be decrypted in the future by an adversary who learned one; of the private keys. For example, imagine you are sending sensitive messages; to another individual. If that individual is later coerced into revealing; their secret key, forward secrecy would prevent the coercer from reading; your messages. Forward secrecy is achieved by negotiating a shared private; key between the two parties that is only used for a ""session"" and then; discarded. If the session key is securely discarded and neither key can; recreate it without cooperation from the other key, then *one* leaked key is; insufficient to reveal the messages. ---. Things for you to verify:; - does every service load *its own unqiue* ssl-config secret?; - does every service use an SSL context for serving?; - does everyone who makes http requests to internal services use an SSL client; session?; - do all TLS-secured nginx instances include their http.conf in the `http`; section and the `proxy.conf` file in any proxying sections?; - Do the SSLContext's",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8561:12087,learn,learned,12087,https://hail.is,https://github.com/hail-is/hail/pull/8561,1,['learn'],['learned']
Usability," `advance()` turns the page, `isValid` asks if the page you are on is non-empty, and `value` gives you the value on the current page (which is an error if the page is empty). `StagingIterator` is a subtype of `FlipbookIterator` which adds a bit of state to each page, together with the methods `consume()` and `stage()`. The bit of state on each page tracks whether the value has been ""consumed"" yet. `consume()` can only be called on a valid page which has not yet been consumed, and marks it as consumed. Note that `consume()` does not actually turn the page, so that the value just consumed is kept alive for the consumer to use. `stage()` brings the iterator forward to the next state in which we are on an unconsumed page: if the current page has been consumed, it flips to the next page, but if the current page has not been consumed it does nothing. My goal with the `StagingIterator` interface was to find something simple—to make it easier to write iterator code that is easily understandable and obviously correct and bug-free—and which covers most of the low-level (and bug-prone) ""bookkeeping"" I could find in current iterator code. The `StagingIterator` interface is also needed to implement the Scala `Iterator` methods, and for that reason I made it so that every `FlipbookIterator` is really a `StagingIterator` with a restricted interface, so that `FlipbookIterator` is able to subtype (`BufferedIterator`, and therefore) `Iterator`. The tiny abstract class `StateMachine` can be thought of as a ""naked"" `FlipbookIterator`, with only the core interface methods and without any runtime checking. It is intended to be used only for defining a new `FlipbookIterator` or `StagingIterator`, through the factory methods on their respective companion objects which take a `StateMachine`. I implemented `fliterWhere`, `map`, and `flatMap` on `FlipbookIterator`, allowing the use of for–comprehensions, and on top of that I defined all the varieties of join. Some of the join methods take `Or",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3016:2556,simpl,simple,2556,https://hail.is,https://github.com/hail-is/hail/pull/3016,1,['simpl'],['simple']
Usability," a once-over @mkveerapen in particular, and @danking, @cseed, @tpoterba. Future work will provide a multi-column, easier to read version of About, and a linking section with a beautiful code-snippet-containing introduction to Hail (demonstrating file import). I leave these as future tasks, because enough changes are present in this PR. Summary of changes:; * Refined homepage styles, ensured navbar matches to pixel between docs and hail.is root (surprisingly difficult); * Improved mobile styles, especially mobile nav menu (much smoother animation, larger, easier to click on links); * Optimized icon sizes (50KB -> 3.3KB); * Removed all use of bootstrap on hail.is/*.html pages (bootstrap remains on docs, future pr).; * Removed index.md contents. The markdown format is pretty limited. To have a richly-marked up site with consistent styling, the syntax it provides is not enough. The solution is either to add html to index.md, or just write html in a the index.xslt file. I chose the latter, because it's simpler. Future reorganization should simplify this and docs further, though I think I still recommend NextJS and the build system that provides.; * Added threeR115.min.js. This is regrettably large, but doesn't impact page rendering performance in any meaningful way, because it is loaded after all html content (and is cached after the first visit). Future work can go to webgl directly, potentially. There is also ongoing work by the ThreeJS maintainers to allow tree-shaking and smaller builds.; * Added heavily modified fork of VantaJS. Because we are not using something like NextJS, there is no package manager to rely on, so I just checked the file in manually (I have this in a separate repo, we can use that if preferred). License is in line with a note about modifications. Vanta performs very, very poorly (order of 40% CPU usage, old/slow ways of observing whether animated element is in view, unnecessary object generation, etc), this does not, removes a bunch of totally u",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8634:1093,simpl,simpler,1093,https://hail.is,https://github.com/hail-is/hail/pull/8634,1,['simpl'],['simpler']
Usability," as shown here from Query Insights:; ![Screenshot 2024-04-11 at 10 31 17 AM](https://github.com/hail-is/hail/assets/24440116/d807b383-7825-4ff5-ad04-6869f0402dd0). 2. The thick edge on the instances scan indicates that the where condition for instances is not using an index. We can verify this by explaining the query against the DB:; ```; > kssh admin-pod; > mysql; mysql> use batch;; mysql> EXPLAIN SELECT attempts.*; -> FROM attempts; -> INNER JOIN jobs ON attempts.batch_id = jobs.batch_id AND attempts.job_id = jobs.job_id; -> LEFT JOIN instances ON attempts.instance_name = instances.name; -> WHERE attempts.start_time IS NOT NULL; -> AND attempts.end_time IS NULL; -> AND ((jobs.state != 'Running' AND jobs.state != 'Creating') OR jobs.attempt_id != attempts.attempt_id); -> AND instances.`state` = 'active'; -> ORDER BY attempts.start_time ASC; -> LIMIT 300\G;. *************************** 1. row ***************************; id: 1; select_type: SIMPLE; table: instances; partitions: NULL; type: ALL; possible_keys: PRIMARY; key: NULL; key_len: NULL; ref: NULL; rows: 1150201; filtered: 10.00; Extra: Using where; Using temporary; Using filesort; *************************** 2. row ***************************; id: 1; select_type: SIMPLE; table: attempts; partitions: NULL; type: ref; possible_keys: PRIMARY,attempts_instance_name; key: attempts_instance_name; key_len: 303; ref: batch.instances.name; rows: 91; filtered: 9.00; Extra: Using where; *************************** 3. row ***************************; id: 1; select_type: SIMPLE; table: jobs; partitions: NULL; type: eq_ref; possible_keys: PRIMARY,jobs_batch_id_state_always_run_cancelled,jobs_batch_id_state_always_run_inst_coll_cancelled,jobs_batch_id_update_id,jobs_batch_id_always_run_n_regions_regions_bits_rep_job_id,jobs_batch_id_ic_state_ar_n_regions_bits_rep_job_id,jobs_batch_id_job_group_id,jobs_batch_id_ic_state_ar_n_regions_bits_rep_job_group_id; key: PRIMARY; key_len: 12; ref: batch.attempts.batch_id,batch.attempts",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14460:1950,SIMPL,SIMPLE,1950,https://hail.is,https://github.com/hail-is/hail/issues/14460,1,['SIMPL'],['SIMPLE']
Usability," can't assign types to nodes like `Ref` during parsing, which means we can't ask for the type of any node during parsing, and by extension we can't ask for types of children in IR node constructors. Instead, all typechecking logic is moved to the `TypeCheck` pass. Some benefits of this change:; * The parser is simpler, as it doesn't have to maintain a typing environment.; * Binds.scala is now the single source of truth on the binding structure of the IR.; * Instead of typechecking being split in an ad-hoc way between IR constructors and the `TypeCheck` pass, all typechecking and type error reporting logic is in one place.; * The parser parses a context-free grammar, no more and no less. If the input is gramatically correct, the parser succeeds.; * We can round trip IR with type errors through the text representation. For instance, if we log an IR that fails TypeCheck, we can copy the IR from the log, parse it, then debug. This change was motivated by my work in progress to convert the parser to use the SSA grammar, which this should greatly simplify. I chose to make the type annotation pass after parsing mutate the IR in place (with the unfortunate exception of `Apply`, which can change into an `ApplyIR` or `ApplySpecial`. Do these really need to be separate nodes?). The type of a `Ref` node was already mutable to allow this sort of deferred annotation, and I've had to make a few other things mutable as well. Alternatively we could rebuild the entire IR to include type annotations, but I think the mutation is sufficiently well localized, and this is a common compiler pattern. This touches a lot of lines, but the high level changes are:; * Remove the `refMap` from the `IRParserEnvironment`, and remove all code that modifies the typing environment from the parser. Nodes like `Ref` that need a type from the environment get types set to `null`, to be filled in after parsing.; * Add `annotateTypes` pass to fill in type annotations from the environment. This is currently w",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13990:1568,simpl,simplify,1568,https://hail.is,https://github.com/hail-is/hail/pull/13990,1,['simpl'],['simplify']
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1ZDhmZDhmZC1mZGUxLTRiYmMtYWMzMi0xOTE1NmY0ZDFjZjIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjVkOGZkOGZkLWZkZTEtNGJiYy1hYzMyLTE5MTU2ZjRkMWNmMiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/7fad328c-8d01-4768-8813-73d6c644e2d4?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/7fad328c-8d01-4768-8813-73d6c644e2d4?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""5d8fd8fd-fde1-4bbc-ac32-19156f4d1cf2"",""prPublicId"":""5d8fd8fd-fde1-4bbc-ac32-19156f4d1cf2"",""dependencies"":[{""name"":""requests"",""from"":""2.28.2"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""7fad328c-8d01-4768-8813-73d6c644e2d4"",""projectUrl"":""https://app.snyk.io/org/danking/project/7fad328c-8d01-4768-8813-73d6c644e2d4?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[591],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13112:3132,Learn,Learn,3132,https://hail.is,https://github.com/hail-is/hail/pull/13112,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI2YzU3NmY1Yi1lNGM5LTQ4ZjctYmYxNy04YjEzOTIxODlmZDQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjZjNTc2ZjViLWU0YzktNDhmNy1iZjE3LThiMTM5MjE4OWZkNCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""6c576f5b-e4c9-48f7-bf17-8b1392189fd4"",""prPublicId"":""6c576f5b-e4c9-48f7-bf17-8b1392189fd4"",""dependencies"":[{""name"":""requests"",""from"":""2.28.2"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[591],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13097:3055,Learn,Learn,3055,https://hail.is,https://github.com/hail-is/hail/pull/13097,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3ZGVlZGFlMy1mZmE3LTQxYmUtOGY4MS1lNmYwZTA5YTczOTMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjdkZWVkYWUzLWZmYTctNDFiZS04ZjgxLWU2ZjBlMDlhNzM5MyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""7deedae3-ffa7-41be-8f81-e6f0e09a7393"",""prPublicId"":""7deedae3-ffa7-41be-8f81-e6f0e09a7393"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.16"",""to"":""1.26.17""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-5926907""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13770:3147,Learn,Learn,3147,https://hail.is,https://github.com/hail-is/hail/pull/13770,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIwMzdiOGRmZS1hZDA4LTRmZjUtYTFkOC1hNGM4Nzg2N2NkYjAiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjAzN2I4ZGZlLWFkMDgtNGZmNS1hMWQ4LWE0Yzg3ODY3Y2RiMCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""037b8dfe-ad08-4ff5-a1d8-a4c87867cdb0"",""prPublicId"":""037b8dfe-ad08-4ff5-a1d8-a4c87867cdb0"",""dependencies"":[{""name"":""requests"",""from"":""2.28.2"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[591],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13159:3147,Learn,Learn,3147,https://hail.is,https://github.com/hail-is/hail/pull/13159,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIyNWE2ZGYzMi1kYmEzLTQzOTctYmIyNC0zNjdlMzhmZWQ3ZmUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjI1YTZkZjMyLWRiYTMtNDM5Ny1iYjI0LTM2N2UzOGZlZDdmZSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""25a6df32-dba3-4397-bb24-367e38fed7fe"",""prPublicId"":""25a6df32-dba3-4397-bb24-367e38fed7fe"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.17"",""to"":""1.26.18""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-6002459""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[496],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13848:3147,Learn,Learn,3147,https://hail.is,https://github.com/hail-is/hail/pull/13848,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzM2VkMzM4Ny0zZTVmLTRkZDgtYjIxYy1iYzIyNzk4ODViZjMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjMzZWQzMzg3LTNlNWYtNGRkOC1iMjFjLWJjMjI3OTg4NWJmMyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""33ed3387-3e5f-4dd8-b21c-bc2279885bf3"",""prPublicId"":""33ed3387-3e5f-4dd8-b21c-bc2279885bf3"",""dependencies"":[{""name"":""requests"",""from"":""2.28.2"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""b72ce54d-5de3-48e5-a1d4-6f8967681a12"",""projectUrl"":""https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[591],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13107:3040,Learn,Learn,3040,https://hail.is,https://github.com/hail-is/hail/pull/13107,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzYWEwNDk2OC02NDIxLTRmODktYTBjYy03MjE4MzExNDNiZGQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjNhYTA0OTY4LTY0MjEtNGY4OS1hMGNjLTcyMTgzMTE0M2JkZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""3aa04968-6421-4f89-a0cc-721831143bdd"",""prPublicId"":""3aa04968-6421-4f89-a0cc-721831143bdd"",""dependencies"":[{""name"":""requests"",""from"":""2.28.2"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[591],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13100:3143,Learn,Learn,3143,https://hail.is,https://github.com/hail-is/hail/pull/13100,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiNzM2NzI0Yi1hY2RiLTRiOTUtYWQwMy1hYWI3MjkyZGNlYzQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImI3MzY3MjRiLWFjZGItNGI5NS1hZDAzLWFhYjcyOTJkY2VjNCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""b736724b-acdb-4b95-ad03-aab7292dcec4"",""prPublicId"":""b736724b-acdb-4b95-ad03-aab7292dcec4"",""dependencies"":[{""name"":""requests"",""from"":""2.28.2"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[591],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13116:3047,Learn,Learn,3047,https://hail.is,https://github.com/hail-is/hail/pull/13116,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlNDQxZTBmNS1jZDQ4LTQzZDUtYTdkMy1kMTM4YzQ2ZTc2NTgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImU0NDFlMGY1LWNkNDgtNDNkNS1hN2QzLWQxMzhjNDZlNzY1OCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""e441e0f5-cd48-43d5-a7d3-d138c46e7658"",""prPublicId"":""e441e0f5-cd48-43d5-a7d3-d138c46e7658"",""dependencies"":[{""name"":""requests"",""from"":""2.28.2"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[591],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13158:3139,Learn,Learn,3139,https://hail.is,https://github.com/hail-is/hail/pull/13158,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlZjQxMWYxOC1hM2JiLTQ1YzgtODFjOS1hNmNhNjI4MWI1ZjMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImVmNDExZjE4LWEzYmItNDVjOC04MWM5LWE2Y2E2MjgxYjVmMyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""ef411f18-a3bb-45c8-81c9-a6ca6281b5f3"",""prPublicId"":""ef411f18-a3bb-45c8-81c9-a6ca6281b5f3"",""dependencies"":[{""name"":""requests"",""from"":""2.28.2"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[591],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13108:3130,Learn,Learn,3130,https://hail.is,https://github.com/hail-is/hail/pull/13108,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," emit three kinds of output to a byte array buffer:; - byte - simply add a byte to the result, first padding an incomplete byte if necessary; - bit - add a bit to the result, possibly leaving an incomplete byte. We must know statically how many bits are used in the byte.; - pad - add `0`s to pad the last incomplete byte. This is safe (prefix-free) because the number of used bits is a (statically known) constant. We use this to ensure the number of used bits is known statically.; 	; Types:; - missingness; - treat as a type constructor `optional<T>`, i.e. base types don't encode missingness. Emits a single bit in the encoding. Can invert this bit to control whether missing values come first or last in the ordering. If missing, nothing is emitted after.; - sort-order; - treat reversing the default ordering as a type constructor `reverse<T>`; - simply inverts the encoding bitwise; - primitive types; - same as in datafusion, encoding has same size as original type; - signed integers - flip the sign bit; - floating point numbers - if sign bit is set, invert all bits, otherwise only flip the sign bit; - arrays; - before each element and after last element, emit continuation bit (0 if no more elements); - pad before each element. This prevents a variable number of missing bits packing into a byte; - strings and byte-arrays; - simply use null-terminated strings (being careful to do this in a unicode-safe way); - structs; - simply concatenate element encodings. safe because codes are prefix-free; - key structs; - support variable length ""interval endpoints""; - e.g. for a key type `struct<t1, t2>`, the interval `[{a}, {a, b})` contains all keys with first field `a` and second field less than `b`. We break it into two ""interval endpoints"", `({a}, -1)` and `({a, b}, -1)`, which consist of a struct value which is a prefix of the key struct type, and a ""sign"". In this case, both endpoints ""lean left"".; - needed for working with partitioners at runtime; - like an array with fixed bu",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14396:1631,simpl,simply,1631,https://hail.is,https://github.com/hail-is/hail/issues/14396,1,['simpl'],['simply']
Usability," highlighting (we just needed to import pygments.css).; - Search works again.; - There are now only two root HTML templates: `site/templates/base.html` and; `web_common/web_common/templates/layout.html`. I cannot unify these further; because our services and our main websites actually differ significantly.; - The search/nav bar is now present in the HTML, no JS nonsense to; asynchronously load it into place after HTML rendering.; - Site now has a `make watch` which watches for changes and automatically; re-renders the HTML.; - Site now has a few make rules that facilitate experimenting with how the docs; are displayed within the context of the current development version of site's; CSS & HTML.; - XSLT is now only used by the C++ tests. Smaller things:. - Removed bootstrap dependencies. Did we ever actually use these?; - Removed ""clipboard.js"" dependency. Also not clear from where this came.; - Removed use of the `subtitle` tag, which isn't actually an HTML tag?. Future work:. - Simplify our CSS. It's not possible to logically reason about our CSS. And it; interacts in bad ways with the latent RTD themes. I want a unified Hail visual; theme.; - Clean up the search-related JavaScript in nav-bottom.html and; search.html. These both seem too complicated to just make search work. ---. The thrust of this PR is to restructure Hail's website and documentation to; entirely rely on Jinja2 templates. Previously, we used a mix of Jinja2, XSLT,; and in-browser JavaScript DOM manipulation to piece together a web page. Now, all of Hail's non-service website derives from; `site/templates/base.html`. It is a Jinja2 template with four blocks: title,; meta_description, head, and content. It ensures that:; - Hail's CSS is loaded,; - the Hail icon is set,; - the fonts are loaded,; - the source code highlighter is loaded (prism.js, only used outside the docs); - the nav bar is present and configured.; The nav bar is somewhat complicated. There are two pieces. `nav-top.html`; contains the",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9597:1044,Simpl,Simplify,1044,https://hail.is,https://github.com/hail-is/hail/pull/9597,1,['Simpl'],['Simplify']
Usability," href=""https://github.com/search?q=repo%3Ajupyterlab%2Fjupyterlab+involves%3Awelcome+updated%3A2024-01-19..2024-01-30&amp;type=Issues""><code>@​welcome</code></a></p>; <h2>v4.0.11</h2>; <h2>4.0.11</h2>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab/compare/v4.0.10...0708330843fd087134a239d2ad6005b1d543e246"">Full Changelog</a>)</p>; <h3>Security fixes</h3>; <ul>; <li>Potential authentication and CSRF tokens leak in JupyterLab (<a href=""https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-44cc-43rp-5947"">GHSA-44cc-43rp-5947</a>)</li>; <li>SXSS in Markdown Preview (<a href=""https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-4m77-cmpx-vjc4"">GHSA-4m77-cmpx-vjc4</a>)</li>; </ul>; <h3>Bugs fixed</h3>; <ul>; <li>Fixes focus indicator on input checkbox for Firefox <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15612"">#15612</a> (<a href=""https://github.com/alden-ilao""><code>@​alden-ilao</code></a>)</li>; </ul>; <h3>Documentation improvements</h3>; <ul>; <li>Fix link to yarn docs in extension migration guide <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15640"">#15640</a> (<a href=""https://github.com/krassowski""><code>@​krassowski</code></a>)</li>; </ul>; <h3>Contributors to this release</h3>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab/graphs/contributors?from=2023-12-29&amp;to=2024-01-19&amp;type=c"">GitHub contributors page for this release</a>)</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/jupyterlab/jupyterlab/blob/@jupyterlab/lsp@4.0.12/CHANGELOG.md"">jupyterlab's changelog</a>.</em></p>; <blockquote>; <h2>4.0.12</h2>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab/compare/v4.0.11...69079ec413cbe6d173f0a667c15802b76423ece5"">Full Changelog</a>)</p>; <h3>Bugs fixed</h3>; <ul>; <li>Fix jupyterlab downgrade issue on extension installation <a href=""https://redirect.git",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14218:5261,guid,guide,5261,https://hail.is,https://github.com/hail-is/hail/pull/14218,1,['guid'],['guide']
Usability," is the culmination of <code>6</code> months of hard work. It contains; many new features, numerous bug-fixes, improved test coverage and better; documentation. There have been a number of deprecations and API changes; in this release, which are documented below. All users are encouraged to; upgrade to this release, as there are a large number of bug-fixes and; optimizations. Before upgrading, we recommend that users check that; their own code does not use deprecated SciPy functionality (to do so,; run your code with <code>python -Wd</code> and check for <code>DeprecationWarning</code> s).; Our development attention will now shift to bug-fix releases on the; 1.8.x branch, and on adding new features on the master branch.</p>; <p>This release requires Python <code>3.8+</code> and <code>NumPy 1.17.3</code> or greater.</p>; <p>For running on PyPy, PyPy3 <code>6.0+</code> is required.</p>; <h1>Highlights of this release</h1>; <ul>; <li>A sparse array API has been added for early testing and feedback; this; work is ongoing, and users should expect minor API refinements over; the next few releases.</li>; <li>The sparse SVD library PROPACK is now vendored with SciPy, and an interface; is exposed via <code>scipy.sparse.svds</code> with <code>solver='PROPACK'</code>. It is currently; default-off due to potential issues on Windows that we aim to; resolve in the next release, but can be optionally enabled at runtime for; friendly testing with an environment variable setting of <code>USE_PROPACK=1</code>.</li>; <li>A new <code>scipy.stats.sampling</code> submodule that leverages the <code>UNU.RAN</code> C; library to sample from arbitrary univariate non-uniform continuous and; discrete distributions</li>; <li>All namespaces that were private but happened to miss underscores in; their names have been deprecated.</li>; </ul>; <h1>New features</h1>; <h1><code>scipy.fft</code> improvements</h1>; <p>Added an <code>orthogonalize=None</code> parameter to the real transforms in <code>sc",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11538:1324,feedback,feedback,1324,https://hail.is,https://github.com/hail-is/hail/pull/11538,1,['feedback'],['feedback']
Usability," listing a folder containing around 50k files took 1h15. This new code takes ~16 seconds which is about how long it takes `gcloud storage ls`. There are two improvements:. 1. Use `bounded_gather2`. The use of a semaphore in `bounded_gather2`, which is missing from `bounded_gather`, allows it to be used recursively. In particular, suppose we had a semaphore of; 50. The outer `bounded_gather2` might need 20 slots to run its 20 paths in parallel. That leaves 30 slots of parallelism left over for its children. By passing the semaphore down, we let our children optimistically use some of that excess parallelism. 2. If we happen to have the `StatResult` for a particular object, we should never again look it up. In particular, getting the `StatResult` for every file in a directory can be done in O(1) requests. Getting the `StatResult` for each of those files individually (using their full paths) is necessarily O(N). If there was at least one glob and also there are no `suffix_components`, then we can use the `StatResult`s that we learned when checking the glog pattern. The latter point is perhaps a bit more clear with examples:. 1. `gs://foo/bar/baz`. Since there are no globs, we can make exactly one API request to list `gs://foo/bar/baz`. 2. `gs://foo/b*r/baz`. In this case, we must make one API request to list `gs://foo/`. This gives us a list of paths under that prefix. We check each path for conformance to the glob pattern `gs://foo/b*r`. For any path that matches, we must then list `<the matching path>/baz` which may itself be a directory containing files. Overall we make O(1) API requests to do the glob and then O(K) API requests to get the final `StatResult`s, where K is the number of paths matching the glob pattern. 3. `gs://foo/bar/b*z`. In this case, we must make one API request to list `gs://foo/bar/`. In `main`, we then throw away the `StatResult`s we got from that API request! Now we have to make O(K) requests to recover those `StatResult`s for all K paths tha",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13253:1059,learn,learned,1059,https://hail.is,https://github.com/hail-is/hail/pull/13253,1,['learn'],['learned']
Usability," more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiN2QwMTZlZS0zODA0LTQwMjItOWE0Yi01MzExNjZhNjBjMWQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImI3ZDAxNmVlLTM4MDQtNDAyMi05YTRiLTUzMTE2NmE2MGMxZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""b7d016ee-3804-4022-9a4b-531166a60c1d"",""prPublicId"":""b7d016ee-3804-4022-9a4b-531166a60c1d"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.3"",""to"":""41.0.4""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-5914629""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[611],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13698:3153,Learn,Learn,3153,https://hail.is,https://github.com/hail-is/hail/pull/13698,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability," pervasive (but minor) improvements to Hail's I/O infrastructure. We should start with the egregious examples. Consider `AzureStorageFS.createNoCompression`'s [`OutputStream`](https://github.com/hail-is/hail/blob/main/hail/src/main/scala/is/hail/io/fs/AzureStorageFS.scala#L332-L342):; ```scala; val os: PositionedOutputStream = new FSPositionedOutputStream(4 * 1024 * 1024) {; private[this] val client: BlockBlobClient = blockBlobClient; private[this] val blobOutputStream = client.getBlobOutputStream(true). override def flush(): Unit = {; bb.flip(). if (bb.limit() > 0) {; blobOutputStream.write(bb.array(), 0, bb.limit()); }. bb.clear(); }; // ...; }; ```. Notice how we already have a `ByteBuffer` but we convert it to an array and send that to the OutputStream. Instead, we could just use the [`ByteChannel` methods of `BlockBlobClient`](https://learn.microsoft.com/en-us/java/api/com.azure.storage.blob.specialized.blockblobclient?view=azure-java-stable#com-azure-storage-blob-specialized-blockblobclient-openseekablebytechannelwrite(com-azure-storage-blob-options-blockblobseekablebytechannelwriteoptions)). The [read case also supports a channel](https://learn.microsoft.com/en-us/java/api/com.azure.storage.blob.specialized.blobclientbase?view=azure-java-stable#com-azure-storage-blob-specialized-blobclientbase-openseekablebytechannelread(com-azure-storage-blob-options-blobseekablebytechannelreadoptions-com-azure-core-util-context)). The next, more complicated problem, is the InputBuffer and OutputBuffer interfaces. These assume their sources/sinks are `java.io.InputStream` and `java.io.OutputStream`. Moreover, they too rely on and expose `Array[Byte]` interfaces (e.g. `readBytesArray` and the implementation of `StreamInputBuffer.readBytes`). Let's start with InputBuffer and the decoders and use decoding of VDS variant matrix tables as our benchmark. ```python3; import hail as hl; hl.init(master='local[1]'); vds = hl.vds.read_vds(...); vds.variant_data._force_count_rows(); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13840:1347,learn,learn,1347,https://hail.is,https://github.com/hail-is/hail/issues/13840,1,['learn'],['learn']
Usability," provide a multi-column, easier to read version of About, and a linking section with a beautiful code-snippet-containing introduction to Hail (demonstrating file import). I leave these as future tasks, because enough changes are present in this PR. Summary of changes:; * Refined homepage styles, ensured navbar matches to pixel between docs and hail.is root (surprisingly difficult); * Improved mobile styles, especially mobile nav menu (much smoother animation, larger, easier to click on links); * Optimized icon sizes (50KB -> 3.3KB); * Removed all use of bootstrap on hail.is/*.html pages (bootstrap remains on docs, future pr).; * Removed index.md contents. The markdown format is pretty limited. To have a richly-marked up site with consistent styling, the syntax it provides is not enough. The solution is either to add html to index.md, or just write html in a the index.xslt file. I chose the latter, because it's simpler. Future reorganization should simplify this and docs further, though I think I still recommend NextJS and the build system that provides.; * Added threeR115.min.js. This is regrettably large, but doesn't impact page rendering performance in any meaningful way, because it is loaded after all html content (and is cached after the first visit). Future work can go to webgl directly, potentially. There is also ongoing work by the ThreeJS maintainers to allow tree-shaking and smaller builds.; * Added heavily modified fork of VantaJS. Because we are not using something like NextJS, there is no package manager to rely on, so I just checked the file in manually (I have this in a separate repo, we can use that if preferred). License is in line with a note about modifications. Vanta performs very, very poorly (order of 40% CPU usage, old/slow ways of observing whether animated element is in view, unnecessary object generation, etc), this does not, removes a bunch of totally unnecessary OO abstractions, and provides some additional effects (hover highlighting of ve",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8634:1131,simpl,simplify,1131,https://hail.is,https://github.com/hail-is/hail/pull/8634,1,['simpl'],['simplify']
Usability," python; >>> from hail import *; >>> hc = HailContext(); hc.reaUsing Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel).; d9""/projecRunning on Apache Spark version 2.0.2; SparkUI available at http://10.10.99.215:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version devel-6ee2919; WARNING: This is an unstable development build.; >>> hc.read(""/users/dking/projects/hail-data/profile225.vds""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""<decorator-gen-606>"", line 2, in read; File ""/Users/dking/projects/hail/python/hail/java.py"", line 121, in handle_py4j; 'Error summary: %s' % (deepest, full, Env.hc().version, deepest)); hail.java.FatalError: MappingException: Did not find value which can be converted into java.lang.String. Java stack trace:; org.json4s.package$MappingException: No usable value for sample_schema; Did not find value which can be converted into java.lang.String; 	at org.json4s.reflect.package$.fail(package.scala:96); 	at org.json4s.Extraction$ClassInstanceBuilder.org$json4s$Extraction$ClassInstanceBuilder$$buildCtorArg(Extraction.scala:462); 	at org.json4s.Extraction$ClassInstanceBuilder$$anonfun$14.apply(Extraction.scala:482); 	at org.json4s.Extraction$ClassInstanceBuilder$$anonfun$14.apply(Extraction.scala:482); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59); 	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at org.json4s.Extraction$ClassInstanceBuilder.org$json4s$Extraction$ClassInstanceBuilder$$instantia",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2159:1392,usab,usable,1392,https://hail.is,https://github.com/hail-is/hail/issues/2159,1,['usab'],['usable']
Usability, scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:19); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonf,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:10804,Simpl,Simplify,10804,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability," the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI5NmE4NGVhMS1hYzgxLTQxYmEtOGYzNC02MGU1ZTdhYzNjZTMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6Ijk2YTg0ZWExLWFjODEtNDFiYS04ZjM0LTYwZTVlN2FjM2NlMyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""96a84ea1-ac81-41ba-8f34-60e5e7ac3ce3"",""prPublicId"":""96a84ea1-ac81-41ba-8f34-60e5e7ac3ce3"",""dependencies"":[{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-SETUPTOOLS-3180412""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[509],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lessons/redos/javascript/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12896:3304,Learn,Learn,3304,https://hail.is,https://github.com/hail-is/hail/pull/12896,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability," the values are stored in the array and the names are stored in a separate dictionary mapping names to their indices; 2. a `dict<str, T>`, the name-value pairs are stored as dictionary key-value pairs; 3. a `struct{name1: T, name2: T, ... nameN: T}`, the name-value pairs are stored as field name, field string pairs. The third option is the most space efficient: the type stores the field names and there is no bookkeeping overhead per-set-of-named-values. The first two options repeat the field names for each occurrence (in particular, consider a Table field or MatrixTable entry-indexed field). The first two options needlessly encode the length (which is statically known). The third option is the most access-time-efficient: the offset of any named-value is known at hail compile time. The first two options require a logarithmic search of hail's dictionary tree representation. The third option is more user-friendly for accessing: `x.name`. The first is the least user-friendly: `x[indices[""name""]]`. The first and third options are the most cache-friendly for homogenous operations. The first uses `ArrayExpression.map`, so code size is `O(CODE)`. The third option's code size is `O(CODE * #VALUES)` because structs have no `map`-like primitive. The third option is also not user-friendly for homogenous operations (the user must repeat the code for each name-value pair). The third is the most self-documenting option. The number of fields and their names are visible in `ds.describe()`. The first is the next best because the dictionary is likely a global field that can be viewed with `x.indices.show()`. ---. ## Phase 1; Implement a new virtual type `tstaticdict<T, name1, name2, ..., nameN>` who's physical type is `PStruct` with N fields. These changes span Scala and Python. Implement `map` and `__getitem__` on `StaticDictExpression`s. `map` is implemented by code duplication. ## Phase 2; Implement a new physical type that implements homogenous operations without code duplication.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6881:1405,user-friendly,user-friendly,1405,https://hail.is,https://github.com/hail-is/hail/issues/6881,1,['user-friendly'],['user-friendly']
Usability," to (specified by a #id after the url) was hidden by the navbar. ### Background; Browsers interpret a hash after a url as being an element selector (id) to move the top of the page to. The browser will set the top of the browser to the top of the element, which is determined by its height, padding, and box-sizing rule (which determines whether padding and borders are taken into account when calculating the element's height and width). *The margin on the element is not taken into account*. This is incompatible with fixed navbars, because now the the top of the element should also take into account the height of the nabber. ### Solution; 2 solutions, one for the case where the element has a transparent background, and one for the case that it doesn't. In the transparent case (`.section`), we add padding to the element that is larger than the default by the height of the navbar, and a negative margin that is the negative height of the navbar. For `.section`, which doesn't have any padding, we simply use the height of the navbar. In the colored-background case (`dt`, the function blocks, which have 6px of padding, a blue background, and darker blue top-border) we need to use a different solution, because that padding will be the color of the background, making the element appear much taller than expected. The solution is to use a tall transparent border instead, along with the setting `background-clip: padding-box`. To handle the border we use a pseudo element that is absolutely positioned.; - background-clip is widely supported: https://caniuse.com/#search=background-clip. ### Before; <img width=""697"" alt=""Screenshot 2019-10-12 14 34 42"" src=""https://user-images.githubusercontent.com/5543229/66706171-960fa700-ecfd-11e9-9fa0-17a05da486a2.png"">. <img width=""701"" alt=""Screenshot 2019-10-12 14 34 53"" src=""https://user-images.githubusercontent.com/5543229/66706173-9740d400-ecfd-11e9-9fa5-5fd4bb23fc54.png"">. ### After. <img width=""700"" alt=""Screenshot 2019-10-12 14 35 03"" src",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7288:1099,simpl,simply,1099,https://hail.is,https://github.com/hail-is/hail/pull/7288,1,['simpl'],['simply']
Usability," to establish the interface and behavior. I expect several follow-on PRs:. - Revise the original copy interface proposal and add to dev-docs.; - ~~Parallelizes the transfers concurrently with async and across multiple threads.~~; - ~~After parallizing, copy will involve a lot of paralellism. Throwing an exception on the first error will be very non-deterministic. Instead, copy will return a report that collects all the errors that were encountered in the course of copying, and summarizes how many files/bytes were copied.~~; - Use multi-process parallelism; - Avoid overwriting the destination if it exists and has a matching checksum (or size).; - ~~Introduce multi-part transfers~~; - add a post-pass for Google Storage to detect file-and-directory errors.; - Adds support for S3.; - Add `hailctl cp ...` (PR); - Use copy in Batch. After this goes in, these can mostly be developed in parallel. A few principles guided the implementation of copy: perform the minimal number of system calls or API requests per copy, and only do error checking when it doesn't involve additional FS operations. For example, it is too expensive to exhaustively check if we're creating a path that is a file and a directory in Google Storage. I considered doing additional and exhaustive checking for the actual copy arguments. For example, currently, `cp -T /path/to/file /path/to/dir` will not generate an error on Google Storage. In the end, I decided to go with the current behavior and I will add an option to do a postpass to check for file-and-dir paths. To achieve this, for each transfer, I simultaneously stat the destination (if needd) to determine if it is a file, directory or doesn't exist. For each source, I simultaneously try to copy it as a file and a directory. When copying each source, we don't need to know the type of the destination until after we've stat'ed the source, so stat'ing the sources and destinations are all overlapping. This avoids dependencies where I have to e.g. stat the i",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9822:1042,guid,guided,1042,https://hail.is,https://github.com/hail-is/hail/pull/9822,1,['guid'],['guided']
Usability," when the target object is annotated by; unhashable object</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10205"">#10205</a>: extlinks: Failed to compile regexp on checking hardcoded links</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10277"">#10277</a>: html search: Could not search short words (ex. &quot;use&quot;)</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9529"">#9529</a>: LaTeX: named auto numbered footnote (ex. <code>[#named]</code>) that is referred; multiple times was rendered to a question mark</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9924"">#9924</a>: LaTeX: multi-line :rst:dir:<code>cpp:function</code> directive has big vertical; spacing in Latexpdf</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10158"">#10158</a>: LaTeX: excessive whitespace since v4.4.0 for undocumented</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/2329fdef8c20c6c75194f5d842b8f62ebad5c79d""><code>2329fde</code></a> Bump to 4.5.0 final</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/c34444149d7703ae2bf415adbec97324a5842632""><code>c344441</code></a> Update CHANGES for PR <a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10263"">#10263</a></li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/746df6145239fd525056907deccb431f89bf8e41""><code>746df61</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10263"">#10263</a> from nicoa/escape_base_uri_in_extlinks</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/81830cc77047ce39eab056a70b44a2d97848550c""><code>81830cc</code></a> Fix a flake8 warning</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/aee4",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11714:5036,undo,undocumented,5036,https://hail.is,https://github.com/hail-is/hail/pull/11714,2,['undo'],['undocumented']
Usability," | --- | --- | --- |; | this PR | 48 | 39.35 |; | this PR with one monolithic method | 235 | 73 |; | master (5fe6737263b4) | 91s | 83.5 |. I was disappointed with the performance of the monolithic method, so I dug in with `-XX:+PrintCompilation` and found that the JIT was having trouble doing on-stack replacement of the entry parsing loop. There was a cryptic message about the stack not being empty during an OSR compilation. I take this result as evidence that, in the JVM, small, fine-grained methods are critical for reliable performance. The new code, after JIT warming, is reading at 250 MB/s (1GB / 40 seconds) which is a half to a third of the performance of `cat`. It's more than twice as fast as the old code. Aside: using the staged stuff is hard, especially when using multiple methods. A couple thoughts:; - Because SRVB generates a fresh SRVB for arrays and structs, you must thread the srvb through your code gen rather than using a single field, this is annoying and error prone; - `init` is not a first class thing in `FunctionBuilder` and I've arguably made the whole situation more ugly by exposing `addInitInstructions`. Without the ability to place code in the constructor, it is hard to coordinate work between multiple methods.; - When using lots of methods, there's a lot of bookkeeping. I would like a way to define a ""staged class"" that wraps up some of the boilerplate. Not totally clear what I want here, just less boilerplate. Aside2: This is still pretty slow!? Splitting into multiple methods allowed me to interrogate where time was spent. The answer is ""method4"" which is `parseEntries`. This code includes the loop, the srvb state management, the Region manipulation, and checking for the missing value. I'd be surprised its the checking for missing value because I delegate to `String.regionMatches` for the heavy lifting and that does not show up in the profiler. I'm left to conclude that either srvb state management or writing/reading to regions is expensive.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6987:2687,clear,clear,2687,https://hail.is,https://github.com/hail-is/hail/pull/6987,1,['clear'],['clear']
Usability,""" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""4d1e728e-269c-49a2-a2d0-bf1c04966e29"",""prPublicId"":""4d1e728e-269c-49a2-a2d0-bf1c04966e29"",""dependencies"":[{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.7.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[531,null,null,509,384,494,539],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Access Control Bypass](https://learn.snyk.io/lesson/broken-access-control/?loc&#x3D;fix-pr); 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14026:5915,Learn,Learn,5915,https://hail.is,https://github.com/hail-is/hail/pull/14026,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,""",""from"":""0.8.4"",""to"":""2.0.3""},{""name"":""nbconvert"",""from"":""5.6.1"",""to"":""6.3.0b0""},{""name"":""notebook"",""from"":""5.7.16"",""to"":""6.4.12""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-IPYTHON-2348630"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERCORE-3063766"",""SNYK-PYTHON-MISTUNE-2940625"",""SNYK-PYTHON-NBCONVERT-2979829"",""SNYK-PYTHON-NOTEBOOK-1041707"",""SNYK-PYTHON-NOTEBOOK-2441824"",""SNYK-PYTHON-NOTEBOOK-2928995"",""SNYK-PYTHON-PYGMENTS-1086606"",""SNYK-PYTHON-PYGMENTS-1088505"",""SNYK-PYTHON-PYGMENTS-5750273"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-SPHINX-570772"",""SNYK-PYTHON-SPHINX-570773"",""SNYK-PYTHON-SPHINX-5811865"",""SNYK-PYTHON-SPHINX-5812109"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,531,null,null,null,null,null,null,null,null,null,null,509,null,null,null,null,384,494],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Improper Privilege Management](https://learn.snyk.io/lesson/insecure-design/?loc&#x3D;fix-pr); 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13835:10451,Learn,Learn,10451,https://hail.is,https://github.com/hail-is/hail/pull/13835,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,""",""from"":""0.8.4"",""to"":""2.0.3""},{""name"":""nbconvert"",""from"":""5.6.1"",""to"":""6.3.0b0""},{""name"":""notebook"",""from"":""5.7.16"",""to"":""6.4.12""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-IPYTHON-2348630"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERCORE-3063766"",""SNYK-PYTHON-MISTUNE-2940625"",""SNYK-PYTHON-NBCONVERT-2979829"",""SNYK-PYTHON-NOTEBOOK-1041707"",""SNYK-PYTHON-NOTEBOOK-2441824"",""SNYK-PYTHON-NOTEBOOK-2928995"",""SNYK-PYTHON-PYGMENTS-1086606"",""SNYK-PYTHON-PYGMENTS-1088505"",""SNYK-PYTHON-PYGMENTS-5750273"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-SPHINX-570772"",""SNYK-PYTHON-SPHINX-570773"",""SNYK-PYTHON-SPHINX-5811865"",""SNYK-PYTHON-SPHINX-5812109"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,531,null,null,null,null,null,null,null,null,null,null,509,null,null,null,null,384,494],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Improper Privilege Management](https://learn.snyk.io/lesson/insecure-design/?loc&#x3D;fix-pr); 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13866:10477,Learn,Learn,10477,https://hail.is,https://github.com/hail-is/hail/pull/13866,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,""":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""},{""name"":""wheel"",""from"":""0.30.0"",""to"":""0.38.0""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-IPYTHON-2348630"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JINJA2-6150717"",""SNYK-PYTHON-JUPYTERCORE-3063766"",""SNYK-PYTHON-MISTUNE-2940625"",""SNYK-PYTHON-NBCONVERT-2979829"",""SNYK-PYTHON-NOTEBOOK-1041707"",""SNYK-PYTHON-NOTEBOOK-2441824"",""SNYK-PYTHON-NOTEBOOK-2928995"",""SNYK-PYTHON-PROMPTTOOLKIT-6141120"",""SNYK-PYTHON-PYGMENTS-1086606"",""SNYK-PYTHON-PYGMENTS-1088505"",""SNYK-PYTHON-PYGMENTS-5750273"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-SPHINX-570772"",""SNYK-PYTHON-SPHINX-570773"",""SNYK-PYTHON-SPHINX-5811865"",""SNYK-PYTHON-SPHINX-5812109"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512"",""SNYK-PYTHON-WHEEL-3180413""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,531,null,null,null,null,null,null,null,null,null,null,null,null,509,null,null,null,null,384,494,539,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Cross-site Scripting (XSS)](https://learn.snyk.io/lesson/xss/?loc&#x3D;fix-pr); 🦉 [Improper Privilege Management](https://learn.snyk.io/lesson/insecure-design/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14257:11901,Learn,Learn,11901,https://hail.is,https://github.com/hail-is/hail/pull/14257,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,""":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""40.5.0"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""},{""name"":""wheel"",""from"":""0.32.2"",""to"":""0.38.0""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-IPYTHON-2348630"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JINJA2-6150717"",""SNYK-PYTHON-JUPYTERCORE-3063766"",""SNYK-PYTHON-MISTUNE-2940625"",""SNYK-PYTHON-NBCONVERT-2979829"",""SNYK-PYTHON-NOTEBOOK-1041707"",""SNYK-PYTHON-NOTEBOOK-2441824"",""SNYK-PYTHON-NOTEBOOK-2928995"",""SNYK-PYTHON-PROMPTTOOLKIT-6141120"",""SNYK-PYTHON-PYGMENTS-1086606"",""SNYK-PYTHON-PYGMENTS-1088505"",""SNYK-PYTHON-PYGMENTS-5750273"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-SPHINX-570772"",""SNYK-PYTHON-SPHINX-570773"",""SNYK-PYTHON-SPHINX-5811865"",""SNYK-PYTHON-SPHINX-5812109"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512"",""SNYK-PYTHON-WHEEL-3180413""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,531,null,null,null,null,null,null,null,null,null,null,null,null,509,null,null,null,null,384,494,539,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Cross-site Scripting (XSS)](https://learn.snyk.io/lesson/xss/?loc&#x3D;fix-pr); 🦉 [Improper Privilege Management](https://learn.snyk.io/lesson/insecure-design/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14364:12254,Learn,Learn,12254,https://hail.is,https://github.com/hail-is/hail/pull/14364,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIyN2MzNWY4NC0yNDIyLTRmNzUtYWMxYy1mODQxOGJmNzRlMzciLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjI3YzM1Zjg0LTI0MjItNGY3NS1hYzFjLWY4NDE4YmY3NGUzNyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""27c35f84-2422-4f75-ac1c-f8418bf74e37"",""prPublicId"":""27c35f84-2422-4f75-ac1c-f8418bf74e37"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.7"",""to"":""42.0.2""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6149518"",""SNYK-PYTHON-CRYPTOGRAPHY-6157248"",""SNYK-PYTHON-CRYPTOGRAPHY-6210214""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[509,581,451],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use of a Broken or Risky Cryptographic Algorithm](https://learn.snyk.io/lesson/insecure-hash/?loc&#x3D;fix-pr); 🦉 [Uncontrolled Resource Consumption (&#x27;Resource Exhaustion&#x27;)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [NULL Pointer Dereference](https://learn.snyk.io/lesson/null-dereference/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14234:4340,Learn,Learn,4340,https://hail.is,https://github.com/hail-is/hail/pull/14234,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"""https://github.com/googleapis/java-storage/commit/03c2e6660721b4a8bfc09b241ef44f3e4e08865b"">03c2e66</a>)</li>; <li>Improve throughput of http based storage#reader between 100 MiB/s and 200 MiB/s (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1799"">#1799</a>) (<a href=""https://github.com/googleapis/java-storage/commit/94cd2887f22f6d1bb82f9929b388c27c63353d77"">94cd288</a>)</li>; <li>Update GrpcBlobReadChannel to allow seek/limit after read (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1834"">#1834</a>) (<a href=""https://github.com/googleapis/java-storage/commit/45dc983a4af8e7feb937263ce611bd34eda37e03"">45dc983</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>Add missing preconditions and update samples (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1753"">#1753</a>) (<a href=""https://github.com/googleapis/java-storage/commit/96beca2465158fb4633d58fe09a9776a4b171811"">96beca2</a>)</li>; <li><strong>grpc:</strong> Fix bucket logging conversion to allow clearing (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1822"">#1822</a>) (<a href=""https://github.com/googleapis/java-storage/commit/30e19dc55c61917c3a73055091e9e6ca0744f172"">30e19dc</a>)</li>; <li>Update gRPC object list implementation to include synthetic directories (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1824"">#1824</a>) (<a href=""https://github.com/googleapis/java-storage/commit/0665c2473b5b1a18061d1e58382320ae55295520"">0665c24</a>)</li>; <li>Update Grpc Write implementation to allow specifying expected md5 (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1815"">#1815</a>) (<a href=""https://github.com/googleapis/java-storage/commit/46625729b6fd62d8f133c3fb2d8ee00eb64ee8e9"">4662572</a>)</li>; <li>Update GrpcConversions to use Bucket.RetentionPolicy.retention_duration (<a href=""https://github-redirect.dependabot.com/googlea",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12598:3499,clear,clearing,3499,https://hail.is,https://github.com/hail-is/hail/pull/12598,2,['clear'],['clearing']
Usability,"# SRE; - The Google SRE Books https://landing.google.com/sre/books/; - Distributed Systems Observability https://www.oreilly.com/library/view/distributed-systems-observability/9781492033431/; - ""Learning to Build Distributed Systems"" http://brooker.co.za/blog/2019/04/03/learning.html; - Increment's On-Call issue https://increment.com/on-call/; # SWE; - ""Designing Data-Intensive Systems"" by Kleppman https://www.amazon.com/gp/product/1449373321/; # SEC; - ""The Confused Deputy"" http://zoo.cs.yale.edu/classes/cs422/2010/bib/hardy88confused.pdf; - ""Blueprint fo a science of cybersecurity"" http://www.cs.cornell.edu/fbs/publications/SoS.blueprint.pdf; - ""Macaroons: Cookies with Contextual Caveats for Decentralized Authorization in the Cloud"" https://ai.google/research/pubs/pub41892; - ""Native Client: A Sandbox for Portable, Untrusted x86 Native Code"" https://ai.google/research/pubs/pub34913; - What is CSRF https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF); - What is XSS https://www.owasp.org/index.php/Cross-site_Scripting_(XSS); ## Containers; - gVisor Architecture Guide https://gvisor.dev/docs/architecture_guide/; - ""cgroups"" https://www.kernel.org/doc/Documentation/cgroup-v1/cgroups.txt; - ""cgroups v2"" https://github.com/torvalds/linux/blob/master/Documentation/admin-guide/cgroup-v2.rst; - ""Docker Security"" https://docs.docker.com/engine/security/security/; - ""On the security of containers"" https://medium.com/@ewindisch/on-the-security-of-containers-2c60ffe25a9e; - ""User namespaces might not be enough"" https://medium.com/@ewindisch/linux-user-namespaces-might-not-be-secure-enough-a-k-a-subverting-posix-capabilities-f1c4ae19cad; - ""OS-level virtualization"" https://en.wikipedia.org/wiki/OS-level_virtualisation; - ""Sandbox (computer security)"" https://en.wikipedia.org/wiki/Sandbox_(computer_security); - ""Making Containers More Isolated: An Overview of Sandboxed Container Technologies"" https://unit42.paloaltonetworks.com/making-containers-more-isolated-an-over",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6720:195,Learn,Learning,195,https://hail.is,https://github.com/hail-is/hail/issues/6720,2,"['Learn', 'learn']","['Learning', 'learning']"
Usability,"# The disappearing bit; ; This is one of the sneakiest bugs I've ever worked on. I learned early that the issue was somehow related to method splitting, but it was far more devious than I expected, and the code in LIR method splitting is completely correct. The particular case I was debugging had expected behavior when trying to write the missing bits of four fields A,B,C,D, where A and B were missing and C and D were present. These should have written the byte. 1<<0 | 1<<1 | 0<<2 | 0<<3; ==> b00000011; ==> 3. But instead wrote the byte `b00000001 or 1`, incorrectly leading readers to try to read field B when it was missing (and not written). This is due to the load-bearing and incorrect type of an I2B instruction generated [here](https://github.com/hail-is/hail/blob/8bd9b7b2224b77372a72f02f2b13806267892a35/hail/src/main/scala/is/hail/types/encoded/EBaseStruct.scala#L107). I2B is an instruction that truncates an integer to a byte, and it is used in various places in code generation but primarily encoding missing bits in arrays and structs. . I2B loads a byte to the stack, not a boolean. TypeInfos are mostly non-structural since they rarely influence the bytecode generated. Here is an exception, and that's where the method splitter comes in. Method splitting exists in the Hail compiler because not only does the JVM have limits on how large methods can be, but also the JIT compiler handles small methods much more effectively than large methods (and so splitting a large method into two small ones can make an order of magnitude or more in performance difference). We have three forms of method splitting in the Hail Query compiler. The first is a heuristic and greedy IR-level method splitter that generates new methods every X IR nodes, simply based on node count. However, the size of code generated by each IR can vary widely (`I32` vs `LowerBoundOnOrderedCollection` for instance), and so we have two other kinds of splitting that operate on the LIR level. The first is regio",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11328:83,learn,learned,83,https://hail.is,https://github.com/hail-is/hail/pull/11328,1,['learn'],['learned']
Usability,"## Basic philosophy; https://developers.google.com/web/fundamentals/performance/prpl-pattern/. Hybrid server-side client-side rendered application, with eager pre-loading of resources. First page visited is server rendered. All client-side code asynchronously fetched, using service workers if available. HTML is ""hydrated""/bound by React, and from then on has the responsiveness of a client-side application. This is what we have in the current pull request. Initial view / first page ready in ~10ms, DOMContentLoaded in ~60-120ms (excluding network latency). ## Why not static/HTML web?; In practice: there is no such thing. Even document-centric sites often need dynamic templates, and will therefore use PHP, Python, NodeJS, Go, Rust, etc. These only work on a server, and only serve interpolated, static documents. Any interactive elements require Javascript. As soon as you need Javascript, the choice becomes Vanilla JS, JQuery, or something more structured. Vanilla JS requires a lot of boilerplate (verbose event binding, DOM modification, needs polyfills since browser incompatibilities). JQuery makes this easier, but is 1) very slow, 2) provides no structure. Vanilla JS and JQuery tend to devolve to soup of global state-modifying code, with a lot of time spent on figuring out how to update values in DOM elements. . React/Next make DOM modification declarative, and very very easy. They provide a great deal of structure (especially with Next handling tooling), and thanks to the virtual dom / reconciliation process, performs, in many cases, much faster than directly modifying the DOM (HTML) (i.e plain JS). React also handles necessities like properly escaping all inputs, for XSS attack prevention. All of this in a bundle size that isn't significantly bigger than JQuery, without all of those benefits (and React is rapidly shrinking). It's possible to avoid Javascript. One can simulate interactivity by issuing a server GET request for a new page, i.e click on a link with a GET ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931:365,responsiv,responsiveness,365,https://hail.is,https://github.com/hail-is/hail/pull/4931,1,['responsiv'],['responsiveness']
Usability,"## Bug fixes to enable Azure deployment. Most of these bugs were discovered in deploying the MySQL server from scratch, specifically deploying version 8.0. ; Some were encountered when we hit certificate issues in trying to run the `./bootstrap.sh deploy_unmanaged` step multiple times within 24hrs. Documentation was clarified in order to resolve this issue. - build.yaml; - Step one fails on rerun since the /repo directory exists, -p to fix; - ci/create_database.py; - In MySQL 8 a new error was introduced [4006](https://dev.mysql.com/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_cannot_user_referenced_as_definer); - This error gets triggered on the CREATE USER IF NOT EXISTS commands for both user and admin if the user was previously created and set a a definer on any events/triggers.; - Really this statement should be a no-op given that the user exists, but for some reason the error triggers anyway.; - To get around this I added a manual check if the user/admin exists and if they do simply skip the create user command. This fixes the bug and allows the MySQL db deploy to finish properly. - dev-docs/letsencrypt.md; - Debugging was confusing since the revoke command addressed ids we were unable to find.; - After extensive searching I added to the documentation how to find your existing cert IDs if you need to revoke them. - infra/azure/README.md; - Added clarity to the Azure deployment documentation. - infra/azure/bootstrap.sh; - Added the passing of additional flag arguments to terraform; - In our case the passing of the `-upgrade` flag to the terraform init step was required in order to continue. - infra/azure/main.tf, infra/azure/modules/batch/main.tf, infra/azure/modules/batch/variables.tf infra/azure/variables.tf; - Add additional argument for the az_storage_account.; - The name must be globally unique in Azure, so the original argument failed on our deployment since it shared the name with the Hail team's Azure deployment",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12065:1012,simpl,simply,1012,https://hail.is,https://github.com/hail-is/hail/pull/12065,1,['simpl'],['simply']
Usability,"### Change Description. This change exists as part of larger refactoring work. Herein, I've exchanged; hard-coded contextual strings passed to `ExecutionTimer.time` with implict; contexts, drawing inspiration from scalatest. These contexts are now supplied after entering functions like `Compile` and; `Emit` instead of before (see `ExecuteContext.time`). By sprinking calls to ; `time` throughout the codebase after entering functions, we obtain a nice trace; of the timings with `sourcecode.Enclosing`, minus the previous verbosity. See [1] for more information about what pre-built macros are available. We can; always build our own later. See comments in [pull request id] for example output.; Note that `ExectionTimer.time` still accepts a string to support uses like; `Optimise` and `LoweringPass` where those contexts are provided already.; It is also exception-safe now. This change exposed many similarities between the implementations of query; execution across all three backends. I've stopped short of full unification; which is a greater work, I've instead simplified and moved duplicated result; encoding into the various backend api implementations. More interesting changes are to `ExecuteContext`, which now supports; - `time`, as discussed above; - `local`, a generalisation for temporarily overriding properties of an ; `ExecuteContext` (inspired by [2]). While I've long wanted this for testing,; we were doing some questionable things when reporting timings back to python,; for which locally overriding the `timer` of a `ctx` has been very useful.; We also follow this pattern for local regions. [1] https://github.com/com-lihaoyi/sourcecode; [2] https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Reader.html#v:local. ### Security Assessment. This change has no security impact as it's confined to refactoring of existing non-security-related code.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14683:1070,simpl,simplified,1070,https://hail.is,https://github.com/hail-is/hail/pull/14683,1,['simpl'],['simplified']
Usability,"### Description. In this pull request, I update the docstring for the `Table.head` method to more clearly illustrate what the method does. ### Testing. I ran `make -C hail doctest-query` and confirmed that the test for `hail.table.Table.head` passed.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14241:98,clear,clearly,98,https://hail.is,https://github.com/hail-is/hail/pull/14241,1,['clear'],['clearly']
Usability,"### Description. In this pull request, I update the docstrings for the `sample`, `head`, and `semi_join` methods of the `Table` class with clearer examples that demonstrate the functionality of each method. I also update the unit test for the `sample` method so that it is deterministic and stronger. ### Testing. I ran `make -C hail doctest-query hail/table.py` to confirm that the docstring tests are passing for the methods that I updated.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14242:139,clear,clearer,139,https://hail.is,https://github.com/hail-is/hail/pull/14242,1,['clear'],['clearer']
Usability,"### Hail version:; latest master. ### What you did:; remove `region.clear()` from the `it.map` function inside `RVD.persistRVRDD`. ### What went wrong (all error messages here, including the full java stack trace):. `LDPruneSuite.testNoPrune` fails giving 313 variants instead of 338.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3398:68,clear,clear,68,https://hail.is,https://github.com/hail-is/hail/issues/3398,1,['clear'],['clear']
Usability,"### Problem Description. `ExportPlink` was previously modified to resiliently handle failure of a; Spark task by including a per-task UUID. `copyMerge` was not modified to; correctly handle the directories generated by this modified; `ExportPlink`. For example, if exactly one task out of N fails during `ExportPlink`, the; temporary output directory will contain N+1 partition files. One of; these partition files is corrupted and invalid. The other N are the; output of successful task completion. The invalid file should simply be; ignored by `copyMerge`. ### Changes Made. This PR modifies `copyMerge` to take an optional list of files to; merge. If that argument is set to `None`, the original behavior; persists. The original behavior is used by `RichRDD.writeTable` and; `RichRDDByteArray.saveFromByteArrays`. These two methods use the default; Spark parallel export system. This system is not resilient to all task; failures, but *does* ensure failed tasks do not generate garbage; partitions in the output directory. Ergo, they can safely use the; original behavior of `copyMerge`. ### On Testing. I do not test this behavior because failing a task during write is a; little bit tricky. I have verified that all users of `copyMerge` now use; `copyMerge` correctly. Adding a test to `ExportPlink` would not save us; from incorrectly using `copyMerge` in the future. A longer term testing strategy that includes a Chaos Monkey that kills; entire containers during Hail Scala tests execution would protect; against this type of bug. ---. Fixes #4932",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4938:524,simpl,simply,524,https://hail.is,https://github.com/hail-is/hail/pull/4938,1,['simpl'],['simply']
Usability,"### Stacked PR; Stacks on #5429, adding the scss that was excluded from that PR. I separated them to make the story a bit cleaner. When #5429 is approved, this PR will contain 3 lines of change to index.html, 5 to notebook.py (to compile scss css), 1 to environment.yml (to include libsass), 1 to gitignore (to ignore the compiled css). The remaining 437 lines are the top-scope styles (margins, buttons that are frequently re-used, etc), the header styles, and styles for the login and notebook pages. We can exclude login page in this PR, but it only adds ~ 12 lines. Some of the global SCSS we will be able to removed later this week, once we understand which pieces we truly don't need. I can also remove them now if needed, but we won't have a single ""styles"" PR. ### SCSS vs CSS; I find SCSS preferable to CSS because it makes style scoping and re-use easier. For instance, we may define a variable $margin, to standardize spacing across all pages, and $color to define a font color for all text. SCSS can be written identically to css if the developer is totally unfamiliar or doesn't have time to learn. My style scoping solution is reminiscent of [BEM](http://getbem.com/introduction/). Each page defines an ID, and any styles that are private to that page are scope that way `#page { ...styles }` in the corresponding `pages/page.scss`. It is lightweight (no additional tooling needed), and should be easy to follow. cc @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5430:1105,learn,learn,1105,https://hail.is,https://github.com/hail-is/hail/pull/5430,1,['learn'],['learn']
Usability,"### Summary of Changes. - make the vectorized IBS tests depend on libsmidpp, I have no idea how this wasn't failing builds before. - fix `generate-build-info.sh` to actually set `BRANCH` instead of setting the `DATE` to the current git branch. Also remove unnecessary parameter passing to `echo_build_properties`. - remove `doctest` as a separate build step (it's now part of python tests). - fix `DOCS_STATUS` in `hail-ci-build.sh`. - remove some unused files: `list_pypi_versions.py`, `publish-to-pypi.sh` (which duplicates, wrongly, `python/deploy.sh`. - simplify `python/deploy.sh`, by managing copied files in make, we no longer clean up files, but the JAR is only 30 MB anyway. - small change to `conftest.py` triggered a bad diff: I added a `try`/`finally` block to ensure we always return to the original working directory. I also fixed the path. - Use pytest [recommended directory structure](https://docs.pytest.org/en/latest/goodpractices.html) when your tests directory is a python module [1]. In particular, we now use:. ```; python/; - setup.py; - src/; - hail/; - __init__.py; - ...; - tests/; - __init__.py; - ...; ```. - Calculate number of cores using python's multiprocessing and use that as a default PARALLELISM parameter. - Move non-java/scala specific functionality out of `build.gradle` and into a `Makefile`. - The resulting rules are more succinct and correctly rely on file-system modification dependencies. - No use of `SPARK_HOME` and `PYTHONPATH`, and limited use of `PYSPARK_SUBMIT_ARGS`. Python tests now rely on the python package directly which handles correctly handles dependencies like `pyspark`. - There are also some phony targets for convenience: `jar`, `zip`, `pip-install`, `docs`, and `docs-no-test`. - Fix configuration of Spark version for the python package. The version is written by make into `python/spark_version` and read by `python/setup.py`. Many of the tests pass against 2.3.0, but there's some floating point value changes. - add breezeVersions ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5130:558,simpl,simplify,558,https://hail.is,https://github.com/hail-is/hail/pull/5130,1,['simpl'],['simplify']
Usability,"### What happened?. # Problem. A user submitted a Hail Batch batch which read from a bucket whose storage class was ""Archive"". This produced a large unexpected spend because Archive class objects cost 0.05 USD per GB whereas Standard class objects are free. # Solution. Hail Batch and Hail Query should collect the set of buckets which were used as reads, imports, input files, or temporary intermediates and assert that the bucket default storage class is the standard class / hot tier. In Google this is called the [Standard storage class](https://cloud.google.com/storage/docs/storage-classes#standard). In Azure, this is called the [Hot tier](https://learn.microsoft.com/en-us/azure/storage/blobs/access-tiers-overview?tabs=azure-portal). A user should be able to explicitly override this setting with an allowlist. The allowlist should be initialized using Hail's [standard configuration system](https://github.com/hail-is/hail/blob/48d7b5cfbf9a2231d72dd0a1a682da28422fde4b/hail/python/hailtop/config/user_config.py#L42). In Hail Query, this allowlist should be a setting on `hl.init`. In Hail Batch, it should be a setting on `ServiceBackend`. ### Version. 0.2.115. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13003:655,learn,learn,655,https://hail.is,https://github.com/hail-is/hail/issues/13003,1,['learn'],['learn']
Usability,"### What happened?. - [ ] Document the AsyncFS interface, RouterAsyncFS, and the three clouds.; - [ ] Do a critical pass of the interfaces and make sure public methods don't have underscores and private methods do. When in doubt, make it private.; - [ ] Same as above but for parameters. For this, be particularly aggressive about making parameters private!; - [ ] Downgrade positional arguments to keyword-arguments as much as is feasible without severely degrading UX. ### Version. 0.2.126. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14021:467,UX,UX,467,https://hail.is,https://github.com/hail-is/hail/issues/14021,1,['UX'],['UX']
Usability,"### What happened?. A simple `hl.init()` fails, that used to work. Maybe an error with Spark, not an expert. ### Version. 0.2.108. ### Relevant log output. ```shell; ~ » python3; Python 3.10.9 (main, Dec 15 2022, 17:11:09) [Clang 14.0.0 (clang-1400.0.29.202)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import hail as hl; >>> hl.init(); 2023-01-27 17:15:28.940 WARN NativeCodeLoader:60 - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""<decorator-gen-1758>"", line 2, in init; File ""/opt/homebrew/lib/python3.10/site-packages/hail/typecheck/check.py"", line 577, in wrapper; return __original_func(*args_, **kwargs_); File ""/opt/homebrew/lib/python3.10/site-packages/hail/context.py"", line 345, in init; return init_spark(; File ""<decorator-gen-1760>"", line 2, in init_spark; File ""/opt/homebrew/lib/python3.10/site-packages/hail/typecheck/check.py"", line 577, in wrapper; return __original_func(*args_, **kwargs_); File ""/opt/homebrew/lib/python3.10/site-packages/hail/context.py"", line 424, in init_spark; backend = SparkBackend(; File ""/opt/homebrew/lib/python3.10/site-packages/hail/backend/spark_backend.py"", line 188, in __init__; self._jbackend = hail_package.backend.spark.SparkBackend.apply(; File ""/opt/homebrew/lib/python3.10/site-packages/py4j/java_gateway.py"", line 1304, in __call__; return_value = get_return_value(; File ""/opt/homebrew/lib/python3.10/site-packages/py4j/protocol.py"", line 326, in get_return_value; raise Py4JJavaError(; py4j.protocol.Py4JJavaError: An error occurred while calling z:is.hail.backend.spark.SparkBackend.apply.; : java.lang.IllegalAccessError: class org.apache.spark.storage.StorageUtils$ (in unnamed module @0x4d740d85) cannot access class sun.n",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12630:22,simpl,simple,22,https://hail.is,https://github.com/hail-is/hail/issues/12630,1,['simpl'],['simple']
Usability,"### What happened?. Also fails if the show is a `_force_count`. ~~[reproduction.tar.gz](https://github.com/hail-is/hail/files/12705191/reproduction.tar.gz)~~. Here's a simple reproducer:. ```python3; import hail as hl; b = hl.utils.range_table(1); b = b.key_by(interval=hl.interval(b.idx, b.idx)); b = b.annotate(target='foo'); a = hl.utils.range_table(1); a = a.annotate(x=b.index(a.idx, all_matches=True).target); a = a.annotate(y=a.x.map(lambda _: hl.rand_cat([0.3, 0.2, 0.5], seed=0))); a._force_count(); ```. ### Version. 0.2.124. ### Relevant log output. ```; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); Cell In[1], line 10; 8 a = a.annotate(x=b.index(a.idx, all_matches=True).target); 9 a = a.annotate(y=a.x.map(lambda _: hl.rand_cat([0.3, 0.2, 0.5], seed=0))); ---> 10 a._force_count(). File /private/tmp/hail/hail/python/hail/table.py:441, in Table._force_count(self); 440 def _force_count(self):; --> 441 return Env.backend().execute(ir.TableToValueApply(self._tir, {'name': 'ForceCountTable'})). File /private/tmp/hail/hail/python/hail/backend/py4j_backend.py:72, in Py4JBackend.execute(self, ir, timed); 71 def execute(self, ir, timed=False):; ---> 72 jir = self._to_java_value_ir(ir); 73 stream_codec = '{""name"":""StreamBufferSpec""}'; 74 # print(self._hail_package.expr.ir.Pretty.apply(jir, True, -1)). File /private/tmp/hail/hail/python/hail/backend/py4j_backend.py:164, in Py4JBackend._to_java_value_ir(self, ir); 163 def _to_java_value_ir(self, ir):; --> 164 return self._to_java_ir(ir, self._parse_value_ir). File /private/tmp/hail/hail/python/hail/backend/py4j_backend.py:145, in Py4JBackend._to_java_ir(self, ir, parse); 143 r = CSERenderer(stop_at_jir=True); 144 # FIXME parse should be static; --> 145 ir._jir = parse(r(finalize_randomness(ir)), ir_map=r.jirs); 146 return ir._jir. File /private/tmp/hail/hail/python/hail/backend/py4j_backend.py:149, in Py4JBackend._parse_value_ir(self, code, ref_map,",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13699:168,simpl,simple,168,https://hail.is,https://github.com/hail-is/hail/issues/13699,1,['simpl'],['simple']
Usability,"### What happened?. As [Patrick noted](https://github.com/hail-is/hail/pull/13619#pullrequestreview-1626963641):. > [StreamMap with requiresMemoryManagementPerElement] could be generally useful when the producer didn't care about memory management, but the map body allocates a lot and wants to free after each row---and then use that to make these smarter:. Consider, for example, `split_multi`. In both the sparse and non-sparse split-multi, we take an array which necessarily fits in memory, the alleles array, and generate a full row for each allele. The `StreamMap` which generates the rows should be memory managed. For a Python-level example consider this expression:. ```python3; hl.range(100).map(lambda x: hl.range(1_000_000)).map(hl.sum); ```. Although `free` ing each integer generated by the `range` is silly, we *do* want to free the 1M element array! In the current interface, it is not possible to request this. Indeed, this operation would consume 100GB of RAM if the simplifier wasn't able to fuse the sum and range. ### Version. 0.2.122. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13623:985,simpl,simplifier,985,https://hail.is,https://github.com/hail-is/hail/issues/13623,1,['simpl'],['simplifier']
Usability,"### What happened?. Batch now has the ability to offer a metadata server endpoint in the network namespaces of a `DockerJob`. We should add this functionality to `JVMJob`s so that QoB jobs can use the google default credential flow instead of relying on a GSA key file in the job container. While the implementation here could be trivial, we should make sure to load test it properly as QoB jobs can be very short (100s of ms). The simplest route would be to create/close a metadata server in the `JVMContainer` at the start/end of every job. If this incurs a penalty, since these `JVMContainer`s are long-lived we can run a long-lived metadata server and swap out the underlying credentials when user jobs start/stop. ### Version. 0.2.130. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14487:432,simpl,simplest,432,https://hail.is,https://github.com/hail-is/hail/issues/14487,1,['simpl'],['simplest']
Usability,"### What happened?. Ben W reports that he can reliably cause a batch worker VM to become non-responsive, triggering the driver to kill the VM, and the job to get rescheduled. https://hail.zulipchat.com/#narrow/stream/300487-Hail-Batch-Dev/topic/workers.20which.20suddenly.20stop.20responding/near/400852561. This ticket is complete when:; 1. We have reproduced Ben's behavior on a main commit before or including 06183480d2. ; 2. We have reduced Ben's test case to something we can add as a test. ### Version. 0.2.126. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13992:93,responsiv,responsive,93,https://hail.is,https://github.com/hail-is/hail/issues/13992,1,['responsiv'],['responsive']
Usability,"### What happened?. Categorical data requires the user to preprocess their data. The subtle distinctions between dummy coding and one-hot encoding are not obvious to all users. We should provide a simple method, clear docs, and clear examples to ease the analysis of categorical variables. Here's a prototype implementation; ```python3; def dummy_code(mt: hl.MatrixTable, *fields: str) -> DummyCode:; field_categories = mt.aggregate_cols(**{; field: hl.agg.collect_as_set(mt[field]) for field in fields; }). dummy_codes = {; f'{field}_{category}': mt[field] == c; for field in field_categories; for category in field_categories[field]; }. mt = mt.annotate_cols(**dummy_codes). dummy_code_fields = list(dummy_codes). return field_categories, dummy_code_fields, mt. # Example. _, dummy_code_fields, mt = hl.dummy_code(mt, 'breed', 'color'); mt = hl.linear_regression_rows(; x=mt.GT.n_alt_alleles(),; y=[1.0, *dc.dummy_code_fields]; ). ```. References; - How to handle categorical manually in Hail. https://discuss.hail.is/t/how-do-i-include-a-categorical-variable-as-a-covariate-in-my-logistic-or-linear-regression/1362; - Dummy coding vs one-hot encoding. https://stats.stackexchange.com/questions/224051/one-hot-vs-dummy-encoding-in-scikit-learn; - A recent user request for this feature. https://hail.zulipchat.com/#narrow/stream/123010-Hail-Query-0.2E2-support/topic/categorical.20covariates.20in.20regression. ### Version. 0.2.122. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13601:197,simpl,simple,197,https://hail.is,https://github.com/hail-is/hail/issues/13601,4,"['clear', 'learn', 'simpl']","['clear', 'learn', 'simple']"
Usability,"### What happened?. Consider this simple pipeline that reads a matrix table. ```python3; import hail as hl; hl.init(master='local[1]'); hl.read_matrix_table('/Users/dking/projects/hail-data/foo.mt')._force_count_rows(); ```. <details>; <summary>The matrix table's type.</summary>. ```; ----------------------------------------; Global fields:; None; ----------------------------------------; Column fields:; 's': str; ----------------------------------------; Row fields:; 'locus': locus<GRCh38>; 'alleles': array<str>; 'rsid': str; ----------------------------------------; Entry fields:; 'LA': array<int32>; 'LGT': call; 'LAD': array<int32>; 'LPGT': call; 'LPL': array<int32>; 'RGQ': int32; 'gvcf_info': struct {; AC: array<int32>, ; AF: array<float64>, ; AN: int32, ; AS_BaseQRankSum: array<float64>, ; AS_FS: array<float64>, ; AS_InbreedingCoeff: array<float64>, ; AS_MQ: array<float64>, ; AS_MQRankSum: array<float64>, ; AS_QD: array<float64>, ; AS_QUALapprox: array<int32>, ; AS_RAW_BaseQRankSum: str, ; AS_RAW_MQ: array<float64>, ; AS_RAW_MQRankSum: array<tuple (; float64, ; int32; )>, ; AS_RAW_ReadPosRankSum: array<tuple (; float64, ; int32; )>, ; AS_ReadPosRankSum: array<float64>, ; AS_SB_TABLE: array<array<int32>>, ; AS_SOR: array<float64>, ; AS_VarDP: array<int32>, ; BaseQRankSum: float64, ; ExcessHet: float64, ; FS: float64, ; InbreedingCoeff: float64, ; MQ: float64, ; MQRankSum: float64, ; MQ_DP: int32, ; QD: float64, ; QUALapprox: int32, ; RAW_GT_COUNT: array<int32>, ; RAW_MQandDP: array<int32>, ; ReadPosRankSum: float64, ; SOR: float64, ; VarDP: int32; }; 'DP': int32; 'GQ': int32; 'MIN_DP': int32; 'PID': str; 'PS': int32; 'SB': array<int32>; ----------------------------------------; Column key: ['s']; Row key: ['locus', 'alleles']; ----------------------------------------; ```; </details>. <details>; <summary>The matrix table entries RVD's EType [1]</summary>. ```; +EBaseStruct{; `the entries! [877f12a8827e18f61222c6c8c5fb04a8]`:; +EArray[EBaseStruct{; LA:EArray[EInt3",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13792:34,simpl,simple,34,https://hail.is,https://github.com/hail-is/hail/issues/13792,1,['simpl'],['simple']
Usability,"### What happened?. Currently, almost all of our tests are integration tests which require:; 1. Compiling Scala code.; 2. Building a JAR (takes ~30 seconds on my MBP); 3. Running pytest (can take as long as 20 seconds). All of this is a lot slower than iterating with a live running Scala process. We should have tests of various parts of the compiler operating at the IR level. For example, MatrixIR to TableIR lowering should have plenty of in Scala IR-level tests. Likewise for TableIR to CDAIR. The optimizer/simplifier should also have tests at each level which assert certain kinds of code is sufficiently cleaned up by the optimizer. ### Version. 0.2.122. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13638:513,simpl,simplifier,513,https://hail.is,https://github.com/hail-is/hail/issues/13638,1,['simpl'],['simplifier']
Usability,"### What happened?. Currently, in order to change the rate limit in `internal-gateway`, one has to manually edit `envoy.py` and redeploy CI. This is non-standard, time intensive and can be accidentally reverted if CI merges a new commit to `main`. CI already regularly updates the envoy configuration `internal-gateway` uses to account for services in new namespaces, so making the rate limit configurable should be a simple CRUD task that would greatly ease operation of batch under high load. One gotcha to keep in mind is that while we run CI as a control plane for our ""dynamic cluster topology"", it should still be possible to manually deploy `internal-gateway` in a standalone Batch cluster (see `internal-gateway/Makefile`), so `envoy.py` should still be runnable as a standalone script. ### Version. 0.2.128. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14399:418,simpl,simple,418,https://hail.is,https://github.com/hail-is/hail/issues/14399,1,['simpl'],['simple']
Usability,"### What happened?. Encountered this making the repo to support the SVCR paper. There's no way to pass through multiple call fields through to `hl.import_gvcf_interval`, so I'm stuck with a PGT str. Should be a simple fix. ### Version. 0.2.120. ### Relevant log output. ```shell; Entry fields:; 'END': int32; 'DP': int32; 'GQ': int32; 'LA': array<int32>; 'LGT': call; 'LAD': array<int32>; 'LPGT': str; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13382:211,simpl,simple,211,https://hail.is,https://github.com/hail-is/hail/issues/13382,1,['simpl'],['simple']
Usability,"### What happened?. Hana Snow is the engineer for SEQR. Previously, SEQR used elastic search as its datastore. Unfortunately, elastic search was very expensive because, to get reasonable performance, SEQR indexed nearly every field. The ES index was huge and the VM resources necessary to run an ES instance on that index were expensive (like 1000s USD per month). I've been supporting Hana as much as I can, but she needs someone who can be more dedicated and responsive than me. She uses a k8s cluster. She has a SEQR frontend deployment. She also has a Hail deployment (statefulset maybe?). The Hail pod has an SSD mounted read-only. That SSD has all the SEQR data in Hail Table form. There are many tables with annotations (variant metadata, like ""probability this variant is damaging"" or ""likely causes this to happen to the protein""). There are also ""per-family"" tables which contain all the sequences within a single family. Many queries are directly against a particular family. Those tables are small and quick to read. There's also one giant table containing all the sequences from all the families. That table is large and expensive to read. A lot of our engineering work has been around making sure queries against that table are fast. Tim, at one point, had enough of her system locally that he could experiment with running queries on his laptop against his SSD. He hacked on the queries themselves and on Hail itself until the bandwidth was fast enough that the queries should complete fast enough on the full dataset. Fast enough varies but generally a couple tens of seconds is OK. The work here is to pair with Hana to diagnose performance issues and make changes until the queries are acceptably fast. The first thing I would do is update her to the latest Hail (with the array decoder improvement as well as the memory overhead stuff on which Daniel is working). Then, with Hana's help, test the timing of some queries. If the queries are still too slow, your options are:; 1. Chec",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13882:461,responsiv,responsive,461,https://hail.is,https://github.com/hail-is/hail/issues/13882,1,['responsiv'],['responsive']
Usability,"### What happened?. Hello,; I have some gwas results that I have converted into a pandas dataframe. Typically with dataframes I pickle my outputs for speed and easily maintaining data types. Within All of Us we have separate analysis environments whether we're using hail or not. The environment that doesn't have hail is much cheaper for simple analyses and does not have pyspark installed. You can see in the error below when I try to reread the pickled dataframe, I get an error that it can't find the pyspark from within a hail module. If I write the dataframe as a csv, read it back in, and then pickle it then the error goes away. This suggests to me that the dataframe created by hail maintains reference to hail objects and pandas is attempting to recreate these objects when unpickling. I suspect this is not intentional. ```python; # Hail environment; vat_simplified_file = os.path.join(bucket, 'vat.ht'); gwas = hl.read_table(gwas_results_file_no_sex_chr); vat = hl.read_table(vat_simplified_file); gwas = gwas.filter(gwas.p_value <= 1e-4); combined = gwas.join(vat, how='left'); combined_pandas = combined.to_pandas(). gwas_pandas_file = os.path.join(bucket, 'gwas_results.pkl'); combined_pandas.to_pickle(gwas_pandas_file); ```. ```python; # Non hail environment without pyspark; combined_pandas = pd.read_pickle(gwas_pandas_file). ---------------------------------------------------------------------------; ModuleNotFoundError Traceback (most recent call last); /opt/conda/lib/python3.7/site-packages/pandas/io/pickle.py in read_pickle(filepath_or_buffer, compression, storage_options); 216 # expected ""IO[bytes]""; --> 217 return pickle.load(handles.handle) # type: ignore[arg-type]; 218 except excs_to_catch:. /opt/conda/lib/python3.7/site-packages/hail/__init__.py in <module>; 32 # E402 module level import not at top of file; ---> 33 from .table import Table, GroupedTable, asc, desc # noqa: E402; 34 from .matrixtable import MatrixTable, GroupedMatrixTable # noqa: E402. /opt/conda",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14004:339,simpl,simple,339,https://hail.is,https://github.com/hail-is/hail/issues/14004,1,['simpl'],['simple']
Usability,"### What happened?. Here is a reproducer, though I would like to find a simpler one:; ```python; mt = hl.balding_nichols_model(1, 10, 10); mt = mt.annotate_rows(foo=hl.agg.count_where(hl.is_defined(mt['GT'])) - hl.sum(hl.agg.call_stats(mt.GT, mt.alleles).homozygote_count)); ht = mt.entries(); ht = ht.sample(0.5); ht._force_count(); ```; The issue is that this `StreamAgg` node is generated; ```; (StreamAgg __iruid_4244; (StreamFilter __iruid_4245; (StreamRange -1 False; (I32 0); (ArrayLen (Ref __iruid_4243)); (I32 1)); (ApplyUnaryPrimOp Bang; (IsNA; (ArrayRef -1; (Ref __iruid_4243); (Ref __iruid_4245))))); (AggLet __iruid_4246 False; (GetField GT; (ArrayRef -1; (Ref __iruid_4243); (Ref __iruid_4244))); (InsertFields; (Let __iruid_4247; (SelectFields (locus alleles ancestral_af af); (Ref __iruid_4235)); (InsertFields; (Ref __iruid_4247); None; (foo; (ApplyBinaryPrimOp Subtract; (ApplyAggOp Sum; (); ((Apply 18 toInt64 () Int64; (ApplyUnaryPrimOp Bang; (IsNA (Ref __iruid_4246)))))); (Let __iruid_4249; (ToArray; (StreamFilter __iruid_4248; (ToStream False; (GetField homozygote_count; (ApplyAggOp CallStats; ((ArrayLen (GetField alleles (Ref __iruid_4247)))); ((Ref __iruid_4246))))); (ApplyUnaryPrimOp Bang; (IsNA (Ref __iruid_4248))))); (Cast Int64; (StreamFold __iruid_4250 __iruid_4251; (ToStream False (Ref __iruid_4249)); (I32 0); (ApplyBinaryPrimOp Add; (Ref __iruid_4250); (Ref __iruid_4251))))))))); None; (__uid___row_uid20; (GetField __uid___row_uid20; (Ref __iruid_4235)))))); ```; which is lowered to; ```; (AggLet __iruid_4246 False; (GetField GT; (ArrayRef -1; (Ref __iruid_4243); (Ref __iruid_4244))); (InsertFields; (Let __iruid_4247; (SelectFields (locus alleles ancestral_af af); (Ref __iruid_4235)); (Let __iruid_4268; (RunAgg ((TypedStateSig +PInt64); (CallStatsStateSig)); (Let __void; (Let __void; (InitOp 0 (Sum (TypedStateSig +PInt64)) ()); (InitOp 1 (CallStats (CallStatsStateSig)); ((ArrayLen; (GetField alleles (Ref __iruid_4247)))))); (StreamFor __iruid_4244; (",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14305:72,simpl,simpler,72,https://hail.is,https://github.com/hail-is/hail/issues/14305,1,['simpl'],['simpler']
Usability,"### What happened?. Here's a tail of the log showing the rapidly increasing RAM use. I'm working on a simple replicable pipeline now. Does not depend on the use of `filter_changed_loci`. ```; 2023-09-11 16:22:59.815 : INFO: RegionPool: REPORT_THRESHOLD: 1.0G allocated (662.3M blocks / 363.4M chunks), regions.size = 3, 0 current java objects, thread 24: Thread-3; 2023-09-11 16:23:01.488 : INFO: executing D-Array [table_scan_prefix_sums_singlestage] with 1 tasks, contexts size = 430.00 B, globals size = 2.52 MiB; 2023-09-11 16:23:01.540 : INFO: RegionPool: initialized for thread 115: Executor task launch worker for task 0.0 in stage 37.0 (TID 442); 2023-09-11 16:23:01.567 : INFO: RegionPool: REPORT_THRESHOLD: 2.2M allocated (64.0K blocks / 2.1M chunks), regions.size = 1, 0 current java objects, thread 115: Executor task launch worker for task 0.0 in stage 37.0 (TID 442); 2023-09-11 16:23:01.572 : INFO: RegionPool: REPORT_THRESHOLD: 4.2M allocated (64.0K blocks / 4.1M chunks), regions.size = 1, 0 current java objects, thread 115: Executor task launch worker for task 0.0 in stage 37.0 (TID 442); 2023-09-11 16:23:01.573 : INFO: RegionPool: REPORT_THRESHOLD: 4.3M allocated (64.0K blocks / 4.2M chunks), regions.size = 1, 0 current java objects, thread 115: Executor task launch worker for task 0.0 in stage 37.0 (TID 442); 2023-09-11 16:23:01.573 : INFO: RegionPool: REPORT_THRESHOLD: 4.3M allocated (128.0K blocks / 4.2M chunks), regions.size = 2, 0 current java objects, thread 115: Executor task launch worker for task 0.0 in stage 37.0 (TID 442); 2023-09-11 16:23:01.573 : INFO: RegionPool: REPORT_THRESHOLD: 12.3M allocated (192.0K blocks / 12.1M chunks), regions.size = 3, 0 current java objects, thread 115: Executor task launch worker for task 0.0 in stage 37.0 (TID 442); 2023-09-11 16:23:01.579 : INFO: RegionPool: REPORT_THRESHOLD: 12.4M allocated (192.0K blocks / 12.2M chunks), regions.size = 3, 0 current java objects, thread 115: Executor task launch worker for task 0.0 in",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13606:102,simpl,simple,102,https://hail.is,https://github.com/hail-is/hail/issues/13606,1,['simpl'],['simple']
Usability,"### What happened?. I have a job that runs a GATK command that produces a `foo.counts.tsv` file, compresses and indexes it, and should store the resulting `foo.counts.tsv.gz` and `foo.counts.tsv.gz.tbi` files. The indexing command requires the filename extension to be `.counts.tsv.gz` and there is clearly a strong relationship between the filenames of the three files, so I have been using a ResourceGroup to model this, essentially as follows:. ```python; j = b.new_job(…). j.declare_resource_group(counts={; 'tsv': '{root}.counts.tsv',; 'tsv.gz': '{root}.counts.tsv.gz',; 'tsv.gz.tbi': '{root}.counts.tsv.gz.tbi',; }). j.command(f""""""; gatk SubCommand … --output {j.counts['tsv']}; bgzip {j.counts['tsv']}; gatk IndexFeatureFile --input {j.counts['tsv.gz']}; """"""). b.write_output(j.counts['tsv.gz'], output_path); b.write_output(j.counts['tsv.gz.tbi'], output_index_path); ```. (Trying to use `b.write_output(j.counts, output_base)` to write out the whole ResourceGroup fails because the `…/counts.counts.tsv` file no longer exists because it was removed by `bgzip`. In any case, we don't want to write that one to the final bucket anyway. Hence the two separate `write_output` invocations for the two desired output files.). This fails in the second `write_output` with a fairly mysterious exception:. ```; File ""…"", line 92, in test; b.write_output(j.counts['tsv.gz.tbi'], output_index_path); File ""…/lib/python/site-packages/hailtop/batch/batch.py"", line 595, in write_output; name = resource._source._resources_inverse[resource]; KeyError: __RESOURCE_FILE__11; ```. Checking that line of _batch.py_, it is failing while trying to print an error message because `_resources_inverse` is not set up for the JobResourceFiles within ResourceGroups. PR #13192 is a suggested fix for this. With that PR applied, this results in a more useful hail error message exception:. ```; hailtop.batch.exceptions.BatchException: undefined resource 'counts[""tsv.gz.tbi""]'; Hint: resources must be defined within ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13191:299,clear,clearly,299,https://hail.is,https://github.com/hail-is/hail/issues/13191,1,['clear'],['clearly']
Usability,"### What happened?. I wrote a bed2hailmatrix workflow and ran it on Terra platform to convert from plink bed format to hail matrix format. . https://github.com/shengqh/warp/blob/develop/pipelines/vumc_biostatistics/genotype/VUMCBed2HailMatrix.wdl. code is pretty simple:. ```; import hail as hl. hl.init(spark_conf={""spark.driver.memory"": ""~{memory_gb}g""}). #contig_recoding is hard coded for human only; dsplink = hl.import_plink(bed=""~{source_bed}"",; bim=""~{source_bim}"",; fam=""~{source_fam}"",; reference_genome=""~{reference_genome}"",; contig_recoding={; '1': 'chr1',; '2': 'chr2',; '3': 'chr3',; '4': 'chr4',; '5': 'chr5',; '6': 'chr6',; '7': 'chr7',; '8': 'chr8',; '9': 'chr9',; '10': 'chr10',; '11': 'chr11',; '12': 'chr12',; '13': 'chr13',; '14': 'chr14',; '15': 'chr15',; '16': 'chr16',; '17': 'chr17',; '18': 'chr18',; '19': 'chr19',; '20': 'chr20',; '21': 'chr21',; '22': 'chr22',; 'X': 'chrX',; 'Y': 'chrY',; 'MT': 'chrM'}). dsplink.write(""~{target_prefix}"", overwrite=True); ```. When I tested it on the chr12 with 34523 samples and 18377527 variants from one of my dataset in Terra (100 g was allocated for this task), it failed with error message:. ```; java.lang.NegativeArraySizeException: null; at com.esotericsoftware.kryo.util.IdentityObjectIntMap.resize(IdentityObjectIntMap.java:542); at com.esotericsoftware.kryo.util.IdentityObjectIntMap.putStash(IdentityObjectIntMap.java:306); at com.esotericsoftware.kryo.util.IdentityObjectIntMap.push(IdentityObjectIntMap.java:300); at com.esotericsoftware.kryo.util.IdentityObjectIntMap.put(IdentityObjectIntMap.java:162); at com.esotericsoftware.kryo.util.IdentityObjectIntMap.putStash(IdentityObjectIntMap.java:307); at com.esotericsoftware.kryo.util.IdentityObjectIntMap.push(IdentityObjectIntMap.java:300); at com.esotericsoftware.kryo.util.IdentityObjectIntMap.put(IdentityObjectIntMap.java:162); at com.esotericsoftware.kryo.util.MapReferenceResolver.addWrittenObject(MapReferenceResolver.java:41); at com.esotericsoftware.kryo.Kryo.w",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14168:263,simpl,simple,263,https://hail.is,https://github.com/hail-is/hail/issues/14168,1,['simpl'],['simple']
Usability,### What happened?. I'm not sure why but the latest version of asyncio seems to use different event loops for non-default-scoped fixtures from the event loops for the tests. This causes issues with aiohttp.ClientSession which expects the event loop at allocation time to match the event loop at request time. It seems this was [an intentional change](https://github.com/pytest-dev/pytest-asyncio/issues/706#issue-2023749871) in pytest-asyncio 0.23.0. The pytest-asyncio website [documents how to ensure every test uses the same event loop](https://pytest-asyncio.readthedocs.io/en/latest/how-to-guides/run_session_tests_in_same_loop.html) ([archive](https://web.archive.org/web/20240108222050/https://pytest-asyncio.readthedocs.io/en/latest/how-to-guides/run_session_tests_in_same_loop.html)) but this does not appear to ensure that a module or session scoped fixtures share the same event loop as their dependent tests (I've created [an issue](https://github.com/pytest-dev/pytest-asyncio/issues/744) for this). ### Version. 42bf4517e6. ### Relevant log output. _No response_,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14130:595,guid,guides,595,https://hail.is,https://github.com/hail-is/hail/issues/14130,2,['guid'],['guides']
Usability,"### What happened?. In both [`make_variants_matrix_table`](https://github.com/hail-is/hail/blob/main/hail/python/hail/vds/combiner/combine.py#L59-L60) and [`make_variants_stream`](https://github.com/hail-is/hail/blob/main/hail/python/hail/vds/combiner/combine.py#L189-L190), we simply copy the `PGT` to `LPGT` without fixing the indexing. We must properly fix the indexing. ### Version. 0.2.142. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13828:278,simpl,simply,278,https://hail.is,https://github.com/hail-is/hail/issues/13828,1,['simpl'],['simply']
Usability,"### What happened?. In particular the, `test_pool_highcpu_instance_cheapest` test is failing. Azure indeed published new prices today. Ds got cheaper:; ```; | az/vm/Standard_D8ds_v4/spot/eastus/1680307200000 | 0.00000000004422498914930556 | 52602 | 52602 |; | az/vm/Standard_D8ds_v4/spot/eastus/1682899200000 | 0.00000000003538601345486111 | 52640 | 52640 |; ```; Fs got more expensive:; ```; | az/vm/Standard_F8s_v2/spot/eastus/1680307200000 | 0.000000000016796061197916665 | 52629 | 52629 |; | az/vm/Standard_F8s_v2/spot/eastus/1682899200000 | 0.00000000001763156467013889 | 52667 | 52667 |; ```; It's not clear why batch is preferring a D to an F since Fs are still cheaper per core than Ds. Perhaps something about the disk allocation?. ### Version. 1940547d35ddddb084ad52684e36153c1e03a331. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12958:608,clear,clear,608,https://hail.is,https://github.com/hail-is/hail/issues/12958,1,['clear'],['clear']
Usability,"### What happened?. In particular, VDS is doubly sparse:; 1. Sparse columns. Reference blocks are a form of run-length compression of homozygous reference calls.; 2. Sparse alleles. Local alleles is a form of compressed-sparse-column (albeit on arrays rather than matrices). All sparsely encoded allele-indexed fields share the same index array (the ""local alleles"" (`LA`) field). `hl.vds.to_dense_mt` only desifies the sparse columns, it *does not* densify the sparse alleles. This ticket is complete when:; 1. We have written a careful analysis, for ourselves, both of (1) the possible terms for describing sparse columns, sparse allele-indexed fields, densification of columns, and densification of allele-indexed fields as well as of (2) how to structure the code to avoid foot guns, make clear what is being densified, and facilitating selective densification of only what is necessary.; 2. We have merged a (short) RFC realizing part (1).; 3. We have merged a PR the realizes part (2).; 4. We have improved the documentation of the densification and local alleles methods to use this new language and to clearly describe what is and is not densified and the growth of size caused by these densifications. ### Version. 0.2.126. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14009:793,clear,clear,793,https://hail.is,https://github.com/hail-is/hail/issues/14009,2,['clear'],"['clear', 'clearly']"
Usability,"### What happened?. It might also be good to consider a better public-facing name. While nearly all jobs in Batch are scheduled on shared machines, a user sometimes wants a custom machine type that we don't offer shared pools for. The solution in that instance is a ""job-private"" machine, where we spin up a machine that lives and dies along with the single job that's scheduled on it. There is no public interface for this yet, and our few users that use it (for whom this feature was developed) do `j._machine_type = '<gcp-machine-type>'` to opt into this functionality. This feature is gaining more traction and we should create a proper API for it instead of using a private field. This shouldn't be much code at all, but we should spend a little thought on naming and ensure that it is properly documented and discoverable. There should also be a clear distinction in the documentation on the intended use case of this feature, how it differs from shared pools, and the cost penalty of using it (they pay for the lifetime of the instance not just the job). ### Version. 0.2.130. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14500:852,clear,clear,852,https://hail.is,https://github.com/hail-is/hail/issues/14500,1,['clear'],['clear']
Usability,"### What happened?. Job groups are as of writing not generally usable in the public interface, but Query on Batch now uses them to structure actions and stages of computation. For example, a Hail Query session will have one Batch with the following job group structure:. ```; 1. read_table job group; - driver read_table job; 2. execute job group; - driver job; - stage 1 job group; - partition 1 job; - partition 2 job; …; - stage 2 job group; - partition 1 job; - partition 2 job; …; ```. but the current batch UI just has a jobs table listing all of the jobs in order of submission. It would be a huge boon to UX for users to be get a high level view of the structure of their query and to contextualize a failed job through its action > stage > partition structure. This should be an almost entirely front end change. It will likely involve additional HTTP endpoints but should not affect the batch data model or the way QoB engages with it. ### Version. 0.2.131. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14598:63,usab,usable,63,https://hail.is,https://github.com/hail-is/hail/issues/14598,2,"['UX', 'usab']","['UX', 'usable']"
Usability,"### What happened?. Most stored procedures take either a shared or exclusive lock on a relevant row of the `jobs` table near the start of the procedure, but not all. This appears to interact poorly with the `attempts_after_update` trigger as it attempts to take an exclusive lock on rows in the `jobs` table in the below join with the attempt resources tables. It's not clear exactly what the right fix is. It should be simple enough not to join on the jobs table in the `FOR UPDATE`, but we should also evaluate when in our various transactions a lock should be taken on the jobs table and whether it should be an X or S lock. ### Version. 0.2.128. ### Relevant log output. ```shell; ------------------------; LATEST DETECTED DEADLOCK; ------------------------; 2024-02-29 15:07:05 140331971655424; *** (1) TRANSACTION:; TRANSACTION 2486515, ACTIVE 0 sec inserting; mysql tables in use 27, locked 27; LOCK WAIT 16 lock struct(s), heap size 1128, 9 row lock(s), undo log entries 1; MySQL thread id 703, OS thread handle 140330830395136, query id 4745489 10.32.3.39 dgoldste-batch-user executing; INSERT INTO aggregated_billing_project_user_resources_v3 (billing_project, user, resource_id, token, `usage`); SELECT cur_billing_project, cur_user,; attempt_resources.deduped_resource_id,; rand_token,; msec_diff_rollup * quantity; FROM attempt_resources; WHERE attempt_resources.batch_id = NEW.batch_id AND attempt_resources.job_id = NEW.job_id AND attempt_id = NEW.attempt_id; FOR UPDATE; ON DUPLICATE KEY UPDATE `usage` = aggregated_billing_project_user_resources_v3.`usage` + msec_diff_rollup * quantity. *** (1) HOLDS THE LOCK(S):; RECORD LOCKS space id 351 page no 4 n bits 248 index PRIMARY of table `dgoldste-batch`.`instances_free_cores_mcpu` trx id 2486515 lock_mode X locks rec but not gap; Record lock, heap no 176 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d64676f6c647374652d7374616e64617264; asc batch-worker-dgoldste-standard; (total ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14380:370,clear,clear,370,https://hail.is,https://github.com/hail-is/hail/issues/14380,3,"['clear', 'simpl', 'undo']","['clear', 'simple', 'undo']"
Usability,"### What happened?. Notify these threads on completion:; - https://hail.zulipchat.com/#narrow/stream/223457-Hail-Batch-support/topic/exporting.20sites.20only.20VCF/near/376801844. Using QoB, reading out of GCS, we encounter corrupted blocks on this simple pipeline. ```; Caused by: com.github.luben.zstd.ZstdException: Corrupted block detected; at com.github.luben.zstd.ZstdDecompressCtx.decompressByteArray(ZstdDecompressCtx.java:157) ~[zstd-jni-1.5.2-1.jar:1.5.2-1]; at com.github.luben.zstd.Zstd.decompressByteArray(Zstd.java:409) ~[zstd-jni-1.5.2-1.jar:1.5.2-1]; at is.hail.io.ZstdInputBlockBuffer.readBlock(InputBuffers.scala:649) ~[gs:__hail-query-ger0g_jars_f00f916faf783b89cc2fc00bfc3e39df5485d8b0.jar.jar:0.0.1-SNAPSHOT]; at is.hail.io.BlockingInputBuffer.ensure(InputBuffers.scala:384) ~[gs:__hail-query-ger0g_jars_f00f916faf783b89cc2fc00bfc3e39df5485d8b0.jar.jar:0.0.1-SNAPSHOT]; at is.hail.io.BlockingInputBuffer.readByte(InputBuffers.scala:402) ~[gs:__hail-query-ger0g_jars_f00f916faf783b89cc2fc00bfc3e39df5485d8b0.jar.jar:0.0.1-SNAPSHOT]; ....; ```. A simplified version of the script:. ```python3; import hail as hl; import gnomad.utils.sparse_mt. tmp_dir = 'gs://bucket/'; vds_file = 'gs://neale-bge/bge-wave-1.vds'; out = 'gs://bucket/foo.vcf.bgz'. hl.init(default_reference = 'GRCh38',; tmp_dir = tmp_dir). vds = hl.vds.read_vds(vds_file); mt = hl.vds.to_dense_mt(vds); t = gnomad.utils.sparse_mt.default_compute_info(mt); t = t.annotate(info=t.info.drop('AS_SB_TABLE')); t = t.annotate(info = t.info.drop(; 'AS_QUALapprox', 'AS_VarDP', 'AS_SOR', 'AC_raw', 'AC', 'AS_SB'; )); t = t.drop('AS_lowqual'). hl.methods.export_vcf(dataset = t, output = out, tabix = True); ```. [batch-7751958-2713-main.log](https://github.com/hail-is/hail/files/12314207/batch-7751958-2713-main.log). ### Version. 0.2.120. ### Relevant log output. ```shell; Traceback (most recent call last):; File ""/Users/rye/Projects/VQSR/formatting-VQSR-vcf.py"", line 102, in <module>; main(args); File ""/Users/rye/Proj",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13409:249,simpl,simple,249,https://hail.is,https://github.com/hail-is/hail/issues/13409,1,['simpl'],['simple']
Usability,"### What happened?. Reported by https://hail.zulipchat.com/#narrow/stream/123010-Hail-Query-0.2E2-support/topic/Bugs.20of.20weights.20option.20in.20linear_regression_row/near/448000375. Simplified reproducer:; ```python; mt = hl.read_matrix_table('data/1kg.mt'); mt = mt.annotate_rows(weights=1); mt = mt.annotate_cols(y=1); gwas_weights = hl.linear_regression_rows(; y=mt.y,; x=mt.GT.n_alt_alleles(),; covariates=[1.0],; weights=mt.weights,; ); ```; Hits a `KeyError: 'va'` in CSE. Seems to only happen when given a `weights` argument. Why is this not hit by tests like `test_weighted_linear_regression`?. ### Version. 0.2.131-37a5ba226bae. ### Relevant log output. ```shell; ----> 1 gwas_weights = hl._linear_regression_rows_nd(y=mt.y,; 2 x=mt.GT.n_alt_alleles(),; 3 covariates=[1.0],; 4 weights=mt.weights). File <decorator-gen-1734>:2, in _linear_regression_rows_nd(y, x, covariates, block_size, weights, pass_through). File ~/hail/hail/python/hail/typecheck/check.py:585, in _make_dec.<locals>.wrapper(__original_func, *args, **kwargs); 582 @decorator; 583 def wrapper(__original_func: Callable[..., T], *args, **kwargs) -> T:; 584 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 585 return __original_func(*args_, **kwargs_). File ~/hail/hail/python/hail/methods/statgen.py:717, in _linear_regression_rows_nd(y, x, covariates, block_size, weights, pass_through); 714 res = res.select_globals(); 716 temp_file_name = hl.utils.new_temp_file(""_linear_regression_rows_nd"", ""result""); --> 717 res = res.checkpoint(temp_file_name); 719 return res. File <decorator-gen-1234>:2, in checkpoint(self, output, overwrite, stage_locally, _codec_spec, _read_if_exists, _intervals, _filter_intervals). File ~/hail/hail/python/hail/typecheck/check.py:585, in _make_dec.<locals>.wrapper(__original_func, *args, **kwargs); 582 @decorator; 583 def wrapper(__original_func: Callable[..., T], *args, **kwargs) -> T:; 584 args_, kwargs_ = check_all(__original_func, args,",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14594:186,Simpl,Simplified,186,https://hail.is,https://github.com/hail-is/hail/issues/14594,1,['Simpl'],['Simplified']
Usability,"### What happened?. Since we guarantee a job will run at least once, there are two issues that can happen:. 1. A user can write a pipeline in which two jobs race to write the same file, e.g.; ```; j = b.new_job(); j.command('echo hello > {j.out}'); j.write_output(j.out, ""gs://bucket/final-output""); ```; 2. Or, a clever user can avoid this race with some randomness:; ```; j = b.new_job(); j.command('echo hello gsutil cp - gs://bucket/final-output-$RANDOM'); ```. The former is a really common pattern and a bit of a footgun! The latter is rare (I don't know anyone who does it) and hard to work with: how would you know the output file of the *successful* attempt?. Hail should provide some mechanism for a user to get the list of successful attempts and their outputs. One simple option is to include some kind of seeded randomness which the user can access and to return either the seed or all the draws of the successful attempt for each job in `/jobs` or for the one job in `/job/{job_id}`. For example, consider:. ```; j = b.new_job(); j.command('echo hello gsutil cp - gs://bucket/final-output-$(/hail-random-str)'); ```. Where `/hail-random-str` is a binary we mount into the container that randomly generates numbers seeded by `(batch id, job id, attempt id)`. Hail should use the same randomness to ensure that `write_output` is reliable. We might also want a way to automatically remove the output files of the non-successful (e.g. preempted) attempts. ### Version. 0.2.120. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13502:777,simpl,simple,777,https://hail.is,https://github.com/hail-is/hail/issues/13502,1,['simpl'],['simple']
Usability,"### What happened?. The `hailtop` package contains some public interfaces like the `hailtop.batch` module, but also some internal utility modules that are subject to change without warning, like `hailtop.utils` or `hailtop.auth`. It is non-obvious which modules are considered ""private"" and therefore will likely encounter breaking changes, leading to unfortunate incompatibilities like with [changing the name of the rich progress bar](https://github.com/hail-is/hail/pull/13832#issuecomment-1788106993). We should do some investigative work to discern what functionality in `hailtop` people (primarily the `gnomad` team) depend on and create stable interfaces for that code, then mark the rest as being private or more obviously subject to change. ### Version. 0.2.126. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14007:423,progress bar,progress bar,423,https://hail.is,https://github.com/hail-is/hail/issues/14007,1,['progress bar'],['progress bar']
Usability,"### What happened?. The accounting term for what we call a resource is a ""SKU"". We need to update our SQL and front end to use this standard terminology so as to simplify interactions with financial professionals. ### Version. 0.2.124. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13791:162,simpl,simplify,162,https://hail.is,https://github.com/hail-is/hail/issues/13791,1,['simpl'],['simplify']
Usability,"### What happened?. The deduped_resource_id and resource_id columns should not both exist. Currently, when you add a new resource you have to first insert it (with a null deduped_resource_id) and then update the deduped_resource_id with whatever auto increment value your transaction won. We should collapse these columns (and keep an ""old_resource_id"", if necessary) so that our code base is simple to understand. ### Version. 0.2.122. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13657:393,simpl,simple,393,https://hail.is,https://github.com/hail-is/hail/issues/13657,1,['simpl'],['simple']
Usability,"### What happened?. This issue is complete when:; 1. We have merged a PR that provides a `hl.vds.export_svcr_vcf` with clear documentation and examples. The examples should include a `show` of the VDS variant and reference data as well as a `cat` of the SVCR VCF.; 2. We have merged a PR that provides `hl.vds.import_svcf_vcf`; 3. These methods have been expanded with a `split=True`/`=False` parameter which allow the user to choose between a two VCF and one VCF representation. NB: We have decided that SVCR-VCF should use ""LEN"" not ""END"". ### Version. 0.2.126. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14010:119,clear,clear,119,https://hail.is,https://github.com/hail-is/hail/issues/14010,1,['clear'],['clear']
Usability,"### What happened?. To understand a running pipeline, I need realtime feedback on the profile, not just the final profile at the end of the job. I think `dump` will generate a flame graph on demand. ### Version. 0.2.126. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14073:70,feedback,feedback,70,https://hail.is,https://github.com/hail-is/hail/issues/14073,1,['feedback'],['feedback']
Usability,"### What happened?. Try running a job with `_machine_type: 'n1-highmem-64'`. This is necessary to get enough memory for some larger jobs (> ~200GB). Startup on the batch worker fails because the job is calculating how many theoretical network namespaces it could support (4 per CPU, 64 CPUS, plus some for JVMs), but not considering that the IPv4 schema puts a hard limit of 255 on namespaces if only one subnet value is changing each time. ### Version. Live 7/30/24. ### Relevant log output. _No response_. ### Security considerations:. Low risk of impacting security. High CPU machine types are not materially different from others with respect to security considerations, and the bug is a simple logic error.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14644:692,simpl,simple,692,https://hail.is,https://github.com/hail-is/hail/issues/14644,1,['simpl'],['simple']
Usability,"### What happened?. Using this image https://hub.docker.com/layers/gneak123/guide_browser/latest/images/sha256-8ca2a921828cd147e86519051a0da68522983b7b49f22e1280c83ab9c56b3129?context=explore, deploy a 1 pod deployment into a fresh namespace and serve it at guide-analysis.hail.is. It need not be in build.yaml nor in the infrastructure (just like Duncan's stuff isn't). We're just hosting it as a service to the lab. ### Version. 0.2.126. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14067:258,guid,guide-analysis,258,https://hail.is,https://github.com/hail-is/hail/issues/14067,1,['guid'],['guide-analysis']
Usability,"### What happened?. We [encode literals from Python as JSON](https://github.com/hail-is/hail/blob/main/hail/python/hail/ir/ir.py#L3637). This dramatically inflates the encoding of `hl.tarray(hl.tstruct(...))` because the struct fields are repeated. We should instead use `EncodedLiteral`. There are some subtleties:. 1. We need to implement an encoder in Python. We currently have a decoder (`_from_encoding` and `_convert_from_encoding`) which implements `{""name"":""StreamBufferSpec""}`. We should write an encoder for that.; 2. Our IR is plaintext, so we'll need to encode this binary encoding as base64 so it may be included in plaintext.; 3. `EncodedLiteral` is not currently parsable (it throws `UnsupportedOperationException` in `ir/Parser.scala`). As mentioned in (2), we'll need to implement parsing. For (3), just represent the `AbstractTypedCodecSpec` in terms of a virtual type ~~and a buffer spec~~ (assume the buffer spec is StreamBufferSpec). When parsing, we can construct an `EncodedLiteral` with the base64-decoded value and a codec spec we construct like this:; ```scala; val codec = TypedCodecSpec(; EType.fromTypeAllOptional(virtualType),; virtualType,; BufferSpec.parseOrDefault(bufferSpecString); ); ```. For (1), it should be simple enough to invert the logic from `_convert_from_encoding` to encode rather than decode. Write tests that round-trip in Python for lots of types. . ---. See also https://github.com/hail-is/hail/issues/13748. ### Version. 0.2.142. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13757:1247,simpl,simple,1247,https://hail.is,https://github.com/hail-is/hail/issues/13757,1,['simpl'],['simple']
Usability,"### What happened?. We expect the matrix table abstraction to break down at 2M+ samples. Consider that each row now has 2M entries. Even if all the RAM of a highmem machine was made available to row processing, we only have 6.5kB per sample. This is a fair bit of memory! But many reasonable Hail pipelines will generate enough garbage to overflow this. We must develop a block-partitioned matrix table. Instead of each partition containing the entries for every column and a subset of rows, each partition will contain the entries for a subset of rows and columns. While there are many ways to do this partitioning, a simple and workable first try is a ""grid""-like partitioning. Every matrix table has a set of row-key intervals and column-key intervals which define the partitioning. The bounds of the partitions are given by the cross product of these sets of intervals. The visual conception of the partitioning of this matrix table (with its globals, column margin data, row margin data, and entry data) might look like:. ```; +--+ +-----+--+--++---+------+------+; | | | | | || | | |; +--+ +-----+--+--++---+------+------+. ck1 ck2 ...; +--+ rk1 +-----+--+--++---+------+------+; | | | | | || | | |; | | | | | || | | |; +--+ rk2 +-----+--+--++---+------+------+; | | | | | || | | |; +--+ ... +-----+--+--++---+------+------+; | | | | | || | | |; | | | | | || | | |; | | | | | || | | |; +--+ +-----+--+--++---+------+------+; | | | | | || | | |; | | | | | || | | |; +--+ +-----+--+--++---+------+------+; +--+ +-----+--+--++---+------+------+; | | | | | || | | |; | | | | | || | | |; | | | | | || | | |; +--+ +-----+--+--++---+------+------+; ```. The first row-key interval is `[rk1, rk2)`. The first col-key interval is `[ck1, ck2)`. These intervals are define a ""rectangle"" corresponding to the first partition. . All the partitions in the fourth partition column are empty (perhaps these column keys are absent in this dataset). Likewise, all the partitions in the fifth partition row are emp",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13800:619,simpl,simple,619,https://hail.is,https://github.com/hail-is/hail/issues/13800,1,['simpl'],['simple']
Usability,"### What happened?. We have reported to their GitHub, but we don't have a simple enough repro for them to make progress. https://github.com/Azure/azure-sdk-for-java/issues/35125. Personal correspondence with some MSFT researchers suggested there could be an issue with threading:; > It sort of reminds me of an issue we saw with Cromwell where their old akka pool code caused a bunch of unexpected network behavior that broke their API in certain cases. I've asked if BlobServiceClient is thread-safe or not. We share an object of that class, but none of the things it produces (e.g. blobs). We know that the java.io libraries can improperly drop an HTTP response if it is followed by a TCP RST. In particular, we've seen this happen when a server is load shedding and sends an HTTP ""429 Too Many Requests"" rapidly followed by a TCP RST. This might explain the ""Connection reset"" errors that we sometimes see. We have fewer intuitions about the ""Stream is already closed"". That specific error was reported to Azure in the aforementioned GitHub issue. We treat both stream is closed and connection reset as ""limited retry"" errors. We might retry too quickly. Our initial delay is `100ms * x` where `x` is drawn uniformly from `[0, 1]`. Perhaps we should try an initial delay of at least 1s? . For example, [Azure gives as an example retrying after 2s, 4s, 10s, and 30s](https://learn.microsoft.com/en-us/azure/storage/blobs/storage-performance-checklist#timeout-and-server-busy-errors). Google's [code examples](https://cloud.google.com/storage/docs/retry-strategy#client-libraries_1) suggest an initial delay of 1s with a multiplier of 2. AWS seems to use 500ms as the [default base backoff for ""throttled"" exceptions](https://github.com/aws/aws-sdk-java/blob/master/aws-java-sdk-core/src/main/java/com/amazonaws/retry/PredefinedBackoffStrategies.java#L39). ### Version. 0.2.120. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13351:74,simpl,simple,74,https://hail.is,https://github.com/hail-is/hail/issues/13351,3,"['intuit', 'learn', 'simpl']","['intuitions', 'learn', 'simple']"
Usability,"### What happened?. [SAIGE](https://github.com/weizhouUMICH/SAIGE) and its competitor [REGENIE](https://rgcgithub.github.io/regenie/) are the standard bearers for modern GWAS. Hail should expose SAIGE within the Hail Query language. The interface should roughly match `hl.linear_regression_rows`. A Batch pipeline would serve the needs of Broadies (and, indeed, such a pipeline already exists) but has two downsides:; 1. There is substantial I/O involved in exporting the data from Hail-native formats to SAIGE-compatible formats.; 2. Non-Broadies cannot use this pipeline. Query language support for SAIGE would transform the accessibility of SAIGE by making it usable at scale by anyone with access to Hail, which is basically anyone with a large dataset (e.g. [DNANexus](https://med.stanford.edu/gbsc/projects/vapahcs.html), [AoU RWB](https://support.researchallofus.org/hc/en-us/articles/6090679838100-How-to-Work-with-All-of-Us-Genomic-Data-Hail-Plink-), [MVP](https://med.stanford.edu/gbsc/projects/vapahcs.html), [FinnGen](https://www.medrxiv.org/content/10.1101/2022.03.03.22271360v1.full)). There are two options:; 1. Determine and implement the linear algebraic primitives necessary for SAIGE.; 2. Compile and link directly against SAIGE. Expose these functions, via JNI, to the Hail Query language. ### Version. 0.2.120. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13442:663,usab,usable,663,https://hail.is,https://github.com/hail-is/hail/issues/13442,1,['usab'],['usable']
Usability,"### What happened?. `add_liftover` fails when provided a local chain file on Dataproc. The error says the file does not exist, even though it does. . ## To reproduce; This is run in my GCP virtual machine following a simple example from [your documentation](https://github.com/hail-is/hail/blob/67801dfc66b504a7d49daa53f7ec6d22c1194585/hail/python/hail/genetics/reference_genome.py#L467):; ```sh; gsutil cp gs://hail-common/references/grch37_to_grch38.over.chain.gz .; ```; ```py; import hail as hl; from pathlib import Path. local_chain_file = 'grch37_to_grch38.over.chain.gz'. if Path(local_chain_file).is_file():; rg37 = hl.get_reference('GRCh37'); rg38 = hl.get_reference('GRCh38'); rg37.add_liftover(local_chain_file, rg38); ```; I've reproduced the bug trying with relative/absolute paths, and also referring to HDFS and the local filesystem. None of them worked on the GCP VM, however reading local chain files works on my computer. ### Version. 0.2.126-ee77707f4fab. ### Relevant log output. ```shell; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); <ipython-input-17-ef14f8017832> in <cell line: 3>(); 4 rg37 = hl.get_reference('GRCh37'); 5 rg38 = hl.get_reference('GRCh38'); ----> 6 rg37.add_liftover(local_chain_file, rg38); 7. <decorator-gen-150> in add_liftover(self, chain_file, dest_reference_genome). /opt/conda/miniconda3/lib/python3.10/site-packages/hail/typecheck/check.py in wrapper(__original_func, *args, **kwargs); 585 def wrapper(__original_func: Callable[..., T], *args, **kwargs) -> T:; 586 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 587 return __original_func(*args_, **kwargs_); 588; 589 return wrapper. /opt/conda/miniconda3/lib/python3.10/site-packages/hail/genetics/reference_genome.py in add_liftover(self, chain_file, dest_reference_genome); 507 """"""; 508; --> 509 Env.backend().add_liftover(self.name, chain_file, dest_reference_genome.name);",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13993:217,simpl,simple,217,https://hail.is,https://github.com/hail-is/hail/issues/13993,1,['simpl'],['simple']
Usability,"### What happened?. `hl.maximal_independent_set` should return the same independent set regardless of the ordering of the input table. gnomAD team reports that the returned set can differ depending on whether or not the input table had been written or came directly from PC-Relate. I have yet to create a simple reproducible example. Permuting the entries in this array does not change the output. I always get 'a' and 'b'. I suspect this is because what really matters is the order in which we traverse the entries of the multi map which depends on the hash of the nodes. I think a durable fix might be to eliminate the MultiMap, insert all the nodes into the binary heap, then increment priority for each edge detected. This will perform more reflows of the heap, but eliminates the non-determinism of MultiMap iteration order. ```; import hail as hl; ht = hl.Table.parallelize([; hl.Struct(i=hl.Struct(s=x[0]), j=hl.Struct(s=x[1])); for x in [('c', 'a'), ('a', 'b'), ('b', 'c'), ]; ]); hl.maximal_independent_set(ht.i, ht.j, False).collect(); ```. ### Version. 0.2.122. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13635:305,simpl,simple,305,https://hail.is,https://github.com/hail-is/hail/issues/13635,1,['simpl'],['simple']
Usability,"### What happened?. e.g. see an attempt to use build_python_image to execute some Hail code in the cloud: https://hail.zulipchat.com/#narrow/stream/223457-Hail-Batch-support/topic/Error.20in.20QoB.3A.20unknown.20opcode. We should provide users with a simple and straightforward project structure and mechanism for working with a local Python project, its Python dependencies, including, possibly, Hail. It seems to me that a relatively straightforward way to do this would be to recommend the user create a normal, installable python package (and provide instructions on doing so), and then to provide some Hail Batch client functionality that builds an image based on `hailgenetics/hail` (if Hail is required) or `hailgenetics/python-dill` or a user-provided base image (which must have Python, but we'll ensure dill gets installed). The Dockerfile should look something like:. ```; FROM {base_image}; COPY {users_project_dir} /users_project; RUN pip install /users_project; ```. And then that image can be used as the python_default_image (maybe also the default_image?). ### Version. 0.2.117. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13161:251,simpl,simple,251,https://hail.is,https://github.com/hail-is/hail/issues/13161,1,['simpl'],['simple']
Usability,"### What happened?. https://batch.hail.is/batches/8083756/jobs/72. `test_hail_in_notebook` just executed `jupyter` on `test_hail_in_notebook.ipynb`. The notebook contains one cell:. ```python3; import hail as hl; import os; hl.utils.range_table(1).write(f'{os.environ[""HAIL_TEST_STORAGE_URI""]}/test_hail_in_notebook.ht'); from helpers import resource; hl.read_table(resource('backward_compatability/1.7.0/table/9.ht')).count(); ```. This is not idempotent because `HAIL_TEST_STORAGE_URI` is randomly generated once per job not once per attempt. In particular, the job specification itself has this as an environment variable. In the [this PR test job](https://batch.hail.is/batches/8083756/jobs/72), the test job gets preempted and rescheduled. Upon rescheduling, the hail table already exists, causing the test to fail. The fix is simple: add a random string to the written Hail table file. ### Version. 0.2.126. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13994:832,simpl,simple,832,https://hail.is,https://github.com/hail-is/hail/issues/13994,1,['simpl'],['simple']
Usability,"###Hail version; N/A Kubernetes v1 API, cluster version 1.10.11. ### What you did; Attempted to schedule a pod through app.hail.is. Waited ~20 minutes. ### What went wrong (all error messages here, including the full java stack trace); Simply stuck in Not PodScheduled (status.condition contains an entry of {status: False, type: PodScheduled} ). This status is also verified using kubectl get pods -w. Total number of pods did not seem onerous by quantity alone, so this must be an issue of resource utilization by some of these pods. ```sh; NAME READY STATUS RESTARTS AGE; apiserver-8658d59d48-r8p6w 1/1 Running 0 9d; auth-gateway-deployment-7d7cf8846f-l5m9b 1/1 Running 0 14h; batch-deployment-6448f84d9c-gxn2c 1/1 Running 0 1h; dk-test-58dffcd944-9xkkx 1/1 Running 0 11d; frontend-766c875db4-cmpvx 1/1 Running 0 8d; gateway-deployment-78c4dd64f5-tdnnc 1/1 Running 0 1h; hail-ci-deployment-5744fd6964-s29xb 1/1 Running 0 1h; image-fetcher-bkpcc 1/1 Running 0 23m; image-fetcher-gb9rs 1/1 Running 0 26m; image-fetcher-glj5p 1/1 Running 0 25m; image-fetcher-kjd7z 1/1 Running 0 23m; image-fetcher-vhv74 1/1 Running 0 25m; image-fetcher-zppvc 1/1 Running 0 24m; notebook-api-deployment-7bb85bfd-z6mvp 1/1 Running 0 12h; notebook-deployment-8546dbcb7c-zfc4r 1/1 Running 0 1h; notebook-worker-2lt2l 1/1 Running 0 46m; notebook-worker-77nqq 1/1 Running 0 1h; notebook-worker-fljx6 1/1 Running 0 3h; notebook-worker-gm6lz 1/1 Running 0 36m; notebook-worker-kj7bb 1/1 Running 0 3h; notebook-worker-n8dgv 0/1 Pending 0 4m; notebook-worker-pshdf 1/1 Running 0 35m; scorecard-deployment-654f774444-vwpzr 1/1 Running 0 51m; site-deployment-6789bd6c5b-lxbxk 1/1 Running 0 51m; spark-master-6f7678b449-jcbnp 1/1 Running 0 9d; spark-worker-569866dff7-l452k 1/1 Running 0 9d; spark-worker-569866dff7-xzmx4 1/1 Running 0 9d; upload-658d7f8c7d-gvj4h 1/1 Running 0 51m; web-deployment-bc6497cdb-qfc9g 1/1 Running 0 2h; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5269:236,Simpl,Simply,236,https://hail.is,https://github.com/hail-is/hail/issues/5269,1,['Simpl'],['Simply']
Usability,"#14056 added a new optional field to the deploy config, `base_path` which is intended to phase out `default_namespace`. But for backwards compatibility reasons we cannot yet remove `default_namespace`. This should all work fine without breaking any workflows like switching back and forth between namespaces so long as `base_path` is not explicitly set in a developer's deploy config. But `hailctl dev config set <property> <value>` does not just set a single property, it loads the deploy config, sets the property, and then writes the whole deploy config back. If the deploy config does anything with default values, which it now does with `base_path`, this round trip does not work. Another simpler example is that currently in main, the following will make two changes to a deploy config not one:. ```; # deploy config of {'location': 'external', 'domain': 'hail.is', 'default_namespace': 'default'}; HAIL_DOMAIN=foo hailctl dev config set location gce. # deploy config will now read {'location': 'gce', 'domain': 'foo', 'default_namespace': 'default'}; ```. This PR should change `hailctl dev config set` so that the only changes that are made to the deploy config are the single property/value change described in the command.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14169:694,simpl,simpler,694,https://hail.is,https://github.com/hail-is/hail/pull/14169,1,['simpl'],['simpler']
Usability,"#4659 teaches CI to recover from a build job gone missing, but; I neglected to teach CI how to recover from a deploy job gone; missing. This follows the same strategy but for deploy jobs. If a deploy job is not found in the list of refreshed jobs; it is simply removed from the deploy_jobs map. The next heal; stage of CI will kick off a new batch job for whatever the; latest undeployed SHA is.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4683:254,simpl,simply,254,https://hail.is,https://github.com/hail-is/hail/pull/4683,1,['simpl'],['simply']
Usability,"#9425 fixes the bug that caused us to need to checkpoint twice. This PR removes the second checkpoint. For the `hl.balding_nichols_model(20, 6000, 50000)`, 2 iterations test I've been doing, this gets us down to more like 35 seconds, as opposed to ~40. Current hail PCA takes more like 16 seconds, so we are getting closer (though again, it's not clear that 2 is going to be the right number of iterations in the end).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9434:347,clear,clear,347,https://hail.is,https://github.com/hail-is/hail/pull/9434,1,['clear'],['clear']
Usability,"#9634 Introduced a large performance regression in the `linear_regression_rows_nd` benchmark (making it about 4x slower). This PR fixes that by doing two things:. 1. Move all the global into one single `annotate_globals` expression, so that CSE can work properly. This required fixing a bug in some ndarray expressions that were not correctly tracking their source tables. To make sure I was only referencing the global versions of this computed things, rather accidentally recomputing, I wrapped the global setup in a function to scope the variables. This improvement was minor, didn't hit the real root of the problem. 2. Much more significantly, and not 100% clear why: `process_y_group` is now a function that returns a python dictionary, instead of a hail struct. I can guess that the allocation required by making a struct was wasteful, but it seems crazy that it was ""make the benchmark 4x slower"" amounts of wasteful. . While this is not user facing yet, would be good to get this in before an eventual 0.2.60 release if we want to avoid benchmarks regressing between versions.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9666:662,clear,clear,662,https://hail.is,https://github.com/hail-is/hail/pull/9666,1,['clear'],['clear']
Usability,$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.colle,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7847,Simpl,Simplify,7847,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$$anonfun$is$hail$expr$ir$FreeVariables$$compute$1$1.apply(FreeVariables.scala:27); at is.hail.expr.ir.FreeVariables$$anonfun$is$hail$expr$ir$FreeVariables$$compute$1$1.apply(FreeVariables.scala:24); at scala.collection.Iterator$$anon$11.next(Iterator.scala:410); at scala.collection.Iterator$class.foreach(Iterator.scala:891); at scala.collection.AbstractIterator.foreach(Iterator.scala:1334); at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157); at scala.collection.AbstractIterator.foldLeft(Iterator.scala:1334); at scala.collection.TraversableOnce$class.fold(TraversableOnce.scala:212); at scala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:6839,Simpl,Simplify,6839,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,"(x).; 0, 0); ```; but I'm not sure I really like any of them.; * the scoping for `Recur` is difficult to check and enforce.; * It's difficult to check if a TailLoop is invalidly attempting to recur a function from a different loop (in a nested environment), except by the type signature. I think I could give each loop a name so that `Recur` unambiguously refers to a loop defined in the surrounding scope, mostly treating `Recur` as something of a function reference.; * The code generation is rather inconsistent, since the `Recur` node technically has the same type as the return type of the function, but the code generated needs to be a jump node with no actual value (which makes the generated EmitTriplet look a lot like it has type TVoid!); * @patrick-schultz proposed a similar design, but with two additional types to make the difference between the type of the `Recur` concept and the actual return type more explicit. I have not yet implemented it because I think it might make this python interface more difficult to support, and I rather like its simplicity.; * @patrick-schultz and I were talking about rewriting loops in the stream interface.; * We can only emit calls to recur in the same method that the original loop is defined in, because we are using jumps to implement them. This means we need to know that we are not going to wrap any calls that contain `Recur` in a method. I don't believe there are any cases where we wrap `If` conditions or `Let` bodies in methods, so this is fine for now, but we're not enforcing it in any way. I believe that the iteration for the stream codegen stuff will always be in the same method, so we wouldn't have to deal with this specially there.; * I've implemented a pretty simple version of here, as part of the `Streamify` pass. I believe it should handle all the valid tail-recursive cases, but I don't think we want to use it right now since it'll always allocate (as opposed to not allocating if all state is primitive). We could potenti",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7614:2130,simpl,simplicity,2130,https://hail.is,https://github.com/hail-is/hail/pull/7614,1,['simpl'],['simplicity']
Usability,") (<a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3"">e0c5fc0</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/444"">#444</a>) (<a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce"">97e32b6</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e1506fa9030776353878048ce562c53bf6ccf7bf"">e1506fa</a>)</li>; </ul>; <h3>Miscellaneous Chores</h3>; <ul>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e3cac888d40bf67af11e57b74615b0c3b8e8aa3e"">e3cac88</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>) (<a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544"">8a67b73</a>)</li>; </ul>; <h2><a href=""https://www.github.com/googleapis/python-logging/compare/v2.6.0...v2.7.0"">2.7.0</a> (2021-11-02)</h2>; <h3>Features</h3>; <ul>; <li>add context manager support in client (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/415"">#415</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/f5af16439807a0954ee78fa91cb69b9493b80176"">f5af164</a>)</li>; <li>added support for iam AuditData proto (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/396"">#396</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use struct",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:9773,guid,guide,9773,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['guid'],['guide']
Usability,") (<a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3"">e0c5fc0</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/444"">#444</a>) (<a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce"">97e32b6</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e1506fa9030776353878048ce562c53bf6ccf7bf"">e1506fa</a>)</li>; </ul>; <h3>Miscellaneous Chores</h3>; <ul>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e3cac888d40bf67af11e57b74615b0c3b8e8aa3e"">e3cac88</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>) (<a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544"">8a67b73</a>)</li>; </ul>; <h2>v2.7.0</h2>; <h3>Features</h3>; <ul>; <li>add context manager support in client (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/415"">#415</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/f5af16439807a0954ee78fa91cb69b9493b80176"">f5af164</a>)</li>; <li>added support for iam AuditData proto (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/396"">#396</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use structured logging on GCF with python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/pyt",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:4340,guid,guide,4340,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['guid'],['guide']
Usability,") [""{\""path\"":\""gs://aou_analysis/250k/data/utils/aou_mt_sample_qc_250k.ht\""}""] ; !191 = MakeStruct(); !192 = WriteMetadata(!191) [""{\""path\"":\""gs://aou_analysis/250k/data/utils/aou_mt_sample_qc_250k.ht/globals\""}""] ; !193 = MakeStruct(); !194 = WriteMetadata(!193) [""{\""path\"":\""gs://aou_analysis/250k/data/utils/aou_mt_sample_qc_250k.ht/cols\""}""] ; !195 = MakeStruct(); !196 = WriteMetadata(!195) [""{\""path\"":\""gs://aou_analysis/250k/data/utils/aou_mt_sample_qc_250k.ht/rows\""}""] ; !197 = MakeStruct(); !198 = WriteMetadata(!197) [""{\""path\"":\""gs://aou_analysis/250k/data/utils/aou_mt_sample_qc_250k.ht/entries\""}""]; !199 = Begin(!154, !160, !166, !169, !172, !176, !188, !190, !192, !194, !196, !198); Begin(!11, !199); ```. </details>. Notice that, after lowering to CDAIR, the `WriteMetadata` for; `gs://aou_analysis/250k/data/utils/aou_mt_sample_qc_250k.ht`, `....ht/globals`, `....ht/cols`,; `...ht/rows`, and `...ht/entries` all appear thrice. The error message is clearly coming from; `WriteMetadata` writing into the root of the Hail Table. ```; !1 = MakeStruct(); !2 = WriteMetadata(!1) [""{\""path\"":\""gs://aou_analysis/250k/data/utils/aou_mt_sample_qc_250k.ht\"",\""overwrite\"":false,\""refs\"":{\""rowType\"":\""Struct{locus:Locus(GRCh38),alleles:Array[String],filters:Set[String],a_index:Int32,was_split:Boolean,variant_qc:Struct{gq_stats:Struct{mean:Float64,stdev:Float64,min:Float64,max:Float64},call_rate:Float64,n_called:Int64,n_not_called:Int64,n_filtered:Int64,n_het:Int64,n_non_ref:Int64,het_freq_hwe:Float64,p_value_hwe:Float64,p_value_excess_het:Float64},info:Struct{AC:Array[Int32],AF:Array[Float64],AN:Int32,homozygote_count:Array[Int32]},`the entries! [877f12a8827e18f61222c6c8c5fb04a8]`:Array[Struct{GT:Call,GQ:Int32,RGQ:Int32,FT:String,AD:Array[Int32]}]}\"",\""key\"":[\""locus\"",\""alleles\""],\""globalType\"":\""Struct{__cols:Array[Struct{s:String,mt_sample_qc:Struct{gq_stats:Struct{mean:Float64,stdev:Float64,min:Float64,max:Float64},call_rate:Float64,n_called:Int64,n_not_called:Int64",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13809:42446,clear,clearly,42446,https://hail.is,https://github.com/hail-is/hail/issues/13809,1,['clear'],['clearly']
Usability,"* Remove `UnpartitionedRVD`; * Combine `OrderedRVD` and `RVD` into one class, called `RVD`; * With the hierarchy collapsed, reorganize and simplify new `RVD` API. This touches a lot of lines, so I was careful to organize it into small commits, with good commit descriptions. In particular, ""reorder OrderedRVD methods"" *only* reorders, and ""OrderedRVD -> RVD"" *only* renames. Those two account for most of the line-change count, other than deleted files.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4354:139,simpl,simplify,139,https://hail.is,https://github.com/hail-is/hail/pull/4354,1,['simpl'],['simplify']
Usability,* compiled iterators use the wrong region; * TableRange generates IR that does not flag itself as memory managed; * TableParallelize generates IR that does not flag itself as memory managed; * RepartitionNoShuffle generates a mixed flatMap; make it all memory managed for simplicity.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10416:272,simpl,simplicity,272,https://hail.is,https://github.com/hail-is/hail/pull/10416,1,['simpl'],['simplicity']
Usability,* don't use inefficient unapply; * Cache the returnType of AggSignatures so they persist through copies. ```; Name Ratio Time 1 Time 2; ---- ----- ------ ------; table_big_aggregate_compilation 85.6% 4.113 3.519; ----------------------; Geometric mean: 85.6%; Simple mean: 85.6%; Median: 85.6%; ```,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7355:260,Simpl,Simple,260,https://hail.is,https://github.com/hail-is/hail/pull/7355,1,['Simpl'],['Simple']
Usability,"* fixed finally. * evict Spark BlockMatrix and friends. * remove old test suite. * a bunch more cleanups. * simplify grid partitioner. * fix test. * remove unneeded try-catches. * organization. * add a test suite for HBM. * help closure serializer. * use correct aggregation method, add test. * test+fix bug grid partitioner. * wip zippartitions. * teach tests to tolerate NaNs. * fix test. * kinda works again. * remove unnecessary trys. * handle transposition in map*. * clean up imports. * standardize langauge. * bunch of comments addressed. * improve error message. * fix python. * rename HailBlockMatrix -> BlockMatrix. * a bunch of comments addressed. * more comments addressed. * make test comment not confusing. * fix rebase error. * fixes. * fix. * fix bug in rirm. * gotta get that transpose right. * test fixes. * dan is a dummy. * commits got lost for sure. * realize transpose when writing. * add indexed tests for map2?WithIndex when transposed. * use Gen.denseMatrix. * use Gen.denseMatrix. * final fixes. * toLocalMatrix returns Spark matrix for backwards compatibility. * avoid an array copy. the BDMs produced by BlockMatrix.toLocalMatrix are in a; ""normal form"", i.e. offset 0, column-major stride, non-; transposed. Given this assumption we can quickly produce a; Spark-style local matrix. * dan is a dummy. * collect-in-order. collect doesn't guarantee order. * do not use BDM.data naively. This was the true root casue: an incorrect test. * fix python interface. * in python, java fields are methods. note the addition of parentheses",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2329:108,simpl,simplify,108,https://hail.is,https://github.com/hail-is/hail/pull/2329,1,['simpl'],['simplify']
Usability,**This is not meant to be merged yet!**. I want to get feedback on the structure I have in place before I fill in all of the docstrings and parameter descriptions. I also need to clean up some of the code. The ``fet`` function and ``Variant`` object methods are the prototypes.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1271:55,feedback,feedback,55,https://hail.is,https://github.com/hail-is/hail/pull/1271,1,['feedback'],['feedback']
Usability,", using the class's values for <code>cls.identchars</code> and <code>cls.identbodychars</code>. Now Unicode-aware parsers that formerly wrote:</p>; <pre><code>ppu = pyparsing.unicode; ident = Word(ppu.Greek.identchars, ppu.Greek.identbodychars); </code></pre>; <p>can now write:</p>; <pre><code>ident = ppu.Greek.identifier; # or; # ident = ppu.Ελληνικά.identifier; </code></pre>; </li>; <li>; <p>Reworked <code>delimited_list</code> function into the new <code>DelimitedList</code> class. <code>DelimitedList</code> has the same constructor interface as <code>delimited_list</code>, and in this release, <code>delimited_list</code> changes from a function to a synonym for <code>DelimitedList</code>. <code>delimited_list</code> and the older <code>delimitedList</code> method will be deprecated in a future release, in favor of <code>DelimitedList</code>.</p>; </li>; <li>; <p>Added new class method <code>ParserElement.using_each</code>, to simplify code that creates a sequence of <code>Literals</code>, <code>Keywords</code>, or other <code>ParserElement</code> subclasses.</p>; <p>For instance, to define suppressable punctuation, you would previously write:</p>; <pre><code>LPAR, RPAR, LBRACE, RBRACE, SEMI = map(Suppress, &quot;(){};&quot;); </code></pre>; <p>You can now write:</p>; <pre><code>LPAR, RPAR, LBRACE, RBRACE, SEMI = Suppress.using_each(&quot;(){};&quot;); </code></pre>; <p><code>using_each</code> will also accept optional keyword args, which it will pass through to the class initializer. Here is an expression for single-letter variable names that might be used in an algebraic expression:</p>; <pre><code>algebra_var = MatchFirst(; Char.using_each(string.ascii_lowercase, as_keyword=True); ); </code></pre>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pyparsing/pyparsing/blob/master/CHANGES"">pyparsing's changelog</a>.</em></p>; <blockq",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13334:2949,simpl,simplify,2949,https://hail.is,https://github.com/hail-is/hail/pull/13334,2,['simpl'],['simplify']
Usability,",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""42.0.2""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-3315975"",""SNYK-PYTHON-CRYPTOGRAPHY-3316038"",""SNYK-PYTHON-CRYPTOGRAPHY-3316211"",""SNYK-PYTHON-CRYPTOGRAPHY-5663682"",""SNYK-PYTHON-CRYPTOGRAPHY-5777683"",""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750"",""SNYK-PYTHON-CRYPTOGRAPHY-5914629"",""SNYK-PYTHON-CRYPTOGRAPHY-6036192"",""SNYK-PYTHON-CRYPTOGRAPHY-6050294"",""SNYK-PYTHON-CRYPTOGRAPHY-6092044"",""SNYK-PYTHON-CRYPTOGRAPHY-6126975"",""SNYK-PYTHON-CRYPTOGRAPHY-6210214"",""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use After Free](https://learn.snyk.io/lesson/use-after-free/?loc&#x3D;fix-pr); 🦉 [Access of Resource Using Incompatible Type (&#x27;Type Confusion&#x27;)](https://learn.snyk.io/lesson/type-confusion/?loc&#x3D;fix-pr); 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14296:11394,Learn,Learn,11394,https://hail.is,https://github.com/hail-is/hail/pull/14296,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""},{""name"":""wheel"",""from"":""0.30.0"",""to"":""0.38.0""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-IPYTHON-2348630"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JINJA2-6150717"",""SNYK-PYTHON-JUPYTERCORE-3063766"",""SNYK-PYTHON-MISTUNE-2940625"",""SNYK-PYTHON-NBCONVERT-2979829"",""SNYK-PYTHON-NOTEBOOK-1041707"",""SNYK-PYTHON-NOTEBOOK-2441824"",""SNYK-PYTHON-NOTEBOOK-2928995"",""SNYK-PYTHON-PROMPTTOOLKIT-6141120"",""SNYK-PYTHON-PYGMENTS-1086606"",""SNYK-PYTHON-PYGMENTS-1088505"",""SNYK-PYTHON-PYGMENTS-5750273"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-SPHINX-570772"",""SNYK-PYTHON-SPHINX-570773"",""SNYK-PYTHON-SPHINX-5811865"",""SNYK-PYTHON-SPHINX-5812109"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512"",""SNYK-PYTHON-WHEEL-3180413""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[554,704,624,531,556,604,589,726,434,589,449,399,696,589,479,519,509,711,701,586,586,384,494,539,589],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Cross-site Scripting (XSS)](https://learn.snyk.io/lesson/xss/?loc&#x3D;fix-pr); 🦉 [Improper Privilege Management](https://learn.snyk.io/lesson/insecure-design/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14205:13980,Learn,Learn,13980,https://hail.is,https://github.com/hail-is/hail/pull/14205,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"- Add Hadoop config as additional parameter to c++ compiled function; - Add C++ `HadoopConfig` wrapper and method to create an output stream; - Implement `NDArrayWrite` node and emit on backend. ### Notes; - `RichHadoopConfiguration` is an `AnyVal`, which is not implemented as a Java `Object`. In order to use it with JNI (and our `ObjectArray` pattern), I had to cast it to an `AnyRef` and allocate it as an object. There might be a way to call `AnyVal` methods and not do the allocation but haven't found one yet.; - Our current system doesn't support compiled functions that don't return values. I made it support void-type IRs but for now enforced that they will return an int (returned 0 after a successful write).; - All our bufferspecs are blocking which won't work for a numpy-compatible encoding. Going to follow-up on this PR with a simple non-blocking spec. cc: @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5837:844,simpl,simple,844,https://hail.is,https://github.com/hail-is/hail/pull/5837,1,['simpl'],['simple']
Usability,"- Added idea of two types of outputs: internal and external. Internal outputs are copied between tasks and external outputs are user specified copies of files.; - Added `valid` and `mentioned` which are sets of resources tasks keep track of. `valid` checks whether the resources were properly declared. `mentioned` keeps a record of the resources used in the command for variables that need to be declared.; - Changed when outputs are copied for external outputs. TaskResourceFiles are copied when the task finishes rather than at the end of the pipeline. InputResourceFiles are copied at the beginning of the pipeline as one job.; - `inputs`, `internal_outputs`, and `external_outputs` only contain resource files (not resource groups) which simplified the code quite a bit!",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5962:743,simpl,simplified,743,https://hail.is,https://github.com/hail-is/hail/pull/5962,1,['simpl'],['simplified']
Usability,"- All subprocess calls are async. The UI is much more responsive now.; - Make refresh (rather than heal) non-reentrant. There was a race condition where we could update the Github state of a PR we were actively deploying. This seemed error prone.; - We need to lock the repos until the build is fully deployed. I now protect pr.heal.; - Set `batch_changed = True` whenever heal needs to be rerun becomes some of its inputs (build_state, source or target sha, collection of PRs) changed. Next up: deploy.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5921:54,responsiv,responsive,54,https://hail.is,https://github.com/hail-is/hail/pull/5921,1,['responsiv'],['responsive']
Usability,"- Also moved the location of where buckets are mounted to not be in /batch so as to avoid accidentally deleting entire buckets.; - The file mode didn't do what I expected (allowed you to write to a bucket), but now that I think about it, we probably do want to expose this and my first intuition was right. We probably want files to be specified as read only when they're created on the local file system. I can make this a separate PR.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8979:286,intuit,intuition,286,https://hail.is,https://github.com/hail-is/hail/pull/8979,1,['intuit'],['intuition']
Usability,"- Changed NDArrayRef node to take a _sequence_ of IR for the indices as opposed to a single IR. This will make operations like slicing much easier, simplifies IR emission and allows us to typecheck that you have enough index variables; - Refactored `linearizeIndices`, a function that takes a Scala sequence of index variables for a ndarray and emits the single array index, so that it actually checks now that each index is within the shape length bounds of that dimension.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5876:148,simpl,simplifies,148,https://hail.is,https://github.com/hail-is/hail/pull/5876,1,['simpl'],['simplifies']
Usability,"- Implemented an NDArray as simply a struct with enough information to properly index but no knowledge of the data type, so no templating required.; - Convert child IRs from regions to `std::vector` so the NDArray logic is simpler and isn't coupled to regions. Maybe it doesn't need to be decoupled?; - Currently passing by value in the code-gen for simplicity and since the values are pretty small, but would appreciate feedback on memory-management strategies for non-region values like NDArray.; - Tests extract singular values since we can't translate these arrays back into Java.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5627:28,simpl,simply,28,https://hail.is,https://github.com/hail-is/hail/pull/5627,4,"['feedback', 'simpl']","['feedback', 'simpler', 'simplicity', 'simply']"
Usability,- Markdown files by category in `docs/faq` directory; - Uses NodeJS to compile markdown files into single page `build/docs/faq.html`; - See the style guide `docs/FAQStyleGuide.md`; - Modified Gradle `createDocs` task,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/811:150,guid,guide,150,https://hail.is,https://github.com/hail-is/hail/pull/811,2,['guid'],['guide']
Usability,"- [ ] (@tpoterba) caf1e1e673 add fails_service_backend; - [ ] (@tpoterba, @cseed) a979dfba58 [hail] introduce and use mktemp and mktempd; - [ ] (@tpoterba) dcf026b01c [hail] make is.hail.expr.ir.functions threadsafe; - [ ] (@tpoterba) 807f38c20e [hail] fix use of row requiredness in lowerDistributedSort; - [ ] (@catoverdrive) 12df8eb456 [query-service] handle void-typed IRs in query-service; - [ ] (@catoverdrive) 03357ee83d [query-service] make user cache thread-safe; - [ ] (@tpoterba) 6c6734bc71 [query-service] bugfix: preserve globals through a shuffle; - [ ] (@catoverdrive) a3d2572ce7 [shuffler] log ShuffleCodecSpec anytime it is created; - [ ] (@daniel-goldstein) 8949dfec3c [scala-lsm] bugfix: least key may equal greatest key; - [ ] (@daniel-goldstein) 6067bd8e51 [services] discovered new transient error; - [ ] (@daniel-goldstein) c8356d30bb [shuffler] more assertions in ShuffleClient; - [ ] (@daniel-goldstein) 9991da90f0 [shuffler] bugfix: shuffler needs a HailContext to decode loci; - [ ] (@daniel-goldstein) bc0140ab6f [query-service] move hail.jar earlier in Dockerfile; - [ ] (@daniel-goldstein) f96c28174d [query-service] permit pod scaling and remove cpu limit; - [ ] (@catoverdrive) 6ae26339fe [query-service] simplify socket handling; - [ ] (@jigold) f3db30e23f [batch] teach JVMJob where to find the hail configuration files; - [ ] (@daniel-goldstein) b5c6d85554 [query-service] switch to services team approved logging; - [ ] (@tpoterba) 35a306c066 [query-service] query workers need a hail context; - [ ] (@daniel-goldstein, @catoverdrive) 051c89b8e7 [query-service] use a UNIX Domain Socket for Py-Scala communication; - [ ] (@daniel-goldstein, @catoverdrive) ad9ea73d7a [query-service] run tests against query service",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10072:1237,simpl,simplify,1237,https://hail.is,https://github.com/hail-is/hail/pull/10072,1,['simpl'],['simplify']
Usability,"- [x] ~~Stacked on #7207 (needed for `MakeArray`)~~. Implements a new interface `EmitStream` for staged ""pull"" based streams. This design differs significantly from the current `ArrayIteratorTriplet` design; such ""push"" based streams are incapable of deforested operations that operate on multiple sub-streams, notably joins or zips. A (pull) stream has an internal state, which can be used to generate new elements by a `step` operation. This state is initialized by passing an initial parameter to an `init` operation, which will determine the initial state. You can think of a stream as allowing elements to be computed ""on-demand"", as opposed to the old design where the entire stream is consumed at once. This PR just contains the most simple streams (`ArrayRange`, `MakeArray`, `ArrayMap`, `ArrayFilter`). I'd like to get comments on it before merging my other stream implementations. So far I have all of the other streams implemented, except for `ReadPartition` and `If` (it turns out that `If` is tricky). **Interface**. `init` can return in two possible ways:; - `Missing` - the stream is actually entirely missing; this usually happens if one of the parameters to a stream is missing (e.g. `ArrayRange(0, NA, 1) = NA`); - `State(s0)` - the stream has started; its initial state is `s0`. `step` can return in three possible ways as well:; - `EOS` - we've reached the End Of Stream, there are no more elements left.; - `Skip(s1)` - this iteration didn't produce an element, you must try stepping again with state `s1` (see ""design notes"").; - `Yield(elt, s1)` - the stream computed an element `elt`; the following stream state will be `s1`. **Design Notes**. - The `Skip` return is very useful for simplifying the implementation of `ArrayFilter`. There is basically no nice way to implement filter otherwise without introducing some significant code duplication.; - ~~The stream ""parameter"", as well as the `Empty` return, are not very useful for the basic streams in this PR. However, they s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7228:741,simpl,simple,741,https://hail.is,https://github.com/hail-is/hail/pull/7228,1,['simpl'],['simple']
Usability,"- added test to GenotypeStreamSuite; - moved Boolean functions like isHet back to Genotype object as functions on gt: Int, for wider use with hardCallIterator. Eager for feedback on these steps and next steps.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1322:170,feedback,feedback,170,https://hail.is,https://github.com/hail-is/hail/pull/1322,1,['feedback'],['feedback']
Usability,"- changed behavior of `linear_regression` to parallel that of the other stats method when an expression is passed for `y`. When `y` is a list of expressions (even a list of one expression), the the five phenotype-dependent annotations are still array of float64.; - expanded `test_linreg` to test that all the interfaces work as expected; - changed `n_complete_samples` to just `n` since we may introduce an option to subset rather than impute per variant (which would cause n to change per variant) and I don't want to overload the notion of complete_sample to depend on the mode. I also think `n` is clear in linear regression context as the number of data points used, and in any case it's documented as the number of columns used.; - fixed a bug whereby `sum_x` was still `AC` on the Scala side.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3295:602,clear,clear,602,https://hail.is,https://github.com/hail-is/hail/pull/3295,1,['clear'],['clear']
Usability,"- created is.hail.services package; - added DeployConfig, Tokens with the necessary functionality to get BatchClient working; - BatchClient is built on Apache HttpComponents; - Synchronous, thread safe. HttpClient is thread safe, BatchClient should be, too.; - Simple hello, world! test; - Added build step for Java services tests. FYI @jigold this might be a possible model if we ever rework the Python BatchClient. Also, if there are Batch changes going forward this code will also need to updated. The client is incredibly light weight, so that shouldn't be often, similar to the aiogoogle clients I wrote recently. Next up: Query Batch backend!",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8779:261,Simpl,Simple,261,https://hail.is,https://github.com/hail-is/hail/pull/8779,1,['Simpl'],['Simple']
Usability,"- removed nullFit function entirely, simplifying code; - null model variables are first rather than last, simplifying code; - logreg fit now only computes margins of score and firth on first iteration; - score and fisher are Options in LogisticRegressionFit (not computed by Firth); - added Firth test to logreg; - added R test of Firth test; - added Firth to EPACTS test; - added Firth to logreg documentation; - added TriSolve for solving triangular systems (LAPACK dtrtrs), used in fitFirth; - added TriSolve test",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1375:37,simpl,simplifying,37,https://hail.is,https://github.com/hail-is/hail/pull/1375,2,['simpl'],['simplifying']
Usability,"- removed repeated imports in dataset; - fixed typos and clarified docs; - collapsed RegUtils to provide one ingest function each for hardCalls, dosages, and keyedRows. These optionally impute missing and produce sparse, dense, and dense vectors respectively. The first two also optionally take a mask. hardCalls no longer checks for constant vectors.; - killed the two RegUtils mutate matrix functions entirely; - simplified code in regression methods taking Vector[Double] input; - temp added constantHardCalls to RegUtils and in regressions to retrofit changes to preserve 0.1 behavior of missing for constant vectors. In 0.2 constant vectors will be treated the same as others, resulting in lack of convergence, Double.NaN, etc.; - temp added hardCallsAndAC to RegUtils and in linreg to retrofit changes to preserve 0.1 behavior of calculating AC pre-imputation for filtering. In 0.2, AC will be calculated post-imputation for hardCalls and dosages using sum(x); - combined empirical and HWE normalized arrays into one function; - removed various default parameters in tests. About 75 lines are due to retrofit, so for 0.2 it's about 200 added and 420 deleted.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1863:415,simpl,simplified,415,https://hail.is,https://github.com/hail-is/hail/pull/1863,1,['simpl'],['simplified']
Usability,- renamed `get_record` to `get_records` to be clear that this returns all matching records; - Added `state` and `complete` to the Batch class in server. These are computed when the Batch is queried from the database.; - Batch `to_dict` returns `state` and `complete` in the result. It also has an option on whether to include `jobs` in the output.; - Batch `list_batches` in `server.py` no longer outputs the `jobs` per Batch; - Changed `ci2` to use the new Batch status with the state and complete included.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5991:46,clear,clear,46,https://hail.is,https://github.com/hail-is/hail/pull/5991,1,['clear'],['clear']
Usability,"-+-----------------------------------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; | 1 | SIMPLE | billing_project_users | NULL | index | PRIMARY | PRIMARY | 204 | NULL | 3201 | 10.00 | Using where; Using index; Using temporary; Using filesort |; | 1 | SIMPLE | batches | NULL | ref | PRIMARY,batches_deleted,batches_token,batches_user_state,batches_time_completed,batches_billing_project_state | batches_billing_project_state | 102 | batch.billing_project_users.billing_project | 519 | 25.00 | Using where |; | 1 | SIMPLE | batches_n_jobs_in_complete_states | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | NULL |; | 1 | SIMPLE | batches_cancelled | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | Using index |; | 1 | SIMPLE | aggregated_batch_resources | NULL | ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 44 | 100.00 | NULL |; | 1 | SIMPLE | resources | NULL | eq_ref | PRIMARY | PRIMARY | 102 | batch.aggregated_batch_resources.resource | 1 | 100.00 | NULL |; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; ```. New plan; ```; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+----------------------------",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12049:1296,SIMPL,SIMPLE,1296,https://hail.is,https://github.com/hail-is/hail/pull/12049,1,['SIMPL'],['SIMPLE']
Usability,"-------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; | 1 | SIMPLE | billing_project_users | NULL | index | PRIMARY | PRIMARY | 204 | NULL | 3201 | 10.00 | Using where; Using index; Using temporary; Using filesort |; | 1 | SIMPLE | batches | NULL | ref | PRIMARY,batches_deleted,batches_token,batches_user_state,batches_time_completed,batches_billing_project_state | batches_billing_project_state | 102 | batch.billing_project_users.billing_project | 519 | 25.00 | Using where |; | 1 | SIMPLE | batches_n_jobs_in_complete_states | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | NULL |; | 1 | SIMPLE | batches_cancelled | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | Using index |; | 1 | SIMPLE | aggregated_batch_resources | NULL | ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 44 | 100.00 | NULL |; | 1 | SIMPLE | resources | NULL | eq_ref | PRIMARY | PRIMARY | 102 | batch.aggregated_batch_resources.resource | 1 | 100.00 | NULL |; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; ```. New plan; ```; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+-----------------------------------+-----",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12049:1549,SIMPL,SIMPLE,1549,https://hail.is,https://github.com/hail-is/hail/pull/12049,1,['SIMPL'],['SIMPLE']
Usability,"----------+; | 1 | SIMPLE | batches | ALL | PRIMARY | NULL | NULL | NULL | 31 | Using where |; | 1 | SIMPLE | jobs | ref | PRIMARY,jobs_state | PRIMARY | 8 | batch2.batches.id | 84 | Using where |; +----+-------------+---------+------+--------------------+---------+---------+-------------------+------+-------------+; 2 rows in set (0.01 sec); ```. This is because the query was querying closed batches, and then joining against jobs and using a where condition to find ready jobs. This is an insane execution plan and I still can't believe MySQL is choosing it by default. To fix this, I changed the inner join to a straight join: https://dev.mysql.com/doc/refman/5.6/en/join.html. Straight join is a MySQL extension that always scans the left table first. This leads to the correct execution plan which runs instantly:. ```; mysql> EXPLAIN; -> SELECT job_id, batch_id, spec, cores_mcpu,; -> ((jobs.cancelled OR batches.cancelled) AND NOT always_run) AS cancel,; -> userdata, user; -> FROM jobs; -> STRAIGHT_JOIN batches ON batches.id = jobs.batch_id; -> WHERE jobs.state = 'Ready' AND batches.closed; -> LIMIT 50;; +----+-------------+---------+--------+--------------------+------------+---------+----------------------+-------+-----------------------+; | id | select_type | table | type | possible_keys | key | key_len | ref | rows | Extra |; +----+-------------+---------+--------+--------------------+------------+---------+----------------------+-------+-----------------------+; | 1 | SIMPLE | jobs | ref | PRIMARY,jobs_state | jobs_state | 122 | const | 14264 | Using index condition |; | 1 | SIMPLE | batches | eq_ref | PRIMARY | PRIMARY | 8 | batch2.jobs.batch_id | 1 | Using where |; +----+-------------+---------+--------+--------------------+------------+---------+----------------------+-------+-----------------------+; 2 rows in set (0.00 sec); ```. Now it scans the jobs table first using the job_state index as desired. Once this goes in I'll turn up the instance pool size again.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7634:2221,SIMPL,SIMPLE,2221,https://hail.is,https://github.com/hail-is/hail/pull/7634,2,['SIMPL'],['SIMPLE']
Usability,"-----------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; | 1 | SIMPLE | billing_project_users | NULL | index | PRIMARY | PRIMARY | 204 | NULL | 3201 | 10.00 | Using where; Using index; Using temporary; Using filesort |; | 1 | SIMPLE | batches | NULL | ref | PRIMARY,batches_deleted,batches_token,batches_user_state,batches_time_completed,batches_billing_project_state | batches_billing_project_state | 102 | batch.billing_project_users.billing_project | 519 | 25.00 | Using where |; | 1 | SIMPLE | batches_n_jobs_in_complete_states | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | NULL |; | 1 | SIMPLE | batches_cancelled | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | Using index |; | 1 | SIMPLE | aggregated_batch_resources | NULL | ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 44 | 100.00 | NULL |; | 1 | SIMPLE | resources | NULL | eq_ref | PRIMARY | PRIMARY | 102 | batch.aggregated_batch_resources.resource | 1 | 100.00 | NULL |; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+-------",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12049:1033,SIMPL,SIMPLE,1033,https://hail.is,https://github.com/hail-is/hail/pull/12049,1,['SIMPL'],['SIMPLE']
Usability,"------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; ```. New plan; ```; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; | 1 | SIMPLE | batches | NULL | ref | batches_deleted | batches_deleted | 1 | const | 493389 | 33.33 | Using where; Backward index scan |; | 1 | SIMPLE | batches_n_jobs_in_complete_states | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | NULL |; | 1 | SIMPLE | batches_cancelled | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | Using index |; | 1 | SIMPLE | billing_project_users | NULL | eq_ref | PRIMARY | PRIMARY | 204 | batch.batches.billing_project,const | 1 | 100.00 | Using index |; | 1 | SIMPLE | aggregated_batch_resources | NULL | ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 44 | 100.00 | NULL |; | 1 | SIMPLE | resources | NULL | eq_ref | PRIMARY | PRIMARY | 102 | batch.aggregated_batch_resources.resource | 1 | 100.00 | NULL |; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; ```. See Zulip discussions here:; https://hail.zulipchat.com/#narrow/stream/127527-team/topic/CI.20Deploy.20Failure/near/290764243. https://hail.zulipchat.com/#narrow/stream/219455-CLOSED-ServicesDev/topic/UI.20.2Fbatches.20slowness/near/226853300",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12049:3017,SIMPL,SIMPLE,3017,https://hail.is,https://github.com/hail-is/hail/pull/12049,4,['SIMPL'],['SIMPLE']
Usability,"-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; | 1 | SIMPLE | billing_project_users | NULL | index | PRIMARY | PRIMARY | 204 | NULL | 3201 | 10.00 | Using where; Using index; Using temporary; Using filesort |; | 1 | SIMPLE | batches | NULL | ref | PRIMARY,batches_deleted,batches_token,batches_user_state,batches_time_completed,batches_billing_project_state | batches_billing_project_state | 102 | batch.billing_project_users.billing_project | 519 | 25.00 | Using where |; | 1 | SIMPLE | batches_n_jobs_in_complete_states | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | NULL |; | 1 | SIMPLE | batches_cancelled | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | Using index |; | 1 | SIMPLE | aggregated_batch_resources | NULL | ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 44 | 100.00 | NULL |; | 1 | SIMPLE | resources | NULL | eq_ref | PRIMARY | PRIMARY | 102 | batch.aggregated_batch_resources.resource | 1 | 100.00 | NULL |; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; ```. New plan; ```; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+---",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12049:1671,SIMPL,SIMPLE,1671,https://hail.is,https://github.com/hail-is/hail/pull/12049,1,['SIMPL'],['SIMPLE']
Usability,"--------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; ```. New plan; ```; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; | 1 | SIMPLE | batches | NULL | ref | batches_deleted | batches_deleted | 1 | const | 493389 | 33.33 | Using where; Backward index scan |; | 1 | SIMPLE | batches_n_jobs_in_complete_states | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | NULL |; | 1 | SIMPLE | batches_cancelled | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | Using index |; | 1 | SIMPLE | billing_project_users | NULL | eq_ref | PRIMARY | PRIMARY | 204 | batch.batches.billing_project,const | 1 | 100.00 | Using index |; | 1 | SIMPLE | aggregated_batch_resources | NULL | ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 44 | 100.00 | NULL |; | 1 | SIMPLE | resources | NULL | eq_ref | PRIMARY | PRIMARY | 102 | batch.aggregated_batch_resources.resource | 1 | 100.00 | NULL |; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; ```. See Zulip discussions here:; https://hail.zulipchat.com/#narrow/stream/127527-team/topic/CI.20Deploy.20Failure/near/290764243. https://hail.zu",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12049:2886,SIMPL,SIMPLE,2886,https://hail.is,https://github.com/hail-is/hail/pull/12049,1,['SIMPL'],['SIMPLE']
Usability,".16"",""to"":""6.4.12""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""},{""name"":""wheel"",""from"":""0.30.0"",""to"":""0.38.0""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-IPYTHON-2348630"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERCORE-3063766"",""SNYK-PYTHON-MISTUNE-2940625"",""SNYK-PYTHON-NBCONVERT-2979829"",""SNYK-PYTHON-NOTEBOOK-1041707"",""SNYK-PYTHON-NOTEBOOK-2441824"",""SNYK-PYTHON-NOTEBOOK-2928995"",""SNYK-PYTHON-PYGMENTS-1086606"",""SNYK-PYTHON-PYGMENTS-1088505"",""SNYK-PYTHON-PYGMENTS-5750273"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-SPHINX-570772"",""SNYK-PYTHON-SPHINX-570773"",""SNYK-PYTHON-SPHINX-5811865"",""SNYK-PYTHON-SPHINX-5812109"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512"",""SNYK-PYTHON-WHEEL-3180413""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[554,704,624,531,604,589,726,434,589,449,696,589,479,519,509,711,701,586,586,384,494,539,589],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Improper Privilege Management](https://learn.snyk.io/lesson/insecure-design/?loc&#x3D;fix-pr); 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14108:12788,Learn,Learn,12788,https://hail.is,https://github.com/hail-is/hail/pull/14108,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,.AbstractIterator.foldLeft(Iterator.scala:1334); at scala.collection.TraversableOnce$class.fold(TraversableOnce.scala:212); at scala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.exp,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7405,Simpl,Simplify,7405,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:131); 	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144); 	at java.lang.Thread.run(Thread.java:748); 	Error: java.lang.IllegalStateException: Cannot call methods on a stopped SparkContext.; 	This stopped SparkContext was created at:; 	; 	org.apache.spark.SparkContext.getOrCreate(SparkContext.scala); 	sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	java.lang.reflect.Method.invoke(Method.java:498); 	sparklyr.Invoke.invoke(invoke.scala:139); 	sparklyr.StreamHandler.handleMethodCall(stream.scala:123); 	sparklyr.StreamHandler.read(stream.scala:66); 	sparklyr.BackendHandler.channelRead0(handler.scala:51); 	sparklyr.BackendHandler.channelRead0(handler.scala:4); 	io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343); 	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343); 	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293); 	io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267); 	; 	The currently ac,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4513:7496,Simpl,SimpleChannelInboundHandler,7496,https://hail.is,https://github.com/hail-is/hail/issues/4513,1,['Simpl'],['SimpleChannelInboundHandler']
Usability,.apply(FreeVariables.scala:27); at is.hail.expr.ir.FreeVariables$$anonfun$is$hail$expr$ir$FreeVariables$$compute$1$1.apply(FreeVariables.scala:24); at scala.collection.Iterator$$anon$11.next(Iterator.scala:410); at scala.collection.Iterator$class.foreach(Iterator.scala:891); at scala.collection.AbstractIterator.foreach(Iterator.scala:1334); at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157); at scala.collection.AbstractIterator.foldLeft(Iterator.scala:1334); at scala.collection.TraversableOnce$class.fold(TraversableOnce.scala:212); at scala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.colle,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:6967,Simpl,Simplify,6967,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,".com/#narrow/stream/223457-Hail-Batch-support/topic/exporting.20sites.20only.20VCF/near/376801844. Using QoB, reading out of GCS, we encounter corrupted blocks on this simple pipeline. ```; Caused by: com.github.luben.zstd.ZstdException: Corrupted block detected; at com.github.luben.zstd.ZstdDecompressCtx.decompressByteArray(ZstdDecompressCtx.java:157) ~[zstd-jni-1.5.2-1.jar:1.5.2-1]; at com.github.luben.zstd.Zstd.decompressByteArray(Zstd.java:409) ~[zstd-jni-1.5.2-1.jar:1.5.2-1]; at is.hail.io.ZstdInputBlockBuffer.readBlock(InputBuffers.scala:649) ~[gs:__hail-query-ger0g_jars_f00f916faf783b89cc2fc00bfc3e39df5485d8b0.jar.jar:0.0.1-SNAPSHOT]; at is.hail.io.BlockingInputBuffer.ensure(InputBuffers.scala:384) ~[gs:__hail-query-ger0g_jars_f00f916faf783b89cc2fc00bfc3e39df5485d8b0.jar.jar:0.0.1-SNAPSHOT]; at is.hail.io.BlockingInputBuffer.readByte(InputBuffers.scala:402) ~[gs:__hail-query-ger0g_jars_f00f916faf783b89cc2fc00bfc3e39df5485d8b0.jar.jar:0.0.1-SNAPSHOT]; ....; ```. A simplified version of the script:. ```python3; import hail as hl; import gnomad.utils.sparse_mt. tmp_dir = 'gs://bucket/'; vds_file = 'gs://neale-bge/bge-wave-1.vds'; out = 'gs://bucket/foo.vcf.bgz'. hl.init(default_reference = 'GRCh38',; tmp_dir = tmp_dir). vds = hl.vds.read_vds(vds_file); mt = hl.vds.to_dense_mt(vds); t = gnomad.utils.sparse_mt.default_compute_info(mt); t = t.annotate(info=t.info.drop('AS_SB_TABLE')); t = t.annotate(info = t.info.drop(; 'AS_QUALapprox', 'AS_VarDP', 'AS_SOR', 'AC_raw', 'AC', 'AS_SB'; )); t = t.drop('AS_lowqual'). hl.methods.export_vcf(dataset = t, output = out, tabix = True); ```. [batch-7751958-2713-main.log](https://github.com/hail-is/hail/files/12314207/batch-7751958-2713-main.log). ### Version. 0.2.120. ### Relevant log output. ```shell; Traceback (most recent call last):; File ""/Users/rye/Projects/VQSR/formatting-VQSR-vcf.py"", line 102, in <module>; main(args); File ""/Users/rye/Projects/VQSR/formatting-VQSR-vcf.py"", line 66, in main; hl.methods.export_vcf(datase",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13409:1066,simpl,simplified,1066,https://hail.is,https://github.com/hail-is/hail/issues/13409,1,['simpl'],['simplified']
Usability,.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.ap,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7674,Simpl,Simplify,7674,https://hail.is,https://github.com/hail-is/hail/issues/8338,3,"['Simpl', 'simpl']","['Simplify', 'simplifyMatrix']"
Usability,.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:19); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.expr.ir.Optimize$.is$hail$expr$ir$Optimize$$runOpt$1(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply$mcV$sp(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply(Optimize.scala:21); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply(Optimize.scala:21); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.expr.ir.Optimize$.apply(Optimize.scala:20); at is.hail.expr.ir.lowering.LoweringPipeline.apply(LoweringPipeline.scala:16); at is.hail.expr,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:11719,Simpl,Simplify,11719,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,".invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:498); at is.hail.JVMEntryway$1.run(JVMEntryway.java:119); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); at java.lang.Thread.run(Thread.java:750). Hail version: 0.2.124-87398e1b514e; Error summary: HailException: file already exists: gs://aou_analysis/250k/data/utils/aou_mt_sample_qc_250k.ht; ```; </details>. The code is simple and clearly is running against a path that does not already exist:; ```; if not hl.hadoop_exists(get_aou_util_path('mt_sample_qc')):; print('Run sample qc MT.....'); mt = hl.read_matrix_table(ACAF_MT_PATH); mt = mt.filter_rows(mt.locus.in_autosome()); # mt = mt.filter_rows(mt.locus.contig == 'chr1'); ht = hl.sample_qc(mt, name='mt_sample_qc'); ht.write(get_aou_util_path('mt_sample_qc'), overwrite=args.overwrite); ```. Job log: https://batch.hail.is/batches/8058522/jobs/171029. <details>; <summary>The last TableIR logged</summary>. ```; 2023-10-13 02:14:44.213 : INFO: after optimize: darrayLowerer, after LowerAndExecuteShuffles: IR size 232: . !ht = TableRead [Table{global:Struct{},key:[locus,alleles],row:Struct{locus:Locus(GRCh38),alleles:Array[String],filters:Set[String],a_index:Int32,was_split:Boolean,variant_qc:Struct{gq_stats:Struct{mean:Float64,stdev:Float64,min:Float64,max:Float64},call_rate:Float64,n_called:Int64,n_not_called:Int64,n_filtered:Int64,n_het:Int64,n_non_ref:Int64,het_freq_hwe:Float64,p_value_hwe:F",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13809:7135,simpl,simple,7135,https://hail.is,https://github.com/hail-is/hail/issues/13809,2,"['clear', 'simpl']","['clearly', 'simple']"
Usability,".py"", line 8, in <module>; from hailtop.fs.fs import FS; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/fs/__init__.py"", line 1, in <module>; from .fs_utils import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/fs/fs_utils.py"", line 4, in <module>; from hailtop.aiocloud.aiogoogle import GCSRequesterPaysConfiguration; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiocloud/aiogoogle/__init__.py"", line 1, in <module>; from .client import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiocloud/aiogoogle/client/__init__.py"", line 8, in <module>; from .storage_client import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiocloud/aiogoogle/client/storage_client.py"", line 14, in <module>; from hailtop.aiotools import FeedableAsyncIterable, WriteBuffer; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiotools/__init__.py"", line 1, in <module>; from .fs import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiotools/fs/__init__.py"", line 1, in <module>; from .copier import Copier, CopyReport, SourceCopier, SourceReport, Transfer, TransferReport; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiotools/fs/copier.py"", line 7, in <module>; import humanize; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/humanize/__init__.py"", line 1, in <module>; import pkg_resources; ModuleNotFoundError: No module named 'pkg_resources'. ```. I think this is largely because hail requires an ancient version of humanize (v1 vs v4). In any case, the wheel on PyPI is broken and un-importable. . There are other issues stemming from the underlying issue that there is no clear description of requirements and dependencies. . ### Version. 0.2.132. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14630:2739,clear,clear,2739,https://hail.is,https://github.com/hail-is/hail/issues/14630,1,['clear'],['clear']
Usability,"//]: # (snyk:metadata:{""prId"":""648a0aea-922c-46c9-b851-66c7e282d2e5"",""prPublicId"":""648a0aea-922c-46c9-b851-66c7e282d2e5"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""41.0.6""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-3315975"",""SNYK-PYTHON-CRYPTOGRAPHY-3316038"",""SNYK-PYTHON-CRYPTOGRAPHY-3316211"",""SNYK-PYTHON-CRYPTOGRAPHY-5663682"",""SNYK-PYTHON-CRYPTOGRAPHY-5777683"",""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750"",""SNYK-PYTHON-CRYPTOGRAPHY-5914629"",""SNYK-PYTHON-CRYPTOGRAPHY-6036192"",""SNYK-PYTHON-CRYPTOGRAPHY-6092044"",""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use After Free](https://learn.snyk.io/lesson/use-after-free/?loc&#x3D;fix-pr); 🦉 [Access of Resource Using Incompatible Type (&#x27;Type Confusion&#x27;)](https://learn.snyk.io/lesson/type-confusion/?loc&#x3D;fix-pr); 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14196:10349,Learn,Learn,10349,https://hail.is,https://github.com/hail-is/hail/pull/14196,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"//github.com/urllib3/urllib3/commit/aa3def7d242525e6e854991247c4b68583d15135""><code>aa3def7</code></a> Release 1.26.11</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/6f93b8f450b18b4c9f4c6333d759a911a63d15ae""><code>6f93b8f</code></a> Fix <code>OverflowError</code> when TLS is used on some Python versions</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/0a5f34d2c2ee6457e8365543243eccd3d1dc9430""><code>0a5f34d</code></a> Set GHA token permissions to be read-only</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/ac61b73da703df53707c31030b4ea51aab22d43c""><code>ac61b73</code></a> Backport publish workflow and process to 1.26.x</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/1fd77edc1a1373c9a7e762de148f19f1e2edd418""><code>1fd77ed</code></a> Release 1.26.10</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/37ba00248424ea3cdf556cc3e7aa81ce0bf40382""><code>37ba002</code></a> [1.26] Update paid contributor program with early feedback</li>; <li>Additional commits viewable in <a href=""https://github.com/urllib3/urllib3/compare/1.26.9...1.26.12"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.9&new-version=1.26.12)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12140:4656,feedback,feedback,4656,https://hail.is,https://github.com/hail-is/hail/pull/12140,1,['feedback'],['feedback']
Usability,"/a> (<a href=""https://github.com/krassowski""><code>@​krassowski</code></a>)</li>; </ul>; <h3>Contributors to this release</h3>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab/graphs/contributors?from=2023-12-29&amp;to=2024-01-19&amp;type=c"">GitHub contributors page for this release</a>)</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/jupyterlab/jupyterlab/blob/@jupyterlab/lsp@4.0.12/CHANGELOG.md"">jupyterlab's changelog</a>.</em></p>; <blockquote>; <h2>4.0.12</h2>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab/compare/v4.0.11...69079ec413cbe6d173f0a667c15802b76423ece5"">Full Changelog</a>)</p>; <h3>Bugs fixed</h3>; <ul>; <li>Fix jupyterlab downgrade issue on extension installation <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15650"">#15650</a> (<a href=""https://github.com/Sarthug99""><code>@​Sarthug99</code></a>)</li>; <li>Fix search highlights removal on clearing input box <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15690"">#15690</a> (<a href=""https://github.com/krassowski""><code>@​krassowski</code></a>)</li>; <li>Add scroll margin to headings for better alignment <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15703"">#15703</a> (<a href=""https://github.com/krassowski""><code>@​krassowski</code></a>)</li>; <li>Fix shortcut UI failing on filtering when empty command is given <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15695"">#15695</a> (<a href=""https://github.com/krassowski""><code>@​krassowski</code></a>)</li>; <li>Fix connection loop issue with standalone foreign document in LSP <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15262"">#15262</a> (<a href=""https://github.com/trungleduc""><code>@​trungleduc</code></a>)</li>; <li>Fix outputarea package from not detecting updates <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15642"">#",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14218:6367,clear,clearing,6367,https://hail.is,https://github.com/hail-is/hail/pull/14218,1,['clear'],['clearing']
Usability,"/li>; </ul>; <h2>3.1.29</h2>; <ul>; <li>Reduced npm package size.</li>; </ul>; <h2>3.1.28</h2>; <ul>; <li>Reduced npm package size.</li>; </ul>; <h2>3.1.27</h2>; <ul>; <li>Cleaned <code>dependencies</code> from development tools.</li>; </ul>; <h2>3.1.26</h2>; <ul>; <li>Improved performance (by Eitan Har-Shoshanim).</li>; <li>Reduced npm package size.</li>; </ul>; <h2>3.1.25</h2>; <ul>; <li>Fixed <code>browserify</code> support.</li>; </ul>; <h2>3.1.24</h2>; <ul>; <li>Fixed <code>browserify</code> support (by Artur Paikin).</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/ai/nanoid/commit/23b136929a6d58f32e31b269534a3ce3f680a086""><code>23b1369</code></a> Release 3.2 version</li>; <li><a href=""https://github.com/ai/nanoid/commit/967788efce880960512f969a56f8f22f3fc20bae""><code>967788e</code></a> Remove TS test tools</li>; <li><a href=""https://github.com/ai/nanoid/commit/27eaa90cd207a7782bbcf17343092ae87dd62164""><code>27eaa90</code></a> Simplify new binary tool</li>; <li><a href=""https://github.com/ai/nanoid/commit/a9d91239931dc77506381874826d297aee71d6ef""><code>a9d9123</code></a> Update dependencies</li>; <li><a href=""https://github.com/ai/nanoid/commit/32b9bdaab1fbc28576b17de8516164ce0360f292""><code>32b9bda</code></a> Allows passing size or custom alphabet via cli as args (<a href=""https://github-redirect.dependabot.com/ai/nanoid/issues/334"">#334</a>)</li>; <li><a href=""https://github.com/ai/nanoid/commit/246d5f87b6b34e23b5e401bdf3da1f80c810ac4c""><code>246d5f8</code></a> Update vite</li>; <li><a href=""https://github.com/ai/nanoid/commit/afdf9c92b41427f35476fbe14b5af5d73dd7fbdb""><code>afdf9c9</code></a> doc: Fixed Typo (<a href=""https://github-redirect.dependabot.com/ai/nanoid/issues/335"">#335</a>)</li>; <li><a href=""https://github.com/ai/nanoid/commit/90a446fef3ecaac78e5af2ea01025c4f40182e2b""><code>90a446f</code></a> Update benchmark results</li>; <li><a href=""https://github.com/ai/nanoid/commit/8ba231",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11284:1883,Simpl,Simplify,1883,https://hail.is,https://github.com/hail-is/hail/pull/11284,2,['Simpl'],['Simplify']
Usability,"/mrabarnett/mrab-regex) from 2023.3.23 to 2023.5.5.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/mrabarnett/mrab-regex/blob/hg/changelog.txt"">regex's changelog</a>.</em></p>; <blockquote>; <p>Version: 2023.5.5</p>; <pre><code>Removed semicolon after 'else' in 'munge_name'.; </code></pre>; <p>Version: 2023.5.4</p>; <pre><code>Fixed pyproject.toml and setup.py.; </code></pre>; <p>Version: 2023.5.3</p>; <pre><code>pyproject.toml was missing.; </code></pre>; <p>Version: 2023.5.2</p>; <pre><code>Added pyproject.toml.; </code></pre>; <p>Version: 2023.3.23</p>; <pre><code>Git issue 495: Running time for failing fullmatch increases rapidly with input length; Re-enabled modified repeat guards due to regression in speed caused by excessive backtracking.; </code></pre>; <p>Version: 2023.3.22</p>; <pre><code>Git issue 494: Backtracking failure matching regex `^a?(a?)b?c\1$` against string `abca`; Disabled repeat guards. They keep causing issues, and it's just simpler to rely on timeouts.; </code></pre>; <p>Version: 2022.10.31</p>; <pre><code>Updated text for supported Unicode and Python versions.; </code></pre>; <p>Version: 2022.9.13</p>; <pre><code>Updated to Unicode 15.0.0.; </code></pre>; <p>Version: 2022.9.11</p>; <pre><code>Updated version.; </code></pre>; <p>Version: 2022.8.17</p>; <pre><code>Git issue 477: \v for vertical spacing; <p>Added \p{HorizSpace} (\p{H}) and \p{VertSpace} (\p{V}).; </code></pre></p>; <p>Version: 2022.7.25</p>; <pre><code>Git issue 475: 2022.7.24 improperly released; <p>The file <a href=""https://pypi.org/pypi/regex/2022.7.24/json"">https://pypi.org/pypi/regex/2022.7.24/json</a> was missing references to most of the wheels, so this is a new release in the hope that it was just a glitch in GitHub Actions.; </code></pre></p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/mrabarnett/mrab-regex/commit/9",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12989:1039,simpl,simpler,1039,https://hail.is,https://github.com/hail-is/hail/pull/12989,1,['simpl'],['simpler']
Usability,"/redirect.github.com/jupyterlab/jupyterlab/issues/15710"">#15710</a>: Removes Python 3.0, Notebook 5 mentions from contributor ...</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/353707e4d0d3fe788a4a2a5b1f228352f1918806""><code>353707e</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15524"">#15524</a>: Fix visual tests (<a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15578"">#15578</a>)</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/482aaa0054a2de18a257d7b5520234eb44648a9f""><code>482aaa0</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15650"">#15650</a>: Fix jupyterlab downgrade issue on extension installation ...</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/58fb4a9b630cd22d7b064b3c8fef503b11afe077""><code>58fb4a9</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15690"">#15690</a>: Fix search highlights removal on clearing input box (<a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15712"">#15712</a>)</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/5062929f60ac770c7048350260636d3f63ea1c8d""><code>5062929</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15703"">#15703</a> on branch 4.0.x (Add scroll margin to headings for better ...</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/c00b0ca0cc631992c7681473d88208fcc74de00e""><code>c00b0ca</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15642"">#15642</a>: Fix outputarea package from not detecting updates (<a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15652"">#15652</a>)</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/8326236cf42c43ee1ed9657c09d7c4cbad5973f1""><code>8326236</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15262",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14218:12762,clear,clearing,12762,https://hail.is,https://github.com/hail-is/hail/pull/14218,1,['clear'],['clearing']
Usability,"1) Learn More button shouldn't have target blank; it's a link to a page in the same domain, better to allow forward/back nav and no new window; 2) Reference page text would overflow because default word-break is none.; 3) Height of blue background to title was constrained to a certain height, and while that helped consistency, it cost inner margin (padding) consistency; tradeoff not worth it; 4) Fix code block alignments",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9013:3,Learn,Learn,3,https://hail.is,https://github.com/hail-is/hail/pull/9013,1,['Learn'],['Learn']
Usability,"1. Add `dictfix`, a little tool for wrangling json-like data into a sensible,; standardized format. 2. Modify job.html to include a simple table of important parts of the job; specification such as the command and the requests of cpu, memory, and; storage. 3. Modify job.html to include a simple table summarizing the status and runtime; of each step of the job. My apologies for reformatting the whole file to have no excess spaces. Use the no whitespace diff option in GitHub for a better diff.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9758:132,simpl,simple,132,https://hail.is,https://github.com/hail-is/hail/pull/9758,2,['simpl'],['simple']
Usability,"1. File rate is more interesting for small files.; 2. The source_report controls the progress bar. By updating it eagerly while we are listing a directory, the progress bar is more accurate sooner. We currently wait until we get a semaphore for a particular file to update the progress bar.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13820:85,progress bar,progress bar,85,https://hail.is,https://github.com/hail-is/hail/pull/13820,3,['progress bar'],['progress bar']
Usability,"1. If we receive an error other than 404 from Google when asking about an instance, we should raise. This is unexpected. (The later lines will fail anyway because spec is `None`); 2. (the main issue) if the instance is not active, do not bother contacting it and, crucially, continue `check_on_instance` eventually learning the instance does not exist.; 3. Drop timeout to 5s to talk to a batch agent. Fixes the zombie instance issue.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8023:315,learn,learning,315,https://hail.is,https://github.com/hail-is/hail/pull/8023,1,['learn'],['learning']
Usability,"1. Move `hail/www` to `site/www` and associated build commands into `site/Makefile` and a new `build.yaml` step.; 2. Prepare for a simpler docs deployment by supporting both the current 0.2 structure (top-level `www` containing `docs/0.2` and `docs/0.1`) and a future, simpler structure (top-level `docs` containing `0.2` and `0.1`).; 3. Fix `site/Makefile` which had bit-rotted. `test` doesn't really work anymore so I removed it. We could restore `make test` by figuring out a local SSL story. I went down this route but couldn't get NGINX to respond to my HTTPS requests. `make deploy` is rather fast now anyway. Currently deployed at https://internal.hail.is/dking/site/index.html. There are two known issues with dev deploy, those are resolved at https://github.com/hail-is/hail/pull/8922.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8923:131,simpl,simpler,131,https://hail.is,https://github.com/hail-is/hail/pull/8923,2,['simpl'],['simpler']
Usability,"1. Replace kaniko with buildkit.; 2. For any repository, the `cache` tag is a dump of layers that have been built before.; 3. Allow ci to start docker jobs that are ""unconfined"" by app armor and seccomp.; 4. Add `docker-build.sh` which enforces use of buildkit, knows about the `cache` tag, and ensures the cache is updated on each build.; 5. Remove the `gcloud` binary from Dockerfile.base. Replace uses with either the gcloud-sdk image or with ci-utils-image, which now contains the gcloud install.; 6. Move pyspark (which is huge, 100s of MB) before everything because its version rarely changes.; 7. Move requirements.txt to the end of base, since it changes more often than the rest.; 8. Move hailtop last in service-base because hailtop has a git SHA in it.; 9. Simplify make files: always use docker-build.sh, no explicit pushes (we almost always want to push), no explicit pulls (buildkit cache doesn't need it), none of this digest nonsense (it was never accurate anyway). When my namespace CI builds ci/test/resources/build.yaml, it finishes in 4 minutes. Still dominated by image building. Layer extraction (required when things change, e.g. hail top's SHA change or hello's python files) dominates our time. We might try collapsing the largely unchanging lower layers of service-base (pyspark, apt-get, gcs-connector, and catch2). That will hurt us when we *do* change one of those layers. Alternatively, we might make service-base based on hail-ubuntu instead of base. We could eliminate a bunch of build software like cmake, gcc, and the jdk. I based the create-certs image on hail-ubuntu to ensure its built early and doesn't hold up service deployment. The following is an as-cached-as-possible build. The service and hello images have to extract layers and build themselves because the SHA changed. <img width=""1920"" alt=""Screen Shot 2021-05-19 at 2 34 18 PM"" src=""https://user-images.githubusercontent.com/106194/118865766-4e74d800-b8af-11eb-8386-94a3782a2a45.png"">. I'm not even sur",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10502:768,Simpl,Simplify,768,https://hail.is,https://github.com/hail-is/hail/pull/10502,1,['Simpl'],['Simplify']
Usability,"1. Separating the `apk update` from the `apk add` means that if the apk package repository metadata changes (say, the URL of some repository changes) and we change our `apk add` line (say we add a new package), then the `apk add` will fail (e.g. because it has an out of date URL for the repository that should contain the new package). The `apk add --no-cache ...` invocation is essentially the same as `apk update && apk add ... && rm -rf /path/to/repo/cache`. When using docker, it is good practice remove unnecessary files so that they do not get included in the ""image diff"" for that line of the Dockerfile. `apk add --no-cache ...` succinctly performs exactly what we want. 2. Keeping each package on a separate line and sorting those lines makes diffs easy-to-read with one line per new package. 3. Because `COPY` moves all the *contents* of a source folder into the destination path (creating it if it does not exist) which must be a folder, it seems more clear to say `/batch/batch/`, indicating that we are moving data into a folder.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4791:964,clear,clear,964,https://hail.is,https://github.com/hail-is/hail/pull/4791,1,['clear'],['clear']
Usability,"1bc1497"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""42.0.2""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-3315975"",""SNYK-PYTHON-CRYPTOGRAPHY-3316038"",""SNYK-PYTHON-CRYPTOGRAPHY-3316211"",""SNYK-PYTHON-CRYPTOGRAPHY-5663682"",""SNYK-PYTHON-CRYPTOGRAPHY-5777683"",""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750"",""SNYK-PYTHON-CRYPTOGRAPHY-5914629"",""SNYK-PYTHON-CRYPTOGRAPHY-6036192"",""SNYK-PYTHON-CRYPTOGRAPHY-6050294"",""SNYK-PYTHON-CRYPTOGRAPHY-6092044"",""SNYK-PYTHON-CRYPTOGRAPHY-6126975"",""SNYK-PYTHON-CRYPTOGRAPHY-6210214"",""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[554,704,509,454,616,584,479,509,509,509,509,589,509,691,399,479,399,539,479,479,616,616,561,519],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use After Free](https://learn.snyk.io/lesson/use-after-free/?loc&#x3D;fix-pr); 🦉 [Access of Resource Using Incompatible Type (&#x27;Type Confusion&#x27;)](https://learn.snyk.io/lesson/type-confusion/?loc&#x3D;fix-pr); 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14327:13068,Learn,Learn,13068,https://hail.is,https://github.com/hail-is/hail/pull/14327,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"3)</h1>; <ul>; <li>Fixed <code>HTTPResponse.stream()</code> to continue yielding bytes if buffered decompressed data; was still available to be read even if the underlying socket is closed. This prevents; a compressed response from being truncated. (<code>[#3009](https://github.com/urllib3/urllib3/issues/3009) &lt;https://github.com/urllib3/urllib3/issues/3009&gt;</code>__)</li>; </ul>; <h1>2.0.1 (2023-04-30)</h1>; <ul>; <li>Fixed a socket leak when fingerprint or hostname verifications fail. (<code>[#2991](https://github.com/urllib3/urllib3/issues/2991) &lt;https://github.com/urllib3/urllib3/issues/2991&gt;</code>__)</li>; <li>Fixed an error when <code>HTTPResponse.read(0)</code> was the first <code>read</code> call or when the internal response body buffer was otherwise empty. (<code>[#2998](https://github.com/urllib3/urllib3/issues/2998) &lt;https://github.com/urllib3/urllib3/issues/2998&gt;</code>__)</li>; </ul>; <h1>2.0.0 (2023-04-26)</h1>; <p>Read the <code>v2.0 migration guide &lt;https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html&gt;</code>__ for help upgrading to the latest version of urllib3.</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/262e3e332209ee93ff70e2b13502c8f20c105ac8""><code>262e3e3</code></a> Release 2.0.6</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/644124ecd0b6e417c527191f866daa05a5a2056d""><code>644124e</code></a> Merge pull request from GHSA-v845-jxx5-vc9f</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/740380c59ca2a7c2dceca19e5dba99f6b7060e62""><code>740380c</code></a> Bump cryptography from 41.0.3 to 41.0.4 (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3131"">#3131</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d9f85a749488188c286cd50606d159874db94d5f""><code>d9f85a7</code></a> Release 2.0.5</li>; <li><a href=""https://github.com/urll",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13768:11556,guid,guide,11556,https://hail.is,https://github.com/hail-is/hail/pull/13768,2,['guid'],['guide']
Usability,334); at scala.collection.TraversableOnce$class.fold(TraversableOnce.scala:212); at scala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$v,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7444,Simpl,Simplify,7444,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,"3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""50e1cce8-d68e-4133-a591-e2d1a6257337"",""prPublicId"":""50e1cce8-d68e-4133-a591-e2d1a6257337"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""41.0.4""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-3315975"",""SNYK-PYTHON-CRYPTOGRAPHY-3316038"",""SNYK-PYTHON-CRYPTOGRAPHY-3316211"",""SNYK-PYTHON-CRYPTOGRAPHY-5663682"",""SNYK-PYTHON-CRYPTOGRAPHY-5777683"",""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750"",""SNYK-PYTHON-CRYPTOGRAPHY-5914629"",""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use After Free](https://learn.snyk.io/lesson/use-after-free/?loc&#x3D;fix-pr); 🦉 [Access of Resource Using Incompatible Type (&#x27;Type Confusion&#x27;)](https://learn.snyk.io/lesson/type-confusion/?loc&#x3D;fix-pr); 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13887:9659,Learn,Learn,9659,https://hail.is,https://github.com/hail-is/hail/pull/13887,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""d900f7ca-fce7-41d4-a16d-bad109338beb"",""prPublicId"":""d900f7ca-fce7-41d4-a16d-bad109338beb"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""41.0.4""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-3315975"",""SNYK-PYTHON-CRYPTOGRAPHY-3316038"",""SNYK-PYTHON-CRYPTOGRAPHY-3316211"",""SNYK-PYTHON-CRYPTOGRAPHY-5663682"",""SNYK-PYTHON-CRYPTOGRAPHY-5777683"",""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750"",""SNYK-PYTHON-CRYPTOGRAPHY-5914629"",""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use After Free](https://learn.snyk.io/lesson/use-after-free/?loc&#x3D;fix-pr); 🦉 [Access of Resource Using Incompatible Type (&#x27;Type Confusion&#x27;)](https://learn.snyk.io/lesson/type-confusion/?loc&#x3D;fix-pr); 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13736:9659,Learn,Learn,9659,https://hail.is,https://github.com/hail-is/hail/pull/13736,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"3a82ee292f3e246b8f"">31c1b18</a>)</li>; <li>Added a new retention_duration field of Duration type (<a href=""https://github.com/googleapis/java-storage/commit/31c1b18acc3c118e39eb613a82ee292f3e246b8f"">31c1b18</a>)</li>; <li>Added object_checksums for compose/rewrite/startResumableWrite request (<a href=""https://github.com/googleapis/java-storage/commit/31c1b18acc3c118e39eb613a82ee292f3e246b8f"">31c1b18</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>Removed WriteObject routing annotations (<a href=""https://github.com/googleapis/java-storage/commit/31c1b18acc3c118e39eb613a82ee292f3e246b8f"">31c1b18</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>Clarified relative resource names in gRPC IAM RPCs (<a href=""https://github.com/googleapis/java-storage/commit/31c1b18acc3c118e39eb613a82ee292f3e246b8f"">31c1b18</a>)</li>; <li>Clarified the object can be deleted via DeleteObject (<a href=""https://github.com/googleapis/java-storage/commit/31c1b18acc3c118e39eb613a82ee292f3e246b8f"">31c1b18</a>)</li>; <li>Updated the document link for <code>Naming Guidelines</code> (<a href=""https://github.com/googleapis/java-storage/commit/31c1b18acc3c118e39eb613a82ee292f3e246b8f"">31c1b18</a>)</li>; </ul>; <h3>Dependencies</h3>; <ul>; <li>Update dependency com.google.cloud:google-cloud-shared-dependencies to v3.1.0 (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1797"">#1797</a>) (<a href=""https://github.com/googleapis/java-storage/commit/b1d026608a5e3772e8bf77f25f1daf68b007427a"">b1d0266</a>)</li>; <li>Update dependency org.apache.httpcomponents:httpclient to v4.5.14 (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1795"">#1795</a>) (<a href=""https://github.com/googleapis/java-storage/commit/cf900f4139f30f89e3c0784467ddc12cc00cf81c"">cf900f4</a>)</li>; <li>Update dependency org.apache.httpcomponents:httpcore to v4.4.16 (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1786"">#1786</a>) (<a href=""https://gith",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12545:1787,Guid,Guidelines,1787,https://hail.is,https://github.com/hail-is/hail/pull/12545,2,['Guid'],['Guidelines']
Usability,"5 seconds vs 0.25 seconds). ```; mysql> EXPLAIN SELECT jobs.job_id, spec, cores_mcpu, regions_bits_rep, time_ready; -> FROM jobs FORCE INDEX(jobs_batch_id_state_always_run_cancelled); -> LEFT JOIN jobs_telemetry ON jobs.batch_id = jobs_telemetry.batch_id AND jobs.job_id = jobs_telemetry.job_id; -> WHERE jobs.batch_id = BATCH_ID AND (jobs.batch_id < BATCH_ID OR (jobs.batch_id = BATCH_ID AND jobs.job_id <= 15000)) AND inst_coll = ""standard"" AND jobs.state = 'Ready' AND always_run = 0 AND cancelled = 0; -> ORDER BY jobs.batch_id, inst_coll, state, always_run, -n_regions DESC, regions_bits_rep, jobs.job_id; -> LIMIT 300;; +----+-------------+----------------+------------+--------+------------------------------------------+------------------------------------------+---------+-------------------------+-------+----------+----------------------------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+----------------+------------+--------+------------------------------------------+------------------------------------------+---------+-------------------------+-------+----------+----------------------------------------------------+; | 1 | SIMPLE | jobs | NULL | range | jobs_batch_id_state_always_run_cancelled | jobs_batch_id_state_always_run_cancelled | 136 | NULL | 24092 | 10.00 | Using index condition; Using where; Using filesort |; | 1 | SIMPLE | jobs_telemetry | NULL | eq_ref | PRIMARY | PRIMARY | 12 | const,batch.jobs.job_id | 1 | 100.00 | NULL |; +----+-------------+----------------+------------+--------+------------------------------------------+------------------------------------------+---------+-------------------------+-------+----------+----------------------------------------------------+; 2 rows in set, 1 warning (0.00 sec); ```. I'm open to other ideas for how to fix this. This change is a starting point for how to mitigate the issue in the short term. H",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13268:2209,SIMPL,SIMPLE,2209,https://hail.is,https://github.com/hail-is/hail/pull/13268,1,['SIMPL'],['SIMPLE']
Usability,"53f10629c3b6fa0d42acb751""><code>2bb4672</code></a> Update whats new for 3.12 (<a href=""https://redirect.github.com/ipython/ipython/issues/14000"">#14000</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/4f0b2357354aa35042244f902f9bcea9da65dfd9""><code>4f0b235</code></a> upate whats new for 3.12</li>; <li><a href=""https://github.com/ipython/ipython/commit/d52bf622ce9922106f8bcc1867c0a27a884201a0""><code>d52bf62</code></a> Allow to dispatch getting documentation on objects. (<a href=""https://redirect.github.com/ipython/ipython/issues/13975"">#13975</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/3a9419dce7d6ccf7de39be606eec2fc212ef4445""><code>3a9419d</code></a> Update completer documentation (<a href=""https://redirect.github.com/ipython/ipython/issues/13999"">#13999</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/a7d8defdecca3cfa54eada171181e0880c8b6b5f""><code>a7d8def</code></a> Expose <code>auto_suggest.resume_hinting</code>, fix resume on backspace (<a href=""https://redirect.github.com/ipython/ipython/issues/13994"">#13994</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/4e7b9408a0b35cabbdc973f131257f4e97a3ddcf""><code>4e7b940</code></a> Fix autosuggestions in multi-line mode, vi command mode delay (<a href=""https://redirect.github.com/ipython/ipython/issues/13991"">#13991</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/ad452c1d8bb25e742caa152fb301e0e6626b6faa""><code>ad452c1</code></a> Improve API documentation around configuration of embedded IPython (<a href=""https://redirect.github.com/ipython/ipython/issues/13989"">#13989</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/92027083ab69186db3f104fe38651086bcf4e760""><code>9202708</code></a> Handle OSError cases where traceback frames occur from built files (<a href=""https://redirect.github.com/ipython/ipython/issues/13964"">#13964</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/fc872d6cfab48d861c43c766d583e",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12832:1325,resume,resume,1325,https://hail.is,https://github.com/hail-is/hail/pull/12832,2,['resume'],['resume']
Usability,"5583eb44e881""><code>71d42ed</code></a> Support top-level async. Fixes <a href=""https://github-redirect.dependabot.com/microsoft/debugpy/issues/951"">#951</a></li>; <li><a href=""https://github.com/microsoft/debugpy/commit/6e247fb17bc15488a2cbefb7eed80c87179b147c""><code>6e247fb</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/microsoft/debugpy/issues/1009"">#1009</a> from rchiodo/rchiodo/missed_thread_for_self_trace</li>; <li><a href=""https://github.com/microsoft/debugpy/commit/cccfb954bd7321fbb25f234f0c9a2e8372646297""><code>cccfb95</code></a> Missed a thread to allow debugging</li>; <li><a href=""https://github.com/microsoft/debugpy/commit/6c19aba462d2a9b6ea79d5cbce2886bd961823eb""><code>6c19aba</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/microsoft/debugpy/issues/1007"">#1007</a> from rchiodo/rchiodo/allow_adapter_debugging</li>; <li><a href=""https://github.com/microsoft/debugpy/commit/10d8839a4cac4bdaf99cfe44ca2ee5479c95c003""><code>10d8839</code></a> Review feedback</li>; <li><a href=""https://github.com/microsoft/debugpy/commit/83ff28006d2f85cfbd03fcdc2650eea6831ab2b1""><code>83ff280</code></a> Add DEBUGPY_TRACE_DEBUGPY variable to allow debugpy to debug itself</li>; <li><a href=""https://github.com/microsoft/debugpy/commit/4f6638b0a6bbdec598987f7c2b62107a57edd6a6""><code>4f6638b</code></a> Fix <a href=""https://github-redirect.dependabot.com/microsoft/debugpy/issues/1001"">#1001</a>: Enable controlling shell expansion via &quot;argsCanBeInterpretedByShell&quot;</li>; <li><a href=""https://github.com/microsoft/debugpy/commit/6b276e339cd850c5f8c93ff4bdbd305dd963d7bb""><code>6b276e3</code></a> Step in/step over support for IPython. Fixes <a href=""https://github-redirect.dependabot.com/microsoft/debugpy/issues/869"">#869</a></li>; <li><a href=""https://github.com/microsoft/debugpy/commit/a294092d9c6d8459126ecb8f537b6012fb7e7d28""><code>a294092</code></a> Properly stop at line 1 in frame eval mode. Fixes <a href=""https://g",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12103:4218,feedback,feedback,4218,https://hail.is,https://github.com/hail-is/hail/pull/12103,2,['feedback'],['feedback']
Usability,"5f3f7910e"">b611670</a>)</li>; </ul>; <h2><a href=""https://www.github.com/googleapis/python-storage/compare/v1.43.0...v1.44.0"">1.44.0</a> (2022-01-05)</h2>; <h3>Features</h3>; <ul>; <li>add raw_download kwarg to BlobReader (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/668"">#668</a>) (<a href=""https://www.github.com/googleapis/python-storage/commit/10cdad630739a324ae0b16a3d14a67ca4c8a23c2"">10cdad6</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>Describe code sample more specifically (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/660"">#660</a>) (<a href=""https://www.github.com/googleapis/python-storage/commit/0459cb4e866696c46385a5ad72e2a85db810a36b"">0459cb4</a>)</li>; <li>refresh readme instructions (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/667"">#667</a>) (<a href=""https://www.github.com/googleapis/python-storage/commit/ceb931403a755f2a0bdc20144287dbc4700c3360"">ceb9314</a>)</li>; <li>This is just a simple PR to better describe what the code is doing in the comments. (<a href=""https://www.github.com/googleapis/python-storage/commit/0459cb4e866696c46385a5ad72e2a85db810a36b"">0459cb4</a>)</li>; <li>use writeable streamin example for 'download_blob_to_file' (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/676"">#676</a>) (<a href=""https://www.github.com/googleapis/python-storage/commit/96092d4be36be478f9671e8940de4fd09cc6f7f0"">96092d4</a>)</li>; </ul>; <h2><a href=""https://www.github.com/googleapis/python-storage/compare/v1.42.3...v1.43.0"">1.43.0</a> (2021-11-15)</h2>; <h3>Features</h3>; <ul>; <li>add ignore_flush parameter to BlobWriter (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/644"">#644</a>) (<a href=""https://www.github.com/googleapis/python-storage/commit/af9c9dc83d8582167b74105167af17c9809455de"">af9c9dc</a>)</li>; <li>add support for Python 3.10 (<a href=""https://github-redirect.dependa",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11520:3971,simpl,simple,3971,https://hail.is,https://github.com/hail-is/hail/pull/11520,1,['simpl'],['simple']
Usability,"6"",""to"":""6.4.12""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""},{""name"":""wheel"",""from"":""0.30.0"",""to"":""0.38.0""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-IPYTHON-2348630"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERCORE-3063766"",""SNYK-PYTHON-MISTUNE-2940625"",""SNYK-PYTHON-NBCONVERT-2979829"",""SNYK-PYTHON-NOTEBOOK-1041707"",""SNYK-PYTHON-NOTEBOOK-2441824"",""SNYK-PYTHON-NOTEBOOK-2928995"",""SNYK-PYTHON-PYGMENTS-1086606"",""SNYK-PYTHON-PYGMENTS-1088505"",""SNYK-PYTHON-PYGMENTS-5750273"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-SPHINX-570772"",""SNYK-PYTHON-SPHINX-570773"",""SNYK-PYTHON-SPHINX-5811865"",""SNYK-PYTHON-SPHINX-5812109"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512"",""SNYK-PYTHON-WHEEL-3180413""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,531,null,null,null,null,null,null,null,null,null,null,509,null,null,null,null,384,494,539,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Improper Privilege Management](https://learn.snyk.io/lesson/insecure-design/?loc&#x3D;fix-pr); 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14024:11130,Learn,Learn,11130,https://hail.is,https://github.com/hail-is/hail/pull/14024,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"8dc449ce32e603a""><code>2246217</code></a> burn the bridges with python 2.x (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/707"">#707</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/becbab65bae84e3e19fc388a42dfabcff0c323c8""><code>becbab6</code></a> upgrade flake8 to 4.0.1 (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/706"">#706</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/f736615f32a4bab27c9efeb5b8f8c31702efc4ab""><code>f736615</code></a> remove backported unittest methods (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/705"">#705</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/5959216f67837f3ddf5b959c21e097c7a3758d48""><code>5959216</code></a> remove checking of node.docstring (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/704"">#704</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/405a0906c8debafaae419472d3f51b84b7ba5c49""><code>405a090</code></a> simplify PYPY check (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/703"">#703</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/30ec8589e183f76f40764a8dd78591719f521943""><code>30ec858</code></a> remove unused WIN (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/702"">#702</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/PyCQA/pyflakes/compare/2.4.0...2.5.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pyflakes&package-manager=pip&previous-version=2.4.0&new-version=2.5.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12149:3098,simpl,simplify,3098,https://hail.is,https://github.com/hail-is/hail/pull/12149,1,['simpl'],['simplify']
Usability,"9 41 AM](https://user-images.githubusercontent.com/106194/149554866-221e4243-1238-4d01-8944-0a6ed0b4c28c.png). When you call `collect`, the Python-side `ServiceBackend` writes a file to cloud storage containing; the temporary directory, billing project, and the IR. In addition to the `execute` command used for; `collect`, there are command for getting the table type and references; genomes. `ServiceBackend._rpc` defines this API on the Python-side and; `is.hail.backend.service.ServiceBackendSocketAPI2` defines this API on the Scala-side. After writing to cloud storage, the ServiceBackend submits the one-job driver batch to Hail; Batch. It then waits for the driver job to complete. When the driver job is finished, it reads the; outputs from google cloud storage and returns the results to the user. All the meaningful changes to batch are in the worker. The worker starts one jvm per core on; startup. The mainclass is a new class called `JVMEntryway`. This entryway starts a UNIX socket and; speaks a very simple binary protocol. It accepts only one type of message:. ```; int32 the number of strings to expect; (; int32 the number of bytes in the next string; byte* UTF-8 string; )*; ```. The array of strings is interpreted as:. ```; comma-spearated-classpath; main-class-name; arg0; arg1; ...; ```. The entryway constructs a URLClassLoader with the given classpath, reflectively allocates an; instance of the mainclass and invokes the `main` method with the remaining arguments. This is; obviously a security risk. The system bans JARs from locations not controlled (and locked down) by; Hail Team. You should require me to hardcode the mainclass as; `is.hail.backend.service.ServiceBackendSocketAPI2` before we merge; however, this flexibility was; useful during development. The JVMEntryway will eventually be useful because we will keep a ClassLoader full of a bunch of; JIT-optimized Hail classes. I did not include that in this PR because we need to finish eliminating; global state",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11194:3126,simpl,simple,3126,https://hail.is,https://github.com/hail-is/hail/pull/11194,1,['simpl'],['simple']
Usability,:1334); at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157); at scala.collection.AbstractIterator.foldLeft(Iterator.scala:1334); at scala.collection.TraversableOnce$class.fold(TraversableOnce.scala:212); at scala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTrav,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7299,Simpl,Simplify,7299,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,":; - add compose to aiogoogle StorageClient and use it to implement (hierarchical) multi-part write for the google AsyncFS; - add AsyncFS.open_from, to open a file starting at a given offset,; - PART_SIZE is the size of parts to transfer and the combine with a multi-part write when copying large files. PART_SIZE is currently 128MB.; - BUFFER_SIZE is the size we request when reading in the copy. Change this to 256KB (from 8KB).; - Copy files in parts and use multi-part writes when copying large files.; - Parallelize rmtree (it now takes a semaphore for controlling parallelism); - Add new primitives for parallelization, bounded_gather2 and OnlineBoundedGather2. bounded_gather2 was an interesting design problem. I would describe it like this:. Say you have serial asyncio code with I/O (which will block the serial algorithm when the I/O is pending) which you'd like to parallelize. You can't do this generically, so in addition I imagine there are parallelization fork/join points where you want to run a bunch of subcomputations in parallel, wait for them all to complete, and resume where you left off. The code begins by creating a asyncio.Semaphore that globally bounds the parallelism of the code, and acquiring the semaphore before executing the code (since the entrypoint into the code accounts for one thread of control). For example:. ```; sema = asyncio.Semaphore(50); async with sema:; await copy(sema, ...); ```. Then, to run a set of operations in parallel, subject to the global parallelism bound, use bounded_gather2:. ```; await bounded_gather2(sema, *aws); ```. The naive implementation of bounded_gather2 doesn't work: bounded_gather2 cannot spawn a task for each awaitable and have it try to acquiare the semaphore, because this can lead to deadlock: if 50 tasks launch and wait for children, but none of those children can run because the parents have all the threads of control, the algorithm will deadlock. The key is to make sure at least one child can always be running",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9934:1151,resume,resume,1151,https://hail.is,https://github.com/hail-is/hail/pull/9934,1,['resume'],['resume']
Usability,"; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9866"">#9866</a>: autodoc: doccomment for the imported class was ignored</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/88f9647a223c77a29153683b49bc29852ed80721""><code>88f9647</code></a> Bump to 4.4.0 final</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/fc428ad324ef38402f1e93b38c61cd6348980ed2""><code>fc428ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9822"">#9822</a> from jakobandersen/intersphinx_role</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/5d595ec0c4294f45f3138c4c581b84c39cae5e29""><code>5d595ec</code></a> intersphinx role, simplify role_name check</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/6ee0ecbe40ab8a3251538409cf35ffcc04765bfa""><code>6ee0ecb</code></a> intersphinx role, simplify role name matching</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/3bf8bcd6e151a78b0dd003a3e76ff4c65566b6e6""><code>3bf8bcd</code></a> intersphinx role, update docs</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/c11b109d591a74f87de071ec4782ac3ab782ea38""><code>c11b109</code></a> intersphinx role: :external+inv:<strong>: instead of :external:inv+</strong>:</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/9589a2bc0531598cdd69f260f2f2c2dbc5852d6e""><code>9589a2b</code></a> intersphinx role, remove redundant method</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/941db550f02d76ee2b93300584ac85dc599d21e6""><code>941db55</code></a> intersphinx role, fix flake8 warnings</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/9a3f2b85421948c98647b10106c1bbb5ff1b0628""><code>9a3f2b8</code></a> intersphinx role, CHANGES</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/540d76035cc6bbf7ee1",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11522:6046,simpl,simplify,6046,https://hail.is,https://github.com/hail-is/hail/pull/11522,2,['simpl'],['simplify']
Usability,"; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/jupyterlab/jupyterlab/releases"">jupyterlab's releases</a>.</em></p>; <blockquote>; <h2>v4.0.11</h2>; <h2>4.0.11</h2>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab/compare/v4.0.10...0708330843fd087134a239d2ad6005b1d543e246"">Full Changelog</a>)</p>; <h3>Security fixes</h3>; <ul>; <li>Potential authentication and CSRF tokens leak in JupyterLab (<a href=""https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-44cc-43rp-5947"">GHSA-44cc-43rp-5947</a>)</li>; <li>SXSS in Markdown Preview (<a href=""https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-4m77-cmpx-vjc4"">GHSA-4m77-cmpx-vjc4</a>)</li>; </ul>; <h3>Bugs fixed</h3>; <ul>; <li>Fixes focus indicator on input checkbox for Firefox <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15612"">#15612</a> (<a href=""https://github.com/alden-ilao""><code>@​alden-ilao</code></a>)</li>; </ul>; <h3>Documentation improvements</h3>; <ul>; <li>Fix link to yarn docs in extension migration guide <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15640"">#15640</a> (<a href=""https://github.com/krassowski""><code>@​krassowski</code></a>)</li>; </ul>; <h3>Contributors to this release</h3>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab/graphs/contributors?from=2023-12-29&amp;to=2024-01-19&amp;type=c"">GitHub contributors page for this release</a>)</p>; <p><a href=""https://github.com/search?q=repo%3Ajupyterlab%2Fjupyterlab+involves%3Abrichet+updated%3A2023-12-29..2024-01-19&amp;type=Issues""><code>@​brichet</code></a> | <a href=""https://github.com/search?q=repo%3Ajupyterlab%2Fjupyterlab+involves%3Afcollonval+updated%3A2023-12-29..2024-01-19&amp;type=Issues""><code>@​fcollonval</code></a> | <a href=""https://github.com/search?q=repo%3Ajupyterlab%2Fjupyterlab+involves%3Agithub-actions+updated%3A2023-12-29..2024-01-19&amp;type=Issues""><code>@​github-actions</code></a> | <a href=""https://github.com/search?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14184:1153,guid,guide,1153,https://hail.is,https://github.com/hail-is/hail/pull/14184,1,['guid'],['guide']
Usability,; at scala.collection.Iterator$class.foreach(Iterator.scala:891); at scala.collection.AbstractIterator.foreach(Iterator.scala:1334); at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157); at scala.collection.AbstractIterator.foldLeft(Iterator.scala:1334); at scala.collection.TraversableOnce$class.fold(TraversableOnce.scala:212); at scala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(Wrapp,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7165,Simpl,Simplify,7165,https://hail.is,https://github.com/hail-is/hail/issues/8338,2,['Simpl'],['Simplify']
Usability,"</code> to correctly skip hostname check. <a href=""https://redirect.github.com/urllib3/urllib3/issues/3051"">#3051</a></li>; </ul>; <h2>2.0.2</h2>; <ul>; <li>Fixed <code>HTTPResponse.stream()</code> to continue yielding bytes if buffered decompressed data was still available to be read even if the underlying socket is closed. This prevents a compressed response from being truncated. (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3009"">urllib3/urllib3#3009</a>)</li>; </ul>; <h2>2.0.1</h2>; <ul>; <li>Fixed a socket leak when fingerprint or hostname verifications fail. (<a href=""https://redirect.github.com/urllib3/urllib3/issues/2991"">#2991</a>)</li>; <li>Fixed an error when <code>HTTPResponse.read(0)</code> was the first <code>read</code> call or when the internal response body buffer was otherwise empty. (<a href=""https://redirect.github.com/urllib3/urllib3/issues/2998"">#2998</a>)</li>; </ul>; <h2>2.0.0</h2>; <p>Read the <a href=""https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html"">v2.0 migration guide</a> for help upgrading to the latest version of urllib3.</p>; <h1>Removed</h1>; <ul>; <li>Removed support for Python 2.7, 3.5, and 3.6 (<a href=""https://redirect.github.com/urllib3/urllib3/issues/883"">#883</a>, <a href=""https://redirect.github.com/urllib3/urllib3/issues/2336"">#2336</a>).</li>; <li>Removed fallback on certificate <code>commonName</code> in <code>match_hostname()</code> function. This behavior was deprecated in May 2000 in RFC 2818. Instead only <code>subjectAltName</code> is used to verify the hostname by default. To enable verifying the hostname against <code>commonName</code> use <code>SSLContext.hostname_checks_common_name = True</code> (<a href=""https://redirect.github.com/urllib3/urllib3/issues/2113"">#2113</a>).</li>; <li>Removed support for Python with an <code>ssl</code> module compiled with LibreSSL, CiscoSSL, wolfSSL, and all other OpenSSL alternatives. Python is moving to require OpenSSL with PEP 644 (<a href=""https:/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13768:3320,guid,guide,3320,https://hail.is,https://github.com/hail-is/hail/pull/13768,3,['guid'],['guide']
Usability,"</p>; <blockquote>; <h2>Release 3.0.9</h2>; <h3>Security</h3>; <ul>; <li>Escape path before evaluating resource rules (thanks <a href=""https://github.com/praetorian-colby-morgan""><code>@​praetorian-colby-morgan</code></a>). Prior to this, flask-cors incorrectly; evaluated CORS resource matching before path expansion. E.g. &quot;/api/../foo.txt&quot; would incorrectly match resources for; &quot;/api/*&quot; whereas the path actually expands simply to &quot;/foo.txt&quot;</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/corydolphin/flask-cors/blob/master/CHANGELOG.md"">flask-cors's changelog</a>.</em></p>; <blockquote>; <h2>3.0.9</h2>; <h3>Security</h3>; <ul>; <li>Escape path before evaluating resource rules (thanks to Colby Morgan). Prior to this, flask-cors incorrectly; evaluated CORS resource matching before path expansion. E.g. &quot;/api/../foo.txt&quot; would incorrectly match resources for; &quot;/api/*&quot; whereas the path actually expands simply to &quot;/foo.txt&quot;</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/corydolphin/flask-cors/commit/91babb941e07a1f45636bdcb75675f13ce1503a2""><code>91babb9</code></a> Update Api docs for credentialed requests (<a href=""https://github-redirect.dependabot.com/corydolphin/flask-cors/issues/221"">#221</a>)</li>; <li><a href=""https://github.com/corydolphin/flask-cors/commit/522d98936f3995480fe3132b55415d74298d6790""><code>522d989</code></a> Release version 3.0.9 (<a href=""https://github-redirect.dependabot.com/corydolphin/flask-cors/issues/273"">#273</a>)</li>; <li><a href=""https://github.com/corydolphin/flask-cors/commit/67c4b2cc98ae87cf1fa7df4f97fd81b40c79b895""><code>67c4b2c</code></a> Fix request path normalization (<a href=""https://github-redirect.dependabot.com/corydolphin/flask-cors/issues/272"">#272</a>)</li>; <li><a href=""https://github.com/corydolphin/flask-cors/commit/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10464:1282,simpl,simply,1282,https://hail.is,https://github.com/hail-is/hail/pull/10464,1,['simpl'],['simply']
Usability,"<a href=""https://github.com/urllib3/urllib3/commit/aa3def7d242525e6e854991247c4b68583d15135""><code>aa3def7</code></a> Release 1.26.11</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/6f93b8f450b18b4c9f4c6333d759a911a63d15ae""><code>6f93b8f</code></a> Fix <code>OverflowError</code> when TLS is used on some Python versions</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/0a5f34d2c2ee6457e8365543243eccd3d1dc9430""><code>0a5f34d</code></a> Set GHA token permissions to be read-only</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/ac61b73da703df53707c31030b4ea51aab22d43c""><code>ac61b73</code></a> Backport publish workflow and process to 1.26.x</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/1fd77edc1a1373c9a7e762de148f19f1e2edd418""><code>1fd77ed</code></a> Release 1.26.10</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/37ba00248424ea3cdf556cc3e7aa81ce0bf40382""><code>37ba002</code></a> [1.26] Update paid contributor program with early feedback</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/dddbab3612ead7d39d1dc33a5a504703a8d0eecf""><code>dddbab3</code></a> [1.26] Bump RECENT_DATE</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/6dd01c74102db0d608687953e351e31df3f31d9f""><code>6dd01c7</code></a> [1.26] Update docs for re-using HTTP connections after streaming</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/2049c91f732ae4fec0216c0697dee7822c25db10""><code>2049c91</code></a> Adds changing branches for installing from git docs for 1.26.x</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/cb4950545be4d427557ce863539c08655c9bdd6e""><code>cb49505</code></a> [1.26] Improve testing for IPv6 scoped addresses</li>; <li>Additional commits viewable in <a href=""https://github.com/urllib3/urllib3/compare/1.26.9...1.26.11"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-na",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12104:3324,feedback,feedback,3324,https://hail.is,https://github.com/hail-is/hail/pull/12104,1,['feedback'],['feedback']
Usability,"<code>31a89d9</code></a> v2.27.1</li>; <li><a href=""https://github.com/psf/requests/commit/8fa9724398c4f44090997ff430a1dd3e935a9057""><code>8fa9724</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/psf/requests/issues/6028"">#6028</a> from nateprewitt/prox_auth_fix</li>; <li><a href=""https://github.com/psf/requests/commit/38f3f8ecb93cadfac03a6b7b3173018ac829d0cf""><code>38f3f8e</code></a> Fix auth parsing for proxies</li>; <li><a href=""https://github.com/psf/requests/commit/0192aac24123735b3eaf9b08df46429bb770c283""><code>0192aac</code></a> v2.27.0</li>; <li><a href=""https://github.com/psf/requests/commit/e50dc12b0f620ff80a0d2026b5b0a5282894bfd4""><code>e50dc12</code></a> Fix doc link</li>; <li><a href=""https://github.com/psf/requests/commit/17e6e27a93131b7295165408e69b4cadb098b0d7""><code>17e6e27</code></a> General cleanup for 2.27.0</li>; <li><a href=""https://github.com/psf/requests/commit/ab38e2c72608b95b047b05ccfaca833edb9db1b1""><code>ab38e2c</code></a> Make the <code>data</code> vs <code>json</code> parameters more clear (<a href=""https://github-redirect.dependabot.com/psf/requests/issues/5382"">#5382</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/77d1e9aa3e000b40fdf93cfc355e1fe7cc52b6ac""><code>77d1e9a</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/psf/requests/issues/5894"">#5894</a> from dbaxa/do-not-re-build-proxies-when-proxies-have...</li>; <li><a href=""https://github.com/psf/requests/commit/b0829a869081c2a6180db2cdc41a5676922becd0""><code>b0829a8</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/psf/requests/issues/6020"">#6020</a> from nateprewitt/pypy_37</li>; <li><a href=""https://github.com/psf/requests/commit/28d537dde33b35c3b7071afd99122eff3538b42c""><code>28d537d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/psf/requests/issues/5917"">#5917</a> from nateprewitt/proxy_scheme_unknown_fix</li>; <li>Additional commits viewable in <a ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11528:7986,clear,clear,7986,https://hail.is,https://github.com/hail-is/hail/pull/11528,2,['clear'],['clear']
Usability,"<img width=""1168"" alt=""Screen Shot 2021-05-24 at 4 54 34 PM"" src=""https://user-images.githubusercontent.com/63973811/129767519-85ab5cf1-2da6-41ee-b52f-44bdf63f7118.png"">. The goal of this progress bar is to have a visual concept that could show the progress of every job created. We added Plotly to show how long it takes for each step to complete when creating a batch job. We decided to use the container_status already created and created a new variable that would hold the new data that Plotly would produce. We use the job-status variable to obtain all of the creating pulling and posting information created. We inserted the data collected through a for-loop that test for each possible test case.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10687:188,progress bar,progress bar,188,https://hail.is,https://github.com/hail-is/hail/pull/10687,1,['progress bar'],['progress bar']
Usability,"=n1-standard-8', '--zone=us-central1-b', '--initialization-action-timeout=20m', '--labels=creator=weisburd_broadinstitute_org', '--max-idle=12h']' returned non-zero exit status 1.; ```. Then looking at the error log; ```; $ gsutil cat gs://dataproc-d919bddb-bde3-4138-bbe1-e068dfa1e550-us/google-cloud-dataproc-metainfo/3ec45dcc-d901-4777-930c-23046e64a97d/bw2-m/dataproc-initialization-script-0_output; pip packages are ['setuptools', 'mkl<2020', 'ipywidgets<8', 'jupyter_console<5', 'nbconvert<6', 'notebook<6', 'qtconsole<5', 'jupyter', 'tornado<6', 'lxml<5', 'google-cloud==0.32.0', 'ipython<7', 'jgscm<0.2', 'jupyter-spark', 'aiohttp', 'bokeh>1.1,<1.3', 'decorator<5', 'gcsfs==0.2.1', 'hurry.filesize==0.9', 'ipykernel<5', 'nest_asyncio', 'numpy<2', 'pandas>0.22,<0.24', 'parsimonious<0.9', 'PyJWT', 'python-json-logger==0.1.11', 'requests>=2.21.0,<2.21.1', 'scipy>1.2,<1.4', 'tabulate==0.8.3', 'slackclient==2.0.0', 'websocket-client', 'sklearn', 'tabulate', 'statsmodels', 'scikit-learn', 'hdbscan', 'matplotlib']; b""Double requirement given: tabulate (already in tabulate==0.8.3, name='tabulate')\nYou are using pip version 10.0.1, however version 19.1.1 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n""; Traceback (most recent call last):; File ""/etc/google-dataproc/startup-scripts/dataproc-initialization-script-0"", line 16, in safe_call; sp.check_output(args, stderr=sp.STDOUT); File ""/opt/conda/default/lib/python3.6/subprocess.py"", line 336, in check_output; **kwargs).stdout; File ""/opt/conda/default/lib/python3.6/subprocess.py"", line 418, in run; output=stdout, stderr=stderr); subprocess.CalledProcessError: Command '('pip', 'install', 'setuptools', 'mkl<2020', 'ipywidgets<8', 'jupyter_console<5', 'nbconvert<6', 'notebook<6', 'qtconsole<5', 'jupyter', 'tornado<6', 'lxml<5', 'google-cloud==0.32.0', 'ipython<7', 'jgscm<0.2', 'jupyter-spark', 'aiohttp', 'bokeh>1.1,<1.3', 'decorator<5', 'gcsfs==0.2.1', 'hurry.filesize==0.9', 'ipykernel<5",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6634:5622,learn,learn,5622,https://hail.is,https://github.com/hail-is/hail/issues/6634,1,['learn'],['learn']
Usability,"> +1,738 -2,452. Sorry :-(. High level summary changes:; - batch and batch2: Removed /batch endpoint limit and offset options, added include_jobs. Limit was ever only 0 or None. Going forward, /batch should never return jobs, and /jobs endpoint should always paginate.; - Got rid of pods. There is no pod_status options on the client, but they are left in for legacy reasons (batch).; - Simplified worker startup and cleaned up logging paths. The old code could restart the worker after a failure after it had activated. I don't think we're equipped for that case. I do explicitly pull the worker image (with one retry) before trying to run it.; - Batch and Job are gone. database.py is effectively gone. Almost everywhere interacts directly with the database using the simple gear.Database interface, and drops down to aiomysql directly when that is insufficient (e.g. transaction with multiple executemany for /jobs/create). When we pass around data representing a job or batch, it's normally a data record (a dict).; - Added the running log test from your PR.; - The job status is no longer written to a file, just in the database jobs.status.; - I moved the INSTANCE_ID to the database. There is now a table called tokens. It has the instance id and a token for securing communication between the front end and the driver (currently unused).; - Operations that need to be atomic in the database are now implemented as stored procedures which can be called with the check_call_procedure helper in database.py. They return a row with a field rc (return code) that is 0 on success and non-zero on failure.; - Renamed Driver => Scheduler. Scheduler has two threads, one that schedules jobs that are in the Ready state, and one that cancels cancelled jobs in the Running state. There is a new job state Ready. A job is Ready if its parents are complete and it is not scheduled (instance_id is null). A job is Running if it is scheduled (instance_id is not null).; - The full set of instances are mirror",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7420:387,Simpl,Simplified,387,https://hail.is,https://github.com/hail-is/hail/pull/7420,2,"['Simpl', 'simpl']","['Simplified', 'simple']"
Usability,">; <h2>3.0.1</h2>; <p>Fix for a long standing vulnerability around temporary directory creation which could expose data to malicious users with access to a shared system. See for more information <a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1617"">#1617</a></p>; <p>4a4024a97 Fix temporary directory hijacking or temporary directory information disclosure (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1621"">#1621</a>); 9fd0ecf21 Disable codecov until we can fix the uploader (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1622"">#1622</a>); 347c0ac57 Fix EdgeReadIterator (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1616"">#1616</a>); d15a5bacb Added ULTIMA and ELEMENT as valid value for RG-PL according to SAM spec. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1619"">#1619</a>)</p>; <h2>3.0.0</h2>; <p>Htsjdk 3.0.0: Revenge of the Simple Allele</p>; <p>This is the first htsjdk with a major version increase in a long time. We bumped it to indicate there are some breaking changes that will potentially require downstream code changes. Notably, <code>Allele</code> became an interface instead of a concrete class. <code>SimpleAllele</code> may be used as a replacement if you have classes which previously subclassed allele.</p>; <p>New Plugin Infrastructure:; 6a60de7c2 Move API marker annotations into new annotation package. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1558"">#1558</a>); 7ac95d5f7 Plugin framework and interfaces for versioned file format codecs (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1525"">#1525</a>); d40fe5412 Beta implementation of Bundles. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1546"">#1546</a>)</p>; <p>CRAM; 489c4192d Support CRAM reference regions. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1605"">#1605</a>); 22aec678",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12229:1200,Simpl,Simple,1200,https://hail.is,https://github.com/hail-is/hail/pull/12229,1,['Simpl'],['Simple']
Usability,">Sourced from <a href=""https://github.com/elastic/elasticsearch-hadoop/releases"">elasticsearch-spark-20_2.12's releases</a>.</em></p>; <blockquote>; <h2>Elasticsearch Hadoop 8.4.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html</a></p>; <h2>Elasticsearch Hadoop 8.4.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html</a></p>; <h2>Elasticsearch Hadoop 8.4.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html</a></p>; <h2>Elasticsearch Hadoop 8.4.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html</a></p>; <h2>Elasticsearch Hadoop 8.3.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html</a></p>; <h2>Elasticsearch Hadoop 8.3.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12358:1145,guid,guide,1145,https://hail.is,https://github.com/hail-is/hail/pull/12358,1,['guid'],['guide']
Usability,">Sourced from <a href=""https://github.com/elastic/elasticsearch-hadoop/releases"">elasticsearch-spark-20_2.12's releases</a>.</em></p>; <blockquote>; <h2>Elasticsearch Hadoop 8.6.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html</a></p>; <h2>Elasticsearch Hadoop 8.5.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html</a></p>; <h2>Elasticsearch Hadoop 8.5.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html</a></p>; <h2>Elasticsearch Hadoop 8.5.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html</a></p>; <h2>Elasticsearch Hadoop 8.5.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/da4f3c3f209aea47d69c4faf90029a6933bd3a60""><code>da4f3c3</code></a> [DOCS] Add 8.5.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12601:1144,guid,guide,1144,https://hail.is,https://github.com/hail-is/hail/pull/12601,1,['guid'],['guide']
Usability,">Sourced from <a href=""https://github.com/elastic/elasticsearch-hadoop/releases"">elasticsearch-spark-20_2.12's releases</a>.</em></p>; <blockquote>; <h2>Elasticsearch Hadoop 8.6.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.1.html</a></p>; <h2>Elasticsearch Hadoop 8.6.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html</a></p>; <h2>Elasticsearch Hadoop 8.5.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html</a></p>; <h2>Elasticsearch Hadoop 8.5.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html</a></p>; <h2>Elasticsearch Hadoop 8.5.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html</a></p>; <h2>Elasticsearch Hadoop 8.5.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12623:1144,guid,guide,1144,https://hail.is,https://github.com/hail-is/hail/pull/12623,1,['guid'],['guide']
Usability,">Sourced from <a href=""https://github.com/elastic/elasticsearch-hadoop/releases"">elasticsearch-spark-30_2.12's releases</a>.</em></p>; <blockquote>; <h2>Elasticsearch Hadoop 8.4.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html</a></p>; <h2>Elasticsearch Hadoop 8.4.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html</a></p>; <h2>Elasticsearch Hadoop 8.4.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html</a></p>; <h2>Elasticsearch Hadoop 8.4.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html</a></p>; <h2>Elasticsearch Hadoop 8.3.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html</a></p>; <h2>Elasticsearch Hadoop 8.3.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:1144,guid,guide,1144,https://hail.is,https://github.com/hail-is/hail/pull/12319,1,['guid'],['guide']
Usability,"@cseed I've implemented `readPartitions` on `HailContext` and `writePartitions` on `RichRDD`, re-implemented read/write of blocks on `BlockMatrix` to preserve partitioning using these, and moved MatrixValue and KeyTable row read/write to use these. readPartitions and writePartitions use `unsafeReadPartition` and `writePartition` in RichHadoopConfig. `readRow` includes `close()`, and I've added `close()` to `readBlock` as well. At first I used `using` (see `readPartition` which is remarked out), but this closes the resource before the iterator iterated in the readRows case. Yet somehow, `testWriteRead` in VSMSuite passes even with `readPartition`. This test just creates a random VDS, writes, reads, compares. I added `testWriteRead2` which imports `sample.vcf`, writes, reads, compares. And indeed, the latter fails with `readPartition`. I have no explanation for why the behavior would differ (could the former be somehow cached?). I'm not happy with the asymmetry or lake of read safety if closing isn't propagated backward (I think it is for DataInputStream), but would like to get your feedback before messing around with these functions further. I've left the filename that had ReadRowsRDD with that name so it's easier to compare, but will change prior to merging since that class is gone. No class jumps out, should I just use the first one, `ArrayInputStream`, or a name that's not a class?. `ReadRDDPartition` in file ReadRowsRDDs and `IntPartition` in `BlockMatrix` have the same definition (the latter is used for more than just reading). I'm thinking of just having IntPartition located somewhere other than BlockMatrix. Any thoughts on where?. I added `sqrt` on blockSize in `blockMatrixGen` in order to get more cases with `blockSize < min(rows, cols)`. Only 1 of 10 had this property in `readWriteIdentityRandom` and its an important case to check with respect to the GridPartitioner dealing with block indices corrected (particularly with transpose in the mix).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2367:1098,feedback,feedback,1098,https://hail.is,https://github.com/hail-is/hail/pull/2367,1,['feedback'],['feedback']
Usability,"@cseed It's still not quite as tidy as I'd like it to be, but I thought I'd throw it up for feedback. Builds on #4722.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4728:92,feedback,feedback,92,https://hail.is,https://github.com/hail-is/hail/pull/4728,1,['feedback'],['feedback']
Usability,"@cseed after comments in #2482, I reworked this so that for each block row, each overlapping parent partition is iterated through once, writing out the full row into files corresponding to block columns. Based on the WriteBlocksRDDPartition comment and looking at BlockedRDD, now rather than computing the indices of all non-empty overlapping parent partitions, I switched to just computing the first and last overlapping parent partitions, and the number of rows to skip in the first partition, and put this in WriteBlocksRDDPartition. I'd appreciate feedback on this approach, and whether I've put the ""right"" data in WriteBlocksRDDPartition. In particular, I'm unsure why `computeBlockRowDependencies` would have been called multiple times given that it's a private val in the class. Is the class serialized to workers before function evaluation? Is parentPartitionBoundaries recomputed as well? I don't have a clear model. The function `computeBlockRowDependencies` could be moved directly into getDependencies; I kept it separate in order to write a simple test. I'm not a huge fan of the array of tuples but it seemed more natural than three arrays.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2494:552,feedback,feedback,552,https://hail.is,https://github.com/hail-is/hail/pull/2494,3,"['clear', 'feedback', 'simpl']","['clear', 'feedback', 'simple']"
Usability,"@cseed definitely ready for some feedback. I replaced Iterable with SharedIterable in VSM, and carried it through to the point that Main builds ... which took more than 30 lines. I had to comment out VSMSubgen because I could not get this to work in SharedIterable:. `implicit def canBuildFrom[T]: CanBuildFrom[Coll, T, SharedIterable[T]] = ReusableCBF.asInstanceOf[GenericCanBuildFrom[T]]`. I left in FIXME's wherever I used toIterable to go from SharedIterable to Iterable, such as VSM functions that will need to be implemented separately in GDS and VSM (in retrospect, I suppose I could have just searched for toIterable usages). toIterable won't yet cause problems since I haven't yet moved to MutableGenotypeStreamIterator, so I could temporarily make the test work with toIterators as well, though I'd then need to go and switch them all back later. Once the Builder issue is resolved, I'm thinking the next step would be to make SharedIterable abstract and add abstract functions that are necessary to remove the toIterables and for the tests (like `expandCollect`). Then I'd have two realizations, SharedIterableGenotype for VDS which takes advantage of copy on Genotype, and UnsharedIterable (names need adjustment) for GDS which assumes no sharing. If all tests pass, I'd then switch over to MutableGenotypeStreamIterator...and in principal everything should pass.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1570:33,feedback,feedback,33,https://hail.is,https://github.com/hail-is/hail/pull/1570,1,['feedback'],['feedback']
Usability,@cseed opening for feedback as discussed,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2460:19,feedback,feedback,19,https://hail.is,https://github.com/hail-is/hail/pull/2460,1,['feedback'],['feedback']
Usability,"@daniel-goldstein, I'm vaguely worried given that the tests didn't fail on your PR the other day. Let's get a simple test that filters and/or sparsifies a block and then exports.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5500:110,simpl,simple,110,https://hail.is,https://github.com/hail-is/hail/issues/5500,1,['simpl'],['simple']
Usability,@danking Can you do an initial pass and make sure there aren't any major issues with the Python code? I am most concerned with how I setup the disk manager and the disk creation / deletion code to avoid costly mistakes. I am aware of the FIXMEs. I haven't tested this at all yet. It would be great if I could have feedback on Wednesday so I can have this PR completely done on Friday.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11253:314,feedback,feedback,314,https://hail.is,https://github.com/hail-is/hail/pull/11253,1,['feedback'],['feedback']
Usability,"@danking I have a mostly completed draft for SAIGE in QoB. Can you take a look? I'm mainly looking for enough feedback to get a green light to actually start testing this end to end, fill in the remaining not implemented components, add documentation, add verbosity and possibly a dry run feature, and support VEP annotations natively. There are a couple of core concepts:; 1. Phenotypes - Set of phenotypes to test. I support the ability to group phenotypes together. This is in anticipation of a new version of SAIGE that Wei is going to release soon.; 2. VariantChunks - The set of variant intervals of data to test per job. If it's SAIGE-GENE, then there's also the ""groups"" to actually test within that interval.; 3. io - There's a bunch of wrappers that handle input and output files so all of that logic combined with the checkpointing logic is abstracted away from what is actually going on.; 4. steps - These are the SAIGE modules to run. They are all dataclasses with configuration options; 5. saige - There's a class that can be instantiated in Python or I started writing the framework for a CLI. This has the code that builds the DAG end to end. All configuration happens with a yaml file that can overwrite default parameters for each step such as whether to checkpoint or where the results should be written to. For the CLI, I envision you can either give a config file and/or specify `--overrides step1_null_glmm.use_checkpoint=true`. For every Saige run, I write out the configuration used to a file in the output directory as well as information about the input data and variant chunks and the batch information.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13804:110,feedback,feedback,110,https://hail.is,https://github.com/hail-is/hail/pull/13804,1,['feedback'],['feedback']
Usability,"@danking, I started playing with your ASM experiment and wrote a library for lightweight bytecode generation. The primary abstractions are `FunctionBuilder` and `Code[T]`. The latter is an object that can generate bytecode to produce a value of type `T` on the top of the stack. I'm reasonably happy with the interface, see this example for factorial:. https://github.com/cseed/hail/commit/93d95982bccd16ffa531f67fa47163f3fc8cbdde#diff-e434fa9004c38142a8f6f64ffa73b48eR109. No ClassBuilder yet. Apart from that, all the major features are there. There are a bunch of missing operations (type conversions, for example) and I only have wrapper classes for `Int` and `Double`. Once we fill it out I think it will make an excellent stand-alone library. While I optimized conditional generation to be smart about converting between indicator values (0, 1) and branch targets, it still emits some unnecessary GOTOs for fall through and could be improved. There are two double comparison bytecodes (DCMPG and DCMPL) that treat NAN differently. I wasn't sure which one to use. We should probably emulate Java/Scala. I can't tell if ASM is generating short bytecodes for load from small local indices (e.g. ILOAD_2) or small constants (e.g., ICONST_3). It isn't clear if the pretty printer that comes with ASM makes a distinction. We probably need to dump to a file and run `javap`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/921:1253,clear,clear,1253,https://hail.is,https://github.com/hail-is/hail/pull/921,1,['clear'],['clear']
Usability,"@jbloom22 opening this PR so we have something to work from. I think the dimensions where the ability to scale with Hail will be beneficial are:; * heritability estimation of many phenotypes at once; * partitioned LDSC with potentially thousands of covariates (Ran is currently exploring this space); * multiple tests of enrichment across different annotations (fitting the ""baseline"" partitioned model with ~50 covariates + 1 annotation of interest thousands of times -- Kate has been working in this area). In this first effort, I'm trying to implement the univariate, ""vanilla"" version of LD score regression -- no partitioning/annotations, just simple linear regression of chi-squared statistics on LD scores -- though I have tried to build for the first bullet point above, heritability estimation of many phenotypes at once.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5026:649,simpl,simple,649,https://hail.is,https://github.com/hail-is/hail/pull/5026,1,['simpl'],['simple']
Usability,"@jigold I screwed up the stacked PRs so I'll need reapprovals. Sorry :(; ---; 1. Separating the `apk update` from the `apk add` means that; if the apk package repository metadata changes (say, the; URL of some repository changes) and we change our `apk add`; line (say we add a new package), then the `apk add` will; fail (e.g. because it has an out of date URL for the; repository that should contain the new package). The; `apk add --no-cache ...` invocation is essentially the same; as `apk update && apk add ... && rm -rf /path/to/repo/cache`.; When using docker, it is good practice remove unnecessary; files so that they do not get included in the ""image diff""; for that line of the Dockerfile. `apk add --no-cache ...`; succinctly performs exactly what we want. 2. Keeping each package on a separate line and sorting those; lines makes diffs easy-to-read with one line per new package. 3. Because `COPY` moves all the *contents* of a source folder into; the contents of the destination path (creating it if it does not; exist), it seems more clear to say `/batch/batch/`, indicating; that we are moving data into a folder.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4828:1049,clear,clear,1049,https://hail.is,https://github.com/hail-is/hail/pull/4828,1,['clear'],['clear']
Usability,@jigold identified `ibd_prune` as one of the slowest parts of the python doc test. This method is simply not effective. Users should use `pc_relate` or `ibd` in conjunction with `KeyTable.maximal_independent_set`. I didn't reimplement `ibd_prune` in terms of them simply to save time and because getting master builds going fast is important when we have limited build agents.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2274:98,simpl,simply,98,https://hail.is,https://github.com/hail-is/hail/pull/2274,2,['simpl'],['simply']
Usability,@konradjk @bw2 Can you double check the test examples in `test_liftover_negative_strand` and give feedback on the interface?,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4895:98,feedback,feedback,98,https://hail.is,https://github.com/hail-is/hail/pull/4895,1,['feedback'],['feedback']
Usability,"@konradjk asked for weighted OLS, which is just a transformation of `x` and `y` by `sqrt(w)`. Currently `sqrt` is done `1 + len(x)` per record rather than once because you can't bind inside an aggregate. If that's a bottleneck, I could rework the aggregator to pass the w through to scala and avoid taking sqrt altogether. But for now this simple change at the Python level seems reasonable.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4146:340,simpl,simple,340,https://hail.is,https://github.com/hail-is/hail/pull/4146,1,['simpl'],['simple']
Usability,"@patrick-schultz I'm not sure if this makes sense or not, but I observed it while working on something else. It seems weird but acceptable to import an empty dictionary as any struct. Does this seem reasonable to you? How have we avoided this bug for so long?. I'm not familiar enough with this code to know how to simply reproduce the bug and add a corresponding test. Thoughts?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14202:315,simpl,simply,315,https://hail.is,https://github.com/hail-is/hail/pull/14202,1,['simpl'],['simply']
Usability,"@patrick-schultz I've assigned this to you because I wanted your feedback, but I'm happy to spin the wheel if you'd prefer. cc @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4809:65,feedback,feedback,65,https://hail.is,https://github.com/hail-is/hail/pull/4809,1,['feedback'],['feedback']
Usability,"@tpoterba Some changes to the load_dataset() function and documentation. @jbloom22 I reworded the ""Datasets"" documentation page. Is it clearer now, or is there anything else you would like to add?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4494:135,clear,clearer,135,https://hail.is,https://github.com/hail-is/hail/pull/4494,1,['clear'],['clearer']
Usability,"@tpoterba per your comments have largely left the PStruct varargs constructor in use in the PCanonicalStruct implementation. I think it would be simpler to just use the normal IndexedSeq constructor, and slightly more performant, and if you're interested in that could issue a separate PR. The only change in the implementation of PCanonicalStruct from the master version of PStruct is that I pass through requiredeness in all construction operations. Previously a few, like rename would not do this. Notably this only happened when they used the more complex varargs constructor, and seemed like a bug. The empty constructor was removed because it wasn't necessary.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7733:145,simpl,simpler,145,https://hail.is,https://github.com/hail-is/hail/pull/7733,1,['simpl'],['simpler']
Usability,"@tpoterba there is one minor implementation difference, wanted to check if you considered it too far afield: removed `PStringOptional` and `PStringRequired`. These are used in only 3 classes, and *Optional/Required classes are inconsistently used in the codebase anyways. By removing them we have fewer legacy constructors hanging off PArray.; * Furthermore, by adding the final class modifier to PCanonicalString, I'm not sure we can implement a case object in the same way (cannot extend PCanonicalString, which means places that expect a PType, like `StagedBlockLinkedListSuite.scala:159`, won't type check, if we simply make a PStringOptional with a constructor that calls `PCanonicalStruct()`)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7750:617,simpl,simply,617,https://hail.is,https://github.com/hail-is/hail/pull/7750,1,['simpl'],['simply']
Usability,@tpoterba you were in here recently for performance so your eyes are appreciated. I simplified things a bit and localized almost all the parsing logic to `BgenRecord`. The contract for `advance` is that it is always called when `bfis` is pointing at the start of a record _or_ at or past the `end`. Advance will return the position to the start of a record or at or past the `end`. It returns true if there was a new record found. False otherwise. I avoided a couple allocating patterns. The rest of the diffs are copy pastes and some indentation changes.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3783:84,simpl,simplified,84,https://hail.is,https://github.com/hail-is/hail/pull/3783,1,['simpl'],['simplified']
Usability,A few more rules for simplify,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3679:21,simpl,simplify,21,https://hail.is,https://github.com/hail-is/hail/pull/3679,2,['simpl'],['simplify']
Usability,"A little chaos testing revealed a database integrity issue. If jobs.state = Running, instance_id must be non-null. I incorrectly had `ON DELETE SET NULL`. Instead, make sure that the instance has been deactivated (which reschedules all jobs, setting state = Ready) before deleting the instance entry. Also, feedback on cancellation.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7443:307,feedback,feedback,307,https://hail.is,https://github.com/hail-is/hail/pull/7443,1,['feedback'],['feedback']
Usability,"A lot of changes here. A summary:; - This subsumes notebook, so I deleted notebook and renamed notebook2 => notebook. Apologies, this makes the diff slightly harder to read.; - Added a simple messaging framework, stored in aiohttp session cookie, set message with `set_message`, handled by web_common by `base_context` by the default layout,; - Added notebook.hail.is/workshop-admin to manage and enable/disabled workshops. Workshops stored in the database.; - Workshop will be located at notebook.hail.is/workshop (I will move to workshop.hail.is as a later step); - Meta change: don't try to track dependencies on `make check` everywhere, it isn't really needed and it wasn't correct; - Rewrote code to monitor the spin up of notebooks: store notebook state in the database. I'm happy with how it turned out, it will be simpler and more reliable.; - I refactored the auth code to support the needs of workshops. I think it is also improved: simpler. Things left to do:; - ~~Port the load test code. And load test!~~; - The notebook link shouldn't be click-able if the notebook isn't ready. (Even better: If you click, launch the notebook when it is ready.); - ~~Didn't test the error case (when the notebook isn't actually available). This probably needs some work, and should get integrated into the message framework.~~; - The workshop header is a bit spare. Maybe add a slash (/) link. What would it link to?; - ~~Move notebook.hail.is/workshop to workshop.hail.is~~; - (low-prio) Finally, when the notebook state changes, we just refresh the page. Might be nice to just dynamically update HTML. Maybe react?; - (unrelated) The message framework should get used by the other services. @tpoterba I'm assigning this to you since you're point for the workshop. @akotlar knows this code if you want to re-assign. I gave you an account in my namespace, so you should be able to see/play with this at internal.hail.is/cseed/notebook. FYI @akotlar",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7112:185,simpl,simple,185,https://hail.is,https://github.com/hail-is/hail/pull/7112,3,['simpl'],"['simple', 'simpler']"
Usability,A much simpler fix for literals problem,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4173:7,simpl,simpler,7,https://hail.is,https://github.com/hail-is/hail/pull/4173,2,['simpl'],['simpler']
Usability,"A simple but powerful extension requested by @alexb-3 and Christina to allow for synthetic genotypes with very general and realistic-looking PCA plots with [redacted]. Alex pointed out that BaldingNichols is special case of PritchardStephensDonnelly in a degenerate sense, just as one-hot encoded `Categorical(p_1,...,p_k)` is the distributional limit of `Dirichlet(a * p_1,..., a * p_k)` as `a` goes to 0. So the substantive changes took about 10 lines. It's turned on by the `mixture` parameter which defaults to False and is marked as experimental. `True` means treat `pop_dist` as the parameters of Dirichlet rather than Categorical. @alexb-3 , it'd be great if you and Christina could experiment with it and extend the documentation accordingly. Once we have that, I'll add tests and remove ""experimental"". The plots below are already quite convincing. ```; import hail as hl; import matplotlib.pyplot as plt. mt = hl.balding_nichols_model(3, 500, 50, pop_dist=[0.01, 0.02, 0.05], fst=[.2, .3, .5]); _, pcs, _ = hl.hwe_normalized_pca(mt, 3); plt.scatter(pcs.PC1.collect(), pcs.PC2.collect()); ```. ![ex0](https://user-images.githubusercontent.com/3201642/37743475-a470a372-2d40-11e8-894c-5ed0d74f3d14.png). ```; mt = hl.balding_nichols_model(3, 500, 50, pop_dist=[0.01, 0.02, 0.05], fst=[.2, .3, .5], mixture=True); ```. ![ex1](https://user-images.githubusercontent.com/3201642/37743104-decf0da8-2d3e-11e8-8d43-3e36f194fa8e.png). ```; mt = hl.balding_nichols_model(3, 500, 50, pop_dist=[0.1, 0.2, 0.5], fst=[.2, .3, .5], mixture=True); ```. ![ex2](https://user-images.githubusercontent.com/3201642/37743108-e2e4cfe0-2d3e-11e8-9860-724de2c6611c.png)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3206:2,simpl,simple,2,https://hail.is,https://github.com/hail-is/hail/pull/3206,1,['simpl'],['simple']
Usability,"A simple pipeline to generate fingerprinting data for gnomad v4 failed. . ```python3; import hail as hl; from gnomad_qc.v4.resources.basics import get_gnomad_v4_vds; hl.init(default_reference='GRCh38'); ​; ht = hl.import_table(; ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; comment=(""@""),; ); ht = ht.key_by(locus=hl.locus(ht['#CHROMOSOME'], hl.int(ht['POSITION'])), alleles=hl.array([ht.MAJOR_ALLELE, ht.MINOR_ALLELE])); vds = get_gnomad_v4_vds(split=True, remove_hard_filtered_samples=False); vds = hl.vds.filter_variants(vds, ht); mt = hl.vds.to_dense_mt(vds); mt = mt.checkpoint(""gs://gnomad/v4.0/sample_qc/exomes/gnomad.exomes.v4.0.fingerprinting_variants.mt"", overwrite=True); ```. We were able to get it to succeed, but filtering the variant data first on locus, splitting it, filtering it on variants. Then proceeding. There may be an ugly interaction with joins and explode but it needs more investigation.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/11717:2,simpl,simple,2,https://hail.is,https://github.com/hail-is/hail/issues/11717,1,['simpl'],['simple']
Usability,A simplistic port that still uses an EmitCode for the element IR to keep; BinarySearch mostly happy,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9915:2,simpl,simplistic,2,https://hail.is,https://github.com/hail-is/hail/pull/9915,1,['simpl'],['simplistic']
Usability,"A user was getting an index out-of-bounds error on `cdf.values[idx]`. I can't reproduce it, but this should guarantee the index is in bounds, and is a simplification besides.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10624:151,simpl,simplification,151,https://hail.is,https://github.com/hail-is/hail/pull/10624,1,['simpl'],['simplification']
Usability,"A while back, TJ raised some concerns about the expressivity of hailtop.batch.; In this PR, I basically rebuilt hailtop.batch from scratch as a learning; exercise. Once I understood how it worked, I added two valuable features:. 1. `hb.remote` creates a ""remote"" resource which is never localized but still; creates dependency relationships. 2. `ResourceToStringPickler` which pickles resources appropriately even if; they are nested within other structures.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11794:144,learn,learning,144,https://hail.is,https://github.com/hail-is/hail/pull/11794,1,['learn'],['learning']
Usability,Add TableKeyBy simplification,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4471:15,simpl,simplification,15,https://hail.is,https://github.com/hail-is/hail/pull/4471,2,['simpl'],['simplification']
Usability,Add a few more simplification rules,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3550:15,simpl,simplification,15,https://hail.is,https://github.com/hail-is/hail/pull/3550,2,['simpl'],['simplification']
Usability,Add back progress bar,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3143:9,progress bar,progress bar,9,https://hail.is,https://github.com/hail-is/hail/pull/3143,2,['progress bar'],['progress bar']
Usability,Add doctest instructions to the style-guide,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1394:38,guid,guide,38,https://hail.is,https://github.com/hail-is/hail/issues/1394,2,['guid'],['guide']
Usability,"Add information from https://discuss.hail.is/t/export-elasticsearch-function-documentation-for-updating-behavior/1899 to `export_elasticsearch` docs. This happens fairly often with preemptible Dataproc workers and has caused us some confusion in the past with the gnomAD browser. Without some understanding of how Hail works, it's not immediately clear why this happens.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9953:347,clear,clear,347,https://hail.is,https://github.com/hail-is/hail/pull/9953,1,['clear'],['clear']
Usability,Add new rules to Simplify,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3471:17,Simpl,Simplify,17,https://hail.is,https://github.com/hail-is/hail/pull/3471,1,['Simpl'],['Simplify']
Usability,Add rules to simplify statically missing IR nodes.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3909:13,simpl,simplify,13,https://hail.is,https://github.com/hail-is/hail/pull/3909,2,['simpl'],['simplify']
Usability,Add simple- and twisted-tabulation hashes,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2304:4,simpl,simple,4,https://hail.is,https://github.com/hail-is/hail/pull/2304,2,['simpl'],['simple']
Usability,Add simplest hash functions,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2303:4,simpl,simplest,4,https://hail.is,https://github.com/hail-is/hail/pull/2303,2,['simpl'],['simplest']
Usability,Add simplification for mt.count_cols() with known col counts,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5068:4,simpl,simplification,4,https://hail.is,https://github.com/hail-is/hail/pull/5068,2,['simpl'],['simplification']
Usability,Add simplify rules to push filter into key_by and repartition,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5349:4,simpl,simplify,4,https://hail.is,https://github.com/hail-is/hail/pull/5349,2,['simpl'],['simplify']
Usability,Add some missing clears to aggregations,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3514:17,clear,clears,17,https://hail.is,https://github.com/hail-is/hail/pull/3514,2,['clear'],['clears']
Usability,Add two more simplify rules,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5804:13,simpl,simplify,13,https://hail.is,https://github.com/hail-is/hail/pull/5804,2,['simpl'],['simplify']
Usability,Added RegionValueAggregator.clear.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3523:28,clear,clear,28,https://hail.is,https://github.com/hail-is/hail/pull/3523,2,['clear'],['clear']
Usability,Added rules to simplify ArraySlice,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10755:15,simpl,simplify,15,https://hail.is,https://github.com/hail-is/hail/pull/10755,1,['simpl'],['simplify']
Usability,Added rules to simplify ArraySlice IR,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10759:15,simpl,simplify,15,https://hail.is,https://github.com/hail-is/hail/pull/10759,1,['simpl'],['simplify']
Usability,"Added set, get and clear commands.; join works against environment.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/959:19,clear,clear,19,https://hail.is,https://github.com/hail-is/hail/pull/959,1,['clear'],['clear']
Usability,"Added simple UI for billing projects, create, add and remove users. Hand-tested with dev deploy.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7713:6,simpl,simple,6,https://hail.is,https://github.com/hail-is/hail/pull/7713,1,['simpl'],['simple']
Usability,Added simple string escape.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/782:6,simpl,simple,6,https://hail.is,https://github.com/hail-is/hail/pull/782,2,['simpl'],['simple']
Usability,"Added:. - `textFilesLines` to go directly form array of file names to ContextRDD of strings. - `parallelize` with an `Option[Int]` (in addition to an overloaded version with an int parameter having a default value). - moved `run` to the top since it's super important. - eliminated two useless methods. - colocated `zipPartitions` with other zip-like methods. - added some `*AndContext*` methods that let the API user decide what context to give to the producer of values. The AndContext methods are useful for these two situations:. - One input value becomes multiple output values. We want to clear the input region separately from clearing the output region. - A zipPartitions / join where there are two inputs, we might want to use the same region for both inputs, but use a new region for the output. We might also want to use three distinct regions. All of these options are enabled by `czipPartitionsAndContext`",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3389:595,clear,clear,595,https://hail.is,https://github.com/hail-is/hail/pull/3389,2,['clear'],"['clear', 'clearing']"
Usability,"Adding a new compiler pass (lowering MatrixIR to TableIR) exposed a problem in Simplify. The logic for preventing some simplifications from triggering if they would introduce non-determinism was broken, and fixing it required a pretty complete overhaul. Fortunately, I think it's now a lot simpler. Besides the rewrite of the high level Simplify architecture, I also:; * Changed `testRepartitioningSimplifyRules` to something that failed in the old version.; * Changed the `copy` signature on the IR hierarchy to be more precise (to avoid unnecessary coercions).; * Grouped the Simplify rules into IR, MatrixIR, and TableIR. After the reorganization, a couple of rule redundancies became evident.; * A couple of vals in PruneSuite required running the compiler. When I had a bug in Simplify, this was causing the test runner to fail before any tests were run, on class initialization of PruneSuite, which gives very little help in diagnosing the issue. I made them lazy vals to prevent this in the future.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4564:79,Simpl,Simplify,79,https://hail.is,https://github.com/hail-is/hail/pull/4564,6,"['Simpl', 'simpl']","['Simplify', 'simpler', 'simplifications']"
Usability,Adding how to guide for liftover,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5328:14,guid,guide,14,https://hail.is,https://github.com/hail-is/hail/pull/5328,2,['guid'],['guide']
Usability,"Addresses #1943 . [JVM Spec, Chapter 6](https://docs.oracle.com/javase/specs/jvms/se7/html/jvms-6.html) states, regarding, DCMPG and DCMPL:; > NaN is unordered, so any double comparison fails if either or both of its operands are NaN. With both dcmpg and dcmpl available, any double comparison may be compiled to push the same result onto the operand stack whether the comparison fails on non-NaN values or fails because it encountered a NaN. For more information, see [§3.5](https://docs.oracle.com/javase/specs/jvms/se7/html/jvms-3.html#jvms-3.5). The `G` and `L` suffices refer to whether the presence of one or more `NaN`s should be indicated by returning ""greater than"" or ""less than"". Ergo, when we're checking `x > y` we use `DCMPL` so the NaN case produces `-1` with which the downstream comparison to `0` produces `false`. Confusingly, the simple intuition is, if you're checking **L**ess Than, you should use the **G** version. If you're checking **G**reater Than, you should use the **L** version.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1952:849,simpl,simple,849,https://hail.is,https://github.com/hail-is/hail/pull/1952,2,"['intuit', 'simpl']","['intuition', 'simple']"
Usability,"Adds stream expressions (undocumented), and forces the body of `map_partitions` to work at the stream level. This is needed for uid propagation for the new randomness design.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12331:25,undo,undocumented,25,https://hail.is,https://github.com/hail-is/hail/pull/12331,1,['undo'],['undocumented']
Usability,"Adds the ability to rerun/retry queries from the nearest `CollectDistributedArray` (`CDA`) IR site. Computes a ""Semantic Hash"" of the top-level IR, which is split and shared among the various constituent `CDA` calls in a query. The `CDA` procedure looks in an execution cache for the results of each partition for that call and uses/updates the cache with successful partition computations. . The nature of the staged- lower and execute model means we don't know how many `CDA` calls that will be generated ahead of time. Thus we treat the ""Semantic Hash"" in a similar way to an RNG state variable and generate a key from the Semantic Hash every time every time we encounter a `CDA`. Since an `ExecutionContext` is re-used for multiple queries in tests while a `SemanticHash` is coupled to one query, the two were kept separate. To minimise the amount of manual state handling, the code was transformed to use a ""State"" monad (abstracted as `MonadLower`). Since the `ExecuteContext` is used nearly everywhere the semantic hash is required, the `ExecuteContext` was absorbed into the `MonadLower` interface. `Lower` is a simple, concrete instance of `MonadLower`, and is used to adapt statements into `MonadLower` expressions.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13194:1120,simpl,simple,1120,https://hail.is,https://github.com/hail-is/hail/pull/13194,1,['simpl'],['simple']
Usability,Adds the tutorial page (http://34.207.246.132/tutorial.html) and Learn More button bottom-right justified on home page. cc @mkveerapen includes some further content changes. minor updates to style (mostly width) found in the subsequent pr: #9007,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9005:65,Learn,Learn,65,https://hail.is,https://github.com/hail-is/hail/pull/9005,1,['Learn'],['Learn']
Usability,"After discussing with @ehigham, we decided to try a lighter-weight RFC process, where an RFC is simply a PR for a new dev doc. Discussion about the design can happen here, as well as on the dev doc itself (typos, clarity, etc.). When approved and merged, it will be a dev-doc marked as an unimplemented RFC. When implemented, the RFC mark will be replaced by a reference to the implementing commit.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14403:96,simpl,simply,96,https://hail.is,https://github.com/hail-is/hail/pull/14403,1,['simpl'],['simply']
Usability,"After spending a few hours digging through log4j and trying a bunch of approaches, I wasn't able to fix our current approach of adding appenders to the consoleLog after log4j has already been configured. Instead, we set up log4j in initial configuration to have the appenders we want. Also moved logging config from HailContext to backend, where it should be. . Storing the StringSocketAppender on the static object is definitely a bit funky, but it's being allocated inside log4j and I don't see a simpler way to store it for retrieval later.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12783:499,simpl,simpler,499,https://hail.is,https://github.com/hail-is/hail/pull/12783,1,['simpl'],['simpler']
Usability,"After watching batch a bit, it is clear 5m is way too long.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7972:34,clear,clear,34,https://hail.is,https://github.com/hail-is/hail/pull/7972,1,['clear'],['clear']
Usability,Akhil is trying to run `ld_prune` and it fails on a matrix table with these dimensions:. 55k samples; 1.9 million variants; r_2 = 0.1. A run with r_2 = 0.2 succeeded. I'm concerned that ld_prune pervasively forgets to clear its,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6883:218,clear,clear,218,https://hail.is,https://github.com/hail-is/hail/issues/6883,1,['clear'],['clear']
Usability,"Allocate a fixed stack, as it was the simplest thing I could do. 128 stack; slots should be more than enough for this implementation as it requires one; stack slot per level of the tree. There are many improvements that can be made here, but hopefully this should; unblock some amount of the method splitting work.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8847:38,simpl,simplest,38,https://hail.is,https://github.com/hail-is/hail/pull/8847,1,['simpl'],['simplest']
Usability,"Alright, so. 1. If you `await`, call `exception`, or call `result` on a cancelled task, you receive a `CancelledError`. 2. A cancelled task is not necessarily done. The task could catch the `CancelledError` and do something, including raise a different exception (e.g. because a resource close failed). 3. Nested try-finally sucks. This PR adds `_cleanup_future` which:. 1. Cancels the future. 2. Waits for the future to receive its cancellation and then terminate. 3. Checks if the future is cleanly cancelled (in which case there is nothing more for us to do). 4. Retrieves any present exceptions from a not-cancelled (but done!) future. We then use this function, in combination with exit stacks, to simply and cleanly manage exceptions. I also added some missing retry_transient_errors invocations.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14347:703,simpl,simply,703,https://hail.is,https://github.com/hail-is/hail/pull/14347,1,['simpl'],['simply']
Usability,Also converted style guide to markdown.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/513:21,guid,guide,21,https://hail.is,https://github.com/hail-is/hail/pull/513,1,['guid'],['guide']
Usability,"Also included useful changes that made it possible to diagnose and fix this problem including:. - No longer dropping metrics for test namespaces. I checked the prometheus disk and we have plenty of space to add these additional metrics. Very useful for diagnosing test time latencies.; - Add prometheus scraping for envoy pods. Gives us many great metrics like number of 2xx, 3xx, 4xx and 5xx requests per upstream, rate limit enforcement, even time until the cert expires; - Made `Connection reset` a retry-once error. A connection reset can sometimes be indistinguishable from non-transient errors when the client is not able to inspect the response code before the reset clears the TCP buffer. We take multiple consecutive resets to mean an intentional action from the server indicating that the client is doing something wrong and retrying will not help. I have put off adding gzip compression to gateway in this PR. It was working fine with all of our services except for grafana, in which it was messing up the websocket connection for some reason. I'll dig into that separately.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12425:674,clear,clears,674,https://hail.is,https://github.com/hail-is/hail/pull/12425,1,['clear'],['clears']
Usability,Also remove undocumented fileDate header entry in exportvcf.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/512:12,undo,undocumented,12,https://hail.is,https://github.com/hail-is/hail/pull/512,1,['undo'],['undocumented']
Usability,"Apologies for the size, this PR got a bit out of hand. Let me know if you want me to try to break it up. Changes:; - Use custom status for pods, stored in pod and job tables as json. See Pod.status and Container.status in worker.py for the format. Example at the end. Note, ""container_statuses"" items have a field ""container_status"", because container is used in two ways: as a substep of a pod/job, and as docker container. My last renaming proposal got shot down, but we clearly need to improve this in a later PR.; - Heavily reworked worker.py. I believe this fixes https://github.com/hail-is/hail/issues/7350. The main design idea is to having all state creation and cleanup in Pod.run and Container.run.; - worker: Just support pods/status and pods/log, not container level status or logs.; - Pod now writes final status, not containers. Individual containers write their logs.; - I time all the steps of the Pod container (creating, starting, running, uploading log, etc.) with a timing called ""runtime"" which is how long the docker container itself took to start/run. That's usually 4-6 seconds. However, if you log into a machine and run `docker run --rm ubuntu:18.04 echo hi` it takes 1-2 seconds. It would be good to find out where the extra 3-4 seconds are coming from (I feel like @jigold might have some insight into this. Comparing our container config to the docker command line's might be useful here.); - Stop using (value, err) style exception handling. I think we should be able to design this with very little explicit exception handling, mainly in critical blocks to maintain the program invariants.; - Pods can have error status in 1 of 3 ways: the pod itself failed (e.g. couldn't read k8s secrets), one of the pod containers error out (e.g. pull failed due to invalid image), and the docker container finished but the final container status had an ""Error"" field. Next step is to remove pods and merge the pod and job tables. ```; {; ""name"": ""batch-2-job-1"",; ""batch_id"": 2,; ""j",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7354:473,clear,clearly,473,https://hail.is,https://github.com/hail-is/hail/pull/7354,1,['clear'],['clearly']
Usability,"Apparently, creating a zip file of all our dependencies and the Hail code takes ~30s. This change skips the shadow JAR for local development. We still need a shadow JAR to produce a shareable wheel file; however, when doing local development, we can simply tell Py4J (and the JVM) where to find our dependencies class files. Also notice that I made install-editable non-PHONY. It need not be PHONY as long as we can reliably determine if `hail/python` is the pip-installed version. To do so, we simply check if the `__init__.py` at the root of the pip package is newer than when we last installed. If its newer, then either:; 1. We edited `__init__.py`, or; 2. The pip location of Hail has changed since we last ran install-editable. I also deleted eggs because nobody uses eggs.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13639:250,simpl,simply,250,https://hail.is,https://github.com/hail-is/hail/pull/13639,2,['simpl'],['simply']
Usability,"As part of our work with generating All of Us datasets, we needed to copy around a million gcs objects. Our `Copier` infrastructure 'should' be able to handle that, but it kept falling with robustness issues. What finally worked was using GCS's [rewrite](https://cloud.google.com/storage/docs/json_api/v1/objects/rewrite) api. This allowed us to copy data without reading it, allowing the copies to complete in a fraction of the time while also reducing bandwidth needs. There are two components to this:; 1. Research what specific APIs we can take advantage of; 2. Update our code to use them when we can, for the `Copier`, and the new sync tool (#14248). Here's the code I used for making the rewrite requests for merging a set of matrix tables together, the progress bar code was for visibility. ```python3; async def rewrite(; gfs: GoogleStorageAsyncFS,; src: str,; dst: str,; progress: Optional[rich.progress.Progress] = None,; file_tid: Optional[rich.progress.TaskID] = None,; requests_tid: Optional[rich.progress.TaskID] = None,; ):; assert (progress is None) == (file_tid is None) == (requests_tid is None); src_bkt, src_name = gfs.get_bucket_and_name(src); dst_bkt, dst_name = gfs.get_bucket_and_name(dst); if not src_name:; raise IsABucketError(src); if not dst_name:; raise IsABucketError(dst); client = gfs._storage_client; path = (; f'/b/{src_bkt}/o/{urllib.parse.quote(src_name, safe="""")}/rewriteTo'; f'/b/{dst_bkt}/o/{urllib.parse.quote(dst_name, safe="""")}'; ); kwargs = {'json': '', 'params': {}}; client._update_params_with_user_project(kwargs, src_bkt); response = await retry_transient_errors(client.post, path, **kwargs); if progress is not None:; progress.update(requests_tid, advance=1); while not response['done']:; kwargs['params']['rewriteToken'] = response['rewriteToken']; response = await retry_transient_errors(client.post, path, **kwargs); if progress is not None:; progress.update(requests_tid, advance=1); if progress is not None:; progress.update(file_tid, advance=1)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14601:761,progress bar,progress bar,761,https://hail.is,https://github.com/hail-is/hail/issues/14601,1,['progress bar'],['progress bar']
Usability,"Assigned Tim since he has looked at this a bit, open to feedback from whoever though. . Admittedly, there is still a good amount of white space on second page right hand side, and the bottom of the first page could be condensed to buy us more space, but I want to publish what's currently here and take a break from working on it.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7940:56,feedback,feedback,56,https://hail.is,https://github.com/hail-is/hail/pull/7940,1,['feedback'],['feedback']
Usability,"Assigning @tpoterba since he (and cotton) have the most context to review this. A few preliminaries:. 1. I noticed the proxy headers were not quite right when you're testing this without SSL or on some non-standard port. `$host` does not include the port, `$http_host` does. `$scheme` returns `http` or `https` depending on how the user connected to gateway; 2. The admin privilege check was too restrictive, if `delete_worker_pod` is called by `/new` there's no need to check admin privs; 3. I realized that the timeout logic wasn't quite right because a misconfigured gateway (I was testing with a broken gateway config) will return 5xx codes, but that doesn't mean the server is alive. We probably should error here, but I'm hesitant to add new error modes so close to a tutorial. Ok, how does this work? Basically, if the gateway cannot connect to the notebook pod, we intercept the error and redirect the user to the ""create new notebook"" webpage. That webpage deletes whatever remains of the users previous notebook pod & service. Here are the pieces:. 1. `recursive_error_pages on;` the internet suggests that without this we cannot use `error_page` with an ""internal"" rule (the `@` rules are internal rules that users cannot directly access); 2. `proxy_connect_timeout` defaults to 60s which is a shit user experience if your pod dies. Honestly, I might set this to 100ms. This is all inside a datacenter.; 3. `proxy_intercept_errors` permits us to use `error_page` with 5xx errors from failing to connect to the proxy. ---. I tested this with a pile of hacks to deploy this into an anonymous namespace in `vdc`. I'm not ready to PR those changes, they need a clean up before others use them. Sometime next week I hope to get that in. Getting it requires some restructuring of `vdc/` and `gateway/` to be more modular.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4974:1310,user experience,user experience,1310,https://hail.is,https://github.com/hail-is/hail/pull/4974,1,['user experience'],['user experience']
Usability,Auth gateway: simply adds project deps,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5362:14,simpl,simply,14,https://hail.is,https://github.com/hail-is/hail/pull/5362,2,['simpl'],['simply']
Usability,"Autodoc from type hints [broken intermediate, meant for feedback]",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3156:56,feedback,feedback,56,https://hail.is,https://github.com/hail-is/hail/pull/3156,2,['feedback'],['feedback']
Usability,"Based on @bw2 suggestions to make it clear where the limits are and more interpretable storage plots:. <img width=""681"" alt=""Screen Shot 2023-01-24 at 12 36 16 PM"" src=""https://user-images.githubusercontent.com/1693348/214366577-bdbc49a0-478a-4f72-bf13-c6dfb54a82d4.png"">",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12617:37,clear,clear,37,https://hail.is,https://github.com/hail-is/hail/pull/12617,1,['clear'],['clear']
Usability,"Based on feedback from Maryam, this helps users use VEP correctly.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8342:9,feedback,feedback,9,https://hail.is,https://github.com/hail-is/hail/pull/8342,1,['feedback'],['feedback']
Usability,"Basically this is what CalculateGenotypePosteriors of GATK does. ([link](https://www.broadinstitute.org/gatk/guide/tooldocs/org_broadinstitute_gatk_tools_walkers_variantutils_CalculateGenotypePosteriors.php)) In common variant analysis, we need to improve GQ calculation based on a given panel, say, 1000 genomes panel. I see this module a common practice in variant QC for common variant analysis (GWAS/eQTL), so hope you can add this as a part of Hail. Thanks.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/332:109,guid,guide,109,https://hail.is,https://github.com/hail-is/hail/issues/332,1,['guid'],['guide']
Usability,"Batch currently only supports a single container with the name default. This change encodes this requirement in the create_job endpoint. A better solution is to change the API to not accept multiple containers or name parameters, but this is a simpler fix. resolves #4773",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5073:244,simpl,simpler,244,https://hail.is,https://github.com/hail-is/hail/pull/5073,1,['simpl'],['simpler']
Usability,"Batch page shows max 50 jobs paginated, with next page button. Search box supports search with a simple language of terms:; - k=v - match jobs with attribute key k and value v; - has:k - match jobs with attribute k, any value; - state - match jobs with the corresponding states. Search state terms are lower case (unlike actual job states, which I plan to change) and the recognized state terms are:. ```; state_query_values = {; 'pending': ['Pending'],; 'ready': ['Ready'],; 'running': ['Running'],; 'live': ['Ready', 'Running'],; 'cancelled': ['Cancelled'],; 'error': ['Error'],; 'failed': ['Failed'],; 'bad': ['Error', 'Failed'],; 'success': ['success'],; 'done': ['Cancelled', 'Error', 'Failed', 'Success']; }; ```; as you can see, some state search terms, like done, match multiple job states. ; - !term - match jobs that don't match term. To select specific names, you can do `name=foo`. Next steps:; - Make the corresponding changes to the API so you can iterate paginated through all jobs in a batch.; - Make batches page paginated, too.; - Help information about the search syntax.; - We'll probably want to order by fields other than just id.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7635:97,simpl,simple,97,https://hail.is,https://github.com/hail-is/hail/pull/7635,1,['simpl'],['simple']
Usability,Be clear we need a scratch folder not a scratch bucket.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5401:3,clear,clear,3,https://hail.is,https://github.com/hail-is/hail/pull/5401,1,['clear'],['clear']
Usability,"Before ndarrays, the two choices for children of `ValueToBlockMatrix` were array or float. This simplify rule hadn't been updated to reflect that ndarrays were now an option, so it was falling through to the float case when it saw an ndarray. . By fixing this, I've gotten `test_paired_elementwise_ops` to work on lowered backends.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10481:96,simpl,simplify,96,https://hail.is,https://github.com/hail-is/hail/pull/10481,1,['simpl'],['simplify']
Usability,"Before we can simplify the binding structure, we need to stop duplicating it all over the place. This PR rewrites `FreeVariables` so that it no longer needs special logic for particular nodes, hard coding binding structure (redundantly). To do this, it takes advantage of the new `Bindings`, which operates on a `GenericBindingEnv` interface. It adds a new implementation of this interface specifically for computing free variables, then simply does a generic traversal of the IR using this custom binging environment. While I find the new implementation far simpler and more obviously correct than the old, I do expect it to further simplify once I'm able to start modifying the core binding structure.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14451:14,simpl,simplify,14,https://hail.is,https://github.com/hail-is/hail/pull/14451,4,['simpl'],"['simpler', 'simplify', 'simply']"
Usability,Benchmark:; ```; $ hail-bench compare /tmp/before.json /tmp/after.json; Name Ratio Time 1 Time 2; ---- ----- ------ ------; write_profile_mt 100.4% 31.130 31.249; ----------------------; Geometric mean: 100.4%; Simple mean: 100.4%; Median: 100.4%; ```,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7934:211,Simpl,Simple,211,https://hail.is,https://github.com/hail-is/hail/pull/7934,1,['Simpl'],['Simple']
Usability,Benchmarks vs a hardcoded take-the-old-path branch:. ```; Geometric mean: 99.5%; Simple mean: 99.8%; Median: 99.5%; ```,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7879:81,Simpl,Simple,81,https://hail.is,https://github.com/hail-is/hail/pull/7879,1,['Simpl'],['Simple']
Usability,"Broke AltAllele and Variant each into an interface with a concrete and a region-value implementation. Decided in favor of allocation per-variant (the array of alleles) for simplicity. Had to change a few field references to method calls because `foo(0)` doesn't work when `foo` is a fake-field, it must be `foo()(0)`. I kept `ArrayView` since it does one simple job well.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2441:172,simpl,simplicity,172,https://hail.is,https://github.com/hail-is/hail/pull/2441,2,['simpl'],"['simple', 'simplicity']"
Usability,"Bumps [aiodocker](https://github.com/aio-libs/aiodocker) from 0.17.0 to 0.21.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/aio-libs/aiodocker/releases"">aiodocker's releases</a>.</em></p>; <blockquote>; <h2>aiodocker 0.18.0 release</h2>; <h2>Features</h2>; <ul>; <li>Improve the error text message if cannot connect to docker engine. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiodocker/issues/411"">#411</a>)</li>; <li>Implement docker exec protocol. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiodocker/issues/415"">#415</a>)</li>; <li>Implement container commit, pause and unpause functionality. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiodocker/issues/418"">#418</a>)</li>; <li>Implement auto-versioning of the docker API by default. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiodocker/issues/419"">#419</a>)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/aio-libs/aiodocker/blob/master/CHANGES.rst"">aiodocker's changelog</a>.</em></p>; <blockquote>; <h1>0.21.0 (2021-07-23)</h1>; <h2>Bugfixes</h2>; <ul>; <li>Use ssl_context passsed to Docker constructor for creating underlying connection to docker engine. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiodocker/issues/536"">#536</a>)</li>; <li>Fix an error when attach/exec when container stops before close connection to it. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiodocker/issues/608"">#608</a>)</li>; </ul>; <h1>0.20.0 (2021-07-21)</h1>; <h2>Bugfixes</h2>; <ul>; <li>Accept auth parameter by <code>run()</code> method; it allows auto-pulling absent image from private storages. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiodocker/issues/295"">#295</a>)</li>; <li>Fix passing of JSON params. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiodocker/issues/543"">#543</a>)</li>; <li>Fix issue wit",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11537:644,pause,pause,644,https://hail.is,https://github.com/hail-is/hail/pull/11537,1,['pause'],['pause']
Usability,"Bumps [boto3](https://github.com/boto/boto3) from 1.26.7 to 1.26.17.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/boto/boto3/blob/develop/CHANGELOG.rst"">boto3's changelog</a>.</em></p>; <blockquote>; <h1>1.26.17</h1>; <ul>; <li>bugfix:dynamodb: Fixes duplicate serialization issue in DynamoDB BatchWriter</li>; <li>api-change:<code>backup</code>: [<code>botocore</code>] AWS Backup introduces support for legal hold and application stack backups. AWS Backup Audit Manager introduces support for cross-Region, cross-account reports.</li>; <li>api-change:<code>cloudwatch</code>: [<code>botocore</code>] Update cloudwatch client to latest version</li>; <li>api-change:<code>drs</code>: [<code>botocore</code>] Non breaking changes to existing APIs, and additional APIs added to support in-AWS failing back using AWS Elastic Disaster Recovery.</li>; <li>api-change:<code>ecs</code>: [<code>botocore</code>] This release adds support for ECS Service Connect, a new capability that simplifies writing and operating resilient distributed applications. This release updates the TaskDefinition, Cluster, Service mutation APIs with Service connect constructs and also adds a new ListServicesByNamespace API.</li>; <li>api-change:<code>efs</code>: [<code>botocore</code>] Update efs client to latest version</li>; <li>api-change:<code>iot-data</code>: [<code>botocore</code>] This release adds support for MQTT5 properties to AWS IoT HTTP Publish API.</li>; <li>api-change:<code>iot</code>: [<code>botocore</code>] Job scheduling enables the scheduled rollout of a Job with start and end times and a customizable end behavior when end time is reached. This is available for continuous and snapshot jobs. Added support for MQTT5 properties to AWS IoT TopicRule Republish Action.</li>; <li>api-change:<code>iotwireless</code>: [<code>botocore</code>] This release includes a new feature for customers to calculate the position of their devices by adding three new APIs",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12507:1022,simpl,simplifies,1022,https://hail.is,https://github.com/hail-is/hail/pull/12507,1,['simpl'],['simplifies']
Usability,"Bumps [com.azure:azure-core-http-netty](https://github.com/Azure/azure-sdk-for-java) from 1.13.3 to 1.13.6.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/0e7e5a9589c61bb06193c8e887b6b631679f0902""><code>0e7e5a9</code></a> Skip coverage requirements for azure-core-test (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36254"">#36254</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/67df6924e911a1cb65a7f891a05e943dd66f274f""><code>67df692</code></a> Update broken links for test proxy documentation (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36250"">#36250</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/f2a67eb377d06f9478bc5e6c8bfc282cbcaa7508""><code>f2a67eb</code></a> [Form Recognizer] Address API view feedback (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36233"">#36233</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/e618ba1f0869480eff22a0682213bf7baa42a714""><code>e618ba1</code></a> Channel health check improvement for cancelled requests (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36225"">#36225</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/d464be7d9248d773b4aa793ad71c0eca77e8c450""><code>d464be7</code></a> Prepare Core Libraries for August 2023 Release (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36239"">#36239</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/530cc4378c650f7fe7c7a528dd119993961088a3""><code>530cc43</code></a> mgmt, upgrade network 2023-04 (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36242"">#36242</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/7e3b6a5634be16f65c02523c7d84f9b5b27f4e42""><code>7e3b6a5</code></a> Update TRC API azure core (<a href=""https://redirect.github.com/Azure/azure-sdk-for-jav",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13591:868,feedback,feedback,868,https://hail.is,https://github.com/hail-is/hail/pull/13591,1,['feedback'],['feedback']
Usability,"Bumps [com.google.cloud:google-cloud-storage](https://github.com/googleapis/java-storage) from 2.17.1 to 2.27.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/googleapis/java-storage/releases"">com.google.cloud:google-cloud-storage's releases</a>.</em></p>; <blockquote>; <h2>v2.27.0</h2>; <h2><a href=""https://github.com/googleapis/java-storage/compare/v2.26.1...v2.27.0"">2.27.0</a> (2023-09-12)</h2>; <h3>Features</h3>; <ul>; <li>Add new JournalingBlobWriteSessionConfig usable with gRPC transport (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2194"">#2194</a>) (<a href=""https://github.com/googleapis/java-storage/commit/8880d94c3d1a737dd4492cf66a16ba5e08633a70"">8880d94</a>)</li>; <li>Follow-up CLI Improvements (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2184"">#2184</a>) (<a href=""https://github.com/googleapis/java-storage/commit/d9859768081ea6f872097851d3e318b5bad384d9"">d985976</a>)</li>; <li>Initial CLI for SSB integration and Workload 1 (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2166"">#2166</a>) (<a href=""https://github.com/googleapis/java-storage/commit/a349735e7fe108e623a330afec0c8cd608ebeef9"">a349735</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>A resumable session without a Range header should be interpreted as 0 length (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2182"">#2182</a>) (<a href=""https://github.com/googleapis/java-storage/commit/53022011d83e6a8515a5ba008fc45fc2dae39cea"">5302201</a>)</li>; <li>Update User-Agent handling for resumable uploads (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2168"">#2168</a>) (<a href=""https://github.com/googleapis/java-storage/commit/665b714f421d3c13b557d0ff71460c328c010856"">665b714</a>)</li>; <li>Update version resolution logic to be more resilient (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2169"">#2169</a>) (<a href=""https://github.co",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13624:520,usab,usable,520,https://hail.is,https://github.com/hail-is/hail/pull/13624,1,['usab'],['usable']
Usability,"Bumps [commons-codec](https://github.com/apache/commons-codec) from 1.11 to 1.15.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/apache/commons-codec/blob/rel/commons-codec-1.15/RELEASE-NOTES.txt"">commons-codec's changelog</a>.</em></p>; <blockquote>; <pre><code> Apache Commons Codec 1.15 RELEASE NOTES; September 1 2020; </code></pre>; <p>The Apache Commons Codec package contains simple encoder and decoders for; various formats such as Base64 and Hexadecimal. In addition to these; widely used encoders and decoders, the codec package also maintains a; collection of phonetic encoding utilities.</p>; <p>Feature and fix release.</p>; <p>Changes in this version include:</p>; <p>New features:; o CODEC-290: Base16Codec and Base16Input/OutputStream. Thanks to Adam Retter.; o CODEC-291: Hex encode/decode with existing arrays. Thanks to Adam Retter.</p>; <p>Fixed Bugs:; o CODEC-264: MurmurHash3: Ensure hash128 maintains the sign extension bug.; Thanks to Andy Seaborne.</p>; <p>Changes:; o CODEC-280: Base32/Base64/BCodec: Added strict decoding property to control; handling of trailing bits. Default lenient mode discards them; without error. Strict mode raise an exception.; o CODEC-289: Base32/Base64 Input/OutputStream: Added strict decoding property; to control handling of trailing bits. Default lenient mode; discards them without error. Strict mode raise an exception.; o Update tests from JUnit 4.12 to 4.13. Thanks to Gary Gregory.; o Update actions/checkout from v1 to v2.3.2 <a href=""https://github-redirect.dependabot.com/apache/commons-codec/issues/50"">#50</a>, <a href=""https://github-redirect.dependabot.com/apache/commons-codec/issues/56"">#56</a>.; Thanks to Dependabot.; o Update actions/setup-java from v1.4.0 to v1.4.1 <a href=""https://github-redirect.dependabot.com/apache/commons-codec/issues/57"">#57</a>.; Thanks to Dependabot.</p>; <p>For complete information on Apache Commons Codec, including instructions on how; to submit bug ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12385:426,simpl,simple,426,https://hail.is,https://github.com/hail-is/hail/pull/12385,1,['simpl'],['simple']
Usability,"Bumps [elasticsearch-spark-20_2.12](https://github.com/elastic/elasticsearch-hadoop) from 7.17.1 to 8.4.3.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/elastic/elasticsearch-hadoop/releases"">elasticsearch-spark-20_2.12's releases</a>.</em></p>; <blockquote>; <h2>Elasticsearch Hadoop 8.4.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html</a></p>; <h2>Elasticsearch Hadoop 8.4.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html</a></p>; <h2>Elasticsearch Hadoop 8.4.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html</a></p>; <h2>Elasticsearch Hadoop 8.4.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html</a></p>; <h2>Elasticsearch Hadoop 8.3.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html</a></p>; <h2>Elasticsearch Hadoop 8.3.2</h2>; <p>Downloads: <a href=""htt",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12358:493,guid,guide,493,https://hail.is,https://github.com/hail-is/hail/pull/12358,4,['guid'],['guide']
Usability,"Bumps [elasticsearch-spark-20_2.12](https://github.com/elastic/elasticsearch-hadoop) from 8.4.3 to 8.6.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/elastic/elasticsearch-hadoop/releases"">elasticsearch-spark-20_2.12's releases</a>.</em></p>; <blockquote>; <h2>Elasticsearch Hadoop 8.6.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html</a></p>; <h2>Elasticsearch Hadoop 8.5.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html</a></p>; <h2>Elasticsearch Hadoop 8.5.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html</a></p>; <h2>Elasticsearch Hadoop 8.5.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html</a></p>; <h2>Elasticsearch Hadoop 8.5.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12601:492,guid,guide,492,https://hail.is,https://github.com/hail-is/hail/pull/12601,4,['guid'],['guide']
Usability,"Bumps [elasticsearch-spark-20_2.12](https://github.com/elastic/elasticsearch-hadoop) from 8.4.3 to 8.6.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/elastic/elasticsearch-hadoop/releases"">elasticsearch-spark-20_2.12's releases</a>.</em></p>; <blockquote>; <h2>Elasticsearch Hadoop 8.6.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.1.html</a></p>; <h2>Elasticsearch Hadoop 8.6.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html</a></p>; <h2>Elasticsearch Hadoop 8.5.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html</a></p>; <h2>Elasticsearch Hadoop 8.5.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html</a></p>; <h2>Elasticsearch Hadoop 8.5.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html</a></p>; <h2>Elasticsearch Hadoop 8.5.0</h2>; <p>Downloads: <a href=""http",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12623:492,guid,guide,492,https://hail.is,https://github.com/hail-is/hail/pull/12623,4,['guid'],['guide']
Usability,"Bumps [elasticsearch-spark-30_2.12](https://github.com/elastic/elasticsearch-hadoop) from 8.0.0 to 8.4.3.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/elastic/elasticsearch-hadoop/releases"">elasticsearch-spark-30_2.12's releases</a>.</em></p>; <blockquote>; <h2>Elasticsearch Hadoop 8.4.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html</a></p>; <h2>Elasticsearch Hadoop 8.4.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html</a></p>; <h2>Elasticsearch Hadoop 8.4.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html</a></p>; <h2>Elasticsearch Hadoop 8.4.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html</a></p>; <h2>Elasticsearch Hadoop 8.3.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html</a></p>; <h2>Elasticsearch Hadoop 8.3.2</h2>; <p>Downloads: <a href=""http",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:492,guid,guide,492,https://hail.is,https://github.com/hail-is/hail/pull/12319,4,['guid'],['guide']
Usability,"Bumps [flask-cors](https://github.com/corydolphin/flask-cors) from 3.0.8 to 3.0.9.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/corydolphin/flask-cors/releases"">flask-cors's releases</a>.</em></p>; <blockquote>; <h2>Release 3.0.9</h2>; <h3>Security</h3>; <ul>; <li>Escape path before evaluating resource rules (thanks <a href=""https://github.com/praetorian-colby-morgan""><code>@​praetorian-colby-morgan</code></a>). Prior to this, flask-cors incorrectly; evaluated CORS resource matching before path expansion. E.g. &quot;/api/../foo.txt&quot; would incorrectly match resources for; &quot;/api/*&quot; whereas the path actually expands simply to &quot;/foo.txt&quot;</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/corydolphin/flask-cors/blob/master/CHANGELOG.md"">flask-cors's changelog</a>.</em></p>; <blockquote>; <h2>3.0.9</h2>; <h3>Security</h3>; <ul>; <li>Escape path before evaluating resource rules (thanks to Colby Morgan). Prior to this, flask-cors incorrectly; evaluated CORS resource matching before path expansion. E.g. &quot;/api/../foo.txt&quot; would incorrectly match resources for; &quot;/api/*&quot; whereas the path actually expands simply to &quot;/foo.txt&quot;</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/corydolphin/flask-cors/commit/91babb941e07a1f45636bdcb75675f13ce1503a2""><code>91babb9</code></a> Update Api docs for credentialed requests (<a href=""https://github-redirect.dependabot.com/corydolphin/flask-cors/issues/221"">#221</a>)</li>; <li><a href=""https://github.com/corydolphin/flask-cors/commit/522d98936f3995480fe3132b55415d74298d6790""><code>522d989</code></a> Release version 3.0.9 (<a href=""https://github-redirect.dependabot.com/corydolphin/flask-cors/issues/273"">#273</a>)</li>; <li><a href=""https://github.com/corydolphin/flask-cors/commit/67c4b2cc98ae87cf1fa",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10464:685,simpl,simply,685,https://hail.is,https://github.com/hail-is/hail/pull/10464,1,['simpl'],['simply']
Usability,"Bumps [idna](https://github.com/kjd/idna) from 3.6 to 3.7.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/kjd/idna/releases"">idna's releases</a>.</em></p>; <blockquote>; <h2>v3.7</h2>; <h2>What's Changed</h2>; <ul>; <li>Fix issue where specially crafted inputs to encode() could take exceptionally long amount of time to process. [CVE-2024-3651]</li>; </ul>; <p>Thanks to Guido Vranken for reporting the issue.</p>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/kjd/idna/compare/v3.6...v3.7"">https://github.com/kjd/idna/compare/v3.6...v3.7</a></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/kjd/idna/blob/master/HISTORY.rst"">idna's changelog</a>.</em></p>; <blockquote>; <p>3.7 (2024-04-11); ++++++++++++++++</p>; <ul>; <li>Fix issue where specially crafted inputs to encode() could; take exceptionally long amount of time to process. [CVE-2024-3651]</li>; </ul>; <p>Thanks to Guido Vranken for reporting the issue.</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d""><code>1d365e1</code></a> Release v3.7</li>; <li><a href=""https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6""><code>c1b3154</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/172"">#172</a> from kjd/optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/0394ec76ff022813e770ba1fd89658790ea35623""><code>0394ec7</code></a> Merge branch 'master' into optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/cd58a23173d2b0a40b95ee680baf3e59e8d33966""><code>cd58a23</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/152"">#152</a> from elliotwutingfeng/dev</li>; <li><a href=""https://github.com/kjd/idna/commit/5beb28b9dd77912c0dd656d8b0fdba3eb80222e7""><code>5beb28",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14464:419,Guid,Guido,419,https://hail.is,https://github.com/hail-is/hail/pull/14464,7,['Guid'],['Guido']
Usability,"Bumps [junixsocket-core](https://github.com/kohlschutter/junixsocket) from 2.3.2 to 2.6.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/kohlschutter/junixsocket/releases"">junixsocket-core's releases</a>.</em></p>; <blockquote>; <h2>junixsocket 2.6.1</h2>; <ul>; <li>Add AFSocket.checkConnectionClosed to probe connection status</li>; <li>Fix connection status checks and error handling</li>; <li>Fix bind behavior on Windows, support re-bind with reuseAddress</li>; <li>Fix and improve unit tests/selftests, remove several false-positive errors found in the wild (Azure Cloudshell/Microsoft CBL-Mariner 2.0, Amazon EC2, OpenBSD, etc.)</li>; <li>Fix SimpleTestServer demo, actually counting now to 5, not 6.</li>; <li>Make builds reproducible, align timestamps with git commit</li>; </ul>; <p>NOTE: If you're seeing unexpected errors in selftest, please verify with the attached <code>junixsocket-selftest-2.6.1-hotpatch-jar-with-dependencies.jar</code>. There may be false-positive socket timeout issues on very slow machines (e.g., qemu s390).</p>; <h2>junixsocket 2.6.0</h2>; <ul>; <li>Add support for GraalVM native-image</li>; <li>Add support for native-image selftest</li>; <li>Add support for AF_VSOCK (on Linux, and some macOS VMs)</li>; <li>Reintroduce deprecated legacy constructors for AFUNIXSocketAddress that were removed in 2.5.0.</li>; <li>Parent POM has been renamed from junixsocket-parent to junixsocket</li>; </ul>; <h2>junixsocket 2.5.2</h2>; <ul>; <li>Fix address handling in the Abstract Namespace</li>; <li>Fix support for very large datagrams (&gt; 1MB)</li>; <li>Fix InetAddress-wrapping of long addresses</li>; <li>Update Xcode support script, crossclang</li>; <li>Bump postgresql version in demo code</li>; <li>Fix dependency for custom architecture artifact</li>; </ul>; <h2>junixsocket 2.5.1</h2>; <ul>; <li>Add support for IBM z/OS (experimental, binary not included)</li>; <li>Add support for building from source on arm64",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12483:698,Simpl,SimpleTestServer,698,https://hail.is,https://github.com/hail-is/hail/pull/12483,1,['Simpl'],['SimpleTestServer']
Usability,"Bumps [jupyterlab](https://github.com/jupyterlab/jupyterlab) from 4.0.9 to 4.0.12.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/jupyterlab/jupyterlab/releases"">jupyterlab's releases</a>.</em></p>; <blockquote>; <h2>v4.0.12</h2>; <h2>4.0.12</h2>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab/compare/v4.0.11...69079ec413cbe6d173f0a667c15802b76423ece5"">Full Changelog</a>)</p>; <h3>Bugs fixed</h3>; <ul>; <li>Fix jupyterlab downgrade issue on extension installation <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15650"">#15650</a> (<a href=""https://github.com/Sarthug99""><code>@​Sarthug99</code></a>)</li>; <li>Fix search highlights removal on clearing input box <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15690"">#15690</a> (<a href=""https://github.com/krassowski""><code>@​krassowski</code></a>)</li>; <li>Add scroll margin to headings for better alignment <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15703"">#15703</a> (<a href=""https://github.com/krassowski""><code>@​krassowski</code></a>)</li>; <li>Fix shortcut UI failing on filtering when empty command is given <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15695"">#15695</a> (<a href=""https://github.com/krassowski""><code>@​krassowski</code></a>)</li>; <li>Fix connection loop issue with standalone foreign document in LSP <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15262"">#15262</a> (<a href=""https://github.com/trungleduc""><code>@​trungleduc</code></a>)</li>; <li>Fix outputarea package from not detecting updates <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15642"">#15642</a> (<a href=""https://github.com/MFA-X-AI""><code>@​MFA-X-AI</code></a>)</li>; </ul>; <h3>Maintenance and upkeep improvements</h3>; <ul>; <li>Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15524"">#15524</a>: Fix visual tests <a href=""https://redirect.github.com/jupyter",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14218:717,clear,clearing,717,https://hail.is,https://github.com/hail-is/hail/pull/14218,1,['clear'],['clearing']
Usability,"CHANGELOG: Add `hl.pgenchisq` the cumulative distribution function of the generalized chi-squared distribution. The [Generalized Chi-Squared; Distribution](https://en.wikipedia.org/wiki/Generalized_chi-squared_distribution) arises from weighted sums of sums of squares of independent normally distributed variables and is used by `hl.skat` to generate p-values. The simplest formulation I know for it is this:. w : R^n; k : Z^n; lam : R^n; mu : R; sigma : R. x ~ N(mu, sigma^2); y_i ~ NonCentralChiSquared(k_i, lam_i). Z = x + w y^T; = x + sum_i{ w_i y_i }; Z ~ GeneralizedNonCentralChiSquared(w, k, lam, mu, sigma). The non-central chi-squared distribution arises from a sum of independent normally distributed variables with non-zero mean and unit variance. The non-centrality parameter, lambda, is defined as the sum of the squares of the means of each component normal random variable. Although the non-central chi-squared distribution has a closed form implementation (indeed, Hail implements this CDF: `hl.pchisqtail`), the generalized chi-squared distribution does not have a closed form. There are at least four distinct algorithms for evaluating the CDF. To my knowledge, the oldest one is by Robert Davies:. Davies, Robert. ""The distribution of a linear combination of chi-squared; random variables."" Applied Statistics 29 323-333. 1980. The [original publication](http://www.robertnz.net/pdf/lc_chisq.pdf) includes a Fortran implementation in the publication. Davies' [website](http://www.robertnz.net/QF.htm) also includes a C version. Hail includes a copy of the C version as `davies.cpp`. I suspect this code contains undefined behavior. Moreover, it is not supported on Apple M1 machines because we don't ship binaries for that platform. It seemed to me that the simplest solution is to port this algorithm to Scala. This PR is that port. I tested against the 39 test cases provided Davies with the source code. I also added some doctests based on the CDF plots from Wikipedia. The same",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12605:366,simpl,simplest,366,https://hail.is,https://github.com/hail-is/hail/pull/12605,1,['simpl'],['simplest']
Usability,"CHANGELOG: Fix #13979, affecting Query-on-Batch and manifesting most frequently as ""com.github.luben.zstd.ZstdException: Corrupted block detected"". This PR upgrades google-cloud-storage from 2.29.1 to 2.30.1. The google-cloud-storage java library has a bug present at least since 2.29.0 in which simply incorrect data was returned. https://github.com/googleapis/java-storage/issues/2301 . The issue seems related to their use of multiple intremediate ByteBuffers. As far as I can tell, this is what could happen:. 1. If there's no channel, open a new channel with the current position.; 2. Read *some* data from the input ByteChannel into an intermediate ByteBuffer.; 3. While attempting to read more data into a subsequent intermediate ByteBuffer, an retryable exception occurs.; 4. The exception bubbles to google-cloud-storage's error handling, which frees the channel and loops back to (1). The key bug is that the intermediate buffers have data but the `position` hasn't been updated. When we recreate the channel we will jump to the wrong position and re-read some data. Lucky for us, between Zstd and our assertions, this usually crashes the program instead of silently returning bad data. This is the third bug we have found in Google's cloud storage java library. The previous two:. 1. https://github.com/hail-is/hail/issues/13721; 2. https://github.com/hail-is/hail/issues/13937. Be forewarned: the next time we see bizarre networking or data corruption issues, check if updating google-cloud-storage fixes the problem.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14080:296,simpl,simply,296,https://hail.is,https://github.com/hail-is/hail/pull/14080,1,['simpl'],['simply']
Usability,"CHANGELOG: Fix `RuntimeError: This event loop is already running` error when running hail in a Jupyter Notebook. Man this is really complicated. OK, so, things I learned:. 1. [asyncio will not create a new event loop if `set_event_loop` has been called even if `set_event_loop(None)` has since been called.](https://github.com/python/cpython/blob/main/Lib/asyncio/events.py#L676); 2. [asyncio will not create a new event loop in a thread other than the main thread.](https://github.com/python/cpython/blob/main/Lib/asyncio/events.py#L677); 3. `aiohttp.ClientSession` stashes a copy of the event loop present when it starts. This can cause all manner of extremely confusing behavior if you later change the event loop or use that session from a different thread. The fix, in the end, wasn't that complicated. Anywhere Hail explicitly asks for an event loop (so that we can run async code), we apply nest asyncio if the event loop is already running. Otherwise we do nothing. Nest asyncio appears to [no longer require](https://github.com/erdewit/nest_asyncio/tree/master#usage) `apply` to be called before the event loop starts running. This PR *does not* address:; 1. Hail nesting async code in sync code in async code. I think we should avoid this, but the `hailtop.fs` and `hailtop.batch` APIs, among others, need async versions before we can do that.; 2. This `aiohttp.ClientSession` nonsense. We really should take pains to ensure we create one `ClientSession` per loop and we never mix loops.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13899:162,learn,learned,162,https://hail.is,https://github.com/hail-is/hail/pull/13899,1,['learn'],['learned']
Usability,"CHANGELOG: Fix memory leak in ExportBgen. If you look a dozen or so lines under the `boundary` I added, you'll see a :. ```; it.foreach { ptr =>; val (b, d) = bpw.emitVariant(ptr); out.write(b); dropped += d; }; ```. So that thing is stepping through the iterator without freeing. The `boundary` is to do a `clear` after each read from the `it`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9006:308,clear,clear,308,https://hail.is,https://github.com/hail-is/hail/pull/9006,1,['clear'],['clear']
Usability,"CHANGELOG: Fixes #13697, a long standing issue with QoB, in which a failing partition job or driver job is not failed in the Batch UI. I am not sure why we did not do this this way in the first place. If a JVMJob raises an exception, Batch will mark the job as failed. Ergo, we should raise an exception when a driver or a worker fails!. Here's an example: I used a simple pipeline that write to a bucket to which I have read-only access. You can see an example Batch (where every partition fails): https://batch.hail.is/batches/8046901. [1]. ```python3; import hail as hl; hl.utils.range_table(3, n_partitions=3).write('gs://neale-bge/foo.ht'); ```. NB: I removed the `log.error` in `handleForPython` because that log is never necessary. That function converts a stack of exceptions into a triplet of the short message, the full exception with stack trace, and a Hail error id (if present). That triplet is always passed along to someone else who logs the exception. (FWIW, the error id indicates a Python source location that is associated with the error. On the Python-side, we can look up that error id and provide a better stack trace.). [1] You'll notice the logs are missing. I noticed this as well, it's a new bug. I fixed it in https://github.com/hail-is/hail/pull/13729.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13715:366,simpl,simple,366,https://hail.is,https://github.com/hail-is/hail/pull/13715,1,['simpl'],['simple']
Usability,"CHANGELOG: In Query-on-Batch, simple pipelines with large numbers of partitions should be substantially faster. :facepalm:",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12854:30,simpl,simple,30,https://hail.is,https://github.com/hail-is/hail/pull/12854,1,['simpl'],['simple']
Usability,"CHANGELOG: Introduce `hailctl fs sync` which robustly transfers one or more files between Amazon S3, Azure Blob Storage, and Google Cloud Storage. There are really two distinct conceptual changes remaining here. Given my waning time available, I am not going to split them into two pull requests. The changes are:. 1. `basename` always agrees with the [`basename` UNIX utility](https://en.wikipedia.org/wiki/Basename). In particular, the folder `/foo/bar/baz/`'s basename is *not* `''` it is `'baz'`. The only folders or objects whose basename is `''` are objects whose name literally ends in a slash, e.g. an *object* named `gs://foo/bar/baz/`. 2. `hailctl fs sync`, a robust copying tool with a user-friendly CLI. `hailctl fs sync` comprises two pieces: `plan.py` and `sync.py`. The latter, `sync.py` is simple: it delegates to our existing copy infrastructure. That copy infastructure has been lightly modified to support this use-case. The former, `plan.py`, is a concurrent file system `diff`. `plan.py` generates and `sync.py` consumes a ""plan folder"" containing these files:. 1. `matches` files whose names and sizes match. Two columns: source URL, destination URL. 2. `differs` files or folders whose names match but either differ in size or differ in type. Four columns: source URL, destination URL, source state, destination state. The states are either: `file`, `dif`, or a size. If either state is a size, both states are sizes. 3. `srconly` files only present in the source. One column: source URL. 4. `dstonly` files only present in the destination. One column: destination URL. 5. `plan` a proposed set of object-to-object copies. Two columns: source URL, destination URL. 6. `summary` a one-line file containing the total number of copies in plan and the total number of bytes which would be copied. As described in the CLI documentation, the intended use of these commands is:. ```; hailctl fs sync --make-plan plan1 --copy-to gs://gcs-bucket/a s3://s3-bucket/b; hailctl fs sync --use",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14248:697,user-friendly,user-friendly,697,https://hail.is,https://github.com/hail-is/hail/pull/14248,2,"['simpl', 'user-friendly']","['simple', 'user-friendly']"
Usability,"CHANGELOG: Reduce latency on simple pipelines by as much as 50% by reducing decoding time. Force count essentially tests decoding because it forces decoding but then just increments a counter by one. Analysis of profile results indicates that the array inplace decoder was perhaps 50% of time, but exactly what part of decoding was unclear. I attempted many different things. I eventually settled on loop unrolling as the primary benefit. After team meeting, I applied @patrick-schultz 's advice to use bit twiddling to further improve the speed. ---. I assessed the latency using `time python3` on this file:. ```python; import hail as hl; hl.init(master='local[1]'); hl._set_flags(write_ir_files='1'); hl.read_matrix_table('/Users/dking/projects/hail-data/foo.mt')._force_count_rows(); ```. `foo.mt` is a subset of the `variant_data` from a VDS with ~80k samples, ~300k variants, stored in ~1.6GiB. 1. This PR: 34s, 33s; 2. no twiddling: 43s, 43s https://github.com/hail-is/hail/compare/main...danking:hail:unroll-64; 3. no twiddling & 8 element blocks: 37s, 38s https://github.com/hail-is/hail/compare/main...danking:hail:unroll-8; 4. `main` (`481cfc201b [query] fix backoff code (#13713)`): 68s, 69s. In YourKit, I observe that (1) reads 50-70MB/s with one core whereas (4) reads 15-35MB/s. I also assessed the 10-core latency and JIT effects:. - (1) starts at ~12s, warms to ~6s (+- 0.5s). Peak bandwidth 490MB/s.; - (4) starts at ~17s and warms up to ~11s (+- 2s). Peak bandwidth ~250MB/s. I suspect, with this PR, the multi-core speed is fast enough to saturate any of our file stores (including my laptop, which I think taps out just around ~500MB/s). Big thanks to everyone who contributed, particularly @patrick-schultz, whose suggestion to use bit-twiddling, squeezeed another 10% off the 8 element blocks.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13776:29,simpl,simple,29,https://hail.is,https://github.com/hail-is/hail/pull/13776,1,['simpl'],['simple']
Usability,"CHANGELOG: Since 0.2.110, `hailctl dataproc` set the heap size of the driver JVM dangerously high. It is now set to an appropriate level. This issue manifests in a variety of inscrutable ways including RemoteDisconnectedError and socket closed. See issue #13960 for details. In Dataproc versions 1.5.74, 2.0.48, and 2.1.0, Dataproc introduced [""memory protection""](https://cloud.google.com/dataproc/docs/support/troubleshoot-oom-errors#memory_protection) which is a euphemism for a newly aggressive OOMKiller. When the OOMKiller kills the JVM driver process, there is no hs_err_pid...log file, no exceptional log statements, and no clean shutdown of any sockets. The process is simply SIGTERM'ed and then SIGKILL'ed. From Hail 0.2.83 through Hail 0.2.109 (released February 2023), Hail was pinned to Dataproc 2.0.44. From Hail 0.2.15 onwards, `hailctl dataproc`, by default, reserves 80% of the advertised memory of the driver node for the use of the Hail Query Driver JVM process. For example, Google advertises that an n1-highmem-8 has 52 GiB of RAM, so Hail sets the `spark:spark.driver.memory` property to 41g (we always round down). Before aggressive memory protection, this setting was sufficient to protect the driver from starving itself of memory. Unfortunately, Hail 0.2.110 upgraded to Dataproc 2.1.2 which enabled ""memory protection"". Moreover, in the years since Hail 0.2.15, the memory in use by system processes on Dataproc driver nodes appears to have increased. Due to these two circumstances, the driver VM's memory usage can grow high enough to trigger the OOMKiller before the JVM triggers a GC. Consider, for example, these slices of the syslog of the n1-highmem-8 driver VM of a Dataproc cluster:. ```; Nov 22 14:26:51 vds-cluster-91f3f4c1-b737-m earlyoom[4115]: earlyoom v1.6.2; Nov 22 14:26:51 vds-cluster-91f3f4c1-b737-m earlyoom[4115]: mem total: 52223 MiB, swap total: 0 MiB; Nov 22 14:26:51 vds-cluster-91f3f4c1-b737-m earlyoom[4115]: sending SIGTERM when mem <= 0.12% and ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14066:678,simpl,simply,678,https://hail.is,https://github.com/hail-is/hail/pull/14066,1,['simpl'],['simply']
Usability,CHANGELOG: `PythonJob`s now support intermediate file resources the same as `BashJob`s. I feel like `ofile` semantics should apply the same to bash and python jobs. I don't believe this is a breaking change since `j.ofile` didn't really mean anything usable until now for python jobs IIUC.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12726:251,usab,usable,251,https://hail.is,https://github.com/hail-is/hail/pull/12726,1,['usab'],['usable']
Usability,CHANGELOG: `hailtop.aiotools.copy` will always show a progress bar when `--verbose` is passed.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11776:54,progress bar,progress bar,54,https://hail.is,https://github.com/hail-is/hail/pull/11776,1,['progress bar'],['progress bar']
Usability,"CHANGELOG: `hl.export_vcf` is now substantially faster on simple pipelines. I fell into a bit of a rabbit hole. I started off using the balding nichols model as my test dataset. I improved random number generation a bit by making `rand_unif` into a method, but eventually bailed out to focus on other improvements. I also originally used `vcf.bgz` but bgzip is quite slow and it obscured the slow parts of what I could control, i.e. hail. I finally settled on this test case run against the Spark backend:; ```; import hail as hl; hl.init(master='local[1]'); hl._set_flags(write_ir_files='1'); mt = hl.utils.range_matrix_table(n_rows=1000_000, n_cols=4_000); mt = mt.key_cols_by(s = hl.str(mt.col_idx)); mt = mt.key_rows_by(locus = hl.locus(""1"", mt.row_idx + 1), alleles = ['G', 'T']); mt = mt.annotate_entries(GT = hl.call(mt.row_idx % 2, mt.col_idx % 2)); hl.export_vcf(mt, '/tmp/foo.vcf'); ```; It generates a 15GiB file. My initial tests, which used the balding nichols model, had write times of ~8MiB/s. With all my changes, I once saw 177 MIB/s but I think that may have been a fluke. I see pretty consistent ~110MiB/s in the profiler's estimate of bandwidth to the FileOutputStream. When measured by `time python3 test.py` this script writes at ~93MiB/s. Ideally we would hit 250MiB/s (1/8th of an n1-standard-8's network bandwidth), but, considering that we have to split that bandwidth with reading in most cases, ~91 MiB/s ain't so bad. On main, this pipeline writes at 32 MiB/s. The wins in decreasing order of importance were:; 1. Use buffered I/O. All of our exporters should now use buffered I/O because I changed it in the EmitMethodBuilder. I didn't change it in HadoopFS because (a) Hail's native I/O has buffering and (b) buffering and position tracking requires work.; 2. Avoid String allocation, String to UTF8 conversion, and Array[Byte] allocation in VCF writing. In particular, for the most common types of Calls, I just return the UTF8 byte array in a switch statement.; 3. Use",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12733:58,simpl,simple,58,https://hail.is,https://github.com/hail-is/hail/pull/12733,1,['simpl'],['simple']
Usability,CHANGELOG: `hl.nd.vstack` and `hl.nd.hstack` provide clear error messages when used with incompatible matrices or with no arguments.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12636:53,clear,clear,53,https://hail.is,https://github.com/hail-is/hail/pull/12636,1,['clear'],['clear']
Usability,"CHANGELOG: early implementation of regenie. I'd like to get this basic version in and iterate. It works on local. Has a few todos and fixmes; I've seen Cotton, others use these, and they'll be gone in fairly short order, saves a bit of time over making a formal issue, for something that is clearly wip. . This looks like a scary amount of lines, but almost all of the work is held in regenie-batch.py. Example files are included in contrib/regenie/regenie, which is a redacted copy of their repo, and which is sufficient, lighter-weight than the full. When you have a chance, I'd like to discuss increasing the max capacity of the SSD (striping partitions). I want this as a fallback mechanism, when not enough memory can be allocated (lowmem). It will likely perform terribly with persistent storage. I'm happy to contribute that.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9194:291,clear,clearly,291,https://hail.is,https://github.com/hail-is/hail/pull/9194,1,['clear'],['clearly']
Usability,"CHANGELOG: remove learn more, which should not have gone in until the learn more content was finalized.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8851:18,learn,learn,18,https://hail.is,https://github.com/hail-is/hail/pull/8851,2,['learn'],['learn']
Usability,"CHANGE_LOG: ; - Added ``Job.always_copy_output`` when using the ``ServiceBackend``. The default behavior is `False` which; is a breaking change from the previous behavior to always copy output files irregardless of the job's; completion state. Thoughts on introducing this ""breaking"" change? I think it's okay and we will announce the change on Zulip. I think the benefits of getting rid of this not so intuitive behavior where we copy files despite the main container's completion state outweighs possibly breaking someone's pipeline that relied on files being there when the copy step could have failed as well.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11884:403,intuit,intuitive,403,https://hail.is,https://github.com/hail-is/hail/pull/11884,1,['intuit'],['intuitive']
Usability,"Changes:; - add cpu/memory field to workshops; - simplified workshop login logic a bit: workshops_session is just workshop name, token and guest user id, userdata for workshops is id and workshop, workshop auth decorator verifies workshop is valid to before creating userdata,; - make sure to check active everywhere,",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7157:49,simpl,simplified,49,https://hail.is,https://github.com/hail-is/hail/pull/7157,1,['simpl'],['simplified']
Usability,"Changes:; - batch2: send job_spec to worker instead of kubernetes pod spec; - batch2: create containers on worker from job_spec; - move job_spec_to_k8s_pod_spec to batch, only used there now; - simplified volume handling somewhat: Volume now means docker volume, cspec has list of volume mounts. As usual, will probably need a bit of testing.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7332:194,simpl,simplified,194,https://hail.is,https://github.com/hail-is/hail/pull/7332,1,['simpl'],['simplified']
Usability,"Changes:; - create a custom job spec schema for what a job means to us; - hand-rolled validator; - use in bath_client, /jobs/create endpoints in batch, batch2; - slightly changed create_job interface around volumes, docker socket and secrets, update usage; - wrote route to convert this to a k8s pod spec, use when actually creating jobs. The secret has a namespace, but it is ignored by the servers. Eventually, batch should be able to pull secrets from wherever, but needs to enforce permissions on who can use what secrets. This was a long-standing issue that I think now has a clearer path. We can get rid of the mount docker socket option by making the worker support a build (rather than run) task. The validator should really go in the server code, but it needs to be shared between batch and batch2 for now. Plan is to push this through batch2 to remove the dependence on the k8s pod serialization. When that's done, the job to pod spec routine can go into batch (and go away when CI uses batch2). Will be interested to benchmark my validator vs. the previous cerberus + k8s validation/serialization.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7313:581,clear,clearer,581,https://hail.is,https://github.com/hail-is/hail/pull/7313,1,['clear'],['clearer']
Usability,"Changes:; - four containers: setup container, main container, cleanup container, keep alive container; - cleanup container waits for an HTTP message from batch before cleaning up; - keep alive container stays alive until batch sends it an HTTP message (this prevents terminated pod GC); - split `mark_complete` into three simpler methods; - extract several parts of former `mark_complete` into named helper methods; - `LogStore.results_filename` is gone, if the logs are present, the pod has already been run",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6746:322,simpl,simpler,322,https://hail.is,https://github.com/hail-is/hail/pull/6746,1,['simpl'],['simpler']
Usability,"Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3MThjYjgyZC1jNGU3LTRlNWEtODgzZi02NjQ0NjlmYzA4MGEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjcxOGNiODJkLWM0ZTctNGU1YS04ODNmLTY2NDQ2OWZjMDgwYSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""718cb82d-c4e7-4e5a-883f-664469fc080a"",""prPublicId"":""718cb82d-c4e7-4e5a-883f-664469fc080a"",""dependencies"":[{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.11.2""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-JUPYTERSERVER-6099119""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[461],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Generation of Error Message Containing Sensitive Information](https://learn.snyk.io/lesson/error-message-with-sensitive-information/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14070:3607,Learn,Learn,3607,https://hail.is,https://github.com/hail-is/hail/pull/14070,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,Clean up and simplify subgenerator code.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/467:13,simpl,simplify,13,https://hail.is,https://github.com/hail-is/hail/pull/467,2,['simpl'],['simplify']
Usability,Clear region in groupVariantsBy.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2686:0,Clear,Clear,0,https://hail.is,https://github.com/hail-is/hail/pull/2686,1,['Clear'],['Clear']
Usability,Clearly document python dependencies,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2978:0,Clear,Clearly,0,https://hail.is,https://github.com/hail-is/hail/issues/2978,1,['Clear'],['Clearly']
Usability,"Closes out the first reorg work. There are a bunch of utility methods on PBinary, but these are non-trivial to remove. There are places where it isn't clear to me that we have a PBinary instance for instance. For example,. ```scala; srvb.addString(""hello""),; ```. Would need a PString (and the fundamentalType of that)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7755:151,clear,clear,151,https://hail.is,https://github.com/hail-is/hail/pull/7755,1,['clear'],['clear']
Usability,Collapse adjacent MapGlobals nodes in Simplify,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5092:38,Simpl,Simplify,38,https://hail.is,https://github.com/hail-is/hail/pull/5092,1,['Simpl'],['Simplify']
Usability,"Context: https://hail.zulipchat.com/#narrow/stream/300487-Hail-Batch-Dev/topic/adding.20service.20account.20name.20to.20users.20list/near/349228510. It's useful for our automation to include this in the REST response get any get user call. I don't know how testing works, if needed, could you guide me how to add tests to cover this?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12889:293,guid,guide,293,https://hail.is,https://github.com/hail-is/hail/pull/12889,1,['guid'],['guide']
Usability,"ContextRDD registered a TaskCompletionListener with Spark to close its context no matter why the task ends. But if the region in the context points to RegionMemory that is shared (has refcount > 1), this won't actually free the memory. Plus, this doesn't free any regions not created by an RVDContext. This PR removes the TaskCompletionListener from ContextRDD, and instead adds a single one to each thread-local RegionPool. This clearly ensures all off-heap memory is freed at the end of the task.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8287:430,clear,clearly,430,https://hail.is,https://github.com/hail-is/hail/pull/8287,1,['clear'],['clearly']
Usability,"Convert three foreach calls to while loops. I see about a 15% reduction in variant aggregation time. I executed. ```; hail read profile225.vds \; annotatevariants expr -c 'va.foo = gs.map(g => 1).sum()' \; exportvariants -c 'va.foo' -o 'foo.tsv'; ```. Here are the comparisons between this PR, master, and some part-solutions that I tried. We always compare to this PR. In each case, the first row of numbers is the same row of timings for this PR. The second row of numbers is the timings for the alternative. Note that converting the outer loop and the last loop, but not the inner loop, seems to be slower than master. I suspect these measurements are fairly noisy, but perhaps there's something else going on in that case. Regardless, this PR is the clear winner and we know why: `while` loops are faster than `for` loops. vs master; ```; (/ (/ (+ 49.736 50.335 48.197 51.034 47.737) 5); (/ (+ 62.9 55.362 57.100 57.815 60.5) 5)). 0.84; ```. vs inner and last only; ```; (/ (/ (+ 49.736 50.335 48.197 51.034 47.737) 5); (/ (+ 52.982 63.1 57.481 56.480 51.814) 5)). 0.88; ```. vs outer and last only; ```; (/ (/ (+ 49.736 50.335 48.197 51.034 47.737) 5); (/ (+ 74.6 69.0 55.750 69.7 68.5) 5)). 0.73; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1223:754,clear,clear,754,https://hail.is,https://github.com/hail-is/hail/pull/1223,1,['clear'],['clear']
Usability,"Core infrastructure enclosed. Opening now to enable feedback as I continue to higher level interfaces, tests, and examples.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3397:52,feedback,feedback,52,https://hail.is,https://github.com/hail-is/hail/pull/3397,1,['feedback'],['feedback']
Usability,Cosmetic. Seemed simpler overall to not take an RV to mutate. No one used this in a smart way anyway.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7259:17,simpl,simpler,17,https://hail.is,https://github.com/hail-is/hail/pull/7259,1,['simpl'],['simpler']
Usability,"Create a filter alleles command. The interface should be modeled off the current filter commands (variant, sample, genotype). One wrinkle is that to update the variant annotations, which must be done by the user, they must have access to information about what alleles were filtered. Rough sketch of the interface:. ```; ... filteralleles; --keep; -c 'va.alleleQuality[aIndex] > 0.8'; -a 'va.info.AC = aIndices.map(i => va.info.AC[i]), va.info.AN = ...'; ```. where `va.alleleQuality` is a hypothetical annotation of type `Array[Double]`. It also has a `--remove` option. `-c` is the filter condition. It has type `Boolean` and `v`, `va`, and `aIndex` in scope, where `aIndex` is the index of the allele being evaluated. `-a` is an annotation expression which updates variant annotations analogous to the `-c` argument of `annotatevariants expr`. It has `v`, `va` and `aIndices`, where `v` is the _new_ variant (so `v.altAlleles.size` is the number of alleles being kept), `va` is the old variant annotations which are being updated, and `aIndices` is a map from the new to old allele indices. Only alternate alleles should be filtered, although all indices should be 0-based, counting the reference. If no alternate alleles remain, the variant should be filtered (no monomorphic variants). Step one should be to sketch the command docs so we can get feedback on the interface. We should work with @konradjk and Monkol to make examples that handle the ExACv2 use case.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/551:1351,feedback,feedback,1351,https://hail.is,https://github.com/hail-is/hail/issues/551,1,['feedback'],['feedback']
Usability,"Create a new class `VariantDatasetCombiner` that implements a simple state; machine for running a VariantDataset combiner pipeline from start to; finish. The `VariantDatasetCombiner` structure contains pretty much everything the; old `experimental.vcf_combiner.run_combiner` method took as arguments:; `temp_path`, `output_path`, list of gvcf paths, etc.. What is new is the; addition of a `save_path` and `vds_paths`. The `save_path` is used as; a filesystem or object storage location to save the state of the; combiner so that it may be resumed. The vds paths implement the long; awaited mixed hail and gvcf inputs, that was never completed for the VCF; combiner. End users should not call `VariantDatasetCombiner.__init__`; instead preferring the free function new_combiner. The; `VariantDatasetCombiner` API is fairly simple:. * @property finished; * save: serialize the current state to save_path; * step: does the next unit of work for the combiner (described in more detail below); * run: until `finished`, calls `save` then `step` followed by one last `save`. The public api is present in 2 free functions:. * new_combiner: public VariantDatasetCombiner constructor; * load_combiner. if `new_combiner` is not given a `save_path`, it will compute one based on; the SHA-256 of it's inputs. If the file at `save_path` is present, and; a valid `VariantDatasetCombiner`, it will load it and use it, unless the; `force` argument to `new_combiner` is True. This way, every combiner has; a `save_path`. ## The `step` algorithm. If there are any gvcf paths still uncombined, they are combined; `branch_factor` at a time, using `batch_size` parallel matrix table; writes to achive good parallelism. If there is only one merged vds, and; no vds arguments remaining to be combined it is written to; `output_path`. Otherwise the new vds paths are appended to the vds list; and the vds list is sorted by number of samples. The vds paths are always kept sorted by samples and new items are only; ever added ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10892:62,simpl,simple,62,https://hail.is,https://github.com/hail-is/hail/pull/10892,3,"['resume', 'simpl']","['resumed', 'simple']"
Usability,"Create an `EType`, `EStructOfArrays`, that encodes an `array<struct{...}>` into a transposed representation (hopefully) allowing for better data compression (either specialized per field, or simply better patterns for a general purpose algorithm to find) and decoding speed. At current, this is a prototype that only supports structs where all fields are `int32`. Each field of the struct of arrays is it's own `EContainer`, so we have fine grained control over the encoding of each field.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14391:191,simpl,simply,191,https://hail.is,https://github.com/hail-is/hail/pull/14391,1,['simpl'],['simply']
Usability,"Create custom Hail Dataproc images to speed up cluster creation time: https://cloud.google.com/dataproc/docs/guides/dataproc-images. Custom dataproc images expire every 30 days so image creation will need to scheduled regularly. There should be images for 0.1, 0.2 with and without VEP.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4038:109,guid,guides,109,https://hail.is,https://github.com/hail-is/hail/issues/4038,1,['guid'],['guides']
Usability,"Creates a responsive table whose dimensions are defined on the parent (allowing child elements to be set as a percentage of that table), by setting width of the parent based on viewport. If the table exceeds that width, it will scroll, such that the elements above the table are still fixed to the flex-end position. See https://github.com/hail-is/hail/pull/7777. Narrow view (very slightly wider, because 75% of 653 is > 75% of 600, and table is in fact 653px at minimum, even when you set 600px min width):; <img width=""774"" alt=""Screenshot 2019-12-27 15 38 52"" src=""https://user-images.githubusercontent.com/5543229/71533028-73d10280-28c4-11ea-99be-bea06bc67a10.png"">. Wide view:; <img width=""1920"" alt=""Screenshot 2019-12-27 15 38 58"" src=""https://user-images.githubusercontent.com/5543229/71533029-73d10280-28c4-11ea-98ef-7b8e3afe3ca3.png"">. Table that is too wide is scrollable (wider than 1024px):; <img width=""804"" alt=""Screenshot 2019-12-27 16 09 18"" src=""https://user-images.githubusercontent.com/5543229/71532988-4be19f00-28c4-11ea-915a-1e038f179d1f.png"">; after scrolling right:; <img width=""1453"" alt=""Screenshot 2019-12-27 16 09 12"" src=""https://user-images.githubusercontent.com/5543229/71532989-4be19f00-28c4-11ea-9fbd-0270c881d085.png"">. Tested manually in browser in Firefox and Chrome.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7786:10,responsiv,responsive,10,https://hail.is,https://github.com/hail-is/hail/pull/7786,1,['responsiv'],['responsive']
Usability,"Currently `TableRead.execute` always produces a `TableValueIntermediate`, even though almost all `TableReader`s are lowerable, so could produce a `TableStageIntermediate`. This pr refactors `TableReader` to allow producing a `TableStageIntermediate` in most cases, and to make it clearer which readers still need to be lowered (only `TableFromBlockMatrixNativeReader`, `MatrixVCFReader`, and `MatrixPLINKReader`). It also deletes some now dead code.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13229:280,clear,clearer,280,https://hail.is,https://github.com/hail-is/hail/pull/13229,1,['clear'],['clearer']
Usability,"Currently if there are duplicated chr:pos:ref:alt in an annotation file, for example read by `annotatevariants table`, also the variants in the vds get duplicated. This is clearly not nice. So instead think on a better behaviour. But do not just issue an error, because otherwise is a pain.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/389:172,clear,clearly,172,https://hail.is,https://github.com/hail-is/hail/issues/389,1,['clear'],['clearly']
Usability,"Currently the binding structure is redundantly specified in two places: Binds.scala, and the parser. We need the binding structure in the parser to propagate the environment, so we can annotate `Ref` nodes (and a few other things) with their types. But we can't use Binds.scala because we don't yet have an IR. This PR removes environment maintenance from the parser by deferring type annotation to a separate pass (which is simple, because it can use the Binds.scala infrastructure). One consequence is that we can't assign types to nodes like `Ref` during parsing, which means we can't ask for the type of any node during parsing, and by extension we can't ask for types of children in IR node constructors. Instead, all typechecking logic is moved to the `TypeCheck` pass. Some benefits of this change:; * The parser is simpler, as it doesn't have to maintain a typing environment.; * Binds.scala is now the single source of truth on the binding structure of the IR.; * Instead of typechecking being split in an ad-hoc way between IR constructors and the `TypeCheck` pass, all typechecking and type error reporting logic is in one place.; * The parser parses a context-free grammar, no more and no less. If the input is gramatically correct, the parser succeeds.; * We can round trip IR with type errors through the text representation. For instance, if we log an IR that fails TypeCheck, we can copy the IR from the log, parse it, then debug. This change was motivated by my work in progress to convert the parser to use the SSA grammar, which this should greatly simplify. I chose to make the type annotation pass after parsing mutate the IR in place (with the unfortunate exception of `Apply`, which can change into an `ApplyIR` or `ApplySpecial`. Do these really need to be separate nodes?). The type of a `Ref` node was already mutable to allow this sort of deferred annotation, and I've had to make a few other things mutable as well. Alternatively we could rebuild the entire IR to include t",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13990:425,simpl,simple,425,https://hail.is,https://github.com/hail-is/hail/pull/13990,2,['simpl'],"['simple', 'simpler']"
Usability,"Currently, garbage pods will sit around in the batch-pods and test namespaces forever. In anticipation of adding expensive resources (storage), batch needs to learn to clean up after itself. Batch creates garbage whenever it is killed without warning. This happens in two circumstances:; - when batch is killed by a deploy; - CI job is running a test batch instance and is killed because master or the feature branch changed. To mitigate this issue we delete all PVCs (storage, ergo monetarily expensive resources) from the batch-pods namespace before we deploy batch. These PVCs are no longer needed because the batch instance that owns them is about to be re-deployed. Since the test namespace (where CI jobs will spin up batch instances to test) might also contain PVCs, we delete the whole namespace. We can do this because the deploy job (the one running `make deploy` is in the `batch-pods` namespace, not the `test` namespace). Since we delete the whole namespace, we need to recreate anything that's expected to exist there. ---. This is a short term fix. The long term fix mitigates these two situations differently:; - persistence of batch jobs ensures that after a deploy, the new batch instance finds the orphaned resources and adopts them; - each test job will get a fresh namespace in which it creates whatever it needs to test, batch then ensures this namespace is destroyed when the job is finished (which, of course, requires persistence of batch jobs)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5488:159,learn,learn,159,https://hail.is,https://github.com/hail-is/hail/pull/5488,1,['learn'],['learn']
Usability,"Currently, if the type of the `default` argument to `dict.get` does not match the dictionary's value type, the error message contains the dictionary's type and the `default` argument's type. However, the `default` argument's type should be compared to the dictionary's **value** type. This can be particularly confusing when dealing with nested dictionaries. For example:; ```python; d = hl.dict({""foo"": {""foo"": 1}}); d.get(""somekey"", hl.dict({""bar"": {""bar"": 2}})); ```; results in:; ```; TypeError: 'get' expects parameter 'default' to have the same type as the dictionary ; value type, found 'dict<str, dict<str, int32>>' and 'dict<str, dict<str, int32>>'; ```. This change puts the value type instead of the dictionary type in the error message and slightly rewords the message to be clearer about which type is which.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7377:787,clear,clearer,787,https://hail.is,https://github.com/hail-is/hail/pull/7377,1,['clear'],['clearer']
Usability,"Currently, jobs in hail batch can only be run on n1 machines but with the rise of deep learning in bioinformatics, the ability to run jobs on g2 machines, as well as other GPU supported machines, is an important and exciting addition to hail batch. This PR highlights the steps needed to add new machine types into hail batch and could be used as a template for further development support. . The changes in this PR can broadly be divided into additions to the job crun container and insertion of g2 resources (CPU, RAM, L4 Accelerator) into the resources table for billing. This PR uses the NVIDIA Container Toolkit, which allows the creation of GPU accelerated containers. This toolkit is integrated with docker via the parameters —runtime=nvidia and the specification of GPUs is made through —gpus all. The toolkit is installed in the batch worker VM startup script and the corresponding docker parameters are configured if the machine type is g2, so there is no change to the docker configuration for n1 machines. For the toolkit to work there is a nvidia hook that needs to be injected into the crun config. These modifications are also done based on machine type. On the billing side, the existing pricing setup was expanded to include g2 machines. The g2 instance cores and RAM are inserted into the database, and the SKUs are hard coded. For future machine type incorporation or updates, [https://cloud.google.com/skus/?currency=USD&filter=](https://cloud.google.com/skus/?currency=USD&filter=) may serve as a useful resource to identify relevant SKU ids. A new resource type was also added for the accelerator, including preemptible and non-preemtible. Finally, g2 machines mount the worker data disk under the name nvme0n2 so the code is updated to reflect this. Future work may want to investigate a way to automatically detect what the proper disk name is or make the disk naming logic more robust.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13430:87,learn,learning,87,https://hail.is,https://github.com/hail-is/hail/pull/13430,1,['learn'],['learning']
Usability,"Currently, tasks to schedule new instances are put on the event loop inside the `Pool` and `JobPrivateInstanceManager` constructors. `Pool.create` and `JobPrivateInstanceManager.create` first instantiate an object of their respective type and then load existing instances from the database into the in-memory instance collection. This could potentially cause the create instances loop to trigger while we're drawing ""existing"" instances, which causes the assertion error in https://github.com/hail-is/hail-tasks/issues/24 when the create instances loop and load instances query race to add the instance to the in-memory data structure. This change moves the task creation from the constructor to the `create` method, so we don't start creating instances until all existing instances are accounted for. I think I would have liked to simply pass the constructor a list of instances, but we can't create an `Instance` without an `InstanceCollection`. Resolves hail-is/hail-tasks#24. I also threw in a bit of cleanup, i.e. removing some variable assignments that didn't seem very helpful and resolving a lint issue where we used `items` where we could just use `values`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11766:832,simpl,simply,832,https://hail.is,https://github.com/hail-is/hail/pull/11766,1,['simpl'],['simply']
Usability,"Currently, the `_csrf` cookie is made available to all subdomains of `.hail.is`. This means that if I first visit `batch.hail.is` I get a `_csrf` cookie set for `.hail.is`. That cookie is then reused if I visit `ci.hail.is`. Even more awkward, the same value of the cookie will get reused if I then visit `batch.azure.hail.is`. This isn't that big of a deal, these can all be considered part of the same application that the hail team delivers and secures, but it is very little work to set stricter bounds on where this cookie is sent. By removing the `domain` attribute and using `samesite='strict'`, the cookie's domain will be set by the browser to the domain of the request whose response included the `Set-Cookie` header, e.g. `batch.hail.is` or `internal.hail.is`. `Strict` mode then ensures that the cookie will only be sent to that exact domain, meaning that each application is guaranteed to receive the `_csrf` token that it itself delivered, and a `_csrf` token from CI cannot be used to take actions against Batch. This should not have an adverse impact on existing users' browser sessions. In `render_template` we preserve the value of an existing `_csrf` cookie so this change should do the following:; - Logged in user visits a page with an existing widely scoped (`.hail.is`) `_csrf` cookie; - The server returns a `Set-Cookie` header with a new `_csrf` cookie for strictly the `batch.hail.is` domain but with the same token value as the original `_csrf` cookie; - The user now has two cookies and the browser could send either one on a given request, but it does not matter because they have the same value; - If the user logs out and back in, their old widely scoped cookie will be cleared and they only get the strict cookie from now on.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14180:1701,clear,cleared,1701,https://hail.is,https://github.com/hail-is/hail/pull/14180,1,['clear'],['cleared']
Usability,"Currently, the `mark_job_complete` SQL procedure deadlocks with itself, because the transaction takes a shared lock on the relevant row of the `batches` table, which it proceeds to try to upgrade to an exclusive lock later in the transaction when it calls `UPDATE batches …`. The lock upgrade is not an issue in itself, but it will cause a deadlock if we run multiple `mark_job_complete` transactions for the same batch at the same time, which we clearly would like to do. One way to avoid this deadlock is to never issue an UPDATE to the batches table during the `mark_job_complete` procedure. Currently, we conduct the following updates to the batch row:; - increment number of completed jobs; - mark the batch as complete if the number of completed jobs is equal to the total number of jobs; - increment the number of successful/failed/cancelled jobs depending on the completion type of the job. This deadlock is a symptom of the problem that the `batches` table holds both very static information (like the billing project) and very volatile information like the number of completed jobs. It's not an issue to have many transactions holding read-only locks on rows of the batches table so long as it contains mostly static data. Therefore, it seems appropriate to move the job counters out of the batch table and into a new small table that just contains these counters. This eliminates all but one of the UPDATEs to the batch table in the procedure. The one sticky issue is marking the batch as complete. This is a much more popular column and I was hesitant to move it around just yet. I ended up moving the completeness update into a second transaction, which I think is not too bad for now. I also think that it could merge nicely with the following transaction that does the callback. Resolving this deadlock uncovered yet another deadlock underneath, which I want to tackle next. This PR does NOT resolve the issue that all mark job complete transactions are serialized due to the way we inc",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11352:447,clear,clearly,447,https://hail.is,https://github.com/hail-is/hail/pull/11352,1,['clear'],['clearly']
Usability,"Currently, the boolean versions aren't being used because there's no equivalent in the function registry. I removed the int and float versions because the Python interface didn't use them. Happy for feedback on what we want to expose. If we want to support booleans now, I'll add new Aggregators that work on annotations (not RV).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3535:199,feedback,feedback,199,https://hail.is,https://github.com/hail-is/hail/pull/3535,1,['feedback'],['feedback']
Usability,"Currently, the k8s namespace field is used both for routing internal requests inside kubernetes but also external requests over the internet. It also has special logic based on whether the namespace indicates a production or dev environment. For example, if `namespace == 'default'`, then we route external `batch` requests to `batch.<domain>/path`, but if `namespace == foo_dev`, we route external `batch` requests to `internal.<domain>/foo_dev/path`. This PR decouples the namespace field from routing. Aside from being overall more straightforward in my opinion, this is necessary for batch on azure terra where batch is served out of a subpath it does not control and is unrelated to whatever namespace it might reside in. The guiding principle for routing is then as follows: If the config has no subpath, use a subdomain, otherwise put everything under domain + subpath. For example:; - `{'domain': 'hail.is', 'subpath': null}` => `batch.hail.is`; - `{'domain': 'internal.hail.is', 'subpath': '/foo_dev'}` => `internal.hail.is/foo_dev/batch`. Since the CI pipeline runs on current production instances, there is a minor need to stay compatible with old deploy configs (or else hack up the CI build.yaml). It's quite a simple translation though, because if there is no subpath provided we can infer one based on the `default_namespace`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14056:731,guid,guiding,731,https://hail.is,https://github.com/hail-is/hail/pull/14056,2,"['guid', 'simpl']","['guiding', 'simple']"
Usability,"Currently, the memory client buffers the entire output in memory which is likely to cause OOMs. For reasons that are not entirely clear to me, sometimes these OOMs get muffled by our system and instead lead to non-termination. I vaguely remember this happening before with `using`. I suspect there is something somewhat subtle wrong with that method, but I am not certain. Anyway, there are four big changes here:; 1. Do not buffer the entire request body in memory when writing to memory.; 2. Because of (1) we have to pull retry behavior all the way up to the top-level where we know how to recreate the body.; 3. Because of (2) it is easier to provide a `write(url)(writerFunction)` style API, which I do here.; 4. Again, because of (2), and because I want to preserve the file-object-like interface, I added a somewhat funky anonymous class which uses a second thread to facilitate the movement of data written into the OutputStream returned by `create` into the OutputStream of the HTTP connection. Point (4) probably bears more explanation. The root issue is the bad Apache HTTP Client interface. Instead of `request` returning an OutputStream, it takes an ""entity"". An entity knows how to write itself into the OutputStream of an HTTP request. This works fine if the ""writer"" code is pased as a function (as in my new `write` method), but that does not work if the control flow looks like:. f = create(...); f.write(...); r.close(). We avoid this limited API by initiating the request in a second thread which will eventually block waiting to receive data from a PipedInputStream. That PipedInputStream produces the data written to a PipedOutputStream. The `create` call returns a positioned OutputStream which just writes data into the PipedOutputStream and handles cleaning up the thread when it is closed. In a multi-core system, network requests should proceed in parallel to the client code. In a single-core system, the written data will buffer until `close` is called which will definite",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12691:130,clear,clear,130,https://hail.is,https://github.com/hail-is/hail/pull/12691,1,['clear'],['clear']
Usability,"Currently, the memory client buffers the entire output in memory which is likely to cause OOMs. For reasons that are not entirely clear to me, sometimes these OOMs get muffled by our system and instead lead to non-termination. I vaguely remember this happening before with `using`. I suspect there is something somewhat subtle wrong with that method, but I am not certain. Anyway, there are two big changes here:; 1. Do not buffer the entire request body in memory when writing to memory.; 2. Because of (1) we have to pull retry behavior all the way up to the top-level where we know how to recreate the body.; 3. Because of (2) it is easier to provide a `write(url)(writerFunction)` style API, which I do here.; 4. Again, because of (2), and because I want to preserve the file-object-like interface, I added a somewhat funky anonymous class which uses a second thread to facilitate the movement of data written into the OutputStream returned by `create` into the OutputStream of the HTTP connection. Point (4) probably bears more explanation. The root issue is the bad Apache HTTP Client interface. Instead of `request` returning an OutputStream, it takes an ""entity"". An entity knows how to write itself into the OutputStream of an HTTP request. This works fine if the ""writer"" code is pased as a function (as in my new `write` method), but that does not work if the control flow looks like:. f = create(...); f.write(...); r.close(). We avoid this limited API by initiating the request in a second thread which will eventually block waiting to receive data from a PipedInputStream. That PipedInputStream produces the data written to a PipedOutputStream. The `create` call returns a positioned OutputStream which just writes data into the PipedOutputStream and handles cleaning up the thread when it is closed. In a multi-core system, network requests should proceed in parallel to the client code. In a single-core system, the written data will buffer until `close` is called which will definitel",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12689:130,clear,clear,130,https://hail.is,https://github.com/hail-is/hail/pull/12689,2,['clear'],['clear']
Usability,"D`, possibly with some non-empty key. This is consistent with the rule that the `rvd` must always have a stronger/longer key than the `TableType`.; * **small tweaks** - Now I start working through the `TableIR` nodes, rewriting them to remove explicit uses of `UnpartitionedRVD`. The general plan is to sandwich the rvd logic between `toOrderedRVD` and `toOldStyleRVD`. The first takes an `UnpartitionedRVD` to an `OrderedRVD` with empty key (and leaves `OrderedRVD`s alone), and the second takes an `OrderedRVD` to an `UnpartitionedRVD` if its key was empty, and leaves it alone otherwise. Once they're all rewritten this way, I redefine `toOldStyleRVD` to always return `OrderedRVD`, and `UnpartitionedRVD` is no longer used.; * **remove `TableUnkey`** - With `UnpartitionedRVD` going away, `TableUnkey` is no longer necessary, it's equivalent to keying by an empty key.; * **small tweaks** - these next two rewrite more `TableIR` nodes; * **Merge master** - the big one; * **tweak MatrixColsTable** - 1) Optimize `coerce` by checking if the requested key is empty, avoiding a scan in that case. 2) Optimize `sortedColsValue` by checking if the column key is empty, avoiding the sort in that case. 3) Simplify `colsRVD`, removing the case on the type of the `RVD`, just calling `coerce` and letting the previous optimizations avoid unnecessary work.; * **`distinctByKey` fix** - While looking over `TableIR` implementations, I noticed a bug in `distinctByKey`: you need to be sure no key is split across multiple partitions. To be sure the empty key edge case still works, I added a test to check that `strictify` on an empty-key partitioner will always collapse everything to one partition.; * **Flipped switch** - redifines `toOldStyleRVD` to just return the `OrderedRVD` unchanged, and asserts that `TableValue.rvd` is always an `OrderedRVD`.; * **rest of the `TableIR` tweaks** - added a factory method `OrderedRVD.unkeyed` to replace `UnpartitionedRVD.apply`.; * the rest are simple tidying up",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4319:2029,Simpl,Simplify,2029,https://hail.is,https://github.com/hail-is/hail/pull/4319,2,"['Simpl', 'simpl']","['Simplify', 'simple']"
Usability,"Dear hail team,. I am trying to get familiar with hail by filtering and doing simple stuff I usually do on VCFs with softwares like bcftools.; I am working with Hail version 0.2.57-582b2e31b8bd; I splitted my VCF from multiallelic to biallelic with:; `data_tmp_bi = hl.split_multi_hts(data_tmp)`; Then I want to update the allele counts the same way as what I saw in your documentation:; `data_tmp_bi = data_tmp_bi.annotate_rows(info = hl.struct(AC=data_tmp_bi.info.AC[data_tmp_bi.a_index - 1],**data_tmp_bi.info))`; but I get this error:; ```; File ""<ipython-input-29-3595a23add68>"", line 1, in <module>; data_tmp_bi = data_tmp_bi.annotate_rows(info = hl.struct(AC=data_tmp_bi.info.AC[data_tmp_bi.a_index - 1],**data_tmp_bi.info)). TypeError: struct() got multiple values for keyword argument 'AC'; ```; The workaround I have been using is then to create a new info field called 'AC2', to then drop the 'AC' field and then recreate the 'AC' field with `annotate_rows` with to finally drop 'AC2'. Which is a long workaround:; ```; data_tmp_bi = data_tmp_bi.annotate_rows(info = hl.struct(AC2=data_tmp_bi.info.AC[data_tmp_bi.a_index - 1],**data_tmp_bi.info)); data_tmp_bi = data_tmp_bi.annotate_rows(info=data_tmp_bi.info.drop('AC')); data_tmp_bi = data_tmp_bi.annotate_rows(info = hl.struct(AC=data_tmp_bi.info.AC2, **data_tmp_bi.info)); data_tmp_bi = data_tmp_bi.annotate_rows(info=data_tmp_bi.info.drop('AC2')); ```. On top of this, I filter by column some samples with `filter_cols`, so then, I want to update fields like allele count again, so I would still need to use the same workaround as above, otherwise I get the same error. Do you have an idea of what the problem might be? Or a better way of doing this than what I am using?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9685:78,simpl,simple,78,https://hail.is,https://github.com/hail-is/hail/issues/9685,1,['simpl'],['simple']
Usability,"Deleted the `gsutil cat` line, it wasn't doing anything because of that erroneous `/vep_data/Plugins.tar`. I don't think plugin needs to be included here, as it's in the docker image. . Deleted the `gsutil cp`, as the file it referenced did not exist. Grabbed the 1var.vcf from the already copied loftee_data. . It's not clear to me why we don't do the `1var.vcf` vep run stuff when using `GRCh38`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10370:321,clear,clear,321,https://hail.is,https://github.com/hail-is/hail/pull/10370,1,['clear'],['clear']
Usability,Depends on pull request #696. Merge that first to get a simpler diff.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/697:56,simpl,simpler,56,https://hail.is,https://github.com/hail-is/hail/pull/697,1,['simpl'],['simpler']
Usability,"Don't use typecheck decorators here, we need a clearer message.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2694:47,clear,clearer,47,https://hail.is,https://github.com/hail-is/hail/issues/2694,1,['clear'],['clearer']
Usability,"Due to bytecode verification rules, an allocated but uninitalized object cannot be stored into a field, so the NEW and INVOKESPECIAL constructor call bytecodes cannot be split across methods. Therefore, I modified newInstance to fuse those operations together. I broke out control simplification and made it a stronger. Added method splitting. Currently, method splitting splits out basic blocks into their own, straight-line methods and all the control flow remains in the original method. All locals are spilled to fields which is terrible, but what we're doing now. I expect two changes in the future: recover the structured control flow (there are standard algorithms for this) so we can split out control flow, and use the dataflow analysis from InitializeLocals to only spill locals split across method boundaries. I will make a stacked PR on this that removes method wrapping from Emit and enables lir method splitting.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8958:281,simpl,simplification,281,https://hail.is,https://github.com/hail-is/hail/pull/8958,1,['simpl'],['simplification']
Usability,"EDIT from John for future readers: The issue here is that in general we only expect consumers to free memory after they're done processing a row. So when doing any sort of filtering operation, we want to make our own region that we clear after each row is filtered out, otherwise the garbage rows will continue to accumulate until we finally find a row to keep. `filterWithContext` demonstrates the correct way to do this, and so switching to use that method fixes the problem.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10182:232,clear,clear,232,https://hail.is,https://github.com/hail-is/hail/pull/10182,1,['clear'],['clear']
Usability,"Edit: Ready for a look, besides google sa key secret creation, because I'm not completely sure what the use case is, and whether it should be a namespaced secret. Since speaking with Cotton, I've moved to using our cloud mysql instance to track user resources, to ensure that a single user id results in a single resource. We can use auth0, but that would add complexity, and would really only make sense in the context of notebook (or whatever we end up managing users) I think: while auth0 allows you to add custom claims, I believe you need to first get the user's access token (via authentication), then call (server side, no user input needed) the /management api endpoint to check the existence of the claims, and update if they do not exist. So this requires user interaction. Would need to confirm this, if proven true, we will eventually be able to circumvent this by connecting our own database to their service ([they allow this](https://auth0.com/docs/connections/database/custom-db)). Still separately tracking mapping between user id and our resources feels relatively natural, and simpler. . Right now you could supply any identifier for the user_id, as long as its globally unique. I think using the auth0 id makes the most sense, since that is a guaranteed-unique id. I will need to provide you a way to get those ids if you want to use this outside of notebook2. edit: I opted not to separate user table from resources the user owns, because I expect one row per user, so not denormalized. Also, still needs some tests written (mysql related). cc @jigold, @cseed, @danking",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5618:1096,simpl,simpler,1096,https://hail.is,https://github.com/hail-is/hail/pull/5618,1,['simpl'],['simpler']
Usability,Eliminate `batch_utilization` in favor of `batch_total_cores`. Total cores can be used; in combination with free or user (aka used) cores to determine the cluster utilization. I also simplified the code for generating the metrics to make it easier to read.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12253:183,simpl,simplified,183,https://hail.is,https://github.com/hail-is/hail/pull/12253,1,['simpl'],['simplified']
Usability,"Emit was taking two MethodBuilder arguments, one directly and one embedded in an EmitRegion. This PR replaces the EmitRegion argument with a Value[Region]. It also makes a couple other simple refactorings that were personally helpful in understanding the structure of Emit.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8449:185,simpl,simple,185,https://hail.is,https://github.com/hail-is/hail/pull/8449,1,['simpl'],['simple']
Usability,"Enabling NDArray tests revealed a bug relative to the test suite: MakeNDArray doesn't actually consider row/column major. I added a simple fix for this, predicated on rowMajorIR being a literal, which seems like a reasonable choice.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9094:132,simpl,simple,132,https://hail.is,https://github.com/hail-is/hail/pull/9094,1,['simpl'],['simple']
Usability,"Environment:; - Spark 3.2.0; - Scala 2.12.15. Running: ; ```; make install-on-cluster HAIL_COMPILE_NATIVES=1 SCALA_VERSION=2.12.15 SPARK_VERSION=3.2.0; ```; I get the error:; ```BUILD SUCCESSFUL in 2m 5s; 3 actionable tasks: 3 executed; cp -f build/libs/hail-all-spark.jar python/hail/backend/hail-all-spark.jar; rm -rf build/deploy; mkdir -p build/deploy; mkdir -p build/deploy/src; cp ../README.md build/deploy/; rsync -r \; --exclude '.eggs/' \; --exclude '.pytest_cache/' \; --exclude '__pycache__/' \; --exclude 'benchmark_hail/' \; --exclude '.mypy_cache/' \; --exclude 'docs/' \; --exclude 'dist/' \; --exclude 'test/' \; --exclude '*.log' \; python/ build/deploy/; # Clear the bdist build cache before building the wheel; cd build/deploy; rm -rf build; python3 setup.py -q sdist bdist_wheel; make: *** No rule to make target 'check-pip-lockfiles', needed by 'install-on-cluster'. Stop.; ```. Issue is fixed for me by renaming `install-on-cluster: $(WHEEL) check-pip-lockfiles` -> `install-on-cluster: $(WHEEL) check-pip-lockfile` on line 344 of hail/Makefile. Many thanks,; Barney",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12568:675,Clear,Clear,675,https://hail.is,https://github.com/hail-is/hail/issues/12568,1,['Clear'],['Clear']
Usability,Extend Simplify to remove more operations before TableCount,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3676:7,Simpl,Simplify,7,https://hail.is,https://github.com/hail-is/hail/issues/3676,1,['Simpl'],['Simplify']
Usability,"Feature/Comment. Once documented the invocation of hail for running over a Spark cluster it proves crystal clear how to proceed, via `shadowJar` compilation and `spark-submit --master`. However it is not fully intuitive to have a `hail` command with a `--master` switch and a `shadowJar` compilation for `spark-submit`. A unifying script (eg. `bin/hail-submit`) that infers from command line options whether it is a local or cluster run, and from defaults infers the location of either the hail script or the `shadowJar` jar, could make the invocation simpler.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/419:107,clear,clear,107,https://hail.is,https://github.com/hail-is/hail/issues/419,3,"['clear', 'intuit', 'simpl']","['clear', 'intuitive', 'simpler']"
Usability,"Feedback welcome, not for merging. Goal with ScoreCovariance was to get a working interface rather than optimize speed.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2219:0,Feedback,Feedback,0,https://hail.is,https://github.com/hail-is/hail/pull/2219,1,['Feedback'],['Feedback']
Usability,"First of several web-related commits. Simply adds Lerna to manage (from future PRs) web apps and related micro services, as a monorepo. Deduplicate dependencies, install using a single command. The package.lock file is the majority of LOC, and it's automatically generated by npm install for a given package.json at a given point in time. We should commit these to ensure that subsequent npm install commands generated the same dependency tree. I think we should assume that this file is correct for the moment. https://stackoverflow.com/questions/44206782/do-i-commit-the-package-lock-json-file-created-by-npm-5. Lerna: https://lernajs.io. We can also choose not to use Lerna here and treat all web-related micro services as completely independent.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5314:38,Simpl,Simply,38,https://hail.is,https://github.com/hail-is/hail/pull/5314,1,['Simpl'],['Simply']
Usability,First stage of RegUtil simplification,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1839:23,simpl,simplification,23,https://hail.is,https://github.com/hail-is/hail/pull/1839,2,['simpl'],['simplification']
Usability,"First stage, esp. interested in feedback on structure of computation. Second stage will fill out docs and add global annotation for regression of `ys` against `covs` only.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2181:32,feedback,feedback,32,https://hail.is,https://github.com/hail-is/hail/pull/2181,1,['feedback'],['feedback']
Usability,"First step in RVD changes. Rewrites `Interval` to support endpoints that are `Row`s of different lengths. Hopefully comments and test suite are enough to make the semantics clear. If not, let me know what is unclear and I'll add documentation and/or test cases.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4072:173,clear,clear,173,https://hail.is,https://github.com/hail-is/hail/pull/4072,1,['clear'],['clear']
Usability,First version of hailctl batch. I'm not a big batch user at this time so feedback on both code and desired functionality is welcome. @konradjk,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6503:73,feedback,feedback,73,https://hail.is,https://github.com/hail-is/hail/pull/6503,1,['feedback'],['feedback']
Usability,Fix Simplify bug related to TableGetGlobals(TableMultiWayZipJoin),MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5104:4,Simpl,Simplify,4,https://hail.is,https://github.com/hail-is/hail/pull/5104,1,['Simpl'],['Simplify']
Usability,Fix TableKeyByAndAggregate simplify bug,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4904:27,simpl,simplify,27,https://hail.is,https://github.com/hail-is/hail/pull/4904,2,['simpl'],['simplify']
Usability,Fix deoptimization in Simplify.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5172:22,Simpl,Simplify,22,https://hail.is,https://github.com/hail-is/hail/pull/5172,1,['Simpl'],['Simplify']
Usability,Fix invalid simplification rule (can't take ArrayLen of set),MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5889:12,simpl,simplification,12,https://hail.is,https://github.com/hail-is/hail/pull/5889,2,['simpl'],['simplification']
Usability,Fix simplification for integer subtraction; Extend scope of simplifier to more numeric types.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12754:4,simpl,simplification,4,https://hail.is,https://github.com/hail-is/hail/pull/12754,2,['simpl'],"['simplification', 'simplifier']"
Usability,Fixed inlining of ArrayAgg nodes without aggs in the body. Also added; simplify rule to rewrite these nodes to just the body.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7219:71,simpl,simplify,71,https://hail.is,https://github.com/hail-is/hail/pull/7219,1,['simpl'],['simplify']
Usability,Fixed the following things:; 1. initOp was in wrong place for AggregateRows; 2. no clearing of rv aggregators between groups in AggregateRows; 3. The post-agg function wasn't being used in AggregateCols. I added more tests in Python.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3724:83,clear,clearing,83,https://hail.is,https://github.com/hail-is/hail/pull/3724,1,['clear'],['clearing']
Usability,"Fixes #12540. CHANGELOG: When using Query-on-Batch, hl.hadoop* methods now properly support creation and modification time. Creation time is supported by modern Linuxes but only through a new statx API which is not exposed by the Python standard library. There is a 0.1 version library from 2021 which exposes statx including the ""birth time"". I chose to raise an exception for now. Each cloud does support a ""modification time"" but it generally refers to changes to metadata or is just the creation time:; - https://cloud.google.com/storage/docs/json_api/v1/objects#resource (see updated); - https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html#API_GetObject_ResponseSyntax (""Last-Modified"", is always creation time); - https://docs.aws.amazon.com/AmazonS3/latest/API/API_HeadObject.html#API_HeadObject_ResponseSyntax same as above; - https://learn.microsoft.com/en-us/rest/api/storageservices/get-blob (see Last-Modified and x-ms-creation-time)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12571:858,learn,learn,858,https://hail.is,https://github.com/hail-is/hail/pull/12571,1,['learn'],['learn']
Usability,Fixes #13556. I haven't tested these changes -- would like to get initial feedback first.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13744:74,feedback,feedback,74,https://hail.is,https://github.com/hail-is/hail/pull/13744,1,['feedback'],['feedback']
Usability,"Fixes #13706. When I reworked `build.gradle` to be simpler and conform with modern gradle standards, I forgot to dump all of our dependencies into our test runtime classpath. This PR ensures that the test runtime classpath is the same as our runtime classpath in QoB and in QoS.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13740:51,simpl,simpler,51,https://hail.is,https://github.com/hail-is/hail/pull/13740,1,['simpl'],['simpler']
Usability,"Fixes #13788:; - Add `raise_unless_column_indexed` guard and apply to all column-indexed parameters in `statgen.py`.; - Rename `check_row_indexed` and `check_entry_indexed` as I'm allergic to functions called ""check"" - now it's clearer what they do.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13849:228,clear,clearer,228,https://hail.is,https://github.com/hail-is/hail/pull/13849,1,['clear'],['clearer']
Usability,"Fixes #13815. I tried to simplify the concepts here to be unified across all instance collection types. I renamed ""provisioned"" to ""live"". Schedulable means only workers that are active and from the latest instance version. I think the example figures are self explanatory. ; <img width=""1594"" alt=""Screenshot 2023-10-30 at 11 33 39 AM"" src=""https://github.com/hail-is/hail/assets/1693348/0c8f4d2e-019e-419e-86b6-12de510ac5a4"">. <img width=""1569"" alt=""Screenshot 2023-10-30 at 11 35 29 AM"" src=""https://github.com/hail-is/hail/assets/1693348/131f4978-76c4-4a6e-9e72-ecf9f99c8d5e"">",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13943:25,simpl,simplify,25,https://hail.is,https://github.com/hail-is/hail/pull/13943,1,['simpl'],['simplify']
Usability,"Fixes #13902. I'm pretty sure the kernel was randomly choosing the worker process to be killed when another process caused the kernel memory to be exhausted on OOM causing the non-responsiveness of the worker. It was strongly discourage from setting an explicit kernel memory limit on containers in the documentation. However, it might be fine to set it to the same memory limit as the other 3 memory settings from reading this [documentation](https://www.kernel.org/doc/Documentation/cgroup-v1/memory.txt) on memory settings.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13972:180,responsiv,responsiveness,180,https://hail.is,https://github.com/hail-is/hail/pull/13972,1,['responsiv'],['responsiveness']
Usability,Fixes #2159. Error message is now:; ```; FatalError: HailException: corrupt or outdated VDS: invalid metadata; Recreate VDS with current version of Hail.; Detailed exception:; No usable value for sample_schema; Did not find value which can be converted into java.lang.String. Java stack trace:; is.hail.utils.HailException: corrupt or outdated VDS: invalid metadata; Recreate VDS with current version of Hail.; Detailed exception:; No usable value for sample_schema; Did not find value which can be converted into java.lang.String; 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:6); 	at is.hail.utils.package$.fatal(package.scala:27); 	at is.hail.variant.VariantSampleMatrix$$anonfun$1.apply(VariantSampleMatrix.scala:77); 	at is.hail.variant.VariantSampleMatrix$$anonfun$1.apply(VariantSampleMatrix.scala:72); 	at is.hail.utils.richUtils.RichHadoopConfiguration$.is$hail$utils$richUtils$RichHadoopConfiguration$$using$extension(RichHadoopConfiguration.scala:226); 	at is.hail.utils.richUtils.RichHadoopConfiguration$.readFile$extension(RichHadoopConfiguration.scala:251); 	at is.hail.variant.VariantSampleMatrix$.readFileMetadata(VariantSampleMatrix.scala:72); 	at is.hail.variant.VariantSampleMatrix$.read(VariantSampleMatrix.scala:51); 	at is.hail.HailContext$$anonfun$10.apply(HailContext.scala:434); 	at is.hail.HailContext$$anonfun$10.apply(HailContext.scala:433); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.mutable.ArrayOps$ofRef.map(ArrayOps.scala:186); 	at is.hail.HailContext.readAll(HailContext.scala:433); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.N,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2173:179,usab,usable,179,https://hail.is,https://github.com/hail-is/hail/pull/2173,2,['usab'],['usable']
Usability,"Fixes #3920. I'm a bit dubious on `collectPerPartitions` because it can only be safely used if there's a `ctx.region.clear` in the right spot. This should avoid some issues that caitlin was experiencing. The root issue is that `clearingRun` clears once per item, but, after the `cmapPartitions` there is only one item per partition. That item was produced by iterating through every element (with `it.foreach`) and accumulating some state. When `it.foreach` is finished, the entire partition will be in memory. On sufficiently large datasets, YARN will kill the executors for exceeding memory limits. We previously observed these errors coming from Java, but now that the regions are in native code, there are no JVM limits, the memory usage is instead noticed by YARN at the container-level. The fix is to clear after we are finished with each row, i.e. before the lambda passed to `foreach` returns.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3921:117,clear,clear,117,https://hail.is,https://github.com/hail-is/hail/pull/3921,4,['clear'],"['clear', 'clearingRun', 'clears']"
Usability,Fixes #6888. Also simplify code to remove redundant checks.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6897:18,simpl,simplify,18,https://hail.is,https://github.com/hail-is/hail/pull/6897,1,['simpl'],['simplify']
Usability,"Fixes https://github.com/hail-is/hail/issues/14130. We pervasively assume:; 1. That our entire system is used within a single Python thread.; 2. That once an event loop is created that's the only event loop that will exist forever. Pytest (and newer version of IPython, afaict) violate this pretty liberally. ~~pytest_asyncio has [explicit instructions on how to run every test in the same event loop](https://pytest-asyncio.readthedocs.io/en/latest/how-to-guides/run_session_tests_in_same_loop.html). I've implemented those here.~~ [These instructions don't work](https://github.com/pytest-dev/pytest-asyncio/issues/744). It seems that the reliable way to ensure we're using one event loop everywhere is to use pytest-asyncio < 0.23 and to define an event_loop fixture with scope `'session'`. I also switched test_batch.py into pytest-only style. This allows me to use session-scoped fixtures so that they exist exactly once for the entire test suite execution. Also:; - `RouterAsyncFS` methods must either be a static method or an async method. We must not create an FS in a sync method. Both `parse_url` and `copy_part_size` now both do not allocate an FS.; - `httpx.py` now eagerly errors if the running event loop in `request` differs from that at allocation time. Annoying but much better error message than this nonsense about timeout context managers.; - `hail_event_loop` either gets the current thread's event loop (running or not, doesn't matter to us) or creates a fresh event loop and sets it as the current thread's event loop. The previous code didn't guarantee we'd get an event loop b/c `get_event_loop` fails if `set_event_loop` was previously called.; - `conftest.py` is inherited downward, so I lifted fixtures out of test_copy.py and friends and into a common `hailtop/conftest.py`; - I added `make -C hail pytest-inter-cloud` for testing the inter cloud directory. You still need appropriate permissions and authn.; - I removed extraneous pytest.mark.asyncio since we use auto mo",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14097:457,guid,guides,457,https://hail.is,https://github.com/hail-is/hail/pull/14097,1,['guid'],['guides']
Usability,"Flags now use the same user configuration machinery we use for Batch and QoB. I am not certain this is the right choice. Feedback very welcome. The configuration_of function lets us uniformly treat any configuration by checking, in order: explicit argument, envvar, config file, or a fallback. I added a bit of code to allow us to support the envvars which do not conform to the new envvar scheme. I also removed a few flags that are no longer used. I kind of think these flags should actually be under a new section like ""query_compiler"" or something. @tpoterba, thoughts?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12423:121,Feedback,Feedback,121,https://hail.is,https://github.com/hail-is/hail/pull/12423,1,['Feedback'],['Feedback']
Usability,"Focus on readability of the tutorial section. Removes Expressions from Tutorials (moves to How-To), simplifies Table tutorial (I don't think users need to care about Expressions at the outset, they should just know how to manipulate the major structures). cc @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6744:100,simpl,simplifies,100,https://hail.is,https://github.com/hail-is/hail/pull/6744,1,['simpl'],['simplifies']
Usability,Follow up to #13458 for making adding job groups simpler.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13467:49,simpl,simpler,49,https://hail.is,https://github.com/hail-is/hail/pull/13467,1,['simpl'],['simpler']
Usability,"For Hail Batch on Terra Azure, the production artifact is Helm chart containing the necessary kubernetes resources to run a Hail Batch deployment in a Terra k8s cluster. This deployment contains slightly modified containers of the batch front-end, batch driver and a mysql database. This chart is currently built manually using the targets in `batch/terra-chart/Makefile`. As this process is not currently automatically tested, it's very prone to bit rot. This PR is an amalgamation of fixes that I needed to make to get `main` to build in the current Terra. A non-exhaustive list of the changes are:. - After changing from gradle to mill, the some Dockerfiles and make targets needed to change to account for the new location of the JAR.; - I removed some redundancy in invocations of `docker build` by relying on the generic targets that we now have in the top level Makefile.; - Terra changed how they handle identity management for the kubernetes deployment, from `aadpodidentity` to `workloadIdentity`. This changes the chart to work with their new inputs they provide. Ultimately, terra should have a CI system that we can push charts to and receive feedback on whether it passed our test suite in their test environment.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14450:1156,feedback,feedback,1156,https://hail.is,https://github.com/hail-is/hail/pull/14450,1,['feedback'],['feedback']
Usability,"For example, documentation for `g.isHomRef` says ""true if this call is 0/0"". No mention of when it can be `false` or missing. Should clearly reflection the option vs non-option register variants in @danking new function registry code.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/829:133,clear,clearly,133,https://hail.is,https://github.com/hail-is/hail/issues/829,1,['clear'],['clearly']
Usability,For feedback - a couple of potential templates for capturing security impacts at either the issue or PR level.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14666:4,feedback,feedback,4,https://hail.is,https://github.com/hail-is/hail/pull/14666,1,['feedback'],['feedback']
Usability,"For rrm and grm, I've pushed overall rescaling to the faster block matrix side and thereby removed the action that counts the number of variants after filtering. The behavior is identical except that we no longer warn when constant variants are dropped, but I've clarified the behavior in the docs. In the unfathomable case that all variants are constant, the user will receive the error message `HailException: block matrix must have at least one row` when the BlockMatrix is being created. For rrm, I've also simplified the filtering, as well as the expression algebra for std_dev from; ```; hl.sqrt((mt.__ACsq + (n_samples - mt.__n_called) * mt.__mean_gt ** 2) / n_samples - mt.__mean_gt ** 2); ```; to; ```; hl.sqrt(mt.__ACsq - (mt.__AC ** 2) / mt.__n_called); ```; with the added benefit of combining two annotates.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3944:511,simpl,simplified,511,https://hail.is,https://github.com/hail-is/hail/pull/3944,1,['simpl'],['simplified']
Usability,"For the normal, poisson, and chi-square distributions, we have sampling (`rand_norm`), density (`dnorm`), cumulative probability (`pnorm`), and quantile (`qnorm`) functions. For beta and gamma distributions we only have the sampling functions. We should add the rest, which should be a simple matter of exposing library functions.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14247:286,simpl,simple,286,https://hail.is,https://github.com/hail-is/hail/issues/14247,1,['simpl'],['simple']
Usability,FreeVariables$$compute$1$1.apply(FreeVariables.scala:27); at is.hail.expr.ir.FreeVariables$$anonfun$is$hail$expr$ir$FreeVariables$$compute$1$1.apply(FreeVariables.scala:24); at scala.collection.Iterator$$anon$11.next(Iterator.scala:410); at scala.collection.Iterator$class.foreach(Iterator.scala:891); at scala.collection.AbstractIterator.foreach(Iterator.scala:1334); at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157); at scala.collection.AbstractIterator.foldLeft(Iterator.scala:1334); at scala.collection.TraversableOnce$class.fold(TraversableOnce.scala:212); at scala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:6923,Simpl,Simplify,6923,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,"From @armartin on a pretty simple line of code (ukbb was just loaded from bgen, tgp was just ld_pruned, but `count`ed before that, so I don't think that was the problem):. `ukbb_in_tgp = ukbb.filter_rows(hl.is_defined(tgp[ukbb.row_key, :]))`. ```; FatalError: ClassCastException: null. Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 40.0 failed 20 times, most recent failure: Lost task 0.19 in stage 40.0 (TID 2222, pca-w-8.c.daly-ibd.internal, executor 25): java.lang.ClassCastException. Driver stacktrace:; at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1517); at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1505); at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1504); at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59); at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48); at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1504); at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:814); at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:814); at scala.Option.foreach(Option.scala:257); at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:814); at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1732); at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1687); at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1676); at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48); at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:630); at org.apache.spark.SparkContext.runJob(SparkContext.scala:2029); at org.apache.spark.SparkContext.r",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3447:27,simpl,simple,27,https://hail.is,https://github.com/hail-is/hail/issues/3447,1,['simpl'],['simple']
Usability,Getting Started Guide for PyHail,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1218:16,Guid,Guide,16,https://hail.is,https://github.com/hail-is/hail/issues/1218,1,['Guid'],['Guide']
Usability,"Going off a suspicion that the JVM jit won't compile methods containing irreducible control flow, I tried to fix StreamFlatMap to be reducible. A simple benchmark based on `testES2FlatMap` showed a 2x speedup, which seems to confirm the suspicion. What caused the irreducibility was the following set of control flow paths (pretend the `Lpull` label was defined in the old version too):; * `Lpull -> LinnerPull`; * `Lpull -> LouterPull`; * `LinnerPull -> innerSource.eos -> LinnerEos -> LouterPull`; * `LouterPull -> outerSource.push -> LinnerPull`. The later two paths form a loop, and the first two make two entries into the loop - the basic irreducible control flow pattern. The fix redirects the last path to go to `Lpull` instead, which will happen to branch to `LinnerPull`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9429:146,simpl,simple,146,https://hail.is,https://github.com/hail-is/hail/pull/9429,1,['simpl'],['simple']
Usability,"Greatly simplifies the `NormalizeNames` pass to be logically independent of the binding structure. This leaves the old implementation, and asserts that they agree. Will delete the old implementation in a follow up.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14514:8,simpl,simplifies,8,https://hail.is,https://github.com/hail-is/hail/pull/14514,1,['simpl'],['simplifies']
Usability,"Had this refractory Dataproc failure, that kind-of pointed to serialization errors, but which @tpoterba clearly saw wasn't due to serialization, as a test in which the HadoopFS class was explicitly serialized and deserialized succeeded. The problem appeared to be in something affecting sparkContext's ability to broadcast, as even the standard SerializableHadoopConfiguration would appear null in map-reduce operations. I therefore created a clean-slate branch from master, and have issued this here. It passes all tests, including a local reproduction of the Dataproc test, by spinning up 1 spark master, 2 workers, and passing initializing hail with master=spark-master:7077 (thanks @cseed).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6263:104,clear,clearly,104,https://hail.is,https://github.com/hail-is/hail/pull/6263,1,['clear'],['clearly']
Usability,"Had to fix this:. ```; val base = Literal(TStruct(""1"" -> TInt32, ""2"" -> TInt32), Row(1,2)); val ir4 = InsertFields(InsertFields(base, Seq(""3"" -> I32(0), ""4"" -> I32(1)), None), Seq(""3"" -> I32(5)), None); ```. which was getting simplified to:. ```; InsertFields(base, Seq(""4"" -> I32(1), ""3"" -> I32(5), None); ```. which changes the order of the fields. Now I explicitly construct a `fieldOrder` to remedy this.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11198:226,simpl,simplified,226,https://hail.is,https://github.com/hail-is/hail/pull/11198,1,['simpl'],['simplified']
Usability,"Hand deployed (currently running). Only visible change is to router, add proxy rules from ukbb-hail.is to the ukbb-rg servers. The web site has two parts: static HTML served by nginx and a interactive, data-driven Shiny site run by R/shiny/shiny server. Servers run as stateful sets. Static HTML and ; data for Shiny were hand-populated. Currently giving them each one core. Given how much state is involved here, it's not clear how to autoscale this like we do with the other services.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6573:423,clear,clear,423,https://hail.is,https://github.com/hail-is/hail/pull/6573,1,['clear'],['clear']
Usability,"Heh. The fix is almost trivial, just gotta RTFM for http. Users will need to log out / clear cookies before this will take effect.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12379:87,clear,clear,87,https://hail.is,https://github.com/hail-is/hail/pull/12379,1,['clear'],['clear']
Usability,Help not clear for alternate allele,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/433:9,clear,clear,9,https://hail.is,https://github.com/hail-is/hail/issues/433,2,['clear'],['clear']
Usability,"Here's a prototype. Still a lot to do, but I'd appreciate initial feedback before I flesh out all of the functionality. This supports the following search types:. ```; state = running; instance = worker1; cost >= 0.005; duration > 100; ""exact_match""; partialmatch; time_started > 2023-02-28T17:46:06Z; time_ended < 2023-02-28T18:46:06Z; my_key = foo; my_key != foo; job_id > 50; job_id <= 100; instance_collection = job_private; ```. <img width=""686"" alt=""Screen Shot 2023-02-28 at 2 08 53 PM"" src=""https://user-images.githubusercontent.com/1693348/221956324-fc595606-f45b-4db3-9927-eac0590a0960.png"">; <img width=""663"" alt=""Screen Shot 2023-02-28 at 2 09 14 PM"" src=""https://user-images.githubusercontent.com/1693348/221956338-051c72bb-8e3d-4422-8733-fc3e2c70a099.png"">",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12740:66,feedback,feedback,66,https://hail.is,https://github.com/hail-is/hail/pull/12740,1,['feedback'],['feedback']
Usability,Here's what I have now. Higher-level feedback appreciated. Note there are 4 hidden methods to convert between old interface and new. `VariantDataset._to_new_variant_dataset`; `NewVariantDataset._to_old_variant_dataset`; `KeyTable._to_new_keytable`; `NewKeyTable._to_old_keytable`,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2244:37,feedback,feedback,37,https://hail.is,https://github.com/hail-is/hail/pull/2244,1,['feedback'],['feedback']
Usability,"Hi!. Trying to calculate polygenic risk score with code from the [Polygenic Score Calculation](https://hail.is/docs/0.2/guides/genetics.html#polygenic-score-calculation), getting error with stacktrace:. `2022-05-14 12:09:07 Hail: INFO: Running Hail version 0.2.94-f0b38d6c436f; 2022-05-14 12:09:08 SparkContext: WARN: Using an existing SparkContext; some configuration may not take effect.; 2022-05-14 12:09:08 root: INFO: RegionPool: initialized for thread 30: Thread-4; 2022-05-14 12:09:09 MemoryStore: INFO: Block broadcast_0 stored as values in memory (estimated size 34.3 KiB, free 434.4 MiB); 2022-05-14 12:09:09 MemoryStore: INFO: Block broadcast_0_piece0 stored as bytes in memory (estimated size 3.2 KiB, free 434.4 MiB); 2022-05-14 12:09:09 BlockManagerInfo: INFO: Added broadcast_0_piece0 in memory on 10.40.3.21:33951 (size: 3.2 KiB, free: 434.4 MiB); 2022-05-14 12:09:09 SparkContext: INFO: Created broadcast 0 from broadcast at SparkBackend.scala:311; 2022-05-14 12:09:11 root: INFO: RegionPool: FREE: 64.0K allocated (64.0K blocks / 0 chunks), regions.size = 1, 0 current java objects, thread 30: Thread-4; 2022-05-14 12:09:11 root: ERROR: HailException: Invalid locus '11:135009883' found. Position '135009883' is not within the range [1-135006516] for reference genome 'GRCh37'.; From is.hail.utils.HailException: /data/public/prs/ex_antonk.bim:1013423: Invalid locus '11:135009883' found. Position '135009883' is not within the range [1-135006516] for reference genome 'GRCh37'.; offending line: 11	.	0	135009883	CT	C; 	at is.hail.utils.ErrorHandling.fatal(ErrorHandling.scala:30); 	at is.hail.utils.ErrorHandling.fatal$(ErrorHandling.scala:28); 	at is.hail.utils.package$.fatal(package.scala:78); 	at is.hail.utils.Context.wrapException(Context.scala:21); 	at is.hail.utils.WithContext.foreach(Context.scala:51); 	at is.hail.io.plink.LoadPlink$.$anonfun$parseBim$2(LoadPlink.scala:37); 	at is.hail.io.plink.LoadPlink$.$anonfun$parseBim$2$adapted(LoadPlink.scala:36); 	at scala.colle",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/11836:120,guid,guides,120,https://hail.is,https://github.com/hail-is/hail/issues/11836,1,['guid'],['guides']
Usability,"Hi, I found hl.init(sc=sc) returns error since hail-0.2.92.; It can reproduce simply run as following.; Is it a bug ??; Or should I run other ways ?. - Environments I tested. ; Hail version : 0.2.92 or later.; Mac book air (M1) , spark local mode; Rocky Linux 8.5 , spark local mode; Rocky Linux 8.5 , spark yarn cluster mode. - how to reproduce; ```; import os; os.environ['PYSPARK_SUBMIT_ARGS'] = ' \; --jars \; /Users/username/miniforge3/envs/hail/lib/python3.9/site-packages/hail/backend/hail-all-spark.jar \; --conf spark.executor.extraClassPath=./hail-all-spark.jar \; --conf spark.kryo.registrator=is.hail.kryo.HailKryoRegistrator \; --conf spark.serializer=org.apache.spark.serializer.KryoSerializer \; pyspark-shell '. from pyspark import SparkContext; sc=SparkContext.getOrCreate(). import hail as hl; hl.init(sc=sc); ```. - Error logs ; ```; 22/05/11 14:31:21 WARN Utils: Your hostname, spacerider.local resolves to a loopback address: 127.0.0.1; using 172.20.10.4 instead (on interface en6); 22/05/11 14:31:21 WARN Utils: Set SPARK_LOCAL_IP if you need to bind to another address; WARNING: An illegal reflective access operation has occurred; WARNING: Illegal reflective access by org.apache.spark.unsafe.Platform (file:/Users/username/miniforge3/envs/hail/lib/python3.9/site-packages/pyspark/jars/spark-unsafe_2.12-3.1.2.jar) to constructor java.nio.DirectByteBuffer(long,int); WARNING: Please consider reporting this to the maintainers of org.apache.spark.unsafe.Platform; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations; WARNING: All illegal access operations will be denied in a future release; 22/05/11 14:31:21 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use set",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/11827:78,simpl,simply,78,https://hail.is,https://github.com/hail-is/hail/issues/11827,1,['simpl'],['simply']
Usability,"Hi, i've been giving hail a first go today. It looks great, thanks. I've come across a problem. The worker nodes on our cluster only have 2GB `/tmp` dir which fills up on some hail operations. Using the `-t` flag doesn't help. E.g. ```; hail --tmpdir /local read $invds splitmulti write -o $outvds; ```. Will still fill the dir `/tmp/blockmgr-<uuid>/` and crash. Is there a simple solution to this?. [hail.log.txt](https://github.com/hail-is/hail/files/511675/hail.log.txt)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/902:374,simpl,simple,374,https://hail.is,https://github.com/hail-is/hail/issues/902,1,['simpl'],['simple']
Usability,"High level take-aways:. - Hail docs now have syntax highlighting (we just needed to import pygments.css).; - Search works again.; - There are now only two root HTML templates: `site/templates/base.html` and; `web_common/web_common/templates/layout.html`. I cannot unify these further; because our services and our main websites actually differ significantly.; - The search/nav bar is now present in the HTML, no JS nonsense to; asynchronously load it into place after HTML rendering.; - Site now has a `make watch` which watches for changes and automatically; re-renders the HTML.; - Site now has a few make rules that facilitate experimenting with how the docs; are displayed within the context of the current development version of site's; CSS & HTML.; - XSLT is now only used by the C++ tests. Smaller things:. - Removed bootstrap dependencies. Did we ever actually use these?; - Removed ""clipboard.js"" dependency. Also not clear from where this came.; - Removed use of the `subtitle` tag, which isn't actually an HTML tag?. Future work:. - Simplify our CSS. It's not possible to logically reason about our CSS. And it; interacts in bad ways with the latent RTD themes. I want a unified Hail visual; theme.; - Clean up the search-related JavaScript in nav-bottom.html and; search.html. These both seem too complicated to just make search work. ---. The thrust of this PR is to restructure Hail's website and documentation to; entirely rely on Jinja2 templates. Previously, we used a mix of Jinja2, XSLT,; and in-browser JavaScript DOM manipulation to piece together a web page. Now, all of Hail's non-service website derives from; `site/templates/base.html`. It is a Jinja2 template with four blocks: title,; meta_description, head, and content. It ensures that:; - Hail's CSS is loaded,; - the Hail icon is set,; - the fonts are loaded,; - the source code highlighter is loaded (prism.js, only used outside the docs); - the nav bar is present and configured.; The nav bar is somewhat complicated. ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9597:927,clear,clear,927,https://hail.is,https://github.com/hail-is/hail/pull/9597,1,['clear'],['clear']
Usability,Hopefully the dev doc can do most of the explaining here. Not sure exactly how often we want to rotate. Putting this up here now to get feedback and will apply the key updates it to `hail-vdc` later this week after a trial on my own cluster.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11015:136,feedback,feedback,136,https://hail.is,https://github.com/hail-is/hail/pull/11015,1,['feedback'],['feedback']
Usability,"I added a `StreamLen` IR node. The justification for this were optimization issues in `Simplify` situations like. ```; case ArrayLen(ToArray(StreamMap(s, _, _))) => ArrayLen(ToArray(s)); ```. The above is not a valid optimization in all cases because if the elements of `s` are not realizable, the optimization will have created an invalid IR that will fail at emit time since elements of an array must be realizable.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8783:87,Simpl,Simplify,87,https://hail.is,https://github.com/hail-is/hail/pull/8783,1,['Simpl'],['Simplify']
Usability,"I added a test to demonstrate the problem. The `InsertFields` is overwriting the type of a field that is not part of the requested type. Previously we would just not insert anything and leave the rebuilt child alone. But when the child is a `Ref` or a `Literal` or something that doesn't actually get rebuilt differently, the old way would lead to a situation where the rebuilt IR is not a supertype of the original IR. By inserting a `SelectFields` to subset away the fields that would have been overwritten, we avoid this problem. . Happy to further elaborate if the above isn't clear.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9633:581,clear,clear,581,https://hail.is,https://github.com/hail-is/hail/pull/9633,1,['clear'],['clear']
Usability,"I added libraries to the sidebar, added a libraries page, and moved up ""cheat sheets"" and ""how to guides"" about ""Datasets"" and ""Annotation Database"". I figure documentation should be together, as opposed to split up by datasets. Looks like: ; <img width=""1579"" alt=""Screen Shot 2020-04-03 at 2 30 41 PM"" src=""https://user-images.githubusercontent.com/13773586/78395546-aa9d6f80-75bb-11ea-8235-ec18db91c541.png"">",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8452:98,guid,guides,98,https://hail.is,https://github.com/hail-is/hail/pull/8452,1,['guid'],['guides']
Usability,"I also added skipBytes for use with RowMatrix.readBlockMatrix. @cseed I still need to experiment on compression w.r.t. banded LD project, which should inform the choice of BDM BufferSpec further, but using the general infrastructure is clearly better than the one-off BDM buffers I'd written before. Is it reasonable to merge this to master (post review)?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2936:236,clear,clearly,236,https://hail.is,https://github.com/hail-is/hail/pull/2936,1,['clear'],['clearly']
Usability,"I also changed the highlight color for the GitHub icon because it was too dark to clearly see. The username and password for our Font Awesome account are in the usual place. I also had a bit too much fun using ""GIPHY CAPTURE"", Giphy's Mac video capture app to create this gif of my change:; ![highlighticon](https://user-images.githubusercontent.com/106194/112545998-4147db00-8d8f-11eb-893e-6f01ea76b79b.gif)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10228:82,clear,clearly,82,https://hail.is,https://github.com/hail-is/hail/pull/10228,1,['clear'],['clearly']
Usability,"I also harmonized the delete endpoint URLs so that `jobs`, `batch`, and `dag` all use `DELETE /{type}/{id}`. @jigold is reviewing all the infrastructural changes that prepare for this. This is relatively independent of the restructuring so I figure I can assign it to a new person. @jbloom22 if you'd rather not review `batch` things, I can roll the dice again. Otherwise, here's an opportunity to learn about how that's working.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4807:398,learn,learn,398,https://hail.is,https://github.com/hail-is/hail/pull/4807,1,['learn'],['learn']
Usability,"I am not sure what persist should mean in the service backend. For some linear; algebra work, persist appears to be used to store the results of an expensive; query. In that setting, we should clearly checkpoint the dataset. cc: @tpoterba",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11936:193,clear,clearly,193,https://hail.is,https://github.com/hail-is/hail/pull/11936,1,['clear'],['clearly']
Usability,"I am not sure why I thought my previous fix fixed anything. I was; not clearing the correct region. This fix clears the region; appropriately, i.e., clears it whenever it is finished with; a value from the producers region.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3616:71,clear,clearing,71,https://hail.is,https://github.com/hail-is/hail/pull/3616,3,['clear'],"['clearing', 'clears']"
Usability,"I am proposing a new iterator abstraction that I think should be preferred to Scala `Iterator` throughout most of the codebase, especially for iterators of region values. This is a low-level change, which could affect all code involving iterators, so I welcome feedback from everybody. The new abstractions are what I called `FlipbookIterator` and `StagingIterator` (I'm open to name suggestions). My goal was to simplify and raise the level of abstraction of most of the iterator manipulating code in the codebase—which can be subtle and bug-prone, and difficult to read—while paying as minimal as possible a performance overhead for the abstraction. This was surprisingly subtle to find the right abstractions and get their implementation right, and my hope is that all the non-obvious iterator code will now be concentrated in a small, well tested, component. `FlipbookIterator` solves the confusing behavior where `hasNext` potentially wipes out the current value. (All methods on `FlipbookIterator` and `StagingIterator` should obey the rule that methods defined without trailing `()` do not change the state of the iterator in any way detectable through the API.) The core interface of `FlipbookIterator[A]` consists of the methods. * `isValid: Boolean`; * `value: A`; * `advance(): Unit`. The metaphor is a flipbook, where when you turn the page, you no longer have access to the previous page; where you can read the current page as many times as you want (no need to copy it); and where you only know you've reached the end of the flipbook when you turn the page and find that the next page is empty. In `FlipbookIterator`, `advance()` turns the page, `isValid` asks if the page you are on is non-empty, and `value` gives you the value on the current page (which is an error if the page is empty). `StagingIterator` is a subtype of `FlipbookIterator` which adds a bit of state to each page, together with the methods `consume()` and `stage()`. The bit of state on each page tracks whether the",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3016:261,feedback,feedback,261,https://hail.is,https://github.com/hail-is/hail/pull/3016,2,"['feedback', 'simpl']","['feedback', 'simplify']"
Usability,"I believe #14547 introduced a bug that broke IR function deserialization in QoB by changing `value_parameter_names` from `Array[String]` to `Array[Name]`. This fixes the issue by pushing the introduction of the `Name` wrapper object to after deserialization. Another option is to incorporate the `{ str: String }` structure of `Name` into the python -> scala payload, but I'm not sure I see a use case for that and we can always do that later (there is no issue of backwards compatibility with this communication between python and scala). My main concern here is that clearly this isn't tested. I'd appreciate guidance on the current advised practice for testing this behavior.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14579:569,clear,clearly,569,https://hail.is,https://github.com/hail-is/hail/pull/14579,2,"['clear', 'guid']","['clearly', 'guidance']"
Usability,"I broke up #9450. This PR moves just `NDArrayMatMul` to `emitI`, and does so by introducing a new, simpler `NDArrayEmitter` called `NDArrayEmitter2`. In a subsequent PR, I'll delete the old `NDArrayEmitter` entirely and move everything over to new version.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9480:99,simpl,simpler,99,https://hail.is,https://github.com/hail-is/hail/pull/9480,1,['simpl'],['simpler']
Usability,"I can try and be clever with how to test this by hand by not writing the spec to cloud storage, but before I do that, I'd like feedback first.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11391:127,feedback,feedback,127,https://hail.is,https://github.com/hail-is/hail/pull/11391,1,['feedback'],['feedback']
Usability,"I changed the `deploy` step to now take the built docs and publish them to a folder in hail-common. In the future, `make_pip_versioned_docs` will be deleted, so that we stop rebuilding an old version of the docs on every commit. We will simply serve the most recent version of the docs from here.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11294:237,simpl,simply,237,https://hail.is,https://github.com/hail-is/hail/pull/11294,1,['simpl'],['simply']
Usability,"I could not re-open [the old PR](https://github.com/hail-is/hail/pull/3392) because I force-pushed after a rebase. ---. We want all allocations of `Region` to be controlled with a `using` or within a `RVDContext` (which will be appropriately closed). When we have achieved this, we can move the `Region` off-heap which provides a number of benefits including the use of raw-pointers in our Hail Object Representation as well as allocation free communication with other languages. This PR makes `LoadVCF` and `HailContext.readRows` use the regions in the `RVDContext`. Note that the _consumer_ is responsible for clearing the region when they're done with the current values. This is why `writePartitions` now includes `ctx.clear()`. Moreover, _producers_ must _not_ clear the region. These changes are tested by our whole infrastructure, but in particular, `is.hail.annotations.AnnotationsSuite.testReadWrite` exercises a lot of this. NB: We no longer clear the region between each read of a row. This means we could blow memory if we don't clear in the consumer. The other consumers are: aggregations, collects, shuffles, and joins. The tests pass though, so I guess I'm not too concerned for now. Once this is merged, I'll follow swiftly with uses of the RVDContext's region else where in our infrastructure. cc: @cseed . ---. I also included a couple miscellaneous clean ups like unifying `OrderedRVD.rdd` and `UnpartitionedRVD.rdd` as well as adding a use of `Region.scoped` in `HailContext`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3394:612,clear,clearing,612,https://hail.is,https://github.com/hail-is/hail/pull/3394,5,['clear'],"['clear', 'clearing']"
Usability,"I do not know why but /etc triggers errors about:; ```; archive/tar: write too long; ```; Even though /etc is not very large (1.4MB). I suspect there is some symlink; or other nonsense which is breaking Kaniko. The solution, after much trial and error, was simple: copy over directories that do not; cause issues and copy only the necessary files out of etc. A mix of speculation and; binary search lead me to the conclusion that /etc/ld.so.* are the only files necessary; from /etc for python to run correctly. These files tell the kernel how to link python3.7; to the various libraries on which it depends (which live in lib and lib64). Anyway, I've tested that this image can build itself, so it should be good enough for; our purposes.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10399:257,simpl,simple,257,https://hail.is,https://github.com/hail-is/hail/pull/10399,1,['simpl'],['simple']
Usability,"I find the current installation docs totally overwhelming. If you are using Hail; on a Mac you should not see any unnecessary crap about Linux, clusters, and; BLAS. This change introduces four flows: mac, linux, dataproc, cluster. Each page's; complexity matches the true complexity of installing Hail on that platform. In; particular, note how simple the Linux and Mac OS X pages are. It also clears up the ""other cluster"" case. Our current docs are too complex and; don't push people towards simple solutions.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9017:345,simpl,simple,345,https://hail.is,https://github.com/hail-is/hail/pull/9017,3,"['clear', 'simpl']","['clears', 'simple']"
Usability,"I had a choice on how to implement this and I decided to add a JobTask class that takes care of a single pod and the Job changes to just be a manager of the pods. However, I could have done it all within the Job if you think that is clearer. Happy to refactor if needed. Please look and see if I have enough tests. The tests are passing, but I'm getting this error message. Is this expected or a bug in my code? . ```; INFO	| 2019-02-22 11:48:48,126 	| _internal.py 	| _log:87 | 127.0.0.1 - - [22/Feb/2019 11:48:48] ""POST /pod_changed HTTP/1.1"" 204 -; INFO	| 2019-02-22 11:48:48,210 	| _internal.py 	| _log:87 | 127.0.0.1 - - [22/Feb/2019 11:48:48] ""POST /pod_changed HTTP/1.1"" 204 -; INFO	| 2019-02-22 11:48:48,833 	| server.py 	| mark_complete:190 | wrote log for job 61, main task to logs/job-61-main.log; INFO	| 2019-02-22 11:48:48,845 	| server.py 	| set_state:272 | job 61 changed state: Created -> Complete; INFO	| 2019-02-22 11:48:48,851 	| server.py 	| parent_new_state:287 | parent 61 successfully complete for 63; INFO	| 2019-02-22 11:48:48,857 	| server.py 	| parent_new_state:292 | all parents successfully complete for 63, creating pod; INFO	| 2019-02-22 11:48:48,918 	| server.py 	| create_pod:135 | created pod name: job-63-main-qqwb2 for job 63, main task; INFO	| 2019-02-22 11:48:48,929 	| server.py 	| mark_complete:330 | job 61 complete, exit_code 0; INFO	| 2019-02-22 11:48:48,995 	| _internal.py 	| _log:87 | 127.0.0.1 - - [22/Feb/2019 11:48:48] ""POST /pod_changed HTTP/1.1"" 204 -; [2019-02-22 11:48:49,043] ERROR in app: Exception on /test [POST]; Traceback (most recent call last):; File ""//anaconda/envs/hail-batch/lib/python3.6/site-packages/flask/app.py"", line 1982, in wsgi_app; response = self.full_dispatch_request(); File ""//anaconda/envs/hail-batch/lib/python3.6/site-packages/flask/app.py"", line 1615, in full_dispatch_request; return self.finalize_request(rv); File ""//anaconda/envs/hail-batch/lib/python3.6/site-packages/flask/app.py"", line 1630, in finalize_request",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5418:233,clear,clearer,233,https://hail.is,https://github.com/hail-is/hail/pull/5418,1,['clear'],['clearer']
Usability,"I had to modify the way stream lengths are tracked in the emitter to be able to handle StreamTake. The new way is also simpler, and moves in the direction of the new CodeBuilder style. Now `SizedStream` is ; ```; case class SizedStream(setup: Code[Unit], stream: Stream[EmitCode], length: Option[Code[Int]]); ```; The `setup` must be emitted before either the `stream` or the `length` are used. This allows the length and stream to share setup code.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8519:119,simpl,simpler,119,https://hail.is,https://github.com/hail-is/hail/pull/8519,1,['simpl'],['simpler']
Usability,"I hardcoded us-central1, which is the only thing we're using right now. Otherwise, we'd have to change CI before deploy. Also, clearly a fixed global zone is naive, so I think we have to reconsider the GCP configuration going forward. FYI @danking",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8016:127,clear,clearly,127,https://hail.is,https://github.com/hail-is/hail/pull/8016,1,['clear'],['clearly']
Usability,"I have core tests in place and would appreciate feedback on more exotic tests to add. There are similarities between `buildSampleAggregations` and `makeSampleFunctions` in Aggregators but differences throughout as well, so I'm not sure how hard to push on pulling out elements.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1708:48,feedback,feedback,48,https://hail.is,https://github.com/hail-is/hail/pull/1708,1,['feedback'],['feedback']
Usability,"I have not tested this, though I faithfully copied the commands from existing; deploy scripts (except for creating a github release). A change that I think is valuable regardless of automation is the conversion of; deploy from a series of Makefile targets to a bash script. I also add a deploy build.yaml step which simply calls the deploy script,; setting up appropriate credentials. I only had to add one set of credentials: the PyPI credentials. I've already; created that secret in the cluster. Hand deploys are still very easy. You need curl >=7.55.0 (that version; implemented reading headers from a file). You need to set up two things:; 1. create $HOME/.pypirc and put this there:; ```; [pypi]; username: hailteam; password: GET_THIS_FROM_THE_USUAL_PLACE; ```; 2. get a github access token with repo; privileges (https://github.com/settings/tokens), create; $HOME/.github-oauth-header, and put this there:; ```; Authorization: token YOUR_ACCESS_TOKEN_HERE; ```; Now, to do a hand deploy run:; ```; make deploy GITHUB_OAUTH_HEADER_FILE=$HOME/.github-oauth-header DEPLOY_REMOTE=THE_REMOTE_FOR_hail-is/hail; ```. The github credentials are used to create a GitHub release.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8533:316,simpl,simply,316,https://hail.is,https://github.com/hail-is/hail/pull/8533,1,['simpl'],['simply']
Usability,I have seen a number of folks try and do matrix table like things on tables. Latest example: https://hail.zulipchat.com/#narrow/stream/123010-Hail-0.2E2.20support/topic/Sum.20rows.20in.20hail.20table . Let's make unlocalize_entries more natural and usable for everyone and encourage it!,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5405:249,usab,usable,249,https://hail.is,https://github.com/hail-is/hail/issues/5405,1,['usab'],['usable']
Usability,"I hope this makes file localization and the Batch setup clearer. I didn't know how to do this better in words. <img width=""728"" alt=""Screen Shot 2020-05-13 at 11 03 16 AM"" src=""https://user-images.githubusercontent.com/1693348/81830010-8792a380-9509-11ea-9f74-9068bd9872fd.png"">",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8781:56,clear,clearer,56,https://hail.is,https://github.com/hail-is/hail/pull/8781,1,['clear'],['clearer']
Usability,I kept things simple. Next round we should add a richer example. Note we'll update 1.5.2 to 1.6.2 once fix is in.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/690:14,simpl,simple,14,https://hail.is,https://github.com/hail-is/hail/pull/690,1,['simpl'],['simple']
Usability,"I love simpler solutions that leverage mutation, but in this case, `ggplot.py` and `geom.py` are circularly dependent if we want to use `GGPlot` in `geom.py`. I return a Boolean indicating if this geom makes the plot static. I do not love it because there is little indication of what that return value means, but I do not see another simple solution.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12336:7,simpl,simpler,7,https://hail.is,https://github.com/hail-is/hail/pull/12336,2,['simpl'],"['simple', 'simpler']"
Usability,I need this for upcoming improvements to SplitMethod. Summary:; - add Block.replace; - have Block track uses; - makes SimplifyControl simpler; - Method.findBlocks prunes dead uses,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9000:118,Simpl,SimplifyControl,118,https://hail.is,https://github.com/hail-is/hail/pull/9000,2,"['Simpl', 'simpl']","['SimplifyControl', 'simpler']"
Usability,I need to test this with dev deploy and make sure it actually works. But would appreciate feedback on the design before I start doing that.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8445:90,feedback,feedback,90,https://hail.is,https://github.com/hail-is/hail/pull/8445,1,['feedback'],['feedback']
Usability,"I need to write another scala test, but it's working as expected in; large test cases in benchmarks. ```; Name Ratio Time 1 Time 2; ---- ----- ------ ------; table_aggregate_downsample_worst_case 57.8% 57.617 33.278; table_aggregate_downsample_dense 30.0% 127.079 38.119; ----------------------; Geometric mean: 41.6%; Simple mean: 43.9%; Median: 43.9%; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7197:319,Simpl,Simple,319,https://hail.is,https://github.com/hail-is/hail/pull/7197,1,['Simpl'],['Simple']
Usability,"I picked the name since Cronus is the father of Zeus. Perhaps Saturn is more appropriate. Open to suggestions here. The UX flow:. 1. User loads up `https://hail.is/cronus` and sees a form with a button.; 2. Pressing the button starts a pod running Jupyter for the user that no one else has access to; 3. refreshing the page or going to `https://hail.is/cronus` again redirects to the Jupiter instance; 4. to get a fresh Jupyter instance, the user can clear their cookies. The components:. - a flask app (`cronus/cronus.py`) which launches pods and handles authentication (via cookies); - an nginx reverse proxy which uses `auth_request` to check the permissions with the flask app; - a pod running `Jupyter notebook` with hail `pip` installed. TODO:. - [x] add make targets to generate the `cronus-job` image (the jupyter notebook image); - [ ] maybe simplify the directives used in nginx? I kept throwing shit at it until it worked; - [ ] figure out how to teach flask url_for to use a root other than `/`. I don't know what HTTP proxy headers to set to inform it that it lives at a subdirectory of `hail.is`; - [ ] get rid of the button? creating a new pod needs to be a `POST` so that the web browser doesn't access twice or eagerly access it, etc. maybe I can use javascript on the root page to make the post request and redirect the page.; - [ ] testing? I could add some basic things, but the most time consuming and annoying thing was getting the reverse proxy settings right and testing that requires an nginx instance. @cseed I randomly assigned, should I be picking from you and Tim? What's the plan for review on these new things?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4576:120,UX,UX,120,https://hail.is,https://github.com/hail-is/hail/pull/4576,3,"['UX', 'clear', 'simpl']","['UX', 'clear', 'simplify']"
Usability,"I rage programmed here a bit. I was pretty frustrated with this class when; trying to debug some other issues in the Shuffler IR. I have two aims with this; PR:; 1. Use a clear, consistent naming scheme throughout the file; 2. Use concise definitions. In particular, I unified the terminology to use these words:; - name: the function's name; - valueParameterTypes: the type of each value-level parameter; - typeParameters: the type-level parameters, these are always type variables, I; considered calling them typeVariables, but I like the symmetry with valueParameters; - returnType and returnPType; - typeArguments and valueArguments: these refer to the concrete values to which the parameters are bound. I also simplified some anonymous class definitions by providing constructor arguments; instead of methods that are always overridden by `val`s.; Oh, and I changed `IRFunction` to `JVMFunction` because there are already ""IR"" functions; and an ""irRegistry"" and it was super confusing to not have the IRFunctions inside the; ""irRegistry"". I did not use `CodeFunction` because these are actually implemented by; a number of different JVM Bytecode building tools: `Code`, `PCode`, `EmitCode`, and; `IEmitCode`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8718:171,clear,clear,171,https://hail.is,https://github.com/hail-is/hail/pull/8718,2,"['clear', 'simpl']","['clear', 'simplified']"
Usability,I realized I was missing some region clears from aggregate methods on ContextRDD.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3514:37,clear,clears,37,https://hail.is,https://github.com/hail-is/hail/pull/3514,1,['clear'],['clears']
Usability,"I renamed RichProgressBar and SimpleRichProgressBar to ...CopyToolProgressBar because that is more accurate. I enhanced both to now include a count and a rate with the right units based on the description. It is a bit flaky because I need the descriptions to be exactly ""files"" or exactly ""bytes"" to pick the right units, but this seems fine for the specific case of th CopyToolProgressBar. There is probably a better way to build these UIs. I am sure we will start to figure that out as we use rich more. Before:; <img width=""830"" alt=""Screenshot 2023-10-16 at 18 28 14"" src=""https://github.com/hail-is/hail/assets/106194/95f8828e-beb3-46d2-9403-18ff7aa60256"">. After:; <img width=""830"" alt=""Screenshot 2023-10-16 at 18 27 53"" src=""https://github.com/hail-is/hail/assets/106194/01186b7c-d59f-4a0e-a1f6-9279fb50ae7e"">",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13832:30,Simpl,SimpleRichProgressBar,30,https://hail.is,https://github.com/hail-is/hail/pull/13832,1,['Simpl'],['SimpleRichProgressBar']
Usability,"I saw an error in a CI job that was copying in some files. To be clear,; this change would not restart a copy of the entire directory. It just; retries the directory listing. We currently use O(N_FILES) memory to; store the list of files in a directory *before* we start copying. ```; Traceback (most recent call last):; File ""/usr/lib/python3.7/runpy.py"", line 193, in _run_module_as_main; ""__main__"", mod_spec); File ""/usr/lib/python3.7/runpy.py"", line 85, in _run_code; exec(code, run_globals); File ""/usr/local/lib/python3.7/dist-packages/hailtop/aiotools/copy.py"", line 110, in <module>; asyncio.run(main()); File ""/usr/lib/python3.7/asyncio/runners.py"", line 43, in run; return loop.run_until_complete(main); File ""uvloop/loop.pyx"", line 1501, in uvloop.loop.Loop.run_until_complete; File ""/usr/local/lib/python3.7/dist-packages/hailtop/aiotools/copy.py"", line 104, in main; files=files; File ""/usr/local/lib/python3.7/dist-packages/hailtop/aiotools/copy.py"", line 76, in copy_from_dict; transfers=transfers; File ""/usr/local/lib/python3.7/dist-packages/hailtop/aiotools/copy.py"", line 50, in copy; bytes_listener=make_tqdm_listener(byte_pbar)); File ""/usr/local/lib/python3.7/dist-packages/hailtop/aiotools/fs/copier.py"", line 439, in copy; await copier._copy(sema, copy_report, transfer, return_exceptions); File ""/usr/local/lib/python3.7/dist-packages/hailtop/aiotools/fs/copier.py"", line 532, in _copy; raise e; File ""/usr/local/lib/python3.7/dist-packages/hailtop/aiotools/fs/copier.py"", line 527, in _copy; ], return_exceptions=return_exceptions, cancel_on_error=True); File ""/usr/local/lib/python3.7/dist-packages/hailtop/utils/utils.py"", line 519, in bounded_gather2; return await bounded_gather2_raise_exceptions(sema, *pfs, cancel_on_error=cancel_on_error); File ""/usr/local/lib/python3.7/dist-packages/hailtop/utils/utils.py"", line 504, in bounded_gather2_raise_exceptions; return await asyncio.gather(*tasks); File ""/usr/local/lib/python3.7/dist-packages/hailtop/utils/utils.py"", lin",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11511:65,clear,clear,65,https://hail.is,https://github.com/hail-is/hail/pull/11511,1,['clear'],['clear']
Usability,I see the docs for the PyHail API but is there a getting started guide available yet? Also are there any plans to make a PyHail package available for installation through PyPI?,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1218:65,guid,guide,65,https://hail.is,https://github.com/hail-is/hail/issues/1218,1,['guid'],['guide']
Usability,"I simplified the TLS context methods into three cases: internal server, external; client session, internal client. I added a blocking shim around aiohttp so that all our HTTP goes through; aiohttp. I added automatic retrying directly into the httpx library.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9743:2,simpl,simplified,2,https://hail.is,https://github.com/hail-is/hail/pull/9743,1,['simpl'],['simplified']
Usability,"I staged `import_matrix_table` and achieved substantial performance improvements. A few changes were necessary:; - `FunctionBuilder` now accepts `Code[Unit]` to be added to the `init` method of the function object; - SRVB now has an `init` method that should be called in the `init` method of a function object if many methods will share the SRVB; - `CodeChar` now exists. The main change is in `ImportMatrix.scala` which is both staged and based on scanning the string rather than using `String.split`. The approach is essentially a simplified, staged version of `import_vcf`. I benchmarked the change with:; ```; In [2]: %%time ; ...: import hail as hl ; ...: m = hl.import_matrix_table('/tmp/foo.tsv.gz', ; ...: row_fields={'f0': hl.tstr}, ; ...: no_header=True, ; ...: sep=' ', ; ...: min_partitions=16) ; ...: m = m.key_rows_by(locus=hl.parse_locus(m.f0)) ; ...: m._force_count_rows() ; ```. `/tmp/foo.tsv.gz` is a gzipped (not blocked) 1GB of 1000 rows each containing one row column and 500k sample columns. The entries are the integers from 0 to 499,999. The first column is the first run (when the JIT is warmed) and the second column is the mean of two subsequent runs. All times in seconds. Everything is necessarily executed on one core. | version | cold | warm |; | --- | --- | --- |; | this PR | 48 | 39.35 |; | this PR with one monolithic method | 235 | 73 |; | master (5fe6737263b4) | 91s | 83.5 |. I was disappointed with the performance of the monolithic method, so I dug in with `-XX:+PrintCompilation` and found that the JIT was having trouble doing on-stack replacement of the entry parsing loop. There was a cryptic message about the stack not being empty during an OSR compilation. I take this result as evidence that, in the JVM, small, fine-grained methods are critical for reliable performance. The new code, after JIT warming, is reading at 250 MB/s (1GB / 40 seconds) which is a half to a third of the performance of `cat`. It's more than twice as fast as the old code. Asi",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6987:534,simpl,simplified,534,https://hail.is,https://github.com/hail-is/hail/pull/6987,1,['simpl'],['simplified']
Usability,I suspect we can eliminate any unnecessary overhead by staging this. I figured I should get feedback on it first before I expend the energy on that. I also include `VariantView` and `AltAlleleView` as examples of using `StructView` to create succinct views.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2418:92,feedback,feedback,92,https://hail.is,https://github.com/hail-is/hail/pull/2418,1,['feedback'],['feedback']
Usability,"I think functionality wise this is all ready to go. Added to the docs as well, though those probably need another iteration. Either way, it's safe to start looking this over and give some feedback.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1929:188,feedback,feedback,188,https://hail.is,https://github.com/hail-is/hail/pull/1929,1,['feedback'],['feedback']
Usability,I think this interface is clearer and it will be a necessary change when atomic batch creation causes the batch_id to be None until the entire batch is submitted.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6241:26,clear,clearer,26,https://hail.is,https://github.com/hail-is/hail/pull/6241,1,['clear'],['clearer']
Usability,I think this is a bit more clear about Hail JARs and gives a working snippet of code (for version 1.6.2).,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1080:27,clear,clear,27,https://hail.is,https://github.com/hail-is/hail/pull/1080,1,['clear'],['clear']
Usability,"I think this is the intended behavior (at the very least a warning), but at the moment it simply silently does nothing.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3756:90,simpl,simply,90,https://hail.is,https://github.com/hail-is/hail/issues/3756,1,['simpl'],['simply']
Usability,I think this little change adds a lot of usability to the method. You do not need to know how the names of the tables are constructed in the function.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11077:41,usab,usability,41,https://hail.is,https://github.com/hail-is/hail/pull/11077,1,['usab'],['usability']
Usability,"I think this should resolve the issues we were seeing with OnlineBoundedGather2. Changes:; - cancelled tasks (those that raise CancelledError) are ignored (we don't propagate cancelled out of background tasks); - Make sure all exceptions are either reraised or logged; - The first exception is raised out of exit, not call; - call raises PoolShutdownError if the pool is shutdown; - _shutdown doesn't signal _done_event until all cancelled tasks are complete; - call clears _done_event (not strictly necessary because exit checks pending, but seems safer); - added copious docstrings",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10342:467,clear,clears,467,https://hail.is,https://github.com/hail-is/hail/pull/10342,1,['clear'],['clears']
Usability,"I think this was inadvertantly broken. The `Progress.disable` property needs to be set *before* you start the progress bar, otherwise it has no effect. Clients of all these progress bars should not touch their `Progress` instance, that is an implementation detail. I have changed rich_progress_bar.py to use `_progress` to clearly communicate this.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13668:110,progress bar,progress bar,110,https://hail.is,https://github.com/hail-is/hail/pull/13668,3,"['clear', 'progress bar']","['clearly', 'progress bar', 'progress bars']"
Usability,"I think this was inadvertantly broken. The `Progress.disable` property needs to be set *before* you start the progress bar, otherwise it has no effect. Clients of all these progress bars should not touch their `Progress` instance, that is an implementation detail. I have changed rich_progress_bar.py to use `_progress` to clearly communicate this. Unrelatedly, it seems that `add_task` accepts varargs which become arbitrary additional metadata for the task. There is no `disable` keyword, that is just added as additional metadata. Instead, we must use the `visible` keyword to enable/disable the task. I verified this looks right now:. ```python3; In [1]: import hailtop.batch_client.aioclient as ac; ...: try:; ...: client = await ac.BatchClient.create('hail'); ...: b = client.create_batch(); ...: resources = {'machine_type': ""g2-standard-4"", 'storage': '100Gi'}; ...: j = b.create_job(; ...: '2.0.1-debian-11-r122',; ...: ['python', '-c', 'import torch; assert torch.cuda.is_available()'],; ...: resources=resources,; ...: ); ...: await b.submit(); ...: await b.wait(); ...: finally:; ...: await client.close(); https://batch.hail.is/batches/8038881 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 1/1 0:00:00 0:01:53; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13669:110,progress bar,progress bar,110,https://hail.is,https://github.com/hail-is/hail/pull/13669,3,"['clear', 'progress bar']","['clearly', 'progress bar', 'progress bars']"
Usability,"I thought about porting some of the typechecker stuff from hail, but they don't serve quite the same purpose, and the functions themselves are pretty simple. This does move the schema definitions to the bottom of the file rather than at the top, but this way we have a schema description that includes requiredness and is guaranteed to be the thing we're actually validating on.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9861:150,simpl,simple,150,https://hail.is,https://github.com/hail-is/hail/pull/9861,1,['simpl'],['simple']
Usability,I thought this was the simplest way of solving this. I could also have checked the container name in Container.run and selected the right semaphore there.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7649:23,simpl,simplest,23,https://hail.is,https://github.com/hail-is/hail/pull/7649,1,['simpl'],['simplest']
Usability,"I use codec.py extensively for debugging the shuffler. Recently the Scala-side support for codec.py was deleted. This PR restores support and adds some simple tests. I need to thread the physical type back to the caller of compile, thus all the changes in CompileAndEvaluate and Backend. They should look better with whitespace changes hidden.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8197:152,simpl,simple,152,https://hail.is,https://github.com/hail-is/hail/pull/8197,1,['simpl'],['simple']
Usability,"I want this for interface purposes, but it's really not usable due to performance. It takes 2 minutes to collect sample.vcf. I think that py4j is the main culprit, but the history stuff also slows it down a ton.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2209:56,usab,usable,56,https://hail.is,https://github.com/hail-is/hail/pull/2209,1,['usab'],['usable']
Usability,I want to do testing with dev deploy. Putting this up so I can get feedback.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7910:67,feedback,feedback,67,https://hail.is,https://github.com/hail-is/hail/pull/7910,1,['feedback'],['feedback']
Usability,"I want to have a functionality when import VCF, disable the filter based on `sum(AD) != DP`. Although this is a good sanity check, but since we are not clear if this error will lead to inaccurate genotype calls, there will be an option for analyst to keep those calls.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/427:152,clear,clear,152,https://hail.is,https://github.com/hail-is/hail/issues/427,1,['clear'],['clear']
Usability,I wanted to get feedback on the code I've written thus far before I start testing everything. I'm worried it might be too complicated / brittle to maintain. I also chose to blow away the entire existing environment rather than resetting the variables with new values. Not sure if that's what we want.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13279:16,feedback,feedback,16,https://hail.is,https://github.com/hail-is/hail/pull/13279,1,['feedback'],['feedback']
Usability,"I was able to install hail on my Macbook using a virtenv for python 2.7 and was able to import hail. . However, when I want to create a hail context as outlined in the installation guide, I get the following message: ; ``; Python 2.7.13 (default, Jul 18 2017, 09:16:53) ; [GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from hail import *; >>> hc = HailContext(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""<decorator-gen-422>"", line 2, in __init__; File ""/Users/ih/languages/hail.is/hail/python/hail/typecheck/check.py"", line 226, in _typecheck; return f(*args, **kwargs); File ""/Users/ih/languages/hail.is/hail/python/hail/context.py"", line 68, in __init__; SparkContext._ensure_initialized(); File ""/Users/ih/hailenv/lib/python2.7/site-packages/pyspark/context.py"", line 283, in _ensure_initialized; SparkContext._gateway = gateway or launch_gateway(conf); File ""/Users/ih/hailenv/lib/python2.7/site-packages/pyspark/java_gateway.py"", line 77, in launch_gateway; proc = Popen(command, stdin=PIPE, preexec_fn=preexec_func, env=env); File ""/usr/local/Cellar/python/2.7.13_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/subprocess.py"", line 390, in __init__; errread, errwrite); File ""/usr/local/Cellar/python/2.7.13_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/subprocess.py"", line 1024, in _execute_child; raise child_exception; OSError: [Errno 2] No such file or directory; ``; Any idea what is going on with my installation, did somebody encounter this before already?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2062:181,guid,guide,181,https://hail.is,https://github.com/hail-is/hail/issues/2062,1,['guid'],['guide']
Usability,I was asked to agree to some license after clearing my gradle cache. I do not think anyone needs this.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10099:43,clear,clearing,43,https://hail.is,https://github.com/hail-is/hail/pull/10099,1,['clear'],['clearing']
Usability,"I was hoping that a greater restructure would lead to a more elegant solution, but after so many footguns it just felt worth making this change. The main point is shelling out in the Makefiles to ask Kubernetes directly for what the global config values are instead of hard-coding them. Specifically, the changes are:. - `KUBERNETES_SERVER_URL` was simply not used anymore in the Makefiles so I deleted it.; - `DOCKER_ROOT_IMAGE`, `INTERNAL_IP`, `IP` and `CLOUD` were only used in a couple Makefiles so I moved the `kubectl` invocation into where they're used so that Makefiles that don't depend on those variables won't incur the cost of querying them; - `DOCKER_PREFIX` and `DOMAIN` were used pretty widely, so I kept them in config.mk because most Makefiles will need to query those values anyway. The added startup time for `make deploy` feels pretty insignificant.; - With this change in place, there's no need to render config.mk anymore so I deleted the shell function for doing so",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11414:349,simpl,simply,349,https://hail.is,https://github.com/hail-is/hail/pull/11414,1,['simpl'],['simply']
Usability,"I was trying to filtervariants with an interval_list, and I wrote:. filtervariants list --keep -i /user/satterst/exome_evaluation_regions.v1.interval_list count; (when clearly I should have done filtervariants intervals... instead of filtervariants list...). and it kept getting most of the way done and then failing, with the error message:; hail: count: fatal: invalid variant. Invalid variant? I double-checked that my dataset was OK by running count on the whole thing, telling me that the filtering was the problem, so I created different versions of the interval_list file, trying to figure out if something was specified incorrectly in the file... I was literally troubleshooting the interval_list file for over half an hour before I realized what the problem was. And it's not the first time I've made this mistake. . I humbly submit that a better error message here would be helpful, something like:; filtervariants: fatal: list expected but intervals encountered",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/383:168,clear,clearly,168,https://hail.is,https://github.com/hail-is/hail/issues/383,1,['clear'],['clearly']
Usability,"I wasn't sure what to do for the SparkAnnImpExport. I also don't love how tuples are represented as rows in AnnotationImpExport (and `Table.show()`). I'd prefer parentheses instead of brackets, but I decided to keep it as is for now. Otherwise, I think I'll have to write a tuple parser. It also wasn't clear to me what the best way is to incorporate TTuple into the Type `gen`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2922:303,clear,clear,303,https://hail.is,https://github.com/hail-is/hail/pull/2922,1,['clear'],['clear']
Usability,"I will submit a larger batch PR soon, not sure this is worth addressing until then, because this PR addresses questions of state and will take care of this. ```python; self.exit_code = pod.status.container_statuses[0].state.terminated.exit_code; ```. We should probably do something like . ```python; self.exit_code = max(status.state.terminated.exit_code for status in pod.status.container_statuses); ```; although I also see that in update_job_with_pod we effectively restrict to a single container. I'm not sure why this limit exists, but if needed, should probably occur during creation. In the upcoming PR, which moves state to MySQL 5.7+, and a different server model (async), I think it would be neat to represent meta-state (across all containers, and potentially the job subgraph whose first node is the inspected job) as:. ```go; const (; 	Cancelled = -3; 	Initialized = -2; 	Created = -1; ); ```. with values >=0 being the maximum of the linux error codes, 0-255, of the subgraph. Simple queries. Alternative is to use NULL when not completed, but when used in a client would require a null check, or potentially have surprising side effects (i.e where the default value is 0). We could also use a separate, text-based status field, but I will store a queryable JSON field containing the full status as well. In a similar vein, we have some state race conditions. For instance:. ```python; self.pod_template = kube.client.V1Pod(; metadata=kube.client.V1ObjectMeta(generate_name='job-{}-'.format(self.id),; labels={; 'app': 'batch-job',; 'hail.is/batch-instance': instance_id,; 'uuid': uuid.uuid4().hex; }),; spec=pod_spec). self._pod_name = None; self.exit_code = None. self._state = 'Created'; log.info('created job {}'.format(self.id)). self._create_pod(); ```. Here, every time pod creation fails, _state will be misaligned, and will have potential side effects (say in get_log). One solution could be to validate and rewind state in _create_pod. In any case, I will do my best to addres",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5118:992,Simpl,Simple,992,https://hail.is,https://github.com/hail-is/hail/issues/5118,1,['Simpl'],['Simple']
Usability,I would appreciate a review from anyone who has time. First of two (probably) for fast VCF parser. Main functionality still goes through HTSJDK. Next one will handle the genotypes. Signature for parseLines is a bit nuts but it definitely reduces the code size. @danking calling `hasNext` on my iterator invalidates it. I think this is inevitable and we should embrace it. Seems to work fine. Warn when filtering alleles due to invalid REF or symbolic alts. Much better than dropping data silently. Added `clear` to `ArrayStack` and `RegionValueBuilder`.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2419:505,clear,clear,505,https://hail.is,https://github.com/hail-is/hail/pull/2419,1,['clear'],['clear']
Usability,"I'd like your initial feedback before I start testing this on Azure. A substantially earlier version seemed to work fine on GCP with dev deploy. The major conceptual change I made is a `resource` now contains a `prefix` and a `version`. The `resource_name` is just `{prefix}/{version}`. The prefixes for GCP are the same as they were before and don't vary by region. However, the new prefixes for Azure are region specific. The version is `1` for all current resources. . I added a `latest_resource_versions` table that has the prefix mapped to the latest version. This is used to generate the current resource names. There is a new CloudResourceManager that is in charge of managing the spot billing pricing cache and updating the prices in the cache and the database from the cloud provider's API. Since I couldn't easily rename resources to products everywhere in the database due to anonymous foreign key constraints, I had to rename the existing `CloudResourceManager` to `CloudDriverAPI`. Feel free to suggest a better name. The GCPResourceManager is a skeleton right now, but we'll have to flesh it out in the new year when GCP moves to spot billing with varying prices. For the `AzureResourceManager`, I use a new pricing client to grab the latest vm and disk prices. I support all possible disk prices, but for now, I limited the VM query to just get the machine types we support right now. In the future, we could get all VM prices, but the query is around 40 seconds for that compared to 2 seconds now. I was worried if we had such a slow query that blocked driver startup, that would be bad and this is fine for now. There are two classes I added: a `Resource` and a `Price`. The Price is only implemented for Azure and is used to store cost results from the pricing API. The resource has a couple of different mixin classes with an abstract method to generate the quantified resource depending on the type (ex: ComputeResourceMixin). Then there's `AzureDiskResource`, `AzureVMResource`, e",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11092:22,feedback,feedback,22,https://hail.is,https://github.com/hail-is/hail/pull/11092,1,['feedback'],['feedback']
Usability,"I'd love feedback, especially on:; * How/whether to test these things; * How to organize a growing collection of hash families, with different speed/power tradeoffs, and different key and hash word-lengths. (These will be used in inner-most loops, so performance matters, and I don't have a good sense of what Scala abstractions hurt performance.)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2288:9,feedback,feedback,9,https://hail.is,https://github.com/hail-is/hail/pull/2288,1,['feedback'],['feedback']
Usability,"I'll add more tests, and I'm still considering whether to rip out or integrate WriteBlocksRDD for IRM. But given how similar this is to the latter, I'm ready for feedback on the new code.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2559:162,feedback,feedback,162,https://hail.is,https://github.com/hail-is/hail/pull/2559,1,['feedback'],['feedback']
Usability,I'm opening this PR so I can get feedback more quickly by being at the front of the queue.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12263:33,feedback,feedback,33,https://hail.is,https://github.com/hail-is/hail/pull/12263,1,['feedback'],['feedback']
Usability,"I'm seeing deploy failures where the tests start failing part way through because batch becomes unavailable, for example: https://ci2.hail.is/jobs/2886/log. However, this can't be the whole story, because batch has a readiness check and it isn't clear why it should go unavailable. Either way, this seems safer because it makes sure you pick up the intended version.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6093:246,clear,clear,246,https://hail.is,https://github.com/hail-is/hail/pull/6093,1,['clear'],['clear']
Usability,"I've not written a test for this because we use this pattern a lot, and we haven't been writing explicit test cases for all of our simplify rules, but let me know if you want one.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9011:131,simpl,simplify,131,https://hail.is,https://github.com/hail-is/hail/pull/9011,1,['simpl'],['simplify']
Usability,"I've worked to improve Skat with regard to usability and code readability / organization and to address issues / bugs that could provoke a crash. - Added group size (number of variants) as a column in the returned key table. - Added an optional maxSize parameter so large groups only return their size rather than filling memory and killing the entire job. - Now computeGramianLargeN is used if n * m exceeds 8000 * 8000 (about 512MB of doubles) or maxSize * maxSize if maxSize is given and smaller than 8000. This seems a reasonable approach for now to prevent OOM without exposing additional memory parameters, but once we have some user feedback I'd like to consider re-implementing computeGramianLargeN to use BLAS3 outer product on blocks of (fewer than m) rows of the n x m matrix rather than inner product on all pairs of columns, which I think will boost speed and make it reasonable to kill the smallN routine entirely (the current largeN case benefits from dot product of sparse vectors when using hard calls, but that also goes away when we move to generic 0.2 and rip out the hardcall/dosage complexity). Then it will be natural for maxSize to control the number of rows in a block. - Added accuracy and iterations parameters to allow users to tune Davies, with R settings for Davies (1e-6, 10k) as default. This allows users to re-run groups with tiny p-values if desired to obtain greater accuracy. The R package runs additional p-value routines that may be faster when the p-value is very small, will keep in mind should this become an issue. - In remark above the Skat class, I've added an overview of how math in paper corresponds to implementation. - Simplified and re-organized the Skat class to cut down on the number and complexity of passed parameters and make the meaning of the code more transparent with respect to the overview. Killed the SkatModel class. - Fixed an oversight whereby the largeN route was never called by logistic. - Fixed a bug whereby a weight of null was ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2248:43,usab,usability,43,https://hail.is,https://github.com/hail-is/hail/pull/2248,2,"['feedback', 'usab']","['feedback', 'usability']"
Usability,"IR for chisq, fet, ctt, hwe with simpler chisq implementation",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3833:33,simpl,simpler,33,https://hail.is,https://github.com/hail-is/hail/pull/3833,2,['simpl'],['simpler']
Usability,"If a user writes a map over a local array or stream value, which they know is large, they should be able to force scratch memory to be cleared after each row. This can be an underscored parameter for expert use only. We would need to add a `requires_memory_management_per_row` flag to the `StreamMap` node, and expose it in user facing methods which generate a `StreamMap` like `ArrayExpression.map`. Then the rule in `EmitStream` would need to combine this with the child stream's `requiresMemoryManagementPerRow`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14383:135,clear,cleared,135,https://hail.is,https://github.com/hail-is/hail/issues/14383,1,['clear'],['cleared']
Usability,"If the key columns do not appear first in the key table's `signature` (a `TStruct`), then `join` will mis-type the joined key table. The simplest example I could find:; ```python; In[1]: (KeyTable.range(0, 100).annotate('j = 1.0, i = 1'); .key_by(""i"").join(KeyTable.range(0, 100)); .schema); Out[1]: TStruct([u'index', u'j', u'i'], [TInt32(), TInt32(), TFloat64()]); ```. Note that `j` and `i`'s types have been switched. The type of `j` should be `TFloat64`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2231:137,simpl,simplest,137,https://hail.is,https://github.com/hail-is/hail/issues/2231,1,['simpl'],['simplest']
Usability,"If we view IR as the least fixpoint of an algebra wherein recursive; references are replaced with a type parameter, a la:. IR[T] ::= I32() ...; | Cast(T, Type); | ...; | Let(T, String, T, Type); | ... Then IR is a functor and has a natural map operation. Recur is inspired by this intuition, but in the restricted situation of; Scala's built-in type recursion.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2507:281,intuit,intuition,281,https://hail.is,https://github.com/hail-is/hail/pull/2507,1,['intuit'],['intuition']
Usability,"Implemented simple buffers that read/write data directly from/to streams without blocking. Our other buffer specs write/read blocked data, so the data is encoded with the block info. To write out NDArrays that are compatibly with numpy, we need to just write out the straight bytes.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5890:12,simpl,simple,12,https://hail.is,https://github.com/hail-is/hail/pull/5890,1,['simpl'],['simple']
Usability,"Implements a StagedIndexWriter with a very similar structure to the unstaged version. To test this, I threaded this through `IndexWriter.build` so that it now compiles a function that implements the CompiledIndexWriter interface:; ```; trait CompiledIndexWriter {; def init(path: String): Unit; def apply(x: Long, offset: Long, annotation: Long): Unit; def close(): Unit; }; ```; with a wrapper class that mimics the interface of the old IndexWriter. Eventually, we'll need this to lower TableWrite. (Kind of non-randomly assigning @chrisvittal, as I'd like feedback on whether the new-style imperative codegen looks right.)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8737:558,feedback,feedback,558,https://hail.is,https://github.com/hail-is/hail/pull/8737,1,['feedback'],['feedback']
Usability,"Implements existing query service endpoints using websockets instead of long-running http requests. I open a new socket for each request instead of attempting to hold one open for each client to send all its requests; not sure if one is preferable to the other, but this one seemed easier to handle and more in line with what we were doing before. ~~I haven't put any sort of heartbeat on either end for now for simplicity; the `blocking_to_async` wrapper around the jvm execution interferes with the server's ability to send/receive pings and pongs, and I'm not currently handling retries for timeouts anyways; would love suggestions on how to make this more robust.~~. Since nginx's default behavior is to close the websocket after 60s of non-activity (which seems pretty reasonable), I have a 30s heartbeat on the server-side websocket connection. This meant rewriting the flow to split a task off to execute the blocking JVM function and keeping the websocket task open to handle the heartbeat. Currently, we rely on the client to close the connection once the jvm task is completed and the result response is received; if the connection is closed/something errors for some other reason, we check to see if the task is completed and cancel it if it's not. The client side still doesn't poll the server for existence, but if the socket is unexpectedly closed we'll retry the request.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9636:412,simpl,simplicity,412,https://hail.is,https://github.com/hail-is/hail/pull/9636,1,['simpl'],['simplicity']
Usability,"Implements simple tabulation and twisted tabulation hash methods. See [Fast and Powerful Hashing using Tabulation](http://arxiv.org/abs/1505.01523v5): simple tabulation is described in Section 2, twisted tabulation is described in Section 3, and Figure 1 on p.9 has C code for both.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2304:11,simpl,simple,11,https://hail.is,https://github.com/hail-is/hail/pull/2304,2,['simpl'],['simple']
Usability,Improve simplify,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3429:8,simpl,simplify,8,https://hail.is,https://github.com/hail-is/hail/pull/3429,2,['simpl'],['simplify']
Usability,"Improved the optimizer so the IR generated for:. ```; mt = hl.import_vcf('sample.vcf'); mt.info.CCC.show(); ```. is reasonable. Run optimizer in compile, so we optimize (transformed) agg and seq ops. Simplify runs:; - propagate Begins up if possible; - inline single-use Lets; - (Apply annotate ...) => InsertFields if possible; - Turn MakeStruct of a bunch of FieldRefs into InsertFields. The optimizer now turns this:. ```; (TableMapGlobals Struct{} ""{}""; (MatrixRowsTable; (MatrixMapRows None None; (MatrixRead None False False ...); (Let __uid_1; (MakeStruct; (<expr>; (GetField CCC; (GetField info; (Ref ... va))))); (ApplyIR annotate; (MakeStruct; (locus; (GetField locus; (Ref ... va))); (alleles; (GetField alleles; (Ref ... va)))); (MakeStruct; (<expr>; (GetField `<expr>`; (Ref Struct{`<expr>`:Int32} __uid_1)))))))); (MakeStruct)); ```. I shit you not, that's literally what's generated by:. ```; import hail as hl; mt = hl.import_vcf('sample.vcf'); mt.info.CCC.show(); ```. into:. ```; (TableMapGlobals Struct{} ""{}""; (MatrixRowsTable; (MatrixMapRows None None; (MatrixRead ... False False ...); (InsertFields; (SelectFields (locus alleles); (Ref ... va)); (<expr>; (GetField CCC; (GetField info; (Ref ... va))))))); (MakeStruct)); ```. The only thing that's missing is to push the MatrixRowsTable into the MatrixMapRows. @tpoterba, I thought you had code for this? What happened?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3966:200,Simpl,Simplify,200,https://hail.is,https://github.com/hail-is/hail/pull/3966,1,['Simpl'],['Simplify']
Usability,"In Getting Started from Source, clearly suggest the 0.1 branch",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2201:32,clear,clearly,32,https://hail.is,https://github.com/hail-is/hail/pull/2201,2,['clear'],['clearly']
Usability,"In `TableMapRows.execute`, we have the following code at the top of a function that gets passed to `tableMapPartitions`:. ```; val globalRegion = ctx.freshRegion; val globals = if (rowIterationNeedsGlobals); globalsBc.value.readRegionValue(globalRegion); else 0; ```. The problem with the above is that even though the globals were only broadcasted once, they could be read into memory multiple times, and don't get cleaned up until the end of the partition where spark closes the context. Imagine a pipeline that alternated between calling map rows and filtering (the filterings prevent the adjacent maps from being simplified into one). Every time we called map, we'd run the above code, reading a new copy of the globals into a new `globalRegion` in a way that won't be cleaned up until the end of the partition. . As per Cotton: You can fix this by having `SerializedRegionValue` (which is the thing being broadcast in `globalsBC`) hold on to a pointer that is returned for each user, but has to get closed by the same callback that's clearing the contexts.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8244:617,simpl,simplified,617,https://hail.is,https://github.com/hail-is/hail/issues/8244,2,"['clear', 'simpl']","['clearing', 'simplified']"
Usability,"In looking at your PSelectFieldsStruct PR, I got a bit angry at the number of abstract methods on PStruct. This cleanup should make your PR smaller and simpler. We'll sort out the constructible methods at some point too. All the methods I changed were ones that are always used to do type-level manipulation to return a new constructible type that is fed into an RVB. Returning a PCanonicalStruct to these usages is the correct thing.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8528:152,simpl,simpler,152,https://hail.is,https://github.com/hail-is/hail/pull/8528,1,['simpl'],['simpler']
Usability,"In order to track partition bounds and distinctness, we report the first and last seen keys when writing (matrix) tables. Previously we were copying the last seen key into the partition region. This is incorrect as the partition region has a lifetime of the entire partition and cannot be cleared, leaking memory. Fix this by giving the last seen key its own region that can be cleared before a new last seen key is saved. Tested manually.; See the following zulip thread for initial report.; https://hail.zulipchat.com/#narrow/stream/123011-Hail-Query-Dev/topic/memory.20usage.20by.20range.20-.3E.20write/near/316404073",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12574:289,clear,cleared,289,https://hail.is,https://github.com/hail-is/hail/pull/12574,2,['clear'],['cleared']
Usability,"In the following hail call, the `sa` binding is not available in the filter's lambda argument. In almost all modern programming languages, bindings are lexical, descending all the way into nested code. We would like to support the same intuitive notion of binding in hail. ```; vds.annotate_samples_expr(; ""sa.mendel = gs.filter(g => va.mendel.filter(x => x.fam == sa.fam).length).count()""); ```. ### Design Suggestion. As we move towards the compiler, this should become more natural because these filters will always be inlined. We need only not reset the environment when descending into a lambda.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1351:236,intuit,intuitive,236,https://hail.is,https://github.com/hail-is/hail/issues/1351,1,['intuit'],['intuitive']
Usability,"In this PR, I rewrite `linear_regression_rows_nd` to use `_map_partitions` instead of `_group_within_partitions`. By doing this, I've eliminated the need to do a `key_by` at the end of `linear_regression_rows_nd`. I also think this makes the code clearer. . This PR also makes a few seemingly random changes that are actually bug fixes:. 1. When emitting `Apply` nodes, we were grabbing the `Code[Region]` from the first argument to the `MethodBuilder`. However, the assumption that the first argument will always be a `Region` seems to no longer be true. As such, we just construct a `CodeParam` from the `StagedRegion` we have available. . 2. In the NDArrayEmitter, I want to make sure I call the local `emit` method that passes off to `emitWithRegion`, for the same reason as 1: (Can't trust first argument to be a `Region`). 3. In `EmitStream`, I need to use `memoizeField` instead of `memoize`, because regular `memoize` saves to a `LocalRef`, and that will get reset to 0 when `next` is called on a stream. Lesson: don't trust locals for things that must live between elements of a stream. I feel like you have a better idea of how the Stream stuff gets emitted than I do Patrick. I'm curious if what I wrote in `process_block` could be written in a way that would lead to better code getting emitted, as I still need to figure out how to squeeze more performance out of this.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9469:247,clear,clearer,247,https://hail.is,https://github.com/hail-is/hail/pull/9469,1,['clear'],['clearer']
Usability,"In this PR:. - I add `BlockMatrix.from_ndarray`. The implementation isn't great, it just basically just evals the ndarray and adds NDArray support to `ValueToBlockMatrix`. A better version wouldn't cross the Python / Java boundary at all, but I want something that works on all backends, so for now this will have to suffice. Any solution will at least need to communicate the shape of the ndarray back to python, since it's tracked in the block matrix type. ; - With this new method, I can now get many tests in `test_linalg.py` to run on the local / service backends. Most BM lowering was apparently untested before, so some bug fixes were necessary, including:; - Support requiredness analysis on BlockMatrix, even though the answer is always required. ; - Use `CompileAndEvaluate` rather than `Interpret` to evaluate the child node in `ValueToBlockMatrix`. ; - Casting between Int32 and Int64 in various places in lowering. Almost always the culprit was a bad interaction between ndarray shapes (which are Int64) and `StreamRange` argument (which is an Int32). This is sort of a pervasive ndarray problem that will need to be systematically addressed at some point. I don't anticipate anyone making a BlockMatrix with blocks big enough to blow 32 bits though. ; - Lots of fixes to the `BlockMatrixBroadcast` rule for getting diagonal of a BlockMatrix, as it was clearly never run. It had `MakeStream(StreamIR)` which was not allowed, it didn't update the context appropriately, and it used the wrong axis to determine if something was a row vector.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10447:1366,clear,clearly,1366,https://hail.is,https://github.com/hail-is/hail/pull/10447,1,['clear'],['clearly']
Usability,"Information below. It isn't totally clear what to do here. I think the k8s refresh loop should probably restart pods (mark_unscheduled) that have been scheduled but aren't running after a timeout (few mins). ```; $ kubectl -n batch-pods describe pods batch-3-job-41-39d17b; Name: batch-3-job-41-39d17b; Namespace: batch-pods; Priority: 500000; PriorityClassName: user; Node: gke-vdc-preemptible-pool-9c7148b2-1f89/10.128.0.101; Start Time: Fri, 12 Jul 2019 13:17:15 -0400; Labels: app=batch-job; batch_id=3; hail.is/batch-instance=cd50b95a89914efb897965a5e982a29d; job_id=41; task=main; user=ci; uuid=f53f127847864f1cbf7d4bdc911a6646; Annotations: <none>; Status: Pending; IP: ; Containers:; main:; Container ID: ; Image: gcr.io/hail-vdc/ci-intermediate:oyyg6y2um4kx; Image ID: ; Port: <none>; Host Port: <none>; Command:; bash; -c; set -e; gcloud -q auth activate-service-account --key-file=/test-gsa-key/privateKeyData; gsutil -m cp -r /test/resources/* gs://hail-test-1c9nm/sj0nb47zqys1/pipeline/input/; State: Waiting; Reason: ContainerCreating; Ready: False; Restart Count: 0; Requests:; cpu: 100m; memory: 500M; Environment:; POD_IP: (v1:status.podIP); POD_NAME: batch-3-job-41-39d17b (v1:metadata.name); Mounts:; /gsa-key from gsa-key (rw); /test-gsa-key from test-gsa-key (rw); /var/run/secrets/kubernetes.io/serviceaccount from default-token-8h99c (ro); Conditions:; Type Status; Initialized True ; Ready False ; ContainersReady False ; PodScheduled True ; Volumes:; test-gsa-key:; Type: Secret (a volume populated by a Secret); SecretName: test-gsa-key; Optional: false; gsa-key:; Type: Secret (a volume populated by a Secret); SecretName: ci-gsa-key; Optional: false; default-token-8h99c:; Type: Secret (a volume populated by a Secret); SecretName: default-token-8h99c; Optional: false; QoS Class: Burstable; Node-Selectors: <none>; Tolerations: node.kubernetes.io/not-ready:NoExecute for 300s; node.kubernetes.io/unreachable:NoExecute for 300s; preemptible=true; Events:; Type Reason Age F",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6625:36,clear,clear,36,https://hail.is,https://github.com/hail-is/hail/issues/6625,1,['clear'],['clear']
Usability,"Initial version of python interface. Still need to:. - document python interface (working with @jigold about the best way to do that); - add tests run through gradle. The interface mostly wraps commands. The main difference is that python has first class VDS objects, so the environment isn't necessary. Therefore, I had to restructure commands that take VDS names as arguments. It can be run like this:. ```; $ gradle shadowJar; $ PYTHONPATH=/path/to/hail/python SPARK_CLASSPATH=/path/to/hail/build/libs/hail-all-spark.jar pyspark; ```. Here's a simple example:. ```; >>> from pyhail import *; >>> hc = HailContext(sc) # create Hail context; >>> vds = hc.import_vcf('/Users/cseed/sample.vcf', n_partitions = 8); >>> vds.count(); {u'nSample': 100, u'nVariants': 346L, u'nGenotypes': 34600L}; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1061:547,simpl,simple,547,https://hail.is,https://github.com/hail-is/hail/pull/1061,1,['simpl'],['simple']
Usability,Inline small ApplyIR nodes in simplify,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5899:30,simpl,simplify,30,https://hail.is,https://github.com/hail-is/hail/pull/5899,2,['simpl'],['simplify']
Usability,"Instead of writing the following to count genotypes with GQ<20, GQ>=20, and total nonmissing GQs in the callset:. ```; annotatevariants expr -c 'va.gq_less_20 = gs.count(g.gq < 20), va.gq_greater_20 = gs.count(g.gq >= 20), va.gq_total_nonmissing = gs.count(isDefined(g.gq))'; annotateglobal expr -c 'global.gq_less_20 = variants.sum(va.gq_less_20), global.gq_greater_20 = variants.sum(va.gq_greater_20), global.gq_total_nonmissing = variants.sum(va.gq_total_nonmissing)'; ```. It would be great to simply write:. ```; annotateglobal expr -c 'global.gq_less_20 = gs.count(g.gq < 20), global.gq_greater_20 = gs.count(g.gq >= 20), global.gq_total_nonmissing = gs.count(isDefined(g.gq))'; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/393:498,simpl,simply,498,https://hail.is,https://github.com/hail-is/hail/issues/393,1,['simpl'],['simply']
Usability,"Interface change:. ``` scala; abstract class Type[T] extends BaseType {; def coerce(a: Any): T; // ...; }; ```. Note the two major changes:; - Every `Type` now must correspond to a Scala type; - Every `Type` must know how to convert appropriate values to their associated Scala type. We may then naturally modify methods like `evalCompose`:. ``` scala; def evalCompose[T](ec: EvalContext, typ: Type[T])(subexpr: AST); (g: (T) => Any): () => Any = {; val f = subexpr.eval(ec); () => {; val x = f(); if (x != null); g(typ.coerce(x)); else; null; }; }; ```. which will hopefully induce or enable downstream simplifications.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/624:604,simpl,simplifications,604,https://hail.is,https://github.com/hail-is/hail/issues/624,1,['simpl'],['simplifications']
Usability,Is it this simple?,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9071:11,simpl,simple,11,https://hail.is,https://github.com/hail-is/hail/pull/9071,1,['simpl'],['simple']
Usability,Is there a way for me to test this further? My experiments show that clone+merge is ~20 seconds but download from GCS is ~3s. This should seed up the feedback substantially for anyone working on an image that transitively depends on other images.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7534:150,feedback,feedback,150,https://hail.is,https://github.com/hail-is/hail/pull/7534,1,['feedback'],['feedback']
Usability,"It is possible to export a field of a `MatrixTable` to a TSV using something like `mt.n.export('file_name')`. This is not easily determined from the docs. At minimum, maybe let's add this to the how to guide about exporting. Right now, we only talk about exporting VCFs. https://hail.is/docs/0.2/guides/basics.html?highlight=export%20matrix%20table",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8278:202,guid,guide,202,https://hail.is,https://github.com/hail-is/hail/issues/8278,2,['guid'],"['guide', 'guides']"
Usability,"It seems this is probably a bit slower than the current code on GCP (but there is variation so I'm not completely sure, and it still seems fast). It does give a functional S3 fileystem, tho. I will post timings below. Timings were done with my `test-copy` timing framework. - Add size_hint to create_part, used by the S3 backend and passed by copy. - Add a weighted semaphore (that can acquire n instead of just 1) and use it to limit the data in flight. It isn't completely clear how to do this. I could do, say, use a semaphore with value 10 * PART_SIZE and acquire the size of the object (which will be up to PART_SIZE). That might be a good idea, but instead I used 10 * BUFFER_SIZE and acquire the minimum of the BUFFER_SIZE and object size. This specifically limits the total intermediate buffer size. 10 was a mostly random choice, so you might try benchmarking to see if it makes a difference. - I made the copy part size destination filesystem specific. This is because the S3 multi-part upload API calls the partition contents be loaded into memory and 128MiB is too much for parallel uploads. The S3 default is 8MiB. - I create a new async writeable paired with a syncronous byte collector. It is used for the S3 multi-part upload call, which requires an the body to be a bytes/bytearray. - I tried to use readinto/write instead of read/write in SourceCopier.{_copy_file, _copy_part}, but in S3, the get_object API call returns a StreamingBody:. https://botocore.amazonaws.com/v1/documentation/api/latest/reference/response.html. that doesn't support readinto(). - In SourceCopier._copy_part, it might be worth benchmarking reading the entire part into memory and then writing it out like we're forced to do on the AWS backend. To do this, we'd be forced to turn PART_SIZE down to ~8MiB.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10752:475,clear,clear,475,https://hail.is,https://github.com/hail-is/hail/pull/10752,1,['clear'],['clear']
Usability,"It takes one minute to build the docs *even if nothing has changed since the; last build*. There are a few things that lengthen the feedback cycle:. - We defeat Sphinx's input cache by deleting and re-copying over all the source; files.; - We defeat Sphinx's output cache by `mv`ing the output to a new location.; - We check that Hail is installed (at a cost of two seconds) *every* time we; build the docs. This isn't necessary, Sphinx prints a reasonable message; (""cannot import ..."") if Hail is not installed.; - We create a wheel file every time we build the docs at a cost of several; seconds.; - We recreate the tutorials tar even if it has not changed. Instead, I propose this PR:. - Do not copy the source files.; - Copy the output to the new location.; - Do not check hail is installed.; - Do not even install Hail.; - Use Make to check if the tutorial tar need be recreated. Regarding not installing Hail: even install-editable takes two seconds. It is; the developer's responsibility to ensure the right version of Hail is; installed. When you check out a branch just run `make install-editable`; once. Then edit the docs to your heart's desire, never re-install Hail. With this PR it takes ~3.5 seconds to rebuild the docs if nothing has; changed. We do work proportional to the number of changed files, not; proportional to all files. Sphinx itself takes 2-3 seconds, so we can't do much; better than this. Dice came up Patrick, but I imagine @tpoterba has thoughts.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9348:132,feedback,feedback,132,https://hail.is,https://github.com/hail-is/hail/pull/9348,1,['feedback'],['feedback']
Usability,"It's clear we are failing to explain the necessity of a compatible BLAS library. I hope this will stem the flow of bug tickets and support questions related to a misconfigured, missing, or incompatible BLAS library.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8647:5,clear,clear,5,https://hail.is,https://github.com/hail-is/hail/pull/8647,1,['clear'],['clear']
Usability,"It's not clear to me what the change that broke this was. Must have been when we added the pipeline docs, but I don't see what used to be calling `upload-docs`. Anyway, calling it now.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8196:9,clear,clear,9,https://hail.is,https://github.com/hail-is/hail/pull/8196,1,['clear'],['clear']
Usability,"It's possible to get a list of (key, value) tuples from DictExpression by casting it to an array. ```python; hl.eval(hl.array(hl.literal({""foo"": 1, ""bar"": 2}))); # [('bar', 2), ('foo', 1)]; ```. This adds an `items` method to DictExpression that returns the same thing. This aligns with the `items` method of Python dicts and may be more intuitive/discoverable than casting to an array. #assign compiler",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10663:338,intuit,intuitive,338,https://hail.is,https://github.com/hail-is/hail/pull/10663,1,['intuit'],['intuitive']
Usability,"Just a refactor, simplifies the interactions between `Worker`, `CloudWorkerAPI` and `CloudUserCredentials` and hopefully makes this code safer and easier to work with. Instead of the following occuring in worker.py:. 1. get credentials string from `CloudUserCredentials`; 2. tell `CloudWorkerAPI` to write credentials string to `path` owned by the job; 3. tell `CloudWorkerAPI` to mount cloudfuse using the credentials stored at `path`. we instead just do. 1. tell `CloudWorkerAPI` to mount cloudfuse using `CloudUserCredentials`. On its own I think this change makes the codepath simpler and easier to think about in terms of where credentials are stored, but this also gets rid of the requirement from `worker.py`'s point of view that credentials must be stored on the filesystem. This will make it easier to transition off of key files and over to metadata server tokens. In order to make the new statement sound in terms of types, we can't have `CloudWorkerAPI.mount_cloudfuse` just accept a `CloudUserCredentials` argument, because that means `GCPWorkerAPI` would need to be able to support an argument of type `AzureUserCredentials`, which would never happen and doesn't make sense. What we can do here is make `CloudWorkerAPI` generic over the subtype of `CloudUserCredentials` that it both produces and consumes. This allows us to use stricter types like `GCPUserCredentials` and `AzureUserCredentials` inside of `GCPWorkerAPI` and `AzureWorkerAPI` respectively and now the type system is happy. It also relaxes the restriction that both of the `GCPUserCredentials` and `AzureUserCredentials` need to conform to the same `cloudfuse_credentials` interface.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12962:17,simpl,simplifies,17,https://hail.is,https://github.com/hail-is/hail/pull/12962,2,['simpl'],"['simpler', 'simplifies']"
Usability,"KeyedBlockMatrix is a BlockMatrix with optional row and column Keys. I chose to make them optional when considering the need to constantly check key agreement. Here if both operands have row keys in a binary operation like add, then the keys are checked for agreement. The result has rowKeys iff at least one operand has rowKeys (and they agree). Similar rules apply to column keys and other operations where sensible. When promoting a BlockMatrix to a KeyedBlockMatrix, the keys are set to None. A BlockMatrix can be promoted to a KeyedBlockMatrix even if it's dimensions exceed Int.MaxValue; the simple rule is that you can't set keys on a dimension that is too large. This is convenient if you have a matrix where one dimension is huge but you still want keys on the other dimension. Checking keys helps ensure correctness, and I think the ability to set/drop keys on keyed matrices should be useful for linear algebra where a matrix operand comes un-keyed or you don't care about the keys on that operand. This key persistence is also natural when thinking about operations that add (unkeyed) scalars or vectors to keyed matrices (We'd later add optionally-keyed vectors as well, where keys are checked in vector addition, matrix/vector mult, vectorAddToEveryRow, etc). Keys are stored and checked on master, so for large dimensions users may want to rekey with simpler keys, via a map on the python side or with just indices. For simplicity, and since there's basically no additional overhead using an unkeyed KeyedBlockMatrix versus its underlying BlockMatrix, I think we should consider only having (optionally) keyed matrices exposed on the Python side (so a Python BlockMatrix is a Scala KeyedBlockMatrix, and you can do linear algebra numpy-style by just having no keys set). I plan to add writeKeyedBlockMatrix to MatrixTable in next step, with parameters to on whether to retain the keys (e.g., key_rows = true). On the Python side, this could then replace write_block_matrix rather than b",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2718:598,simpl,simple,598,https://hail.is,https://github.com/hail-is/hail/pull/2718,1,['simpl'],['simple']
Usability,"LTRjZjJhNTdhZDkzOCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""d384d00e-b18b-41bc-871f-4cf2a57ad938"",""prPublicId"":""d384d00e-b18b-41bc-871f-4cf2a57ad938"",""dependencies"":[{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.7.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[531,null,null,509,384,494],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Access Control Bypass](https://learn.snyk.io/lesson/broken-access-control/?loc&#x3D;fix-pr); 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13718:5422,Learn,Learn,5422,https://hail.is,https://github.com/hail-is/hail/pull/13718,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"LWJmMWY5Mzc1NTVhYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""759202b1-ae50-4125-b3a5-bf1f937555ac"",""prPublicId"":""759202b1-ae50-4125-b3a5-bf1f937555ac"",""dependencies"":[{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.7.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[531,null,null,509,384,494],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Access Control Bypass](https://learn.snyk.io/lesson/broken-access-control/?loc&#x3D;fix-pr); 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13836:5490,Learn,Learn,5490,https://hail.is,https://github.com/hail-is/hail/pull/13836,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"LWY3ZGM4YjIwOTVhNiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""6e02a47f-633e-4605-b359-f7dc8b2095a6"",""prPublicId"":""6e02a47f-633e-4605-b359-f7dc8b2095a6"",""dependencies"":[{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.7.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[531,null,null,509,384,494],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Access Control Bypass](https://learn.snyk.io/lesson/broken-access-control/?loc&#x3D;fix-pr); 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13933:5490,Learn,Learn,5490,https://hail.is,https://github.com/hail-is/hail/pull/13933,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,Let me know if you think the error message is clear.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9164:46,clear,clear,46,https://hail.is,https://github.com/hail-is/hail/pull/9164,1,['clear'],['clear']
Usability,"Let's build it from scratch, but better, faster, ... Philosophy: Minimal magic, minimal reliance on outside work, don't use it unless we understand it. Goal: <16ms interactions, including <16ms page transitions. Should feel identical to a desktop app in terms of performance, but maintain state like a website (i.e `get` variables). TODO:; - [ ] Profile/logout should be responsive: no user icon / dropdown until narrow view; - [x] Default to redirect rather than popup; - [x] Clicking on login should clear state if auth failed; - [ ] Write test for token verification on backend; - [ ] Add profile page; - [ ] Finish auth/redirect notebook logic in gateway; - [ ] Add notebook state endpoints in gateway; - [ ] Add notebook state view in frontend; - [ ] Break this up into ~10 commits, targeting <= 200 LOC each (with first commit being checking in package-lock.json); - [ ] Deal with cross-origin tracking issues in Safari. This may require using the ""custom domains"" feature of auth0, paid. Workaround could be to poll/websocket request to api server to refresh tokens. . To run:; ```sh; cd packages/web-client; docker build . -t blah; docker run --env-file=env-example -p 3000:3000 blah npm run start; ```; then navigate to `http://localhost:3000`. \# lines: Most come from the package.json.lock files. These maintain versioning information.; * [It is recommended to check in .lock files]( https://stackoverflow.com/questions/44206782/do-i-commit-the-package-lock-json-file-created-by-npm-5); * They're huge, sorry.; # Documentation; ### JS; https://javascript.info. We use the subset termed [ES2018](https://flaviocopes.com/es2018/). Compatibility across all browsers is ensured by [transpilation using BabelJS, to some lower JS target](https://babeljs.io/docs/en/). Polyfills should not be used, except when impossible to support a browser (this is configurable). I mostly don't care about anything that isn't an evergreen browser, so I think we should support: Edge, Safari, Chrome, Firefox. A",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5162:371,responsiv,responsive,371,https://hail.is,https://github.com/hail-is/hail/pull/5162,2,"['clear', 'responsiv']","['clear', 'responsive']"
Usability,"Let's say I read an external file with `annotateglobal table -r global.all_scores`. I then need to assign each column to a genset , for example `global.GWAS_height = global.all_scores.filter(x => x.GWAS_HEIGHT == ""1"").map(x => x.V1).toSet` then create a per-variant annotation checking if the gene is in the gene-set `va.andrea.GWAS_height = global.GWAS_height.contains(va.andrea.genename)` and then I need to count the number of variants per individuals `sa.andrea.GWAS_height = gs.statsif(va.andrea.URV && va.andrea.GWAS_height,g.nNonRefAlleles).sum`. And I want to do this for each of the column in the file read with `annotateglobal table`. Clearly loop is needed.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/390:645,Clear,Clearly,645,https://hail.is,https://github.com/hail-is/hail/issues/390,1,['Clear'],['Clearly']
Usability,Load less data in simple cases,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3626:18,simpl,simple,18,https://hail.is,https://github.com/hail-is/hail/pull/3626,2,['simpl'],['simple']
Usability,"LocalMatrix follows NumPy's broadcast rules (restricted to two-dimensional ndarrays), and I've tried to mirror the Numpy interface for all functions where it's reasonable to do so. I still need time to add a bunch of Python tests of the interface, but I'd be glad for feedback/review in the meantime. In a subsequent PR, I'll expose the rest of BlockMatrix's binary ops in Python with the similar syntax and rules. These changes will provide the matrix functionality needed for a clean mixed models pipeline (modulo a few Scala black boxes that I can return to once I have something working) and will hopefully be generally useful for adding/porting more methods in Python. Current longer-term plan is to expose RowMatrix as well, and consider how to best unify the interfaces. And one day LocalMatrix will actually be a NumPy array...",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3064:268,feedback,feedback,268,https://hail.is,https://github.com/hail-is/hail/pull/3064,1,['feedback'],['feedback']
Usability,"Logic is: in case when data representation of a collection of fields doesn't change, and one simply needs a subset of those values, it makes no sense to copy all of those values to a different Region, instead cast. ```scala; val rvdLP = LocalLDPrune.pruneLocal(standardizedRDD, r2Threshold, windowSize, Some(maxQueueSize)). val fieldIndicesToAdd = Array(""locus"", ""alleles"", ""mean"", ""centered_length_rec""); .map(field => bpvType.fieldIdx(field)); val sitesOnly = rvdLP.mapPartitions(; tableType.canonicalRVDType; )({ it =>; val region = Region(); val rvb = new RegionValueBuilder(region); val newRV = RegionValue(region). it.map { rv =>; region.clear(); rvb.set(region); rvb.start(tableType.canonicalPType); rvb.startStruct(); // this should be a selected fields PStruct; rvb.addFields(bpvType, rv, fieldIndicesToAdd); rvb.endStruct(); newRV.setOffset(rvb.end()); newRV; }; }); ```. With something that looked more like this. ```scala; val rvdLP = LocalLDPrune.pruneLocal(standardizedRDD, r2Threshold, windowSize, Some(maxQueueSize)). val newRvdView = rvdLP.getViewFromSelectedFields(PSelectedFields(Array(""locus"", ""alleles"", ""mean"", ""centered_length_rec"".map(field => bpvType.fieldIdx(field))); ```. presumably the implementation would not only not copy, but also not re-partition the data; cc @tpoterba",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6601:93,simpl,simply,93,https://hail.is,https://github.com/hail-is/hail/issues/6601,2,"['clear', 'simpl']","['clear', 'simply']"
Usability,"Looking at the IR generated by table.flatten, this snippet:; ```; >>> import hail as hl; >>> t = hl.utils.range_table(10); >>> t2 = t.annotate(**{f'f{i}': i for i in range(5)}); >>> t2.flatten().collect(); ```; generates the following IR:; ```; (GetField rows; (TableCollect; (TableMapRows; (TableOrderBy (Aidx); (TableMapRows; (TableRange 10 8); (InsertFields; (SelectFields (idx); (Ref row)); None; (f0; (I32 0)); (f1; (I32 1)); (f2; (I32 2)); (f3; (I32 3)); (f4; (I32 4))))); (Let __uid_3; (Ref row); (InsertFields; (SelectFields (); (SelectFields (idx f0 f1 f2 f3 f4); (Ref row))); None; (idx; (GetField idx; (Ref __uid_3))); (f0; (GetField f0; (Ref __uid_3))); (f1; (GetField f1; (Ref __uid_3))); (f2; (GetField f2; (Ref __uid_3))); (f3; (GetField f3; (Ref __uid_3))); (f4; (GetField f4; (Ref __uid_3)))))))); ```; If we look at the last `TableMapRows` IR, the entire thing `(Let __uid_3 …)` is entirely a no-op, but we're still compiling and generating code for the (post-optimization) IR:; ```; (InsertFields; (SelectFields (); (Ref row)); None; (idx; (GetField idx; (Ref row))); (f0; (GetField f0; (Ref row))); (f1; (GetField f1; (Ref row))); (f2; (GetField f2; (Ref row))); (f3; (GetField f3; (Ref row))); (f4; (GetField f4; (Ref row)))); ```. (cc @tpoterba I added a second `ForwardLets` in `Optimize` before the `Simplify`, although I'm not sure that's actually the correct place to put it; in this case, I think it may eventually come out in the wash given how many passes we make through any given pipeline, but I've noticed that currently our python tends to generate IR of the form:; ```; (TableMapRows; (Let __uid_n; (Ref row); <mapped value, sometimes using (Ref __uid_n) and sometimes (Ref row)>; ```; and that redundant binding at the top level means that the first Simplify pass misses quite a few optimizations! I'm not super attached to leaving it there, but I do think we might want to consider forwarding Lets on any IRs from python before optimization.)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7719:1324,Simpl,Simplify,1324,https://hail.is,https://github.com/hail-is/hail/pull/7719,2,['Simpl'],['Simplify']
Usability,Looking for some feedback and advice on what tests to build.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3285:17,feedback,feedback,17,https://hail.is,https://github.com/hail-is/hail/pull/3285,1,['feedback'],['feedback']
Usability,Looks like this has been removed: https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/guides/v2-upgrade-guide#changes-in-v200. #assign services,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11698:107,guid,guides,107,https://hail.is,https://github.com/hail-is/hail/pull/11698,2,['guid'],"['guide', 'guides']"
Usability,"Made some logging improvements to the combiner in the process of; understanding the various components. Benchmarks, docs, perf.; improvements are next. Simple example of merging three GVCFs:. ```; 2020-03-27 15:17:58 Hail: INFO: GVCF combiner plan:; Branch factor: 2; Batch size: 2; Combining 3 input files in 2 phases with 2 total jobs.; Phase 1: 1 job corresponding to 2 intermediate output files.; Phase 2: 1 job corresponding to 1 final output file. 2020-03-27 15:17:58 Hail: INFO: Starting phase 1/2, merging 3 input GVCFs in 1 job.; 2020-03-27 15:17:58 Hail: INFO: Starting job 1/1 to create 2 merged files, corresponding to ~50.0% of total I/O.; 2020-03-27 15:21:20 Hail: INFO: Finished job 1/1, 50.0% of total I/O finished.; 2020-03-27 15:21:20 Hail: INFO: Finished phase 1/2.; 2020-03-27 15:21:20 Hail: INFO: Starting phase 2/2, merging 2 intermediate sparse matrix tables in 1 job.; 2020-03-27 15:21:27 Hail: INFO: Starting job 1/1 to create 1 merged file, corresponding to ~50.0% of total I/O.; 2020-03-27 15:24:47 Hail: INFO: wrote matrix table with 47031230 rows and 3 columns in 33 partitions to combiner_out.mt; 2020-03-27 15:24:47 Hail: INFO: Finished job 1/1, 100.0% of total I/O finished.; 2020-03-27 15:24:47 Hail: INFO: Finished phase 2/2.; 2020-03-27 15:24:47 Hail: INFO: Finished!; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8378:152,Simpl,Simple,152,https://hail.is,https://github.com/hail-is/hail/pull/8378,1,['Simpl'],['Simple']
Usability,Make laziness clear in GWAS tutorial,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7828:14,clear,clear,14,https://hail.is,https://github.com/hail-is/hail/issues/7828,2,['clear'],['clear']
Usability,"Makes some further progress on simplifying the `PruneDeadFields` pass, with the primary goal of decoupling it from the details of the binding structure. The primary change is to `memoizeValueIR`. Before, it passed in only the requested type of the node, and returned and environment containing all free variables and their requested types. Any bound variables would then need to be removed, and the environments of all children then merged. This low-level manipulation of environments made it closely tied to the binding structure, essentially redundantly encoding everything in `Binds.scala`. Now we pass an environment down into the children, which maps variables to a mutable state tracking the requested type. Each `Ref` node unions the requested type at the reference with the state in the environment. This lets us use the general environment infrastructure. I didn't do an assertion directly comparing the old and new implementations, as I've done with some other pass rewrites. But `PruneDeadFields` has pretty good test coverage.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14509:31,simpl,simplifying,31,https://hail.is,https://github.com/hail-is/hail/pull/14509,1,['simpl'],['simplifying']
Usability,"Many of our tests look like:. ```scala; // ExprSuite.scala; assert(eval[Int](""a[0]"").contains(1)); assert(eval[Int](""a[1]"").contains(2)); assert(eval[Int](""a[2]"").isEmpty); assert(eval[Int](""a[3]"").contains(6)); assert(eval[Int](""a[-1]"").contains(8)); assert(eval[Int](""a[-2]"").contains(-1)); ```. Test failures from these expressions simply state that the result was not as expected. If these tests were instead written as below,. ```scala; assert(eval[Int](""a[0]"") == Some(1)); assert(eval[Int](""a[1]"") == Some(2)); assert(eval[Int](""a[2]"") == None); assert(eval[Int](""a[3]"") == Some(6)); assert(eval[Int](""a[-1]"") == Some(8)); assert(eval[Int](""a[-2]"") == Some(-1)); ```; then test failures would print both the expected value and the actual value:; ```; org.scalatest.exceptions.TestFailedException: Some(7) did not equal Some(1); ```. Furthermore, there are a tools in the [scalatest library](http://www.scalatest.org/at_a_glance/FlatSpec) which enable richer specifications. Suppose that Hail included a `randInt : (Int, Int) => Int` function, we might like to verify that this is true:. ```scala; eval[Int](""randInt(0, 10) * 2 + 1"") should (be > 0 and be (even)); ```. When this expression fails, the messages look like:. ```; org.scalatest.exceptions.TestFailedException: 7 was greater than 0, but 7 was odd; ```. These natural language matchers are a bit finicky. I'm not sure if I like them, but I do like having nice error messages.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1286:335,simpl,simply,335,https://hail.is,https://github.com/hail-is/hail/issues/1286,1,['simpl'],['simply']
Usability,"Matrix can be promoted to a KeyedBlockMatrix even if it's dimensions exceed Int.MaxValue; the simple rule is that you can't set keys on a dimension that is too large. This is convenient if you have a matrix where one dimension is huge but you still want keys on the other dimension. Checking keys helps ensure correctness, and I think the ability to set/drop keys on keyed matrices should be useful for linear algebra where a matrix operand comes un-keyed or you don't care about the keys on that operand. This key persistence is also natural when thinking about operations that add (unkeyed) scalars or vectors to keyed matrices (We'd later add optionally-keyed vectors as well, where keys are checked in vector addition, matrix/vector mult, vectorAddToEveryRow, etc). Keys are stored and checked on master, so for large dimensions users may want to rekey with simpler keys, via a map on the python side or with just indices. For simplicity, and since there's basically no additional overhead using an unkeyed KeyedBlockMatrix versus its underlying BlockMatrix, I think we should consider only having (optionally) keyed matrices exposed on the Python side (so a Python BlockMatrix is a Scala KeyedBlockMatrix, and you can do linear algebra numpy-style by just having no keys set). I plan to add writeKeyedBlockMatrix to MatrixTable in next step, with parameters to on whether to retain the keys (e.g., key_rows = true). On the Python side, this could then replace write_block_matrix rather than being in addition to it. Later, LocalMatrix and RowMatrix would follow the same pattern of optionally keyed versions in Scala, with a common Matrix and KeyedMatrix abstraction. And in Python users would just have Matrix backed by KeyedMatrix on the Scala side. PS. In the filters, I switched to names keepRows and keepCols in KeyedBlockMatrix instead of rowsToKeep and colsToKeep, so the changes in BlockMatrix and BlockMatrixSuite are just renaming for consistency (as well as removing one unused line).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2718:1435,simpl,simplicity,1435,https://hail.is,https://github.com/hail-is/hail/pull/2718,1,['simpl'],['simplicity']
Usability,Matrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:19); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.ex,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:10738,Simpl,Simplify,10738,https://hail.is,https://github.com/hail-is/hail/issues/8338,3,"['Simpl', 'simpl']","['Simplify', 'simplifyValue']"
Usability,"Maximal independent set has had a bug/misfeature since https://github.com/hail-is/hail/pull/2975. That PR added an `hl.int64(...)` coercion around the tie_breaker function. This allowed users to pass tie_breakers that returned floating point numbers, but it *changed the meaning*. The sign of values with magnitude greater than or equal to one was preserved. All values in (-1, 1) were converted to 0, thus treating them as indistinguishable for the purposes of the MIS. This PR fixes this long standing bug and adds a simple test for that case. Supporting arbitrary numeric types is actually quite simple! The conversion from any Hail numeric type to float64 is sign-preserving (AFAIK), which is the only property we need to preserve the user's intended ordering. This change also introduces two mild, obvious performance improvements:; - Use one region for the entire MIS calculation, clearing for each invocation of tie_breaker (MIS is single-threaded); - Read the tie_breaker value using simple Region and type methods rather than allocating a new SafeRow each time the tie_breaker is invoked.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7729:519,simpl,simple,519,https://hail.is,https://github.com/hail-is/hail/pull/7729,4,"['clear', 'simpl']","['clearing', 'simple']"
Usability,"Memory's local storage is a simple cache, so it is safe for k8s to; evict it from the node if the node is underutilized. https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-types-of-pods-can-prevent-ca-from-removing-a-node",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10864:28,simpl,simple,28,https://hail.is,https://github.com/hail-is/hail/pull/10864,1,['simpl'],['simple']
Usability,More simplify rules,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3868:5,simpl,simplify,5,https://hail.is,https://github.com/hail-is/hail/pull/3868,2,['simpl'],['simplify']
Usability,"Mostly generated by feedback from Tobyn (thanks, Tobyn!). - [x] Rename Hailpedia back to something like ""Overview"" - ""pedia"" implies verbose, detailed, and independent records, not a high level survey of the library; - [ ] Link to the overview from the getting started page. Preferably in a very visible way; - [ ] (MatrixTable overview) explain how a structured matrix is different from a numeric matrix explicitly",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4908:20,feedback,feedback,20,https://hail.is,https://github.com/hail-is/hail/issues/4908,1,['feedback'],['feedback']
Usability,"Mostly infrastructure. Added NewAST base class for Matrix and KeyTable ASTs with a primitive term rewriting engine. This should eventually be a base for AST, too (because we'll want to rewrite value expressions, too). I broke VariantMetadata into two parts: VSMMetadata (static types/metdata for VSM) and VSMLocalValue (part of MatrixValue that is computed/stored on master and broadcast). Added MatrixRead, FilterSamples and FilterVariants matrix AST nodes. Simple optimizer that pushes filters into read and some minor optimizations of filters.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1778:459,Simpl,Simple,459,https://hail.is,https://github.com/hail-is/hail/pull/1778,1,['Simpl'],['Simple']
Usability,"Mostly minor. Let me know if you have any questions. If you merge this in to tp_annorework, I'll merge it in to master. Moved Annotation.emptySignature to Signature.empty.; Use convenience functions in more places (looked over all instances of List).; Rename Annotation.getSchema to .schema. Make schema virtual on Type. (Prefer virtual functions to match).; Some renaming in Signature.; Removed () on some simple functions (.getSchema(), .empty(), etc).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/219:407,simpl,simple,407,https://hail.is,https://github.com/hail-is/hail/pull/219,1,['simpl'],['simple']
Usability,"Motivation for this change: I want to keep the global configuration information in one place, and that's going to be the K8s default/global-config secret. In particular, I want to get rid of config.mk and just pull the relevant information from K8s. The secret currently like this:. ```; $ k get -o json secret global-config | jq '.data | map_values(@base64d)'; {; ""default_namespace"": ""..."",; ""docker_root_image"": ""..."",; ""domain"": ""..."",; ""gcp_project"": ""..."",; ""gcp_region"": ""..."",; ""gcp_zone"": ""..."",; ""gsuite_organization"": ""..."",; ""internal_ip"": ""..."",; ""ip"": ""..."",; ""kubernetes_server_url"": ""...""; }; ```. default_namespace will always be the name of the namespace the secret is in. This adds gsuite_organization which will be used by auth to restrict logins to a fixed GSuite organization, e.g. broadinstitute.org. I have created this secret on our production K8s cluster. The Terraform script will also create it. With this change, CI creates global-config in test and dev ""default"" namespaces based on the one from where CI is operating. The only field that currently needs to be updated is default_namespace. The plan is to pull from global-config in deployments instead of threading these global configuration(s) through CI. I made this change in the CI tests. FYI @lgruen. I'm going to break up the infra-1 work into a few separate PRs to keep it all clear and manageable.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9777:1365,clear,clear,1365,https://hail.is,https://github.com/hail-is/hail/pull/9777,1,['clear'],['clear']
Usability,"Move `localKeySort` to `OrderedRVIterator`. Previously, its only dependence on the `producerRegion` parameter was to clear the region as it consumed the producer iterator. That's now handled in `localSort` by a `boundary`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4409:117,clear,clear,117,https://hail.is,https://github.com/hail-is/hail/pull/4409,1,['clear'],['clear']
Usability,Need to add the comments from #1367 and #1374 to the style-guide.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1394:59,guid,guide,59,https://hail.is,https://github.com/hail-is/hail/issues/1394,1,['guid'],['guide']
Usability,"New PR for NativeModule etc. - NativeModule now has a single big_mutex, so that it is single-threaded (releasing big_mutex; only while sleeping between polling file state). - The run_shell_get_first_line() has been removed, moving almost all configuration into the; module-build makefile; ; - Simplified Makefile. - Remove some historical code",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4211:293,Simpl,Simplified,293,https://hail.is,https://github.com/hail-is/hail/pull/4211,1,['Simpl'],['Simplified']
Usability,"No changelog because the copy tool is not properly public, though; maybe it can be public now. The main problem was that we were saturating our network bandwidth; with data we did not need. Why? As far as I can tell, `release` on; an `aiohttp.ClientResponse` is insufficient to stop the receipt of; more bytes. I realized one proper fix was to simply tell the cloud storage vendors; how much data we wanted to receive. That is the change to `open_from`; which I have made pervasively to all clouds. I also changed `release` to `close` because that seems more correct.; I do not understand why we only `release`d it before.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11778:344,simpl,simply,344,https://hail.is,https://github.com/hail-is/hail/pull/11778,1,['simpl'],['simply']
Usability,No detectable difference in performance:. ```; $ hail-bench compare /tmp/before.json /tmp/after2.json; Name Ratio Time 1 Time 2; ---- ----- ------ ------; matrix_table_decode_and_count 101.5% 4.216 4.278; ----------------------; Geometric mean: 101.5%; Simple mean: 101.5%; Median: 101.5%; ```,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7143:253,Simpl,Simple,253,https://hail.is,https://github.com/hail-is/hail/pull/7143,1,['Simpl'],['Simple']
Usability,"No one has complained about this yet, but I suspect there's a lurking issue in `linreg`. On line 75 of LinearRegression.scala, we create a writable region value using a context managed region. This region will be kept alive (in the garbage collection sense) by the context until the end of the Task (which I believe is the end of processing one partition). As such, `linreg` will generate a bunch of garbage. We close the child as soon as we know it is no longer used, thus saving memory use, at the cost of copying the results. In a future where we can reference-count regions then we could avoid the copy and simply return the writable region value. This future is not here yet.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3590:611,simpl,simply,611,https://hail.is,https://github.com/hail-is/hail/pull/3590,1,['simpl'],['simply']
Usability,"Not a long-term solution, but we do hacky dedups like this elsewhere in the compiler and it can clean up simple duplicated IRs. Not chained duplicated IRs, as you've noticed.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12462:105,simpl,simple,105,https://hail.is,https://github.com/hail-is/hail/pull/12462,1,['simpl'],['simple']
Usability,Not clearing the region in persist triggers a bug in LDPrune,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3398:4,clear,clearing,4,https://hail.is,https://github.com/hail-is/hail/issues/3398,2,['clear'],['clearing']
Usability,"Not ready to be merged yet, but I'd like to open it up for feedback on the IR DSL.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4633:59,feedback,feedback,59,https://hail.is,https://github.com/hail-is/hail/pull/4633,1,['feedback'],['feedback']
Usability,"Now it seems you should use string.isMissing, while this returns an error.; I suggest isMissing(a), which makes clear the proper use of the syntax.; In Brief: update help here: https://github.com/broadinstitute/hail/blob/master/docs/HailExpressionLanguage.md",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/374:112,clear,clear,112,https://hail.is,https://github.com/hail-is/hail/issues/374,1,['clear'],['clear']
Usability,"Now that we have fully deterministic randomness, there is no need to prevent simplify from changing the partitioning.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13218:77,simpl,simplify,77,https://hail.is,https://github.com/hail-is/hail/pull/13218,1,['simpl'],['simplify']
Usability,"OK, this one is slightly subtle. A physical value at runtime actually has two forms:. 1. It is a bunch a bunch of bytes in memory at a particular address (e.g. a struct field, an array element, or a freestanding value in memory). 2. It is a value made up of JVM primitive values (or, more abstractly, Code[T]'s) that can be operated on immediately. Note, one option for (2) is just the address (1). This is what we do for structs (but note, not for arrays). Therefore, one thing we need is an operation that constructs a PValue from a physical type and an address to go from (1) => (2). I call this `PType.load`. It will be used in, for example, loadElement or loadField. See the use in loadElement below in PCanonicalIndexableValue. We also need something that goes from (2) => (1). There are two cases, whether the memory has been allocated already, or not, and I call them `PValue.store` and `PValue.allocateAndStore`. PType.load should be abstract and the implementation should be pushed to the leaves. I will do that once the full set of PValues are filled in. load/store will eventually allow us to eliminate all the IRIntermediate business. There was some complaint about my `PValue.apply` switching on PType. Some of the calls to it will go away in favor of load. I think of load as a kind of PValue constructor that takes a single argument pointing to memory. There will be other constructors depending on the PType. Those will eliminate the other calls to PValue.apply. Hopefully this discussion clears things up. FYI @tpoterba",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8247:1506,clear,clears,1506,https://hail.is,https://github.com/hail-is/hail/pull/8247,1,['clear'],['clears']
Usability,"On certain occasions, the file inside the FASTA reader can be closed. It; is not yet understood why. Tests indicate that simply reopening the file; seems to resolve the issue when we run the appropriate exception. This also removes the need for SerializableReferenceSequenceFile, and so; deletes it.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9436:121,simpl,simply,121,https://hail.is,https://github.com/hail-is/hail/pull/9436,1,['simpl'],['simply']
Usability,"Once the current auth overhaul is through and we go ""keyless"", the only secret left that we mount into user jobs is the deploy config, which at that point feels kind of silly. It's also nearly always the same deploy config value that we serialize and write to a file for every job. It seems cleaner and simpler to me that we create one deploy config for the worker, and the worker readonly mounts that config into every job. Note that this is overridable so that any pre-existing jobs that specify a deploy-config secret and all the special deploy-config stuff that we do in build.yaml should not be affected",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13203:303,simpl,simpler,303,https://hail.is,https://github.com/hail-is/hail/pull/13203,1,['simpl'],['simpler']
Usability,"PBetterLocus is represented as a Long. The high 32 bits are the index of; the contig in its reference genome. The low 32 bits are the position. A key assumption here is that there will never be more than INT_MAX; contigs in any reference genome. With that, we can simply compare; PBetterLocus with Long comparision as they are all nonnegative.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8431:264,simpl,simply,264,https://hail.is,https://github.com/hail-is/hail/pull/8431,1,['simpl'],['simply']
Usability,"PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI2NDVjMDg3ZS00NzIwLTRkZTgtYmI0NC00MWNkOTY0NTBmZjUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjY0NWMwODdlLTQ3MjAtNGRlOC1iYjQ0LTQxY2Q5NjQ1MGZmNSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/0ba777e1-bc27-41cc-aefa-0ed1a253829e?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/0ba777e1-bc27-41cc-aefa-0ed1a253829e?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""645c087e-4720-4de8-bb44-41cd96450ff5"",""prPublicId"":""645c087e-4720-4de8-bb44-41cd96450ff5"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.2""}],""packageManager"":""pip"",""projectPublicId"":""0ba777e1-bc27-41cc-aefa-0ed1a253829e"",""projectUrl"":""https://app.snyk.io/org/danking/project/0ba777e1-bc27-41cc-aefa-0ed1a253829e?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6209406"",""SNYK-PYTHON-AIOHTTP-6209407""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581,718],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Limitation of a Pathname to a Restricted Directory (&#x27;Path Traversal&#x27;)](https://learn.snyk.io/lesson/directory-traversal/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14220:3841,Learn,Learn,3841,https://hail.is,https://github.com/hail-is/hail/pull/14220,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3ZGRlNzcwZi0yMzMyLTQ5ZjktOWI1My05ZDY1OGJlOTVjMmQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjdkZGU3NzBmLTIzMzItNDlmOS05YjUzLTlkNjU4YmU5NWMyZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""7dde770f-2332-49f9-9b53-9d658be95c2d"",""prPublicId"":""7dde770f-2332-49f9-9b53-9d658be95c2d"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.2""}],""packageManager"":""pip"",""projectPublicId"":""b72ce54d-5de3-48e5-a1d4-6f8967681a12"",""projectUrl"":""https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6209406"",""SNYK-PYTHON-AIOHTTP-6209407""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581,718],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Limitation of a Pathname to a Restricted Directory (&#x27;Path Traversal&#x27;)](https://learn.snyk.io/lesson/directory-traversal/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14228:3789,Learn,Learn,3789,https://hail.is,https://github.com/hail-is/hail/pull/14228,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI5ZWNjYjQ0YS1jYWZiLTQ0OTgtYjU1NS02NDdmZjUwY2ExOTQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjllY2NiNDRhLWNhZmItNDQ5OC1iNTU1LTY0N2ZmNTBjYTE5NCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fdd23464-9a67-49b8-8d9c-08502282c5fb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fdd23464-9a67-49b8-8d9c-08502282c5fb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""9eccb44a-cafb-4498-b555-647ff50ca194"",""prPublicId"":""9eccb44a-cafb-4498-b555-647ff50ca194"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.2""}],""packageManager"":""pip"",""projectPublicId"":""fdd23464-9a67-49b8-8d9c-08502282c5fb"",""projectUrl"":""https://app.snyk.io/org/danking/project/fdd23464-9a67-49b8-8d9c-08502282c5fb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6209406"",""SNYK-PYTHON-AIOHTTP-6209407""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581,718],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Limitation of a Pathname to a Restricted Directory (&#x27;Path Traversal&#x27;)](https://learn.snyk.io/lesson/directory-traversal/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14225:3775,Learn,Learn,3775,https://hail.is,https://github.com/hail-is/hail/pull/14225,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhZDFmMzFlYi1hYTcyLTQyMTYtOTgzNC01MDljMDdhOWFmNTMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImFkMWYzMWViLWFhNzItNDIxNi05ODM0LTUwOWMwN2E5YWY1MyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""ad1f31eb-aa72-4216-9834-509c07a9af53"",""prPublicId"":""ad1f31eb-aa72-4216-9834-509c07a9af53"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.2""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6209406"",""SNYK-PYTHON-AIOHTTP-6209407""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581,718],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Limitation of a Pathname to a Restricted Directory (&#x27;Path Traversal&#x27;)](https://learn.snyk.io/lesson/directory-traversal/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14227:4021,Learn,Learn,4021,https://hail.is,https://github.com/hail-is/hail/pull/14227,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlMzQ0ZjYzNy00MjQwLTQxNmEtYjE2Yi1kODhmYjc2YTUwZmYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImUzNDRmNjM3LTQyNDAtNDE2YS1iMTZiLWQ4OGZiNzZhNTBmZiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/92d13c88-936f-40d3-b692-29e637c1a00c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/92d13c88-936f-40d3-b692-29e637c1a00c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""e344f637-4240-416a-b16b-d88fb76a50ff"",""prPublicId"":""e344f637-4240-416a-b16b-d88fb76a50ff"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.2""}],""packageManager"":""pip"",""projectPublicId"":""92d13c88-936f-40d3-b692-29e637c1a00c"",""projectUrl"":""https://app.snyk.io/org/danking/project/92d13c88-936f-40d3-b692-29e637c1a00c?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6209406"",""SNYK-PYTHON-AIOHTTP-6209407""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581,718],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Limitation of a Pathname to a Restricted Directory (&#x27;Path Traversal&#x27;)](https://learn.snyk.io/lesson/directory-traversal/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14226:3766,Learn,Learn,3766,https://hail.is,https://github.com/hail-is/hail/pull/14226,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,Part 1 of improving dev deploy usability. This PR:. - Moves definition of profiles out of CI so that new build steps can be added as part of development.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6660:31,usab,usability,31,https://hail.is,https://github.com/hail-is/hail/pull/6660,1,['usab'],['usability']
Usability,"Pick a backwards compatibility test table, `1.5.0/6.ht` is the simplest one. ```; In [2]: ht = hl.read_table('hail/src/test/resources/backward_compatability/1.5.0/table/6.ht/'. In [3]: ht.aggregate(hl.agg.collect(ht.nd)); Out[3]:; [array([[0, 1, 2, 3, 4],; [5, 6, 7, 8, 9]], dtype=int32),; array([[0, 1, 2, 3, 4],; [5, 6, 7, 8, 9]], dtype=int32),; array([[0, 1, 2, 3, 4],; [5, 6, 7, 8, 9]], dtype=int32),; array([[0, 1, 2, 3, 4],; [5, 6, 7, 8, 9]], dtype=int32),; array([[0, 1, 2, 3, 4],; [5, 6, 7, 8, 9]], dtype=int32)]. In [4]: ht.select('nd').show(); +-------+----------------------------------------------------------------+; | idx | nd |; +-------+----------------------------------------------------------------+; | int32 | ndarray<int32, 2> |; +-------+----------------------------------------------------------------+; | 0 | ndarray{shape=(2, 5), data=[[0, 5, 1, 6, 2], [7, 3, 8, 4, 9]]} |; | 1 | ndarray{shape=(2, 5), data=[[0, 5, 1, 6, 2], [7, 3, 8, 4, 9]]} |; | 2 | ndarray{shape=(2, 5), data=[[0, 5, 1, 6, 2], [7, 3, 8, 4, 9]]} |; | 3 | ndarray{shape=(2, 5), data=[[0, 5, 1, 6, 2], [7, 3, 8, 4, 9]]} |; | 4 | ndarray{shape=(2, 5), data=[[0, 5, 1, 6, 2], [7, 3, 8, 4, 9]]} |; +-------+----------------------------------------------------------------+; ```. The first result looks more correct to mine eyes.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9640:63,simpl,simplest,63,https://hail.is,https://github.com/hail-is/hail/issues/9640,1,['simpl'],['simplest']
Usability,"Please look over the `FAQ.md` page and let me know if this is what you had in mind in terms of layout, organization, question complexity, and range of topics. I haven't done a thorough pass through of the Hail slack channel yet. Once I have your feedback, I'll continue adding and refining examples.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/481:246,feedback,feedback,246,https://hail.is,https://github.com/hail-is/hail/pull/481,1,['feedback'],['feedback']
Usability,"Plus:; - Boolean ldc (load constant) instructions need an int, not a boolean. JVM seems OK with it, but the asm bytecode verifier rejects it.; - In Apply codegen, the zip in function lookup was potentially truncating the arguments, selecting an incorrect function. Fix, and simplify the definition of `methods`.; - Fix/simplify asm error reporting from asm in lir Emit. The old code was crashing inside asm. I used the new code to debug some bytecode issues, it works well.; - compute max locals/stack, needed by the asm verifier (CheckClass). @konradjk This fixes your class not found issue.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8537:274,simpl,simplify,274,https://hail.is,https://github.com/hail-is/hail/pull/8537,2,['simpl'],['simplify']
Usability,Ported ImportBgenSuite to Python. I mostly did this to make this simpler.; Removed some unused funtions in RichMatrixTable. We can double-check with the community before merging.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3743:65,simpl,simpler,65,https://hail.is,https://github.com/hail-is/hail/pull/3743,1,['simpl'],['simpler']
Usability,"Pretty simple pipeline, only failed about ~3/4 through the final (write) stage...; ```; mt = hl.read_matrix_table(); sample_group_filters = {; ""qc_samples_raw"": mt.meta.high_quality,; ""release_samples_raw"": mt.meta.release,; ""all_samples_raw"": True; }; mt = mt.select_cols(**sample_group_filters); mt = unphase_mt(mt.select_rows(*mt.row_key)); call_stats_expression = []; for group in sample_group_filters.keys():; call_stats_expression.append(; hl.struct(call_stats=hl.agg.call_stats(hl.agg.filter(mt[group], mt.GT), mt.alleles),; meta={'group': group}); ); mt.annotate_rows(qc_callstats=call_stats_expression).drop_cols().write(); ```. ```; Traceback (most recent call last):; File ""/tmp/a913d6ce5b814a63ad7af31060416237/pyscripts_Xr0D99.zip/gnomad_hail/slack_utils.py"", line 77, in try_slack; File ""/tmp/a913d6ce5b814a63ad7af31060416237/generate_qc_annotations.py"", line 247, in main; generate_call_stats(mt).write(annotations_mt_path(data_type, 'call_stats'), args.overwrite); File ""<decorator-gen-556>"", line 2, in write; File ""/tmp/a913d6ce5b814a63ad7af31060416237/hail-devel-a1d6ecc71ce3.zip/hail/typecheck/check.py"", line 481, in _typecheck; File ""/tmp/a913d6ce5b814a63ad7af31060416237/hail-devel-a1d6ecc71ce3.zip/hail/matrixtable.py"", line 2027, in write; File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/tmp/a913d6ce5b814a63ad7af31060416237/hail-devel-a1d6ecc71ce3.zip/hail/utils/java.py"", line 196, in deco; hail.utils.java.FatalError: IllegalArgumentException: requirement failed. Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 9716 in stage 1.0 failed 20 times, most recent failure: Lost task 9716.19 in stage 1.0 (TID 10060, exomes3-sw-dfpw.c.broad-mpg-gnomad.internal, executor 134): java.lang.IllegalArgumentException: requirement failed; 	at scala.Predef$.require(Predef.scala:212); 	at is.hail.variant.Call$.alleleByIndex(Call.scala:128); 	at is.hail.expr.FunctionRegistry$$anonfun$",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3465:7,simpl,simple,7,https://hail.is,https://github.com/hail-is/hail/issues/3465,1,['simpl'],['simple']
Usability,"Previously the below would display `0.GT | 1.GT` (simply the index in the entries array). ```; In [2]: import hail as hl ; ...: mt = hl.balding_nichols_model(3, 100, 100) ; ...: mt = mt.key_cols_by(sample_id = 'sample-' + hl.str(mt.sample_idx)) ; ...: mt.show(n_rows=10, n_cols=10) ; 2019-06-19 16:20:33 Hail: INFO: balding_nichols_model: generating genotypes for 3 populations, 100 samples, and 100 variants...; +---------------+------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+; | locus | alleles | sample-0.GT | sample-1.GT | sample-2.GT | sample-3.GT | sample-4.GT | sample-5.GT | sample-6.GT | sample-7.GT | sample-8.GT | sample-9.GT |; +---------------+------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+; | locus<GRCh37> | array<str> | call | call | call | call | call | call | call | call | call | call |; +---------------+------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+; | 1:1 | [""A"",""C""] | 0/0 | 0/0 | 0/1 | 1/1 | 0/1 | 0/0 | 0/1 | 0/1 | 0/1 | 0/1 |; | 1:2 | [""A"",""C""] | 1/1 | 0/1 | 0/0 | 0/1 | 1/1 | 1/1 | 0/1 | 1/1 | 0/0 | 1/1 |; | 1:3 | [""A"",""C""] | 1/1 | 0/1 | 0/0 | 1/1 | 0/0 | 1/1 | 1/1 | 0/1 | 0/0 | 1/1 |; | 1:4 | [""A"",""C""] | 0/0 | 0/1 | 0/0 | 1/1 | 0/1 | 0/0 | 0/1 | 0/0 | 0/0 | 0/1 |; | 1:5 | [""A"",""C""] | 0/1 | 0/0 | 0/0 | 0/0 | 0/1 | 0/0 | 0/1 | 0/1 | 0/0 | 1/1 |; | 1:6 | [""A"",""C""] | 0/0 | 1/1 | 1/1 | 0/1 | 0/1 | 1/1 | 0/1 | 0/1 | 1/1 | 1/1 |; | 1:7 | [""A"",""C""] | 0/0 | 0/1 | 1/1 | 0/1 | 0/1 | 0/1 | 0/0 | 0/1 | 0/0 | 0/1 |; | 1:8 | [""A"",""C""] | 0/1 | 0/1 | 1/1 | 1/1 | 0/1 | 0/1 | 1/1 | 1/1 | 0/1 | 0/1 |; | 1:9 | [""A"",""C""] | 0/0 | 0/1 | 1/1 | 1/1 | 1/1 | 0/1 | 1/1 | 1/1 | 1/1 | 1/1 |; | 1:10 | [""A"",""C""] | 0/1 | 0/1 | 0/1 | 0/0 | 0/1 | 0/0 | 0/1 | 0/1 | 0/0 | 0/1 |",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6405:50,simpl,simply,50,https://hail.is,https://github.com/hail-is/hail/pull/6405,1,['simpl'],['simply']
Usability,"Previously, MatrixMapRows was calling into an IR-generated function for each element. Now we aggregate the entire row from within Python. On a 6-aggregator benchmark on a shard of gnomAD, this improved things about 50% (1m59 => 1m02). Some notable changes:; - I added a Begin for sequencing void-type IR,; - I added ArrayFor for looping over arrays (@danking); - I added a SeqOp that represents calling the RegionValueAggregator in seqOp in the IR after extracting aggregators, it holds the index of the aggregator to call seqsOp on, since there might be multiple,; - added Void literal (which I didn't end up using, but I left it in for now),; - TAggreable symbol table is no longer used in compiling the extracted aggregators. The arguments need to specified explicitly and otherwise it is just another function (but takes an extra special argument, the array of RVAggregators),. This suggests some additional improvements/simplifications to the aggregator interface that I will write up on the dev forum.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3422:925,simpl,simplifications,925,https://hail.is,https://github.com/hail-is/hail/pull/3422,1,['simpl'],['simplifications']
Usability,"Progress bars for batch submit (which work even if individual bunches fail). Stacked on #7875. <img width=""885"" alt=""Screen Shot 2020-01-14 at 3 53 40 PM"" src=""https://user-images.githubusercontent.com/106194/72382076-829e1e80-36e6-11ea-9626-1e67e5aa54ce.png"">. Now also works in Jupyter Notebook (you get a GUI bar). I added `hailtop.utils.tqdm` and `hailtop.utils.TQDM_DEFAULT_DISABLE` because the ""correct"" default argument for disable is different between Jupyter Notebook and the console tqdm. In particular, console tqdm treats `None` as ""if I'm connected to a TTY, display, otherwise hide"". Jupyter tqdm treats `None` as ""do not display"" (which is clearly the wrong default, but 🤷‍♀ ).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7876:0,Progress bar,Progress bars,0,https://hail.is,https://github.com/hail-is/hail/pull/7876,2,"['Progress bar', 'clear']","['Progress bars', 'clearly']"
Usability,"Proposed change for `ld_prune` motivated by user difficulty importing and pruning 1kg. As we don't have near-term plans for a version that exploits phasing, I think it's best to make this runnable regardless of phasing, while documenting that the algorithm ignores phasing. I've added this description, fixed a doc bug (unit is bases, not kilobases) and changed the parameter `window` to `bp_window_size`, which is consistent with `window_by_locus` and I think clearer. (I'll note it on our breaking changes dev post). If we add a method that incorporates phasing in 0.2 lifetime, it can be a separate method or we can add a parameter `use_phasing` with default value `False`. (actually, it should be a separate method since r^2 correlation won't be the right measure for that).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3575:461,clear,clearer,461,https://hail.is,https://github.com/hail-is/hail/pull/3575,1,['clear'],['clearer']
Usability,"ROM jobs FORCE INDEX(jobs_batch_id_state_always_run_cancelled); -> LEFT JOIN jobs_telemetry ON jobs.batch_id = jobs_telemetry.batch_id AND jobs.job_id = jobs_telemetry.job_id; -> WHERE jobs.batch_id = BATCH_ID AND (jobs.batch_id < BATCH_ID OR (jobs.batch_id = BATCH_ID AND jobs.job_id <= 15000)) AND inst_coll = ""standard"" AND jobs.state = 'Ready' AND always_run = 0 AND cancelled = 0; -> ORDER BY jobs.batch_id, inst_coll, state, always_run, -n_regions DESC, regions_bits_rep, jobs.job_id; -> LIMIT 300;; +----+-------------+----------------+------------+--------+------------------------------------------+------------------------------------------+---------+-------------------------+-------+----------+----------------------------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+----------------+------------+--------+------------------------------------------+------------------------------------------+---------+-------------------------+-------+----------+----------------------------------------------------+; | 1 | SIMPLE | jobs | NULL | range | jobs_batch_id_state_always_run_cancelled | jobs_batch_id_state_always_run_cancelled | 136 | NULL | 24092 | 10.00 | Using index condition; Using where; Using filesort |; | 1 | SIMPLE | jobs_telemetry | NULL | eq_ref | PRIMARY | PRIMARY | 12 | const,batch.jobs.job_id | 1 | 100.00 | NULL |; +----+-------------+----------------+------------+--------+------------------------------------------+------------------------------------------+---------+-------------------------+-------+----------+----------------------------------------------------+; 2 rows in set, 1 warning (0.00 sec); ```. I'm open to other ideas for how to fix this. This change is a starting point for how to mitigate the issue in the short term. However, I think a longer term plan needs to be implemented which I already have considered with another design proposal.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13268:2415,SIMPL,SIMPLE,2415,https://hail.is,https://github.com/hail-is/hail/pull/13268,1,['SIMPL'],['SIMPLE']
Usability,"Re-implement export vcf in generated code. There is a fair amount of 'duplicated' code here between table export; and vcf export, however, I belive this to be fine. We can always; refactor VCFPartitionWriter to be a subclass of SimplePartitionWriter,; but that would require a little special casing as VCF export needs; access to the column values and SimplePartitionWriter assumes such; a thing is not necessary. As far as VCF export itself, we simply duplicate the logic present in; ExportVCF but with generated code.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11450:228,Simpl,SimplePartitionWriter,228,https://hail.is,https://github.com/hail-is/hail/pull/11450,3,"['Simpl', 'simpl']","['SimplePartitionWriter', 'simply']"
Usability,"Reading function/contexts from GCS on query workers can contribute a significant portion of the runtime for small jobs. For a simple query like `hl.utils.range_table(10).collect()`, the jobs in the batch can range in time from 5-9 seconds depending on GCS latency. This builds on #9484 to add write-through capability to `memory` and a `ServiceCacheableFS` in Scala. The cacheable FS reads/writes through `memory` and falls back to GCS, so in the good path the ServiceBackend writes the compiled function and contexts to `memory`, workers read inputs and write outputs exclusively from/to memory, from which the ServiceBackend reads the results. From small benchmarks in dev, this cuts down read times on the workers by ~30-40% compared to the worst case GCS latencies and roughly matches the current implementation in the best case. Writing the outputs is comparable to writing through an already warmed up GCS connection.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10315:126,simpl,simple,126,https://hail.is,https://github.com/hail-is/hail/pull/10315,1,['simpl'],['simple']
Usability,"Recent log demonstrating the failure: https://cloudlogging.app.goo.gl/ayiTFRnkLdrSzY2j7. In retrospect this seems kind of obvious. Consider `JVMEntryway`. The first `log` statement occurs on line 98 (the line after we set the filename). I think, in my head, the Appender would be created when we initialized the Logger on line 17. That's apparently incorrect. The Appender is lazily created when some internal buffer fills and the logger flushes that buffer. That internal buffer is most likely to fill on the `log.error` lines because they dump a (large) stack trace to the log. That's why we always see the error there. The fix is simple: we track the currently desired output filename and, if we happen to create an appender *after* someone has called `changeFileInAllAppenders`, we initialize that new appender with the filename. This change ensures that, except for a short period during start up, there is always a valid filename. That short period is just the time between the JVM starting, allocating a `JVMEntryway`, calling `main` and getting to line 97. During that time, we carefully use `System.err.println` (not a logger) if something goes wrong.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13664:633,simpl,simple,633,https://hail.is,https://github.com/hail-is/hail/pull/13664,1,['simpl'],['simple']
Usability,"Refactors `Bindings` to return an object encoding the change to the environment (any new bindings, whether the agg/scan env is promoted, etc). This allows the deletion of `SegregatedBindingEnv`. Follow up work will use this to replace the other specializations of `GenericBindingEnv`, and to greatly simplify compiler passes, such as `NormalizeNames` and `PruneDeadFields`, which currently need to redundantly encode the binding structure of every node.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14496:300,simpl,simplify,300,https://hail.is,https://github.com/hail-is/hail/pull/14496,1,['simpl'],['simplify']
Usability,"Remaining is that found in Etypes, in the _buildSkip function. This is slightly tricky, because there is a place in the code where there is no corresponding PType, and the solution to fix that is a bit involved, or if straightforward, beyond my current understanding of ETypes. I made an issue here: https://github.com/hail-is/hail/issues/7701. Stacked on https://github.com/hail-is/hail/pull/7687. edit: I removed the ETypes issue, by creating a packBitsToBytes function on UnsafeUtils. We may not want this change however, because I think array packing may needs to be the same as the array implementation (I think readBytes fills the allocated memory with the InputBuffer's encoded missingness data, which needs same number of bytes as what is encoded), in which case that coupling becomes less clear if the utility function is on UnsafeUtils. I could move it back to PContainer, or may _buildSkip take a ptype. . There are other places where (n + 7) >>> 3 are used, so this seems pretty general, hence UnsafeUtils (where we have some other bitwise ops, happy to move elsewhere). PTuple is one.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7702:798,clear,clear,798,https://hail.is,https://github.com/hail-is/hail/pull/7702,1,['clear'],['clear']
Usability,"Remove AST hierarchy, FunctionRegistry, AST parser, dependencies (tests) and any other dead code I could find. > 4 additions and 6,710 deletions. Aw, yiss. Full disclosure: this deletes some tests (SKAT, PCRelate, etc.) that currently have no corresponding tests in Python. My plan is to do a ""test audit"" and assign out tests to make sure we have a complete set of tests for the current functionality (including stuff that was deleted here and things that are simply missing tests, e.g. the MatrixIR parser, some IR nodes, etc.)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3990:461,simpl,simply,461,https://hail.is,https://github.com/hail-is/hail/pull/3990,1,['simpl'],['simply']
Usability,Remove conversions from the function registry. They are now inserted by Python and explicit in the expression language. This should simplify lots of stuff on the back end.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3120:132,simpl,simplify,132,https://hail.is,https://github.com/hail-is/hail/pull/3120,1,['simpl'],['simplify']
Usability,"Remove the `Begin` node, as its behavior can now be represented by the `Let` node. Besides removing redundant nodes, this will also make the new ssa-style text representation simpler. The `Begin` node emmitter performed method splitting, emitting groups of 16 children in seperate methods. This preserves that behavior by doing a similar optimization in the `Let` emitter. This is a significant change in how we split generated code into methods, so we should watch out for how this affects things.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14068:175,simpl,simpler,175,https://hail.is,https://github.com/hail-is/hail/pull/14068,1,['simpl'],['simpler']
Usability,"Replaces https://github.com/hail-is/hail/pull/13260. - `test_spectral_moments` times out in a PR: (QoB) https://hail.zulipchat.com/#narrow/stream/127527-team/topic/timeouts/near/376698259, (spark) https://ci.hail.is/batches/7653376/jobs/74, (spark) https://ci.hail.is/batches/7653376/jobs/72, (spark) https://ci.hail.is/batches/7653376/jobs/62. I also backed local off to 4m even though it has no evidence of time outs. Seems simpler for Spark and local to be the same.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13278:426,simpl,simpler,426,https://hail.is,https://github.com/hail-is/hail/pull/13278,1,['simpl'],['simpler']
Usability,"Replaces setAllMissing (1, staged-only function), clearMissingBits (3 functions with both staged and unstated implementations) with staged/non-staged initialization functions, mirroring the PContainer API. Semantically this is more correct (for instance clearMissingBits was used mostly behind the condition like `if (init)`), and represents 2 fewer functions to maintain (3 if you count that we may have eventually wanted a setAllMissing in the non-staged world)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7831:50,clear,clearMissingBits,50,https://hail.is,https://github.com/hail-is/hail/pull/7831,2,['clear'],['clearMissingBits']
Usability,Resolves #5673 in the most simple way. cc @tpoterba you may have thoughts on this.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5674:27,simpl,simple,27,https://hail.is,https://github.com/hail-is/hail/pull/5674,1,['simpl'],['simple']
Usability,"Resolves issue #763.; ### Simple Types. The Function Registry distinguishes between fields and functions because they were distinguished in the existing `AST.scala`. Moreover, for unary functions, there are registration methods for both pure functions and computations in the `Option` monad. Registration requires only a name and an implementation. Unfortunately, the Scala compiler fails to infer the type parameters from an expression like `_.isHomRef`. . ``` scala; registerOptionField(""dosage"", { (x: Genotype) => x.dosage.map(a => a: IndexedSeq[Double]) }); registerField(""isHomRef"", { (x: Genotype) => x.isHomRef }); ```. ``` scala; register(""Variant"", { (x: String) =>; val Array(chr, pos, ref, alts) = x.split("":""); Variant(chr, pos.toInt, ref, alts.split("","")); }); register(""Variant"", { (x: String, y: Int, z: String, a: String) => Variant(x, y, z, a) }); ```. The `HailRep` type class associates Scala types with Hail expression types. For example, the function registry knows that `Variant` returns a `TVariant` because of this implicit:. ``` scala; implicit object variantHr extends HailRep[Variant] {; def typ = TVariant; }; ```; ### Polymorphic Types. I don't have an answer for the various kinds of polymorphism present in the Hail expression language. There is unbounded polymorphism:. ``` scala; case (t: TArray, ""length"") => TInt; ```. as well as bounded polymorphism:. ``` scala; case (""pow"", _) => TDouble; args.map(_.`type`) match {; case Array(a: TNumeric, b: TNumeric) => TDouble; // ...; }; ```. Both of these are still handled by explicit case matching.; ### Struct Types. Functions returning structs can use `registerAnn` to specifically provide a return type. ``` scala; registerAnn(""foo"", TStruct((""bar"", TDouble)), { (x: Int) => Annotation(x / 2.0) } ; ```. In general, the `register` `HailRep` implicits can be overridden as well, but this case is common enough to merit a concise alternative.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/807:26,Simpl,Simple,26,https://hail.is,https://github.com/hail-is/hail/pull/807,1,['Simpl'],['Simple']
Usability,"Revert ""[batch] Simplify iptables rules for worker network namespaces…",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11266:16,Simpl,Simplify,16,https://hail.is,https://github.com/hail-is/hail/pull/11266,1,['Simpl'],['Simplify']
Usability,"Revert ""[query] NDArray Reshape Simplification""",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9877:32,Simpl,Simplification,32,https://hail.is,https://github.com/hail-is/hail/pull/9877,1,['Simpl'],['Simplification']
Usability,"Right now in master, the batch database gets cleared each time batch is deployed. Before we can remove this, we need to write all job task logs to GCS and insert the URI into the database. Otherwise, batch will try and read the logs for a previous job and not find them on the node.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5845:45,clear,cleared,45,https://hail.is,https://github.com/hail-is/hail/issues/5845,1,['clear'],['cleared']
Usability,"Right now it's not entirely clear what to do to ensure that a build works on the dataflow cluster, as well as to generate a set of benchmarks that capture a set of performance statistics well.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/156:28,clear,clear,28,https://hail.is,https://github.com/hail-is/hail/issues/156,1,['clear'],['clear']
Usability,"Rs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1NDBhNTVlYS05Y2JkLTRlZWEtYmJmZi00ZWU2NjlhZWJmYWQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjU0MGE1NWVhLTljYmQtNGVlYS1iYmZmLTRlZTY2OWFlYmZhZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""540a55ea-9cbd-4eea-bbff-4ee669aebfad"",""prPublicId"":""540a55ea-9cbd-4eea-bbff-4ee669aebfad"",""dependencies"":[{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.7.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-SETUPTOOLS-3180412""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,509],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Access Control Bypass](https://learn.snyk.io/lesson/broken-access-control/?loc&#x3D;fix-pr); 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr); 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13516:4017,Learn,Learn,4017,https://hail.is,https://github.com/hail-is/hail/pull/13516,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"Rs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhZWIyYjAwNS1lYjhhLTRiMzgtYjkwMS04YzRmNTY2OGM3ZDYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImFlYjJiMDA1LWViOGEtNGIzOC1iOTAxLThjNGY1NjY4YzdkNiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""aeb2b005-eb8a-4b38-b901-8c4f5668c7d6"",""prPublicId"":""aeb2b005-eb8a-4b38-b901-8c4f5668c7d6"",""dependencies"":[{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.7.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-SETUPTOOLS-3180412""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,509],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Access Control Bypass](https://learn.snyk.io/lesson/broken-access-control/?loc&#x3D;fix-pr); 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr); 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13517:3841,Learn,Learn,3841,https://hail.is,https://github.com/hail-is/hail/pull/13517,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"S V'_1` is a full SVD of `R` (which is small and easily computable), then `(U U_1[:, :k]) S[:k, :k] (V V_1[:, :k])'` is a reduced SVD of `A`. This is implemented in `KrylovFactorization.reduced_svd`. # Spectral moments; We can also easily compute estimates of spectral moments, i.e. moments of the set of all eigenvalues of `A'A`. The estimator exploits the following key facts:; * If `v` is a random vector of independent entries with mean 0, std. dev. 1 (equivalently `E(v) = 0`, `E(vv') = I`), then `E(v'Xv) = tr(X)`; * `tr(X)` equals the sum of the eigenvalues of `X`, `∑_i 𝜆_i`. More generally, if `f` is any matrix function, `tr(f(X)) = ∑_i f(𝜆_i)`.; * If `w` is a unit-norm vector, and `UR = AV` is the factorization `_krylov_factorization(A, w, p)`, then `w' f(A'A) w` is well-approximated by `w' f(VV'A'AVV') w = w'V f(R'U'UR) V'w = w'V f(R'R) V'w`, and is exact if `f` is a degree `2p+1` polynomial. Moreover, since `w` is the first column of `V`, i.e. `w = Ve_1`, the above further simplifies `w'V f(R'R) V'w = e'_1 f(R'R) e_1`. Finally, if `R = U_1 S V'_1` is an SVD, this reduces to `e'_1 f(R'R) e_1 = e'_1 f(V_1 S^2 V'_1) e_1 = e'_1 V_1 f(S^2) V'_1 e_1 = V_1[0, :] f(S^2) V_1[0, :]'`.; * The previous bullet has a block generalization. If `W` is an orthonormal matrix with `k` columns, and `UR = AV` is the factorization `_krylov_factorization(A, W, p)`, and `R = U_1 S V'_1` is an SVD, then `W' f(A'A) W` is well-approximated by `V_1[:k, :] f(S^2) V_1[:k, :]'`, and this is exact if `f` is a degree-p polynomial. We can combine the above into an estimator for the p-th spectral moment, `𝜇_p = ∑_i 𝜆_i^p`. We get an unbiased estimator by generating a random vector `v`, and using `E(v' (A'A)^p v) = tr((A'A)^p) = 𝜇_p`. The estimator can be computed exactly using the Krylov factorization as above, i.e. `v' (A'A)^p v = V_1[0, :] S^{2p} V_1[0, :]'`. But this estimator has large variance, so we can just average over many independent estimators. We combine `k` random vectors into a rando",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11045:1902,simpl,simplifies,1902,https://hail.is,https://github.com/hail-is/hail/pull/11045,1,['simpl'],['simplifies']
Usability,"Scala's reflective access warning refers to referencing a member of an anonymous class that is not also a member of the implemented int.rface / super-class. Because there is no concrete, non-anonymous type that contains that member, there is no normal means to access / call that member. Scala hacks around this issue by inserting a use of Java's reflection library to look up the member at run-time. The solution is simple: make the class named / non-anonymous/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3624:417,simpl,simple,417,https://hail.is,https://github.com/hail-is/hail/pull/3624,1,['simpl'],['simple']
Usability,"Screenshots should give the main overview of the changes; Questions for reviewers. Technical:; - [X] Are there any CSS conventions within Hail? I assume I need to migrate the ad-hoc ""style"" tags into CSS?; - [X] There still seems to be a bunch of unused space after truncated batch names. I'm not sure why. UX:; - [x] I've moved the status indicator to the front of the line. Is that ok?; - to help with layout within the batch-name box; - to put it in a reliable place (ie not moving around based on how long the name is); - [x] I'm not really sure I like the change to Pending. Curious for others' thoughts. #### Example: Batches page; (layout and columns). ##### Before:; <img width=""1735"" alt=""image"" src=""https://github.com/user-attachments/assets/c2966f9a-1802-479f-8fb4-3882a4552fad"">. ##### After:; <img width=""1748"" alt=""image"" src=""https://github.com/user-attachments/assets/4a6a5c5a-23a5-42a4-bc8e-6624f83880fa"">. #### Example: Batch Details page; (Renaming confusing 'Pending' field). ##### Before:; <img width=""1044"" alt=""image"" src=""https://github.com/user-attachments/assets/ebb3eb52-69d7-44ba-a2c5-f0f219a0b5bb"">. ##### After:; <img width=""1059"" alt=""image"" src=""https://github.com/user-attachments/assets/6fa01eae-567d-49e5-a59e-768bf936a1b1"">. Fixes #14628. Adds and shuffles content on the new Batches table",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14640:307,UX,UX,307,https://hail.is,https://github.com/hail-is/hail/pull/14640,1,['UX'],['UX']
Usability,See attached log. Error not clear:. `[Stage 0:==========> (596 + 168) / 2836]hail: write: caught exception: Job aborted.`. [hail.log.txt](https://github.com/broadinstitute/hail/files/269500/hail.log.txt),MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/391:28,clear,clear,28,https://hail.is,https://github.com/hail-is/hail/issues/391,1,['clear'],['clear']
Usability,"See each message below. ---. [[query/vds] Fix local_to_global with missing fill](https://github.com/hail-is/hail/pull/13325/commits/7d84189ca1a1b9460f4e0c96821cd43b8b0068fa) ; ; There was a logic error in constructFromIndicesUnsafe, if a missing; value was pushed, pushing a present value with the same index would not; clear the missing bit. ---. [[batch/test] Wait for job to be running in list_jobs_v2 test](https://github.com/hail-is/hail/pull/13325/commits/724da249255c06ea4ed1816704e4de51bd8f9b89). ---. [[qob] halve the number of active tests](https://github.com/hail-is/hail/pull/13325/commits/c2638702325526b29bebd416fceeedea52d42245). ---. [[batch] Turn off oms_agent in test and dev](https://github.com/hail-is/hail/pull/13325/commits/bbd65e4f66d41ef69c130091b0506087975c4851). ---",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13325:320,clear,clear,320,https://hail.is,https://github.com/hail-is/hail/pull/13325,1,['clear'],['clear']
Usability,"See the FAQ Style Guide. **Annotations**; - [ ] Do I need to define the types when using `annotatesamples table`?; - [ ] How does Hail annotate variants overlapping different intervals in an interval list?; - [ ] How do I input phenotype information into Hail?; - [ ] Is there a way to see all annotations present in the dataset?. **Expression Language**; - [ ] Can I use regular expressions in the Hail expression language?; - [ ] how can i filter samples based on whether or not they have a particular variant?. **Data Representation**; - [ ] How are insertion and deletion variants coded in the VDS?; - [ ] How are the boundaries for Pseudo-autosomal variants determined?. **Exporting Data**; - [ ] How can I export all global annotations to a file?; - [ ] How do I export my data so there are separate VCFs per chromosome?; - [ ] How do I export my annotations as a JSON file?; - [ ] How do I export updated call statistics (AC, AF) to the info field of the VCF?. **Developer Tools**; - [ ] Is there a style guide I should use for IntelliJ?. **Importing Data**; - [ ] How do I import data from a VCF file?; - [ ] How do I import annotations in JSON format?; - [ ] Is the UCSC file 0 or 1 based?. **Methods**; - [ ] Does Hail handle sex chromosomes differently in variantqc and sampleqc?; - [ ] How do I parse the variant annotations from VEP to find the worst functional consequence?; - [ ] How do I find all variants where the functional change on the canonical transcript results in a missense mutation?; - [ ] Is rHetHom calculated over indels+SNPs or just SNPs?; - [ ] Are sampleqc and variantqc calculated only on PASS variants?. **Optimize Pipeline**; - [ ] When should I write my data to a VDS file?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/812:18,Guid,Guide,18,https://hail.is,https://github.com/hail-is/hail/issues/812,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"Seeing if this passes tests. If so, it's a bit simpler",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8105:47,simpl,simpler,47,https://hail.is,https://github.com/hail-is/hail/pull/8105,1,['simpl'],['simpler']
Usability,Segfault and incorrect results for simple aggregation,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8076:35,simpl,simple,35,https://hail.is,https://github.com/hail-is/hail/issues/8076,2,['simpl'],['simple']
Usability,"Should be simple, run this library on logs before serving them:. https://github.com/ralphbean/ansi2html",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7400:10,simpl,simple,10,https://hail.is,https://github.com/hail-is/hail/issues/7400,1,['simpl'],['simple']
Usability,Simpler and more ergonomic!,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9981:0,Simpl,Simpler,0,https://hail.is,https://github.com/hail-is/hail/pull/9981,1,['Simpl'],['Simpler']
Usability,Simplifed RegUtils and retrofit to 0.1,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1863:0,Simpl,Simplifed,0,https://hail.is,https://github.com/hail-is/hail/pull/1863,1,['Simpl'],['Simplifed']
Usability,"Simplified `NDArrayRef` considerably by switching to `CodeBuilder` interface, adding `EmitCode.mapN`, and adding `PNDArrayCode`. . Thanks @patrick-schultz for contributing code for `EmitCode.mapN`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8568:0,Simpl,Simplified,0,https://hail.is,https://github.com/hail-is/hail/pull/8568,1,['Simpl'],['Simplified']
Usability,Simplified the dev deploy interface: just specify fully qualified branch (user/repo:branch) and a list of steps (instead of profile) which are transitively closed over dependencies. Pick up namespace from the user database.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6915:0,Simpl,Simplified,0,https://hail.is,https://github.com/hail-is/hail/pull/6915,1,['Simpl'],['Simplified']
Usability,"Simplified, increased contrast of link styling.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/651:0,Simpl,Simplified,0,https://hail.is,https://github.com/hail-is/hail/pull/651,1,['Simpl'],['Simplified']
Usability,Simplify BM.write_from_entry_expr,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3981:0,Simpl,Simplify,0,https://hail.is,https://github.com/hail-is/hail/pull/3981,1,['Simpl'],['Simplify']
Usability,Simplify Concordance,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3987:0,Simpl,Simplify,0,https://hail.is,https://github.com/hail-is/hail/pull/3987,1,['Simpl'],['Simplify']
Usability,Simplify GeneralRDD,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3443:0,Simpl,Simplify,0,https://hail.is,https://github.com/hail-is/hail/pull/3443,1,['Simpl'],['Simplify']
Usability,Simplify IBD,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3983:0,Simpl,Simplify,0,https://hail.is,https://github.com/hail-is/hail/pull/3983,1,['Simpl'],['Simplify']
Usability,Simplify LD prune schema,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3980:0,Simpl,Simplify,0,https://hail.is,https://github.com/hail-is/hail/pull/3980,1,['Simpl'],['Simplify']
Usability,Simplify RichRDDByteArray,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2265:0,Simpl,Simplify,0,https://hail.is,https://github.com/hail-is/hail/pull/2265,1,['Simpl'],['Simplify']
Usability,Simplify boolean equality comparisons,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5010:0,Simpl,Simplify,0,https://hail.is,https://github.com/hail-is/hail/pull/5010,1,['Simpl'],['Simplify']
Usability,Simplify fix,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4564:0,Simpl,Simplify,0,https://hail.is,https://github.com/hail-is/hail/pull/4564,1,['Simpl'],['Simplify']
Usability,Simplify ld_prune tie breaker,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5079:0,Simpl,Simplify,0,https://hail.is,https://github.com/hail-is/hail/pull/5079,1,['Simpl'],['Simplify']
Usability,Simplify literal nodes of primitive types or missing,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5141:0,Simpl,Simplify,0,https://hail.is,https://github.com/hail-is/hail/pull/5141,1,['Simpl'],['Simplify']
Usability,Simplify nested TableMapRows,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5259:0,Simpl,Simplify,0,https://hail.is,https://github.com/hail-is/hail/pull/5259,1,['Simpl'],['Simplify']
Usability,Simplify read logic,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2358:0,Simpl,Simplify,0,https://hail.is,https://github.com/hail-is/hail/pull/2358,1,['Simpl'],['Simplify']
Usability,Simplify the read logic by no longer reading multiple files at once. This functionality is preserved in the newly-added union function.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2358:0,Simpl,Simplify,0,https://hail.is,https://github.com/hail-is/hail/pull/2358,1,['Simpl'],['Simplify']
Usability,Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:19); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.expr.ir.Optimize$.is$hail$expr$ir$Optimize$$runOpt$1(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply$mcV$sp(Optimize.scala:25); at i,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:11369,Simpl,Simplify,11369,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30);,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:9406,Simpl,Simplify,9406,https://hail.is,https://github.com/hail-is/hail/issues/8338,2,['Simpl'],['Simplify']
Usability,Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:10374,Simpl,Simplify,10374,https://hail.is,https://github.com/hail-is/hail/issues/8338,2,['Simpl'],['Simplify']
Usability,Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30);,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:8438,Simpl,Simplify,8438,https://hail.is,https://github.com/hail-is/hail/issues/8338,2,['Simpl'],['Simplify']
Usability,Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:19); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.expr.ir.Optimize$.is$hail$expr$ir$Optimize$$runOpt$1(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply$mcV$sp(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply(Optimize.scala:21); at is.hail.expr.ir.Optimize$$anonfun$apply$,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:11454,Simpl,Simplify,11454,https://hail.is,https://github.com/hail-is/hail/issues/8338,3,"['Simpl', 'simpl']","['Simplify', 'simplifyValue']"
Usability,"Simply adds a /user page. Assigned to dan, but he's sick, should I assign someone else?. cc @cseed, @danking @jigold",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5752:0,Simpl,Simply,0,https://hail.is,https://github.com/hail-is/hail/pull/5752,1,['Simpl'],['Simply']
Usability,"Simply enables CORS from all domains. This would be insecure, but our endpoints are read-only operations on public GitHub resources, against a fixed list of users, there is no database to inject, and there are no cookies or local storage entries to steal. I think it's safe enough for the time being, but open to suggestions. Also expose /json endpoint to return all index.html data without rendering a page.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4945:0,Simpl,Simply,0,https://hail.is,https://github.com/hail-is/hail/pull/4945,2,['Simpl'],['Simply']
Usability,"Slightly tweak the `Bindings` class to store a single array of (name, type) pairs, with the various environments referring back to that array. This simplifies passes that want to create a single mutable state for each binding, even those that are bound in multiple environments (e.g. eval and agg).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14517:148,simpl,simplifies,148,https://hail.is,https://github.com/hail-is/hail/pull/14517,1,['simpl'],['simplifies']
Usability,"Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""92bcf51f-c710-4a85-9af1-5ae170a8797a"",""prPublicId"":""92bcf51f-c710-4a85-9af1-5ae170a8797a"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""41.0.5""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-3315975"",""SNYK-PYTHON-CRYPTOGRAPHY-3316038"",""SNYK-PYTHON-CRYPTOGRAPHY-3316211"",""SNYK-PYTHON-CRYPTOGRAPHY-5663682"",""SNYK-PYTHON-CRYPTOGRAPHY-5777683"",""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750"",""SNYK-PYTHON-CRYPTOGRAPHY-5914629"",""SNYK-PYTHON-CRYPTOGRAPHY-6036192"",""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use After Free](https://learn.snyk.io/lesson/use-after-free/?loc&#x3D;fix-pr); 🦉 [Access of Resource Using Incompatible Type (&#x27;Type Confusion&#x27;)](https://learn.snyk.io/lesson/type-confusion/?loc&#x3D;fix-pr); 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13938:10067,Learn,Learn,10067,https://hail.is,https://github.com/hail-is/hail/pull/13938,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"So this PR is mostly Patrick ripping out `RegionValues` in a lot of places in favor of just using a `Long`. I think this is useful because it simplifies the memory management situation by ensuring that the only regions to worry about at a particular `TableIR.execute` are the one on the `RegionContext` and any regions created in that `execute`. . One exception to this is that currently we have methods `toCRDDRegionValue` and `toCRDDPtr` to switch back to a `RegionValue` based CRDD for compatibility with all the join stuff (really, anything that uses `OrderedRVIterator`). In addition, this PR goes through and tries to systematically fix places where we were not manging regions correctly. This makes it somewhat subtle and hard to review. Some things I'd focus on are: . - Anywhere a boundary was removed.; - `TableKeyByAndAggregate` and `TableAggregateByKey` (noted below. I haven't done anything aggregator related prior to this, don't fully understand them); - Spot check of any of the places I listed under ""Addressed"" below.; - The implementations of `toCRDDRegionValue` and `toCRDDPtr`. . Addressed:. ```; - TableFilter; - TableSubset (just the parent of head and tail); - TableHead (via rvd.head); - TableTail (via rvd.tail); - TableExplode; - LinearRegression; ```. No change needed:. ```; - TableMapGlobals; - TableRange; - TableLiteral; - TableOrderBy; - TableDistinct; - TableKeyBy; - TableRename; - TableUnion; - TableParallelize; - TableRead; ```. Didn't / Minimally Changed, but wasn't really sure about:. ```; - TableAggregateByKey; - TableKeyByAndAggregate; - TableMapRows (specifically, the bit about computing `scanPartitionAggs); ```. cc @patrick-schultz @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8315:142,simpl,simplifies,142,https://hail.is,https://github.com/hail-is/hail/pull/8315,1,['simpl'],['simplifies']
Usability,"Some useful reading:; - [Phantom References in Java Reference Objects](http://www.kdgregory.com/index.php?page=java.refobj#PhantomReferences); - [java.lang.ref](https://docs.oracle.com/javase/8/docs/api/java/lang/ref/package-summary.html#reachability); - [java.lang.ref.PhantomReference](https://docs.oracle.com/javase/8/docs/api/java/lang/ref/PhantomReference.html). The structure is now this:; - `RegionPool` becomes `RegionPoolNativeMemoryOwner`; - a new `RegionPool` class is simply a (unique) reference to a `RegionPoolNativeMemoryOwner`; - `RegionPoolNativeMemoryFreer` is a `PhantomReference` to `RegionPool`; - There is just one instance of all three classes in memory at any given time.; - A single thread is blocking on the reference queue waiting for something to free. How it works:; - The reachability of `RegionPool` defines the reachability the native memory.; - When the `RegionPool` becomes unreachable, the JVM places the corresponding `RegionPoolNativeMemoryFreer` on its reference queue.; - The `cleaner` thread removes the phantom reference from the queue; - At this point, the `RegionPool` is effectively gone, there are no references to it anywhere. Because of that fact, the `RegionPoolNativeMemoryFreer` can free all the native memory by calling `RegionPoolNativeMemoryOwner.free`.; - The `cleaner` thread removes the `RegionPoolNativeMemoryFreer` from the `refs` set which allows the `RegionPoolNativeMemoryFreer` itself to be GC'ed. We do leak the cleaner thread. It will live for the entirety of the JVM process, which seems fine since once you start Hail, you probably want to keep using Hail. I can't find a reference for this, but I'm fairly certain you need to prevent the PhantomReference itself from being GC'ed. That's why I have that set of refs.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8203:480,simpl,simply,480,https://hail.is,https://github.com/hail-is/hail/pull/8203,1,['simpl'],['simply']
Usability,"Spark depends on a very old verison of SLF4J. We cannot upgrade. We added this dependency ages ago to fix some undocumented issue with logging and SLF4J. It seems reasonable to me that we should just accept whatever version of SLF4J that Spark provides. This removes this message:; ```; SLF4J: No SLF4J providers were found.; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.; SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.; SLF4J: Ignoring binding found at [jar:file:/usr/lib/spark/jars/log4j-slf4j-impl-2.17.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.; ```. Which, IMO, really should be a stop-the-world error.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14055:111,undo,undocumented,111,https://hail.is,https://github.com/hail-is/hail/pull/14055,1,['undo'],['undocumented']
Usability,"Stacked on #2466 . 1. Not sure when region value builders should be cleared. I put them in this PR. If they are needed, then a `clear()` needs to be added to `VariantSampleMatrix.join`. 2. `coalesce` is giving me a different number of partitions for OrderedRDD2 compared to OrderedRDD for the test of identical variants. I think it's because the function `calculateKeyRanges` is different between the two. 3. I know I should incorporate the RegionValueVariant and clean up my BitPackedVectorView, but I wanted to have something that's stable so Genotype can be ripped out.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2467:68,clear,cleared,68,https://hail.is,https://github.com/hail-is/hail/pull/2467,2,['clear'],"['clear', 'cleared']"
Usability,"Stacked on #7000. Adds a new IR renderer in Python which integrates a CSE pass. It would be easy to argue that a CSE pass should be separate from the renderer. But we can't easily make the Python IR mutable, because a given IR tree might be used in multiple larger IR (which is exactly what this pass is taking advantage of!) so mutation which depends on the larger context won't work. So rather than rebuild the entire IR every time we print, I decided for now this is best integrated into the renderer. I think longer term this should be ported to scala as a full CSE pass (which first does hash-consing/value-numbering to find all repeated subexpressions). This is not a simple algorithm, but I did my best to make it understandable. If anything feels harder to follow than it should be, I'd like to try to improve it.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7009:674,simpl,simple,674,https://hail.is,https://github.com/hail-is/hail/pull/7009,1,['simpl'],['simple']
Usability,"Stacked on #8283. This is WIP that converts the `ContextRDD` in `RVD` to a `ContextRDD[Long]`. This clarifies the region ownership semantics. Before, it wasn't clear what relation there was between the context region and the `RegionValue` region.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8290:160,clear,clear,160,https://hail.is,https://github.com/hail-is/hail/pull/8290,1,['clear'],['clear']
Usability,"Stacked on #9400 . This PR modifies stream consumers' emit cases to look up `separateRegions` on the child stream's type, using that to construct the appropriate `StagedRegion`, then passing that region into `emitStream`. It also removes `EmitAllocationStrategy`, as this is now encoded in the IR. We may at some point want something similar to choose what allocation behavior to generate during lowering, but that is left for future work. Getting this to work well required some changes to the `StagedRegion` design. First, when a stream node needs to create a fresh region which it owns, the new region is now created as a child of the `outerRegion`, not the consumer's `eltRegion` as was done before. This simplifies the semantics of the parent/child relationship: now the lifetime of a child region is always nested inside that of its parent. The second change also has to do with the tree structure of `StagedRegion`s. Before, any `StagedRegion` could have children, which meant we could have arbitrarily deep trees of `StagedRegion`s, and also that every `StagedRegion` had to know whether children would be genuine sub-regions or just aliases of the parent. Now, the `StagedRegion` hierarchy is split into `ParentStagedRegion` and `ChildStagedRegion`. A `ParentStagedRegion` can have children, while a `ChildStagedRegion` cannot. The main effect of this is that the `allowAllocations` bit is no longer hereditary. A `ChildStagedRegion` can be converted into a `ParentStagedRegion`, and hence another generation of children can be created, but now doing so requires explicitly specifying `allowAllocations` for the new generation. In emit, this happens at stream consumers, where the allocation strategy will be read off the PType of the stream. The full hierarchy is now:; * `StagedRegion` - The root class is the type for passing around unowned regions. Besides writing into the region, the method `asRoot` allows converting to a `RootStagedRegion` by specifying `allowAllocations`; * `ParentS",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9401:709,simpl,simplifies,709,https://hail.is,https://github.com/hail-is/hail/pull/9401,1,['simpl'],['simplifies']
Usability,"Stacked on #9489 . This PR enforces a stronger invariant on `lir.Block`: a block can never contain dead code, i.e. code that follows a control statement. Prior to this, dead code could be added to a block, only to be removed later. But it's just as easy to have `Block.append` check if a statement to be added would be dead, and just not add it in the first place. And having the stronger invariant always hold allows for some simplifications in the code, in addition to a simpler mental model.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9490:427,simpl,simplifications,427,https://hail.is,https://github.com/hail-is/hail/pull/9490,2,['simpl'],"['simpler', 'simplifications']"
Usability,"Stacked on https://github.com/hail-is/hail/pull/5354. This is a very naive implementation of approximate quantiles that @patrick-schultz and I wrote last Friday. The diff will only contain ApproximateQuantiles.cpp and ApproximateQuantiles_test.cpp and a one-line change to the Makefile when https://github.com/hail-is/hail/pull/5331 is merged (which simplifies the addition of new test files to `Makefile`). I'm not sure what testing means in this context because it is an approximate algorithm. We added a test that calculates the ranks for a bunch of elements and prints them. This at least verifies we do not segfault on a simple example. Some subset of the interested parties: @jbloom22 @cseed @catoverdrive @patrick-schultz. Next steps:; - translate to Scala and hook into an actual aggregator; - hook into some future C++ aggregator infrastructure. ---; # The Algorithm Idea. The idea is to keep a logarithmic amount of data but still be able to reproduce an approximation of the original rank (how many elements are less than the given element). We start with a buffer of size `2^N`. ```; +-------------+; | |; +-------------+; ```. We insert elements from the stream until the buffer is full:. ```; +-------------+; | 1 2 ... 2^N |; +-------------+; ```. Then we 1) sort the buffer, 2) allocate another buffer of equal size, and 3); copy half the elements, randomly choosing to start from the zeroth or oneth; element. In the figure below we started with the zeroth element. We now consider; the first buffer empty. Note that the second buffer is only half-full. ```; +-------------------------------+; 2 | 1 3 ... 2^N - 1 |; +-------------------------------+; 1 | |; +-------------------------------+; ```. We now fill the first buffer again and repeat the process, now filling the; second buffer entirely and emptying the first buffer again. Because the second; buffer is now full, we run this compaction process on it, producing a third; buffer which is one half full. The probability of an",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5332:350,simpl,simplifies,350,https://hail.is,https://github.com/hail-is/hail/pull/5332,2,['simpl'],"['simple', 'simplifies']"
Usability,Stacked on: https://github.com/hail-is/hail/pull/5891. I found getting .in (or not) consistent between the configuration and the files was just error prone. I think this is just simpler.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5907:178,simpl,simpler,178,https://hail.is,https://github.com/hail-is/hail/pull/5907,1,['simpl'],['simpler']
Usability,"Stacked on: https://github.com/hail-is/hail/pull/7440. Changes:; - start the instance with a 1-time use activation token in the metadata; - on activation, clear the activation token, send the worker the normal token and batch-gsa-key; - upgrade the worker image to -6 which has the latest cloud-sdk (v269). As far as I can tell, the metadata server is still available from within the worker container after the upgrade, so I'm not 100% sure why this change was necessary. However, it will make things easier to lock down later. I think the picture we want is:; - store the worker and batch logs in different buckets,; - the worker instance service account only has instance.delete* and object.insert on the worker log bucket,; - the service account used by the worker only has object.insert on the batch logs bucket,; - we block access to the metdata srever from within the docker containers.Leaving this for reference:. https://stackoverflow.com/questions/32512597/block-docker-access-to-specific-ip. This isn't 100% trivial because the metadata server is also the DNS server. We could try blocking everything except udp/53. I think ideally, we'd put the docker containers on a different network that could only route to the outside and use a public DNS server like 8.8.8.8. *An instance doesn't need extra permissions to shut itself down, so we could just do `shutdown -h now` on the worker and have the batch driver actually delete the instance. I think once this goes in we can try scale up tests again.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7447:155,clear,clear,155,https://hail.is,https://github.com/hail-is/hail/pull/7447,1,['clear'],['clear']
Usability,"Stacks on #5437. When #5437 is merged, only change will be the addition of a `requires_auth` decorator - which redirects users to the login page when unauthorized, keeping a reference to the referring url - the protection of all routes other than login/logout, and 4 lines to the `/auth0-callback` route to read/clear the referrer session cookie. Admin pages are currently protected in the same way, but I can drop protection from whatever routes you wish. cc @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5448:312,clear,clear,312,https://hail.is,https://github.com/hail-is/hail/pull/5448,1,['clear'],['clear']
Usability,"String,qual:Float64,filters:Set[String],info:Struct{CIEND:Array[Int32],CIPOS:Array[Int32],CS:String,END:Int32,IMPRECISE:Boolean,MC:Array[String],MEINFO:Array[String],MEND:Int32,MLEN:Int32,MSTART:Int32,SVLEN:Array[Int32],SVTYPE:String,TSD:String,AC:Array[Int32],AF:Array[Float64],NS:Int32,AN:Int32,EAS_AF:Array[Float64],EUR_AF:Array[Float64],AFR_AF:Array[Float64],AMR_AF:Array[Float64],SAS_AF:Array[Float64],DP:Int32,AA:String,VT:Array[String],EX_TARGET:Boolean,MULTI_ALLELIC:Boolean,STRAND_FLIP:Boolean,REF_SWITCH:Boolean,DEPRECATED_RSID:Array[String],RSID_REMOVED:Array[String],GRCH37_38_REF_STRING_MATCH:Boolean,NOT_ALL_RSIDS_STRAND_CHANGE_OR_REF_SWITCH:Boolean,GRCH37_POS:Int32,GRCH37_REF:String,ALLELE_TRANSFORM:Boolean,REF_NEW_ALLELE:Boolean,CHROM_CHANGE_BETWEEN_ASSEMBLIES:Array[String]},a_index:Int32,was_split:Boolean,old_locus:Locus(GRCh38),old_alleles:Array[String]},entry:Struct{GT:Call}}; after: Matrix{global:+Struct{},col_key:[s],col:Struct{s:String},row_key:[[locus,alleles]],row:Struct{locus:Locus(GRCh38),alleles:Array[String],rsid:String,qual:Float64,filters:Set[String],info:Struct{CIEND:Array[Int32],CIPOS:Array[Int32],CS:String,END:Int32,IMPRECISE:Boolean,MC:Array[String],MEINFO:Array[String],MEND:Int32,MLEN:Int32,MSTART:Int32,SVLEN:Array[Int32],SVTYPE:String,TSD:String,AC:Array[Int32],AF:Array[Float64],NS:Int32,AN:Int32,EAS_AF:Array[Float64],EUR_AF:Array[Float64],AFR_AF:Array[Float64],AMR_AF:Array[Float64],SAS_AF:Array[Float64],DP:Int32,AA:String,VT:Array[String],EX_TARGET:Boolean,MULTI_ALLELIC:Boolean,STRAND_FLIP:Boolean,REF_SWITCH:Boolean,DEPRECATED_RSID:Array[String],RSID_REMOVED:Array[String],GRCH37_38_REF_STRING_MATCH:Boolean,NOT_ALL_RSIDS_STRAND_CHANGE_OR_REF_SWITCH:Boolean,GRCH37_POS:Int32,GRCH37_REF:String,ALLELE_TRANSFORM:Boolean,REF_NEW_ALLELE:Boolean,CHROM_CHANGE_BETWEEN_ASSEMBLIES:Array[String]},a_index:Int32,was_split:Boolean,old_locus:Locus(GRCh38),old_alleles:Array[String]},entry:Struct{GT:Call}}; ```; It is not clear how these differ (if at all?).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4524:2201,clear,clear,2201,https://hail.is,https://github.com/hail-is/hail/issues/4524,1,['clear'],['clear']
Usability,"Style guide draft with 3 sample commands and HTML/JS code . Not intended for merging to master. If you're happy with this, then I'll update the rest of the commands with the style guide I specified. The style guide does not address how to format tables (work in progress). **Style Guide:**; - docs/DocsStyleGuide.md. **Example Markdown Command Files to look at:**; - docs/commands/annotateglobal_expr; - docs/commands/annotateglobal_list; - docs/commands/annotateglobal_table. **HTML/JS code:**; - docs/index.html; - docs/buildDocs.js",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/569:6,guid,guide,6,https://hail.is,https://github.com/hail-is/hail/pull/569,4,"['Guid', 'guid']","['Guide', 'guide']"
Usability,Style: spaces in simple one line statements.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/513:17,simpl,simple,17,https://hail.is,https://github.com/hail-is/hail/pull/513,2,['simpl'],['simple']
Usability,"Submit = () => {; console.log(this.bar) //prints foo; }. // Don't; onSubmitBad() {; console.log(this.bar) //may be undefined; }; }. const barrer = new Something();; console.info(""good"", barrer.onSubmit());; console.info(""bad"", barrer.onSubmitBad());; ```. # Tips . ### Client-side routing; Wrap a normal anchor tag in `<Link ></Link>`; ex:; ```jsx; <Link href='/path/to/page'><a>Page Name</a></Link>; ```. This simply adds the client-side routing logic, and passes the href to <a href=. . ### Prefetching; One of the neat things about Next is how easy it makes prefetching pages. This allows perceived page loading times on the order of 5ms, even when the page requires very complex state (say a GraphQL or series of REST calls with large responses). ```jsx; <Link href='/expensive-page' prefetch><a>Expensive Page</a></Link>; ```; ### Make your app do ONLY server-side routing; Meaning every time you click on a link in your page, you hit the server, just like the first visited page. . Simply use `<a>` directly. ### Caching and sidecar requests; Broadly, there are three strategies: browser caching, server caching, and service-worker caching. In this project we will likely use all three. Server caching is an excellent strategy for pages that serve only public data. In this strategy we pre-generate the static html, serve that, and invalidate the cache once in a while. An example of this can be found in https://github.com/hail-is/hail/pull/5162/commits/e131a931c58a204104d45d0010341423b1ab9500; * Care needs to be taken with the server-side option, not to leak authentication state, since this will, at least by default, be shared across all users. . # Styleguide; 1. Typescript everywhere. # Performance; 1. [React SSR vs Nunjucks](https://malloc.fi/performance-cost-of-server-side-rendered-react-node-js) ; * [React SSR performance (well, React DOM in general) is a focus for 2019](https://github.com/facebook/react/issues/13525); ![v2-chart-1](https://user-images.githubusercontent.com/5543",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5162:14131,Simpl,Simply,14131,https://hail.is,https://github.com/hail-is/hail/pull/5162,1,['Simpl'],['Simply']
Usability,"Summary of Changes; - Preserve MT structure for entry fields; - Harmonize MT and T `show` interface in a backwards compatible way; - Simplify `Expression.show` code slightly; - A comprehensive, colocated set of `show` tests",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6089:133,Simpl,Simplify,133,https://hail.is,https://github.com/hail-is/hail/pull/6089,1,['Simpl'],['Simplify']
Usability,"Summary of changes:; - Added index_bgen to Python Backend; - Move most Backend functions to SparkBackend. Everything about the current code assumes a single user, but the ServiceBackend will have a different, mutli-user interface.; - Added Backend and FS to ExecuteContext.; - renamed Backend clear => stop",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8386:293,clear,clear,293,https://hail.is,https://github.com/hail-is/hail/pull/8386,1,['clear'],['clear']
Usability,"Summary of changes:; - At the end of schedule, log total time and number of jobs scheduled.; - Only log database timing if total query took >20ms.; - Make sure context_manager is cleaned up in gear.Transaction.; - Limit workers to max 250 requests/s incoming to batch driver. I used an nginx limit to do this, but it is per pod, so I turned off autoscaling and increased CPU to roughly what I saw when 100K cores was hammering against a dead driver.; - Increase the worker exponential backoff from 30s to 2m. The main thing I was trying to address was the driver getting overloaded when trying to restart with a large standing cluster. It isn't totally clear why the cluster failed in the first place. I made a few other changes to mitigate the issue before adding the nginx limit, so I'm not 100% sure which combination of changes fixed the problem:. - I put a 60s timeout on the scheduler loop. This probably isn't necessary, although the scheduler does get bogged down if many of the instances it tries to schedule on are not responding. - I put a 10s timeout on mark_job_complete. - I put a maximum of 150 active mark_job_complete requests being processed, and returned service unavailable when the max was hit. I don't think this problem is completely solved. I think we want to keep the driver in the ~80% CPU load regime where everything is being processed quickly. I think we want to back off workers if, for example, mark_job_complete is taking more than 95%ile in the not overloaded case. I'm not sure who should do this, although it could be the batch-driver if internal-gateway is doing front-line throttling. Exiting in the overload case should be very cheap. We might want to prioritize mark_job_complete over the scheduler in that case, too. @danking I'd love to get some metrics for the scheduling loop: schedules/s, jobs/s, and time once this goes in. Should I switch to logging json to make that easier?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8149:653,clear,clear,653,https://hail.is,https://github.com/hail-is/hail/pull/8149,1,['clear'],['clear']
Usability,"Summary of changes:; - rip out method wrapping from Emit level; - Emit now uses locals everywhere instead of fields; - improved SimplifyControl; - Changed CodeRegion to call Memory directly, instead of calling Region methods. This saves a bytecode on native memory accesses.; - add lir.SplitMethod to break up methods. For large methods, this breaks the body of each basic block into one (or more) external functions and spills locals to fields. Splitting is controlled by SplitMethod.TargetMethodSize, currently set to 2000. PR'ing for testing. I have a few more improvements and then I will performance test. Here are the method sizes after splitting for the large `MakeStruct` example:. ```; is/hail/codegen/generated/C8; <init> 4; apply 235; apply 19; setPartitionIndex 11; addPartitionRegion 5; __wrapped16 30; __wrapped17 2003; __wrapped18 2008; __wrapped19 2006; __wrapped20 2008; __wrapped21 2006; __wrapped22 2008; __wrapped23 2006; __wrapped24 2008; __wrapped25 2006; ... you get the picture, remaining 100 methods elided ...; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8333:128,Simpl,SimplifyControl,128,https://hail.is,https://github.com/hail-is/hail/pull/8333,1,['Simpl'],['SimplifyControl']
Usability,"Summary: hailctl batch list --help; ```; usage: hailctl batch list [-h] [--query QUERY] [--limit LIMIT] [--all] [--before BEFORE] [--full] [--no-header] [-o O]. List batches. optional arguments:; -h, --help show this help message and exit; --query QUERY, -q QUERY; see docs at https://batch.hail.is/batches; --limit LIMIT, -l LIMIT; number of batches to return (default 50); --all, -a list all batches (overrides --limit); --before BEFORE start listing before supplied id; --full when output is tabular, print more information; --no-header do not print a table header; -o O specify output format (json, yaml, csv, tsv, or any tabulate format); ```. Details:; * Default listing to a limit of 50 records, once batch statuses are; cached from `list_batches`, this should result in 1 http request for the; default behavior of this tool.; * Teach --limit option to cap the number of records returned; * Teach --all to override --limit; * Teach --before to pass a last_batch_id query parameter to list_batches; * Teach --full to print all status information; * Teach --no-header to enable not printing a header for tabular output; * Teach -o {format} to change the output format the following are supported:; - json: always full json output, like hitting the list enpoint manually; - yaml: like json, but yaml!; - csv/tsv: simple comma/tab separated output for machine processing; - any python-tabulate output format, listed here:; https://github.com/astanin/python-tabulate#table-format. The only default that has been changed is the listing limit.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9557:1317,simpl,simple,1317,https://hail.is,https://github.com/hail-is/hail/pull/9557,1,['simpl'],['simple']
Usability,"T 21 lock struct(s), heap size 1136, 12 row lock(s), undo log entries 5; MySQL thread id 962402, OS thread handle 139741222766336, query id 6809292838 10.32.5.50 jigold updating; UPDATE instances_free_cores_mcpu; SET free_cores_mcpu = free_cores_mcpu + cur_cores_mcpu; WHERE instances_free_cores_mcpu.name = in_instance_name; *** (1) WAITING FOR THIS LOCK TO BE GRANTED:; RECORD LOCKS space id 1578686 page no 3 n bits 72 index PRIMARY of table `jigold`.`instances_free_cores_mcpu` trx id 1215034153 lock_mode X locks rec but not gap waiting; Record lock, heap no 3 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d6a69676f6c642d7374616e646172642d62; asc batch-worker-jigold-standard-b; (total 34 bytes);; 1: len 6; hex 0000486bf32c; asc Hk ,;;; 2: len 7; hex 600001287513cb; asc ` (u ;;; 3: len 4; hex 80002de6; asc - ;;. *** (2) TRANSACTION:; TRANSACTION 1215034156, ACTIVE 0 sec inserting; mysql tables in use 6, locked 6; 22 lock struct(s), heap size 1136, 13 row lock(s), undo log entries 7; MySQL thread id 962349, OS thread handle 139741180090112, query id 6809294284 10.32.5.50 jigold update; INSERT INTO batch_inst_coll_cancellable_resources (batch_id, inst_coll, token, n_running_cancellable_jobs, running_cancellable_cores_mcpu); VALUES (OLD.batch_id, OLD.inst_coll, rand_token, -1, -OLD.cores_mcpu); ON DUPLICATE KEY UPDATE; n_running_cancellable_jobs = n_running_cancellable_jobs - 1,; running_cancellable_cores_mcpu = running_cancellable_cores_mcpu - OLD.cores_mcpu; *** (2) HOLDS THE LOCK(S):; RECORD LOCKS space id 1578686 page no 3 n bits 72 index PRIMARY of table `jigold`.`instances_free_cores_mcpu` trx id 1215034156 lock_mode X locks rec but not gap; Record lock, heap no 3 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d6a69676f6c642d7374616e646172642d62; asc batch-worker-jigold-standard-b; (total 34 bytes);; 1: len 6; hex 0000486bf32c; asc Hk ,;;; 2: len 7; hex 60000128751",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11959:1985,undo,undo,1985,https://hail.is,https://github.com/hail-is/hail/pull/11959,1,['undo'],['undo']
Usability,"The RNGSplit emitter assumed the components of `dynBitstring` were always inferred to be required, but it seems to be impossible to construct the bitstrings in a way that the requiredness inference can always see that. This first makes the type of `dynBitstring` more constrained to simplify the emitter. Before it was allowed to be a single long, or an arbitrarily nested tuple all of whose leaves are longs. But I believe only flat tuples are actually being generated, so this makes that the enforced type. Then the emitter asserts all fields are present at runtime.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12060:283,simpl,simplify,283,https://hail.is,https://github.com/hail-is/hail/pull/12060,1,['simpl'],['simplify']
Usability,"The `BlockingInputBuffer` allocates a somewhat large array of; bytes each time it is allocated. As such, it is important to avoid; allocating a `BlockingInputBuffer` for each row if each row is; significantly smaller than the buffer size. This change removes problematic methods from `RegionValue`, `RVD`,; and `CodecSpec` that have poor performance. In every case, a small; code change enables one allocation per-partition. This required the; implementation of `RestartableByteArrayInputStream` which is a thread-; unsafe version of `ByteArrayInputStream` that, crucially, can; be restarted with a new `Array[Byte]`. ---. I rebased this off of my shuffler branch. With this change on the shuffler branch (which otherwise didn't change Spark shuffles), I saw these benchmark results:; ```; # hailctl dev benchmark compare more-allocs.json fewer-allocs.json; Name Ratio Time 1 Time 2; ---- ----- ------ ------; shuffle__key_rows_by_mt 105.2% 25.528 26.860; shuffle__key_rows_by_4096_byte_rows 102.7% 1.052 1.081; shuffle__key_rows_by_65k_byte_rows 102.7% 19.311 19.832; shuffle__order_by_10m_int 47.0% 93.554 44.011; ----------------------; Geometric mean: 85.0%; Simple mean: 89.4%; Median: 102.7%; ```. The first benchmark is dominated by LZ4 calls in Kryo. The second and third benchmarks are dominated by the construction of the MT. I suspect this is due to unnecessary data copying (when Hail constructs an array of structs it creates the structs out of line and copies them into place).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7108:1163,Simpl,Simple,1163,https://hail.is,https://github.com/hail-is/hail/pull/7108,1,['Simpl'],['Simple']
Usability,"The `HailContext.getOrCreate` method seems to have been broken in #5512. This patch fixes the issue and adds a regression test so that it won't break again. Since this test must add create a new Hail context, I had to add a gradle task that runs every suite in a separate JVM. I'm not a gradle expert, so if there's a simpler way to accomplish this execution mode, feel free to suggest :).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5871:318,simpl,simpler,318,https://hail.is,https://github.com/hail-is/hail/pull/5871,1,['simpl'],['simpler']
Usability,"The `delete_azure_batch_instances` step is failing on various PRs with the error `jq: command not found`. This appears to be because we do not pin the version for the `mcr.microsoft.com/azure-cli` image, and while that image was previously based on the Alpine image, [now it is based on the Azure Linux image](https://learn.microsoft.com/en-us/cli/azure/run-azure-cli-docker), and does not appear to have `jq` (or `kubectl`) preinstalled on it. This change updates the commands run in the `azure-cli` container for this CI step to install `jq` and `kubectl` via `curl` before running the relevant commands. The `curl` commands were tested locally by running `docker run -it mcr.microsoft.com/azure-cli` and trying them out in the image's shell. This change also adds the installation commands in the other place where this image is used (when cleaning up from `buildImage2` jobs that are run in Azure).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14677:318,learn,learn,318,https://hail.is,https://github.com/hail-is/hail/pull/14677,1,['learn'],['learn']
Usability,The `repr` for SparkContext displays like this: `<pyspark.context.SparkContext object at 0x7ff241c5f690>`. We don't have a history available for a SparkContext object. Not clear how to fix this other than use `sc` if a non-default arg is given for `sc` in HailContext constructor.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2180:172,clear,clear,172,https://hail.is,https://github.com/hail-is/hail/issues/2180,1,['clear'],['clear']
Usability,"The actual necessary fix is `history.pushState("""", document.title, loc.pathname + loc.search);` instead of `history.pushState("""", document.title, loc.pathname);`. Given the nervousness around JS and its use in docs (many imperative scripts interacting), I've decided to take a simpler approach that guarantees that Firefox will have behavior inconsistent with Chrome/Safari. In practice it isn't so bad (initially scrolls too far instead of starting at top of page). There may also be a chance that the browser's built-in scroll will act after the JS command, but there simply isn't a better way (besides setting a longer timeout), or the version that alters the url.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7385:277,simpl,simpler,277,https://hail.is,https://github.com/hail-is/hail/pull/7385,2,['simpl'],"['simpler', 'simply']"
Usability,"The asyncio event loop only keeps weak references to tasks, so wherever we call `asyncio.create_task` we need to ensure that we keep a strong reference to its result. Specifically, `BackgroundTaskManager` needs to keep strong references not weak references to the tasks it creates. This is easy to do without accumulating garbage by using a done callback on the task to remove itself from the set. However, this felt iffy with the threadsafe futures, which were only used in sync.py anyway, so I pushed that functionality directly into sync.py and removed it from the `BackgroundTaskManager`. To simplify the ownership story for tasks, this changes `BackgroundTaskManager` to *not* return the task and instead hold onto strong references. If a client wants a reference to the task it creates, it should call `asyncio.create_task` directly and manage the lifecycle of the spawned task. This required only a few small changes in worker.py since most of the codebase does not assign the result of `task_manager.ensure_future`. The only change that gave me pause was the handling of `mjs_fut`, whose lifetime is a little tricky since it is potentially passed to yet another task. I think this shows a general weakness in the handling of ownership and lifetimes in between the Job and Worker classes and think a larger refactor can make this less error-prone but is out of scope for this fix. So I'd appreciate an especially scrutinizing look at that piece of the code.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12692:596,simpl,simplify,596,https://hail.is,https://github.com/hail-is/hail/pull/12692,2,"['pause', 'simpl']","['pause', 'simplify']"
Usability,"The auth driver currently uses the old secret format. The new secret format; includes SSL information. This change defines the secret format once in hailtop; and uses it everywhere. I also simplified the auth secret format: everyone uses; SSL/TLS to talk to databases now, so assume all necessary files are present.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9113:189,simpl,simplified,189,https://hail.is,https://github.com/hail-is/hail/pull/9113,1,['simpl'],['simplified']
Usability,The bulk of this PR is plumbing to change `TLocus(ReferenceGenome) => TLocus(String)` and bring reference genomes off of global mutable state onto the Backend (both in scala and python). This allows mutable reference genomes in QoB and by extension liftovers. This also removes some duplication between local_backend and spark_backend in python and simplifies the initialization of reference genomes.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12699:349,simpl,simplifies,349,https://hail.is,https://github.com/hail-is/hail/pull/12699,1,['simpl'],['simplifies']
Usability,"The current `_variants_per_file` interface isn't usable by mortals. We should have something like `hl.import_bgen('/path/to/bgen', ..., variants=ht.key)` where `ht` is a table with key locus and alleles. This can use the new index file format to get the set of variants to load. Depends on: https://github.com/hail-is/hail/issues/4018",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4019:49,usab,usable,49,https://hail.is,https://github.com/hail-is/hail/issues/4019,1,['usab'],['usable']
Usability,The current help in `Representation of sequence data in Hail` is not clear regarding the `altAllele`; for example make clear that `aa.ref` should be `v.altAllele.ref`.; Cheers,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/433:69,clear,clear,69,https://hail.is,https://github.com/hail-is/hail/issues/433,2,['clear'],['clear']
Usability,"The current implementation of `Container.delete`,; ```python; async def delete(self):; log.info(f'deleting {self}'); self.deleted_event.set(); await self.delete_container(); ```. provokes a race between the `run` task and the `delete` task. The former sees the `deleted_event`, raises and jumps to `delete_container`, so both tasks might be trying to delete the container at the same time. This races here,; ```python; if self.container_is_running():; try:; log.info(f'{self} container is still running, killing crun process'); self.process.terminate(); self.process = None; await check_exec_output('crun', 'kill', '--all', self.container_name, 'SIGTERM'); except asyncio.CancelledError:; raise; except Exception:; log.exception('while deleting container', exc_info=True). ```; where we might queue two `crun kill` calls, the second of which fails because it cannot find any such container. Calling `delete_container` from within the `delete` method is a remnant from an older implementation of deletion, before we used `deleted_event` to explicitly signal to the `run` task that it's time to wrap things up. This is no longer necessary. The simplified way to think about deletion now is:. - Calling `Container.delete` just sets an `asyncio.Event` that the container has been deleted.; - Anything in the `run` task of the container that can be interrupted by a deletion waits on that event and short circuits the run process if it is set.; - The `run` task is the only task that calls `delete_container`, and always calls it when it is done.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10714:1142,simpl,simplified,1142,https://hail.is,https://github.com/hail-is/hail/pull/10714,1,['simpl'],['simplified']
Usability,"The decoder uses a `StagedArrayBuilder` to hold elements while being sorted. The array builder is stored in a class field. When the same decoder function is called more than once, that array builder is reused. Before this fix, the array builder was never cleared, so if the decoder function was called more than once, the array builder would still contain the elements from previously decoded dicts. Since it's highly non-obvious that you need to call `clear` immediately after `new StagedCodeBuilder`, this PR makes the constructor take a CodeBuilder, and always inserts a clear at the call site. I also took the opportunity to CodeBuilderify the rest of the interface.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13939:255,clear,cleared,255,https://hail.is,https://github.com/hail-is/hail/pull/13939,3,['clear'],"['clear', 'cleared']"
Usability,"The default OS for dataproc instances is based on debian8, which uses g++-4.9.x; That has a libstdc++ with an old-ABI implementation of std::list and std::string. To build; a libhail.so which can link against the default libstdc++ on g++-4.x systems, we need to; avoid the use of std::string inside libhail.so (but it's ok to use it in dynamic-generated code,; which will be built with a compiler which matches the libstdc++). This commit introduces a minimal hail::hstring and hail::hstringstream with the necessary; functionality for NativeModule.cpp. Since these don't have a std::hash, I also imported the source code for the (free and uncopyrighted); MurmurHash3, a fast high-quality (but non-crypto) hash function which can give a 128bit hash. ; This simplifies the calculation of the 80bit hash used for module-keys. In addition to using these prebuilt libraries, we also need to get g++ installed on the dataproc; master node, which could be done with ""sudo apt-get install build-essential"". But I'm not yet sure where; that initialization step needs to go.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4422:757,simpl,simplifies,757,https://hail.is,https://github.com/hail-is/hail/pull/4422,1,['simpl'],['simplifies']
Usability,"The default options are all false. If left all false, the user gets an clear error saying that they must include at least one entry field. This forces users to think about what they actually need to import, as it can make a big difference on, say, UKBB until we have better tech. I've updated the docs and tests accordingly. @cseed suggested that we remove BGEN v1.1 support if nobody is reliant on it anymore. I've asked on Slack. So I didn't add more complexity to support these options for BGEN v1.1. Rather this PR requires GT and GP set to true if any file is 1.1 (as explained in docs and error message). If nobody minds, we can rip out BGEN 1.1 and update the docs simultaneously in a subsequent PR.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2930:71,clear,clear,71,https://hail.is,https://github.com/hail-is/hail/pull/2930,1,['clear'],['clear']
Usability,"The docs on the new `export` method are pretty clear:; ```pycon; >>> mt.GT.export('gt.tsv'); >>> with open('gt.tsv', 'r') as f:; ... for line in f:; ... print(line, end=''); locus	alleles	0	1	2	3; 1:1	[""A"",""C""]	0/1	1/1	0/1	0/1; 1:2	[""A"",""C""]	1/1	0/1	1/1	1/1; 1:3	[""A"",""C""]	0/1	0/0	0/0	0/0; 1:4	[""A"",""C""]	1/1	1/1	0/0	1/1; ```. I also changed all the vds extensions to mt, added a new; dataset that is small enough to print the entire matrix,; and fixed a bug in `make install-editable`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6841:47,clear,clear,47,https://hail.is,https://github.com/hail-is/hail/pull/6841,1,['clear'],['clear']
Usability,"The high-level problem: . The Hail Query Service is redeployed with each commit to `main`. Each deployment has a new JAR file; whose ABI is backwards-incompatible. The high-level solution:. Hail Batch Workers can load the JAR for a given Hail version on-demand. Although not a long-term; solution, we currently start a fresh JVM for each job. As a result, we can simply start the JVM with; the correct JAR on its classpath. We cache jars on the local filesystem. I had to abandon the old approach for two reasons:. 1. Multiple JVMs race to download the JAR. In the new approach, the python worker process uses a; lock to ensure at most one coroutine is downloading a given version of a JAR at the same time. 2. The JVM includes assumes that a child ClassLoader does not redefine a class from the parent; ClassLoader. That's why ClassLoaders always prefer to load a class from the parent ClassLoader's; classes. When we decide to re-use JVMs or use a single multi-threaded JVM, we'll need to ensure the top-level; ClassLoader *does not have Hail on its classpath*. I looked briefly at this approach and found it; more work than the current approach. ---. My apologies for eliminating JVMProcess in this PR. It's an unrelated change which facilitated my; understanding of worker.py. I essentially inlined JVMProcess into JVMJob and eliminated any duplicative; code. ---. After making this change I restored the tests. Some tests had bitrotted. In the process of fixing; those tests, I found a few other bugs. Fixing these lower-level bugs unlocked a number of new; tests. One test (which was added since the service tests were removed) had to be marked as failing. Some; Hail operations rely on writing to the local file system. Implementing that properly in the Query; Worker will take some thought. Here are the bugs I fixed:. 1. Correct the error message raised when tests are run in a non-main thread (we look for this; message and start an event loop for Hail's async code because asyncio refuses t",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10314:363,simpl,simply,363,https://hail.is,https://github.com/hail-is/hail/pull/10314,1,['simpl'],['simply']
Usability,"The high-level problem:. The Hail Query Service is redeployed with each commit to `main`. Each deployment has a new JAR file; whose ABI is backwards-incompatible. The high-level solution:. Hail Batch Workers can load the JAR for a given Hail version on-demand. Although not a long-term; solution, we currently start a fresh JVM for each job. As a result, we can simply start the JVM with; the correct JAR on its classpath. We cache jars on the local filesystem. I had to abandon the old approach for two reasons:. 1. Multiple JVMs race to download the JAR. In the new approach, the python worker process uses a; lock to ensure at most one coroutine is downloading a given version of a JAR at the same time. 2. The JVM assumes that a child ClassLoader does not redefine a class from the parent; ClassLoader. That's why ClassLoaders always prefer to load a class from the parent ClassLoader's; classes. When we decide to re-use JVMs or use a single multi-threaded JVM, we'll need to ensure the top-level; ClassLoader *does not have Hail on its classpath*. I looked briefly at this approach and found it; more work than the current approach. ---. My apologies for eliminating JVMProcess in this PR. It's an unrelated change which facilitated my; understanding worker.py. I essentially inlined JVMProcess into JVMJob and eliminated any duplicative; code. ---. After making this change I restored the tests. Some tests had bitrotted. In the process of fixing; those tests, I found a few other bugs. Fixing these lower-level bugs unlocked a number of new; tests. A couple tests (which were added since the service tests were removed) had to be marked as; failing. Here are the bugs I fixed:. 1. Correct the error message raised when tests are run in a non-main thread (we look for this; message and start an event loop for Hail's async code because asyncio refuses to start an event; loop in a non-main thread). 2. Use a `SafeRow` to copy the globals data out of a Region and into durable, GC'ed objects. 3.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10390:362,simpl,simply,362,https://hail.is,https://github.com/hail-is/hail/pull/10390,1,['simpl'],['simply']
Usability,"The idea is to allow the execution on both `SparkBackend` and `ServiceBackend` without code changes, simply switching to the Query service by setting the environment variables `HAIL_QUERY_BACKEND`, `HAIL_BILLING_PROJECT`, and `HAIL_BUCKET`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10189:101,simpl,simply,101,https://hail.is,https://github.com/hail-is/hail/pull/10189,1,['simpl'],['simply']
Usability,The latest changes to CI introduced a bug where an old build status; can be reported to GitHub because we do not always clear the; intended_github_status when we change the build_state. This PR; fixes that.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8410:120,clear,clear,120,https://hail.is,https://github.com/hail-is/hail/pull/8410,1,['clear'],['clear']
Usability,"The main goal of this PR was to remove some of the vector/scalar logic from the BlockMatrixMap2 node, and to support the scalar operations on BlockMatrixMap. I basically accomplished this by taking the cases that are matched on in BlockMatrixMap2 and lifting them into the Simplify rules. The only endpoint that I believe I needed to cover was the BlockMatrix.pyExecute() one; all the others will go through the usual CompileAndEvaluate. There's another part of the PR that fixes the variable bindings, which are currently hard-coded and unchecked. I needed this to construct the right expressions for the IR expressions, so I changed it to handle variable bindings with the rest of our IR.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7566:273,Simpl,Simplify,273,https://hail.is,https://github.com/hail-is/hail/pull/7566,1,['Simpl'],['Simplify']
Usability,The most trivial loop is the loop which does not recur. I added a simple test and fixed Requiredness to handle this case.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12796:66,simpl,simple,66,https://hail.is,https://github.com/hail-is/hail/pull/12796,1,['simpl'],['simple']
Usability,"The new generic lines coerce code could produce a partitioner with unsafe values. Those unsafe values ended up in the Compile cache, which become invalid when owning region was cleared. This fixes the memory errors I was seeing when running with the local backend. It is possible it will fix (some?) of the errors you were investigating, @johnc1231.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8987:177,clear,cleared,177,https://hail.is,https://github.com/hail-is/hail/pull/8987,1,['clear'],['cleared']
Usability,The old error message for matmul was impossible to read. This is much clearer.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10298:70,clear,clearer,70,https://hail.is,https://github.com/hail-is/hail/pull/10298,1,['clear'],['clearer']
Usability,"The old query plan is here:; ```; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; | 1 | SIMPLE | billing_project_users | NULL | index | PRIMARY | PRIMARY | 204 | NULL | 3201 | 10.00 | Using where; Using index; Using temporary; Using filesort |; | 1 | SIMPLE | batches | NULL | ref | PRIMARY,batches_deleted,batches_token,batches_user_state,batches_time_completed,batches_billing_project_state | batches_billing_project_state | 102 | batch.billing_project_users.billing_project | 519 | 25.00 | Using where |; | 1 | SIMPLE | batches_n_jobs_in_complete_states | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | NULL |; | 1 | SIMPLE | batches_cancelled | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | Using index |; | 1 | SIMPLE | aggregated_batch_resources | NULL | ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 44 | 100.00 | NULL |; | 1 | SIMPLE | resources | NULL | eq_ref | PRIMARY | PRIMARY | 102 | batch.aggregated_batch_resources.resource | 1 | 100.00 | NULL |; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+------------",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12049:870,SIMPL,SIMPLE,870,https://hail.is,https://github.com/hail-is/hail/pull/12049,1,['SIMPL'],['SIMPLE']
Usability,"The original UI redesign was intended to make it easier to navigate and focus on important information. I received very positive feedback on some aspects like this, for example having the different job steps in separate tabs. There was also feedback though that there was a lot of dead space. This is an attempt to find a good middle ground where the UI is not overwhelmingly cluttered but is more compact and makes better use of screen real estate",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14587:129,feedback,feedback,129,https://hail.is,https://github.com/hail-is/hail/pull/14587,2,['feedback'],['feedback']
Usability,"The original goal of this PR was avoiding `Try` when we are not using the restartability provided by semantic hashing because I strongly suspect it is related to the loss of stacktraces in exceptions. Unrelatedly, we realized the semantic hash PR changed the semantics of Query-on-Spark even when semantic hash is disabled: previously we would abort RDD writing on the first exception. In Hail 0.2.123 through 0.2.126, the semantics were changed to only crash *after* we already ran every other partition. Two bad scenarios of which I can think:. 1. Suppose the first partition fails due to OOM. We now waste time/money on the rest of the partitions even though we cannot possibly get a valid output. 2. Suppose every partition hits a permission error. Users should get that feedback after paying for O(1) partitions run, not O(N). I created two Backend paths: the normal `parallelizeAndComputeWithIndex` with its pre-0.2.123 semantics as well as `parallelizeAndComputeWithIndexReturnAllErrors` which, as the name says, returns errors instead of raising them. While making this change, I think I found two other bugs in the ""return all errors"" path, only one of which I addressed in this PR:. 1. I'm pretty sure semantic-hash-enabled QoB batch submission is broken because it uses the logical partition ids as job indices. Suppose there are 10,000 partitions, but we only need to compute 1, 100, and 1543. 0.2.126 would try to submit a batch of size 3 but whose job indices are 1, 100, and 1543. 2. Likewise, the Query-on-Spark path returns an invalid `SparkTaskContext.partitionId` which, at best, produces confusing partition filenames. I only fixed the former because it was simple to fix. I wasn't exactly sure what to do about the latter. We should fix that separately because the changes in this PR need to urgently land in the next release to avoid unexpected cost when one partition fails.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14085:775,feedback,feedback,775,https://hail.is,https://github.com/hail-is/hail/pull/14085,2,"['feedback', 'simpl']","['feedback', 'simple']"
Usability,"The other option to fix this was to make `job_record_to_dict` have an extra layer of getopt everywhere, so I thought this was simpler.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7522:126,simpl,simpler,126,https://hail.is,https://github.com/hail-is/hail/pull/7522,1,['simpl'],['simpler']
Usability,"The previous implementation, while seeming to be well-abstracted at; first, actually had a rather devious property of creating agg states; for multiple classes multiple times. I'm still working on figuring out; *exactly* the place where our assumptions broke down, but this change; definitely fixes the problem, and simplifies the implementation by; directly using IR, instead of other compiled functions. This problem was a symptom of a larger issue, which is that the; ownership semantics of the current aggregator system is way too complex; to be coding against regularly. This all will go away when lowering is; complete, in favor of the *much* simpler set of IR nodes that are used; in lowering. We may need to address this problem sooner, though. CHANGELOG: Fixed memory leak affecting `Table.annotate` with scans, `hl.experimental.densify`, and `Table.group_by` / `aggregate`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9028:316,simpl,simplifies,316,https://hail.is,https://github.com/hail-is/hail/pull/9028,2,['simpl'],"['simpler', 'simplifies']"
Usability,"The problem is that the `InsertFields` simplify rule was ignoring the `fieldOrder`, and thus potentially changing the type.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11340:39,simpl,simplify,39,https://hail.is,https://github.com/hail-is/hail/pull/11340,1,['simpl'],['simplify']
Usability,The project is at a point where it would be clearer to separate the dev stuff from the user stuff.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4477:44,clear,clearer,44,https://hail.is,https://github.com/hail-is/hail/issues/4477,1,['clear'],['clearer']
Usability,"The query in the scheduler was running incredibly slowly. So slowly, I didn't have the patience to let it finish. . ```; mysql> EXPLAIN; -> SELECT job_id, batch_id, spec, cores_mcpu,; -> ((jobs.cancelled OR batches.cancelled) AND NOT always_run) AS cancel,; -> userdata, user; -> FROM jobs; -> INNER JOIN batches ON batches.id = jobs.batch_id; -> WHERE jobs.state = 'Ready' AND batches.closed; -> LIMIT 50;; +----+-------------+---------+------+--------------------+---------+---------+-------------------+------+-------------+; | id | select_type | table | type | possible_keys | key | key_len | ref | rows | Extra |; +----+-------------+---------+------+--------------------+---------+---------+-------------------+------+-------------+; | 1 | SIMPLE | batches | ALL | PRIMARY | NULL | NULL | NULL | 31 | Using where |; | 1 | SIMPLE | jobs | ref | PRIMARY,jobs_state | PRIMARY | 8 | batch2.batches.id | 84 | Using where |; +----+-------------+---------+------+--------------------+---------+---------+-------------------+------+-------------+; 2 rows in set (0.01 sec); ```. This is because the query was querying closed batches, and then joining against jobs and using a where condition to find ready jobs. This is an insane execution plan and I still can't believe MySQL is choosing it by default. To fix this, I changed the inner join to a straight join: https://dev.mysql.com/doc/refman/5.6/en/join.html. Straight join is a MySQL extension that always scans the left table first. This leads to the correct execution plan which runs instantly:. ```; mysql> EXPLAIN; -> SELECT job_id, batch_id, spec, cores_mcpu,; -> ((jobs.cancelled OR batches.cancelled) AND NOT always_run) AS cancel,; -> userdata, user; -> FROM jobs; -> STRAIGHT_JOIN batches ON batches.id = jobs.batch_id; -> WHERE jobs.state = 'Ready' AND batches.closed; -> LIMIT 50;; +----+-------------+---------+--------+--------------------+------------+---------+----------------------+-------+-----------------------+; | id | select_ty",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7634:746,SIMPL,SIMPLE,746,https://hail.is,https://github.com/hail-is/hail/pull/7634,2,['SIMPL'],['SIMPLE']
Usability,The representation docs seem much clearer than the expr docs,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1669:34,clear,clearer,34,https://hail.is,https://github.com/hail-is/hail/pull/1669,1,['clear'],['clearer']
Usability,"The resulting rules are more succinct and correctly rely on file-system modification dependencies. - No use of `SPARK_HOME` and `PYTHONPATH`, and limited use of `PYSPARK_SUBMIT_ARGS`. Python tests now rely on the python package directly which handles correctly handles dependencies like `pyspark`. - There are also some phony targets for convenience: `jar`, `zip`, `pip-install`, `docs`, and `docs-no-test`. - Fix configuration of Spark version for the python package. The version is written by make into `python/spark_version` and read by `python/setup.py`. Many of the tests pass against 2.3.0, but there's some floating point value changes. - add breezeVersions for all currently released Spark versions greater than 2.2.0. - For developers, require python package `py` version 1.7.0 or later to allow `pytest` to test an installed package while loading the doctest expressions from the source code. (We could also determine where hail was installed and pass that path to pytest instead of `python/src`, but using the environment variable `PY_IGNORE_IMPORTMISMATCH` seems simple and safe enough). ---. ### Explainers. #### env_var.mk. This is a Makefile that is intended to be `include`d by other Makefiles. It defines a [multi-line variable](https://www.gnu.org/software/make/manual/html_node/Multi_002dLine.html) that [takes arguments](https://www.gnu.org/software/make/manual/html_node/Call-Function.html#Call-Function) (known in any reasonable language as a ""function""). It is intended to be used like this:. ```; VERSION = 30; $(eval $(call ENV_VAR,VERSION)). build: env/VERSION; build:; ... $(VERSION) ...; ```. Each time this Makefile is executed, at Makefile parse-time, `make` evaluates the `ifneq` to compare the current value of the variable to the previously used value (if any). If they differ, a phony (ergo always needs to be rebuilt) target is dynamically generated. That target will force a execution of any dependent targets, in the example above, it will force `build` to be exec",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5130:2411,simpl,simple,2411,https://hail.is,https://github.com/hail-is/hail/pull/5130,1,['simpl'],['simple']
Usability,"The root issue here was that sometimes exc.args[0] was a string and sometimes it was a dict. When it was a string the `in` condition worked fine. When it was a dict, it was looking at the keys of the dict and not finding the error message (which is buried under a few layers). The code was unnecessarily complex. I reworked the yaml printer to be simpler and work for any multiline string. I removed the regular expression that was used to discover the worker batch when the worker jobs were in a different batch from the driver jobs. I remove all specialized debugging information in favor of the general `debug_info` methods on `Batch` and `ServiceBackend`. I also have two clear error cases: if the driver does not write its output file, then something went horribly wrong. We dump all the debug info. If we do not receive valid JSON from the driver, again, something went horribly wrong. We dump all the debug info. The only remaining exceptional case is an error purposely serialized by the QoB driver to us (with or without an error id). In particular, note that we now completely ignore the number of failing or successful jobs. That doesn't matter. If the driver sends us an output file, we use the data found there. If the driver does not send us an output file or sends us an output file without valid JSON, we dump as much debug info as possible. cc: @tpoterba for visibility on your end; cc: @iris-garden because you're in this space (albeit, the bug you're fixing is in the QoB *driver* whereas this is the *client* [nb: *client* is the Python code which starts a batch with a *driver*. A *driver* adds zero or more *worker* jobs to its batch. You're addressing an issue with how the *driver* handles errors from the *workers*. This PR simplifies the logic for how the *client* handles errors from the *driver*.]).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470:347,simpl,simpler,347,https://hail.is,https://github.com/hail-is/hail/pull/12470,3,"['clear', 'simpl']","['clear', 'simpler', 'simplifies']"
Usability,"The site container polls regularly for new releases of hail and pulls the docs for the latest release. But we deploy site regularly enough that we can just include the latest release docs in the site build. Eventually, a deploy to PyPi should trigger a deploy of the site but this gets us part of the way there and simplifies things considerably.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9943:315,simpl,simplifies,315,https://hail.is,https://github.com/hail-is/hail/pull/9943,1,['simpl'],['simplifies']
Usability,"The slight increase in complexity is worth it for the code improvement.; We now will clearly support early truncation when possible (and can; enable the inner join benchmark to go through whole stage codegen),; and will propagate requiredness correctly.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10758:85,clear,clearly,85,https://hail.is,https://github.com/hail-is/hail/pull/10758,1,['clear'],['clearly']
Usability,There is room to simplify rules,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5506:17,simpl,simplify,17,https://hail.is,https://github.com/hail-is/hail/issues/5506,1,['simpl'],['simplify']
Usability,"There was a logic error in constructFromIndicesUnsafe, if a missing value was pushed, pushing a present value with the same index would not clear the missing bit.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13263:140,clear,clear,140,https://hail.is,https://github.com/hail-is/hail/pull/13263,1,['clear'],['clear']
Usability,"There was some real bad capture/broadcast issues in VCFsReader. I made the following changes:. - import_vcfs requires the signature of all files to be the same,; - compute the type once from the first file,; - verify the types agree when parallelizing over files computing the partitions,; - always broadcast the header lines (which can be large). This reduced the DAGScheduler RDD broadcast by about 4x (6MB => 1.4MB) on a simple 10-input pipeline of import_vcfs/transform_one/combine/write_multi.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5507:424,simpl,simple,424,https://hail.is,https://github.com/hail-is/hail/pull/5507,1,['simpl'],['simple']
Usability,"There were two sources of deadlocks:. 1. The attempt resources were not inserted in the same order in the aggregated_*_resources tabes between the two triggers `attempt_resources_after_insert` and `attempts_after_update`. One had jobs -> batches -> billing projects and the other had billing_projects -> batches -> jobs. We also were inserting the resources in a different order in the two triggers. I solved the ordering issue by making sure we `INSERT MANY` the resources in alphabetical order. 2. Once I fixed (1), then the next set of errors were in `add_attempt`. We were locking the `instances_free_cores_mcpu` table only if the attempt didn't already exist. This was causing cryptic deadlock errors like this:. ```; ------------------------; LATEST DETECTED DEADLOCK; ------------------------; 2022-06-23 18:08:12 0x7f1807665700; *** (1) TRANSACTION:; TRANSACTION 1215034153, ACTIVE 0 sec starting index read; mysql tables in use 1, locked 1; LOCK WAIT 21 lock struct(s), heap size 1136, 12 row lock(s), undo log entries 5; MySQL thread id 962402, OS thread handle 139741222766336, query id 6809292838 10.32.5.50 jigold updating; UPDATE instances_free_cores_mcpu; SET free_cores_mcpu = free_cores_mcpu + cur_cores_mcpu; WHERE instances_free_cores_mcpu.name = in_instance_name; *** (1) WAITING FOR THIS LOCK TO BE GRANTED:; RECORD LOCKS space id 1578686 page no 3 n bits 72 index PRIMARY of table `jigold`.`instances_free_cores_mcpu` trx id 1215034153 lock_mode X locks rec but not gap waiting; Record lock, heap no 3 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d6a69676f6c642d7374616e646172642d62; asc batch-worker-jigold-standard-b; (total 34 bytes);; 1: len 6; hex 0000486bf32c; asc Hk ,;;; 2: len 7; hex 600001287513cb; asc ` (u ;;; 3: len 4; hex 80002de6; asc - ;;. *** (2) TRANSACTION:; TRANSACTION 1215034156, ACTIVE 0 sec inserting; mysql tables in use 6, locked 6; 22 lock struct(s), heap size 1136, 13 row lock(s), undo log entries",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11959:1011,undo,undo,1011,https://hail.is,https://github.com/hail-is/hail/pull/11959,1,['undo'],['undo']
Usability,"There's a few things happening here:. ### Node pool updates through terraform; I extended the node pool update documentation with how to deal with terraform-managed node pools. This is what I did on Azure and worked fine. The only real change in terraform other than changing the machine type is making the node pool name configurable to adhere to the naming guidelines and allow us to do a rolling migration. ### Updated the kubernetes and azurerm providers; I updated the azurerm provider without thinking much about it and even though it's a minor version had some breaking changes that after a half-successful `apply` made it hard to downgrade. So I decided just to appease the breaking change and leave us at the new version, which is what all the `blob_properties` changes are for. They are in no way related to the node pools. ### Troubleshooting; I added a section for a bug that I've seen a couple of times (and encountered again today) but never documented how I got around it.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11636:359,guid,guidelines,359,https://hail.is,https://github.com/hail-is/hail/pull/11636,1,['guid'],['guidelines']
Usability,There's a kind of unrelated thing: Fix reading of configuration information to not ignore a hailctl configuration value of `''` . The big change is to introduce 3 progress bar systems:; 1. SimpleRichProgressBar. One progress bar active at a time.; 2. RichProgressBar. More than one progress bar active at a time.; 3. BatchProgressBar. Same as RichProgressBar but with default columns good for monitoring 1 or more Hail Batch batches.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12346:163,progress bar,progress bar,163,https://hail.is,https://github.com/hail-is/hail/pull/12346,4,"['Simpl', 'progress bar']","['SimpleRichProgressBar', 'progress bar']"
Usability,"These are doc corrections/improvements I'd made in #3825 but then removed from #3833, except for the name changes that would break interface. I'd like to get feedback on those at check-in.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3875:158,feedback,feedback,158,https://hail.is,https://github.com/hail-is/hail/pull/3875,1,['feedback'],['feedback']
Usability,These upgrades are simple and do not represent major version upgrades.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10830:19,simpl,simple,19,https://hail.is,https://github.com/hail-is/hail/pull/10830,1,['simpl'],['simple']
Usability,Things to simplify when renaming fields is free,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5202:10,simpl,simplify,10,https://hail.is,https://github.com/hail-is/hail/issues/5202,2,['simpl'],['simplify']
Usability,"This PR Python-izes all but the LocalLDPrune step of `ld_prune` while adding modular functionality for window indices that also simplifies computing big banded correlation (where the band is in terms of position, centimorgans, or any other non-decreasing value per contig). I later plan to simplify computing correlation, but basically:; ```; ld_matrix = ... BlockMatrix stuff starting from mt ...; starts, stops = hl.locus_windows(mt.rows(), radius=1e6); banded_ld_matrix = ld_matrix.sparsify_row_intervals(starts, stops); ```; Or if centimorgan coordinates are a row field (via annotation or import from plink format):; ```; ht = mt.rows(); starts, stops = hl.locus_windows(ht, radius=1e6, value_expr=ht.centimorgans); ```. Changes:; - added `array_windows` to methods/misc, with docs and test.; - added `locus_windows` to methods/genetics, with docs and test.; - reworked `ld_prune` to use `locus_windows` and `sparsify_row_intervals`, moved squaring op from expression language to block matrix `r2_bm`, moved arg checks from scala to python.; - then deleted `UpperIndexBounds`, `UpperIndexBoundsSuite`, `BlockMatrix.filteredEntriesTable` and tests.; - improved `test_ld_prune` and modified `ldprune.vcf` to make it much smaller and span three chromosomes instead of one for better testing; - allowed `sparsify_row_intervals` to accept ndarrays so user need not convert output of `locus_windows` (which should naturally be an ndarray) with `[int(s) for s in starts]`. If the arg checking or py4j communication become a bottleneck, we can add passage through file similar to what we do for arrays of doubles.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3715:128,simpl,simplifies,128,https://hail.is,https://github.com/hail-is/hail/pull/3715,2,['simpl'],"['simplifies', 'simplify']"
Usability,"This PR adds stream nodes `StreamMultiMerge` and `StreamZipJoin`, which will be used to implement `TableUnion` and `TableMultiWayZipJoin`. The two nodes were so similar, both in implementation and in interface, that I thought bundling them into one PR would actually make it *easier* to review, but I can split them up if you disagree. The implementations of both nodes use tournament trees, a very simple data structure ideal for this problem. Think of it as a priority queue specialized to holding exactly `k` elements, so when you pop the top element, you must immediately replace it with a new value. A tournament tree is just what it sounds like. It is a complete binary tree with `k` leaves. Conceptually, the leaves hold the current `k` elements (the heads of each of the `k` input streams), while each internal node records the result of the comparison between the ""winners"" of the two subtrees, where in this case the winner is the least element. Thus we can find the smallest of all `k` elements by looking at the root node. If we remove the smallest element, and replace it with the next value from that stream, we change the value in the corresponding leaf node, then we just need to replay the comparisons at all internal nodes on the path to the root. Note that to replay a comparison, we only need to know what element *lost* at this node previously. It must have lost to the previous overall winner, the element we just replaced. Using that observation, we only need to store the `k` current values in the `k` leaves, and in each of the `k-1` internal nodes we store the index of the element which lost the comparison at that node. That just leaves the overall winner, which we can store in a separate variable. Note that each element besides the overall winner loses exactly one ""match"", so the internal nodes store a permutation of the indices 0 to (k-1), minus the overall winner. This is a so-called ""loser tree"". In the implementation, I store the `k` leaves in a `Array[Long]`, w",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9033:399,simpl,simple,399,https://hail.is,https://github.com/hail-is/hail/pull/9033,1,['simpl'],['simple']
Usability,"This PR adds support for Azure SAS tokens in QoB. A SAS token is basically a blob storage URI with a short-lived credential to access that resource appended as a URL query string. In such a scenario where the FS receives a blob URI with a SAS token, that token should be used instead of the latent credentials on the system. Most of the changes to the `AzureStorageFS.scala` are to parse out a SAS token from blob names. This change brings with it a couple caveats. Unfortunately it is not possible to truly disambiguate a SAS token from a glob pattern, or even just a normal blob filename. So we take what is probably a safe assumption and look to see if there exists a query-parameter style key-value pair after the last `?` in the blob name. If this is the case, we treat everything after the last `?` as a SAS token. If this condition is not satsified, we say there is no SAS token and treat the whole path as the blob name. This logic already exists in python, but I'm open to alternatives. Introducing SAS tokens also breaks the way globbing is currently implemented, where it is deemed safe to iteratively append components to the end of a blob URI string. I added an abstract type member to `FS` and instead of a `String` have `globWithPrefix` accept that associated URL type that can properly handle path updates. I'm unclear on the best way to do this w.r.t. the type system, and wasn't quite sure what to put as the associated type for `RouterFS`, which ideally would accept a union of the URL types for the filesystems that it wraps, so some guidance on that would be great if you have any.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13178:1554,guid,guidance,1554,https://hail.is,https://github.com/hail-is/hail/pull/13178,1,['guid'],['guidance']
Usability,"This PR attempts to make CI more useful as a developer feedback tool. Developers need to know the success/failure state of their PR ASAP. It is better to know that state for an old tip sha pair than to know nothing. It is better still to know that state for a more recent sha pair. It is best to know that state for the tip sha pair. We aim to test a PR's tip source sha (perhaps against an out of date target sha). ---. Our *target state* for remembering batches is:; - one is complete and the other is in-progress; the complete one is for an out-of-date tip sha pair, or ; - only one batch is in-progress or complete; it's for the tip sha pair. We forget an in-progress batch for a PR only if:; - a batch for a more recent sha pair is complete, or; - a more recent, but not tip, source sha build is also in progress. As is the case for our services, at any time we may not be in our target state. For CI, if we are not in our target state, `_refresh` and `_heal` are intended to move us towards the desired state. `_refresh` incorporates new GitHub information. `_heal` incorporates new batch state and perturbs batch as necessary. cc: services crew: @akotlar, @jigold . EDIT:. I've gone round and round with my thoughts on what the right idea here is. I would appreciate some discussion around what we should aim for.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6007:55,feedback,feedback,55,https://hail.is,https://github.com/hail-is/hail/pull/6007,1,['feedback'],['feedback']
Usability,"This PR attempts to simplify the use of TLS and HTTP(S) in Hail. The big changes; are in `hail/python/hailtop`. In particular I removed several functions with; confusingly overlapping functionality in `tls.py`. Instead, we now have three; functions:. - `internal_server_ssl_context`; - `internal_client_ssl_context`; - `external_client_ssl_context`. The client context is configured to seek certificates from its peers. Both; internal contexts load the Hail certificate chain specified in the Hail SSL; Config. The external client context does not load the hail certificate chain. I intend all Hail's HTTP(S) requests to use `httpx.py` (so named to not conflict; with modules named `http`). Again, I have simplified the landscape. We now have; two functions:. - `httpx.client_session`: The constructor for all asynchronous, HTTPS client; sessions.; - `httpx.blocking_client_session`: The constructor for all synchronous, HTTPS; client sessions. Both sessions have the exact same configuration parameters. The API is exactly; the same except the blocking client session replaces asynchronous methods with; synchronous ones. Both sessions accept the `aiohttp.ClientSession` constructor parameters. They; support one new parameter and modify the behavior of one old parameter.; - `retry_transient`: when set to `True` this parameter will retry all transient; errors in all requests made by this session. This defaults to `True`.; - `raise_for_status`: this parameter now defaults to `True` and includes the; response body text in the error message. Both; Both parameters may be overridden on a per-request basis. - `httpx.ResponseManager` and `httpx.ClientSession` work together to enable; `retry_transient` and `raise_for_status`. Aiohttp has this unusual structure where; all the request methods are synchronous but they return an object that is both; awaitable and an async context manager. I mirror their structure exactly. The; `httpx.ResponseManager` is both awaitable and an async context manager.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9554:20,simpl,simplify,20,https://hail.is,https://github.com/hail-is/hail/pull/9554,2,['simpl'],"['simplified', 'simplify']"
Usability,"This PR begins the implementation of checkpointing and restoring of jobs in Batch. Currently, a container is checkpointed after 10 seconds and before running a container (using crun run) the worker container checks if it should restore a job based on a checkpoint in Google storage. Currently, the kinds of Jobs that can be checkpointed/restored are: jobs that do simple operations and only print to stdout, jobs that redirect their output to local files. Changelist:; - Add copy method to RouterAsyncFS; - Add checkpointable flag to containers (make DockerJob containers checkpointable and JVMJob containers not checkpointable); - Create checkpoint method which pauses a container, checkpoints it, copies the checkpoint directory and upper directory of the overlay into Google storage, and then resumes the container; - Add logic in _run_container to try copying checkpoint directory and upper directory from cloud storage and then running `crun restore` if the job is checkpointable",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11888:364,simpl,simple,364,https://hail.is,https://github.com/hail-is/hail/pull/11888,3,"['pause', 'resume', 'simpl']","['pauses', 'resumes', 'simple']"
Usability,"This PR begins to implement the infrastructure needed for reproducible randomness. The main components are:; * An implementation of the Threefish block cipher, reduced to 20 rounds as in Threefry [1], but keeping the tweak from Threefish (really just the first 64 bits, the second 64 bits are always 0). The specification for Threefish can be found in [2].; * An implementation of the `jdistlib.RandomEngine` interface using Threefish, so that we can continue using the `jdistlib` implementations of sampling from various distributions.; * This has some improvements over the standard Java RNG implementations of random floating point numbers, and of random integers from a specified interval. See comments in the code for details.; * The beginnings of a new type `(S/T)RNGState`. This implements a splittable RNG interface, similarly to [3], but instead of the cascade construction, we use a modification of PMAC [4] to build a psuedo-random function from a blockcipher. This allows us to reorder the processing of blocks of the input, in particular moving computation to compile time as much as possible.; * A simple test suite for the new RNG using a chi-square test. [1] ""Parallel random numbers: as easy as 1, 2, 3"", http://www.thesalmons.org/john/random123/papers/random123sc11.pdf; [2] ""The Skein Hash Function Family"", https://www.schneier.com/wp-content/uploads/2015/01/skein.pdf; [3] ""Splittable pseudorandom number generators using cryptographic hashing"", https://publications.lib.chalmers.se/records/fulltext/183348/local_183348.pdf; [4] ""Efficient Instantiations of Tweakable Blockciphers and Refinements to Modes OCB and PMAC"", https://www.cs.ucdavis.edu/~rogaway/papers/offsets.pdf",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11605:1112,simpl,simple,1112,https://hail.is,https://github.com/hail-is/hail/pull/11605,1,['simpl'],['simple']
Usability,"This PR changes the way loop memory management works. . Previously, memory used while in the loop was allocated in one region, with no cleanup happening between loops. A long running loop that did a lot of allocation could therefore easily cause hail to run out of memory. This PR fixes that by creating two regions for each loop. Every iteration, we emit everything in region 1, copy the state that is necessary to region 2, then clear region 1. Then we swap the regions and repeat this until the loop terminates.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10233:431,clear,clear,431,https://hail.is,https://github.com/hail-is/hail/pull/10233,1,['clear'],['clear']
Usability,"This PR drastically simplifies the hail/elasticsearch story. We no longer require any special custom built JAR from google cloud (was necessary because there was a time when Spark 3 compatible ES wasn't on Maven). Also allow ES version 7 or 8 when on Spark 3, and don't require that it's Spark 3.1",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11410:20,simpl,simplifies,20,https://hail.is,https://github.com/hail-is/hail/pull/11410,1,['simpl'],['simplifies']
Usability,"This PR enables calling QR decomposition via LAPACK. It's passing all the tests, and I've made some initial cleanup passes, but there's probably more that could be done to simplify this. . I referenced the numpy QR implementation when doing this, it may be helpful to understand the goal outside of the dealing with all the overhead of reading staged code: https://github.com/numpy/numpy/blob/0aeab48b9e914d1dc7041b7e3f3b7e575ffcbbed/numpy/linalg/linalg.py",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7682:172,simpl,simplify,172,https://hail.is,https://github.com/hail-is/hail/pull/7682,1,['simpl'],['simplify']
Usability,"This PR generates documentation for all current ndarray functionality. Wondering if to coincide with this we should also remove the `_` from `hl._nd`. I mostly had it there so people wouldn't poke at undocumented functionality, but this seems to work ok now. . Resolves #7531",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7688:200,undo,undocumented,200,https://hail.is,https://github.com/hail-is/hail/pull/7688,1,['undo'],['undocumented']
Usability,"This PR includes the PDF of the Hail Tables cheatsheet. I'll add the powerpoint file as well once someone has approved the pdf so that others can change in the future. If github is just complaining that it's a binary file and doesn't show the preview, click the ""..."" on the right hand side of the filename bar thing and click ""view file"". Any feedback is welcome. . Fixes #5388 (though we should make a new issue for adding a matrix table cheat sheet). Assigned to Tim, but also put Gopal on it since he's been thinking about tutorials",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7544:344,feedback,feedback,344,https://hail.is,https://github.com/hail-is/hail/pull/7544,1,['feedback'],['feedback']
Usability,"This PR introduces a generic pretty-printing package, which for now is only used in `ir.Pretty`. The primary motivation was to separate format specification from rendering, to simplify the formatting code, and make it easier to add multiple formatting options, including forms with line number references. Some nice properties of the new pretty-printer:; * Generic. Should be able to be used for all pretty-printing in hail scala code. This simplifies the codebase by making client pretty-printers easy to understand and modify, without getting bogged down in low-level details.; * Composable. Formatting specifications are trivially combinable, without needing to manually track context like the current indentation level, max line length, etc.; * Stack safe. Uses constant stack space.; * Uses constant heap space. Only keeps in memory text which might print in the current line, if it fits. (The pretty printer writes to a `java.io.Writer`, and I'm ignoring any heap space used by the writer.); * Lazy. If the number of lines to print is capped, doesn't scan more of the tree than is needed to print those lines.; * Produces more readable output, printing nodes on a single line where possible. As we work to increase visibility into the compiler, I think this will be very helpful. A formatted document is represented by the `Doc` type. This defines a `render` method, which takes three parameters to control the output:; * `width`: the maximum length of a line, including indentation; * `ribbonLength`: the maximum length of a line, not including indentation (too many characters on a line is hard to read, regardless of indentation); * `maxLines`: the maximum number of lines to print. There are only a few `Doc` constructors, which suffice to define all methods in the richer api contained in the `prettyPrint` package object.; * `Text(t: String)`; * `Line(ifFlat: String)`; * `Indent(i: Int, body: Doc)`; * `Concat(it: Iterable[Doc])`; * `Group(body: Doc)`. Ignoring `Group` for the moment, th",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9652:176,simpl,simplify,176,https://hail.is,https://github.com/hail-is/hail/pull/9652,2,['simpl'],"['simplifies', 'simplify']"
Usability,"This PR introduces a second region `eltRegion` into the `emitStream` environment, and plumbs it through everywhere it is needed. One complication is that the `eltRegion` for a stream bound in the environment (e.g. in a `StreamMap` over a `Stream[Stream[A]]`) must be set by the consumer of the stream, so the `PCanonicalStreamCode` stored in the environment needs to be a function `Code[Region] => SizedStream`. For the most part, this PR leaves the `eltRegion`s unused. In the new semantics, explained below, it is still correct for a producer to only use the `outerRegion`, and for a consumer to pass the same region for both `outerRegion` and `eltRegion`. This lets us migrate to the new memory management one node at a time. When I talk about correctness, I mean that: no pointer is used after the region it points into has been freed; and, every region which is created is eventually freed. When reasoning about correctness, I consider `r.clear()` equivalent to `r.invalidate(); r.getNewRegion()`. As a demonstration of how this should work, this PR does convert `EmitStream.{toArray, write}` to use `eltRegion` correctly, which are used in the consumer nodes `ToArray`, `ArraySort`, `ToSet`, `ToDict`, and `GroupByKey`. Going forward, the plan is to convert the rest of the consumer and producer nodes, before converting the transformer nodes (which both consume and produce streams), as correctness can only be tested on pipelines in which all nodes have been converted. ### Semantics. A stream producer is passed two regions from its consumer: `outerRegion` and `eltRegion`. The node being emitted does not own either region, so may not free/clear them. The only thing a producer may do with either region is to put data in them, by writing directly to them or by giving/sharing ownership of a producer-owned region to them. Consumers' contract:; * The lifetime of `outerRegion` must contain the lifetime of the producer stream, i.e. `outerRegion` must be valid before the producer's `setup0` ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9106:944,clear,clear,944,https://hail.is,https://github.com/hail-is/hail/pull/9106,1,['clear'],['clear']
Usability,"This PR is a first step towards full debug information in generated bytecode. It lays the foundation in lir, and uses it to add line numbers to generated exceptions, which then show up in the stack trace. The line numbers are computed by taking the stack trace in `Code._fatal`, and finding the most recent line in `Emit.scala`, if any. Sometimes this will be less useful, e.g. exceptions thrown in aggregators, but it's a step. The design of the source location tracking in lir is very simple: every instruction has an associated line number, and `lir.Emit` watches for when the line numbers of the current and previous instruction are different, and emits the start of a new line number interval. This design might be slightly wasteful of memory, if we expect groups of several consecutive instructions to come from the same source line, but it's probably fine, and makes preserving the source location information through lir transformations trivial. In any case, I expect it to be easy to change in the future if necessary.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9499:487,simpl,simple,487,https://hail.is,https://github.com/hail-is/hail/pull/9499,1,['simpl'],['simple']
Usability,"This PR is a step towards a general picture for generating debugging information in bytecode. The general picture is to write a sequence of files, each corresponding to a certain point in the compile pipeline, where each line in each file includes a line number pointing to the line in the previous file from which this line was derived. (We may eventually want richer source information than just a single line number, like a range or list of ranges.) The top of each file has the file name of the previous printout, which is the target of all line numbers in the file. We could in the future also print a list of transformations that were applied to get from the previous printed state to this one. The idea to implement this picture is simple. Each IR node stores a line number in a mutable variable. When we want to generate a printed checkpoint, we walk the IR, printing a representation of each node, including the stored line number, and then overwriting the node's line number with the current line count of the file being written to. Some work will be required to preserve this source information in all IR transformations. This PR implements this idea in lir only. If the `HAIL_WRITE_IR_FILES` environment variable is set, it is hardcoded to print the lir after the first `SimplifyControl` (because before that is very hard to read), and after method splitting right before emitting bytecode. It also prints out the class files themselves. Longer term we'll want to be able to control which points in the compilation get printed.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9521:739,simpl,simple,739,https://hail.is,https://github.com/hail-is/hail/pull/9521,2,"['Simpl', 'simpl']","['SimplifyControl', 'simple']"
Usability,"This PR is needed for atomic batch creation where the job_id is 0 to n_jobs and is not unique across batches. - Job now has a compound key in the database (batch_id, job_id); - Job.id on the server side is `(batch_id, job_id)`; - Batch on the client side has been modified to not require the attributes since Job now needs a reference to the batch.; - Changed some routes to be '/batches/{batch_id}/jobs/{job_id}/...`; - Changed the appropriate places in ci2 and pipeline that use the job status interface; - Changed the create_job interface for parents to take the Job objects and not the id. I think this is clearer and will allow me to check the batch of the Job is the correct batch in the future.; - deleted creating batch from a file",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6183:610,clear,clearer,610,https://hail.is,https://github.com/hail-is/hail/pull/6183,1,['clear'],['clearer']
Usability,"This PR is not ready to be merged, but I want feedback.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3470:46,feedback,feedback,46,https://hail.is,https://github.com/hail-is/hail/pull/3470,1,['feedback'],['feedback']
Usability,This PR lowers `TableParallelize` and beefs up the tests for parallelize a bit. If you see a simpler formulation of the math to compute `start` and `length` let me know.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8596:93,simpl,simpler,93,https://hail.is,https://github.com/hail-is/hail/pull/8596,1,['simpl'],['simpler']
Usability,"This PR makes the following changes:; * Add a `separateRegions` flag to `PStream`.; * Add a `separateRegions` flag to the stream producer nodes `MakeStream`, `StreamRange`, and `ToStream`.; * Propogate `separateRegions` through all stream nodes in `InferPType`. The intended semantics is that if a stream's type has the `separateRegions` flag set, its consumer must pass it a region which gets cleared every element. If the flag is not set, there is no requirement; depending on context, the consumer may put every element in the same region, but is also allowed to use separate regions for each element. For example, in a zip, the elements of the zipped stream are put in separate regions iff at least one child stream requires separate regions; in that case, all children will get emitted with separate regions, whether they requested it or not. In this PR, the `separateRegions` flags are left unused. Eventually, stream consumers will inspect the flag on their child streams' types, and use that information to construct the appropriate `StagedRegion` to pass to `emitStream`. In implementing that, I did some refactoring of the `StagedRegion` design, which I separated out into a follow-up PR.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9388:394,clear,cleared,394,https://hail.is,https://github.com/hail-is/hail/pull/9388,1,['clear'],['cleared']
Usability,"This PR prepares the way to remove `UnpartitionedRVD` and `RVD`, but stops before doing so to keep things simple. The changes are probably easiest to understand one commit at a time, because it actually worked out quite cleanly. I'll describe each commit, to make review easier:; * **remove `TableValue.enforceOrderingRVD`** - I could have removed `enforceOrderingRVD` earlier, as soon as tables were always sorted by key. This also loosens the `TableValue` invariant: Before, we required that if `key=None` then the `rvd` is an `UnpartitionedRVD`, but it was okay to have `key=Some(..)` and an `UnpartitionedRVD`. Then, once all tables were sorted by key, I strengthened it to `key=None` if and only if `rvd` is an `UnpartitionedRVD`. Now, I'm weakening it in the other direction, to allow `key=None` with `rvd` an `OrderedRVD`, possibly with some non-empty key. This is consistent with the rule that the `rvd` must always have a stronger/longer key than the `TableType`.; * **small tweaks** - Now I start working through the `TableIR` nodes, rewriting them to remove explicit uses of `UnpartitionedRVD`. The general plan is to sandwich the rvd logic between `toOrderedRVD` and `toOldStyleRVD`. The first takes an `UnpartitionedRVD` to an `OrderedRVD` with empty key (and leaves `OrderedRVD`s alone), and the second takes an `OrderedRVD` to an `UnpartitionedRVD` if its key was empty, and leaves it alone otherwise. Once they're all rewritten this way, I redefine `toOldStyleRVD` to always return `OrderedRVD`, and `UnpartitionedRVD` is no longer used.; * **remove `TableUnkey`** - With `UnpartitionedRVD` going away, `TableUnkey` is no longer necessary, it's equivalent to keying by an empty key.; * **small tweaks** - these next two rewrite more `TableIR` nodes; * **Merge master** - the big one; * **tweak MatrixColsTable** - 1) Optimize `coerce` by checking if the requested key is empty, avoiding a scan in that case. 2) Optimize `sortedColsValue` by checking if the column key is empty, avoidin",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4319:106,simpl,simple,106,https://hail.is,https://github.com/hail-is/hail/pull/4319,1,['simpl'],['simple']
Usability,This PR refactors the aioclient to merge the functionality of Batch and BatchBuilder into just a single Batch object. The reason for making this change is to make adding job groups simpler. I will follow up with a change to Jobs after this merges. I apologize for the number of line changes. Most are just renaming `bb -> b` in the tests.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13458:181,simpl,simpler,181,https://hail.is,https://github.com/hail-is/hail/pull/13458,1,['simpl'],['simpler']
Usability,"This PR removes the `as_array` parameter on `pca` and `hwe_normalized_pca`. The scores and loadings tables are constructed to always have a field of array type, mirroring the eigenvalues array. This simplifies the interface and makes pipeline (and PC indexing) behavior more predictable.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3280:199,simpl,simplifies,199,https://hail.is,https://github.com/hail-is/hail/pull/3280,1,['simpl'],['simplifies']
Usability,"This PR should fail because the gsa key is not in the test namespace -- I think we should have a second user account for testing. Still to do is to expose all of the user key infrastructure in the batch `Makefile` and `test-locally` in pipeline and ci. At some point, we should consolidate the `google_storage.py` file so not duplicating with `ci`. . But first I wanted to get feedback. @danking @cseed @akotlar",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5866:377,feedback,feedback,377,https://hail.is,https://github.com/hail-is/hail/pull/5866,1,['feedback'],['feedback']
Usability,"This PR switches the `NDArrayEmitter` to emit column major data by default. However, it still allows things like the result of `MakeNDArray` to come back as row major. This simplifies code that calls BLAS considerably, since we no longer have to manually flip to column major and then flip back. . There's still unnecessary copying going on, just less. `emitNDArrayStandardStrides` is not a very smart method, always copies the data even if it's already in the right format. At some point a smarter version of this should check if the ndarray exists in memory with the proper striding already.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8555:173,simpl,simplifies,173,https://hail.is,https://github.com/hail-is/hail/pull/8555,1,['simpl'],['simplifies']
Usability,"This PR teaches gear/database.py to respect four more MySQL configuration parameters: `ssl-mode`, `ssl-ca`, `ssl-cert`, `ssl-key`. In particular, we can now turn TLS on or off and rotate keys by simply changing secrets and restarting the services. Since all sql-config secrets (except those in my namespace) currently have no certs, no keys, and no ssl parameters, after this PR merges all services will still use plaintext communications to the database. After this PR merges, I will update the root secret as well as all the service secrets (e.g. sql-auth-user-config) to have a shared client cert/key and our sql database's cert. Moreover I will set `ssl-mode` to `VERIFY_CA` which means (in our world, at least) verify the server's certificate but not the hostname (we use IPs to connect to our sql server) and present your own certificate for verification. Then I will restart all the services. Then I will ban plaintext connections to the database. Then I will PR a change that raises errors if we try to start a service with plaintext connections or unverified connections. I also:; - updated `create_database.py` so that it will propagate these TLS settings, if present, to created secrets, and; - updated CI to use `gear/database.py` and standard sql-config locations. All these parameters are defined by MySQL. We only support three options for [`ssl-mode`](https://dev.mysql.com/doc/refman/5.7/en/connection-options.html#option_general_ssl-mode), the remainder are either unnecessary or not supported (e.g. we have no hostnames so `VERIFY_IDENTITY` is irrelevant).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8433:195,simpl,simply,195,https://hail.is,https://github.com/hail-is/hail/pull/8433,1,['simpl'],['simply']
Usability,"This PR:. - Introduces `NDArrayReindex`, which allows the use of the `transpose` on hail `NDArrayExpressions`. ; - Introduces `NDArrayMap2`, which allows operations like elementwise +, -, /, *, etc. This has full broadcasting support to match numpys. ; - Fixes `NDArrayShape`, which was not properly implemented. The only reason `NDArrayShape` seemed to work was because calling `NDArrayShape` directly on a `MakeNDArray` or on a `NDArrayMap1` was always simplified away to just return the tuple. ; - Removed the Simplify rule that transformed `NDArrayShape(MakeNDArray(..., shape))` to `shape`, since that was resulting in a type change, as `NDArrayShape` always returns a required tuple and `shape` was not a required tuple.; - Changes `ndarrays_eq` in the tests to just go through `eval` instead of a write then read, since write and read don't exist yet. . Things I'm not happy with:; - The rule for emitting `NDArrayReindex` is written twice, since depending on the situation one or the other is computationally cheaper. Seems like there should be a version of `NDArrayEmitter` that allows us to use an already existing array as the data. . Might add a few more tests, but code is here for review.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7069:455,simpl,simplified,455,https://hail.is,https://github.com/hail-is/hail/pull/7069,2,"['Simpl', 'simpl']","['Simplify', 'simplified']"
Usability,"This PR:. 1. Refactors `ResultOp` to just take an index and return whatever agg result is at that index. No more returning a suffix of the total aggregator tuple based on a starting index. This is necessary for me to effectively implement my Fold aggregator, which will be included in a subsequent PR. ; 2. Pushes `EmitType` through aggregators, uses them as the basis for analyzing the requiredness of aggregator results.; 3. Changes `_storeResult` on aggregators to instead just be `_result`, which directly returns an `IEmitCode`. No reason that `ResultOp` had to be so wound up in `PType`s, and for the most part this made the code simpler.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10894:636,simpl,simpler,636,https://hail.is,https://github.com/hail-is/hail/pull/10894,1,['simpl'],['simpler']
Usability,"This PR:. 1. Refactors `listify` to return pandas dataframes, and every geom to take in pandas dataframes. This significantly simplifies the code and should also speed things up.; 2. Refactors the `apply_to_fig` method of most of the geoms to rely on a specification dict and then just loop over that. This simplifies adding a new argument / aesthethic. In the future, it may be best to just make all of the geoms take `**kwargs` so that arguments added to that dict will immediately be used for plotting, as right now I have to add something to `geom_bar`, `GeomBar.__init__`, and that dictionary for it to start showing up in plots. ; 3. Adds `identity` as a bar position, which means to plot bars on top of each other. This is useful along with the `alpha` argument added to bars and histograms, which sets transparency of points.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11317:126,simpl,simplifies,126,https://hail.is,https://github.com/hail-is/hail/pull/11317,2,['simpl'],['simplifies']
Usability,This Region will get cleared by consumers. I introduced the zip primitive which is a safer way to; zip two RVDs because it does not rely on the user correctly; clearing the regions used by the left and right hand sides; of the zip. cc: @cseed,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3400:21,clear,cleared,21,https://hail.is,https://github.com/hail-is/hail/pull/3400,2,['clear'],"['cleared', 'clearing']"
Usability,"This adds `SpillingCollectIterator` which avoids holding more than 1000 aggregation results in memory at one time. We could do something that listens for GC events and spills data if there's high memory pressure. That seems a bit error prone and hard. How should I pipe the size limit down to TableMapRows? I decided to make it a HailContext `flag` which means its not very user-visible, but Laurent can set it for now. In C++ we can design a system that is aware of its memory usage and adjusts memory allocated to scans accordingly. Spilling ten local files and then reading them in is probably in the noise of timings. 🎉. ---. ### Implementation Notes. I had to add two new file operations to the `RichHadoopConfiguration` because I need seekable file input streams. I don't like the names. I'm not sure what to do here. Hadoop really screws us with the seek-ability on compressed streams. The implementation is rather simple, it just maintains an array of the per-partition results. The index of the array corresponds to the partition index. The sparsity of that array is controlled by how often we spill. For an operation with a huge number of partitions that are often spilled (e.g. large number of partitions, each with a lot of data), we may want to use a `Map` instead of an `Array`. The use of `ObjectOutputStream` without a try-catch-finally block is non-standard. I was having trouble seeking to individual classes when I used one ObjectOutputStream to output each partition's array. There were these ""bad header"" messages. This seems to work. I don't close the OOS because I'm going to re-use the underlying output stream on the next partition. We use O(n_spills) files. ---. ### Timings. Master 0.2.14-4da055db5a7b; ```; In [1]: %%time ; ...: ; ...: import hail as hl ; ...: ht = hl.utils.range_table(10000, n_partitions=10000) ; ...: ht = ht.annotate(rank = hl.scan.count())._force_count() ; CPU times: user 1.45 s, sys: 333 ms, total: 1.78 s; Wall time: 24.6 s; In [3]: %%time ; ...: ;",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6333:922,simpl,simple,922,https://hail.is,https://github.com/hail-is/hail/pull/6333,1,['simpl'],['simple']
Usability,"This adds `partitionKeys` which partitions the keys into partitions containing as-near-to-equal-as-possible number of records. The partitions are represented by an array, `pb`, of keys of length `nPartitions + 1`. The partitions are taken to include records with keys in; ```; [pb(0), pb(1)); [pb(1), pb(2)); ...; [pb(nPartitions-1), pb(nPartitions)]; ```; Note that the last partition is inclusive of both end-points. I have two simple examples of the partitioning behavior at the top of `LSMSuite`. In these cases, the number of elements is so small that the LSM perfectly stored the distribution, so there is no approximation. `LSMSuite` also contains tests that use enough keys so as to force the LSM to not keep them all. When the LSM has more than 10,000 keys, it starts sampling. It flips a coin that is true with probability `10,000 / n_keys_seen`. As we see more keys, the probability that the next seen key is kept decreases. If we decide to keep a key, we uniformly randomly choose a key to evict. The above is not entirely true. In reality, we keep 9998 keys in an array and separately keep the greatest and the least. Those are the true greatest seen key and the true least seen key. The probabilities above are adjusted accordingly. If the sample of keys is unbiased, then we expect the partitions chosen to be roughly equal in number of records. ---. The TestNG changes are already in another PR, I'll rebase when that lands. I separately fixed a bug in KeyedCodecSpec wherein it incorrectly assumed the Key and Value types were the same. I also fixed a bug in that the LSM used non-thread-local regions. Regions are not thread safe and the Indeed LSM implementation uses many threads. In order to track every addition to the LSM, I made the Indeed LSM object private and made the Hail LSM class have the necessary methods.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8803:430,simpl,simple,430,https://hail.is,https://github.com/hail-is/hail/pull/8803,1,['simpl'],['simple']
Usability,"This adds `test_storage_uri` and `batch_logs_storage_uri` fields in the global config. In GCP, this meant just copying existing GCS bucket names and prepending `gs://`, which I've done in the terraform and manually in default. For azure, in the terraform I add two storage accounts, `batch` and `ci`, with `logs` and `test` containers, respectively. This felt like an intuitive consolidation of containers under storage accounts that would make permissioning cleaner. E.g. the batch service principal has access to the entire batch storage account, but only to the `test` container in the ci storage account. However, I've not thought about it deeper than that so it might be worth some looking into. Luckily this decision has no impact on application code. There's still more to be done in a follow-up PR to replace instances of `hail_test_gcs_bucket_name` with `test_storage_uri`, but I think this takes care of the batch deployment's dependency on GCS.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11014:368,intuit,intuitive,368,https://hail.is,https://github.com/hail-is/hail/pull/11014,1,['intuit'],['intuitive']
Usability,"This adds roles to the auth service. They are not used yet, but they are stored in the database and I created a simple UI for adding them. I tested with this dev deploy. FYI @danking @jigold",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9672:112,simpl,simple,112,https://hail.is,https://github.com/hail-is/hail/pull/9672,1,['simpl'],['simple']
Usability,This adds simple unit tests to the CI functionality that generates the configs for `gateway` and `internal-gateway`. It also adds a developer-only endpoint to CI for easier inspection of what configs CI is currently generating in production. These configs do not contain any sensitive information.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14524:10,simpl,simple,10,https://hail.is,https://github.com/hail-is/hail/pull/14524,1,['simpl'],['simple']
Usability,"This adds the Google Cloud Monitoring and Prometheus datasources to the grafana configuration. I had done this initially by hand in the UI but this is the first step toward reproducible monitoring, and I'll eventually follow up with dashboards as code. The one ""change"" I made is I exposed the prometheus port sitting behind nginx so that grafana can talk directly to prometheus. Currently, there's an nginx sitting in front of prometheus so that the prometheus UI can be exposed at prometheus.hail.is with https and dev authentication. This hasn't changed. Currently though, grafana is piggybacking on this flow by forwarding the user's session (which I set up in the UI), but I couldn't figure out an easy way to set that in the config and it seemed unnecessarily complicated. I ended up going the simpler route of just letting grafana talk to prometheus directly and not go through nginx. The 9090 endpoint is not reachable outside of the cluster. I considered namespacing the prometheus domain (`{{ default_ns.name }}` instead of `default`), but I pretty much never find it useful to spin up my own prometheus. In the rare case I run my own grafana I just point it to the data from default.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10627:800,simpl,simpler,800,https://hail.is,https://github.com/hail-is/hail/pull/10627,1,['simpl'],['simpler']
Usability,"This adds the k8s config necessary to host the [guide browser](https://hub.docker.com/r/gneak123/guide_browser/tags) in our k8s cluster. You can see it running in dev [here](https://internal.hail.is/dgoldste/guide-analysis/). There's not much special here, a deployment with the browser app and an envoy sidecar to handle TLS. Once this merges and the `ssl-config-guide-analysis` is created in `default` I can `make -C guide deploy NAMESPACE=default` and then recreate the certs to pick up the new subdomain, after which it should be live. Resolves #14067",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14078:48,guid,guide,48,https://hail.is,https://github.com/hail-is/hail/pull/14078,4,['guid'],"['guide', 'guide-analysis']"
Usability,"This assert is here because the buffer we use in the FS is a Java array and can't be longer than MAX_INT, but clearly the position in the blob can be more than that. This currently breaks range reads into indexes on data that's more than 2GiB.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12164:110,clear,clearly,110,https://hail.is,https://github.com/hail-is/hail/pull/12164,1,['clear'],['clearly']
Usability,"This basically implements the collect-and-broadcast strategy that we use for the current BlockMatrix.execute. I think it might be good to eventually be able to lift scalar broadcasts out as a relational let in a simplify pass instead of in the lowering, but in the meantime I've implemented it in the lowerer also.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9140:212,simpl,simplify,212,https://hail.is,https://github.com/hail-is/hail/pull/9140,1,['simpl'],['simplify']
Usability,"This certificate is valid for a server whose DNS name; is `example.com`. If ""hostname checking"" is enabled (web browsers always; enable it), then the client will reject the certificate if the hostname used; to open the socket does not match the certificate.; - `-addext subjectAltName = ...`. This specifies additional acceptable hostnames; for the aformentioned hostname check. #### Trust. An X.509 Certificate only proves that the principal has a private key. On the; world wide web, ownership of a particular domain, e.g. `example.com`, is; guaranteed by a Certificate Authority (CA). A Certificate Authority (like; letsencypt or VeriSign) digitally signs the certificate of a user that has; proven they own the domain name mentioned in the certificate (see above; discussion of `CN` and `subjectAltName`). Web browsers have a file of the ""root""; certificates of the public Certificate Authorities. They establish a ""chain of; trust"" from a root certificate to the server's certificate. Our system is simpler. We have no root certificate. Each principal has a; certificate which is given to all the principals to which it might; communicate. ### Encryption. TLS has many encryption schemes. I will focus on encryption using a *symmetric*; key because asymmetric schemes do not enable *forward secrecy* [2]. Under; forward secret schemes, the two parties share a private key unknown to all; adversaries. TLS 1.3 makes forward secrecy mandatory. I intend to eventually; require all our services to refuse to speak anything other than TLS 1.3. The shared private key is used to encrypt and decrypt messages sent over a; socket. This poses a problem: how do two parties who have never met each other; agree on a private key without revealing the key to the public? This is a; classic cryptography problem called [key; exchange](https://en.wikipedia.org/wiki/Key_exchange). The classic solution to; this problem is [Diffie-Hellman key; exchange](https://en.wikipedia.org/wiki/Diffie–Hellman_key_exchange",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8561:4869,simpl,simpler,4869,https://hail.is,https://github.com/hail-is/hail/pull/8561,1,['simpl'],['simpler']
Usability,This change allows batchces which fit in one bunch to be created in one; request instead of three. I found this saved a few hundred milliseconds; for batches with 1 job. This path is already well tested because most; of our test batches fit in one job. To be clear: all the savings here is from avoiding two round-trips to front-end.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11044:259,clear,clear,259,https://hail.is,https://github.com/hail-is/hail/pull/11044,1,['clear'],['clear']
Usability,"This change combines cloud auth logic that was previously duplicated; between the various `FS` implementations and the `BatchClient`. . The main refactoring is to make the interface between the `ServiceBackend` more; high-level and leave json serialisation to the `BatchClient`. To do this, I've; added a bunch of case classes that resemble the python objects the batch service ; expects (or a subset of the data). To simplify the interface, I've split batch; creation from job submission (update). For QoB, the python client creates the ; batch before handing control to the query driver; batch creation is necessary; for testing only. This change has low security impact as there are minor changes to the creation; and scoping of service account credentials. Note that for each `FS`, credentials; are scoped to the default storage oauth2 scopes for each service.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14684:418,simpl,simplify,418,https://hail.is,https://github.com/hail-is/hail/pull/14684,1,['simpl'],['simplify']
Usability,"This change exists as part of larger refactoring work. Herein, I've exchanged; hard-coded contextual strings passed to `ExecutionTimer.time` with implict; contexts, drawing inspiration from scalatest. These contexts are now supplied after entering functions like `Compile` and; `Emit` instead of before (see `ExecuteContext.time`). By sprinking calls to ; `time` throughout the codebase after entering functions, we obtain a nice trace; of the timings with `sourcecode.Enclosing`, minus the previous verbosity. See [1] for more information about what pre-built macros are available. We can; always build our own later. See comments in [pull request id] for example output.; Note that `ExectionTimer.time` still accepts a string to support uses like; `Optimise` and `LoweringPass` where those contexts are provided already.; It is also exception-safe now. This change exposed many similarities between the implementations of query; execution across all three backends. I've stopped short of full unification; which is a greater work, I've instead simplified and moved duplicated result; encoding into the various backend api implementations. More interesting changes are to `ExecuteContext`, which now supports; - `time`, as discussed above; - `local`, a generalisation for temporarily overriding properties of an ; `ExecuteContext` (inspired by [2]). While I've long wanted this for testing,; we were doing some questionable things when reporting timings back to python,; for which locally overriding the `timer` of a `ctx` has been very useful.; We also follow this pattern for local regions. [1] https://github.com/com-lihaoyi/sourcecode; [2] https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Reader.html#v:local",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14679:1046,simpl,simplified,1046,https://hail.is,https://github.com/hail-is/hail/pull/14679,1,['simpl'],['simplified']
Usability,"This change grew out of https://github.com/hail-is/hail/pull/13674.; The idea is simple - we shouldn't be appending code after control statements as such statements are redundant. That idea opened pandora's box, but now we're not generating and dropping dead code anymore. Main changes that rose form fixing fallout from adding assert in `Block.append`:; - Implement basic control-flow structures (if, while, for, switch) in `CodeBuilderLike` and remove the older implementations from `Code`.; - main difference is these are built from sequencing `Code` operations rather than being defined from LIR; - allows for a higher-level implementation that I think is simpler to read.; - Use the type-system to prevent foot-guns like `cb.ifx(cond, label.goto)`. Other changes:; - rename `ifx`, `forLoop` and `whileLoop` to just `if_`, `for_` and `while_`, respectively.; - Implement loops in-terms of one-another to remove code duplication.; - Fix logic for when to write IRs as some default value behaviour was broken when `HAIL_WRITE_IR_FILES` was set in tests",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13752:81,simpl,simple,81,https://hail.is,https://github.com/hail-is/hail/pull/13752,2,['simpl'],"['simple', 'simpler']"
Usability,"This change integrates the C++ code of libhail with the python code as; a python native extension exposed as _hail. It is extremely minimal for; now, containing only small wrappers for the C++ versions of hail virtual; types as python classes/objects. It is completely unused and introduces; python build time dependencies of a C++20 compiler and CMake. The LLVM dependencies should be optional for now as they add a lot to; the binary size without adding any functionality. They will still get; built if they are found. In the future, it may be easier or more desireable to maintain the _hail; module sources as Cython rather than C++, however, for both learning's; sake and ease of compilation, the module is pure C++.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10505:655,learn,learning,655,https://hail.is,https://github.com/hail-is/hail/pull/10505,1,['learn'],['learning']
Usability,"This change is split out from a larger refactoring effort on the various Backend; implementations. The goals of this effort are to provide query-level; configuration to the backend that's currently tied to the lifetime of a backend,; reduce code duplication and reduce state duplication. In this change, I'm removing blockmatrix persist/unpersist from the `Backend`; interface by adding `BlockMatrixCache: mutable.Map[String, BlockMatrix]` to; `ExecuteContext`. The various reader/writer implementations simply fetch the ; block matrix from this cache. For the spark backend, this is backed by a cache; whose lifetime is tied to the spark backend. Since block matrices are not; supported in the local and service backends, the cache is an empty map. Note that block matrix persist is broken in python (#14689)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14690:504,simpl,simply,504,https://hail.is,https://github.com/hail-is/hail/pull/14690,1,['simpl'],['simply']
Usability,"This change simplifies aspects of the annotation db's implementation as well as adding new features such as annotating a Table or using a custom JSON configuration file. The Annotation DB will remain experimental until we iron out the JSON configuration file's structure and we're confident in the deploy process. - Allow custom URL or JSON for configuration (enabling testing and local development).; - Support Tables.; - Restructure the annotation db JSON to reduce duplication. It now maps from dataset name to dataset metadata and dataset versions.; - Simplify JS logic based on new JSON structure.; - Check-in and implement versioned deployment of the annotation db configuration JSON.; - Add a JS file to the website that defines `hail_version` and `hail_pip_version`.; - Add `key_properties` which currently supports two properties `gene` and `unique`. Gene keyed datasets require using the `gencode` dataset to crosswalk from locus to gene before joining.; - Rudimentary test of key properties functionality. Foundational Changes Outside Annotation DB:; - Define `__pip_version__` in `hail`.; - Teach `StructExpression` and `TupleExpression` how to slice by integers, facilitating the construction of structs of a prefix of fields.; - Make `ttuple` a mapping from integers to the tuple elements.; - Implement `Table._maybe_flexindex_table_by_expr` which, given a indexer expression, finds a prefix of the expression that can index the indexee, if such an expression exists. Unrelated changes:; - Clarify Makefile error echos with `ERROR:`. ---. ## flexindex. The primary use case for this is a dataset which is `locus, allele` keyed and needs to index into a `locus` keyed or `interval<locus>` keyed dataset. Hail's normal join logic will return a key mismatch error:. ```python; import hail as hl; t = hl.utils.range_table(10); t2 = t.key_by(x=t.idx, y=t.idx); t.index(t2.key); ```; ```; Traceback (most recent call last):; File ""<ipython-input-6-3ddc90774dfe>"", line 1, in <module>; t.index(",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7178:12,simpl,simplifies,12,https://hail.is,https://github.com/hail-is/hail/pull/7178,2,"['Simpl', 'simpl']","['Simplify', 'simplifies']"
Usability,"This change simplifies the logic to create the various globals when computing linear regression, cuts the size of the IR in half, and makes the code faster in the process. Benchmark times for linear_regression_rows_nd on my laptop:. Before this PR: [37.80013062, 37.84073734200001, 38.025162351999995]; After this PR: [31.85279850500001, 33.12659071399999, 31.33206254000001]. So about 15% faster, but still not fast enough. Regular linear regression is 22 seconds on my laptop.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10075:12,simpl,simplifies,12,https://hail.is,https://github.com/hail-is/hail/pull/10075,1,['simpl'],['simplifies']
Usability,"This commit changes the tracking of Joins on Python expressions; in two ways:. First, joins are switched from being tracked explicitly; on Expression to being a part of the expr AST. Second, broadcasts are split off as a separate AST node, which; lets us make them significantly simpler. It also made it easy; to collapse all broadcasts for a given MT/Table operation into; one MapGlobals IR, instead of one per broadcast variable. In the future, all the metadata on Expression should be tracked; on AST (type, aggregations, indices). This is a first incremental; step in getting there.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3573:279,simpl,simpler,279,https://hail.is,https://github.com/hail-is/hail/pull/3573,1,['simpl'],['simpler']
Usability,This creates redundant bindings that interfere with our ability to apply certain simplification rules.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7720:81,simpl,simplification,81,https://hail.is,https://github.com/hail-is/hail/pull/7720,1,['simpl'],['simplification']
Usability,"This currently is exposed in `read_table` and `read_matrix_table` as; undocumented optional parameters `_intervals` and `_filter_intervals`; which takes a list of python `Interval`s that are used either as; a filter or a repartition. This adds an `IndexedRVDSpec` as the primary container format for; indexed data, and increments the file version to 1.1.0. One index file is written per partition. For matrix tables, the offset; to a particular key for the entries is stored in the `entries_offset`; field of the annotation that an index may contain. We use the new; `IndexSpec` to retrive the appropriate offset from the index so that we; can seek to the proper offset in the partition. When writing data with a blocked spec (like the default) we use virtual; index offsets similar to tabix. The high 48 bits are used to indicate; the file offset to the start of a block, and the low 16 bits are used to; indicate the offset from the start of the (possibly decompressed) block. cc @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6266:70,undo,undocumented,70,https://hail.is,https://github.com/hail-is/hail/pull/6266,1,['undo'],['undocumented']
Usability,This diff is pretty inscrutable but this entire PR is just a reorganization to better make use of terraform modules. The only things that are not shifting code into different modules and invoking those modules are:. - Made the default AKS node pool the nonpreemptible pool instead of having two custom pools in addition to default; - Added subscription/resource group level roles to be added to the service_principal module which removed a fair amount of repetitive role blocks.; - The azure module directly invokes Kubernetes resources instead of managing two separate states (one for azure and one for k8s). This simplifies the process to one `terraform apply` instead of two and removes the need for the janky copying of outputs to inputs that happened in bootstrap.sh. Sorry for the nearly 1k line PR but I think maintaining this terraform is going to be easier going forward and better to be done atomically.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11175:615,simpl,simplifies,615,https://hail.is,https://github.com/hail-is/hail/pull/11175,1,['simpl'],['simplifies']
Usability,"This doc introduces the entire Hail project to new software engineers. This is a response to; Carolin's and Daniel's critiques of our on-boarding documentation. I think there's a lot more to say, but I think it's time for some feedback before I continue. The other things I want to document:; - How we use git? Including practical examples.; - What does genetic data look like?; - What is a GWAS?; - What is PCA as applied to genetics?; - A Tour of Hail Query (in the spirit of Soustroup's a Tour of C++).; - A Bibliography of Hail Team's recommended books.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10020:227,feedback,feedback,227,https://hail.is,https://github.com/hail-is/hail/pull/10020,1,['feedback'],['feedback']
Usability,"This does, what I believe to be the minimum necessary to get Tabix reading working in a standard VCF reader.; ; * Add GenericLines readTabix; * Harmonize import_gvcfs arguments and MatrixVCFReader parameters, as such, it is now possible to directly override the sample ids.; * Remove the undocumented (and until this change, dead) _partitions argument to import_vcf",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12375:288,undo,undocumented,288,https://hail.is,https://github.com/hail-is/hail/pull/12375,1,['undo'],['undocumented']
Usability,"This fixes a bug in joins where:; * The join key is a prefix of the left key; * Values of the join key in the left table span multiple partitions. For example, say the left table is `{[(0, 0), (0, 1)], [(0, 2), (1, 0)]}`, where the two lists of tuples are the two partitions, and the key is the entire tuple, and the join key is just the first field. Then in the old code; ```; val loweredLeft = lower(left).strictify(); val leftKeyToRightKeyMap = left.typ.keyType.fieldNames.zip(right.typ.keyType.fieldNames).toMap; val newRightPartitioner = loweredLeft.partitioner.coarsen(commonKeyLength); .rename(leftKeyToRightKeyMap); val loweredRight = lower(right).repartitionNoShuffle(newRightPartitioner); ```; the left partitioner is coarsened to `[(0), (0)], [(0), (1)]` in the third line, and the `repartitionNoShuffle` in the fourth line fails because rows with key `(0)` are split across both partitions. One possible fix would be to strictify the coarsened partitioner, which in this case would force the left table to one partition. But this seems dangerous performance-wise. Instead, this PR makes the lowered behavior match the old behavior, which is to ""repartition"" the right to the invalid partitioner `[(0), (0)], [(0), (1)]`, meaning rows with key `(0)` get duplicated into both partitions. This is exactly the intended semantics of `alignAndZipPartitions` as described in the code:; > The partitioner of the result will be the left partitioner. Each partition will be computed by 'joiner', with corresponding partition of 'this' as first iterator, and with all rows of 'that' whose 'joinKey' might match something in partition as the second iterator. This behavior is implemented with a flag `allowDuplication` on `repartitionNoShuffle`. This simply omits the assertion on the new partitioner that guarantees each incoming row ends up in at most one result partition.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11556:1751,simpl,simply,1751,https://hail.is,https://github.com/hail-is/hail/pull/11556,1,['simpl'],['simply']
Usability,"This fixes one mistake (right join does not set fields in the right table to missing), and makes the join table to be more precise. Keys are arrays of columns/fields of the table. They need to be present (they must be of same length and type for a join to be performed). The values are what are considered. The description also doesn't give a clear idea that left/right join is really about returning all rows from left/right table, and then joining the right/left table's fields depending on matches.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8467:343,clear,clear,343,https://hail.is,https://github.com/hail-is/hail/pull/8467,1,['clear'],['clear']
Usability,"This flips the pca algorithm, so that we're locally collecting a Krylov space basis on the column side (presumably the smaller side). This leads to a few simplifications, and allows for an optimization in the `compute_loadings=False` case. Once we have a complete TSQR implementation, we can optimize the `compute_loadings=True` case as well. With that, there should be no memory limitation to the number of rows (no local value is O(rows)).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10264:154,simpl,simplifications,154,https://hail.is,https://github.com/hail-is/hail/pull/10264,1,['simpl'],['simplifications']
Usability,This function permits developers to preserve ordering; when flatMaping a function which produces elements; montonically related to the source element. This change depends on PR #706. Merging that commit will simplify this diff.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/696:208,simpl,simplify,208,https://hail.is,https://github.com/hail-is/hail/pull/696,1,['simpl'],['simplify']
Usability,"This implements my proposal to simplify aggregators here: http://dev.hail.is/t/proposal-for-aggregators/93/3. Builds on: https://github.com/hail-is/hail/pull/3552. I still need to finish converting some tests from ExtractAggregatorSuite (they are currently commented out). Old-style aggregators (filter, map, flatMap) are expanded at toIR conversion time to ApplyAggOp and SeqOp. ApplyAggOp returns the result of the aggregation. ApplyAggOp's first argument, which must be of type TVoid, is the expression to run for each element being aggregated over. SeqOp merges a computed value into the RegionValueAggregator. I added a AggSignature that holds the AggOp, type being aggregated over and the RegionValueAggregator constructor argument types. This is stored by the ApplyAggOp and the SeqOp. @tpoterba I believe TAggregable is no longer used in the IR code and can go away when the AST gets ripped out. @danking I added some IR testing logic to TestUtils. Namely, `eval` evaluates an IR with environments, args and/or aggregations with a single call (and verifies that the interpret with and without optimization and compiler all agree). There are also functions for asserting the result of aggregations, for example:. ```; val aggSig = AggSignature(Sum(), TFloat64(), FastSeq()); assertEvalsTo(ApplyAggOp(; SeqOp(ApplyBinaryPrimOp(Multiply(), Ref(""a"", TFloat64()), Ref(""b"", TFloat64())), I32(0), aggSig),; FastSeq(), aggSig),; (FastIndexedSeq(Row(1.0, 10.0), Row(10.0, 10.0), Row(null, 10.0)), TStruct(""a"" -> TFloat64(), ""b"" -> TFloat64())),; 110.0); ```. The line:. > (FastIndexedSeq(Row(1.0, 10.0), ...), TStruct(""a"" -> TFloat64(), ""b"" -> TFloat64())),. is the IndexedSeq of values to aggregate over, along with their signature. The struct type is used to build the scope in which aggregators are evaluated. (A little noisy because of the aggregator syntax. It's noisier than I'd like it to be.). This nicely paves the way for aggregators with multi-argument seqOps (like takeBy) that were previou",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3570:31,simpl,simplify,31,https://hail.is,https://github.com/hail-is/hail/pull/3570,1,['simpl'],['simplify']
Usability,"This is a name to IP address and port service. GKE exposes pod IPs onto our VDC; network. As such, regular Google Cloud VMs can access pods by IP. GKE cannot; expose our services as IPs on our VDC because the way services load balance; traffic is more complex than DNS can handle. We acknowledge and accept the; limitations of client-side load balancing. In particular, if there are not many; clients and clients re-use address-port-pairs traffic will likely be; unbalanced. This is not a problem for the planned Shuffle service because the; clients are intended to be numerous (consider all the workers in a Query or; Batch pipeline). The big change is that deploy config now has an `addresses` function which will; return a list of address-port pairs. Deploy config also now has `address` which; randomly chooses one of the address-port pairs. I have included a simple test. Please review both code and overall design, considering how it fits in the wider system.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9129:864,simpl,simple,864,https://hail.is,https://github.com/hail-is/hail/pull/9129,1,['simpl'],['simple']
Usability,"This is a newer version of #9598. We decided to give users min(5Gi/core, 5 Gi) in `/` with mounting external storage at `/io` if they need more storage. All storage requests can be 0, 0 < storage < 10 will be rounded up to 10 Gi, or 10+Gi rounded up to the nearest integer. I added a loop to remove orphaned disks in gce.py. I changed how the resources appear in the spec. Now there's `req_cpu`, `req_storage`, `req_memory` which stores what the user specified. Then we also have `cores_mcpu`, `memory_bytes`, and `storage_gib` which are the actual resources allocated. I think this will be simpler and more understandable. Resources are computed in the front end now and the worker just uses the values from the front end (no more doing conversions on both the worker and front end). I kept backwards compatibility on the worker for now which can get deleted once there are no more jobs with batch format version < 6. I bumped the instance version to 16 so we know which workers have the new storage functionality. . I tested this by submitting 4 jobs on my 1 core test instance with 150Gi requests. I then looked at the worker logs to make sure the disks were created correctly and the value of the semaphore was correct. I also tested 0 Gi and 5 Gi by hand to make sure the resource fulfilled was 0Gi and 10Gi respectively. Lastly, I checked the billing to make sure we charged for the fraction of the SSD used as well as the cost of adding an extra persistent SSD for that job. I also looked at the disks in the GCE console to make sure they wear torn down correctly. Although there isn't a migration, we should make sure there are no non-ci jobs running so that we don't over allocate the storage available. Also, once this is merged, we should send an email to all users to let them know the cores must be a power of 2 now and about the storage now being mounted at '/io`. I put the WIP tag on so I can do this when I'm ready to.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10090:591,simpl,simpler,591,https://hail.is,https://github.com/hail-is/hail/pull/10090,1,['simpl'],['simpler']
Usability,"This is a pretty simple change, though the diff is a little bizarre. I don't want running a ukbb server to be a requirement of running a hail instance. Since the ukbb app is a special case in the way we deploy apps in k8s, we would render the gateway configuration server blocks with the logic:. - For each service, if it's not ukbb, render it the usual way; - Render the ukbb block. This is a very simple change to instead make the logic. - For each service, if it's ukbb render it the ukbb way, else render it the usual way. Together with the separation of the ukbb terraform into its own module in #10842, it should be easier to deploy hail without the ukbb app and simplify the bootstrap process. This is currently running in hail-vdc.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10845:17,simpl,simple,17,https://hail.is,https://github.com/hail-is/hail/pull/10845,3,['simpl'],"['simple', 'simplify']"
Usability,"This is a simple refactor, that moves `Stream[A]` to a top-level class. Some of my wip depends on this, so it will be helpful to get it merged. This should also simplify merging `Stream` with the PType infrastructure, where `Stream` should become a `PCode`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8547:10,simpl,simple,10,https://hail.is,https://github.com/hail-is/hail/pull/8547,2,['simpl'],"['simple', 'simplify']"
Usability,"This is a simple refactoring of `lir.Emit` to directly use the core visitor based interface of ASM, rather than the higher level `tree` interface. This should have a small performance benefit, as we aren't building the in-memory tree representation only to immediately walk it with a visitor. But I also find this version of `Emit` slightly cleaner. For reference, you can find the documentation for ASM 5.1 [here](https://javadoc.io/doc/org.ow2.asm/asm/5.1/index.html).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9511:10,simpl,simple,10,https://hail.is,https://github.com/hail-is/hail/pull/9511,1,['simpl'],['simple']
Usability,"This is a simple tidying refactoring to hide the `children` array from consumers of `BaseIR`. My main motivation is to make it easier to explore other ir data structure designs, and to migrate to a new design in the future, e.g. to allow for in-place mutation without requiring large-scale changes to every compiler pass, and to simplify how we encode binding structure.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13214:10,simpl,simple,10,https://hail.is,https://github.com/hail-is/hail/pull/13214,2,['simpl'],"['simple', 'simplify']"
Usability,"This is a simplified implementation of `Process.communicate`. We feed lines into the log one-by-one; until we reach the end of both stdout and stderr. When both stdout and stderr have been closed by; the child process, we wait for the process to exit. At any point in time, the most recent log is; available to us.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10259:10,simpl,simplified,10,https://hail.is,https://github.com/hail-is/hail/pull/10259,1,['simpl'],['simplified']
Usability,"This is an improvement, but I think we should reconsider the batch state. Thinking out loud: The batch and CI UIs have slightly different displays. If you're running, have had a failed job, but also been cancelled, what should your state be? I think we either need columns in the batch display for open/closed, cancelled, complete and the simple state (open, running, cancelled, failure, success ... where the latter 3 mean complete), or display compound states like ""running failure cancelled"".",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7897:339,simpl,simple,339,https://hail.is,https://github.com/hail-is/hail/pull/7897,1,['simpl'],['simple']
Usability,"This is an initial revision intended for feedback, there is much left to do; ### TODOs; - [x] Implement Read from index, notably for two operations, filter and repartition.; - [ ] Write matrix table indices; - There needs to be some work done on figuring out how to index both the rows and entries, especially when reading the entries as a table. Indices support an arbitrary `Annotation` payload that could be used. One thought I had for handling this is changing Indices rather than requiring a `offset: Long` and an `Annotation` changing them so that they only take some `Annotation`. Then the `TableSpec` or `MatrixTableSpec` would have a list of indices that would describe what needs to be pulled out of the `Annotation` in order to get the key's offset. cc @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6095:41,feedback,feedback,41,https://hail.is,https://github.com/hail-is/hail/pull/6095,1,['feedback'],['feedback']
Usability,"This is currently just dead code, although it could conceivably be useful in the future; I want to remove this for now as it's pretty simple to add back in at a later date (follows the pattern of Serialize/Deserialize Aggs pretty much exactly) and makes for less code to keep refactoring as we optimize the aggregator stuff.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6813:134,simpl,simple,134,https://hail.is,https://github.com/hail-is/hail/pull/6813,1,['simpl'],['simple']
Usability,"This is going to cause problems down the line. Here's an example where inappropriate use of parentheses does something unexpected:; ```python; In [39]: x = functions.capture(5). In [40]: eval_expr((3 < x) & x > 5); Out[40]: True. In [41]: eval_expr((3 < x) & (x > 5)); Out[41]: False; ```; I'm actually not sure what the order of operations is in [40], but it's clearly wrong.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2640:362,clear,clearly,362,https://hail.is,https://github.com/hail-is/hail/issues/2640,1,['clear'],['clearly']
Usability,"This is mostly done, though I'll give it another pass tomorrow to see if I catch any problems and to remove some unneeded text file exports and imports. I also want to create one script at the end of tutorial that can be easily copy and pasted and runs the whole tutorial. Just wanted to post it so people could start looking at it and give feedback.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1288:341,feedback,feedback,341,https://hail.is,https://github.com/hail-is/hail/pull/1288,1,['feedback'],['feedback']
Usability,"This is now the first PR in the deduping resource ids stack. I decided that we should directly write the new ""deduped_resource_id"" value rather than in a trigger to make things simpler to reason about later when dropping unused columns. The implication of this is this PR must now be fully deployed before #12757. We need to announce this on Zulip once this PR merges.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12786:177,simpl,simpler,177,https://hail.is,https://github.com/hail-is/hail/pull/12786,1,['simpl'],['simpler']
Usability,"This is runIfRequested deployment that simply has hail; and ipython installed. It facilitates developmnent of; services that interact with Hail Query (i.e. the Shuffler). I do this silly thing with a tar file because:; - I do not know the hail version (which is included in the wheel filename), so; - I am unable to copy it out with a variable name, and; - python refuses to install a wheel that does not have the version in the filename. I added `make update-hail-repl` to `hail/Makefile` which updates the hail wheel on the hail-repo without changing the pod or rebuilding the image. If the pod is restarted you lose your version, but the risk is worth the immense benefit of 5s deploys.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8194:39,simpl,simply,39,https://hail.is,https://github.com/hail-is/hail/pull/8194,1,['simpl'],['simply']
Usability,"This is the initial version of the ATGU intranet service. Currently, it has a curated list of resources which can be created, viewed, edited and deleted. Resources can have attachments, which I store on Google storage. I used the async Google Storage client and it worked very nicely with aiohttp. Right now this developers only. I may give access to the admins to start curating resources. I'll follow up with roles and add roles for atgu-viewer and atgu-editor that I'll use in the service. I think the code is mostly straightforward, but a few remarks:. This is built on Bootstrap. It doesn't share the the styling with web common (which I probably want to convert). On the resources page, for client side search I use fuse.js: https://fusejs.io/ (so fast). For a rich text box (the resource content), I use quill.js: https://quilljs.com/. Quill doesn't allow you to post its contents in a form, so I use a JS event handler to populate a hidden input with the contents on submission. I tested it with dev deploy. I suggest you do the same before reviewing to get a sense of what's here. Feedback on the UI welcome.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9684:1090,Feedback,Feedback,1090,https://hail.is,https://github.com/hail-is/hail/pull/9684,1,['Feedback'],['Feedback']
Usability,"This issue could have been an RFC, but that felt too heavy. I can move this to a formal RFC if desired, but otherwise feedback and/or questions welcome in the discussion here. # Idea; For any key type, create an encoding to variable-length byte arrays, which preserves the key ordering. That way, algorithms and data structures which use key comparisons can be written monomorphically, with `memcmp` as the only comparison function needed. Idea inspired by [Fast and Memory Efficient Multi-Column Sorts in Apache Arrow Rust](https://arrow.apache.org/blog/2022/11/07/multi-column-sorts-in-arrow-rust-part-2/) blog post. But while they've optimized for vectorized encoding (which we currently can't do), I've preferred simplicity and smaller encodings. # Design; Type encoders can emit three kinds of output to a byte array buffer:; - byte - simply add a byte to the result, first padding an incomplete byte if necessary; - bit - add a bit to the result, possibly leaving an incomplete byte. We must know statically how many bits are used in the byte.; - pad - add `0`s to pad the last incomplete byte. This is safe (prefix-free) because the number of used bits is a (statically known) constant. We use this to ensure the number of used bits is known statically.; 	; Types:; - missingness; - treat as a type constructor `optional<T>`, i.e. base types don't encode missingness. Emits a single bit in the encoding. Can invert this bit to control whether missing values come first or last in the ordering. If missing, nothing is emitted after.; - sort-order; - treat reversing the default ordering as a type constructor `reverse<T>`; - simply inverts the encoding bitwise; - primitive types; - same as in datafusion, encoding has same size as original type; - signed integers - flip the sign bit; - floating point numbers - if sign bit is set, invert all bits, otherwise only flip the sign bit; - arrays; - before each element and after last element, emit continuation bit (0 if no more elements); - pad be",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14396:118,feedback,feedback,118,https://hail.is,https://github.com/hail-is/hail/issues/14396,3,"['feedback', 'simpl']","['feedback', 'simplicity', 'simply']"
Usability,"This larger benchmark shows clearer separation between the old pc-relate approach and the current one. this branch (which include's master's improvements); ```; 2020-01-27 13:16:20,975: INFO: [1/1] Running pc_relate_big...; 2020-01-27 13:18:12,886: INFO: burn in: 111.90s; 2020-01-27 13:19:56,255: INFO: run 1: 103.35s; 2020-01-27 13:21:46,801: INFO: run 2: 110.54s; 2020-01-27 13:23:39,147: INFO: run 3: 112.37s; {""config"": {""cores"": 1, ""version"": ""0.2.31-68d448411ab5"", ""timestamp"": ""2020-01-27 13:23:39.157122"", ""system"": ""darwin""}, ""benchmarks"": [{""name"": ""pc_relate_big"", ""failed"": false, ""timed_out"": false, ""times"": [103.35172498200001, 110.53654034999997, 112.369625832]}]}; ```; before improvements `becbbc6d2` (run against this branch's new benchmark); ```; 2020-01-27 13:25:15,789: INFO: [1/1] Running pc_relate_big...; 2020-01-27 13:27:25,725: INFO: burn in: 129.92s; 2020-01-27 13:29:44,260: INFO: run 1: 138.48s; 2020-01-27 13:31:49,675: INFO: run 2: 125.40s; 2020-01-27 13:33:59,580: INFO: run 3: 129.86s; ```. cc: @tpoterba",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7975:28,clear,clearer,28,https://hail.is,https://github.com/hail-is/hail/pull/7975,1,['clear'],['clearer']
Usability,"This lets RVB copy values of a different type. To do this, I needed to; delete all the logic in RVB and move it to PType. This also was an; opportunity to slightly simplify the existing copy code. I realize this may be a challenge to review. Happy to walk through any part as necessary.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8099:164,simpl,simplify,164,https://hail.is,https://github.com/hail-is/hail/pull/8099,1,['simpl'],['simplify']
Usability,"This makes Hail Batch usable from a VM that's run under a service account, without requiring a JSON key. #assign services",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10647:22,usab,usable,22,https://hail.is,https://github.com/hail-is/hail/pull/10647,1,['usab'],['usable']
Usability,This makes the interaction with other infrastructure a bit simpler.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9951:59,simpl,simpler,59,https://hail.is,https://github.com/hail-is/hail/pull/9951,1,['simpl'],['simpler']
Usability,"This might be an overcorrection, but as it is we are not scheduling more than 30j/s with the database at max capacity. With 3 replicas of internal-gateway this will let 30rps reach the batch driver. This should give us a clear indication of whether rate limiting more aggressively will help with the database currently being overloaded. See [this thread](https://hail.zulipchat.com/#narrow/stream/300487-Hail-Batch-Dev/topic/trying.20to.20mark.20batch.200.20complete/near/423839864) for more details.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14374:221,clear,clear,221,https://hail.is,https://github.com/hail-is/hail/pull/14374,1,['clear'],['clear']
Usability,"This needs tests as well as I think I need to fix indexing (so I don't blow memory on the full genome), but I wanted to share what I've been up to with y'all. Also, caitlin can use this branch to run an analysis if it comes to that. I would also appreciate some feedback on the approach. It would be much more ideal to just make joins of variant tables against BGENs smarter, but I think the infrastructure necessary for that is big. cc: @cseed. List of changes:. - added `_variants_per_file` limits the loaded variants to variants at the given array of indexes (0-indexed, same order as on disk). - ~added `row_fields` which prevents reading and allocation of LID and RSID (also improved python-type-checking for `row_fields` and `entry_fields`)~ Moved to #3779 and #3778. - ~fixed table-table joins to _not_ always coerce (thus computing partition keys of) the right-hand table~ Moved to #3723 . - ~added a check that prevents globals and sample annotations copying when they're not used in the body of a MatrixMapCols~ Moved to #3751. - ~fixed a bug in `IndexBTree` wherein if the number of elements was a multiple of 1024, an unnecessary 1024 elements were added to the end of the index file (which I believe breaks the reading process which expects the number of bytes to correspond to the size of the tree)~ Moved to #3750. - ~added `IndexBTree2` which is just an in-memory list of the variant start positions. This is a fair bit of data. Chromosome 1 has about 250 million bases, so in the worst case this is 250 * 8 million bytes = 2 GB. It occurs to me that this is actually way to much data to load on the master node in general (since I just try to open the indexes for every file). I should switch this to a disk-based index.~ Made it disk-based, called it `OnDiskBTreeIndexToValue` #3794. - each hadoop `FileSplit` now contains a possibly null (indicating no filter) list of variants (by index) to keep, in practice this should be quite small. - ~I changed several asserts to `if`'s with ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3727:262,feedback,feedback,262,https://hail.is,https://github.com/hail-is/hail/pull/3727,1,['feedback'],['feedback']
Usability,"This opens the possibility for compiler differences to fail builds for our users. The CI server should simply set CXX and CC to clang and rebuild hail. Moreover, we need to ensure the hail build system passes these variables all the way down to `libsimdpp`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1327:103,simpl,simply,103,https://hail.is,https://github.com/hail-is/hail/issues/1327,1,['simpl'],['simply']
Usability,This provides useful feedback we can use to understand why `test_file_in_current_dir` keeps failing.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14151:21,feedback,feedback,21,https://hail.is,https://github.com/hail-is/hail/pull/14151,1,['feedback'],['feedback']
Usability,This removes support for parallel composable vcf export. I believe this; to be okay however as parallel composable export is undocumented and was; added for one specific internal project and may no longer be needed.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11656:125,undo,undocumented,125,https://hail.is,https://github.com/hail-is/hail/pull/11656,1,['undo'],['undocumented']
Usability,"This revamps the `batch.front_end` web pages to be a bit less cluttered and more usable. I brought in tailwindcss instead of using our existing sass. I mainly find it easier to work with but am fine porting it to sass if anyone feels strongly against changing css tools. In order to avoid overhauling all our HTML in one PR, I added a flag to the jinja context `use_tailwind` that is currently only on for the `batch` service. `layout.html` then uses this flag to determine which CSS and header it should use. If this gets to a state we're happy to merge, it should be a lot less work to bring over auth and CI and delete that flag.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14562:81,usab,usable,81,https://hail.is,https://github.com/hail-is/hail/pull/14562,1,['usab'],['usable']
Usability,"This sends a literal tab character to grep, taking advantage of Bash ANSI-C style quoting (see https://tldp.org/LDP/Bash-Beginners-Guide/html/sect_03_03.html)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9632:131,Guid,Guide,131,https://hail.is,https://github.com/hail-is/hail/pull/9632,1,['Guid'],['Guide']
Usability,This should be just a simple refactoring in anticipation of having bunches for job groups as well.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13448:22,simpl,simple,22,https://hail.is,https://github.com/hail-is/hail/pull/13448,1,['simpl'],['simple']
Usability,"This should fix the test_copy failures. The problem was, we were sending a mutable byte iterator for data when inserting a new object. If that insert read some of the data, failed, and was retried, the data that was read was lost and the retry started where the failed insert left off. To retry writes, you need to keep around the data you've sent to resend in case of failure. So you don't have to keep around an unbounded amount of data, Google Storage supports resumable uploads: https://cloud.google.com/storage/docs/resumable-uploads. This allows us to send data in chunks, and release the data after Google reports back that the data has been committed. `StorageClient.insert_object`, when the upload type is resumable (the default), takes an additional argument `bufsize`. This is the amount the amount that the writer will buffer for retries, and the size of the chunks sent to GCS. I kept around the simpler media upload type since I actually want to use it in copy (copy doesn't need to buffer because it can retry by rereading the file being copied from). This code was actually kind of hard to organize. It would be better if the code immediately wrote any incoming data instead of just buffering it until we hit the chunk size, but I didn't find a manageable way to write that. Suggestions welcome, tho it would be good to get this fix in because of the test failures.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10023:909,simpl,simpler,909,https://hail.is,https://github.com/hail-is/hail/pull/10023,1,['simpl'],['simpler']
Usability,This should put the issue of non-responsive cancels to rest.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7913:33,responsiv,responsive,33,https://hail.is,https://github.com/hail-is/hail/pull/7913,1,['responsiv'],['responsive']
Usability,This simplifies many of our methods with a `using` primitive for handling `Closeable` objects.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2103:5,simpl,simplifies,5,https://hail.is,https://github.com/hail-is/hail/pull/2103,1,['simpl'],['simplifies']
Usability,This simplifies the code and means that region bookeeping for the prune; queue is unnecessary.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12076:5,simpl,simplifies,5,https://hail.is,https://github.com/hail-is/hail/pull/12076,1,['simpl'],['simplifies']
Usability,"This simply adds the wrapping structure + header from app.hail.is. Includes no scss from app.hail.is. That will be the next PR unless you want it here. We should also decide whether we want a home page (the smoothly-rising Hail that Arcturus liked), i.e whether this will be extended with a link to batch, or not (we discussed the option at our last meeting). cc @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5429:5,simpl,simply,5,https://hail.is,https://github.com/hail-is/hail/pull/5429,1,['simpl'],['simply']
Usability,"This slows the exponential growth in sleeps dramatically. Enough that the tests don't sometimes wait 30 seconds to learn that a batch is finished. On my laptop, the tests just finished in less than three minutes.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5604:115,learn,learn,115,https://hail.is,https://github.com/hail-is/hail/pull/5604,1,['learn'],['learn']
Usability,"This test failure has occurred a few times. It's usually been resolved by simply re-running the test without any source code changes. There are at least four recent examples, all on different feature branches: . - [2017-02-21 11:10 UTC](https://ci.hail.is/viewLog.html?buildId=6489&tab=buildResultsDiv&buildTypeId=HailSourceCode_HailCi#); - [2017-02-15 21:51 UTC](https://ci.hail.is/viewLog.html?buildId=5446#2135525582_186_5446_problem); - [2017-02-15 18:45 UTC](https://ci.hail.is/viewLog.html?buildId=5333#1163765489_186_5333_problem); - [2017-02-13 22:42 UTC](https://ci.hail.is/viewLog.html?buildId=4934&tab=buildResultsDiv&buildTypeId=HailSourceCode_HailCi). ```; [11:19:14][:testHail] ======================================================================; [11:19:14][:testHail] ERROR: test_dataset (hail.tests.ContextTests); [11:19:14][:testHail] ----------------------------------------------------------------------; [11:19:14][:testHail] Traceback (most recent call last):; [11:19:14][:testHail] File ""/home/ec2-user/BuildAgent/work/c38e75e72b769a7c/python/hail/tests.py"", line 233, in test_dataset; [11:19:14][:testHail] vds_assoc = vds_assoc.lmmreg(vds_kinship, 'sa.pheno', ['sa.cov1', 'sa.cov2']); [11:19:14][:testHail] File ""<decorator-gen-89>"", line 2, in lmmreg; [11:19:14][:testHail] File ""/home/ec2-user/BuildAgent/work/c38e75e72b769a7c/python/hail/java.py"", line 93, in handle_py4j; [11:19:14][:testHail] raise FatalError(msg); [11:19:14][:testHail] FatalError: lmmreg: failed to fit delta: REML realized at delta upper search boundary e^10 = 22026.465794806718, indicating negligible genetic component of variance. Standard linear regression may be more appropriate.; ```. These are the [offending lines](https://github.com/hail-is/hail/blob/master/python/hail/tests.py#L222-L233):. ```; vds_assoc = (hc.import_vcf(test_resources + '/sample.vcf'); .split_multi(); .variant_qc(); .annotate_samples_expr(; 'sa.culprit = gs.filter(g => v == Variant(""20"", 13753124, ""A"", ""C"")).map(g =",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1416:74,simpl,simply,74,https://hail.is,https://github.com/hail-is/hail/issues/1416,1,['simpl'],['simply']
Usability,"This was a good one :). I haven’t measured the performance difference, but clearly the bug defeated the purpose of using a union-find data structure in the first place, which was to reduce the complexity of `unify` from quadratic to linear. While I was here, I made a separate simplification. Now that the sets are being unioned as intended, each set contains exactly one block that doesn’t start with a `GotoX`, and that block is the final target of all blocks in the set. That observation allows a simplification when computing the `rootFinalTarget` map.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9475:75,clear,clearly,75,https://hail.is,https://github.com/hail-is/hail/pull/9475,3,"['clear', 'simpl']","['clearly', 'simplification']"
Usability,This was based on feedback Cotton gave me in the Counter PR. I couldn't figure out how to get a nicer count of the number of elements for `result`.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3821:18,feedback,feedback,18,https://hail.is,https://github.com/hail-is/hail/pull/3821,1,['feedback'],['feedback']
Usability,"This was to simplify the bytecode generated for unsafe memory access calls vs Scala objects. If there was an improvement, it was smaller than the benchmark measurement noise. Also added some object+offset variants.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2184:12,simpl,simplify,12,https://hail.is,https://github.com/hail-is/hail/pull/2184,1,['simpl'],['simplify']
Usability,"This will fail until #7376 lands and allows the test to create an empty matrix table. - document `sep`; - add two tests for importing empty matrix tables, one with a header and one without; - include the offending lines in error messages when files have different numbers of columns; - consistently use `String.split(separator, 0)` instead of using two different approaches which yield inconsistent results.; - simplify `parseHeader` and generalize to empty files; - improve error message when a row field found in the file does not match one of the row fields specified by `row_fields` (a dictionary from row field name to type). NB: A no-header empty file implies no columns in the MT. We print a warning to this effect when we discover an empty file. Resolves #7242",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7378:411,simpl,simplify,411,https://hail.is,https://github.com/hail-is/hail/pull/7378,1,['simpl'],['simplify']
Usability,"To be clear, the bug was that if the rdd of IndexedRows backing the IndexedRowMatrix omitted some rows (as a way of indicating that they contained only 0's), that omitted row would not get written to TSV file. This has been corrected, and a test was created for it by making the test data in the Suite more interesting and adding an assertion.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1679:6,clear,clear,6,https://hail.is,https://github.com/hail-is/hail/pull/1679,1,['clear'],['clear']
Usability,"To do this add an intermidiate abstract PartitionWriter,; SimplePartitionWriter, and extend it with TextTablePartitionWriter. SimplePartitionWriter manages the output stream for its subclasses. The; subclasses need to implement consumeElement, and optionally preConsume; and postConsume. TextTablePartitionWriter handles the delimiter delimited writing per; element item and the line delimited writing per element of the stream.; It will also optionally write the header if ExportType.PARALLEL_HEADER_IN_SHARD; has been requested. TextTableFinalizer is the 'MetadataWriter' (name change pending), for; TextTableWriter. That's where the header is written for; PARALLEL_SEPARATE_HEADER and CONCATENATED, and files are merged for; CONCATENATED. There are currently a few idosyncracies that don't replicate bug-for-bug; compatibility with the non-lowered version. 1. We avoid the use of fs.copyMerge, as such, we don't check for the; existence of the _SUCCESS file (even though we create it).; 2. ExportType.PARALLEL_COMPOSABLE is unsupported.; 3. We rely on the temporary file cleaner to clean up the files; created for CONCATENATED export, rather than deleting them; explicitly.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11323:58,Simpl,SimplePartitionWriter,58,https://hail.is,https://github.com/hail-is/hail/pull/11323,2,['Simpl'],['SimplePartitionWriter']
Usability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: ; https://discuss.hail.is/. Please include the full Hail version and as much detail as possible. -----------------------------------------------------------------------------; First of all, thank you for making such a highly integrated tool. . I learned that this tool could be run in two modes, on Cloud and locally. Well, I happen to have an HPC server that I can work on, so I'd love to use the tool locally. However, many annotation tools require many annotation data that need to be prepared in advance, and no one has seen the exact format of them. Plus, the annotation data sometimes is stored on a google cloud bucket that is requester paid so I don't have a chance to take a peek at them. Therefore, even I try to fill my configuration file, the annotation data needed cannot be prepared unless I have a template of them. . Pls, consider adding a feature like, if we want to run an annotation job locally, let us download package containing all the necessary annotation data in there. So we can set up the configuration file on our own and run the job on a local HPC server. Much appreciated!",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9059:363,learn,learned,363,https://hail.is,https://github.com/hail-is/hail/issues/9059,1,['learn'],['learned']
Usability,"To report a bug, fill in the information below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. Sorry for the awful formatting!! I'm not familiar with how to properly format for GitHub, and clearly some of my code got picked up as formatting.... . EDIT: Fixed the formatting :). ### Hail version: 0.2 / devel. ### What you did: ; ```; import. hail as hl. def flip_text(base):; """"""; :param StringExpression base: Expression of a single base; :return: StringExpression of flipped base; :rtype: StringExpression; """"""; return hl.cond(base == 'A', 'T',; hl.cond(base == 'T', 'A',; hl.cond(base == 'C', 'G',; hl.cond(base == 'G', 'C', base)))). # load ldpred sumstats file; sumstats = hl.import_table('gs://ukbb_prs/sumstats/UKB_SCZ_LDPred.txt', delimiter='\s+', impute=True). # create locus and alleles columns and key by locus; sumstats = (sumstats.annotate(locus=hl.parse_locus(sumstats.chrom[6:] + "":"" + hl.str(sumstats.pos)),; alleles=[sumstats.nt1,sumstats.nt2]); .key_by('locus'); .order_by('locus')). # repartition sumstats to save time; sumstats = sumstats.repartition(100). # write the sumstats table; sumstats.write('gs://ukbb_prs/sumstats/UKB_SCZ_LDPred.kt', overwrite=True). # read the sumstats table; sumstats = hl.read_table('gs://ukbb_prs/sumstats/UKB_SCZ_LDPred.kt'). # remove leading zeros from contigs; contigs = {'0{}'.format(x):str(x) for x in range(1, 10)}. # import variants; variants = hl.methods.import_bgen('gs://fc-7d5088b4-7673-45b5-95c2-17ae00a04183/imputed/ukb_imp_chr{22}_v3.bgen',; [],; sample_file='gs://phenotype_31063/ukb31063.imputed_v3.autosomes.sample',; contig_recoding=contigs). # merge sumstats on bgen matrixtable; variants = variants.annotate_rows(ss = sumstats[variants.locus]). # handle strand/allele flips; variants = variants.annotate_rows(beta = hl.case(); .when(((variants.alleles[0] == variants.ss.nt1) &; (variants.al",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3508:329,clear,clearly,329,https://hail.is,https://github.com/hail-is/hail/issues/3508,1,['clear'],['clearly']
Usability,"Travis test processes sometimes die with a gradle exit code 137, internet research suggests that this is because Travis is issuing a SIGKILL to the process for using too many resources. No clear fix.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/118:189,clear,clear,189,https://hail.is,https://github.com/hail-is/hail/issues/118,1,['clear'],['clear']
Usability,"Trying to make it more ergonomic to simply do `python3 -m pytest batch/test/test_batch.py::test_job` (now works without any extra environment variables or configuration). This involved the following changes:; - Deleted of some env vars that are no longer used / can be easily consolidated into existing ones; - Gave defaults to those testing env variables for which there are reasonable defaults. E.g. `DOCKER_ROOT_IMAGE` and `HAIL_GENETICS_HAIL_IMAGE`.; - Pushed other environment variables for which there are not reasonable defaults into the tests that need them. If you run a test that requires `HAIL_CLOUD`, you'll still get an error that that env variable is unset and you should set it. But, if you just want to run a single test that doesn't need `HAIL_CLOUD` it won't get in the way.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12862:36,simpl,simply,36,https://hail.is,https://github.com/hail-is/hail/pull/12862,1,['simpl'],['simply']
Usability,"Turns out pandas dataframes have an `.attrs` field to store ""globals"". So now I group by discrete values and collect them as globals, and I get one pandas dataframe per group of discrete values. This makes things a bit less complicated I think. . As part of this change, I now create scales based on looking at all the collected data, not just one particular geom's data. This is more correct for things like continuous color, where if I have one geom that has points in color range 0 - .5, and another geom that has points in color range .5-1, there should be a continuous color gradient between 0 and 1, not two separate ones from 0 - .5 and .5 - 1. . This will also allow me to support things like `scale_color_hue`, which is the default R way of picking discrete colors by choosing evenly spaced points on a color wheel. I can't pick evenly spaced points if I don't know how many discrete values of `color` I have across all geoms. Summary of actual code changes:. 1. Don't flatten out grouped data. Stats use `group_by` to group by discrete aesthetics, but prior to this PR they would just forget that grouping information and flatten out the data, only to redetermine the grouping information later. This prevents that entirely by storing the per group information in a dataframes `attrs`. ; 2. Update geoms to reflect they are getting data in this form. This simplifies away the need to have a specified `take_one` boolean for each aesthetic a geom supports that said whether it's a per data point or per group field.; 3. Replace `Scale.transform_local_data` with `Scale.create_local_transformer`. This takes in all the data and returns a lambda to map over the data. This is part of the ""scales looking at all collect data"" change mentioned above.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11380:1366,simpl,simplifies,1366,https://hail.is,https://github.com/hail-is/hail/pull/11380,1,['simpl'],['simplifies']
Usability,"Turns out we never used the generality provided by `ContextRDD`. This forces the context type to be `RVDContext`, and the context factory `mkc` to be `RVDContext.default`, both of which were the only values ever actually used. This change will simplify further work migrating region management to the new model.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8283:244,simpl,simplify,244,https://hail.is,https://github.com/hail-is/hail/pull/8283,1,['simpl'],['simplify']
Usability,"Unfortunately, Google changed the way to connect to Spark UI, and now makes you either go through the YARN UI or use the Spark history page. This PR changes our Spark UI commands in `hailctl dataproc connect` to use the spark history page instead, since that works. The regular `spark-ui` command will show you running jobs, the `spark-history` command will show you finished jobs. I don't know what ui1 and ui2 were, but they're no longer usable so I removed them.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6760:440,usab,usable,440,https://hail.is,https://github.com/hail-is/hail/pull/6760,1,['usab'],['usable']
Usability,Update contributing guidelines,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9752:20,guid,guidelines,20,https://hail.is,https://github.com/hail-is/hail/pull/9752,2,['guid'],['guidelines']
Usability,Update style-guide.txt,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1738:13,guid,guide,13,https://hail.is,https://github.com/hail-is/hail/pull/1738,2,['guid'],['guide']
Usability,Update summarize in response to Laura's feedback. Also add a helper method to compute the 'real' GT from Local GT and Local Alleles.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5299:40,feedback,feedback,40,https://hail.is,https://github.com/hail-is/hail/pull/5299,1,['feedback'],['feedback']
Usability,Updated style guide.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/562:14,guid,guide,14,https://hail.is,https://github.com/hail-is/hail/pull/562,2,['guid'],['guide']
Usability,"Use Sanic + ujson instead of Flask + flask.json, cache more, and fix missing favicon in HTML templates. Sanic should be 3+x faster than Flask, and ujson ~2-3x faster than the standard json lib. I also optimize away the unnecessary re-generation of user_data (via get_users()) and json equivalent for /json. This is deployed currently on scorecard.hail.is, and improves performance by ~20%, even for 1 single connection, and for that simple workload (response time from ~50ms to ~40ms). Besides performance ( https://fgimian.github.io/blog/2018/06/05/python-api-framework-benchmarks/ ) Sanic also builds in a production-oriented web server, so need for WSGI or aWSGI, Gunicorn, etc. Can easily run multiple workers if desired. ```python; app.run(host='0.0.0.0', port=5000, workers=4); ```. This serves as a demonstration or migration to faster web frameworks, and in particular to uvloop-based asyncio implementations.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5242:433,simpl,simple,433,https://hail.is,https://github.com/hail-is/hail/pull/5242,1,['simpl'],['simple']
Usability,"Use ToArray(StreamRange(...)) instead; added tstream (undocumented), StreamRange to Python. This is the first step in: https://dev.hail.is/t/cleaning-up-titerable-hierarchy/181/2. Next I will make the Array* operations Stream-only. Then I can rip out TStreamable.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8145:54,undo,undocumented,54,https://hail.is,https://github.com/hail-is/hail/pull/8145,1,['undo'],['undocumented']
Usability,Use set_message in CI and Batch to give users feedback after performing POST operations. I added set_message while working on notebook. Any message set will show up at the top of the next page loaded styled according to the message type.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7160:46,feedback,feedback,46,https://hail.is,https://github.com/hail-is/hail/pull/7160,1,['feedback'],['feedback']
Usability,Use to fix TableHead(TableOrderBy) rule in Simplify,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6234:43,Simpl,Simplify,43,https://hail.is,https://github.com/hail-is/hail/issues/6234,1,['Simpl'],['Simplify']
Usability,"Use web_common in ci, batch and scorecard for common design (e.g. header) and styling. The styling is clearly not ideal, this is intended to be a work in progress. Hand-deployed to checked batch and scorecard UI are still workable. Not easy to do with CI. Converted scorecard to aiohttp and gidgethub. Will remove dependencies in separate PR so I don't want to wait for all the images to rebuild. Can't quite get rid of Flask yet as it is used in callback tests.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7064:102,clear,clearly,102,https://hail.is,https://github.com/hail-is/hail/pull/7064,1,['clear'],['clearly']
Usability,"User jobs should not have access to our internal network. This enforces that; requirement. Every job spec now has a `network` argument which can be unset,; null, `public`, or `private`. If `private`, the job has access to our internal; network. Both unset and null default to the `public` network. Only the ci user is permitted to create non-`public` network jobs. I define the; networks using Docker and `iptables`. First I create two distinct docker; networks `public` and `private`. These correspond to virtual Ethernet bridges. A; virtual bridge may be connected to many virtual interfaces. Each docker; container is given a virtual interface. The `public` virtual bridge is severely limited. All traffic originating from; the public bridge destined for any of the [three private; subnets](https://en.wikipedia.org/wiki/Private_network#Private_IPv4_addresses); is dropped. Perhaps most importantly, packets destined for other containers on the same host; are dropped. I tested this manually using a Linux VM with Docker. testing it in; the wild is a little tricky! I have no way to ensure a pair of containers end up; on the same VM in a test environment. I did add tests for connecting to `localhost`, `127.0.0.1`, and one's own; IP. Note that one's own IP is the IP of a container, so you might naively think; it should be dropped by the aforementioned rules. However, packets destined for; the container's own IP are never sent to the virtual bridge, the container knows; its own IP and simply routes the packets to itself. I found [this website](https://rancher.com/learning-paths/introduction-to-container-networking/) helpful for understanding Docker networking.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9380:1494,simpl,simply,1494,https://hail.is,https://github.com/hail-is/hail/pull/9380,2,"['learn', 'simpl']","['learning-paths', 'simply']"
Usability,"Uses the existent Region.setMemory function, and checks requiredeness before setting/clearing missing bits.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7822:85,clear,clearing,85,https://hail.is,https://github.com/hail-is/hail/pull/7822,1,['clear'],['clearing']
Usability,"Using index expressions to represent abstract transformations on tensors. E.g. broadcasts from scalars and vectors to matrices would be represented by. ```; O(i, j) <- A(); O(i, j) <- A(i); O(i, j) <- A(j); ```; where A is the input tensor and O is the output tensor. Similarly, transpose and identity look like. ```; O(i, j) <- A(j, i); O(i, j) <- A(i, j); ```. Since the `O(i,j)` is the same in all of these, we only need to look at the ""in"" index expressions for broadcasts to distinguish what operation needs to be performed. There's also a Simplify rule to cut out identity broadcasts. ## Workaround; This method of index expressions treats scalars and vectors as 0-dimensional and 1-dimensional tensors, respectively. As such, their shapes in the IR are 0 and 1-dimensional. However, BlockMatrix (Py API and Scala backend) assumes that all BlockMatrices are 2-dimensional, with the potential to have dimensions of length 1. To satisfy the current user API while maintaining a tensor-like mindset in the IR, the BlockMatrixType now has a `isRowVector` flag to help the front-end BlockMatrix discern whether a 1-tensor IR should be treated as a row or column vector. As BlockMatrix generalizes to n-tensors this flag can be removed. The IR should not rely on this flag for any execution logic.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5338:545,Simpl,Simplify,545,https://hail.is,https://github.com/hail-is/hail/pull/5338,1,['Simpl'],['Simplify']
Usability,Verify Field index is the index within the TStruct.; field => column in keytable. This was an old rename but looks like; some things got missed.; Simplify KT.select interface in Scala (and mathc Python).,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2187:146,Simpl,Simplify,146,https://hail.is,https://github.com/hail-is/hail/pull/2187,1,['Simpl'],['Simplify']
Usability,"Was hitting a very annoying bug because `PCanonicalNDArray` didn't explicitly override the default. Creators of new `PType`s should not have to magically know that this method exists and override it. It should not have a default implementation. . I had to specify that `PCanonicalNDArray` does have pointers, and that `PVoid` and `PPrimitive` don't. I said `false` for `PCanonicalStream` too, but that was less clear. `false` is the value it was inheriting previously, but idk if you can even `deepCopy` a stream. If you can, then maybe it should recur to the `elementType`? You'd know best Patrick.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9242:411,clear,clear,411,https://hail.is,https://github.com/hail-is/hail/pull/9242,1,['clear'],['clear']
Usability,"We do not have a strategy for folds on arbitrary types, but for primitive types the answer is clear: represent the value as a JVM primitive. The Python syntax should mirror [functools.reduce](https://docs.python.org/3/library/functools.html#functools.reduce):. ```python; hl.agg.reduce(lambda acc, x: hl.bit_or(acc, x), t.bit_string, 0L); ```. The implementation should not box the primitive values.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7173:94,clear,clear,94,https://hail.is,https://github.com/hail-is/hail/issues/7173,1,['clear'],['clear']
Usability,"We don't have clear issues now, but an open question about what these differences are, and whether they're user-facing. cc @johnc1231",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7419:14,clear,clear,14,https://hail.is,https://github.com/hail-is/hail/issues/7419,1,['clear'],['clear']
Usability,"We have chosen to prototype a new hail query compiler and runtime using; the LLVM project's MLIR framework for query compilation infrastructure.; This creates a simple project skeleton that will serve as a jumping off; point for the work. The README should be enough to get it built. There; is an implementation of the opt tool for investigating IRs, and; a completely empty dialect. I chose to rewrite this rather than copy over [hail-is/mlir-hail] as; breaking API changes from LLVM/MLIR 14 to 15 made it very difficult to; update that repo. The difficulties in updating LLVM versions may prove; to be a source of pain going forward, as this will be a pretty deep; dependency of the system. [hail-is/mlir-hail]: https://github.com/hail-is/mlir-hail",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12070:161,simpl,simple,161,https://hail.is,https://github.com/hail-is/hail/pull/12070,1,['simpl'],['simple']
Usability,"We need to re-simplify after LiftLiterals, since it's generating:. ```; GetField; SelectFields; Ref global; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4483:14,simpl,simplify,14,https://hail.is,https://github.com/hail-is/hail/issues/4483,1,['simpl'],['simplify']
Usability,"We seem to be running into spark/yarn scheduling limitations causing stages to often fail with a large number of partitions. Here, we implement a very simple chunking strategy to run spark jobs with a limited number of partitions at a time. The maximum parallelism is controlled by a new `spark_max_stage_parallelism` feature flag, which defaults to MAXINT until we can figure out a good default. Also, this change corrects a small error in logic for partition indices for call caching. The `resultHandler` argument of [`runJob`] is called with the job's partition index, not the index of the partition within the RDD. So we need to index into the `partitions` sequence when populating the results buffer. CHANGELOG: Add 'spark_max_stage_parallelism' flag to allow users to run pipelines with a large number of partitions in chunks. By default, hail still attempts to run all partitions in a stage at once. . [`runJob`]: https://spark.apache.org/docs/latest/api/scala/org/apache/spark/SparkContext.html#runJob[T,U](rdd:org.apache.spark.rdd.RDD[T],func:(org.apache.spark.TaskContext,Iterator[T])=%3EU,partitions:Seq[Int],resultHandler:(Int,U)=%3EUnit)(implicitevidence$11:scala.reflect.ClassTag[U]):Unit",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14590:151,simpl,simple,151,https://hail.is,https://github.com/hail-is/hail/pull/14590,1,['simpl'],['simple']
Usability,"We want all allocations of `Region` to be controlled with a `using` or within a `RVDContext` (which will be appropriately closed). When we have achieved this, we can move the `Region` off-heap which provides a number of benefits including the use of raw-pointers in our Hail Object Representation as well as allocation free communication with other languages. This PR makes `LoadVCF` and `HailContext.readRows` use the regions in the `RVDContext`. Note that the _consumer_ is responsible for clearing the region when they're done with the current values. This is why `writePartitions` now includes `ctx.clear()`. Moreover, _producers_ must _not_ clear the region. These changes are tested by our whole infrastructure, but in particular, `is.hail.annotations.AnnotationsSuite.testReadWrite` exercises a lot of this. NB: We no longer clear the region between each read of a row. This means we could blow memory if we don't clear in the consumer. The other consumers are: aggregations, collects, shuffles, and joins. The tests pass though, so I guess I'm not too concerned for now. Once this is merged, I'll follow swiftly with uses of the RVDContext's region else where in our infrastructure. cc: @cseed . ---. I also included a couple miscellaneous small clean ups like unifying `RVD.rdd` and adding a use of `Region.scoped` in `HailContext`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3392:492,clear,clearing,492,https://hail.is,https://github.com/hail-is/hail/pull/3392,5,['clear'],"['clear', 'clearing']"
Usability,"We want to track Hail's performance with every release for a number of reasons, including but not limited to: ; - Measure how we are doing in delivering value to scientists; - Measure the effect of changes, test our intuition and learn how to improve the product. ; - Compare our solution with others; - Catch unexpected regressions. As of the time of writing, benchmarks are run rarely and have rotted somewhat. There's a bit of work required to get them going again. There's also some work in getting them running in CI and capturing the results. Very roughly, I think work can broken down as follows:; - [ ] get benchmarks passing; - [ ] organise trials with learnings from https://www.zora.uzh.ch/id/eprint/170445/1/emse_smb_cloud.pdf; - [x] run bechmarks in ci on deploy and store the results somewhere appropriate, fail if there's something really awful ; - [ ] visualise results on some appropriate cadance for trends. Might be nice to have a graphic on our github page. . I think many of these can be done in parallel.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14221:216,intuit,intuition,216,https://hail.is,https://github.com/hail-is/hail/issues/14221,3,"['intuit', 'learn']","['intuition', 'learn', 'learnings']"
Usability,"We'll talk more about this during our meeting. This provides a skeleton for an LSM tree. Your first job will be to implement the interface using just C++'s `std::map`, an ordered key-value mapping. I implemented a simple command line interface that accepts a key-value language:. - `p k v`, put the value `v` at the key `k` (overwriting any value that currently exists); - `g k`, print the value associated with key `k`; if there is no value print an empty line; - `r l r`, print, on one line, all the key-value pairs between `l` (inclusive) and `r` (exclusive); - `d k`, remove any value associated with the key `k`",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9740:214,simpl,simple,214,https://hail.is,https://github.com/hail-is/hail/pull/9740,1,['simpl'],['simple']
Usability,"We've had to do a redeploy of our hail batch instance on Azure. This PR resolves/clarifies two issues we encountered. 1) Storage Account Name Uniqueness. Due to Azure's restrictions on storage account naming (mainly that names must be globally unique) the redeploy did not succeed. This is because the resource group name (we chose to reuse hail) is possible under a new subscription, but the generated storage account names were therefore identical to our previous stack. I've added in an argument called `storage_account_suffix` to account for this issue. It can be set to any arbitrary string that complies with Azure's storage account naming scheme in order to avoid naming conflicts in the future. While the option remains to simply choose a novel resource group name this is not enforced by Azure and anyone deploying a stack similarly named to someone else would not know until the `terraform apply` stage that the name would not work. 2) Mysql Flexible Server Zones. The only other issue is that the zone argument for the mysql flexible server is no longer always valid depending on your compute region. We needed to comment it out for a successful deploy in Australia East. The comment that has been added we hope will be helpful for others in future.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13058:731,simpl,simply,731,https://hail.is,https://github.com/hail-is/hail/pull/13058,1,['simpl'],['simply']
Usability,"We've run into this on Hail Batch 0.2.108. Binaries unfortunately sometimes produce binary output in logs (through `stdout` or `stderr`), e.g. `tabix` does that when it encounters the wrong input format. It appears that Hail Batch doesn't display _any_ log in such circumstances. That makes debugging the underlying issue really hard. For some reason, this seems to specifically happen with the byte value of 128. A simple way to reproduce this is to run the following commands in a batch:. ```python; job.command(""echo 'hi there :)'""); job.command(""echo -n -e '\\x80'""); ```. This will result in a `ERROR: could not find log file`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12614:416,simpl,simple,416,https://hail.is,https://github.com/hail-is/hail/issues/12614,1,['simpl'],['simple']
Usability,"Website is an aiohttp application which templates docs pages and normal pages. This opens the path; towards unifying the visual appearance of hail.is, the docs, and the services. I simplified documentation generation at the cost of building the docs twice per commit. A new step,; `make_pip_versioned_docs` builds the pip version of the docs without testing them. `make_docs`; continues to work as it did before. The website uses the docs from `make_pip_versioned_docs`. The; GCS docs location is now completely unused. Website has four key folders:. - `website/website/pages/`: Jinja2 templated HTML pages. Served at `/`. - `website/website/docs/`: Hail & Batch docs pages, all HTML pages are templated with Jinja2.; Served at `/docs`. - `website/website/templates/`: Jinaj2 templates that are used in pages or in docs. - `website/website/static/`: Non-templated files. Served at `/static`. The website can be developed locally in or outside of Docker:; ```; make -C website run; ```; or; ```; make -C website rundocker; ```. ---. I had to rename site to website due to a Python package conflict. I also deleted two unused css; files. I also removed PLINK from hail_run_image because it was slowing down my iteration speed; and was a long-term FIXME anyway.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10056:181,simpl,simplified,181,https://hail.is,https://github.com/hail-is/hail/pull/10056,1,['simpl'],['simplified']
Usability,"When regions are off-heap, we can allow the globals to live in a separate, longer-lived Region that is not cleared until the whole partition is finished. For now, we pay the memory cost. cc: @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3399:107,clear,cleared,107,https://hail.is,https://github.com/hail-is/hail/pull/3399,1,['clear'],['cleared']
Usability,"When using this command `filtervariants -c /user/xiaoli/LCR-hs37d5.interval_list --remove`, I got this error message: ; `hail: filtervariants: caught exception: scala.MatchError: [Ljava.lang.String;@56d822dc (of class [Ljava.lang.String;)`. The input file is formatted:; 1 1 10000; 1 10016 10464; 1 10656 10784; 1 28576 28603; 1 30852 30959; 1 31712 31733; 1 33440 33464; 1 33504 33541. It might be because that it cannot take tab delimited file with only three columns. At least we need a clear warning message.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/319:490,clear,clear,490,https://hail.is,https://github.com/hail-is/hail/issues/319,1,['clear'],['clear']
Usability,"When workers shut down, we get warning logs about unclosed client sessions, as seen in #14261. While it can be difficult to derive the source of the client session, I think it's the one held by the `GCPWorkerAPI`. I've added an exit stack and added the session's close method to it. I also made a small change to `Worker`. I find it can be difficult to determine whether or not a particular class should close a client session because it's not always clear who owns it. Without a clear way to communicate this in python, I think we should just never transfer ownership of a `ClientSession` and always assume that if an object's constructor takes a client session, it should be assumed a borrow and not close the session when the object is closed. As such, I moved the call to `client_session()` into the `Worker` constructor so it's clear that the worker owns the session.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14418:451,clear,clear,451,https://hail.is,https://github.com/hail-is/hail/pull/14418,3,['clear'],['clear']
Usability,"While trying to fix some weird errors, I realized this was more complicated than necessary and, I; think, broken. In the new implementation, a BatchPoolFuture is a thin wrapper around an asyncio.Future. Instead of; tracking the value and any exceptions manually, the BatchPoolFuture relies on asyncio.Future. I think the diff is not very helpful, just look at the new, simpler implementation. I also forgot to close the ServiceBackend, I now do that in the cleanup method that happens after all future complete.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10322:369,simpl,simpler,369,https://hail.is,https://github.com/hail-is/hail/pull/10322,1,['simpl'],['simpler']
Usability,"With the new rng splitting design, each ApplySeeded node directly gets a unique fixed-length ID (similar to the seed currently), which gets combined into the RNGState immediately before generating random numbers. That allows us to simplify the SRNGState type. Abstractly, each `rand` result is the hash of a bitstring with one block corresponding to the static ID---which gets encrypted using the `staticTweak` tweak---and any number of blocks corresponding to the accumulated dynamic splits---which get encrypted using the block counter as tweak (except for the last block in normal PMAC fashion).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11668:231,simpl,simplify,231,https://hail.is,https://github.com/hail-is/hail/pull/11668,1,['simpl'],['simplify']
Usability,"Writing the ATGU presentation made clear that we need consistent branding. I am; going with ""Hail Query-on-Batch"" and the ""Batch backend"".",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11685:35,clear,clear,35,https://hail.is,https://github.com/hail-is/hail/pull/11685,1,['clear'],['clear']
Usability,"YAML has an arbitrary extension mechanism. pyYAML defines a python extension that lets you create arbitrary python objets. This is clearly a huge security vulnerability. Apparently, pyYAML, by default, enables this extension (rather than just parsing vanilla YAML, 🤦‍♀️). `safe_load` loads vanilla YAML without the gaping security hole. I was getting warnings about this when testing.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5825:131,clear,clearly,131,https://hail.is,https://github.com/hail-is/hail/pull/5825,1,['clear'],['clearly']
Usability,"Yet Another Terraform Refactoring PR, this creates two simple modules:; - A gcs_bucket module to remove the redundancy of resources that we have across the batch-logs, query and test bucket; - A ukbb module which sets up the ukbb k8s resources. While this technically would allow us to reuse this, say in azure, it's more an attempt to tease it apart from the google-specific infrastructure so that we wouldn't have to. In short, it would be nice to organize things such that deploying hail with or without the ukbb site is as simple as choosing to include or omit a terraform module.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10842:55,simpl,simple,55,https://hail.is,https://github.com/hail-is/hail/pull/10842,2,['simpl'],['simple']
Usability,[auth/batch] Simplify deployment.yaml templating,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11993:13,Simpl,Simplify,13,https://hail.is,https://github.com/hail-is/hail/pull/11993,1,['Simpl'],['Simplify']
Usability,[auth] Simplify and unify use of userinfo,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9715:7,Simpl,Simplify,7,https://hail.is,https://github.com/hail-is/hail/pull/9715,1,['Simpl'],['Simplify']
Usability,[batch] Fix UI to make user errors clear,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10329:35,clear,clear,35,https://hail.is,https://github.com/hail-is/hail/pull/10329,2,['clear'],['clear']
Usability,[batch] Job progress bar,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10687:12,progress bar,progress bar,12,https://hail.is,https://github.com/hail-is/hail/pull/10687,2,['progress bar'],['progress bar']
Usability,[batch] Make error messages clearer in the UI and formatted correctly,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10545:28,clear,clearer,28,https://hail.is,https://github.com/hail-is/hail/pull/10545,2,['clear'],['clearer']
Usability,[batch] Omit setup progress bars on small batch submission,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12554:19,progress bar,progress bars,19,https://hail.is,https://github.com/hail-is/hail/pull/12554,2,['progress bar'],['progress bars']
Usability,[batch] Progress bar for jobs,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10799:8,Progress bar,Progress bar,8,https://hail.is,https://github.com/hail-is/hail/pull/10799,2,['Progress bar'],['Progress bar']
Usability,[batch] Simplify cloudfuse credential handling,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12962:8,Simpl,Simplify,8,https://hail.is,https://github.com/hail-is/hail/pull/12962,1,['Simpl'],['Simplify']
Usability,[batch] Simplify iptables rules for worker network namespaces,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11250:8,Simpl,Simplify,8,https://hail.is,https://github.com/hail-is/hail/pull/11250,1,['Simpl'],['Simplify']
Usability,[batch] Undo trigger change to ignore updates for format_version < 3,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11995:8,Undo,Undo,8,https://hail.is,https://github.com/hail-is/hail/pull/11995,1,['Undo'],['Undo']
Usability,[batch] Usability fixes to resource usage plots in the UI,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12617:8,Usab,Usability,8,https://hail.is,https://github.com/hail-is/hail/pull/12617,1,['Usab'],['Usability']
Usability,[batch] disable bunch submission progress bar when fewer than 100,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13668:33,progress bar,progress bar,33,https://hail.is,https://github.com/hail-is/hail/pull/13668,4,['progress bar'],['progress bar']
Usability,[batch] insertion progress bars,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7876:18,progress bar,progress bars,18,https://hail.is,https://github.com/hail-is/hail/pull/7876,2,['progress bar'],['progress bars']
Usability,"[batch] it is not simple and straightforward to write a Python script that uses Python jobs which need: Hail, a set of local Python files, and third party dependencies.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13161:18,simpl,simple,18,https://hail.is,https://github.com/hail-is/hail/issues/13161,2,['simpl'],['simple']
Usability,[batch] maybe simplify jobs_after_update,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13372:14,simpl,simplify,14,https://hail.is,https://github.com/hail-is/hail/pull/13372,2,['simpl'],['simplify']
Usability,[batch] miscellaneous usability improvements,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6557:22,usab,usability,22,https://hail.is,https://github.com/hail-is/hail/pull/6557,2,['usab'],['usability']
Usability,[batch] reproduce Ben's non-responsive worker issue and convert to a test,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13992:28,responsiv,responsive,28,https://hail.is,https://github.com/hail-is/hail/issues/13992,2,['responsiv'],['responsive']
Usability,[batch] simple & understandable metrics,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12253:8,simpl,simple,8,https://hail.is,https://github.com/hail-is/hail/pull/12253,2,['simpl'],['simple']
Usability,[batch] simplify batch api.py,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5797:8,simpl,simplify,8,https://hail.is,https://github.com/hail-is/hail/pull/5797,2,['simpl'],['simplify']
Usability,[batch]Progress bar that tracks job status,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10060:7,Progress bar,Progress bar,7,https://hail.is,https://github.com/hail-is/hail/pull/10060,1,['Progress bar'],['Progress bar']
Usability,[batch][dag14] Add simple UI for batch,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4823:19,simpl,simple,19,https://hail.is,https://github.com/hail-is/hail/pull/4823,2,['simpl'],['simple']
Usability,[batch]progress bar color change,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11661:7,progress bar,progress bar,7,https://hail.is,https://github.com/hail-is/hail/pull/11661,2,['progress bar'],['progress bar']
Usability,[benchmark] Add argument to filter simple patterns,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6528:35,simpl,simple,35,https://hail.is,https://github.com/hail-is/hail/pull/6528,2,['simpl'],['simple']
Usability,[benchmark] Add simple range_table write benchmarks,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6529:16,simpl,simple,16,https://hail.is,https://github.com/hail-is/hail/pull/6529,2,['simpl'],['simple']
Usability,[c++] Scala's Region.clear() should clear underlying region instead of asking for a new one,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5968:21,clear,clear,21,https://hail.is,https://github.com/hail-is/hail/pull/5968,4,['clear'],['clear']
Usability,[c++] simplify deforesting for NDArrayReindex,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6135:6,simpl,simplify,6,https://hail.is,https://github.com/hail-is/hail/pull/6135,2,['simpl'],['simplify']
Usability,[ci] simplify local tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5803:5,simpl,simplify,5,https://hail.is,https://github.com/hail-is/hail/pull/5803,2,['simpl'],['simplify']
Usability,[combiner] update combiner format in response to feedback,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5495:49,feedback,feedback,49,https://hail.is,https://github.com/hail-is/hail/pull/5495,2,['feedback'],['feedback']
Usability,[compiler] Add `If` and `MakeStruct` Simplifications,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14231:37,Simpl,Simplifications,37,https://hail.is,https://github.com/hail-is/hail/pull/14231,1,['Simpl'],['Simplifications']
Usability,[compiler] Add simplify rule to push maps inside flat maps,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10525:15,simpl,simplify,15,https://hail.is,https://github.com/hail-is/hail/pull/10525,2,['simpl'],['simplify']
Usability,[compiler] PruneDeadFields simplification,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14455:27,simpl,simplification,27,https://hail.is,https://github.com/hail-is/hail/pull/14455,2,['simpl'],['simplification']
Usability,[compiler] Simplify SRNGState,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11668:11,Simpl,Simplify,11,https://hail.is,https://github.com/hail-is/hail/pull/11668,1,['Simpl'],['Simplify']
Usability,[compiler] add simple copy propagation,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11004:15,simpl,simple,15,https://hail.is,https://github.com/hail-is/hail/pull/11004,2,['simpl'],['simple']
Usability,[compiler] extend + fix simplifier for integral types,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12754:24,simpl,simplifier,24,https://hail.is,https://github.com/hail-is/hail/pull/12754,2,['simpl'],['simplifier']
Usability,[compiler] simplify NormalizeNames,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14514:11,simpl,simplify,11,https://hail.is,https://github.com/hail-is/hail/pull/14514,2,['simpl'],['simplify']
Usability,[compiler] simplify PruneDeadFields,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14509:11,simpl,simplify,11,https://hail.is,https://github.com/hail-is/hail/pull/14509,2,['simpl'],['simplify']
Usability,[copy] make --verbose show a progress bar,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11776:29,progress bar,progress bar,29,https://hail.is,https://github.com/hail-is/hail/pull/11776,2,['progress bar'],['progress bar']
Usability,[copy] teach aiotools.copy about tqdm progress bars,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10937:38,progress bar,progress bars,38,https://hail.is,https://github.com/hail-is/hail/pull/10937,2,['progress bar'],['progress bars']
Usability,[dev-docs] Add rudimentary tool guide,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10499:32,guid,guide,32,https://hail.is,https://github.com/hail-is/hail/pull/10499,2,['guid'],['guide']
Usability,[devbin] Add simple function for switching hail GCP projects,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10846:13,simpl,simple,13,https://hail.is,https://github.com/hail-is/hail/pull/10846,2,['simpl'],['simple']
Usability,"[docs] move Expressions, simplify",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6744:25,simpl,simplify,25,https://hail.is,https://github.com/hail-is/hail/pull/6744,2,['simpl'],['simplify']
Usability,[fs] Dont clear the buffer when seeking within bounds,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12061:10,clear,clear,10,https://hail.is,https://github.com/hail-is/hail/pull/12061,2,['clear'],['clear']
Usability,[fs] improve copy tool progress bars,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13832:23,progress bar,progress bars,23,https://hail.is,https://github.com/hail-is/hail/pull/13832,2,['progress bar'],['progress bars']
Usability,[gear] simplify database retry logic,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14369:7,simpl,simplify,7,https://hail.is,https://github.com/hail-is/hail/pull/14369,2,['simpl'],['simplify']
Usability,[guide-analysis] Host guide browser in hail-vdc,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14078:1,guid,guide-analysis,1,https://hail.is,https://github.com/hail-is/hail/pull/14078,4,['guid'],"['guide', 'guide-analysis']"
Usability,"[hail/ptypes] simplify clearMissingBits, setAllMissing",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7822:14,simpl,simplify,14,https://hail.is,https://github.com/hail-is/hail/pull/7822,4,"['clear', 'simpl']","['clearMissingBits', 'simplify']"
Usability,[hail] Add TableAggregate simplify rules,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7141:26,simpl,simplify,26,https://hail.is,https://github.com/hail-is/hail/pull/7141,2,['simpl'],['simplify']
Usability,[hail] Add simplify rule to invert order_by and collect,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7175:11,simpl,simplify,11,https://hail.is,https://github.com/hail-is/hail/pull/7175,2,['simpl'],['simplify']
Usability,[hail] Add simplify rules for TableDistinct,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6227:11,simpl,simplify,11,https://hail.is,https://github.com/hail-is/hail/pull/6227,2,['simpl'],['simplify']
Usability,[hail] Clear trailing missing bits on encoded arrays as well,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7934:7,Clear,Clear,7,https://hail.is,https://github.com/hail-is/hail/pull/7934,1,['Clear'],['Clear']
Usability,[hail] Disable currently-invalid simplify rule,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7515:33,simpl,simplify,33,https://hail.is,https://github.com/hail-is/hail/pull/7515,2,['simpl'],['simplify']
Usability,[hail] Fix overflow caused by TableCount(TableUnion) simplification.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6958:53,simpl,simplification,53,https://hail.is,https://github.com/hail-is/hail/pull/6958,2,['simpl'],['simplification']
Usability,[hail] Fix simplify rewrite of ArrayLen(TableCollect),MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7539:11,simpl,simplify,11,https://hail.is,https://github.com/hail-is/hail/pull/7539,2,['simpl'],['simplify']
Usability,[hail] Fix simplify rule with TableHead(MatrixColsTable),MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6167:11,simpl,simplify,11,https://hail.is,https://github.com/hail-is/hail/pull/6167,2,['simpl'],['simplify']
Usability,[hail] Improve simplification of nested struct insertions,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7082:15,simpl,simplification,15,https://hail.is,https://github.com/hail-is/hail/pull/7082,2,['simpl'],['simplification']
Usability,"[hail] Introduce ptypes to BGEN, refactor pruning logic to be simpler",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6576:62,simpl,simpler,62,https://hail.is,https://github.com/hail-is/hail/pull/6576,2,['simpl'],['simpler']
Usability,[hail] Simplify BGEN row count,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6895:7,Simpl,Simplify,7,https://hail.is,https://github.com/hail-is/hail/pull/6895,1,['Simpl'],['Simplify']
Usability,[hail] Simplify TableCount(CastMatrixToTable) appropriately,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6237:7,Simpl,Simplify,7,https://hail.is,https://github.com/hail-is/hail/pull/6237,1,['Simpl'],['Simplify']
Usability,[hail] Simplify buffer spec parsing code,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7260:7,Simpl,Simplify,7,https://hail.is,https://github.com/hail-is/hail/pull/7260,1,['Simpl'],['Simplify']
Usability,[hail] Simplify nested insert fields,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6456:7,Simpl,Simplify,7,https://hail.is,https://github.com/hail-is/hail/pull/6456,1,['Simpl'],['Simplify']
Usability,[hail] Simplify nested struct inserts broken by lets,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7096:7,Simpl,Simplify,7,https://hail.is,https://github.com/hail-is/hail/pull/7096,1,['Simpl'],['Simplify']
Usability,"[hail] clean up BlockMatrixMap IRs, delegate optimization of broadcasting for scalars to Simplify pass",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7566:89,Simpl,Simplify,89,https://hail.is,https://github.com/hail-is/hail/pull/7566,1,['Simpl'],['Simplify']
Usability,[hail] simplify region value fromBytes code,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7259:7,simpl,simplify,7,https://hail.is,https://github.com/hail-is/hail/pull/7259,2,['simpl'],['simplify']
Usability,[hail] write undocumented function for passing expr to sparsify_row_intervals,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8120:13,undo,undocumented,13,https://hail.is,https://github.com/hail-is/hail/pull/8120,2,['undo'],['undocumented']
Usability,[hailtop.batch] simplify BPE implementation,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10322:16,simpl,simplify,16,https://hail.is,https://github.com/hail-is/hail/pull/10322,2,['simpl'],['simplify']
Usability,[hailtop.utils] Add Batch monitor and custom multi-state progress bar,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14100:57,progress bar,progress bar,57,https://hail.is,https://github.com/hail-is/hail/pull/14100,2,['progress bar'],['progress bar']
Usability,[hailtop][batch] unify & simplify docker transient error handling,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11943:25,simpl,simplify,25,https://hail.is,https://github.com/hail-is/hail/pull/11943,2,['simpl'],['simplify']
Usability,[jvm-fs] simplify use of URLs,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13650:9,simpl,simplify,9,https://hail.is,https://github.com/hail-is/hail/pull/13650,2,['simpl'],['simplify']
Usability,[libhail] Add simple testing infrastructure,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10231:14,simpl,simple,14,https://hail.is,https://github.com/hail-is/hail/pull/10231,2,['simpl'],['simple']
Usability,[memory] add simple read-only cache,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9349:13,simpl,simple,13,https://hail.is,https://github.com/hail-is/hail/pull/9349,2,['simpl'],['simple']
Usability,[notebook] fix some simple problems,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6834:20,simpl,simple,20,https://hail.is,https://github.com/hail-is/hail/pull/6834,2,['simpl'],['simple']
Usability,[query Start undoing value misuse related to ndarrays,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9708:13,undo,undoing,13,https://hail.is,https://github.com/hail-is/hail/pull/9708,2,['undo'],['undoing']
Usability,[query service] usability,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8585:16,usab,usability,16,https://hail.is,https://github.com/hail-is/hail/pull/8585,2,['usab'],['usability']
Usability,[query/compiler] Update simple dependencies,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10830:24,simpl,simple,24,https://hail.is,https://github.com/hail-is/hail/pull/10830,2,['simpl'],['simple']
Usability,[query/lir] assert postcondition of SimplifyControl,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9486:36,Simpl,SimplifyControl,36,https://hail.is,https://github.com/hail-is/hail/pull/9486,1,['Simpl'],['SimplifyControl']
Usability,[query/lir] simplify Classx.asBytes,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9491:12,simpl,simplify,12,https://hail.is,https://github.com/hail-is/hail/pull/9491,2,['simpl'],['simplify']
Usability,[query/ptypes] simplify isOfType,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8261:15,simpl,simplify,15,https://hail.is,https://github.com/hail-is/hail/pull/8261,2,['simpl'],['simplify']
Usability,[query/service] simplify ServiceBackend by abstracting over ExecuteContext,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11646:16,simpl,simplify,16,https://hail.is,https://github.com/hail-is/hail/pull/11646,2,['simpl'],['simplify']
Usability,[query/service] use error id to raise user-friendly errors,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11624:38,user-friendly,user-friendly,38,https://hail.is,https://github.com/hail-is/hail/pull/11624,2,['user-friendly'],['user-friendly']
Usability,[query] Add simplify rule for repartition(range),MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9158:12,simpl,simplify,12,https://hail.is,https://github.com/hail-is/hail/pull/9158,2,['simpl'],['simplify']
Usability,[query] Added simplify rules for nested ndarray maps and for ndarray shape,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10433:14,simpl,simplify,14,https://hail.is,https://github.com/hail-is/hail/pull/10433,2,['simpl'],['simplify']
Usability,[query] ArraySlice simplify,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10759:19,simpl,simplify,19,https://hail.is,https://github.com/hail-is/hail/pull/10759,2,['simpl'],['simplify']
Usability,[query] ArraySlice simplify rules,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10755:19,simpl,simplify,19,https://hail.is,https://github.com/hail-is/hail/pull/10755,2,['simpl'],['simplify']
Usability,[query] Begin simplifying EmitCode constructors.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10009:14,simpl,simplifying,14,https://hail.is,https://github.com/hail-is/hail/pull/10009,2,['simpl'],['simplifying']
Usability,[query] Clear TableKeyByAndAggregate context region in SeqOp,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11312:8,Clear,Clear,8,https://hail.is,https://github.com/hail-is/hail/pull/11312,1,['Clear'],['Clear']
Usability,[query] Clear the bdist build cache before building the wheel,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12008:8,Clear,Clear,8,https://hail.is,https://github.com/hail-is/hail/pull/12008,1,['Clear'],['Clear']
Usability,[query] Drastically simplify binding-based computation/rewrite code,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9247:20,simpl,simplify,20,https://hail.is,https://github.com/hail-is/hail/pull/9247,2,['simpl'],['simplify']
Usability,[query] Fix FilterIntervals simplify rule,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12179:28,simpl,simplify,28,https://hail.is,https://github.com/hail-is/hail/pull/12179,2,['simpl'],['simplify']
Usability,[query] Fix insert fields simplify bug,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11198:26,simpl,simplify,26,https://hail.is,https://github.com/hail-is/hail/pull/11198,2,['simpl'],['simplify']
Usability,[query] Fix simplify rule for nested TableFilterIntervals,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9114:12,simpl,simplify,12,https://hail.is,https://github.com/hail-is/hail/pull/9114,2,['simpl'],['simplify']
Usability,[query] Fix simplify rules related to interval filter pushdown,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9179:12,simpl,simplify,12,https://hail.is,https://github.com/hail-is/hail/pull/9179,2,['simpl'],['simplify']
Usability,[query] Fixed BlockMatrixToValueApply simplify rule,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10481:38,simpl,simplify,38,https://hail.is,https://github.com/hail-is/hail/pull/10481,2,['simpl'],['simplify']
Usability,[query] Fixed simplify InsertFields bug and added appropriate test,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11340:14,simpl,simplify,14,https://hail.is,https://github.com/hail-is/hail/pull/11340,2,['simpl'],['simplify']
Usability,[query] NDArray Reshape Simplification,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9874:24,Simpl,Simplification,24,https://hail.is,https://github.com/hail-is/hail/pull/9874,1,['Simpl'],['Simplification']
Usability,[query] Simplify Elasticsearch Dependencies,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11410:8,Simpl,Simplify,8,https://hail.is,https://github.com/hail-is/hail/pull/11410,1,['Simpl'],['Simplify']
Usability,[query] Simplify HailTaskContext logic,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10301:8,Simpl,Simplify,8,https://hail.is,https://github.com/hail-is/hail/pull/10301,1,['Simpl'],['Simplify']
Usability,[query] Simplify and clarify aggregator memory ownership,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9253:8,Simpl,Simplify,8,https://hail.is,https://github.com/hail-is/hail/pull/9253,1,['Simpl'],['Simplify']
Usability,[query] Simplify and improve EmitCode store code.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10338:8,Simpl,Simplify,8,https://hail.is,https://github.com/hail-is/hail/pull/10338,1,['Simpl'],['Simplify']
Usability,"[query] The VDS docs need to be crystal clear about ""dense"" and ""sparse""",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14009:40,clear,clear,40,https://hail.is,https://github.com/hail-is/hail/issues/14009,2,['clear'],['clear']
Usability,[query] Unify CloudCredentials and Simplify BatchClient,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14684:35,Simpl,Simplify,35,https://hail.is,https://github.com/hail-is/hail/pull/14684,1,['Simpl'],['Simplify']
Usability,[query] add simplification for TableFilterIntervals with empty intervals,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11693:12,simpl,simplification,12,https://hail.is,https://github.com/hail-is/hail/pull/11693,2,['simpl'],['simplification']
Usability,[query] always allow simplify to repartition,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13218:21,simpl,simplify,21,https://hail.is,https://github.com/hail-is/hail/pull/13218,2,['simpl'],['simplify']
Usability,[query] fix performance bug in lir.SimplifyControl,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9475:35,Simpl,SimplifyControl,35,https://hail.is,https://github.com/hail-is/hail/pull/9475,1,['Simpl'],['SimplifyControl']
Usability,[query] hl.pc_relate should more clearly indicate and provide better defaults for calculating PC scores,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14008:33,clear,clearly,33,https://hail.is,https://github.com/hail-is/hail/issues/14008,2,['clear'],['clearly']
Usability,[query] import_table: simplify code and improve speed,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11782:22,simpl,simplify,22,https://hail.is,https://github.com/hail-is/hail/pull/11782,2,['simpl'],['simplify']
Usability,[query] pca simplification/optimization,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10264:12,simpl,simplification,12,https://hail.is,https://github.com/hail-is/hail/pull/10264,2,['simpl'],['simplification']
Usability,[query] simplify fs interface,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8388:8,simpl,simplify,8,https://hail.is,https://github.com/hail-is/hail/pull/8388,2,['simpl'],['simplify']
Usability,[query] simplify ndarray coiterate interface,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10622:8,simpl,simplify,8,https://hail.is,https://github.com/hail-is/hail/pull/10622,2,['simpl'],['simplify']
Usability,[query] simplify strange stdev formula,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10132:8,simpl,simplify,8,https://hail.is,https://github.com/hail-is/hail/pull/10132,2,['simpl'],['simplify']
Usability,[query][bugfix] clear region in rvd.countPerPartition,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9009:16,clear,clear,16,https://hail.is,https://github.com/hail-is/hail/pull/9009,2,['clear'],['clear']
Usability,[query][qob] simplify QoB error handling and fix flaky test,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470:13,simpl,simplify,13,https://hail.is,https://github.com/hail-is/hail/pull/12470,2,['simpl'],['simplify']
Usability,[shuffler] Refactor/simplify codegen interfaces,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10421:20,simpl,simplify,20,https://hail.is,https://github.com/hail-is/hail/pull/10421,2,['simpl'],['simplify']
Usability,[stacked] implement a simple left join right distinct on a partition's worth of data?,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4998:22,simpl,simple,22,https://hail.is,https://github.com/hail-is/hail/pull/4998,2,['simpl'],['simple']
Usability,[tls] Simplify TLS use and enable TLS for address,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9554:6,Simpl,Simplify,6,https://hail.is,https://github.com/hail-is/hail/pull/9554,1,['Simpl'],['Simplify']
Usability,"[uv](https://github.com/astral-sh/uv) is a new package resolver by the same folks who make `ruff`. It's boasted for being really fast, which honestly it is, but mostly it's appealing to me because they support generating lockfiles for alternative platforms and python versions than the system you run it on, which allows us to delete all this dockerizing `pip-compile` in order to generate lockfiles for linux. It's a really green project, so I'm open to pushback on incorporating it, but it seemed like a worthwhile simplification. I also quite like that it allows for additional strategies in generating lockfiles. By default, it behaves as would be expected, where it locks packages to the highest version within the acceptable bounds. But you can also configure it to generate the *lowest* acceptable pins, so we could actually verify whether the lower bounds that we have in our requirements files are actually acceptable or not.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14503:517,simpl,simplification,517,https://hail.is,https://github.com/hail-is/hail/pull/14503,1,['simpl'],['simplification']
Usability,[vcf-combiner] Usability improvements to vcf combiner,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8378:15,Usab,Usability,15,https://hail.is,https://github.com/hail-is/hail/pull/8378,1,['Usab'],['Usability']
Usability,[website] Simplify service and deployment discrepancy,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12431:10,Simpl,Simplify,10,https://hail.is,https://github.com/hail-is/hail/pull/12431,1,['Simpl'],['Simplify']
Usability,[website] add a link to the community feedback survey to website,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13986:38,feedback,feedback,38,https://hail.is,https://github.com/hail-is/hail/pull/13986,2,['feedback'],['feedback']
Usability,[wip] perform simple CSE during python IR serialization,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6688:14,simpl,simple,14,https://hail.is,https://github.com/hail-is/hail/pull/6688,2,['simpl'],['simple']
Usability,[www/docs] remove undocumented methods,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7292:18,undo,undocumented,18,https://hail.is,https://github.com/hail-is/hail/issues/7292,2,['undo'],['undocumented']
Usability,"[www/docs] simplify section rule, enable scrollto functions",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7288:11,simpl,simplify,11,https://hail.is,https://github.com/hail-is/hail/pull/7288,2,['simpl'],['simplify']
Usability,[www] simplify templates,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8455:6,simpl,simplify,6,https://hail.is,https://github.com/hail-is/hail/pull/8455,2,['simpl'],['simplify']
Usability,"_From @cseed on September 1, 2015 15:48_. Need general strategy for error reporting. We can't use asserts for input data validation (e.g., reading tsv files, command line flags, etc.) Need to generate good error messages with feedback about line numbers, etc. _Copied from original issue: cseed/hail#42_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/33:226,feedback,feedback,226,https://hail.is,https://github.com/hail-is/hail/issues/33,1,['feedback'],['feedback']
Usability,"_From @jbloom22 on October 14, 2015 1:23_. Cotton, I haven't implemented good testing yet, but would appreciate some initial feedback on the code as I take a break to write up the math. I've done some comparison with R and it checks out so far. It runs on the command line, but you'll need to create a covariate file from your PCs. _Copied from original issue: cseed/hail/pull/81_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/50:125,feedback,feedback,125,https://hail.is,https://github.com/hail-is/hail/issues/50,1,['feedback'],['feedback']
Usability,"_From @jbloom22 on September 29, 2015 17:15_. In computing statistics like sample and variant qc, we should not treat X/Y like the autosomes. A simple solution is to only compute on the autosome, but we should discuss with the community how to make the tools more powerful via sex awareness. for example, we could split all stats by sex, or just sex chromosome stats by sex, ... _Copied from original issue: cseed/hail#64_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/44:144,simpl,simple,144,https://hail.is,https://github.com/hail-is/hail/issues/44,1,['simpl'],['simple']
Usability,"`IEmitCode.consume`, with signature `consume[T](cb: EmitCodeBuilder, ifMissing: => Unit, ifPresent: (A) => T): T`, is wrong: it exports a value that is only defined in the present branch to be used after the two branches have joined. The only use of this manually guarded the exported value by a bit remembering which branch was taken, but this is better handled by memoizing the `IEmitCode` in an `EmitValue`. Almost every other use of `consume` could be more simply expressed using `handle`, and moreover almost every use of `handle` could be more simply expressed using a method `get` which simply throws an exception if the missing branch is taken. For those few cases where one really does want to consume an `IEmitCode` to a `Code` or `PCode`, with definitions given for each branch, I added `consumeCode` and `consumePCode`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9447:461,simpl,simply,461,https://hail.is,https://github.com/hail-is/hail/pull/9447,3,['simpl'],['simply']
Usability,"`OnDiskBTreeIndexToValue` can index the elements at the base of a BTree. The BGen BTree is a BTree on the byte-offsets of variants in the BGen file. In a following PR, I will use this class to filter the BGen file to a subset of variants, specified by their index. This kind of filtering happens at the level of bytes, it permits me to avoid decoding/decompressing any variants I don't need. Ideally, the index would also include the variant keys themselves. That would be a really nice extension of this work and would enable a more natural file-level filtering user experience. Aside: `IndexBTree` could use some TLC. I'm sort of making the minimal changes to get Caitlin cooking. Last night, I slipped into a rewrite and it's just too big a task to get right before Friday because I don't have any documentation of precisely what our btree file format is.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3794:563,user experience,user experience,563,https://hail.is,https://github.com/hail-is/hail/pull/3794,1,['user experience'],['user experience']
Usability,"`Table._select` got way too complicated (mostly my fault) when key changing moved from `TableMapRows` to `TableKeyBy`. Making `_select` a simple wrapper around `TableMapRows`, and moving the key logic to `key_by`, made both way simpler. I then realized the `key_by` code could be even simpler by adding some rules to the optimizer to clean up the case where all new keys are existing fields. I actually think some things had gotten broken in the old `_select` (performance wise). In particular, in `split_multi`, in the `split_rows` function with `rekey=false`, I think it's supposed to extend the key from `['locus']` to `['locus', 'alleles']`, but that wasn't happening. I changed `key_by` to no longer accept `key_by(None)` or `key_by([])`, both of which should now be `key_by()`, which is more consistent with the rest of our interface, but is a breaking change. Is it worth the disruption? Should I add a warning? Or just continue to accept both?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4455:138,simpl,simple,138,https://hail.is,https://github.com/hail-is/hail/pull/4455,3,['simpl'],"['simple', 'simpler']"
Usability,"`[0, 0.toFloat][0].toInt` results in a ClassCastException. We should fix the type promotion method, and should also replace the `makeLong` and `makeDouble` methods on TNumeric with a `conv: NumericConversion[_]` to simplify things and be consistent. @khernyo has claimed this!",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/759:215,simpl,simplify,215,https://hail.is,https://github.com/hail-is/hail/issues/759,1,['simpl'],['simplify']
Usability,"```; +----+-------------+-----------------------+------------+------+-------------------------------------------------------+-----------------------------------------------+---------+-----------------------------+-------+----------+-----------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+-----------------------+------------+------+-------------------------------------------------------+-----------------------------------------------+---------+-----------------------------+-------+----------+-----------------------------+; | 1 | SIMPLE | billing_projects | NULL | ALL | billing_project_status | NULL | NULL | NULL | 30733 | 66.67 | Using where; Using filesort |; | 1 | SIMPLE | billing_project_users | NULL | ref | PRIMARY,billing_project_users_billing_project_user_cs | billing_project_users_billing_project_user_cs | 302 | batch.billing_projects.name | 1 | 100.00 | Using index |; +----+-------------+-----------------------+------------+------+-------------------------------------------------------+-----------------------------------------------+---------+-----------------------------+-------+----------+-----------------------------+; ```. versus. ```; +----+-------------+-----------------------+------------+-------+-------------------------------------------------------+-----------------------------------------------+---------+-----------------------------+-------+----------+------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+-----------------------+------------+-------+-------------------------------------------------------+-----------------------------------------------+---------+-----------------------------+-------+----------+------------------------------+; | 1 | PRIMARY | billing_projects | NULL | ALL | billing_project_status | NULL | NULL | NULL",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12652:643,SIMPL,SIMPLE,643,https://hail.is,https://github.com/hail-is/hail/pull/12652,2,['SIMPL'],['SIMPLE']
Usability,`copyFrom` method was simply wrong. Also needed to fix memory management; in `result` function. Fixes #8240,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8273:22,simpl,simply,22,https://hail.is,https://github.com/hail-is/hail/pull/8273,1,['simpl'],['simply']
Usability,"`curlylint` doesn't like logical blocks that produce incomplete html tags. This is the only instance in our codebase where we do that though. In either path of the if/else block we produce an open `a` tag and then close it out outside of the block. I reorganized it to avoid this and think it's actually more clear, and that creating open tags like this is a footgun to avoid since it's super easy not to close them (which we have had a lot).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10412:309,clear,clear,309,https://hail.is,https://github.com/hail-is/hail/pull/10412,1,['clear'],['clear']
Usability,`hailctl dataproc modify`'s `--update-hail-version` and `--wheel` arguments cannot be used together. Using argparse's [mutually exclusive group](https://docs.python.org/3/library/argparse.html#mutual-exclusion) to enforce that makes the usage/help text clearer. ```; usage: hailctl dataproc modify [-h] [--num-workers NUM_WORKERS]; [--num-preemptible-workers NUM_PREEMPTIBLE_WORKERS]; [--graceful-decommission-timeout GRACEFUL_DECOMMISSION_TIMEOUT]; [--max-idle MAX_IDLE] [--dry-run] [--zone ZONE]; [--update-hail-version | --wheel WHEEL]; name; ```,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8918:253,clear,clearer,253,https://hail.is,https://github.com/hail-is/hail/pull/8918,1,['clear'],['clearer']
Usability,"`hailctl` allows the user to define a `network` for a new dataproc cluster, but not a `subnet`. The `network` flag in `gcloud` only works for `auto` and `legacy` project networks. If a Google Project has a custom network, the `subnet` must be supplied manually. This PR adds that functionality to `hailctl`. Its a very simple passthrough, so not much effort was required.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13129:319,simpl,simple,319,https://hail.is,https://github.com/hail-is/hail/pull/13129,1,['simpl'],['simple']
Usability,"`hl.balding_nichols_model` generates a MatrixTable representing a genetic dataset randomly drawn according to the Balding Nichols model.; ```; In [5]: hl.balding_nichols_model(2,3,3).show() ; 2019-08-15 10:38:05 Hail: INFO: balding_nichols_model: generating genotypes for 2 populations, 3 samples, and 3 variants...; +---------------+------------+------+------+------+; | locus | alleles | 0.GT | 1.GT | 2.GT |; +---------------+------------+------+------+------+; | locus<GRCh37> | array<str> | call | call | call |; +---------------+------------+------+------+------+; | 1:1 | [""A"",""C""] | 0/0 | 0/0 | 0/1 |; | 1:2 | [""A"",""C""] | 1/1 | 1/1 | 1/1 |; | 1:3 | [""A"",""C""] | 1/1 | 0/1 | 0/0 |; +---------------+------------+------+------+------+. ```; These MatrixTables are useful both as examples and test datasets for genetics-related Hail code. Unfortunately, the loci are chosen sequentially starting with chromosome 1, position 1. This region of chromosome 1 is in the telomere. Many genetic annotations contain no information in this region. As a result, `hl.balding_nichols_model` is not useful when demonstrating the annotation database or third-party genetic annotations. We want to enhance `hl.balding_nichols_model` to select variants (loci-allele-array pairs) that are likely to appear in real genetic datasets. One very simple model would be to draw variants according to their alternate/minor allele frequency in the gnomAD or 1000 Genomes datasets. An additional improvement would be to generate chromosomes roughly proportionally to their true sizes. These changes should not significantly slow down the method. We may want to include a small dataset of allele frequencies with Hail for use when the requested number of variants is small, only loading the full gnomAD or 1000 Genomes allele frequencies when the requested number of variants is in the millions or tens of millions. This functionality should be enabled and disabled by a parameter to `hl.balding_nichols_model`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6880:1328,simpl,simple,1328,https://hail.is,https://github.com/hail-is/hail/issues/6880,1,['simpl'],['simple']
Usability,"`java.nio` avoids unnecessary copies. We suspect we may see a 2-3x improvement in Zstd decoding speed by passing it `ByteBuffer` instead of `Array[Byte]`. We also suspect there may be pervasive (but minor) improvements to Hail's I/O infrastructure. We should start with the egregious examples. Consider `AzureStorageFS.createNoCompression`'s [`OutputStream`](https://github.com/hail-is/hail/blob/main/hail/src/main/scala/is/hail/io/fs/AzureStorageFS.scala#L332-L342):; ```scala; val os: PositionedOutputStream = new FSPositionedOutputStream(4 * 1024 * 1024) {; private[this] val client: BlockBlobClient = blockBlobClient; private[this] val blobOutputStream = client.getBlobOutputStream(true). override def flush(): Unit = {; bb.flip(). if (bb.limit() > 0) {; blobOutputStream.write(bb.array(), 0, bb.limit()); }. bb.clear(); }; // ...; }; ```. Notice how we already have a `ByteBuffer` but we convert it to an array and send that to the OutputStream. Instead, we could just use the [`ByteChannel` methods of `BlockBlobClient`](https://learn.microsoft.com/en-us/java/api/com.azure.storage.blob.specialized.blockblobclient?view=azure-java-stable#com-azure-storage-blob-specialized-blockblobclient-openseekablebytechannelwrite(com-azure-storage-blob-options-blockblobseekablebytechannelwriteoptions)). The [read case also supports a channel](https://learn.microsoft.com/en-us/java/api/com.azure.storage.blob.specialized.blobclientbase?view=azure-java-stable#com-azure-storage-blob-specialized-blobclientbase-openseekablebytechannelread(com-azure-storage-blob-options-blobseekablebytechannelreadoptions-com-azure-core-util-context)). The next, more complicated problem, is the InputBuffer and OutputBuffer interfaces. These assume their sources/sinks are `java.io.InputStream` and `java.io.OutputStream`. Moreover, they too rely on and expose `Array[Byte]` interfaces (e.g. `readBytesArray` and the implementation of `StreamInputBuffer.readBytes`). Let's start with InputBuffer and the decoders and use de",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13840:816,clear,clear,816,https://hail.is,https://github.com/hail-is/hail/issues/13840,2,"['clear', 'learn']","['clear', 'learn']"
Usability,"`order_by` supports sort fields. Eventually `order_by` will use the shuffler. To support this `CodeOrdering` needs to support sort fields. I didn't actually add any tests. The Shuffler will eventually land and use this to do non-standard orderings. There's a lot of noise due to threading SortField's everywhere, but the implementation of `CodeOrdering.reverse` and `PType.codeOrdering` are actually quite simple. I also cleaned the code that I touched by abstracting over lt, lteq, gt, gteq.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7257:406,simpl,simple,406,https://hail.is,https://github.com/hail-is/hail/pull/7257,1,['simpl'],['simple']
Usability,`orjson` 3.9.15 fixed the rare segfault that we saw in `3.9.11`. Besides just updating to latest patch and minor versions:. - Removed a redundant requirement of `orjson` in `gear/requirements.txt` -- it inherits `orjson` from hailtop; - Bokeh `3.4` made a breaking change w.r.t. the `circle` method on figures. I have restricted the bounds for `bokeh` to avoid this breaking change but will follow up with a PR that changes our usage of bokeh to follow the deprecation/upgrade advice and undo the bounds restriction,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14471:488,undo,undo,488,https://hail.is,https://github.com/hail-is/hail/pull/14471,1,['undo'],['undo']
Usability,"`switch` can either be used with `Code[T]`s or `JoinPoint[Unit]`s. The former resemble's Java's `switch` by executing the code in the matched case. The latter in some cases generates less bytecode; it simply jumps to the join point for the matched case. ```scala; Code.switch[T](target: Code[Int], dflt: Code[T], cases: Seq[Code[T]]): Code[T]; JoinPoint.switch(target: Code[Int], dflt: JoinPoint[Unit], cases: Seq[JoinPoint[Unit]]): Code[Ctrl]; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7207:201,simpl,simply,201,https://hail.is,https://github.com/hail-is/hail/pull/7207,1,['simpl'],['simply']
Usability,"`tls.py` has many different functions with long names. This change reduces it to three functions:. - internal_server_ssl_context; - internal_client_ssl_context; - external_client_ssl_context. I also added `httpx.py` which contains the HTTPS-related functions that `tls.py` previously; contained. I also simplified the HTTPS-related functions to just:. - client_session; - blocking_client_session. I determine internal vs. external using the deploy config. ---. An [`ssl.SSLContext`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext) defines how a; network library (such as `aiohttp`) should perform SSL/TLS. Let's look at an example:. ```python3; server_ssl_context = ssl.create_default_context(; purpose=Purpose.CLIENT_AUTH,; cafile='/incoming.cacerts'); server_ssl_context.load_cert_chain(ssl_config['cert'],; keyfile=ssl_config['key'],; password=None); server_ssl_context.verify_mode = ssl.CERT_OPTIONAL; server_ssl_context.check_hostname = False; ```. The first function call states that we are a *server* performing *client; authentication* (`Purpose.CLIENT_AUTH`). We also state that anyone who sends requests to us will be; identified by a certificate that is trusted by our certificate database: `/incoming.cacerts` (which; is a file). `load_cert_chain` states where to find the certificates and secret key that prove who we are. The; certificate and secret key together are like a property title that proves someone owns a house. The; `password=None` means that our secret key has no password. Some keys are themselves locked by a; password. `verify_mode` means what do we expect our clients to have. `CERT_OPTIONAL` means anonymous clients; are OK. This is how servers normally operate (https://google.com does not care who you are). `check_hostname` means should we verify that the client certificate matches the client's; hostname. Since we allow anonymous clients, this must be `False`. ---. `test-address.py` is a gross hack. It will disappear in subsequent PRs. For now, I push",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9862:303,simpl,simplified,303,https://hail.is,https://github.com/hail-is/hail/pull/9862,1,['simpl'],['simplified']
Usability,"`write_pipeline_outputs` returns a list for resource groups (which kills the command run). simplest fix is to change the last line in that function to:; ```; return [x for ext, rf in r._resources.items() for x in write_pipeline_outputs(rf, dest + '.' + ext)]; ```; A `yield` type function might be more elegant, but sounds like you might be tearing this up a little bit anyway, so I leave that to you.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5868:91,simpl,simplest,91,https://hail.is,https://github.com/hail-is/hail/issues/5868,1,['simpl'],['simplest']
Usability,"a few things happening here, most of which was me trying to not have to explicitly list dependencies in the shadowJar/shadowTestJar tasks:; - upgraded gradle to 5.0 and some plugins to be compatible; - split compile dependencies into ""bundled"" and ""unbundled"" to more explicitly separate the things we want in the jars and dependencies that we don't want bundled/are currently depending on the spark installation for. I did it this way because the shadowJar `exclude` filter does not let you exclude transitive dependencies, and I just wanted to exclude the entire spark/scala dependency tree.; - there was a problem where trying to run the tests kept giving me the ""Could not find or load main class org.testng.TestNG"" error, despite the class clearly being findable from the classpath I was providing. I added some excludes per this:; https://stackoverflow.com/questions/51455197/gradle-fatjar-could-not-find-or-load-main-class; (although I believe this is no longer strictly necessary after excluding all the transitive spark dependencies)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6248:745,clear,clearly,745,https://hail.is,https://github.com/hail-is/hail/pull/6248,1,['clear'],['clearly']
Usability,"a homogenous set of named values of type `T`.; 1. an `array<T>` and a `dict<str, int>`, the values are stored in the array and the names are stored in a separate dictionary mapping names to their indices; 2. a `dict<str, T>`, the name-value pairs are stored as dictionary key-value pairs; 3. a `struct{name1: T, name2: T, ... nameN: T}`, the name-value pairs are stored as field name, field string pairs. The third option is the most space efficient: the type stores the field names and there is no bookkeeping overhead per-set-of-named-values. The first two options repeat the field names for each occurrence (in particular, consider a Table field or MatrixTable entry-indexed field). The first two options needlessly encode the length (which is statically known). The third option is the most access-time-efficient: the offset of any named-value is known at hail compile time. The first two options require a logarithmic search of hail's dictionary tree representation. The third option is more user-friendly for accessing: `x.name`. The first is the least user-friendly: `x[indices[""name""]]`. The first and third options are the most cache-friendly for homogenous operations. The first uses `ArrayExpression.map`, so code size is `O(CODE)`. The third option's code size is `O(CODE * #VALUES)` because structs have no `map`-like primitive. The third option is also not user-friendly for homogenous operations (the user must repeat the code for each name-value pair). The third is the most self-documenting option. The number of fields and their names are visible in `ds.describe()`. The first is the next best because the dictionary is likely a global field that can be viewed with `x.indices.show()`. ---. ## Phase 1; Implement a new virtual type `tstaticdict<T, name1, name2, ..., nameN>` who's physical type is `PStruct` with N fields. These changes span Scala and Python. Implement `map` and `__getitem__` on `StaticDictExpression`s. `map` is implemented by code duplication. ## Phase 2; Implem",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6881:1031,user-friendly,user-friendly,1031,https://hail.is,https://github.com/hail-is/hail/issues/6881,1,['user-friendly'],['user-friendly']
Usability,"a931de0"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""42.0.2""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-3315975"",""SNYK-PYTHON-CRYPTOGRAPHY-3316038"",""SNYK-PYTHON-CRYPTOGRAPHY-3316211"",""SNYK-PYTHON-CRYPTOGRAPHY-5663682"",""SNYK-PYTHON-CRYPTOGRAPHY-5777683"",""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750"",""SNYK-PYTHON-CRYPTOGRAPHY-5914629"",""SNYK-PYTHON-CRYPTOGRAPHY-6036192"",""SNYK-PYTHON-CRYPTOGRAPHY-6050294"",""SNYK-PYTHON-CRYPTOGRAPHY-6092044"",""SNYK-PYTHON-CRYPTOGRAPHY-6126975"",""SNYK-PYTHON-CRYPTOGRAPHY-6210214"",""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[554,704,509,454,616,584,479,509,509,509,509,589,509,691,399,479,399,539,479,479,616,616,489,519],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use After Free](https://learn.snyk.io/lesson/use-after-free/?loc&#x3D;fix-pr); 🦉 [Access of Resource Using Incompatible Type (&#x27;Type Confusion&#x27;)](https://learn.snyk.io/lesson/type-confusion/?loc&#x3D;fix-pr); 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14329:13056,Learn,Learn,13056,https://hail.is,https://github.com/hail-is/hail/pull/14329,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,ableAdapter.call(Executors.java:511) ~[?:1.8.0_382]; 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]; 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]; 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]; 	at java.lang.Thread.run(Thread.java:750) ~[?:1.8.0_382]; Caused by: is.hail.relocated.com.google.cloud.storage.StorageException: Missing Range header in response; 	|> PUT https://storage.googleapis.com/upload/storage/v1/b/aou_tmp/o?name=tmp/hail/icullIwHC8dQXtq8JU2uDW/aggregate_intermediates/-ntpjdAQ9sKaR8lK26cV0p5790a4d87-9035-41ae-afc6-326f710d9a89&uploadType=resumable&upload_id=ADPycdtl5JSqwvftT4W190_-ueC032I_oZcwLAlVVMFkqp06W4eY8b-XMwf8DeT7If9I7uIgmI_PLCuFsExsT0aEh2b4FrHtAiUktumQbvgl1U0icw; 	|> content-range: bytes */*; 	| ; 	|< HTTP/1.1 308 Resume Incomplete; 	|< content-length: 0; 	|< content-type: text/plain; charset=utf-8; 	|< x-guploader-uploadid: ADPycdtl5JSqwvftT4W190_-ueC032I_oZcwLAlVVMFkqp06W4eY8b-XMwf8DeT7If9I7uIgmI_PLCuFsExsT0aEh2b4FrHtAiUktumQbvgl1U0icw; 	| ; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionFailureScenario.toStorageException(JsonResumableSessionFailureScenario.java:185) ~[gs:__hail-query-ger0g_jars_13536b531342a263b24a7165bfeec7bd02723e4b.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionFailureScenario.toStorageException(JsonResumableSessionFailureScenario.java:117) ~[gs:__hail-query-ger0g_jars_13536b531342a263b24a7165bfeec7bd02723e4b.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionFailureScenario.toStorageException(JsonResumableSessionFailureScenario.java:98) ~[gs:__hail-query-ger0g_jars_13536b531342a263b24a7165bfeec7bd02723e4b.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionQueryTask.call(JsonResumableSessionQueryTask.java:100) ~[gs:__hail-query-ger0g_jars_13536,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13721:5299,Resume,Resume,5299,https://hail.is,https://github.com/hail-is/hail/issues/13721,1,['Resume'],['Resume']
Usability,ables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.exp,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7741,Simpl,Simplify,7741,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,"accept a prefix with a complete file path:; <code>IOUtil.createTempDir(&quot;path/to/my/tempdir/prefix&quot;, &quot;&quot;)</code>. The new implementation will now throw in that case. You can use <code>Files.createTemporaryDirectory(path, prefix)</code> for those use cases instead.</p>; <p>4a4024a97 Fix temporary directory hijacking or temporary directory information disclosure (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1621"">#1621</a>); 9fd0ecf21 Disable codecov until we can fix the uploader (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1622"">#1622</a>); 347c0ac57 Fix EdgeReadIterator (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1616"">#1616</a>); d15a5bacb Added ULTIMA and ELEMENT as valid value for RG-PL according to SAM spec. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1619"">#1619</a>)</p>; <h2>3.0.0</h2>; <p>Htsjdk 3.0.0: Revenge of the Simple Allele</p>; <p>This is the first htsjdk with a major version increase in a long time. We bumped it to indicate there are some breaking changes that will potentially require downstream code changes. Notably, <code>Allele</code> became an interface instead of a concrete class. <code>SimpleAllele</code> may be used as a replacement if you have classes which previously subclassed allele.</p>; <p>New Plugin Infrastructure:; 6a60de7c2 Move API marker annotations into new annotation package. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1558"">#1558</a>); 7ac95d5f7 Plugin framework and interfaces for versioned file format codecs (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1525"">#1525</a>); d40fe5412 Beta implementation of Bundles. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1546"">#1546</a>)</p>; <p>CRAM; 489c4192d Support CRAM reference regions. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1605"">#1605</a>); 22aec678",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12310:2286,Simpl,Simple,2286,https://hail.is,https://github.com/hail-is/hail/pull/12310,1,['Simpl'],['Simple']
Usability,add ability to get and clear sub-regions by index,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6499:23,clear,clear,23,https://hail.is,https://github.com/hail-is/hail/pull/6499,2,['clear'],['clear']
Usability,add clears to restrictToPKInterval,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3572:4,clear,clears,4,https://hail.is,https://github.com/hail-is/hail/pull/3572,2,['clear'],['clears']
Usability,add command reference to doc style guide,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/647:35,guid,guide,35,https://hail.is,https://github.com/hail-is/hail/pull/647,2,['guid'],['guide']
Usability,add how-to guides to documentation,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4089:11,guid,guides,11,https://hail.is,https://github.com/hail-is/hail/pull/4089,2,['guid'],['guides']
Usability,add missing clear in sampleqc,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3589:12,clear,clear,12,https://hail.is,https://github.com/hail-is/hail/pull/3589,2,['clear'],['clear']
Usability,add repartitionableness logic to Simplify,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4165:33,Simpl,Simplify,33,https://hail.is,https://github.com/hail-is/hail/pull/4165,1,['Simpl'],['Simplify']
Usability,add simplification rule for positive array index,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5359:4,simpl,simplification,4,https://hail.is,https://github.com/hail-is/hail/pull/5359,2,['simpl'],['simplification']
Usability,added flatten union simplify rule,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3432:20,simpl,simplify,20,https://hail.is,https://github.com/hail-is/hail/pull/3432,1,['simpl'],['simplify']
Usability,"adds a notion of sparsity to BlockMatrixType; I've lifted all of the necessary logic except for Map/Map2, which needs #8072 to implement in a sensical way. I had originally implemented this as a dense boolean matrix, which makes a lot of transformations simpler, but for really large (and very sparse) block matrices, you end up needing ~GB of space just to store the sparsity matrix, which is pretty untenable. This version basically preserves the structure of the version on GridPartitioner, except that we're storing the unlinearized form of the block index.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8071:254,simpl,simpler,254,https://hail.is,https://github.com/hail-is/hail/pull/8071,1,['simpl'],['simpler']
Usability,"adings"", version='2.1', reference_genome='GRCh38'). File ~/.local/lib/python3.8/site-packages/hail/experimental/datasets.py:115, in load_dataset(name, version, reference_genome, region, cloud); 107 raise ValueError(f'Region {repr(region)} not available for dataset'; 108 f' {repr(name)} on cloud platform {repr(cloud)}.\n'; 109 f'Available regions: {regions}.'); 111 path = [dataset['url'][cloud][region]; 112 for dataset in datasets[name]['versions']; 113 if all([dataset['version'] == version,; 114 dataset['reference_genome'] == reference_genome])]; --> 115 assert len(path) == 1; 116 path = path[0]; 117 if path.startswith('s3://'):. AssertionError: ; ```. I'm a new Hail user and don't have the full context here, but it seems like there are at least three problems:. 1. An assert failed in production code, which indicates either the presence of a bug or an incorrect use of assert (e.g. using assert to check for value errors).; 2. The assert has no corresponding error message, so the user learns that something has gone wrong but can't easily tell what.; 3. The assert is bare. Bare asserts can get optimized out of code in ways that are difficult to foresee in advance, and are generally deprecated in favor of the `if error_condition: raise AssertionError(...)` pattern (see: https://discuss.python.org/t/stop-ignoring-asserts-when-running-in-optimized-mode/13132). **The Big Picture**. The bare assert pattern is used over 3k times in Hail. To be fair, many of these usages occur in test directories, where they're fine. But they also occur in application code, and often in the dangerous form `assert(expr1, expr2)` which will never fail (because a tuple with two falsy elements is truthy in python). These asserts are never actually getting checked. . Fixing all of them would be a heavy lift. One compromise solution might be to add a bare assert rule to the linter (e.g. https://pypi.org/project/flake8-assert-msg/). This would prevent the introduction of further bare asserts to the ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12952:1329,learn,learns,1329,https://hail.is,https://github.com/hail-is/hail/issues/12952,1,['learn'],['learns']
Usability,"ailing bits, `emitBit(b: Value[Boolean], trailingBits: Int)`, and `pad()`. Note that this interface forces the caller to track the statically known number of trailing bits. Illustrated using scala-like psuedocode. I pretend conditional and loop statements are virtualized to work on staged values, in which case they generate runtime code. This is straightforward to translate to our `CodeBuilder` interface. ```scala; // top level method, emit a required value of any type; // always leaves 0 trailing bits; emit(value: SValue, trailingBits: Int) {; // dispatch on type; }. // leaves `trailingBits + 1` trailing bits; emitMissingness(present: Value[Boolean], trailingBits: Int) {; if (missingFirst) emitBit(present, trailingBits); else emitBit(~present, trailingBits); }. // leaves 0 trailing bits; emitInt(value: Value[Int], _: Int) {; pad(); // flip the sign bit; emitInt(value ^ (1 << 31)); }. // leaves 0 trailing bits; emitArray(value: SIndexable, _: Int) {; // for simplicity, don't try to pack continuation and missing; // bits of first element with preceding bits; pad(); for ((i, elt) <- value.enumerate) { // runtime loop; emitBit(true, 0) // continuation bit; if (value.eltsRequired) { // static if; emit(elt, 1); } else {; emitMissingness(elt.present, 1); emit(elt.get, 2); }; }; emitBit(false, 0) // continuation bit; pad() ; }. // leaves 0 trailing bits; emitStruct(value: SBaseStruct, _trailingBits: Int) {; var trailingBits = _trailingBits; for (field <- value) { // static loop; if (field.required) { // static if; emit(field, trailingBits); } else {; emitMissingness(field.present, trailingBits); emit(field, trailingBits + 1); }; trailingBits = 0; }; }. emitKeyStruct(value: SBaseStruct, length: Value[Int], sign: Value[Int], _trailingBits: Int) {; var trailingBits = _trailingBits; for ((field, i) <- value.enumerate) { // static loop; if (i < length) { // runtime if; emitBit(false, trailingBits); emitBit(true, trailingBits + 1) // continuation bits; if (field.required) { // st",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14396:4514,simpl,simplicity,4514,https://hail.is,https://github.com/hail-is/hail/issues/14396,1,['simpl'],['simplicity']
Usability,"aken for CompileAndEvaluate -- Optimize -- ForwardRelationalLets : 6.605ms, total 363.564ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- PruneDeadFields : 29.964ms, total 394.795ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize : 371.542ms, total 395.164ms(); 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- LowerMatrixToTable -- Verify : 3.975ms, total 407.299ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- LowerMatrixToTable -- LoweringTransformation : 77.664ms, total 485.244ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- LowerMatrixToTable -- Verify : 1.780ms, total 487.281ms, tagged coverage 0.0; ...; ...; ...; 2019-11-06 18:44:11 root: INFO: Timer: aggregate:; 2019-11-06 18:44:11 root: INFO: Time taken for tag 'Verify' (8): 8.109ms; 2019-11-06 18:44:11 root: INFO: Time taken for tag 'ConvertToSafeValue' (2): 12.828ms; 2019-11-06 18:44:11 root: INFO: Time taken for tag 'InitializeCompiledFunction' (2): 14.536ms; 2019-11-06 18:44:11 root: INFO: Time taken for tag 'ForwardRelationalLets' (7): 20.388ms; 2019-11-06 18:44:11 root: INFO: Time taken for tag 'FoldConstants' (7): 21.650ms; 2019-11-06 18:44:11 root: INFO: Time taken for tag 'RunCompiledFunction' (2): 44.571ms; 2019-11-06 18:44:11 root: INFO: Time taken for tag 'ExtractIntervalFilters' (7): 70.933ms; 2019-11-06 18:44:11 root: INFO: Time taken for tag 'LoweringTransformation' (3): 79.703ms; 2019-11-06 18:44:11 root: INFO: Time taken for tag 'Simplify' (7): 135.960ms; 2019-11-06 18:44:11 root: INFO: Time taken for tag 'ForwardLets' (7): 200.163ms; 2019-11-06 18:44:11 root: INFO: Time taken for tag 'Compile' (2): 269.978ms; 2019-11-06 18:44:11 root: INFO: Time taken for tag 'PruneDeadFields' (7): 274.850ms; 2019-11-06 18:44:11 root: INFO: Fraction covered by a tagged leaf: 13.383s (7.9%); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7476:4208,Simpl,Simplify,4208,https://hail.is,https://github.com/hail-is/hail/pull/7476,1,['Simpl'],['Simplify']
Usability,"ambda, is defined as the sum of the squares of the means of each component normal random variable. Although the non-central chi-squared distribution has a closed form implementation (indeed, Hail implements this CDF: `hl.pchisqtail`), the generalized chi-squared distribution does not have a closed form. There are at least four distinct algorithms for evaluating the CDF. To my knowledge, the oldest one is by Robert Davies:. Davies, Robert. ""The distribution of a linear combination of chi-squared; random variables."" Applied Statistics 29 323-333. 1980. The [original publication](http://www.robertnz.net/pdf/lc_chisq.pdf) includes a Fortran implementation in the publication. Davies' [website](http://www.robertnz.net/QF.htm) also includes a C version. Hail includes a copy of the C version as `davies.cpp`. I suspect this code contains undefined behavior. Moreover, it is not supported on Apple M1 machines because we don't ship binaries for that platform. It seemed to me that the simplest solution is to port this algorithm to Scala. This PR is that port. I tested against the 39 test cases provided Davies with the source code. I also added some doctests based on the CDF plots from Wikipedia. The same 39 test cases are tested in Scala and in Python. I am open to suggestions for the name. `pgenchisq` seems to strike a balance between clarity and brevity. I believe this is the first CDF which can fail to converge. I included some relevant debugging information. I think we should standardize on a schema, but I need more examples before I am certain of the right standard. I am open to critique of `GeneralizedChiSquaredDistribution.scala` but I will strongly argue against significant refactoring. I worry that we will subtly break this algorithm. I directly reached out to Robert Davies to clarify the licensing of this algorithm. It appears to have been released at least under both GPL2 and MIT by unaffiliated third parties (who, really, have no right to apply a license to it). Do no",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12605:1778,simpl,simplest,1778,https://hail.is,https://github.com/hail-is/hail/pull/12605,1,['simpl'],['simplest']
Usability,andlerContext.java:336); 	io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293); 	io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267); 	; 	at org.apache.spark.SparkContext.assertNotStopped(SparkContext.scala:100); 	at org.apache.spark.SparkContext.cancelAllJobs(SparkContext.scala:2209); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at sparklyr.Invoke.invoke(invoke.scala:139); 	at sparklyr.StreamHandler.handleMethodCall(stream.scala:123); 	at sparklyr.StreamHandler.read(stream.scala:66); 	at sparklyr.BackendHandler.channelRead0(handler.scala:51); 	at sparklyr.BackendHandler.channelRead0(handler.scala:4); 	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105); 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357); 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343); 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102); 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357); 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343); 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293); 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267); 	at io.netty.channel.Abstra,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4513:10953,Simpl,SimpleChannelInboundHandler,10953,https://hail.is,https://github.com/hail-is/hail/issues/4513,1,['Simpl'],['SimpleChannelInboundHandler']
Usability,"apparently gather runs things in the background even if; you do not await the gather task, which is different from; other awaitables (which simply do nothing), the result was; that batch nondeterministically succeeds, depending on; whether the tasks execute in the order of the program or not.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6846:140,simpl,simply,140,https://hail.is,https://github.com/hail-is/hail/pull/6846,1,['simpl'],['simply']
Usability,at is.hail.expr.ir.FreeVariables$$anonfun$is$hail$expr$ir$FreeVariables$$compute$1$1.apply(FreeVariables.scala:27); at is.hail.expr.ir.FreeVariables$$anonfun$is$hail$expr$ir$FreeVariables$$compute$1$1.apply(FreeVariables.scala:24); at scala.collection.Iterator$$anon$11.next(Iterator.scala:410); at scala.collection.Iterator$class.foreach(Iterator.scala:891); at scala.collection.AbstractIterator.foreach(Iterator.scala:1334); at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157); at scala.collection.AbstractIterator.foldLeft(Iterator.scala:1334); at scala.collection.TraversableOnce$class.fold(TraversableOnce.scala:212); at scala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collec,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:6883,Simpl,Simplify,6883,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,at least something simple.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4960:19,simpl,simple,19,https://hail.is,https://github.com/hail-is/hail/issues/4960,1,['simpl'],['simple']
Usability,"ata and a hash function can cause this integer map to exceed its size limitations at a load factor of 5%. Even a 20x increase in footprint puts us at 400 million. Each element of that array has 6 entries, so we're at 1.2 billion. That definitely feels like the danger zone. Maybe there's more variants than Danfeng expects, maybe there's more overhead than we've accounted for. The GATK folks have been chasing down the fix. Kryo [released 4.0.0](https://github.com/EsotericSoftware/kryo/issues/431) which should fix this issue. Spark [upgraded to Kryo 4.0.0](https://github.com/apache/spark/pull/22179) on September 8th of 2018. (resolving [Spark-20389](https://issues.apache.org/jira/browse/SPARK-20389)). This change made it to 2.4.0, but it was not back ported to other versions of Spark. GATK [references a temporary fix via JVM options](; https://github.com/broadinstitute/gatk/issues/1524#issuecomment-189368808), which apparently forces the JVM to use an alternative hash function with better behavior in this specific case:; ```; spark.executor.extraJavaOptions -XX:hashCode=0; spark.driver.extraJavaOptions -XX:hashCode=0; ```; A [generally interesting blog post on Java's hashCode](https://srvaroa.github.io/jvm/java/openjdk/biased-locking/2017/01/30/hashCode.html), which I haven't fully read, claims that the JVM previously defaulted to a PRNG draw for an object's hash code. In JDK 8 it uses some function of the current thread state. It appears this old strategy is preserved as JVM hashCode parameter value 0 and is less likely to trigger the bad behavior in Kryo. This `-XX:hashCode` option is undocumented [1](https://docs.oracle.com/javase/8/docs/technotes/tools/windows/java.html), [2](https://www.oracle.com/technetwork/java/javase/tech/vmoptions-jsp-140102.html) 🤷‍♀️. Another suggested Kryo option is to disable reference tracking. This would cause duplicate objects in the object graph to be serialized twice:; ```java; Kryo kryo = new Kryo();; kryo.setReferences(false);; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5564:2201,undo,undocumented,2201,https://hail.is,https://github.com/hail-is/hail/issues/5564,1,['undo'],['undocumented']
Usability,"ate. Each principal has a; certificate which is given to all the principals to which it might; communicate. ### Encryption. TLS has many encryption schemes. I will focus on encryption using a *symmetric*; key because asymmetric schemes do not enable *forward secrecy* [2]. Under; forward secret schemes, the two parties share a private key unknown to all; adversaries. TLS 1.3 makes forward secrecy mandatory. I intend to eventually; require all our services to refuse to speak anything other than TLS 1.3. The shared private key is used to encrypt and decrypt messages sent over a; socket. This poses a problem: how do two parties who have never met each other; agree on a private key without revealing the key to the public? This is a; classic cryptography problem called [key; exchange](https://en.wikipedia.org/wiki/Key_exchange). The classic solution to; this problem is [Diffie-Hellman key; exchange](https://en.wikipedia.org/wiki/Diffie–Hellman_key_exchange). The; Wikipedia article has ""General overview"" which is quite clear. In addition to a key, the parties must agree on a cipher. There are many old,; insecure ciphers available. In the future I intend all our servers to refuse to; use insecure ciphers. Mozilla; [has a list of secure cipher suites](https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations). ## New Hail Concepts. Every principal in our system has a secret: `ssl-config-NAME`. These secrets are; automatically created for a particular namespace by `tls/create_certs.py`. Who; trusts who (i.e. who is allowed to talk to whom) is defined by; `tls/config.yaml`. For example, `site` is defined in `config.yaml` as follows:. ```; - name: site; domain: site; kind: nginx; incoming:; - admin-pod; - router; ```. A principal named ""site"" exists. Site's domain names are `site`,; `site.NAMESPACE`, `site.NAMESPACE.svc.cluster.local`. Site's configuration files; should be in NGINX configuration file format. Site accepts incoming requests; from the principals",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8561:5930,clear,clear,5930,https://hail.is,https://github.com/hail-is/hail/pull/8561,1,['clear'],['clear']
Usability,atrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:10633,Simpl,Simplify,10633,https://hail.is,https://github.com/hail-is/hail/issues/8338,3,"['Simpl', 'simpl']","['Simplify', 'simplifyValue']"
Usability,"aving fundamental error against the OpenAPIv3 schema. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/108859"">kubernetes/kubernetes#108859</a>, <a href=""https://github.com/cici37""><code>@​cici37</code></a>)</li>; <li>Support for gRPC probes is now in beta. GRPCContainerProbe feature gate is enabled by default. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/108522"">kubernetes/kubernetes#108522</a>, <a href=""https://github.com/SergeyKanzhelev""><code>@​SergeyKanzhelev</code></a>)</li>; <li>Suspend job to GA. The feature gate <code>SuspendJob</code> is locked and will be removed in 1.26. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/108129"">kubernetes/kubernetes#108129</a>, <a href=""https://github.com/ahg-g""><code>@​ahg-g</code></a>)</li>; <li>The AnyVolumeDataSource feature is now beta, and the feature gate is enabled by default. In order to provide user feedback on PVCs with data sources, deployers must install the VolumePopulators CRD and the data-source-validator controller. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/108736"">kubernetes/kubernetes#108736</a>, <a href=""https://github.com/bswartz""><code>@​bswartz</code></a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/tomplus/kubernetes_asyncio/commit/9ecc1143a8f7b34264b48dea12edd4d66230476f""><code>9ecc114</code></a> [chore] update version</li>; <li><a href=""https://github.com/tomplus/kubernetes_asyncio/commit/ae5fd81a0fbea7d7fdac8d418876acaa288bcc0f""><code>ae5fd81</code></a> fix: config reader handles bool types (<a href=""https://github-redirect.dependabot.com/tomplus/kubernetes_asyncio/issues/218"">#218</a>)</li>; <li><a href=""https://github.com/tomplus/kubernetes_asyncio/commit/7bbb327cee0d4ed908a5deb28aaf5a9ccc1f4602""><code>7bbb327</code></a> [chore] update version</li>; <li><a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12196:13597,feedback,feedback,13597,https://hail.is,https://github.com/hail-is/hail/pull/12196,1,['feedback'],['feedback']
Usability,"bandedBlocks is used to write those blocks intersecting a band around diagonal, and rectangularBlocks (or a subsequent improvement leveraging symmetry) will be used to write out all blocks overlapping a set of pre-specified LD blocks. . In Python I've exposed the blocks_to_keep option on BlockMatrix write and added BlockMatrix.write_banded along with a simple interface check. I'm not yet sure how I want to expose rectangular blocks on the Python side. I also fixed a GridPartitioner bug to properly catch overflow, replacing; ```; assert(numPartitions >= nBlockRows && numPartitions >= nBlockCols); ```; with; ```; require(nBlockRows.toLong * nBlockCols <= Int.MaxValue); ```. For the record, I compared `rectangularBlocks` as written to the following alternate implementation under a variety of contexts and found the included version to be faster even with a large number of partitions and a small number of rectangles:; ```; def rectangularBlocks(rectangles: Array[Array[Long]]): Array[Int] = {; val blocks = rectangles.par.aggregate(Set[Int]())( { case (b, r) =>; assert(r.length == 4); b ++ rectangularBlocks(r(0), r(1), r(2), r(3)) },; _ ++ _); .toArray; ; scala.util.Sorting.quickSort(blocks); ; blocks; }; ```; Using `par` for parallel aggregate above does speed things up for large numbers of large rectangles, but the included implementation is still faster with good scaling by design.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2890:355,simpl,simple,355,https://hail.is,https://github.com/hail-is/hail/pull/2890,1,['simpl'],['simple']
Usability,"based on #4061, and part of a broader move toward the four types of documentation . 1. Tutorials; 2. Reference/API ; 3. Explanation; 4. How-To Guides. This just moves some stuff around between sections 1 and 3. I'll put the beginning of the How-To Guides in a separate PR. . - change layout of tutorials landing page so that clicking on the tutorial title in the sidebar brings you to the actual tutorial; - delete Types tutorial and Missingness tutorial, which weren't really tutorials, and move some of their information to the Types and Missingness sections of Section III.; - break the ""Overview"" page into smaller subpages, and rename it to Hailpedia. This is section III of the documentation, but I don't like 'Explanation' or 'Overview' as a title. Other suggestions welcome.; - a few other edits to add additional explantation to some of the jupyter tutorials",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4064:143,Guid,Guides,143,https://hail.is,https://github.com/hail-is/hail/pull/4064,2,['Guid'],['Guides']
Usability,"basically, it now looks at the partitioner for the MatrixValues of its children when it executes, and only shuffles if rvds are non-disjoint. It removes empty rvds and separates children into non-disjoint piles, shuffles those independently, and then concatenates them together in sorted order. (I'm not sure how this behaves relative to the old behavior (coerce everything together) when we have multiple shuffles that need to happen, but at least filtering out empty RVDs helps a lot in e.g. the split-multi case where none of the variants need to be moved.). I think the (a?) better optimization would be to add smarter partitioning so that we're adjusting partition bounds and not really shuffling under most circumstances, but I thought I'd PR this first since at least there's a warning in python about unioning non-disjoint datasets (where this will avoid the scan). I also added tests for MatrixUnionRows and pulled out one of the simplify rules; TableUnion does an unsorted union (I'm not sure this is actually correct behavior now if the tables have keys) and pulling the union outside of a MatrixRowsTable can cause the ordering to be wrong.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4043:939,simpl,simplify,939,https://hail.is,https://github.com/hail-is/hail/pull/4043,1,['simpl'],['simplify']
Usability,"bstract method `def partition(ctxRef: Ref): IR`. This makes defining a new `TableStage` a bit heavy syntactically, and means we can't inspect the type of the partition IR without apply the function to something. This PR replaces the abstract method with two fields `ctxRefName: String` and `partitionIR: IR`. It defines a method `def partition(ctx: IR): IR` using these, which is more ergonomic to use because the context isn't forced to be a `Ref`. * With the type of the partition result accessible, this PR requires that type to be a `TStream<TStruct>`. Without this requirement, there is no clear connection between the partitioner and the rest of the `TableStage`. The only violation of this requirement was mapping to some other type right before collecting; this use is accommodated by a `mapCollect` method which combines the steps. * The binding structure of `TableStage` has been slightly reorganized. The `letBindings`, which are used on the master, and the `broadcastVals` which are used on the driver (previously, they had to also be usable on master), have been teased apart. In the new structure:; * `letBindings` are as before: a sequence of bindings which are evaluated in sequence on the master, whose bindings are visible in the `contexts` expression and in the `broadcastVals`; * `broadcastVals` are now a separate sequence of bindings, which are evaluated on the master in parallel (each broadcast binding sees only the `letBindings`, no previous `broadcastVals`), and whose bindings are visible only in the `partitionIR`; * `globals` is now required to be a `Ref`, which is defined in `letBindings` and redefined in `broadcastVals`, so that the `Ref` is valid in later `letBindings`, in `contexts`, as well as in the `partitionIR`. This does mean that `globals` is always broadcast, even when it's just an empty struct. But since we're generating a `CollectDistributedArray` which always broadcasts a struct, adding a nested required empty struct shouldn't have any overhead. I ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8917:1231,usab,usable,1231,https://hail.is,https://github.com/hail-is/hail/pull/8917,1,['usab'],['usable']
Usability,bstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293); 	io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267); 	; 	The currently active SparkContext was created at:; 	; 	org.apache.spark.SparkContext.getOrCreate(SparkContext.scala); 	sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	java.lang.reflect.Method.invoke(Method.java:498); 	sparklyr.Invoke.invoke(invoke.scala:139); 	sparklyr.StreamHandler.handleMethodCall(stream.scala:123); 	sparklyr.StreamHandler.read(stream.scala:66); 	sparklyr.BackendHandler.channelRead0(handler.scala:51); 	sparklyr.BackendHandler.channelRead0(handler.scala:4); 	io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343); 	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343); 	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293); 	io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267); 	; 	at org.apache.spark.SparkContext.assertNotStopped(,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4513:9214,Simpl,SimpleChannelInboundHandler,9214,https://hail.is,https://github.com/hail-is/hail/issues/4513,1,['Simpl'],['SimpleChannelInboundHandler']
Usability,bstractIterator.foreach(Iterator.scala:1334); at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157); at scala.collection.AbstractIterator.foldLeft(Iterator.scala:1334); at scala.collection.TraversableOnce$class.fold(TraversableOnce.scala:212); at scala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7232,Simpl,Simplify,7232,https://hail.is,https://github.com/hail-is/hail/issues/8338,3,"['Simpl', 'simpl']","['Simplify', 'simplifyMatrix']"
Usability,"but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzYWE2MzZiYi00NmJmLTQ3MjgtOGVjMC0yMDg0OWE4NzgyZGMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjNhYTYzNmJiLTQ2YmYtNDcyOC04ZWMwLTIwODQ5YTg3ODJkYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""3aa636bb-46bf-4728-8ec0-20849a8782dc"",""prPublicId"":""3aa636bb-46bf-4728-8ec0-20849a8782dc"",""dependencies"":[{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-TORNADO-5840803""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[566],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13444:3279,Learn,Learn,3279,https://hail.is,https://github.com/hail-is/hail/pull/13444,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,cala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$s,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7529,Simpl,Simplify,7529,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,cala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.ap,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7780,Simpl,Simplify,7780,https://hail.is,https://github.com/hail-is/hail/issues/8338,3,"['Simpl', 'simpl']","['Simplify', 'simplifyMatrix']"
Usability,"can return in two possible ways:; - `Missing` - the stream is actually entirely missing; this usually happens if one of the parameters to a stream is missing (e.g. `ArrayRange(0, NA, 1) = NA`); - `State(s0)` - the stream has started; its initial state is `s0`. `step` can return in three possible ways as well:; - `EOS` - we've reached the End Of Stream, there are no more elements left.; - `Skip(s1)` - this iteration didn't produce an element, you must try stepping again with state `s1` (see ""design notes"").; - `Yield(elt, s1)` - the stream computed an element `elt`; the following stream state will be `s1`. **Design Notes**. - The `Skip` return is very useful for simplifying the implementation of `ArrayFilter`. There is basically no nice way to implement filter otherwise without introducing some significant code duplication.; - ~~The stream ""parameter"", as well as the `Empty` return, are not very useful for the basic streams in this PR. However, they simplify the implementation of `ArrayFlatMap` (aka ""composing"" two parameterized streams).~~ NOTE (to Patrick): I decided to abandon the ""empty"" return idea in favor of just providing ""default states"" that always yield empty streams. **Implementation Notes**. - The implementation makes great use of Scala's type system. Most of the streams are implemented first in a very type aware manner, where it is easy to reason about the types of data flowing in and out, before being instantiated with EmitTriplets and Envs which don't hold very much type information. For instance, we have the following helper for `map`:; ```scala; Parameterized[P, A].map(f: A => B): Parameterized[P, B]; ```; The emitter instantiates P = `Any`, A = `EmitTriplet`, B = `EmitTriplet` :/. - Complex streams will have non trivial control flow and jumps. Therefore `init` and `step` both take `JoinPointBuilder`s and return `Code[Ctrl]`, to indicate that they may create join points and do jumps. - I've utilized a cute continuation passing style trick in multiple",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7228:2000,simpl,simplify,2000,https://hail.is,https://github.com/hail-is/hail/pull/7228,1,['simpl'],['simplify']
Usability,can't find docs on VCF genotypes format assumptions. Not clear what makes them reset to missing.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3472:57,clear,clear,57,https://hail.is,https://github.com/hail-is/hail/issues/3472,2,['clear'],['clear']
Usability,"cc @cseed @jigold @tpoterba. This replaces the python AST with directly-generated IR nodes. I tried to make minimal changes to how the AST/IR interfaced with expressions and tables/matrixtables, since this PR is already super big. The main changes I had to make were to the aggregator interface---`_agg_func` and the current aggregable map/filter/flatmap stuff now mimics the scala `toIR` logic. The other functions that get lifted out specially in `toIR`--mostly lambda functions--also got rewritten directly in python. (I also implemented `agg.map`, `agg.flatmap`, and `functions.fold` to do this, but left them undocumented since I didn't want to put a bunch of documentation in this PR. I'll follow up with documentation separately.). I also added some tests to test_expr that were getting caught in the doctests but didn't have other corresponding python tests. On the Scala side, I rewrote the IR parser to allow `Ref`s to be typeless if the type could be looked up in a corresponding map from the Table or MatrixTable, and to allow ApplyComparisonOps to not pass the type. The other changes are mostly changing the Table/MatrixTable methods to parse IR strings directly. The old AST methods have been left and renamed if the tests still needed them; was planning on moving to TestUtils in a separate PR.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3940:614,undo,undocumented,614,https://hail.is,https://github.com/hail-is/hail/pull/3940,1,['undo'],['undocumented']
Usability,"cc @tpoterba . Isn't actually called yet, and no tests. Would like feedback on direction, then will add those pieces. . A few issues, starting from top:. 1) RelationalRef. Parser.scala `type_expr` can output a TUnion, but no PUnion exists. Current plan is to add one and the corresponding canonical type; 2) More to come.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6594:67,feedback,feedback,67,https://hail.is,https://github.com/hail-is/hail/pull/6594,1,['feedback'],['feedback']
Usability,"cc: @cseed . This seems much simpler and saves a per-element allocation, but I'm not entirely sure I understand how `saveAsSequenceFile` differs from `saveAsHadoopFile`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2265:29,simpl,simpler,29,https://hail.is,https://github.com/hail-is/hail/pull/2265,1,['simpl'],['simpler']
Usability,"cc: @cseed @konradjk . This PCRelate should handle larger data sizes than the previous one by avoiding shuffles. It avoids the shuffle by writing the vds to a temporary directory in block matrix form. It then loads this BlockMatrix directly. Form that point forward, the PCRelate algorithm is just non-shuffling linear algebra (however: matrix multiplication will require each node to communicate with approximately `n+m` other nodes). I'm vaguely uncomfortable with two things:. 1. I've added some hail expr lang to mean impute missing values. This is written in python. As such, correctly mean imputing is not tested by our test system any more. The mean imputation is pretty simple, so maybe we should just verify my code is right?. 2. I noticed that at some earlier point PCA was moved outside of Java as well. This also makes me uncomfortable for the same reason. Moving the tests into python is a fair lift because, AFAIK, we don't have as robust test infrastructure over there. I'm torn between the desire to get this out for @konradjk and the desire to follow our normal testing standards. ---. I've played a bit with this locally, but have not tried it on a large cluster. @konradjk, I would be very interested in how this performs on a large dataset, if you would be so kind. Please don't try this until the CI tests and doc builds pass on this PR though. I haven't run the tests locally, so I'm not certain it passes them :P",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2821:678,simpl,simple,678,https://hail.is,https://github.com/hail-is/hail/pull/2821,1,['simpl'],['simple']
Usability,"cc: @cseed, @tpoterba . Old PR: https://github.com/hail-is/hail/pull/4576. Still using the subfolder rather than subdomain, but it spins and has a management console. Currently both the user password and admin password are generated on start up and written to the log. It's running right now in k8s, as long as site doesn't get updated you can access it at https://hail.is/notebook . You can find the passwords in the log files. As you can see I played with some CSS. I'm open to suggestion there, clearly.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4588:498,clear,clearly,498,https://hail.is,https://github.com/hail-is/hail/pull/4588,1,['clear'],['clearly']
Usability,"cc: @tpoterba . Some greek yogurt to cool off that spicy meatball. Large filters, or filters with large globals will clutter up the region unnecessarily. This fix adds clears to the two matrix row filters and the table filter.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3587:168,clear,clears,168,https://hail.is,https://github.com/hail-is/hail/pull/3587,1,['clear'],['clears']
Usability,"cc: @tpoterba @patrick-schultz @catoverdrive . We are not allowed to clear a region we do not own. Someone should test this doesn't blow memory on a severe filter in the cloud. ---. Prevent segfaults when joining two tables using `t1.join(t2)`. This syntax does a ""product join"", i.e., a normal join. The `t2[t1.key]` syntax takes only one matching element from `t2` for each element in `t1`. When performing a ""product join"", hail keeps a side-buffer of region values from the right-hand-side table. This side buffer *must not be cleared* by down stream operations (it is owned by the join node). Unfortunately, hail's filter method was incorrectly clearing regions it might not own. This bug only appeared as a segfault when `t1.join(t2)` was followed by a filter.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5421:69,clear,clear,69,https://hail.is,https://github.com/hail-is/hail/pull/5421,3,['clear'],"['clear', 'cleared', 'clearing']"
Usability,"ccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:238); 	at java.base/java.lang.Thread.run(Thread.java:834). 2022-05-14 12:09:11 SparkContext: INFO: Invoking stop() from shutdown hook; 2022-05-14 12:09:11 AbstractConnector: INFO: Stopped Spark@15a2644a{HTTP/1.1, (http/1.1)}{0.0.0.0:4044}; 2022-05-14 12:09:11 SparkUI: INFO: Stopped Spark web UI at http://10.40.3.21:4044; 2022-05-14 12:09:11 MapOutputTrackerMasterEndpoint: INFO: MapOutputTrackerMasterEndpoint stopped!; 2022-05-14 12:09:11 MemoryStore: INFO: MemoryStore cleared; 2022-05-14 12:09:11 BlockManager: INFO: BlockManager stopped; 2022-05-14 12:09:11 BlockManagerMaster: INFO: BlockManagerMaster stopped; 2022-05-14 12:09:11 OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: INFO: OutputCommitCoordinator stopped!; 2022-05-14 12:09:11 SparkContext: INFO: Successfully stopped SparkContext; 2022-05-14 12:09:11 ShutdownHookManager: INFO: Shutdown hook called; 2022-05-14 12:09:11 ShutdownHookManager: INFO: Deleting directory /tmp/spark-51f10d40-8377-4f52-a8ce-27e5f2970d9c; 2022-05-14 12:09:11 ShutdownHookManager: INFO: Deleting directory /tmp/spark-acc398f9-392d-44b1-8f70-05573dad7cda; 2022-05-14 12:09:11 ShutdownHookManager: INFO: Deleting directory /tmp/spark-acc398f9-392d-44b1-8f70-05573dad7cda/pyspark-aab08516-4526-40da-8556-7b50184b10eb`. prs weights and genome data for GRCh38 are in use",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/11836:9234,clear,cleared,9234,https://hail.is,https://github.com/hail-is/hail/issues/11836,1,['clear'],['cleared']
Usability,"cda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""8f2f7ae4-0cec-47e6-822f-e81b1067da22"",""prPublicId"":""8f2f7ae4-0cec-47e6-822f-e81b1067da22"",""dependencies"":[{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.7.2""},{""name"":""numpy"",""from"":""1.21.3"",""to"":""1.22.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-NUMPY-2321964"",""SNYK-PYTHON-NUMPY-2321966"",""SNYK-PYTHON-NUMPY-2321970"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[531,null,null,null,null,null,509,384,494],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Access Control Bypass](https://learn.snyk.io/lesson/broken-access-control/?loc&#x3D;fix-pr); 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13871:6717,Learn,Learn,6717,https://hail.is,https://github.com/hail-is/hail/pull/13871,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"cda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""f06f3836-ea3a-4143-ba99-12b7ad33753d"",""prPublicId"":""f06f3836-ea3a-4143-ba99-12b7ad33753d"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.2""},{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.11.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622"",""SNYK-PYTHON-AIOHTTP-6209406"",""SNYK-PYTHON-AIOHTTP-6209407"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-JUPYTERSERVER-6099119"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,null,531,null,null,null,509,384,494,539],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Improper Limitation of a Pathname to a Restricted Directory (&#x27;Path Traversal&#x27;)](https://learn.snyk.io/lesson/directory-traversal/?loc&#x3D;fix-pr); 🦉 [Access Control Bypass](https://learn.snyk.io/lesson/broken-access-control/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14259:7287,Learn,Learn,7287,https://hail.is,https://github.com/hail-is/hail/pull/14259,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ch is annoying. Anyway now when someone asks how to count the mutations in each gene by consequence type we can point them to the `counter` docs. ---. Adding a dataset caused a bunch of docs failure that lead me to change how we do doctesting. The changes are summarized below.; - ignore `python/.eggs`; - make `PARALLELISM` configurable in `Makefile`; - fix `make pytest` (it referenced a non-extant target); - add `make doctest` (this and `pytest` use setup.py to replicate the environment the user would have after installation, I prefer this approach because I need not manually install any dependencies, setup.py handles that, it also configures spark correctly without environment variables); - harmonize `doctest` and `pytest` parameters in `build.gradle` and `Makefile`; - clean up import order in `conftest.py` to match pylint's desired ordering; - use a `temple.TemporaryDirectory` for all doctest and test output, which is automatically cleaned up (if you want to interrogate it you can `ctrl-z` a running doctest); this allows us to not copy the entire python directory into a build directory before running pytest; - *important:* re-generate all input datasets on every run of the tests. Previously, there was a file `doctest_write_data.py` which you were supposed to run when you changed the datasets, but if Hail changes then the random datasets generated by `doctest_write_data.py` might change. This means when I came along to add a new dataset, I had to address all the test failures introduced since the last time `doctest_write_data.py`'s results were checked in. (the doctests still only take about 2 minutes); - I fixed several latent doc bugs caused by the aforementioned situation; - I changed ""Using Variants as Covariates"" in `guides/genetics.rst` because it seemed complicated and was broken by the aforementioned situation; - I removed `NOTEST` which was a custom pytest annotation that duplicates the functionality of `SKIP` (I changed all `NOTEST` annotations to `SKIP`)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6856:2284,guid,guides,2284,https://hail.is,https://github.com/hail-is/hail/pull/6856,1,['guid'],['guides']
Usability,"changed the signature of the `deepCopy` functions that take source and destination parameters, replacing the source parameter with a ""value"" parameter. this way you can pass in primitive values to `deepCopy` and it will call `storePrimitive`. the reasoning for this is that most applications of `deepCopy` want this behavior, previously having to match over the type to determine if its a primitive. now they can just call `deepCopy` with any PType. @patrick-schultz suggested this change in #6858, so if this gets merged i can simplify some of the logic in that PR as well.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6906:528,simpl,simplify,528,https://hail.is,https://github.com/hail-is/hail/pull/6906,1,['simpl'],['simplify']
Usability,"ches.id; -> LEFT JOIN aggregated_job_resources; -> ON jobs.batch_id = aggregated_job_resources.batch_id AND; -> jobs.job_id = aggregated_job_resources.job_id; -> LEFT JOIN resources; -> ON aggregated_job_resources.resource = resources.resource; -> INNER JOIN job_attributes; -> ON jobs.batch_id = job_attributes.batch_id AND; -> jobs.job_id = job_attributes.job_id AND; -> job_attributes.`key` = 'name'; -> WHERE (jobs.batch_id = 14327) AND; -> (jobs.batch_id, jobs.job_id) IN (SELECT batch_id, job_id FROM job_attributes WHERE `key` = 'pheno' AND `value` = '50'); -> GROUP BY jobs.batch_id, jobs.job_id; -> ORDER BY jobs.batch_id, jobs.job_id ASC; -> LIMIT 50;; +----+-------------+--------------------------+------------+--------+--------------------------------------------------+--------------------------+---------+-----------------------------------------+------+----------+---------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+--------------------------+------------+--------+--------------------------------------------------+--------------------------+---------+-----------------------------------------+------+----------+---------------------------------+; | 1 | SIMPLE | batches | NULL | const | PRIMARY | PRIMARY | 8 | const | 1 | 100.00 | Using temporary; Using filesort |; | 1 | SIMPLE | job_attributes | NULL | ref | PRIMARY,job_attributes_key_value | job_attributes_key_value | 1081 | const,const,const | 3057 | 100.00 | Using where |; | 1 | SIMPLE | jobs | NULL | eq_ref | PRIMARY,jobs_batch_id_state_always_run_cancelled | PRIMARY | 12 | const,batch.job_attributes.job_id | 1 | 100.00 | NULL |; | 1 | SIMPLE | job_attributes | NULL | eq_ref | PRIMARY,job_attributes_key_value | PRIMARY | 314 | const,batch.job_attributes.job_id,const | 1 | 100.00 | NULL |; | 1 | SIMPLE | aggregated_job_resources | NULL | ref | PRIMARY | PRIMARY | 12 | const,batch.job_attributes.jo",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9870:1503,SIMPL,SIMPLE,1503,https://hail.is,https://github.com/hail-is/hail/pull/9870,1,['SIMPL'],['SIMPLE']
Usability,"cies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""41.0.6""},{""name"":""pyjwt"",""from"":""1.7.1"",""to"":""2.4.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""rsa"",""from"":""4.5"",""to"":""4.7""}],""packageManager"":""pip"",""projectPublicId"":""e7c92c7b-5282-49ea-940f-7a5797e2a45a"",""projectUrl"":""https://app.snyk.io/org/danking/project/e7c92c7b-5282-49ea-940f-7a5797e2a45a?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-3315975"",""SNYK-PYTHON-CRYPTOGRAPHY-3316038"",""SNYK-PYTHON-CRYPTOGRAPHY-3316211"",""SNYK-PYTHON-CRYPTOGRAPHY-5663682"",""SNYK-PYTHON-CRYPTOGRAPHY-5777683"",""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750"",""SNYK-PYTHON-CRYPTOGRAPHY-5914629"",""SNYK-PYTHON-CRYPTOGRAPHY-6036192"",""SNYK-PYTHON-CRYPTOGRAPHY-6092044"",""SNYK-PYTHON-PYJWT-2840625"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-RSA-1038401""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[],""priorityScoreList"":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use After Free](https://learn.snyk.io/lesson/use-after-free/?loc&#x3D;fix-pr); 🦉 [Access of Resource Using Incompatible Type (&#x27;Type Confusion&#x27;)](https://learn.snyk.io/lesson/type-confusion/?loc&#x3D;fix-pr); 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14134:10798,Learn,Learn,10798,https://hail.is,https://github.com/hail-is/hail/pull/14134,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ck the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI4MmVlNzU5Ny0wZmFhLTQ1NmUtOTA3Ny0zOTM4ODRjNzJmNGMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjgyZWU3NTk3LTBmYWEtNDU2ZS05MDc3LTM5Mzg4NGM3MmY0YyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""82ee7597-0faa-456e-9077-393884c72f4c"",""prPublicId"":""82ee7597-0faa-456e-9077-393884c72f4c"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.2"",""to"":""41.0.3""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[471,551,471],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13370:4242,Learn,Learn,4242,https://hail.is,https://github.com/hail-is/hail/pull/13370,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ck the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxOGJjNGZiYS05ZTMwLTRmNWItYTE4Yy0wOGNmNDVmZDExMTciLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjE4YmM0ZmJhLTllMzAtNGY1Yi1hMThjLTA4Y2Y0NWZkMTExNyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""18bc4fba-9e30-4f5b-a18c-08cf45fd1117"",""prPublicId"":""18bc4fba-9e30-4f5b-a18c-08cf45fd1117"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.2"",""to"":""41.0.3""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[471,551,471],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13366:4250,Learn,Learn,4250,https://hail.is,https://github.com/hail-is/hail/pull/13366,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,clear in block matrix write,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3555:0,clear,clear,0,https://hail.is,https://github.com/hail-is/hail/pull/3555,2,['clear'],['clear']
Usability,"code>ssm-sap</code>: [<code>botocore</code>] AWS Systems Manager for SAP provides simplified operations and management of SAP applications such as SAP HANA. With this release, SAP customers and partners can automate and simplify their SAP system administration tasks such as backup/restore of SAP HANA.</li>; <li>api-change:<code>stepfunctions</code>: [<code>botocore</code>] Update stepfunctions client to latest version</li>; <li>api-change:<code>transfer</code>: [<code>botocore</code>] Adds a NONE encryption algorithm type to AS2 connectors, providing support for skipping encryption of the AS2 message body when a HTTPS URL is also specified.</li>; </ul>; <h1>1.26.12</h1>; <ul>; <li>api-change:<code>amplify</code>: [<code>botocore</code>] Adds a new value (WEB_COMPUTE) to the Platform enum that allows customers to create Amplify Apps with Server-Side Rendering support.</li>; <li>api-change:<code>appflow</code>: [<code>botocore</code>] AppFlow simplifies the preparation and cataloging of SaaS data into the AWS Glue Data Catalog where your data can be discovered and accessed by AWS analytics and ML services. AppFlow now also supports data field partitioning and file size optimization to improve query performance and reduce cost.</li>; <li>api-change:<code>appsync</code>: [<code>botocore</code>] This release introduces the APPSYNC_JS runtime, and adds support for JavaScript in AppSync functions and AppSync pipeline resolvers.</li>; <li>api-change:<code>dms</code>: [<code>botocore</code>] Adds support for Internet Protocol Version 6 (IPv6) on DMS Replication Instances</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/boto/boto3/commit/f38ce50a317baf6715870b2706100d43b80b0c73""><code>f38ce50</code></a> Merge branch 'release-1.26.16'</li>; <li><a href=""https://github.com/boto/boto3/commit/33d7d6f020510890b93edf49de3f81c0ba208cb3""><code>33d7d6f</code></a> Bump",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12502:5940,simpl,simplifies,5940,https://hail.is,https://github.com/hail-is/hail/pull/12502,1,['simpl'],['simplifies']
Usability,"code>ssm-sap</code>: [<code>botocore</code>] AWS Systems Manager for SAP provides simplified operations and management of SAP applications such as SAP HANA. With this release, SAP customers and partners can automate and simplify their SAP system administration tasks such as backup/restore of SAP HANA.</li>; <li>api-change:<code>stepfunctions</code>: [<code>botocore</code>] Update stepfunctions client to latest version</li>; <li>api-change:<code>transfer</code>: [<code>botocore</code>] Adds a NONE encryption algorithm type to AS2 connectors, providing support for skipping encryption of the AS2 message body when a HTTPS URL is also specified.</li>; </ul>; <h1>1.26.12</h1>; <ul>; <li>api-change:<code>amplify</code>: [<code>botocore</code>] Adds a new value (WEB_COMPUTE) to the Platform enum that allows customers to create Amplify Apps with Server-Side Rendering support.</li>; <li>api-change:<code>appflow</code>: [<code>botocore</code>] AppFlow simplifies the preparation and cataloging of SaaS data into the AWS Glue Data Catalog where your data can be discovered and accessed by AWS analytics and ML services. AppFlow now also supports data field partitioning and file size optimization to improve query performance and reduce cost.</li>; <li>api-change:<code>appsync</code>: [<code>botocore</code>] This release introduces the APPSYNC_JS runtime, and adds support for JavaScript in AppSync functions and AppSync pipeline resolvers.</li>; <li>api-change:<code>dms</code>: [<code>botocore</code>] Adds support for Internet Protocol Version 6 (IPv6) on DMS Replication Instances</li>; <li>api-change:<code>ec2</code>: [<code>botocore</code>] This release adds a new optional parameter &quot;privateIpAddress&quot; for the CreateNatGateway API. PrivateIPAddress will allow customers to select a custom Private IPv4 address instead of having it be auto-assigned.</li>; <li>api-change:<code>elbv2</code>: [<code>botocore</code>] Update elbv2 client to latest version</li>; <li>api-change:<code",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12498:5469,simpl,simplifies,5469,https://hail.is,https://github.com/hail-is/hail/pull/12498,1,['simpl'],['simplifies']
Usability,"commit/95df758d6753005226556177e68a3e9c630c789b"">95df758</a>)</li>; </ul>; <h3>Dependencies</h3>; <ul>; <li>Update dependency org.graalvm.buildtools:native-maven-plugin to v0.9.24 (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2158"">#2158</a>) (<a href=""https://github.com/googleapis/java-storage/commit/4f5682a4f6d6d5372a2d382ae3e47dace490ca0d"">4f5682a</a>)</li>; </ul>; <h2>v2.26.0</h2>; <h2><a href=""https://github.com/googleapis/java-storage/compare/v2.25.0...v2.26.0"">2.26.0</a> (2023-08-03)</h2>; <h3>Features</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/googleapis/java-storage/blob/main/CHANGELOG.md"">com.google.cloud:google-cloud-storage's changelog</a>.</em></p>; <blockquote>; <h2><a href=""https://github.com/googleapis/java-storage/compare/v2.26.1...v2.27.0"">2.27.0</a> (2023-09-12)</h2>; <h3>Features</h3>; <ul>; <li>Add new JournalingBlobWriteSessionConfig usable with gRPC transport (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2194"">#2194</a>) (<a href=""https://github.com/googleapis/java-storage/commit/8880d94c3d1a737dd4492cf66a16ba5e08633a70"">8880d94</a>)</li>; <li>Follow-up CLI Improvements (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2184"">#2184</a>) (<a href=""https://github.com/googleapis/java-storage/commit/d9859768081ea6f872097851d3e318b5bad384d9"">d985976</a>)</li>; <li>Initial CLI for SSB integration and Workload 1 (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2166"">#2166</a>) (<a href=""https://github.com/googleapis/java-storage/commit/a349735e7fe108e623a330afec0c8cd608ebeef9"">a349735</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>A resumable session without a Range header should be interpreted as 0 length (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2182"">#2182</a>) (<a href=""https://github.com/googleapis/java-stora",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13624:6482,usab,usable,6482,https://hail.is,https://github.com/hail-is/hail/pull/13624,1,['usab'],['usable']
Usability,"create separate and complete style guides for python, scala, and c++",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3224:35,guid,guides,35,https://hail.is,https://github.com/hail-is/hail/issues/3224,2,['guid'],['guides']
Usability,"ct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxMDU5YWVmMS00ZGY4LTQ2YjktYWYwNS02MWQzYTI2NjE5NWQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjEwNTlhZWYxLTRkZjgtNDZiOS1hZjA1LTYxZDNhMjY2MTk1ZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""1059aef1-4df8-46b9-af05-61d3a266195d"",""prPublicId"":""1059aef1-4df8-46b9-af05-61d3a266195d"",""dependencies"":[{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-TORNADO-5840803""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown""],""priorityScoreList"":[null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13436:3168,Learn,Learn,3168,https://hail.is,https://github.com/hail-is/hail/pull/13436,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJkNGViNWEyYS04NmZjLTRhZDQtYmM5MC1mZDViZWU4Mjg3YWUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImQ0ZWI1YTJhLTg2ZmMtNGFkNC1iYzkwLWZkNWJlZTgyODdhZSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""d4eb5a2a-86fc-4ad4-bc90-fd5bee8287ae"",""prPublicId"":""d4eb5a2a-86fc-4ad4-bc90-fd5bee8287ae"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.3"",""to"":""41.0.4""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-5914629""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[611],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13701:3381,Learn,Learn,3381,https://hail.is,https://github.com/hail-is/hail/pull/13701,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmOTk4OWJlMC0yOWQ3LTQyYTctYTAzMC04NzljMTRmOGE2N2YiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImY5OTg5YmUwLTI5ZDctNDJhNy1hMDMwLTg3OWMxNGY4YTY3ZiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""f9989be0-29d7-42a7-a030-879c14f8a67f"",""prPublicId"":""f9989be0-29d7-42a7-a030-879c14f8a67f"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.3"",""to"":""41.0.4""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-5914629""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[611],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13700:3373,Learn,Learn,3373,https://hail.is,https://github.com/hail-is/hail/pull/13700,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"currently just for the rows of MatrixTable, but I'd appreciate some feedback on what I've got so far. I think I'm probably just going to make all the interface changes on this branch/in this PR so they're all in one place before they go in?. from:; http://dev.hail.is/t/proposed-changes-to-the-python-select-annotate-drop-interface-for-keys/88",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3297:68,feedback,feedback,68,https://hail.is,https://github.com/hail-is/hail/pull/3297,1,['feedback'],['feedback']
Usability,"d dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI2NWVkZTk2ZC0xYjZkLTQ1ZjktOTU3OC00NzdjMWNmNDhiZmQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjY1ZWRlOTZkLTFiNmQtNDVmOS05NTc4LTQ3N2MxY2Y0OGJmZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""65ede96d-1b6d-45f9-9578-477c1cf48bfd"",""prPublicId"":""65ede96d-1b6d-45f9-9578-477c1cf48bfd"",""dependencies"":[{""name"":""msal"",""from"":""1.24.0"",""to"":""1.24.1""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-MSAL-5904284""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[661],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Neutralization of Special Elements in Data Query Logic](https://learn.snyk.io/lesson/nosql-injection-attack/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13754:3446,Learn,Learn,3446,https://hail.is,https://github.com/hail-is/hail/pull/13754,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"d dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhYjlhNGM2ZS0xOTg1LTRmYTctYjg0OC0zOTNmOWE3MGJkMWEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImFiOWE0YzZlLTE5ODUtNGZhNy1iODQ4LTM5M2Y5YTcwYmQxYSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""ab9a4c6e-1985-4fa7-b848-393f9a70bd1a"",""prPublicId"":""ab9a4c6e-1985-4fa7-b848-393f9a70bd1a"",""dependencies"":[{""name"":""msal"",""from"":""1.24.0"",""to"":""1.24.1""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-MSAL-5904284""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[661],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Neutralization of Special Elements in Data Query Logic](https://learn.snyk.io/lesson/nosql-injection-attack/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13753:3438,Learn,Learn,3438,https://hail.is,https://github.com/hail-is/hail/pull/13753,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"d within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlNTZiOGU3Ni1mMTk3LTQ0MmMtOGVlMC04MjFhMDk5YzM3YTAiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImU1NmI4ZTc2LWYxOTctNDQyYy04ZWUwLTgyMWEwOTljMzdhMCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""e56b8e76-f197-442c-8ee0-821a099c37a0"",""prPublicId"":""e56b8e76-f197-442c-8ee0-821a099c37a0"",""dependencies"":[{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.2""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-TORNADO-5537286""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[556],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Open Redirect](https://learn.snyk.io/lessons/open-redirect/python/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13072:3031,Learn,Learn,3031,https://hail.is,https://github.com/hail-is/hail/pull/13072,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"d, @jigold, @danking . Adds a `users.user_data` table reader. Upon login the user's `user_data` entry is read, stored in a `user` cookie, as a hmac/sha256-signed jwt. The secret key is the `'/notebook-secrets/secret-key'`. In order to avoid duplicating user data storage, I use the `user` cookie in place of `session['user']`, and to handle this wrote a decorator to decode the token and store it in Flask.g (for the duration of the request). The claims included:. ```python; {; 'id': [int],; 'auth0_id': [str],; 'name': [str],; 'email': [str],; 'picture': [str],; 'ksa_name': [str],; 'gsa_name': [str],; 'bucket_name': [str],; }; ```. An example cookie; ```python; { ; 'auth0_id': 'google-oauth2|000000000000000',; 'bucket_name': 'user-f2khk67pq8a9pc38wnbjigarg',; 'email': 'akotlar@broadinstitute.org',; 'gsa_name': 'projects/hail-vdc/serviceAccounts/user-f2khk67pq8a9pc38wnbjigarg@hail-vdc.iam.gserviceaccount.com',; 'id': 1,; 'ksa_name': 'user-4c4pr',; 'name': 'Alex Kotlar',; 'picture': 'https://lh4.googleusercontent.com/-QIkmrfGTN1M/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reUAvw1lwovp2ozAIThEN72j-qzeQ/mo/photo.jpg'; }; ```. Here 'id' means `users.user_data.id`. To parse the cookie in your applications:; ```python; SECRET_KEY = read_string('/notebook-secrets/secret-key'). def jwt_decode(token):; if token is None:; return None. try:; payload = jwt.decode(token, SECRET_KEY, algorithms=['HS256']); except jwt.exceptions.InvalidTokenError as e:; log.exception(e); payload = None. return payload. def jwt_encode(payload):; return jwt.encode(payload, SECRET_KEY, algorithm='HS256'). def get_domain(host):; parts = host.split('.'); p_len = len(parts). return f""{parts[p_len - 2]}.{parts[p_len - 1]}""; ```. And to use this (in Flask...aiohttp will be similar): `user = jwt_decode(request.cookies.get('user'))`. The cookie is scoped to hail.is (or whatever the lowest level domain happens to be if you're locally testing). I think this is a mostly straightforward implementation, but happy to take feedback.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5633:1999,feedback,feedback,1999,https://hail.is,https://github.com/hail-is/hail/pull/5633,1,['feedback'],['feedback']
Usability,"doop.rest.RestRepository.writeToIndex(RestRepository.java:168); 	at org.elasticsearch.spark.rdd.EsRDDWriter.write(EsRDDWriter.scala:67); 	at org.elasticsearch.spark.rdd.EsSpark$$anonfun$doSaveToEs$1.apply(EsSpark.scala:107); 	at org.elasticsearch.spark.rdd.EsSpark$$anonfun$doSaveToEs$1.apply(EsSpark.scala:107); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70); 	at org.apache.spark.scheduler.Task.run(Task.scala:86); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748). Hail version: 0.1-408f188; Error summary: EsHadoopIllegalArgumentException: Spark SQL types are not handled through basic RDD saveToEs() calls; typically this is a mistake(as the SQL schema will be ignored). Use 'org.elasticsearch.spark.sql' package instead; ERROR: (gcloud.dataproc.jobs.submit.pyspark) Job [ffc9fb0b99f64080b674ab7a07962df9] entered state [ERROR] while waiting for [DONE].; ```. Ideally it would get exported as nested objects: https://www.elastic.co/guide/en/elasticsearch/reference/current/nested.html#_using_literal_nested_literal_fields_for_arrays_of_objects. with elasticsearch mapping:; ```; u'vep': {'type': 'nested', 'properties': {u'category': {'type': 'keyword'}, u'major_consequence': {'type': 'keyword'}, u'gene_id': {'type': 'keyword'}, u'major_consequence_rank': {'type': 'integer'}, u'gene_symbol': {'type': 'keyword'}, u'transcript_id': {'type': 'keyword'}, u'hgvs': {'type': 'keyword'}, u'protein_id': {'type': 'keyword'}}}, ; ```. I thought about switching to saveJsonToEs here: ; https://github.com/hail-is/hail/blob/0.1/src/main/scala/is/hail/io/ElasticsearchConnector.scala#L33; but not sure how to auto-convert to json before exporting; https://www.elastic.co/guide/en/elasticsearch/hadoop/6.x/spark.html#spark-streaming-write-json",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4250:11551,guid,guide,11551,https://hail.is,https://github.com/hail-is/hail/issues/4250,2,['guid'],['guide']
Usability,"e -- ExtractIntervalFilters : 21.579ms, total 51.305ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- Simplify : 38.711ms, total 90.246ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ForwardLets : 58.138ms, total 148.873ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ForwardRelationalLets : 4.892ms, total 154.106ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- PruneDeadFields : 70.932ms, total 225.284ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- FoldConstants : 2.673ms, total 228.575ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ExtractIntervalFilters : 6.413ms, total 235.357ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- Simplify : 4.736ms, total 240.359ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ForwardLets : 38.152ms, total 278.793ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ForwardRelationalLets : 3.185ms, total 282.285ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- PruneDeadFields : 25.086ms, total 307.692ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- FoldConstants : 1.938ms, total 310.139ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ExtractIntervalFilters : 13.601ms, total 324.665ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- Simplify : 4.231ms, total 329.178ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: IN",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7476:1445,Simpl,Simplify,1445,https://hail.is,https://github.com/hail-is/hail/pull/7476,1,['Simpl'],['Simplify']
Usability,"e want, but there isn’t really an equivalent for samples since hl.sample_qc and hl.vds.sample_qc take MTs and return HTs rather than taking expressions and returning aggregation expressions. Would the Hail team have the bandwidth in the next couple weeks to put in a modification to the hl.vds.sample_qc to make it function similar to the hl.agg.call_stats ?. My thoughts on it:. It's a reasonable ask. You'll have four parts (first three are aggregators): rmt_sq, vmt_sq, ac_and_atype, and combine. The user must ensure the same filters, groups, etc. are applied to each aggregator. If you group, you'll need to ensure the right grouped AC is passed around. It might look like this on the variant matrix table. The reference stuff looks similar.; ```python3; vmt = vmt.annotate_entries(GT=hl.vds.lgt_to_gt(vmt.LGT, vmt.LA)); vmt = vmt.annotate_rows(ac_atype=hl.agg.group_by(foo, ac_and_atype(vmt.GT, vmt.alleles))); vmt = vmt.annotate_cols(; qc=hl.agg.group_by(; foo,; vmt_sample_qc(; global_gt=vmt.GT,; gq=vmt.GQ,; ac=ac_atype[foo].ac,; atype=ac_atype[foo].atype,; dp=vmt.DP); ); ); ```; The atype needn't really be grouped. That should maybe be its own aggregator and then you can use stats directly to get a valid AC. I sketched this here: https://github.com/hail-is/hail/compare/main...danking:hail:agg-sample-qc but there are probably bugs in that. This issue is complete when we merge a PR that:; 1. Exposes one or more aggregators which compute all the statistics from `hl.vds.sample_qc` on the component matrix tables of a VDS: the variant data and the reference data.; 2. Exposes a combination function which combines reference and variant stats to produce `bases_over_dp_threshold` and `bases_over_gq_threshold`.; 3. Includes extensive tests comparing these aggregators to the original `hl.vds.sample_qc`.; 4. Includes clear documentation *with several examples* of how to use these new aggregators and the combination function. ### Version. 0.2.127. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14264:2134,clear,clear,2134,https://hail.is,https://github.com/hail-is/hail/issues/14264,1,['clear'],['clear']
Usability,"e"",""from"":""0.8.4"",""to"":""2.0.3""},{""name"":""nbconvert"",""from"":""5.6.1"",""to"":""6.3.0b0""},{""name"":""notebook"",""from"":""5.7.16"",""to"":""6.4.12""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-IPYTHON-2348630"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERCORE-3063766"",""SNYK-PYTHON-MISTUNE-2940625"",""SNYK-PYTHON-NBCONVERT-2979829"",""SNYK-PYTHON-NOTEBOOK-1041707"",""SNYK-PYTHON-NOTEBOOK-2441824"",""SNYK-PYTHON-NOTEBOOK-2928995"",""SNYK-PYTHON-PYGMENTS-1086606"",""SNYK-PYTHON-PYGMENTS-1088505"",""SNYK-PYTHON-PYGMENTS-5750273"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-SPHINX-570772"",""SNYK-PYTHON-SPHINX-570773"",""SNYK-PYTHON-SPHINX-5811865"",""SNYK-PYTHON-SPHINX-5812109"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[554,704,624,531,604,589,726,434,589,449,696,589,479,519,509,711,701,586,586,384,494],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Improper Privilege Management](https://learn.snyk.io/lesson/insecure-design/?loc&#x3D;fix-pr); 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13717:11922,Learn,Learn,11922,https://hail.is,https://github.com/hail-is/hail/pull/13717,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"e(RDD.scala:362); at org.apache.spark.rdd.RDD.mapPartitions(RDD.scala:793); at is.hail.sparkextras.ContextRDD.cmapPartitions(ContextRDD.scala:351); at is.hail.HailContext.readRows(HailContext.scala:629); at is.hail.rvd.AbstractRVDSpec.read(AbstractRVDSpec.scala:151); at is.hail.variant.RVDComponentSpec.read(MatrixTable.scala:98); at is.hail.expr.ir.TableRead.execute(TableIR.scala:78); at is.hail.expr.ir.TableHead.execute(TableIR.scala:325); at is.hail.expr.ir.Interpret$.apply(Interpret.scala:56); at is.hail.table.Table.x$3$lzycompute(Table.scala:216); at is.hail.table.Table.x$3(Table.scala:216); at is.hail.table.Table.value$lzycompute(Table.scala:216); at is.hail.table.Table.value(Table.scala:216); at is.hail.table.Table.rdd$lzycompute(Table.scala:220); at is.hail.table.Table.rdd(Table.scala:220); at is.hail.table.Table.collect(Table.scala:538); at is.hail.table.Table.showString(Table.scala:582); at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.base/java.lang.reflect.Method.invoke(Method.java:564); at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); at py4j.Gateway.invoke(Gateway.java:282); at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); at py4j.commands.CallCommand.execute(CallCommand.java:79); at py4j.GatewayConnection.run(GatewayConnection.java:238); at java.base/java.lang.Thread.run(Thread.java:844). The problem here is that the message gives zero information on why the python hail code failed. Please implement a version checker; run the java binary and query its version, and if it's not compatible, raise a python exception with a clear message about which java version is installed and needs to be installed.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4896:4814,clear,clear,4814,https://hail.is,https://github.com/hail-is/hail/issues/4896,1,['clear'],['clear']
Usability,"eaking <code>method_name</code> in; <code>DeprecatedList</code>.</li>; </ul>; <h1>v4.10.1</h1>; <h1>v2.1.3</h1>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python/importlib_metadata/commit/516f2a78061d27a3baff53ce4b08f95b638f60d3""><code>516f2a7</code></a> Fix reference in docs build.</li>; <li><a href=""https://github.com/python/importlib_metadata/commit/c8d7285af792d6851227212d4261ce7ae180a87c""><code>c8d7285</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python/importlib_metadata/issues/391"">#391</a> from python/ghpython-93259/from-name-arg-validation-s...</li>; <li><a href=""https://github.com/python/importlib_metadata/commit/91b71494226a95251134c4fe6ea65a1dd25f495c""><code>91b7149</code></a> Update changelog</li>; <li><a href=""https://github.com/python/importlib_metadata/commit/c96dc1e77f032315bfc78f0c1d13c9a61fb68c3f""><code>c96dc1e</code></a> Merge branch 'main' into ghpython-93259/from-name-arg-validation-simple</li>; <li><a href=""https://github.com/python/importlib_metadata/commit/f52757d0c8a9a555d0591a86b334a17028e2ead9""><code>f52757d</code></a> In Distribution.from_name, re-use discover.</li>; <li><a href=""https://github.com/python/importlib_metadata/commit/344a6ffc612eec611592e7686264ced72f64da5a""><code>344a6ff</code></a> Refactor Distribution.from_name to avoid return in loop and unnecessary None ...</li>; <li><a href=""https://github.com/python/importlib_metadata/commit/eb19c647519c754dd93b42a0c421101af73cf7a4""><code>eb19c64</code></a> In Distribution.from_name, require a non-empty string. Fixes <a href=""https://github-redirect.dependabot.com/python/cpython/issues/9"">python/cpython#9</a>...</li>; <li><a href=""https://github.com/python/importlib_metadata/commit/d3fe031dbad4590896829f18ecbd8d9d8a132f53""><code>d3fe031</code></a> Add comment about the compatibility factor.</li>; <li><a href=""https://github.com/python/impor",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12000:3060,simpl,simple,3060,https://hail.is,https://github.com/hail-is/hail/pull/12000,1,['simpl'],['simple']
Usability,"eam()</code> to continue yielding bytes if buffered decompressed data; was still available to be read even if the underlying socket is closed. This prevents; a compressed response from being truncated. (<code>[#3009](https://github.com/urllib3/urllib3/issues/3009) &lt;https://github.com/urllib3/urllib3/issues/3009&gt;</code>__)</li>; </ul>; <h1>2.0.1 (2023-04-30)</h1>; <ul>; <li>Fixed a socket leak when fingerprint or hostname verifications fail. (<code>[#2991](https://github.com/urllib3/urllib3/issues/2991) &lt;https://github.com/urllib3/urllib3/issues/2991&gt;</code>__)</li>; <li>Fixed an error when <code>HTTPResponse.read(0)</code> was the first <code>read</code> call or when the internal response body buffer was otherwise empty. (<code>[#2998](https://github.com/urllib3/urllib3/issues/2998) &lt;https://github.com/urllib3/urllib3/issues/2998&gt;</code>__)</li>; </ul>; <h1>2.0.0 (2023-04-26)</h1>; <p>Read the <code>v2.0 migration guide &lt;https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html&gt;</code>__ for help upgrading to the latest version of urllib3.</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/262e3e332209ee93ff70e2b13502c8f20c105ac8""><code>262e3e3</code></a> Release 2.0.6</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/644124ecd0b6e417c527191f866daa05a5a2056d""><code>644124e</code></a> Merge pull request from GHSA-v845-jxx5-vc9f</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/740380c59ca2a7c2dceca19e5dba99f6b7060e62""><code>740380c</code></a> Bump cryptography from 41.0.3 to 41.0.4 (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3131"">#3131</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d9f85a749488188c286cd50606d159874db94d5f""><code>d9f85a7</code></a> Release 2.0.5</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d41f4122966f7f4f5f92001ad518",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13768:11620,guid,guide,11620,https://hail.is,https://github.com/hail-is/hail/pull/13768,2,['guid'],['guide']
Usability,"eating') OR jobs.attempt_id != attempts.attempt_id); -> AND instances.`state` = 'active'; -> ORDER BY attempts.start_time ASC; -> LIMIT 300\G;. *************************** 1. row ***************************; id: 1; select_type: SIMPLE; table: instances; partitions: NULL; type: ALL; possible_keys: PRIMARY; key: NULL; key_len: NULL; ref: NULL; rows: 1150201; filtered: 10.00; Extra: Using where; Using temporary; Using filesort; *************************** 2. row ***************************; id: 1; select_type: SIMPLE; table: attempts; partitions: NULL; type: ref; possible_keys: PRIMARY,attempts_instance_name; key: attempts_instance_name; key_len: 303; ref: batch.instances.name; rows: 91; filtered: 9.00; Extra: Using where; *************************** 3. row ***************************; id: 1; select_type: SIMPLE; table: jobs; partitions: NULL; type: eq_ref; possible_keys: PRIMARY,jobs_batch_id_state_always_run_cancelled,jobs_batch_id_state_always_run_inst_coll_cancelled,jobs_batch_id_update_id,jobs_batch_id_always_run_n_regions_regions_bits_rep_job_id,jobs_batch_id_ic_state_ar_n_regions_bits_rep_job_id,jobs_batch_id_job_group_id,jobs_batch_id_ic_state_ar_n_regions_bits_rep_job_group_id; key: PRIMARY; key_len: 12; ref: batch.attempts.batch_id,batch.attempts.job_id; rows: 1; filtered: 98.10; Extra: Using where; 3 rows in set, 1 warning (0.00 sec); ```. This is not great:; ```; rows: 1150201; filtered: 10.00; Extra: Using where; Using temporary; Using filesort; ```; what we want to see is a low number of rows, a high percent filtered, and something like `Extra: Using where; Using index;`. 3. We can then verify that this finding aligns with our current understanding of the database schema where there is no index on `instances.state`: ; https://github.com/hail-is/hail/blob/1f3a0503926b65f479dce6d5eb105236632f8d07/batch/sql/estimated-current.sql#L113-L138. ### Remaining questions; 1. Why do we need to join against the instances table to find orphaned attempts? Can we not?; 2.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14460:2536,SIMPL,SIMPLE,2536,https://hail.is,https://github.com/hail-is/hail/issues/14460,1,['SIMPL'],['SIMPLE']
Usability,"ebook/react/issues/13525); 2. There should alway be one and only one non-leaf node in the component tree. Leaf siblings are allowed; note that this requires that there is only one root node as well. ```jsx; export default () => <div>OK</div>; export default () => (<div>OK</div><span>Not OK</span>); ```. To get around this, wrap in a ""<Fragment>"", an html element, or array. Basically, react wants a top level / root object. https://reactjs.org/docs/fragments.html, https://pawelgrzybek.com/return-multiple-elements-from-a-component-with-react-16/. ```jsx; import { Fragment } from 'react';. const good = () => [<div>OK</div><span>GOOD!</span>];; const good2 = () => <Fragment><div>OK</div><span>GOOD!</span></Fragment>;; const good3 = () => <span><div>OK</div><span>GOOD!</span></span>;; ```. #### JSX naming conventions; 1. Lowercase components are just built-in html elements. i.e `<span>` is a an HTML `<span>` on output.; 2. Uppercase components are javascript functions. This makes composing components really simple. ```jsx; const CoolComponent = () => <span>Hello World</span>;. export default () => <CoolComponent>;; ```. You can pass state to these user-defined components, much like you would in HTML, using attributes. These attributes can have arbitrary names, except they must start with a lowercase letter, and follow camel-case convention. These attributes are called `props`. ```jsx; const CoolComponent = (props) => <span>Hello {props.name}!</span>;. export default () => <CoolComponent name=""Alex"">; #mounts <span>Hello Alex!</span> in DOM; ```. #### PureComponent / shallow watch; React's reconciler is triggered whenever this.setState is called, resulting in a walk down the descendent nodes, based on either the presence of that state variable as a ""prop"" (i.e `<MyComponent name={this.state.name}/>`), or its use directly within the component (i.e `{this.state.name === 'Alex' ? <div>Do stuff</div> : <div>Do other stuff</div>). To give the reconciler less work to do, when acc",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5162:8472,simpl,simple,8472,https://hail.is,https://github.com/hail-is/hail/pull/5162,1,['simpl'],['simple']
Usability,"ef7a4f</code></a> Merge pull request from GHSA-44cc-43rp-5947</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/0a7510114b56a0c5da8f7d251e69a67aafb87ef2""><code>0a75101</code></a> Fix CI: lint</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/dda0033cd49449572d077bbecd33b18d8d05f48a""><code>dda0033</code></a> Merge pull request from GHSA-4m77-cmpx-vjc4</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/0708330843fd087134a239d2ad6005b1d543e246""><code>0708330</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15612"">#15612</a>: Fixes focus indicator on input checkbox for Firefox (<a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15653"">#15653</a>)</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/edb23ebb12977675ef2a003f526e2f2e751930f3""><code>edb23eb</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15640"">#15640</a>: Fix link to yarn docs in extension migration guide (<a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15644"">#15644</a>)</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/40e8e47123453e65f19c0d5eb2b6bc7bc8d5d49a""><code>40e8e47</code></a> [ci skip] Publish 4.0.10</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/b9bc3002b1ab89b9a1c4d2a3007c43275d11e0df""><code>b9bc300</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15386"">#15386</a>: Improve scrolling to heading (<a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15565"">#15565</a>)</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/3ce03317159234accec1987a890dffa10aef6ebd""><code>3ce0331</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15499"">#15499</a>: Adopt ruff format (<a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15564"">#15564</a>)</li>; <li><a href=""https://github.co",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14184:14085,guid,guide,14085,https://hail.is,https://github.com/hail-is/hail/pull/14184,1,['guid'],['guide']
Usability,"ement; TL;DR: `npm`; ```sh; npm init # creates a package.json file, which tracks dependencies; npm install next react react-dom # install 3 packages and save them to the dependencies property; ```. #### package.json; The file that tracks dependencies, and their semantic versioning numbers. Shape:; ```json; {; ""name"": ""hail-web-client"",; ""version"": ""0.2.0"",; ""scripts"": {; ""dev"": ""next"",; ""build"": ""next build"",; ""start"": ""NODE_ENV=production SSL=true next start""; },; ""author"": ""Hail Team"",; ""license"": ""MIT"",; ""dependencies"": {; ""next"": ""^7.0.2-canary.50"",; ""react"": ""^16.7.0"",; ""react-dom"": ""^16.7.0""; },; ""devDependencies"": {; }; }; ```; * Scripts are thing that can be run by typing, in shell `npm run`. Ex: `npm run dev`. ### Async, Await, Promises and callback (WIP); Javascript is async-first. This is most obvious in Node.js, which is the most popular library for server-side JS.; * [How event loop works](https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/); <img width=""765"" alt=""screen shot 2019-01-18 at 11 20 51 am"" src=""https://user-images.githubusercontent.com/5543229/51399094-1f999c00-1b13-11e9-8dfb-da8aa20807b0.png"">. * The event loop call stack: https://www.youtube.com/watch?v=8aGhZQkoFbQ. At a high level, a function that defines a callback will return immediately. The callback is pushed on to the event-loop stack, and on each tick, is checked to determine whether it has returned or not. Blocking operations within the callbacks will block the event loop. This is how CPU viruses, like blockchain manage to slow down web pages that are hijacked to include some mining script: hashing something 30 million times, takes a long time, and JS cannot do anything besides waiting for those operations to finish in a synchronous fashion. Luckily, asynchronous functions are the norm in the JS ecosystem, such that both in the browser, and nodejs, IO functions are (mostly?) asynchronous.; * For NodeJS: Transparently to the user, blocking operations (IO) are executed ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5162:3204,guid,guides,3204,https://hail.is,https://github.com/hail-is/hail/pull/5162,1,['guid'],['guides']
Usability,"emory parameters, but once we have some user feedback I'd like to consider re-implementing computeGramianLargeN to use BLAS3 outer product on blocks of (fewer than m) rows of the n x m matrix rather than inner product on all pairs of columns, which I think will boost speed and make it reasonable to kill the smallN routine entirely (the current largeN case benefits from dot product of sparse vectors when using hard calls, but that also goes away when we move to generic 0.2 and rip out the hardcall/dosage complexity). Then it will be natural for maxSize to control the number of rows in a block. - Added accuracy and iterations parameters to allow users to tune Davies, with R settings for Davies (1e-6, 10k) as default. This allows users to re-run groups with tiny p-values if desired to obtain greater accuracy. The R package runs additional p-value routines that may be faster when the p-value is very small, will keep in mind should this become an issue. - In remark above the Skat class, I've added an overview of how math in paper corresponds to implementation. - Simplified and re-organized the Skat class to cut down on the number and complexity of passed parameters and make the meaning of the code more transparent with respect to the overview. Killed the SkatModel class. - Fixed an oversight whereby the largeN route was never called by logistic. - Fixed a bug whereby a weight of null was passed to DoubleNumericConversion.to and then Option rather than the other way around to prevent null match exception. - Modified R test code to use Adjustment=False to avoid the small-sample adjustment made in the logistic case when running using than 2000 samples. I could then reduce the Balding-Nichols example from 2001 and 500 samples and run logistic on the smaller test set as well. - Further cleaned up the tests, and added a test of the size column and maxSize parameter. - More descriptive error message should Cholesky or inversion fail in logistic case. - Updated docs accordingly.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2248:1669,Simpl,Simplified,1669,https://hail.is,https://github.com/hail-is/hail/pull/2248,1,['Simpl'],['Simplified']
Usability,"encounter the error mentioned above. This code works:. ```python; import hail as hl. hail_table = 'gs://gcp-public-data--gnomad/release/3.1.1/ht/genomes/gnomad.genomes.v3.1.1.sites.ht'; chain_file = 'gs://hail-common/references/grch38_to_grch37.over.chain.gz'; ht = hl.read_table(hail_table).head(10_000). GRCh37 = hl.get_reference('GRCh37'); GRCh38 = hl.get_reference('GRCh38'); GRCh38.add_liftover(chain_file, GRCh37). hl.eval(hl.liftover(hl.locus('chr1', 1034245, 'GRCh38'), 'GRCh37')); # Locus(contig=1, position=969625, reference_genome=GRCh37); ```. However, when trying to lift over the entire table it fails:; ```; ht = ht.annotate(; locus_GRCh37 = hl.liftover(ht.locus, 'GRCh37'); ); ht.show(); ```. I got the same error when trying to lift over an older gnomAD version (2.1) from GRCh37 to GRCh38, which used to work according to my best knowledge. Also, this way of lifting over a hail table is following the recommended process on the documentation [here](https://hail.is/docs/0.2/guides/genetics.html?highlight=prs#liftover-variants-from-one-coordinate-system-to-another). I'm quite confident there must be something I'm doing wrong, but now I'm stuck, any help would be highly welcome. Thanks!. The code is running on a Google Cloud Dataproc cluster, Python 3.8, hail version: `'0.2.71-f3a54b530979'`. Error stack:; ```python; --------------------------------------------------------------------------- / 1]; FatalError Traceback (most recent call last); /opt/conda/miniconda3/lib/python3.8/site-packages/IPython/core/formatters.py in __call__(self, obj); 700 type_pprinters=self.type_printers,; 701 deferred_pprinters=self.deferred_printers); --> 702 printer.pretty(obj); 703 printer.flush(); 704 return stream.getvalue(). /opt/conda/miniconda3/lib/python3.8/site-packages/IPython/lib/pretty.py in pretty(self, obj); 392 if cls is not object \; 393 and callable(cls.__dict__.get('__repr__')):; --> 394 return _repr_pprint(obj, self, cycle); 395; 396 return _default_pprint(obj, self, c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/10682:1057,guid,guides,1057,https://hail.is,https://github.com/hail-is/hail/issues/10682,1,['guid'],['guides']
Usability,"endabot.com/dateutil/dateutil/issues/1025"">#1025</a>)</li>; <li>Changed some relative links in the exercise documentation to refer to the; document locations in the input tree, rather than the generated HTML files in; the HTML output tree (which presumably will not exist in non-HTML output; formats). (gh pr <a href=""https://github-redirect.dependabot.com/dateutil/dateutil/issues/1078"">#1078</a>).</li>; </ul>; <h2>Misc</h2>; <ul>; <li>Moved <code>test_imports.py</code>, <code>test_internals.py</code> and <code>test_utils.py</code> to; pytest. Reported and fixed by <a href=""https://github.com/jpurviance""><code>@​jpurviance</code></a> (gh pr <a href=""https://github-redirect.dependabot.com/dateutil/dateutil/issues/978"">#978</a>)</li>; <li>Added project_urls for documentation and source. Patch by <a href=""https://github.com/andriyor""><code>@​andriyor</code></a> (gh pr; <a href=""https://github-redirect.dependabot.com/dateutil/dateutil/issues/975"">#975</a>).</li>; <li>Simplified handling of bytes and bytearray in <code>_parser._timelex</code>. Reported; and fixed by <a href=""https://github.com/frenzymadness""><code>@​frenzymadness</code></a> (gh issue <a href=""https://github-redirect.dependabot.com/dateutil/dateutil/issues/1060"">#1060</a>).</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/dateutil/dateutil/commit/6b035517571e63b6a63a493740c5506ec1e5da44""><code>6b03551</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/dateutil/dateutil/issues/1143"">#1143</a> from mariocj89/pu/2.8.2</li>; <li><a href=""https://github.com/dateutil/dateutil/commit/cf44dd0c66827070cf9dd7b30f126b3ab2e110b5""><code>cf44dd0</code></a> Manual cleanup for 2.8.2 NEWS</li>; <li><a href=""https://github.com/dateutil/dateutil/commit/561167183d4cad190059975e5c0826e3587d3c97""><code>5611671</code></a> Automatic generation of NEWS entries for 2.8.2</li>; <li><a href=""",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11518:8560,Simpl,Simplified,8560,https://hail.is,https://github.com/hail-is/hail/pull/11518,1,['Simpl'],['Simplified']
Usability,"endabot.com/dateutil/dateutil/issues/1025"">#1025</a>)</li>; <li>Changed some relative links in the exercise documentation to refer to the; document locations in the input tree, rather than the generated HTML files in; the HTML output tree (which presumably will not exist in non-HTML output; formats). (gh pr <a href=""https://github-redirect.dependabot.com/dateutil/dateutil/issues/1078"">#1078</a>).</li>; </ul>; <h2>Misc</h2>; <ul>; <li>Moved <code>test_imports.py</code>, <code>test_internals.py</code> and <code>test_utils.py</code> to; pytest. Reported and fixed by <a href=""https://github.com/jpurviance""><code>@​jpurviance</code></a> (gh pr <a href=""https://github-redirect.dependabot.com/dateutil/dateutil/issues/978"">#978</a>)</li>; <li>Added project_urls for documentation and source. Patch by <a href=""https://github.com/andriyor""><code>@​andriyor</code></a> (gh pr; <a href=""https://github-redirect.dependabot.com/dateutil/dateutil/issues/975"">#975</a>).</li>; <li>Simplified handling of bytes and bytearray in <code>_parser._timelex</code>. Reported</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/dateutil/dateutil/blob/master/NEWS"">python-dateutil's changelog</a>.</em></p>; <blockquote>; <h1>Version 2.8.2 (2021-07-08)</h1>; <h2>Data updates</h2>; <ul>; <li>Updated tzdata version to 2021a. (gh pr <a href=""https://github-redirect.dependabot.com/dateutil/dateutil/issues/1128"">#1128</a>)</li>; </ul>; <h2>Bugfixes</h2>; <ul>; <li>Fixed a bug in the parser where non-<code>ValueError</code> exceptions would be raised; during exception handling; this would happen, for example, if an; <code>IllegalMonthError</code> was raised in <code>dateutil</code> code. Fixed by Mark Bailey.; (gh issue <a href=""https://github-redirect.dependabot.com/dateutil/dateutil/issues/981"">#981</a>, pr <a href=""https://github-redirect.dependabot.com/dateutil/dateutil/issues/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11518:4239,Simpl,Simplified,4239,https://hail.is,https://github.com/hail-is/hail/pull/11518,1,['Simpl'],['Simplified']
Usability,"ent.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhZGQ5ZWQxOC00MjJhLTRkZWUtYWI4Yy01MTkyYmQ4ZmYxMzIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImFkZDllZDE4LTQyMmEtNGRlZS1hYjhjLTUxOTJiZDhmZjEzMiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""add9ed18-422a-4dee-ab8c-5192bd8ff132"",""prPublicId"":""add9ed18-422a-4dee-ab8c-5192bd8ff132"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""protobuf"",""from"":""3.17.3"",""to"":""3.18.3""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""rsa"",""from"":""4.5"",""to"":""4.7""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""}],""packageManager"":""pip"",""projectPublicId"":""b72ce54d-5de3-48e5-a1d4-6f8967681a12"",""projectUrl"":""https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-PROTOBUF-3031740"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-RSA-1038401"",""SNYK-PYTHON-SETUPTOOLS-3180412""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,null,null,509],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13975:5033,Learn,Learn,5033,https://hail.is,https://github.com/hail-is/hail/pull/13975,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ents, except they expose `getInitialProps`, described above. Each page file must export 1 default component:. ```js; #Page file; import React from 'react';. const index = () => <div>Hello World</div>; export default index;; ```. There is nothing else to do to get routing to work, a quite nice solution. ### JS pragma; 1. `this` is different than in most (every?) other language. scope of this is bound to caller, not object containing the method; * Solution: use arrow functions. ```js; class Something {; constructor() {; this.bar = 'foo';; } ; //Do; onSubmit = () => {; console.log(this.bar) //prints foo; }. // Don't; onSubmitBad() {; console.log(this.bar) //may be undefined; }; }. const barrer = new Something();; console.info(""good"", barrer.onSubmit());; console.info(""bad"", barrer.onSubmitBad());; ```. # Tips . ### Client-side routing; Wrap a normal anchor tag in `<Link ></Link>`; ex:; ```jsx; <Link href='/path/to/page'><a>Page Name</a></Link>; ```. This simply adds the client-side routing logic, and passes the href to <a href=. . ### Prefetching; One of the neat things about Next is how easy it makes prefetching pages. This allows perceived page loading times on the order of 5ms, even when the page requires very complex state (say a GraphQL or series of REST calls with large responses). ```jsx; <Link href='/expensive-page' prefetch><a>Expensive Page</a></Link>; ```; ### Make your app do ONLY server-side routing; Meaning every time you click on a link in your page, you hit the server, just like the first visited page. . Simply use `<a>` directly. ### Caching and sidecar requests; Broadly, there are three strategies: browser caching, server caching, and service-worker caching. In this project we will likely use all three. Server caching is an excellent strategy for pages that serve only public data. In this strategy we pre-generate the static html, serve that, and invalidate the cache once in a while. An example of this can be found in https://github.com/hail-is/hail/pul",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5162:13554,simpl,simply,13554,https://hail.is,https://github.com/hail-is/hail/pull/5162,1,['simpl'],['simply']
Usability,"ependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1M2U3Mjk0MS01YmVjLTQ2MjYtYTY2Ny0wNzIxYjUwNjZlZjYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjUzZTcyOTQxLTViZWMtNDYyNi1hNjY3LTA3MjFiNTA2NmVmNiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""53e72941-5bec-4626-a667-0721b5066ef6"",""prPublicId"":""53e72941-5bec-4626-a667-0721b5066ef6"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.0""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[663,663],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14043:3987,Learn,Learn,3987,https://hail.is,https://github.com/hail-is/hail/pull/14043,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3M2M5M2ZlNi0yOWM3LTQ4MWMtYTBiYy1lMzFkYzc3N2QyODEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjczYzkzZmU2LTI5YzctNDgxYy1hMGJjLWUzMWRjNzc3ZDI4MSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""73c93fe6-29c7-481c-a0bc-e31dc777d281"",""prPublicId"":""73c93fe6-29c7-481c-a0bc-e31dc777d281"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[663,663],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14041:3872,Learn,Learn,3872,https://hail.is,https://github.com/hail-is/hail/pull/14041,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI4ZmFmZmYwNi1jOTI2LTQ5NjEtOTI4MC1iNGI0OTczNTg2MWMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjhmYWZmZjA2LWM5MjYtNDk2MS05MjgwLWI0YjQ5NzM1ODYxYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""8fafff06-c926-4961-9280-b4b49735861c"",""prPublicId"":""8fafff06-c926-4961-9280-b4b49735861c"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[663,663],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14038:3880,Learn,Learn,3880,https://hail.is,https://github.com/hail-is/hail/pull/14038,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI5NGM3N2YwYy0xN2JkLTRkMzQtYmJhOS1iNzBiNmVhMDllMjYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6Ijk0Yzc3ZjBjLTE3YmQtNGQzNC1iYmE5LWI3MGI2ZWEwOWUyNiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/0ba777e1-bc27-41cc-aefa-0ed1a253829e?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/0ba777e1-bc27-41cc-aefa-0ed1a253829e?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""94c77f0c-17bd-4d34-bba9-b70b6ea09e26"",""prPublicId"":""94c77f0c-17bd-4d34-bba9-b70b6ea09e26"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.0""}],""packageManager"":""pip"",""projectPublicId"":""0ba777e1-bc27-41cc-aefa-0ed1a253829e"",""projectUrl"":""https://app.snyk.io/org/danking/project/0ba777e1-bc27-41cc-aefa-0ed1a253829e?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[663,663],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14039:3807,Learn,Learn,3807,https://hail.is,https://github.com/hail-is/hail/pull/14039,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxZjc1YjVmNi00MjFkLTQyN2YtYTk3OC0yNTBhNTgyNTI4YmUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjFmNzViNWY2LTQyMWQtNDI3Zi1hOTc4LTI1MGE1ODI1MjhiZSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/cbac91bd-aa95-4900-9a06-97404b268d6e?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/cbac91bd-aa95-4900-9a06-97404b268d6e?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""1f75b5f6-421d-427f-a978-250a582528be"",""prPublicId"":""1f75b5f6-421d-427f-a978-250a582528be"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.0""}],""packageManager"":""pip"",""projectPublicId"":""cbac91bd-aa95-4900-9a06-97404b268d6e"",""projectUrl"":""https://app.snyk.io/org/danking/project/cbac91bd-aa95-4900-9a06-97404b268d6e?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[663,663],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14035:3801,Learn,Learn,3801,https://hail.is,https://github.com/hail-is/hail/pull/14035,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzMjkzZGUwOS01NmJjLTRkNWEtYWNkZC1iMzdlMDBkMzkwOTgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjMyOTNkZTA5LTU2YmMtNGQ1YS1hY2RkLWIzN2UwMGQzOTA5OCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""3293de09-56bc-4d5a-acdd-b37e00d39098"",""prPublicId"":""3293de09-56bc-4d5a-acdd-b37e00d39098"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.0""}],""packageManager"":""pip"",""projectPublicId"":""b72ce54d-5de3-48e5-a1d4-6f8967681a12"",""projectUrl"":""https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[663,663],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14034:3755,Learn,Learn,3755,https://hail.is,https://github.com/hail-is/hail/pull/14034,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzODVlZjFmNi0zYjJhLTRjZTEtOTA5MS0xMWM1YzU3NDY0OTIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjM4NWVmMWY2LTNiMmEtNGNlMS05MDkxLTExYzVjNTc0NjQ5MiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/92d13c88-936f-40d3-b692-29e637c1a00c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/92d13c88-936f-40d3-b692-29e637c1a00c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""385ef1f6-3b2a-4ce1-9091-11c5c5746492"",""prPublicId"":""385ef1f6-3b2a-4ce1-9091-11c5c5746492"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.0""}],""packageManager"":""pip"",""projectPublicId"":""92d13c88-936f-40d3-b692-29e637c1a00c"",""projectUrl"":""https://app.snyk.io/org/danking/project/92d13c88-936f-40d3-b692-29e637c1a00c?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[663,663],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14044:3732,Learn,Learn,3732,https://hail.is,https://github.com/hail-is/hail/pull/14044,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhNGNiNTQzMi0zM2VmLTQ3ZmQtYmYzMy1lZGU2YzJlNDJiOTAiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImE0Y2I1NDMyLTMzZWYtNDdmZC1iZjMzLWVkZTZjMmU0MmI5MCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""a4cb5432-33ef-47fd-bf33-ede6c2e42b90"",""prPublicId"":""a4cb5432-33ef-47fd-bf33-ede6c2e42b90"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.0""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[663,663],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14042:4008,Learn,Learn,4008,https://hail.is,https://github.com/hail-is/hail/pull/14042,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlNDEzMjhlZS0zNDg5LTQ3NDItYTc3YS01ZDZhNTQ1ZWE2ZjIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImU0MTMyOGVlLTM0ODktNDc0Mi1hNzdhLTVkNmE1NDVlYTZmMiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fdd23464-9a67-49b8-8d9c-08502282c5fb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fdd23464-9a67-49b8-8d9c-08502282c5fb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""e41328ee-3489-4742-a77a-5d6a545ea6f2"",""prPublicId"":""e41328ee-3489-4742-a77a-5d6a545ea6f2"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.0""}],""packageManager"":""pip"",""projectPublicId"":""fdd23464-9a67-49b8-8d9c-08502282c5fb"",""projectUrl"":""https://app.snyk.io/org/danking/project/fdd23464-9a67-49b8-8d9c-08502282c5fb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[663,663],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14037:3741,Learn,Learn,3741,https://hail.is,https://github.com/hail-is/hail/pull/14037,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"equire_sphinx</code> now allows the version; requirement to be specified as <code>(major, minor)</code>.</li>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11011"">#11011</a>: Allow configuring a line-length limit for object signatures, via; :confval:<code>maximum_signature_line_length</code> and the domain-specific variants.; If the length of the signature (in characters) is greater than the configured; limit, each parameter in the signature will be split to its own logical line.; This behaviour may also be controlled by options on object description; directives, for example :rst:dir:<code>py:function:single-line-parameter-list</code>.; Patch by Thomas Louf, Adam Turner, and Jean-François B.</li>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/10983"">#10983</a>: Support for multiline copyright statements in the footer block.; Patch by Stefanie Molin</li>; <li><code>sphinx.util.display.status_iterator</code> now clears the current line; with ANSI control codes, rather than overprinting with space characters.</li>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11431"">#11431</a>: linkcheck: Treat SSL failures as broken links.; Patch by Bénédikt Tran</li>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11157"">#11157</a>: Keep the <code>translated</code> attribute on translated nodes.</li>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11451"">#11451</a>: Improve the traceback displayed when using :option:<code>sphinx-build -T</code>; in parallel builds. Patch by Bénédikt Tran</li>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11324"">#11324</a>: linkcheck: Use session-basd HTTP requests.</li>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11438"">#11438</a>: Add support for the :rst:dir:<code>py:class</code> and :rst:dir:<code>py:function</code>; directives for PEP 695 (generic classes and functions declarations) and; PEP 696 (default ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13295:3116,clear,clears,3116,https://hail.is,https://github.com/hail-is/hail/pull/13295,1,['clear'],['clears']
Usability,"er of rows and the billing is within $0.001 per job with the old way and new way of computing the billing. The tolerance of $0.001 was empirically determined. At a threshold of $0.0001, 33/30,000,000 attempts failed. I think this is good enough as there's always going to be rounding errors. I did not do an explicit audit in the code to make sure the other aggregated_*_resources tables did not change. I spot checked this was correct in my test database. To do the complete audit during the actual migration would take more time. I made sure all the inserts were idempotent. Please double check this. The inserts use a temporary table with an isolation level of read committed. The reason for this is because `INSERT INTO ... SELECT` locks the next gap lock if the isolation level is not read committed. Maybe what I did is overkill and it's no longer a problem with the new burn in period. https://dev.mysql.com/doc/refman/8.0/en/innodb-locks-set.html I'd be interested to hear @danking feedback on what the best query here is to allow parallelism. There are ~30 million attempts that need to be processed for hail-vdc (~60% of the attempts). This will add ~20Gi to the existing database. I use 4 cores to get this migration to be ~3 hours, so we will want to **upgrade the database to 8 cores** while this migration is running. The inserting takes about 2 hours and the audit is 45 minutes or so. For the Australians, I think this script should be a no-op because I believe they started their instance after the billing changes went in around May/June 2020. The main thing to look out for is whether I got the interval queries correct! For example:. ```python3; where_cond = 'WHERE (attempts.batch_id > %s OR ' \; '(attempts.batch_id = %s AND attempts.job_id > %s) OR ' \; '(attempts.batch_id = %s AND attempts.job_id = %s AND attempts.attempt_id >= %s)) ' \; 'AND (attempts.batch_id < %s OR ' \; '(attempts.batch_id = %s AND attempts.job_id < %s) OR ' \; '(attempts.batch_id = %s AND attempts.job",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11990:2742,feedback,feedback,2742,https://hail.is,https://github.com/hail-is/hail/pull/11990,1,['feedback'],['feedback']
Usability,"er.max=1g,spark:spark.driver.extraJavaOptions=-Xss4M,spark:spark.executor.extraJavaOptions=-Xss4M,hdfs:dfs.replication=1,dataproc:dataproc.logging.stackdriver.enable=false,dataproc:dataproc.monitoring.stackdriver.enable=false,spark:spark.driver.memory=41g', '--initialization-actions=gs://hail-common/hailctl/dataproc/0.2.18/init_notebook.py,gs://gnomad-public/tools/inits/master-init.sh', '--metadata=^|||^WHEEL=gs://hail-common/hailctl/dataproc/0.2.18/hail-0.2.18-py3-none-any.whl|||PKGS=aiohttp|bokeh>1.1,<1.3|decorator<5|gcsfs==0.2.1|hurry.filesize==0.9|ipykernel<5|nest_asyncio|numpy<2|pandas>0.22,<0.24|parsimonious<0.9|PyJWT|python-json-logger==0.1.11|requests>=2.21.0,<2.21.1|scipy>1.2,<1.4|tabulate==0.8.3|slackclient==2.0.0|websocket-client|sklearn|tabulate|statsmodels|scikit-learn|hdbscan|matplotlib', '--master-machine-type=n1-highmem-8', '--master-boot-disk-size=100GB', '--num-master-local-ssds=0', '--num-preemptible-workers=0', '--num-worker-local-ssds=0', '--num-workers=2', '--preemptible-worker-boot-disk-size=40GB', '--worker-boot-disk-size=40', '--worker-machine-type=n1-standard-8', '--zone=us-central1-b', '--initialization-action-timeout=20m', '--labels=creator=weisburd_broadinstitute_org', '--max-idle=12h']' returned non-zero exit status 1.; ```. Then looking at the error log; ```; $ gsutil cat gs://dataproc-d919bddb-bde3-4138-bbe1-e068dfa1e550-us/google-cloud-dataproc-metainfo/3ec45dcc-d901-4777-930c-23046e64a97d/bw2-m/dataproc-initialization-script-0_output; pip packages are ['setuptools', 'mkl<2020', 'ipywidgets<8', 'jupyter_console<5', 'nbconvert<6', 'notebook<6', 'qtconsole<5', 'jupyter', 'tornado<6', 'lxml<5', 'google-cloud==0.32.0', 'ipython<7', 'jgscm<0.2', 'jupyter-spark', 'aiohttp', 'bokeh>1.1,<1.3', 'decorator<5', 'gcsfs==0.2.1', 'hurry.filesize==0.9', 'ipykernel<5', 'nest_asyncio', 'numpy<2', 'pandas>0.22,<0.24', 'parsimonious<0.9', 'PyJWT', 'python-json-logger==0.1.11', 'requests>=2.21.0,<2.21.1', 'scipy>1.2,<1.4', 'tabulate==0.8.3', 'slackclien",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6634:4332,learn,learn,4332,https://hail.is,https://github.com/hail-is/hail/issues/6634,1,['learn'],['learn']
Usability,"erToDiskThenUpload BlobWriteSessionConfig (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2139"">#2139</a>) (<a href=""https://github.com/googleapis/java-storage/commit/4dad2d5c3a81eda7190ad4f95316471e7fa30f66"">4dad2d5</a>)</li>; <li>Introduce new BlobWriteSession (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2123"">#2123</a>) (<a href=""https://github.com/googleapis/java-storage/commit/e0191b518e50a49fae0691894b50f0c5f33fc6af"">e0191b5</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/googleapis/java-storage/commit/cc6503155201c0aae6d79517a91712c834689ce5""><code>cc65031</code></a> chore(main): release 2.27.0 (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2167"">#2167</a>)</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/8880d94c3d1a737dd4492cf66a16ba5e08633a70""><code>8880d94</code></a> feat: add new JournalingBlobWriteSessionConfig usable with gRPC transport (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2"">#2</a>...</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/1fa49db2810f6ffbd46755b4eb1f5efdcf980edb""><code>1fa49db</code></a> deps: update dependency com.google.apis:google-api-services-storage to v1-rev...</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/5e76f1963db18c9d081133755b5572e186cd1b34""><code>5e76f19</code></a> chore: Update the Java code generator (gapic-generator-java) to 2.25.0 (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2198"">#2198</a>)</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/26552f4b78f77d90df4e3dfb829c3f9c092fc817""><code>26552f4</code></a> deps: update dependency com.google.cloud:google-cloud-shared-dependencies to ...</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/bffb397730d39f4c1c9f8fa80e316a26c39534ce""><code>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13624:13003,usab,usable,13003,https://hail.is,https://github.com/hail-is/hail/pull/13624,1,['usab'],['usable']
Usability,"er_cols((mt.s == 'V33335') | (mt.s == 'NWD157935')); mt = mt.annotate_rows(__n = hl.agg.count_where(hl.is_defined(mt.GT))); mt = mt.filter_rows(mt.__n > 0). print(; mt.count()). def show_mt(mt):; entry_fields = ['GT']; if 'END' in mt.entry:; entry_fields.append('END'); (mt.select_rows(); .select_entries(*entry_fields); ._localize_entries('__entries', '__cols'); .show()). show_mt(mt). mt = hl.experimental.densify(mt); show_mt(mt). mt.describe(); ```. which produces sparse and dense samples:. ```; +----------------+-------------------------------------+; | locus | __entries |; +----------------+-------------------------------------+; | locus<GRCh38> | array<struct{GT: call, END: int32}> |; +----------------+-------------------------------------+; | chr22:10510746 | [NA,(0/0,10510769)] |; | chr22:10510770 | [NA,(1/1,NA)] |; | chr22:10510771 | [NA,(0/0,10510891)] |; | chr22:10511207 | [NA,(0/0,10511390)] |; | chr22:10511272 | [(0/0,10511390),NA] |; | chr22:10511391 | [NA,(1/1,NA)] |; | chr22:10511392 | [(0/0,10511393),(0/0,10511477)] |; | chr22:10511397 | [(0/0,10511403),NA] |; | chr22:10511406 | [(0/0,10511418),NA] |; | chr22:10511420 | [(0/0,10511420),NA] |; +----------------+-------------------------------------+; showing top 10 rows. +----------------+-------------------------+; | locus | __entries |; +----------------+-------------------------+; | locus<GRCh38> | array<struct{GT: call}> |; +----------------+-------------------------+; | chr22:10510746 | [NA,(0/0)] |; | chr22:10510770 | [NA,(1/1)] |; | chr22:10510771 | [NA,(0/0)] |; | chr22:10511207 | [NA,(0/0)] |; | chr22:10511272 | [(0/0),(0/0)] |; | chr22:10511391 | [NA,(1/1)] |; | chr22:10511392 | [(0/0),(0/0)] |; | chr22:10511397 | [(0/0),(0/0)] |; | chr22:10511406 | [(0/0),(0/0)] |; | chr22:10511420 | [(0/0),(0/0)] |; +----------------+-------------------------+; ```. Thanks to @tpoterba for the totally sick `array_agg`. It's crazy how simple this was. (Unfortunately, it won't be so simple to make it go fast.)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5281:2354,simpl,simple,2354,https://hail.is,https://github.com/hail-is/hail/pull/5281,2,['simpl'],['simple']
Usability,"ery helpful. A formatted document is represented by the `Doc` type. This defines a `render` method, which takes three parameters to control the output:; * `width`: the maximum length of a line, including indentation; * `ribbonLength`: the maximum length of a line, not including indentation (too many characters on a line is hard to read, regardless of indentation); * `maxLines`: the maximum number of lines to print. There are only a few `Doc` constructors, which suffice to define all methods in the richer api contained in the `prettyPrint` package object.; * `Text(t: String)`; * `Line(ifFlat: String)`; * `Indent(i: Int, body: Doc)`; * `Concat(it: Iterable[Doc])`; * `Group(body: Doc)`. Ignoring `Group` for the moment, the first four constructors define formatted documents with only one possible layout, regardless of `width` or `ribbonLength`. `Text` simply prints the string `t`; `Line` prints a newline, followed by the current level of indentation (`ifFlat` is explained when we discuss `Group`); `Indent` increases the indentation of all `Line`s contained in `body` by `i`; and `Concat` simply prints all documents in `it` sequentially. `Group` is the sole source of alternatives which `render` must choose between. `Group(body)` can be rendered in one of two ways:; * replace all `Line`s contained in `body` (including in nested `Group`s) by their `ifFlat` alternative (almost always either "" "" or """"), or, if that would cause the line to exceed `width`; * print `body` normally, as described in the previous paragraph, allowing nested `Group`s to print either flat or normally. This pretty-printer DSL has become fairly standard, with some common enhancements that I don't think we need. It was first described in [A prettier printer](https://homepages.inf.ed.ac.uk/wadler/papers/prettier/prettier.pdf) by Wadler (though my implementation is completely different). This achieves stack safety by `Concat` taking an `Iterable`, so each contained `Doc` can be produced on demand. `render` ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9652:2133,simpl,simply,2133,https://hail.is,https://github.com/hail-is/hail/pull/9652,2,['simpl'],['simply']
Usability,"es of join. Some of the join methods take `OrderingView` arguments. An `OrderingView` is a small abstraction on top of an `Ordering` which can take one element `a`, copy data (such as key-fields) from `a` if necessary, then later (after `a` might have been destroyed or mutated) compare `a` to other elements using the copied data. The potentially producting (non-distinct assuming) join methods also take a buffer argument, which is anything that can make a copy of an iterator and then iterate over the copy multiple times. To avoid allocating tuples in the output iterators of the join methods, I made `Muple`, which is just a mutable tuple. I turned the existing `JoinedRegionValue` into an alias of `Muple[RegionValue, RegionValue]`. All of this core `FlipbookIterator` and `StagingIterator` behavior has no dependencies on anything else in Hail, so I want to thoroughly test everything at this level, and treat it like a small external iterator library living inside the repo. As such, I think this level should be quite stable going forwards. At the higher level, I lifted all the join methods on `FlipbookIterator` to `OrderedRVIterator`, which is a `Iterator[RegionValue]` together with an `OrderedRVDType`. I think `OrderedRVIterator` should be replaced by something better soon: see future work below. I've replaced the old implementations of `innerJoinDistinct`, `leftJoinDistinct`, and `orderedZipJoin` using the new infrastructure (see OrderedRDD2.scala), which I think is a good example of the kind of simplifications possible. The existing JoinSuite tests also serve as a secondary test of the new code. In future PRs, I intend to:. * Implement all the join varieties on `OrderedRVD` using the `FlipbookIterator` joins defined here.; * Update other uses of `Iterator` to use the `FlipbookIterator` infrastructure, if doing so improves the code (and I expect it will, or I've done something wrong); * Beef up the `FlipbookIterator` test suite. I could do that for this PR if requested.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3016:5104,simpl,simplifications,5104,https://hail.is,https://github.com/hail-is/hail/pull/3016,1,['simpl'],['simplifications']
Usability,es$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); a,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7619,Simpl,Simplify,7619,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,"existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlYjc2ODRiYy00Njg4LTQ4ODktOTQyOS0xY2M4M2JhNzJmMDAiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImViNzY4NGJjLTQ2ODgtNDg4OS05NDI5LTFjYzgzYmE3MmYwMCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/0ba777e1-bc27-41cc-aefa-0ed1a253829e?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/0ba777e1-bc27-41cc-aefa-0ed1a253829e?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""eb7684bc-4688-4889-9429-1cc83ba72f00"",""prPublicId"":""eb7684bc-4688-4889-9429-1cc83ba72f00"",""dependencies"":[{""name"":""orjson"",""from"":""3.9.7"",""to"":""3.9.15""}],""packageManager"":""pip"",""projectPublicId"":""0ba777e1-bc27-41cc-aefa-0ed1a253829e"",""projectUrl"":""https://app.snyk.io/org/danking/project/0ba777e1-bc27-41cc-aefa-0ed1a253829e?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-ORJSON-6276643""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title""],""priorityScoreList"":[null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Relative Path Traversal](https://learn.snyk.io/lesson/directory-traversal/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14355:2899,Learn,Learn,2899,https://hail.is,https://github.com/hail-is/hail/pull/14355,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.exp,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7635,Simpl,Simplify,7635,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,ext.java:343); 	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293); 	io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267); 	; 	The currently active SparkContext was created at:; 	; 	org.apache.spark.SparkContext.getOrCreate(SparkContext.scala); 	sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	java.lang.reflect.Method.invoke(Method.java:498); 	sparklyr.Invoke.invoke(invoke.scala:139); 	sparklyr.StreamHandler.handleMethodCall(stream.scala:123); 	sparklyr.StreamHandler.read(stream.scala:66); 	sparklyr.BackendHandler.channelRead0(handler.scala:51); 	sparklyr.BackendHandler.channelRead0(handler.scala:4); 	io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343); 	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343); 	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293); 	io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267); 	; 	at org.apache.sp,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4513:9174,Simpl,SimpleChannelInboundHandler,9174,https://hail.is,https://github.com/hail-is/hail/issues/4513,1,['Simpl'],['SimpleChannelInboundHandler']
Usability,"extmanager</code> were one-shot,; as discovered by Alex Pizarro.</li>; <li><code>decorator.decorator</code> was not passing the kwsyntax argument.</li>; </ul>; <h2>5.0.9 (2021-05-16)</h2>; <p>Fixed a test breaking PyPy. Restored support for Sphinx.</p>; <h2>5.0.8 (2021-05-15)</h2>; <p>Made the decorator module more robust when decorating builtin functions; lacking dunder attributes, like <code>dict.__setitem__</code>.</p>; <h2>5.0.7 (2021-04-14)</h2>; <p>The decorator module was not passing correctly the defaults inside the; <code>*args</code> tuple, thanks to Dan Shult for the fix. Also fixed some mispellings; in the documentation and integrated codespell in the CI, thanks to; Christian Clauss.</p>; <h2>5.0.6 (2021-04-08)</h2>; <p>The decorator module was not copying the <strong>module</strong> attribute anymore.; Thanks to Nikolay Markov for the notice.</p>; <h2>5.0.5 (2021-04-04)</h2>; <p>Dropped support for Python &lt; 3.5 with a substantial simplification of; the code base (now building a decorator does not require calling &quot;exec&quot;).; Added a way to mimic functools.wraps-generated decorators.; Ported the Continuous Integration from Travis to GitHub.</p>; <h2>4.4.2 (2020-02-29)</h2>; <p>Sylvan Mosberger (<a href=""https://github.com/Infinisil"">https://github.com/Infinisil</a>) contributed a patch to; some doctests that were breaking on NixOS.; John Vandenberg (<a href=""https://github.com/jayvdb"">https://github.com/jayvdb</a>) made a case for removing the usage</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/micheles/decorator/commit/ad013a2c1ad7969963acf3dea948632be387f5a0""><code>ad013a2</code></a> Updated changelog and bumped version to 5.1.1</li>; <li><a href=""https://github.com/micheles/decorator/commit/5a2023203948ff297cc2e482aa66f84d75d1d1f8""><code>5a20232</code></a> Fixed implementation of decorator_apply</li>; <li><a href=""https://github.c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11490:1974,simpl,simplification,1974,https://hail.is,https://github.com/hail-is/hail/pull/11490,1,['simpl'],['simplification']
Usability,"extmanager</code> were one-shot,; as discovered by Alex Pizarro.</li>; <li><code>decorator.decorator</code> was not passing the kwsyntax argument.</li>; </ul>; <h2>5.0.9 (2021-05-16)</h2>; <p>Fixed a test breaking PyPy. Restored support for Sphinx.</p>; <h2>5.0.8 (2021-05-15)</h2>; <p>Made the decorator module more robust when decorating builtin functions; lacking dunder attributes, like <code>dict.__setitem__</code>.</p>; <h2>5.0.7 (2021-04-14)</h2>; <p>The decorator module was not passing correctly the defaults inside the; <code>*args</code> tuple, thanks to Dan Shult for the fix. Also fixed some mispellings; in the documentation and integrated codespell in the CI, thanks to; Christian Clauss.</p>; <h2>5.0.6 (2021-04-08)</h2>; <p>The decorator module was not copying the <strong>module</strong> attribute anymore.; Thanks to Nikolay Markov for the notice.</p>; <h2>5.0.5 (2021-04-04)</h2>; <p>Dropped support for Python &lt; 3.5 with a substantial simplification of; the code base (now building a decorator does not require calling &quot;exec&quot;).; Added a way to mimic functools.wraps-generated decorators.; Ported the Continuous Integration from Travis to GitHub.</p>; <h2>4.4.2 (2020-02-29)</h2>; <p>Sylvan Mosberger (<a href=""https://github.com/Infinisil"">https://github.com/Infinisil</a>) contributed a patch to; some doctests that were breaking on NixOS.; John Vandenberg (<a href=""https://github.com/jayvdb"">https://github.com/jayvdb</a>) made a case for removing the usage</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/micheles/decorator/commits/5.1.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=decorator&package-manager=pip&previous-version=4.4.0&new-version=5.1.1)](https://docs.github.com/en/github/managing-security-v",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11799:1943,simpl,simplification,1943,https://hail.is,https://github.com/hail-is/hail/pull/11799,1,['simpl'],['simplification']
Usability,feedback on generic VEP,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2460:0,feedback,feedback,0,https://hail.is,https://github.com/hail-is/hail/pull/2460,2,['feedback'],['feedback']
Usability,"fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d64676f6c647374652d7374616e64617264; asc batch-worker-dgoldste-standard; (total 36 bytes);; 1: len 6; hex 00000025f0ee; asc % ;;; 2: len 7; hex 01000000a90a9b; asc ;;; 3: len 4; hex 80000fa0; asc ;;. *** (1) WAITING FOR THIS LOCK TO BE GRANTED:; RECORD LOCKS space id 376 page no 8 n bits 408 index PRIMARY of table `dgoldste-batch`.`aggregated_billing_project_user_resources_v3` trx id 2486515 lock_mode X locks rec but not gap waiting; Record lock, heap no 228 PHYSICAL RECORD: n_fields 7; compact format; info bits 0; 0: len 4; hex 74657374; asc test;;; 1: len 8; hex 64676f6c64737465; asc dgoldste;;; 2: len 4; hex 80000009; asc ;;; 3: len 4; hex 80000034; asc 4;;; 4: len 6; hex 00000025f0cd; asc % ;;; 5: len 7; hex 810000021b01cd; asc ;;; 6: len 8; hex 80000000001b09e0; asc ;;. *** (2) TRANSACTION:; TRANSACTION 2486477, ACTIVE 0 sec starting index read; mysql tables in use 27, locked 27; LOCK WAIT 47 lock struct(s), heap size 8312, 215 row lock(s), undo log entries 211; MySQL thread id 682, OS thread handle 140330866251520, query id 4746389 10.32.3.39 dgoldste-batch-user executing; INSERT INTO aggregated_job_group_resources_v3 (batch_id, job_group_id, resource_id, token, `usage`); SELECT attempt_resources.batch_id,; job_group_self_and_ancestors.ancestor_id,; attempt_resources.deduped_resource_id,; NAME_CONST('rand_token',189),; NAME_CONST('msec_diff_rollup',1671) * quantity; FROM attempt_resources; LEFT JOIN jobs ON attempt_resources.batch_id = jobs.batch_id AND attempt_resources.job_id = jobs.job_id; LEFT JOIN job_group_self_and_ancestors ON jobs.batch_id = job_group_self_and_ancestors.batch_id AND jobs.job_group_id = job_group_self_and_ancestors.job_group_id; WHERE attempt_resources.batch_id = NEW.batch_id AND attempt_resources.job_id = NEW.job_id AND attempt_resources.attempt_id = NEW.attempt_id; FOR UPDATE; ON DUPLICATE KEY UPDATE `usage` = aggregated_job_group_resources_v3.`usage` + NAM",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14380:2881,undo,undo,2881,https://hail.is,https://github.com/hail-is/hail/issues/14380,1,['undo'],['undo']
Usability,fix not clearing per item,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3509:8,clear,clearing,8,https://hail.is,https://github.com/hail-is/hail/pull/3509,2,['clear'],['clearing']
Usability,"fixes #13407. CHANGELOG: Resolves #13407 in which uses of `union_rows` could reduce parallelism to one partition resulting in severely degraded performance. TableUnion was always collapsing to a single partition when the key was empty. This adds a special case handling, which just concatenates partitions. The body of the resulting TableStage is a little hacky: it does a StreamMultiMerge, but where exactly one input stream is non-empty. I think that should have fine performance, and I didn’t see any simpler ways to do it.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13414:504,simpl,simpler,504,https://hail.is,https://github.com/hail-is/hail/pull/13414,1,['simpl'],['simpler']
Usability,flesh out SparkBackend and add some simple tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5127:36,simpl,simple,36,https://hail.is,https://github.com/hail-is/hail/pull/5127,2,['simpl'],['simple']
Usability,"fy JS logic based on new JSON structure.; - Check-in and implement versioned deployment of the annotation db configuration JSON.; - Add a JS file to the website that defines `hail_version` and `hail_pip_version`.; - Add `key_properties` which currently supports two properties `gene` and `unique`. Gene keyed datasets require using the `gencode` dataset to crosswalk from locus to gene before joining.; - Rudimentary test of key properties functionality. Foundational Changes Outside Annotation DB:; - Define `__pip_version__` in `hail`.; - Teach `StructExpression` and `TupleExpression` how to slice by integers, facilitating the construction of structs of a prefix of fields.; - Make `ttuple` a mapping from integers to the tuple elements.; - Implement `Table._maybe_flexindex_table_by_expr` which, given a indexer expression, finds a prefix of the expression that can index the indexee, if such an expression exists. Unrelated changes:; - Clarify Makefile error echos with `ERROR:`. ---. ## flexindex. The primary use case for this is a dataset which is `locus, allele` keyed and needs to index into a `locus` keyed or `interval<locus>` keyed dataset. Hail's normal join logic will return a key mismatch error:. ```python; import hail as hl; t = hl.utils.range_table(10); t2 = t.key_by(x=t.idx, y=t.idx); t.index(t2.key); ```; ```; Traceback (most recent call last):; File ""<ipython-input-6-3ddc90774dfe>"", line 1, in <module>; t.index(t2.key); File ""/usr/local/lib/python3.7/site-packages/hail/table.py"", line 1536, in index; raise ExpressionException(f""Key type mismatch: cannot index table with given expressions:\n""; ExpressionException: Key type mismatch: cannot index table with given expressions:; Table key: int32; Index Expressions: int32, int32; ```. This new, private, method facilitates the annotation db which users expect to automatically find a compatible prefix of the key to use as an indexer. ---. Dice came up @chrisvittal, but I'm curious to hear @tpoterba 's feedback as well.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7178:2545,feedback,feedback,2545,https://hail.is,https://github.com/hail-is/hail/pull/7178,1,['feedback'],['feedback']
Usability,"ge:. ```; Traceback (most recent call last):; File ""…/borkscript.py"", line 8, in <module>; my_job, my_output = make_job(batch); File ""…/site-packages/hailtop/batch/job.py"", line 125, in __getitem__; return self._get_resource(item); File ""…/site-packages/hailtop/batch/job.py"", line 118, in _get_resource; r = self._batch._new_job_resource_file(self, value=item); File ""…/site-packages/hailtop/batch/batch.py"", line 405, in _new_job_resource_file; jrf = _resource.JobResourceFile(value, source); File ""…/site-packages/hailtop/batch/resource.py"", line 128, in __init__; super().__init__(value); File ""…/site-packages/hailtop/batch/resource.py"", line 48, in __init__; assert value is None or isinstance(value, str); AssertionError; ```. Of course, in a 400-line script it took a long while to figure out what the traceback that seemed to have little to do with any dubious code of ours was trying to tell us, and to notice that the actual problem was the `return` 200 lines away!. The problem is that these classes define `__getitem__()` so their resources can be accessed as if via a dict. The assignment into multiple variables causes Python to try to interpret the RHS as something iterable, and as `__getitem__` is defined, it will use `__getitem__(0)`, `__getitem__(1)`,... to implement that iteration. These classes are not really iterable, so define a no-op `__iter__()` to prevent this. With this, we get:. ```; Traceback (most recent call last):; File ""…/borkscript.py"", line 8, in <module>; my_job, my_output = make_job(batch); File ""…/site-packages/hailtop/batch/job.py"", line 127, in __iter__; raise TypeError(f'{type(self).__name__!r} object is not iterable'); TypeError: 'BashJob' object is not iterable; ```. Which, while still not pointing directly at the problem, is much clearer. Especially for ResourceGroup, it may be worth defining iteration for these classes in future. But at the moment `__getitem__`-based iteration fails, so this ensures it fails with a clear TypeError message.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14390:2118,clear,clearer,2118,https://hail.is,https://github.com/hail-is/hail/pull/14390,2,['clear'],"['clear', 'clearer']"
Usability,"github.com/grantjenks/python-sortedcontainers/commit/a1f52d6713dd2c2713a881d4f4d86ed68ff71cab""><code>a1f52d6</code></a> Bump version to 2.4.0</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/2678a78b6dacbe2352bff7876a26759d84971dac""><code>2678a78</code></a> Implement SortedDict methods: <strong>or</strong>, <strong>ror</strong>, and <strong>ior</strong> (<a href=""https://github-redirect.dependabot.com/grantjenks/python-sortedcontainers/issues/171"">#171</a>)</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/9887989b21fc21fe572e0b4c30a3f3aa1eabbdca""><code>9887989</code></a> Bump version to 2.3.0</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/da6d0d034822f66966e4a84a3a1e2f37cc83e3b0""><code>da6d0d0</code></a> Remove unneeded &quot;update order&quot; consistency test</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/e85d8659733cb3e28d539a28db0fdd71672ab2e4""><code>e85d865</code></a> Simplify &quot;update order&quot; consistency test</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/7dc426c95a0c329d5514e6198d92080f1ffc1e5e""><code>7dc426c</code></a> Fix update() ordering to be more consistent with add() ordering (<a href=""https://github-redirect.dependabot.com/grantjenks/python-sortedcontainers/issues/159"">#159</a>)</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/13d30bc654eb9e6be092282ca502967fcb7f0113""><code>13d30bc</code></a> Bump version to 2.2.2</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/4997d0e849f2275d1931772a5432163ecc20e0b0""><code>4997d0e</code></a> Refactor small slice optimization in SortedList.<strong>getitem</strong></li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/6ee5d57fc8d691fbab4972b853a60348d0f922ef""><code>6ee5d57</code></a> improve SortedList.<strong>getitem</strong>() performance for small slices</li>; <",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11476:2312,Simpl,Simplify,2312,https://hail.is,https://github.com/hail-is/hail/pull/11476,1,['Simpl'],['Simplify']
Usability,"give each loop a name so that `Recur` unambiguously refers to a loop defined in the surrounding scope, mostly treating `Recur` as something of a function reference.; * The code generation is rather inconsistent, since the `Recur` node technically has the same type as the return type of the function, but the code generated needs to be a jump node with no actual value (which makes the generated EmitTriplet look a lot like it has type TVoid!); * @patrick-schultz proposed a similar design, but with two additional types to make the difference between the type of the `Recur` concept and the actual return type more explicit. I have not yet implemented it because I think it might make this python interface more difficult to support, and I rather like its simplicity.; * @patrick-schultz and I were talking about rewriting loops in the stream interface.; * We can only emit calls to recur in the same method that the original loop is defined in, because we are using jumps to implement them. This means we need to know that we are not going to wrap any calls that contain `Recur` in a method. I don't believe there are any cases where we wrap `If` conditions or `Let` bodies in methods, so this is fine for now, but we're not enforcing it in any way. I believe that the iteration for the stream codegen stuff will always be in the same method, so we wouldn't have to deal with this specially there.; * I've implemented a pretty simple version of here, as part of the `Streamify` pass. I believe it should handle all the valid tail-recursive cases, but I don't think we want to use it right now since it'll always allocate (as opposed to not allocating if all state is primitive). We could potentially revisit this once we can allow stream elements like this to basically store their elements in primitive fields, if that prevents allocation. You can take a look here: https://github.com/catoverdrive/hail/compare/loops...catoverdrive:loops-as-stream?expand=1. cc @cseed @patrick-schultz @chrisvittal",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7614:2802,simpl,simple,2802,https://hail.is,https://github.com/hail-is/hail/pull/7614,1,['simpl'],['simple']
Usability,"h.batches.id | 1 | 100.00 | Using index |; | 1 | SIMPLE | aggregated_batch_resources | NULL | ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 44 | 100.00 | NULL |; | 1 | SIMPLE | resources | NULL | eq_ref | PRIMARY | PRIMARY | 102 | batch.aggregated_batch_resources.resource | 1 | 100.00 | NULL |; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; ```. New plan; ```; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; | 1 | SIMPLE | batches | NULL | ref | batches_deleted | batches_deleted | 1 | const | 493389 | 33.33 | Using where; Backward index scan |; | 1 | SIMPLE | batches_n_jobs_in_complete_states | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | NULL |; | 1 | SIMPLE | batches_cancelled | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | Using index |; | 1 | SIMPLE | billing_project_users | NULL | eq_ref | PRIMARY | PRIMARY | 204 | batch.batches.billing_project,const | 1 | 100.00 | Using index |; | 1 | SIMPLE | aggregated_batch_resources | NULL | ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 44 | 100.00 | NULL |; | 1 | SIMPLE | resources | NULL | eq_ref | PRIMARY | PRIMARY | 102 | batch.aggregated_batch_resour",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12049:2747,SIMPL,SIMPLE,2747,https://hail.is,https://github.com/hail-is/hail/pull/12049,1,['SIMPL'],['SIMPLE']
Usability,"hail currently only supports v5.4. The current version v6.3.2 (https://www.elastic.co/downloads/elasticsearch) has some nice new features such as field aliases.; The main breaking change from v5.x is that ""mapping_types"" have been removed, so the ; kt.export_elasticsearch `mapping_type` arg isn't needed anymore (https://www.elastic.co/guide/en/elasticsearch/reference/6.0/breaking-changes-6.0.html). ### Hail version:; 0.1, 0.2. ### What you did:. kt.export_elasticsearch. ### What went wrong (all error messages here, including the full java stack trace):; ```; Traceback (most recent call last):; File ""/hail-elasticsearch-pipelines/hail_scripts/v01/load_clinvar_to_es_pipeline.py"", line 112, in <module>; export_globals_to_index_meta=True,; File ""/hail-elasticsearch-pipelines/hail_scripts/v01/utils/elasticsearch_client.py"", line 142, in export_vds_to_elasticsearch; verbose=verbose); File ""/hail-elasticsearch-pipelines/hail_scripts/v01/utils/elasticsearch_client.py"", line 287, in export_kt_to_elasticsearch; kt.export_elasticsearch(self._host, int(self._port), index_name, index_type_name, block_size, config=elasticsearch_config); File ""<decorator-gen-143>"", line 2, in export_elasticsearch; File ""/hail/build/distributions/hail-python.zip/hail/java.py"", line 121, in handle_py4j; hail.java.FatalError: EsHadoopIllegalArgumentException: Unsupported/Unknown Elasticsearch version 6.0.0. Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 12.0 failed 1 times, most recent failure: Lost task 0.0 in stage 12.0 (TID 20050, localhost): org.elasticsearch.hadoop.EsHadoopIllegalArgumentException: Cannot detect ES version - typically this happens if the network/Elasticsearch cluster is not accessible or when targeting a WAN/Cloud instance without the proper setting 'es.nodes.wan.only'; 	at org.elasticsearch.hadoop.rest.InitializationUtils.discoverEsVersion(InitializationUtils.java:247); 	at org.elasticsearch.hadoop.rest.RestService.createWri",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4138:337,guid,guide,337,https://hail.is,https://github.com/hail-is/hail/issues/4138,1,['guid'],['guide']
Usability,"hailctl dataproc start \; 	--max-idle 12h \; 	--init gs://gnomad-public/tools/inits/master-init.sh \; 	--packages slackclient==2.0.0,websocket-client,sklearn,tabulate,statsmodels,scikit-learn,hdbscan,matplotlib bw2. Fails with the following error:; ```; gcloud beta dataproc clusters create \; bw2 \; --image-version=1.4-debian9 \; --properties=spark:spark.driver.maxResultSize=0,spark:spark.task.maxFailures=20,spark:spark.kryoserializer.buffer.max=1g,spark:spark.driver.extraJavaOptions=-Xss4M,spark:spark.executor.extraJavaOptions=-Xss4M,hdfs:dfs.replication=1,dataproc:dataproc.logging.stackdriver.enable=false,dataproc:dataproc.monitoring.stackdriver.enable=false,spark:spark.driver.memory=41g \; --initialization-actions=gs://hail-common/hailctl/dataproc/0.2.18/init_notebook.py,gs://gnomad-public/tools/inits/master-init.sh \; --metadata=^|||^WHEEL=gs://hail-common/hailctl/dataproc/0.2.18/hail-0.2.18-py3-none-any.whl|||PKGS=aiohttp|bokeh>1.1,<1.3|decorator<5|gcsfs==0.2.1|hurry.filesize==0.9|ipykernel<5|nest_asyncio|numpy<2|pandas>0.22,<0.24|parsimonious<0.9|PyJWT|python-json-logger==0.1.11|requests>=2.21.0,<2.21.1|scipy>1.2,<1.4|tabulate==0.8.3|slackclient==2.0.0|websocket-client|sklearn|tabulate|statsmodels|scikit-learn|hdbscan|matplotlib \; --master-machine-type=n1-highmem-8 \; --master-boot-disk-size=100GB \; --num-master-local-ssds=0 \; --num-preemptible-workers=0 \; --num-worker-local-ssds=0 \; --num-workers=2 \; --preemptible-worker-boot-disk-size=40GB \; --worker-boot-disk-size=40 \; --worker-machine-type=n1-standard-8 \; --zone=us-central1-b \; --initialization-action-timeout=20m \; --labels=creator=weisburd_broadinstitute_org \; --max-idle=12h; Starting cluster 'bw2'...; Waiting on operation [projects/seqr-project/regions/global/operations/46f1d37d-798a-3fc0-8f70-eac304448a08].; Waiting for cluster creation operation...; WARNING: For PD-Standard without local SSDs, we strongly recommend provisioning 1TB or larger to ensure consistently high I/O performance. See h",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6634:186,learn,learn,186,https://hail.is,https://github.com/hail-is/hail/issues/6634,1,['learn'],['learn']
Usability,"he binding structure of `TableStage` has been slightly reorganized. The `letBindings`, which are used on the master, and the `broadcastVals` which are used on the driver (previously, they had to also be usable on master), have been teased apart. In the new structure:; * `letBindings` are as before: a sequence of bindings which are evaluated in sequence on the master, whose bindings are visible in the `contexts` expression and in the `broadcastVals`; * `broadcastVals` are now a separate sequence of bindings, which are evaluated on the master in parallel (each broadcast binding sees only the `letBindings`, no previous `broadcastVals`), and whose bindings are visible only in the `partitionIR`; * `globals` is now required to be a `Ref`, which is defined in `letBindings` and redefined in `broadcastVals`, so that the `Ref` is valid in later `letBindings`, in `contexts`, as well as in the `partitionIR`. This does mean that `globals` is always broadcast, even when it's just an empty struct. But since we're generating a `CollectDistributedArray` which always broadcasts a struct, adding a nested required empty struct shouldn't have any overhead. I think this more layered organization has a clearer semantics than before, where `broadcastVals` were a subset of the `letBindings`, and `globals` was an arbitrary IR in the `broadcastVals` scope. It's also closer to the structure of the resulting `CollectDistributedArray`. I tried to pull `letBindings` out of `TableStage`, letting them be built up imperatively in the lowering pass, similar to what we do in `LowerMatrixIR`. I had it mostly working, but was blocked by `localSort`, which compiles and executes an intermediate `TableStage`. This needs to be able to compile only those bindings needed in that intermediate stage, and to throw out those used bindings, neither of which is easy when the bindings are accumulated in a single list throughout the lowering pass. @catoverdrive Would appreciate if you could take a quick look as well.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8917:2227,clear,clearer,2227,https://hail.is,https://github.com/hail-is/hail/pull/8917,1,['clear'],['clearer']
Usability,"he results of each benchmark are outputted as json lines (`.jsonl`) to the file specified by the `--output` pytest arg or stdout. The folder structure should be familiar, resembling our `test/` directory.; I believe this is flexible enough to add `hailtop` benchmarks should we so wish:; ```; pytest.ini - hoisted from `test/` to include benchmark marks; benchmark/; - conftest.py for custom pytest command line args ; - hail/; - confest.py for custom plugin that runs hail benchmarks; - benchmark_*.py hail query benchmark code; - tools/; - shared utilites, including the `@benchmark`; ```; Supporting pytest fixtures required writing a custom plugin to run benchmarks, as using off-the-shelf; solutions like `pytest-benchmark` would forbid method level fixtures like `tmp_path` etc.; The plugin is designed to run ""macro-benchmarks"" (ie long-running tests) and fully supports pytest parameterisation.; For each benchmark, the plugin initialises hail and then repeats (for a number of iterations defined by the pytest mark); acquiring fixtures, timing invocation and tearing-down fixtures, finally stopping hail. It is therefore unsuitable for; microbenchmarks, for which we currenly have none in python. If we add them we'd need to tweak this so support them.; Perhaps an inner loop or something. The process of submitting benchmarks to batch is greatly simplified as the old `Makefile` infrastructure for ; building wheels and docker images etc has been replaced with the script `benchmark_in_batch.py`.; Benchmark images are now based off the `hail-dev` image built in CI (or via the `hail-dev-image` make target). ; Furthermore, you can control the number of ""replicate"" jobs created for each benchmark at the benchmark level using; the `@benchmark(batch_jobs=N)` decotator. Limitations/shortcomings:; - Output is currently jsonl only. Some more human friendly output might be nice on a per iteration basis.; - Old `benchmark-hail` utilities are broken. I'll restore these in subsequent changes.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14565:2111,simpl,simplified,2111,https://hail.is,https://github.com/hail-is/hail/pull/14565,1,['simpl'],['simplified']
Usability,"his PR just contains the most simple streams (`ArrayRange`, `MakeArray`, `ArrayMap`, `ArrayFilter`). I'd like to get comments on it before merging my other stream implementations. So far I have all of the other streams implemented, except for `ReadPartition` and `If` (it turns out that `If` is tricky). **Interface**. `init` can return in two possible ways:; - `Missing` - the stream is actually entirely missing; this usually happens if one of the parameters to a stream is missing (e.g. `ArrayRange(0, NA, 1) = NA`); - `State(s0)` - the stream has started; its initial state is `s0`. `step` can return in three possible ways as well:; - `EOS` - we've reached the End Of Stream, there are no more elements left.; - `Skip(s1)` - this iteration didn't produce an element, you must try stepping again with state `s1` (see ""design notes"").; - `Yield(elt, s1)` - the stream computed an element `elt`; the following stream state will be `s1`. **Design Notes**. - The `Skip` return is very useful for simplifying the implementation of `ArrayFilter`. There is basically no nice way to implement filter otherwise without introducing some significant code duplication.; - ~~The stream ""parameter"", as well as the `Empty` return, are not very useful for the basic streams in this PR. However, they simplify the implementation of `ArrayFlatMap` (aka ""composing"" two parameterized streams).~~ NOTE (to Patrick): I decided to abandon the ""empty"" return idea in favor of just providing ""default states"" that always yield empty streams. **Implementation Notes**. - The implementation makes great use of Scala's type system. Most of the streams are implemented first in a very type aware manner, where it is easy to reason about the types of data flowing in and out, before being instantiated with EmitTriplets and Envs which don't hold very much type information. For instance, we have the following helper for `map`:; ```scala; Parameterized[P, A].map(f: A => B): Parameterized[P, B]; ```; The emitter instantiate",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7228:1707,simpl,simplifying,1707,https://hail.is,https://github.com/hail-is/hail/pull/7228,1,['simpl'],['simplifying']
Usability,"his because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxZDhjNDI0MS1hOTllLTQwZDktOTM5Yy0zZWMzM2NkNTI0ZjkiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjFkOGM0MjQxLWE5OWUtNDBkOS05MzljLTNlYzMzY2Q1MjRmOSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""1d8c4241-a99e-40d9-939c-3ec33cd524f9"",""prPublicId"":""1d8c4241-a99e-40d9-939c-3ec33cd524f9"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.7"",""to"":""42.0.2""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6149518"",""SNYK-PYTHON-CRYPTOGRAPHY-6157248""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581,581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use of a Broken or Risky Cryptographic Algorithm](https://learn.snyk.io/lesson/insecure-hash/?loc&#x3D;fix-pr); 🦉 [Uncontrolled Resource Consumption (&#x27;Resource Exhaustion&#x27;)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14230:3944,Learn,Learn,3944,https://hail.is,https://github.com/hail-is/hail/pull/14230,3,"['Learn', 'learn']","['Learn', 'learn']"
Usability,hl.plot.pdf is undocumented,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8215:15,undo,undocumented,15,https://hail.is,https://github.com/hail-is/hail/issues/8215,2,['undo'],['undocumented']
Usability,https://github.com/hail-is/jgscm/pull/3 will resolve this. `jgscm` sequentially issues API calls for each folder or file in a directory. Each call takes about a second so this quickly kills the UX.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8587:194,UX,UX,194,https://hail.is,https://github.com/hail-is/hail/issues/8587,1,['UX'],['UX']
Usability,"https://github.com/kjd/idna) from 3.6 to 3.7.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/kjd/idna/releases"">idna's releases</a>.</em></p>; <blockquote>; <h2>v3.7</h2>; <h2>What's Changed</h2>; <ul>; <li>Fix issue where specially crafted inputs to encode() could take exceptionally long amount of time to process. [CVE-2024-3651]</li>; </ul>; <p>Thanks to Guido Vranken for reporting the issue.</p>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/kjd/idna/compare/v3.6...v3.7"">https://github.com/kjd/idna/compare/v3.6...v3.7</a></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/kjd/idna/blob/master/HISTORY.rst"">idna's changelog</a>.</em></p>; <blockquote>; <p>3.7 (2024-04-11); ++++++++++++++++</p>; <ul>; <li>Fix issue where specially crafted inputs to encode() could; take exceptionally long amount of time to process. [CVE-2024-3651]</li>; </ul>; <p>Thanks to Guido Vranken for reporting the issue.</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d""><code>1d365e1</code></a> Release v3.7</li>; <li><a href=""https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6""><code>c1b3154</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/172"">#172</a> from kjd/optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/0394ec76ff022813e770ba1fd89658790ea35623""><code>0394ec7</code></a> Merge branch 'master' into optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/cd58a23173d2b0a40b95ee680baf3e59e8d33966""><code>cd58a23</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/152"">#152</a> from elliotwutingfeng/dev</li>; <li><a href=""https://github.com/kjd/idna/commit/5beb28b9dd77912c0dd656d8b0fdba3eb80222e7""><code>5beb28b</code></a> ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14464:1016,Guid,Guido,1016,https://hail.is,https://github.com/hail-is/hail/pull/14464,7,['Guid'],['Guido']
Usability,https://hail.is/docs/0.2/guides/genetics.html#filter-loci-by-a-list-of-locus-intervals,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5254:25,guid,guides,25,https://hail.is,https://github.com/hail-is/hail/issues/5254,1,['guid'],['guides']
Usability,https://hail.zulipchat.com/#narrow/stream/123011-Hail-Query-Dev/topic/simple.20job.20timings.20from.20batch.20perspective/near/366227291,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13181:70,simpl,simple,70,https://hail.is,https://github.com/hail-is/hail/pull/13181,1,['simpl'],['simple']
Usability,"i>; <li>api-change:<code>connect</code>: [<code>botocore</code>] Added AllowedAccessControlTags and TagRestrictedResource for Tag Based Access Control on Amazon Connect Webpage</li>; <li>api-change:<code>dynamodb</code>: [<code>botocore</code>] Updated minor fixes for DynamoDB documentation.</li>; <li>api-change:<code>dynamodbstreams</code>: [<code>botocore</code>] Update dynamodbstreams client to latest version</li>; <li>api-change:<code>ec2</code>: [<code>botocore</code>] This release adds support for copying an Amazon Machine Image's tags when copying an AMI.</li>; <li>api-change:<code>glue</code>: [<code>botocore</code>] AWSGlue Crawler - Adding support for Table and Column level Comments with database level datatypes for JDBC based crawler.</li>; <li>api-change:<code>iot-roborunner</code>: [<code>botocore</code>] AWS IoT RoboRunner is a new service that makes it easy to build applications that help multi-vendor robots work together seamlessly. See the IoT RoboRunner developer guide for more details on getting started. <a href=""https://docs.aws.amazon.com/iotroborunner/latest/dev/iotroborunner-welcome.html"">https://docs.aws.amazon.com/iotroborunner/latest/dev/iotroborunner-welcome.html</a></li>; <li>api-change:<code>quicksight</code>: [<code>botocore</code>] This release adds the following: 1) Asset management for centralized assets governance 2) QuickSight Q now supports public embedding 3) New Termination protection flag to mitigate accidental deletes 4) Athena data sources now accept a custom IAM role 5) QuickSight supports connectivity to Databricks</li>; <li>api-change:<code>sagemaker</code>: [<code>botocore</code>] Added DisableProfiler flag as a new field in ProfilerConfig</li>; <li>api-change:<code>servicecatalog</code>: [<code>botocore</code>] This release 1. adds support for Principal Name Sharing with Service Catalog portfolio sharing. 2. Introduces repo sourced products which are created and managed with existing SC APIs. These products are synced to",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12498:3405,guid,guide,3405,https://hail.is,https://github.com/hail-is/hail/pull/12498,2,['guid'],['guide']
Usability,"i>; <li>api-change:<code>logs</code>: [<code>botocore</code>] Updates to support CloudWatch Logs data protection and CloudWatch cross-account observability</li>; <li>api-change:<code>mgn</code>: [<code>botocore</code>] This release adds support for Application and Wave management. We also now support custom post-launch actions.</li>; <li>api-change:<code>oam</code>: [<code>botocore</code>] Amazon CloudWatch Observability Access Manager is a new service that allows configuration of the CloudWatch cross-account observability feature.</li>; <li>api-change:<code>organizations</code>: [<code>botocore</code>] This release introduces delegated administrator for AWS Organizations, a new feature to help you delegate the management of your Organizations policies, enabling you to govern your AWS organization in a decentralized way. You can now allow member accounts to manage Organizations policies.</li>; <li>api-change:<code>rds</code>: [<code>botocore</code>] This release enables new Aurora and RDS feature called Blue/Green Deployments that makes updates to databases safer, simpler and faster.</li>; <li>api-change:<code>textract</code>: [<code>botocore</code>] This release adds support for classifying and splitting lending documents by type, and extracting information by using the Analyze Lending APIs. This release also includes support for summarized information of the processed lending document package, in addition to per document results.</li>; <li>api-change:<code>transcribe</code>: [<code>botocore</code>] This release adds support for 'inputType' for post-call and real-time (streaming) Call Analytics within Amazon Transcribe.</li>; </ul>; <h1>1.26.16</h1>; <ul>; <li>api-change:<code>grafana</code>: [<code>botocore</code>] This release includes support for configuring a Grafana workspace to connect to a datasource within a VPC as well as new APIs for configuring Grafana settings.</li>; <li>api-change:<code>rbin</code>: [<code>botocore</code>] This release adds support for",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12507:3507,simpl,simpler,3507,https://hail.is,https://github.com/hail-is/hail/pull/12507,1,['simpl'],['simpler']
Usability,"ies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3YjUwZjkzNy0zZjY4LTRkZjItYjliMC0zZjRiYzUyNmIwNWIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjdiNTBmOTM3LTNmNjgtNGRmMi1iOWIwLTNmNGJjNTI2YjA1YiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""7b50f937-3f68-4df2-b9b0-3f4bc526b05b"",""prPublicId"":""7b50f937-3f68-4df2-b9b0-3f4bc526b05b"",""dependencies"":[{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[384,494,539],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14244:4188,Learn,Learn,4188,https://hail.is,https://github.com/hail-is/hail/pull/14244,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ing.google.com/sre/books/; - Distributed Systems Observability https://www.oreilly.com/library/view/distributed-systems-observability/9781492033431/; - ""Learning to Build Distributed Systems"" http://brooker.co.za/blog/2019/04/03/learning.html; - Increment's On-Call issue https://increment.com/on-call/; # SWE; - ""Designing Data-Intensive Systems"" by Kleppman https://www.amazon.com/gp/product/1449373321/; # SEC; - ""The Confused Deputy"" http://zoo.cs.yale.edu/classes/cs422/2010/bib/hardy88confused.pdf; - ""Blueprint fo a science of cybersecurity"" http://www.cs.cornell.edu/fbs/publications/SoS.blueprint.pdf; - ""Macaroons: Cookies with Contextual Caveats for Decentralized Authorization in the Cloud"" https://ai.google/research/pubs/pub41892; - ""Native Client: A Sandbox for Portable, Untrusted x86 Native Code"" https://ai.google/research/pubs/pub34913; - What is CSRF https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF); - What is XSS https://www.owasp.org/index.php/Cross-site_Scripting_(XSS); ## Containers; - gVisor Architecture Guide https://gvisor.dev/docs/architecture_guide/; - ""cgroups"" https://www.kernel.org/doc/Documentation/cgroup-v1/cgroups.txt; - ""cgroups v2"" https://github.com/torvalds/linux/blob/master/Documentation/admin-guide/cgroup-v2.rst; - ""Docker Security"" https://docs.docker.com/engine/security/security/; - ""On the security of containers"" https://medium.com/@ewindisch/on-the-security-of-containers-2c60ffe25a9e; - ""User namespaces might not be enough"" https://medium.com/@ewindisch/linux-user-namespaces-might-not-be-secure-enough-a-k-a-subverting-posix-capabilities-f1c4ae19cad; - ""OS-level virtualization"" https://en.wikipedia.org/wiki/OS-level_virtualisation; - ""Sandbox (computer security)"" https://en.wikipedia.org/wiki/Sandbox_(computer_security); - ""Making Containers More Isolated: An Overview of Sandboxed Container Technologies"" https://unit42.paloaltonetworks.com/making-containers-more-isolated-an-overview-of-sandboxed-container-technologies/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6720:1091,Guid,Guide,1091,https://hail.is,https://github.com/hail-is/hail/issues/6720,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"ing; sent through the tunneled connection to the destination server. Users who rely on; defining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade; to Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy; credentials once the change has been fully deployed.</p>; <p>Users who do not use a proxy or do not supply their proxy credentials through; the user information portion of their proxy URL are not subject to this; vulnerability.</p>; <p>Full details can be read in our <a href=""https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q"">Github Security Advisory</a>; and <a href=""https://nvd.nist.gov/vuln/detail/CVE-2023-32681"">CVE-2023-32681</a>.</p>; </li>; </ul>; <h2>2.30.0 (2023-05-03)</h2>; <p><strong>Dependencies</strong></p>; <ul>; <li>; <p>⚠️ Added support for urllib3 2.0. ⚠️</p>; <p>This may contain minor breaking changes so we advise careful testing and; reviewing <a href=""https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html"">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>; prior to upgrading.</p>; <p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>; </li>; </ul>; <h2>2.29.0 (2023-04-26)</h2>; <p><strong>Improvements</strong></p>; <ul>; <li>Requests now defers chunked requests to the urllib3 implementation to improve; standardization. (<a href=""https://redirect.github.com/psf/requests/issues/6226"">#6226</a>)</li>; <li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=""https://redirect.github.com/psf/requests/issues/6356"">#6356</a>)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/psf/requests/commit/147c8511ddbfa5e8f71bbf5c18ede0c4ceb3bba4""><code>147c851</code></a> v2.31.0</li>; <li><a href=""https://github.com/psf/requests/commit/74ea7cf7a6a27a4eeb2ae24e162bcc942a6706d5""><code>74ea7cf</code></a> Merge pull request from GHSA-j8r2-",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13091:4530,guid,guide,4530,https://hail.is,https://github.com/hail-is/hail/pull/13091,6,['guid'],['guide']
Usability,ingleThreadEventExecutor.java:131); 	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144); 	at java.lang.Thread.run(Thread.java:748); 	Error: java.lang.IllegalStateException: Cannot call methods on a stopped SparkContext.; 	This stopped SparkContext was created at:; 	; 	org.apache.spark.SparkContext.getOrCreate(SparkContext.scala); 	sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	java.lang.reflect.Method.invoke(Method.java:498); 	sparklyr.Invoke.invoke(invoke.scala:139); 	sparklyr.StreamHandler.handleMethodCall(stream.scala:123); 	sparklyr.StreamHandler.read(stream.scala:66); 	sparklyr.BackendHandler.channelRead0(handler.scala:51); 	sparklyr.BackendHandler.channelRead0(handler.scala:4); 	io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343); 	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343); 	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293); 	io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267); 	; 	The currently active SparkContext was created at:;,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4513:7536,Simpl,SimpleChannelInboundHandler,7536,https://hail.is,https://github.com/hail-is/hail/issues/4513,1,['Simpl'],['SimpleChannelInboundHandler']
Usability,"internet are not free. We should track every egressing byte and assign the cost of that byte to the job which produced it. I believe there are two ways to trigger substantial egress:; 1. The main container opens a network connection and bytes are sent to the other IP from the container. ; 2. An output file whose destination is a different cloud provider. I think this is currently impossible due to lack of permissions, but we should either explicitly prohibit this or ensure our solution encompasses it. In particular, I am concerned OpenID could be used to grant permission for a GCP identity to write to S3 or ABS. . Pulling an image shouldn’t trigger substantial egress. In the first case, there are three kinds of possible egress:; 1. Egress to the Public Internet.; 2. Egress to a VM in a different Google region.; 3. Egress to a Google Service in a different Google region (e.g. uploading to a bucket in a different region). I believe (2) and (3) are charged equivalently. (1) is simply Internet egress pricing. In (3), I’m not sure who pays the egress from a VM to a bucket in a different region. I assume the VM owner. In all three cases, the destination’s location matters. For public Internet egress, we can use GeoIP to determine the region of the planet. I’m not sure if we can determine the region of (2) and (3). If we can’t, we should either prevent such traffic or we should charge the maximum egress. A final caveat is that we use Premium Networking. As a result, our traffic can use Google’s internal backbone. It’s not clear to me if this means that a packet from us-central to a public IP in Australia incurs just Internet egress or that *and* a region-to-region egress to pay for the use of GCP’s internal global backbone. The priority of various considerations:; 1. Top priority within this issue is to track and recover costs. Even if this means charging a flat fee across all possible kinds of egress. Even if that fee is substantially higher than the real cost to us.; 2. S",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13428:1058,simpl,simply,1058,https://hail.is,https://github.com/hail-is/hail/issues/13428,1,['simpl'],['simply']
Usability,"ion generated [here](https://github.com/hail-is/hail/blob/8bd9b7b2224b77372a72f02f2b13806267892a35/hail/src/main/scala/is/hail/types/encoded/EBaseStruct.scala#L107). I2B is an instruction that truncates an integer to a byte, and it is used in various places in code generation but primarily encoding missing bits in arrays and structs. . I2B loads a byte to the stack, not a boolean. TypeInfos are mostly non-structural since they rarely influence the bytecode generated. Here is an exception, and that's where the method splitter comes in. Method splitting exists in the Hail compiler because not only does the JVM have limits on how large methods can be, but also the JIT compiler handles small methods much more effectively than large methods (and so splitting a large method into two small ones can make an order of magnitude or more in performance difference). We have three forms of method splitting in the Hail Query compiler. The first is a heuristic and greedy IR-level method splitter that generates new methods every X IR nodes, simply based on node count. However, the size of code generated by each IR can vary widely (`I32` vs `LowerBoundOnOrderedCollection` for instance), and so we have two other kinds of splitting that operate on the LIR level. The first is region splitting, which is used to split large blocks of LIR. In order to insert a split, any variables on the stack are stored in local variables before the split and loaded from those locals after the split. The second is method splitting, which is used to split large single methods. A single-exit group of blocks can be split into a separate method, and we have some machinery for replacing control flow instructions (which I will not go into here, for they are not relevant now), as well as handling local variables that are used across a method split. These shared Local variables are replaced by fields on a ""spills"" class which is allocated any time a split method is called. Spilled local `store`s are rewritten as ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11328:1760,simpl,simply,1760,https://hail.is,https://github.com/hail-is/hail/pull/11328,1,['simpl'],['simply']
Usability,"irect.github.com/urllib3/urllib3/issues/3051"">#3051</a></li>; </ul>; <h2>2.0.2</h2>; <ul>; <li>Fixed <code>HTTPResponse.stream()</code> to continue yielding bytes if buffered decompressed data was still available to be read even if the underlying socket is closed. This prevents a compressed response from being truncated. (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3009"">urllib3/urllib3#3009</a>)</li>; </ul>; <h2>2.0.1</h2>; <ul>; <li>Fixed a socket leak when fingerprint or hostname verifications fail. (<a href=""https://redirect.github.com/urllib3/urllib3/issues/2991"">#2991</a>)</li>; <li>Fixed an error when <code>HTTPResponse.read(0)</code> was the first <code>read</code> call or when the internal response body buffer was otherwise empty. (<a href=""https://redirect.github.com/urllib3/urllib3/issues/2998"">#2998</a>)</li>; </ul>; <h2>2.0.0</h2>; <p>Read the <a href=""https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html"">v2.0 migration guide</a> for help upgrading to the latest version of urllib3.</p>; <h1>Removed</h1>; <ul>; <li>Removed support for Python 2.7, 3.5, and 3.6 (<a href=""https://redirect.github.com/urllib3/urllib3/issues/883"">#883</a>, <a href=""https://redirect.github.com/urllib3/urllib3/issues/2336"">#2336</a>).</li>; <li>Removed fallback on certificate <code>commonName</code> in <code>match_hostname()</code> function. This behavior was deprecated in May 2000 in RFC 2818. Instead only <code>subjectAltName</code> is used to verify the hostname by default. To enable verifying the hostname against <code>commonName</code> use <code>SSLContext.hostname_checks_common_name = True</code> (<a href=""https://redirect.github.com/urllib3/urllib3/issues/2113"">#2113</a>).</li>; <li>Removed support for Python with an <code>ssl</code> module compiled with LibreSSL, CiscoSSL, wolfSSL, and all other OpenSSL alternatives. Python is moving to require OpenSSL with PEP 644 (<a href=""https://redirect.github.com/urllib3/urllib3/issues/2168"">#2168</a>).<",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13768:3347,guid,guide,3347,https://hail.is,https://github.com/hail-is/hail/pull/13768,3,['guid'],['guide']
Usability,"irements.txt --output-file=/tmp/tmp.aWUFJ1BMnP; ../check_pip_requirements.sh: line 13: pip-compile: command not found; ```. While I do have pip-compile installed. ```sh ; pip-compile --help; Usage: pip-compile [OPTIONS] [SRC_FILES]... Compiles requirements.txt from requirements.in, pyproject.toml, setup.cfg,; or setup.py specs. Options:; ```. Note that `make clean` did not solve the issue. see logs attached. ### Version. 0.2.120. ### Relevant log output. ```shell; BUILD SUCCESSFUL in 2m 46s; 4 actionable tasks: 4 executed; cp -f build/libs/hail-all-spark.jar python/hail/backend/hail-all-spark.jar; rm -rf build/deploy; mkdir -p build/deploy; mkdir -p build/deploy/src; cp ../README.md build/deploy/; rsync -r \; --exclude '.eggs/' \; --exclude '.pytest_cache/' \; --exclude '__pycache__/' \; --exclude 'benchmark_hail/' \; --exclude '.mypy_cache/' \; --exclude 'docs/' \; --exclude 'dist/' \; --exclude 'test/' \; --exclude '*.log' \; python/ build/deploy/; # Clear the bdist build cache before building the wheel; cd build/deploy; rm -rf build; python3 setup.py -q sdist bdist_wheel; /usr/lib64/python3.8/distutils/dist.py:274: UserWarning: Unknown distribution option: 'long_description_content_type'; warnings.warn(msg); installing to build/bdist.linux-x86_64/wheel; creating build/bdist.linux-x86_64/wheel/hail-0.2.120.dist-info/WHEEL; creating 'dist/hail-0.2.120-py3-none-any.whl' and adding 'build/bdist.linux-x86_64/wheel' to it; adding 'hail/__init__.py'; adding 'hail/builtin_references.py'; adding 'hail/conftest.py'; adding 'hail/context.py'; adding 'hail/hail_logging.py'; adding 'hail/hail_pip_version'; adding 'hail/hail_revision'; adding 'hail/hail_version'; adding 'hail/matrixtable.py'; adding 'hail/table.py'; adding 'hail/backend/__init__.py'; adding 'hail/backend/backend.py'; adding 'hail/backend/hail-all-spark.jar'; adding 'hail/backend/local_backend.py'; adding 'hail/backend/py4j_backend.py'; adding 'hail/backend/service_backend.py'; adding 'hail/backend/spark_backend",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13445:1391,Clear,Clear,1391,https://hail.is,https://github.com/hail-is/hail/issues/13445,1,['Clear'],['Clear']
Usability,is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:19); a,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:10699,Simpl,Simplify,10699,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,"issues/3217"">#3217</a>)</li>; </ul>; <h3>Configuration</h3>; <ul>; <li>Black now uses the presence of debug f-strings to detect target version (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3215"">#3215</a>)</li>; <li>Fix misdetection of project root and verbose logging of sources in cases involving <code>--stdin-filename</code> (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3216"">#3216</a>)</li>; <li>Immediate <code>.gitignore</code> files in source directories given on the command line are now also respected, previously only <code>.gitignore</code> files in the project root and automatically discovered directories were respected (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3237"">#3237</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>Recommend using BlackConnect in IntelliJ IDEs (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3150"">#3150</a>)</li>; </ul>; <h3>Integrations</h3>; <ul>; <li>Vim plugin: prefix messages with <code>Black: </code> so it's clear they come from Black (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3194"">#3194</a>)</li>; <li>Docker: changed to a /opt/venv installation + added to PATH to be available to non-root users (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3202"">#3202</a>)</li>; </ul>; <h3>Output</h3>; <ul>; <li>Change from deprecated <code>asyncio.get_event_loop()</code> to create our event loop which removes DeprecationWarning (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3164"">#3164</a>)</li>; <li>Remove logging from internal <code>blib2to3</code> library since it regularly emits error logs about failed caching that can and should be ignored (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3193"">#3193</a>)</li>; </ul>; <h3>Parser</h3>; <ul>; <li>Type comments are now included in the AST equivalence check consistently so accidental deletion raises an error. Though type comments can't",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12174:3843,clear,clear,3843,https://hail.is,https://github.com/hail-is/hail/pull/12174,1,['clear'],['clear']
Usability,"istune/commit/979d6d3bfc7d6159f38deb8e751611e4205033f6""><code>979d6d3</code></a> Fix * parsing, <a href=""https://github-redirect.dependabot.com/lepture/mistune/issues/312"">#312</a></li>; <li><a href=""https://github.com/lepture/mistune/commit/f857f048ebb2f6f2bb7ab97dcb7a159172a20649""><code>f857f04</code></a> Trigger GitHub dependency graph</li>; <li><a href=""https://github.com/lepture/mistune/commit/3f422f1e84edae0f39756c45be453ecde534b755""><code>3f422f1</code></a> Version bump 2.0.3</li>; <li><a href=""https://github.com/lepture/mistune/commit/a6d43215132fe4f3d93f8d7e90ba83b16a0838b2""><code>a6d4321</code></a> Fix asteris emphasis regex CVE-2022-34749</li>; <li><a href=""https://github.com/lepture/mistune/commit/5638e460459cb59ceb20e4ce4716c802d4d73c53""><code>5638e46</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/lepture/mistune/issues/307"">#307</a> from jieter/patch-1</li>; <li><a href=""https://github.com/lepture/mistune/commit/0eba47196a81453bafe1f2492748a87475063dff""><code>0eba471</code></a> Fix typo in guide.rst</li>; <li><a href=""https://github.com/lepture/mistune/commit/61e9337884e20f9f8fdc0b7788d319afdd259729""><code>61e9337</code></a> Fix table plugin</li>; <li><a href=""https://github.com/lepture/mistune/commit/76dec68c4514c2612ef9263b49c6ec7f4d77bd14""><code>76dec68</code></a> Add documentation for renderer heading when TOC enabled</li>; <li>Additional commits viewable in <a href=""https://github.com/lepture/mistune/compare/v0.8.4...v2.0.4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mistune&package-manager=pip&previous-version=0.8.4&new-version=2.0.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually b",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12066:3460,guid,guide,3460,https://hail.is,https://github.com/hail-is/hail/pull/12066,2,['guid'],['guide']
Usability,"it('\\.')[0],; length=ht.interval.end.position - ht.interval.start.position + 1); coding_regions = ht.filter(ht.feature == 'CDS').select('gene_id', 'transcript_id', 'transcript_type', 'length', 'level'); transcripts = coding_regions.group_by('transcript_id', 'transcript_type', 'gene_id',; transcript_level=coding_regions.level).aggregate(; cds_length=hl.agg.sum(coding_regions.length),; num_coding_exons=hl.agg.count(); ).key_by('transcript_id'); ```; Afterwards:; ```; transcripts.count() # fails with error below; transcripts.persist().count() # succeeds; ```; on current master (d33e2d1c19b2); ```; Py4JJavaError: An error occurred while calling z:is.hail.expr.ir.Interpret.interpretPyIR.; : java.util.NoSuchElementException: key not found: interval; 	at scala.collection.MapLike$class.default(MapLike.scala:228); 	at scala.collection.AbstractMap.default(Map.scala:59); 	at scala.collection.MapLike$class.apply(MapLike.scala:141); 	at scala.collection.AbstractMap.apply(Map.scala:59); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); 	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at is.hail.rvd.RVDType.<init>(RVDType.scala:23); 	at is.hail.expr.types.TableType.<init>(TableType.scala:16); 	at is.hail.expr.types.TableType.copy(TableType.scala:15); 	at is.hail.expr.ir.TableMapRows.<init>(TableIR.scala:592); 	at is.hail.expr.ir.Simplify$$anonfun$tableRules$1.applyOrElse(Simplify.scala:394); 	at is.hail.expr.ir.Simplify$$anonfun$tableRules$1.applyOrElse(Simplify.scala:251); 	at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); 	at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4799:1954,Simpl,Simplify,1954,https://hail.is,https://github.com/hail-is/hail/issues/4799,4,['Simpl'],['Simplify']
Usability,"ithub&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""5da7ca75-f161-4f7a-ae7f-c92bb747eca9"",""prPublicId"":""5da7ca75-f161-4f7a-ae7f-c92bb747eca9"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.0""},{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.11.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-JUPYTERSERVER-6099119"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,531,null,null,null,509,384,494,539],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Access Control Bypass](https://learn.snyk.io/lesson/broken-access-control/?loc&#x3D;fix-pr); 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14074:6561,Learn,Learn,6561,https://hail.is,https://github.com/hail-is/hail/pull/14074,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ix a number of minor annotation issues in <code>protocols.Validator</code></li>; </ul>; <h1>v4.13.0</h1>; <ul>; <li>Add support for creating validator classes whose metaschema uses a different; dialect than its schemas. In other words, they may use draft2020-12 to define; which schemas are valid, but the schemas themselves use draft7 (or a custom; dialect, etc.) to define which <em>instances</em> are valid. Doing this is likely; not something most users, even metaschema authors, may need, but occasionally; will be useful for advanced use cases.</li>; </ul>; <h1>v4.12.1</h1>; <ul>; <li>Fix some stray comments in the README.</li>; </ul>; <h1>v4.12.0</h1>; <ul>; <li>Warn at runtime when subclassing validator classes. Doing so was not; intended to be public API, though it seems some downstream libraries; do so. A future version will make this an error, as it is brittle and; better served by composing validator objects instead. Feel free to reach; out if there are any cases where changing existing code seems difficult; and I can try to provide guidance.</li>; </ul>; <h1>v4.11.0</h1>; <ul>; <li>Make the rendered README in PyPI simpler and fancier. Thanks Hynek (<a href=""https://github-redirect.dependabot.com/python-jsonschema/jsonschema/issues/983"">#983</a>)!</li>; </ul>; <h1>v4.10.3</h1>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-jsonschema/jsonschema/commit/420fc6bd9a3ecc4cd637ece97cb4b482b4d0d37e""><code>420fc6b</code></a> Minor verbiage tweak for protocols.</li>; <li><a href=""https://github.com/python-jsonschema/jsonschema/commit/8ce8250897e1b2e9b1fea6825965dbc876ec1f4d""><code>8ce8250</code></a> Don't show type checker functions in TypeChecker reprs.</li>; <li><a href=""https://github.com/python-jsonschema/jsonschema/commit/6533d32cad0a65847979297c66f96f1dfbf1d68c""><code>6533d32</code></a> Tweak the colorscheme for code blocks in docs.</li>; <li><a hre",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12163:5965,guid,guidance,5965,https://hail.is,https://github.com/hail-is/hail/pull/12163,1,['guid'],['guidance']
Usability,"k.readthedocs.io/en/latest/the_black_code_style/index.html#stability-policy"">new stability policy</a>.</p>; <h3>Highlights</h3>; <ul>; <li>Remove Python 2 support (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2740"">#2740</a>)</li>; <li>Introduce the <code>--preview</code> flag (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2752"">#2752</a>)</li>; </ul>; <h3>Style</h3>; <ul>; <li>Deprecate <code>--experimental-string-processing</code> and move the functionality under <code>--preview</code> (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2789"">#2789</a>)</li>; <li>For stubs, one blank line between class attributes and methods is now kept if there's at least one pre-existing blank line (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2736"">#2736</a>)</li>; <li>Black now normalizes string prefix order (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2297"">#2297</a>)</li>; <li>Remove spaces around power operators if both operands are simple (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2726"">#2726</a>)</li>; <li>Work around bug that causes unstable formatting in some cases in the presence of the magic trailing comma (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2807"">#2807</a>)</li>; <li>Use parentheses for attribute access on decimal float and int literals (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2799"">#2799</a>)</li>; <li>Don't add whitespace for attribute access on hexadecimal, binary, octal, and complex literals (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2799"">#2799</a>)</li>; <li>Treat blank lines in stubs the same inside top-level if statements (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2820"">#2820</a>)</li>; <li>Fix unstable formatting with semicolons and arithmetic expressions (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2817"">#2817</a>)</li>; <l",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11468:1422,simpl,simple,1422,https://hail.is,https://github.com/hail-is/hail/pull/11468,1,['simpl'],['simple']
Usability,"l of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3ZTZiMDk2ZC0xYzc5LTQ2ZjctYjY5Ni0yNjFlM2QzYzU2ZmMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjdlNmIwOTZkLTFjNzktNDZmNy1iNjk2LTI2MWUzZDNjNTZmYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""7e6b096d-1c79-46f7-b696-261e3d3c56fc"",""prPublicId"":""7e6b096d-1c79-46f7-b696-261e3d3c56fc"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.0""}],""packageManager"":""pip"",""projectPublicId"":""b7c31419-ec34-40f1-8bc6-ad8303fb329b"",""projectUrl"":""https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[663,663],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14036:3595,Learn,Learn,3595,https://hail.is,https://github.com/hail-is/hail/pull/14036,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"l of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiOGQwNmE2Yi00MTg0LTRhMzAtOGMxYi0wYzNhZDVkZDk2OTQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImI4ZDA2YTZiLTQxODQtNGEzMC04YzFiLTBjM2FkNWRkOTY5NCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/e7c92c7b-5282-49ea-940f-7a5797e2a45a?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/e7c92c7b-5282-49ea-940f-7a5797e2a45a?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""b8d06a6b-4184-4a30-8c1b-0c3ad5dd9694"",""prPublicId"":""b8d06a6b-4184-4a30-8c1b-0c3ad5dd9694"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.0""}],""packageManager"":""pip"",""projectPublicId"":""e7c92c7b-5282-49ea-940f-7a5797e2a45a"",""projectUrl"":""https://app.snyk.io/org/danking/project/e7c92c7b-5282-49ea-940f-7a5797e2a45a?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[663,663],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14045:3597,Learn,Learn,3597,https://hail.is,https://github.com/hail-is/hail/pull/14045,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"l, React days at worst. Also, by not buying into a full framework, we achieve modularity: If we end up finding React too slow, even with [planned 2019 improvements](https://reactjs.org/blog/2018/11/27/react-16-roadmap.html), there are plenty of others view layers we can migrate to, without gutting our entire app. Next makes this somewhat trickier, but since it's mostly a light wrapper around Webpack, there is essentially no Next-specific code (just a bit in pages/_app.js and pages/_document.js). Migrating from Next won't be an issue, we would just lose some of the tooling benefits. 8. Typescript: static typing, syntax more familiar to OO-language devs (interfaces, types, classes). 9. Really amazing debug, tooling. React debug tools natively included in Chrome for instance. First class support for JSX (React-wrapped HTML) in popular IDE's, most obviously Visual Studio Code. ## Tech TL;DR; Mainly React. React should take about a day to learn well enough to make contributions. Guide: https://reactjs.org/docs/introducing-jsx.html. ```jsx; # Renders Hello World; # Biggest annoyance (may go away in 2019) is that ""class"" is not a valid tag (reserved by React); export default function SomePage() {; const name = 'Alex'. # Renders ""Hello Alex""; return (; <div className='some-class'> Hello {name} </div>; ); }; ```. ## Challenges; 1. Auth ; Authentication is tricky, but not for any reason specific to React, Next, Node. Server-side rendered apps tie the web app to the resource server; as such it's easier to hide sensitive information. . Mobile and desktop apps have dealt with this for 2 decades. We should build a robust infrastructure, and not one that requires server-rendered web pages for security. Currently it seems Auth0 may not be the best choice: it does not interface for us with third-party API's; requires us to either insecurely store 3rd party access tokens (with at least 1 extra round trip), or altogether proxy all third-party requests through our own resource server..",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931:5648,Guid,Guide,5648,https://hail.is,https://github.com/hail-is/hail/pull/4931,1,['Guid'],['Guide']
Usability,la:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$v,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:9380,Simpl,Simplify,9380,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,la:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at ,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:10348,Simpl,Simplify,10348,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,la:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$$anonfun$is$hai,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:10578,Simpl,Simplify,10578,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,la:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$s,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:9465,Simpl,Simplify,9465,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,la:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at ,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:10433,Simpl,Simplify,10433,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,la:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$s,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:8497,Simpl,Simplify,8497,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,la:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$v,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:8412,Simpl,Simplify,8412,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,la:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); a,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:8587,Simpl,Simplify,8587,https://hail.is,https://github.com/hail-is/hail/issues/8338,2,['Simpl'],['Simplify']
Usability,la:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:10523,Simpl,Simplify,10523,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,"lar rules apply to column keys and other operations where sensible. When promoting a BlockMatrix to a KeyedBlockMatrix, the keys are set to None. A BlockMatrix can be promoted to a KeyedBlockMatrix even if it's dimensions exceed Int.MaxValue; the simple rule is that you can't set keys on a dimension that is too large. This is convenient if you have a matrix where one dimension is huge but you still want keys on the other dimension. Checking keys helps ensure correctness, and I think the ability to set/drop keys on keyed matrices should be useful for linear algebra where a matrix operand comes un-keyed or you don't care about the keys on that operand. This key persistence is also natural when thinking about operations that add (unkeyed) scalars or vectors to keyed matrices (We'd later add optionally-keyed vectors as well, where keys are checked in vector addition, matrix/vector mult, vectorAddToEveryRow, etc). Keys are stored and checked on master, so for large dimensions users may want to rekey with simpler keys, via a map on the python side or with just indices. For simplicity, and since there's basically no additional overhead using an unkeyed KeyedBlockMatrix versus its underlying BlockMatrix, I think we should consider only having (optionally) keyed matrices exposed on the Python side (so a Python BlockMatrix is a Scala KeyedBlockMatrix, and you can do linear algebra numpy-style by just having no keys set). I plan to add writeKeyedBlockMatrix to MatrixTable in next step, with parameters to on whether to retain the keys (e.g., key_rows = true). On the Python side, this could then replace write_block_matrix rather than being in addition to it. Later, LocalMatrix and RowMatrix would follow the same pattern of optionally keyed versions in Scala, with a common Matrix and KeyedMatrix abstraction. And in Python users would just have Matrix backed by KeyedMatrix on the Scala side. PS. In the filters, I switched to names keepRows and keepCols in KeyedBlockMatrix instead o",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2718:1366,simpl,simpler,1366,https://hail.is,https://github.com/hail-is/hail/pull/2718,1,['simpl'],['simpler']
Usability,"latest/dev/iotroborunner-welcome.html</a></li>; <li>api-change:<code>quicksight</code>: [<code>botocore</code>] This release adds the following: 1) Asset management for centralized assets governance 2) QuickSight Q now supports public embedding 3) New Termination protection flag to mitigate accidental deletes 4) Athena data sources now accept a custom IAM role 5) QuickSight supports connectivity to Databricks</li>; <li>api-change:<code>sagemaker</code>: [<code>botocore</code>] Added DisableProfiler flag as a new field in ProfilerConfig</li>; <li>api-change:<code>servicecatalog</code>: [<code>botocore</code>] This release 1. adds support for Principal Name Sharing with Service Catalog portfolio sharing. 2. Introduces repo sourced products which are created and managed with existing SC APIs. These products are synced to external repos and auto create new product versions based on changes in the repo.</li>; <li>api-change:<code>ssm-sap</code>: [<code>botocore</code>] AWS Systems Manager for SAP provides simplified operations and management of SAP applications such as SAP HANA. With this release, SAP customers and partners can automate and simplify their SAP system administration tasks such as backup/restore of SAP HANA.</li>; <li>api-change:<code>stepfunctions</code>: [<code>botocore</code>] Update stepfunctions client to latest version</li>; <li>api-change:<code>transfer</code>: [<code>botocore</code>] Adds a NONE encryption algorithm type to AS2 connectors, providing support for skipping encryption of the AS2 message body when a HTTPS URL is also specified.</li>; </ul>; <h1>1.26.12</h1>; <ul>; <li>api-change:<code>amplify</code>: [<code>botocore</code>] Adds a new value (WEB_COMPUTE) to the Platform enum that allows customers to create Amplify Apps with Server-Side Rendering support.</li>; <li>api-change:<code>appflow</code>: [<code>botocore</code>] AppFlow simplifies the preparation and cataloging of SaaS data into the AWS Glue Data Catalog where your data can be dis",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12498:4596,simpl,simplified,4596,https://hail.is,https://github.com/hail-is/hail/pull/12498,2,['simpl'],['simplified']
Usability,"ld be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI5Nzc0NDQwMi1iNzEyLTQ5NjMtYWQ0Zi01YjFhZWZmOTcwZDciLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6Ijk3NzQ0NDAyLWI3MTItNDk2My1hZDRmLTViMWFlZmY5NzBkNyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""97744402-b712-4963-ad4f-5b1aeff970d7"",""prPublicId"":""97744402-b712-4963-ad4f-5b1aeff970d7"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.2"",""to"":""41.0.3""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[471,551,471],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13365:4022,Learn,Learn,4022,https://hail.is,https://github.com/hail-is/hail/pull/13365,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"leOnce$class.toArray(TraversableOnce.scala:285); at scala.collection.AbstractTraversable.toArray(Traversable.scala:104); at is.hail.utils.richUtils.RichIterable.toFastIndexedSeq(RichIterable.scala:83); at is.hail.table.Table.keyBy(Table.scala:419); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:498); at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); at py4j.Gateway.invoke(Gateway.java:280); at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); at py4j.commands.CallCommand.execute(CallCommand.java:79); at py4j.GatewayConnection.run(GatewayConnection.java:214); at java.lang.Thread.run(Thread.java:748); ```; Pipeline's a lot of steps but fairly simple:; ```; keys = ('transcript', 'gene', 'canonical'); po_ht = po_ht.repartition(n_partitions).persist(). # Getting classic LoF annotations (no LOFTEE); classic_lof_annotations = hl.literal({'stop_gained', 'splice_donor_variant', 'splice_acceptor_variant'}); lof_ht_classic = po_ht.filter(classic_lof_annotations.contains(po_ht.annotation) &; ((po_ht.modifier == 'HC') | (po_ht.modifier == 'LC'))); lof_ht_classic = collapse_lof_ht(lof_ht_classic, keys); lof_ht_classic = lof_ht_classic.rename({x: f'{x}_classic' for x in list(lof_ht_classic.row_value)}). # Getting classic LoF annotations (with LOFTEE); lof_ht_classic_hc = po_ht.filter(classic_lof_annotations.contains(po_ht.annotation) & (po_ht.modifier == 'HC')); lof_ht_classic_hc = collapse_lof_ht(lof_ht_classic_hc, keys); lof_ht_classic_hc = lof_ht_classic_hc.rename({x: f'{x}_classic_hc' for x in list(lof_ht_classic_hc.row_value)}). # Getting all LoF annotations (LOFTEE HC + new splice variants); lof_ht = po_ht.filter(po_ht.modifier == 'HC'); po",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4314:1326,simpl,simple,1326,https://hail.is,https://github.com/hail-is/hail/issues/4314,1,['simpl'],['simple']
Usability,leOnce.scala:157); at scala.collection.AbstractIterator.foldLeft(Iterator.scala:1334); at scala.collection.TraversableOnce$class.fold(TraversableOnce.scala:212); at scala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChi,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7338,Simpl,Simplify,7338,https://hail.is,https://github.com/hail-is/hail/issues/8338,3,"['Simpl', 'simpl']","['Simplify', 'simplifyMatrix']"
Usability,lifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:19); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.expr.ir.Optimize$.is$hail$expr$ir$Optimize$$runOpt$1(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply$mcV$sp(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply(Optimize.scala:21); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply(Optimize.scala:21); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.expr.ir.Optimize$.apply(Optimize.scala:20); at is.hail.expr.ir.lowering.LoweringPipeline.apply(L,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:11680,Simpl,Simplify,11680,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,"ll available jobs; * By querying Batch api, or Kubernetes directly; 4d: Receive current status of 1 job; 4e: Authentication; 4f: Polish (longest step): make interacting with batch achievable within perceived 16ms.; * goal: subscribe to events in web socket; * may want to save user job state in a Hail-controlled database (possible to use Firebase or Mongo, may prefer relational db, maybe Postgres or MySQL).; 4other: Figure out state question (sufficient to use Kubernetes); 5. Basic notebook interface.; 6. Connect websocket logic (non-GraphQL); 7. Authenticate web socket via Oauth2; 8. Incorporate GraphQL subscriptions (first: GitHub API); 9. Write tests; 10. Mock GraphQL endpoints; 11. Integrate web and api server bits into CI (maybe should be prioritized earlier...I prefer to get draft of major functions done first; am new to writing tests for React/Node). ## Near-term goals (<= 6 mo); 1. Upload, download; 2. Launch clusters, pay for them; 3. ?. ## Longer-term goals; 1. Much simpler interface to Hail. I would like steps that can be performed without programming to be done so. I would prefer fasta->variant filtering to be done as in Bystro (at least from the interface standpoint), i.e without opening up a notebook. Common analyses pipelines should also be possible without any interaction with a python notebook: GWAS, rare-variant (SKAT) analyses have, it seems, relatively few permutations. Those should be behind UI primitives. At each stage of a ; 2. Social network bits: users should be able to share job state with other users (requested by Bystro users on 22q consortium project) at the least.; 3. Record job state using something like Merkle tree. Checkout state. Aka ""blockchain""; 4. Cooperative analysis: provide system for people to validate analyses; ; Basic idea: . 1) People donate computational resources for ad-hoc heterogenous clusters. ; 2) People donate intellectual capital. Re-run analyses without the full available code. See if they can replicate (not p-valu",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931:8088,simpl,simpler,8088,https://hail.is,https://github.com/hail-is/hail/pull/4931,1,['simpl'],['simpler']
Usability,"llel Plot example with output_backend=&quot;webgl&quot; not working</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11713"">#11713</a> [component: docs] Documentation builds are failing in CI</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11644"">#11644</a> [component: bokehjs] Actually fix clipping in SVG <code>&lt;text&gt;</code> nodes</li>; </ul>; </li>; <li>; <p>tasks:</p>; <ul>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11617"">#11617</a> [component: docs] Update Team link in footer</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11658"">#11658</a> [component: build] Support &quot;pip install&quot; from sdist</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11618"">#11618</a> [component: tests] Reduce Tornado imports</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11628"">#11628</a> [component: docs] Correct path in dev guide server instructions</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11652"">#11652</a> [component: build] Update bokehjs' dependencies</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11668"">#11668</a> [component: docs] Add information about mathjax bundle</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11681"">#11681</a> [NO SQUASH] Batch of 3.0 -&gt; 2.4 backports</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11712"">#11712</a> [component: tests] Upgrade baselines to Chrome 94</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11722"">#11722</a> [component: tests] Update visual baselines on MacOS</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11724"">#11724</a> [NO SQUASH] More 3.0 -&gt; 2.4 backports</li>; </ul>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <de",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11540:5696,guid,guide,5696,https://hail.is,https://github.com/hail-is/hail/pull/11540,1,['guid'],['guide']
Usability,"long it takes `gcloud storage ls`. There are two improvements:. 1. Use `bounded_gather2`. The use of a semaphore in `bounded_gather2`, which is missing from `bounded_gather`, allows it to be used recursively. In particular, suppose we had a semaphore of; 50. The outer `bounded_gather2` might need 20 slots to run its 20 paths in parallel. That leaves 30 slots of parallelism left over for its children. By passing the semaphore down, we let our children optimistically use some of that excess parallelism. 2. If we happen to have the `StatResult` for a particular object, we should never again look it up. In particular, getting the `StatResult` for every file in a directory can be done in O(1) requests. Getting the `StatResult` for each of those files individually (using their full paths) is necessarily O(N). If there was at least one glob and also there are no `suffix_components`, then we can use the `StatResult`s that we learned when checking the glog pattern. The latter point is perhaps a bit more clear with examples:. 1. `gs://foo/bar/baz`. Since there are no globs, we can make exactly one API request to list `gs://foo/bar/baz`. 2. `gs://foo/b*r/baz`. In this case, we must make one API request to list `gs://foo/`. This gives us a list of paths under that prefix. We check each path for conformance to the glob pattern `gs://foo/b*r`. For any path that matches, we must then list `<the matching path>/baz` which may itself be a directory containing files. Overall we make O(1) API requests to do the glob and then O(K) API requests to get the final `StatResult`s, where K is the number of paths matching the glob pattern. 3. `gs://foo/bar/b*z`. In this case, we must make one API request to list `gs://foo/bar/`. In `main`, we then throw away the `StatResult`s we got from that API request! Now we have to make O(K) requests to recover those `StatResult`s for all K paths that match the glob pattern. This PR just caches the `StatResult`s of the most recent globbing. If there is no s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13253:1138,clear,clear,1138,https://hail.is,https://github.com/hail-is/hail/pull/13253,1,['clear'],['clear']
Usability,"m>Sourced from <a href=""https://github.com/python/importlib_resources/blob/main/CHANGES.rst"">importlib-resources's changelog</a>.</em></p>; <blockquote>; <h1>v5.9.0</h1>; <ul>; <li><a href=""https://github-redirect.dependabot.com/python/importlib_resources/issues/228"">#228</a>: <code>as_file</code> now also supports a <code>Traversable</code>; representing a directory and (when needed) renders the; full tree to a temporary directory.</li>; </ul>; <h1>v5.8.1</h1>; <ul>; <li><a href=""https://github-redirect.dependabot.com/python/importlib_resources/issues/253"">#253</a>: In <code>MultiplexedPath</code>, restore expectation that; a compound path with a non-existent directory does not; raise an exception.</li>; </ul>; <h1>v5.8.0</h1>; <ul>; <li><a href=""https://github-redirect.dependabot.com/python/importlib_resources/issues/250"">#250</a>: Now <code>Traversable.joinpath</code> provides a concrete; implementation, replacing the implementation in <code>.simple</code>; and converging with the behavior in <code>MultiplexedPath</code>.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python/importlib_resources/commit/31102947fd9babef636d3b82c2a5d58883f9c1f5""><code>3110294</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python/importlib_resources/issues/255"">#255</a> from python/feature/228-directory-of-resources</li>; <li><a href=""https://github.com/python/importlib_resources/commit/bac6e8e3e6c681d923e1ec78b6f670cee0883ea3""><code>bac6e8e</code></a> Extract function for _is_present_dir.</li>; <li><a href=""https://github.com/python/importlib_resources/commit/9afeb056dfabf8c8cc497cddbabe9ebcd70ff82d""><code>9afeb05</code></a> Merge branch 'main' into feature/228-directory-of-resources</li>; <li><a href=""https://github.com/python/importlib_resources/commit/b8da8446d72b6dbaa34a8fa0f6d0dae238bf00f6""><code>b8da844</code></a> Merge pull request <a href=""https://github-redirect.dependabot.c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12141:1103,simpl,simple,1103,https://hail.is,https://github.com/hail-is/hail/pull/12141,1,['simpl'],['simple']
Usability,"more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3YTljMjVmNy0wMTBmLTQxNmItYjc0OS1jNzFkY2I4YjY5YjgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjdhOWMyNWY3LTAxMGYtNDE2Yi1iNzQ5LWM3MWRjYjhiNjliOCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/e7c92c7b-5282-49ea-940f-7a5797e2a45a?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/e7c92c7b-5282-49ea-940f-7a5797e2a45a?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""7a9c25f7-010f-416b-b749-c71dcb8b69b8"",""prPublicId"":""7a9c25f7-010f-416b-b749-c71dcb8b69b8"",""dependencies"":[{""name"":""orjson"",""from"":""3.9.7"",""to"":""3.9.15""}],""packageManager"":""pip"",""projectPublicId"":""e7c92c7b-5282-49ea-940f-7a5797e2a45a"",""projectUrl"":""https://app.snyk.io/org/danking/project/e7c92c7b-5282-49ea-940f-7a5797e2a45a?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-ORJSON-6276643""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[661],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Relative Path Traversal](https://learn.snyk.io/lesson/directory-traversal/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14361:3127,Learn,Learn,3127,https://hail.is,https://github.com/hail-is/hail/pull/14361,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,mplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.exp,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:8709,Simpl,Simplify,8709,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,mplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$si,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:9677,Simpl,Simplify,9677,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,mplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.colle,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:8815,Simpl,Simplify,8815,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,mplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$sim,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:9783,Simpl,Simplify,9783,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,mplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:19); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.expr.ir.Optimize$.is$hail$expr$ir$Optimize$$runOpt$1(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply$mcV$sp(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply(Optimize.scala:21); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply(Optimize.scala:21); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.expr.ir.Optimize$.apply(Optimize.scala:20); at is.hail.expr.ir.lowering.LoweringPip,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:11664,Simpl,Simplify,11664,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,"ncy, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIwMjJhZDMzNS1kYzBkLTQxZWYtYmRjYi03ZTFkODQwNWJhYTYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjAyMmFkMzM1LWRjMGQtNDFlZi1iZGNiLTdlMWQ4NDA1YmFhNiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""022ad335-dc0d-41ef-bdcb-7e1d8405baa6"",""prPublicId"":""022ad335-dc0d-41ef-bdcb-7e1d8405baa6"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.1"",""to"":""41.0.2""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-5777683""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[763],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13247:3192,Learn,Learn,3192,https://hail.is,https://github.com/hail-is/hail/pull/13247,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"nd a `dict<str, int>`, the values are stored in the array and the names are stored in a separate dictionary mapping names to their indices; 2. a `dict<str, T>`, the name-value pairs are stored as dictionary key-value pairs; 3. a `struct{name1: T, name2: T, ... nameN: T}`, the name-value pairs are stored as field name, field string pairs. The third option is the most space efficient: the type stores the field names and there is no bookkeeping overhead per-set-of-named-values. The first two options repeat the field names for each occurrence (in particular, consider a Table field or MatrixTable entry-indexed field). The first two options needlessly encode the length (which is statically known). The third option is the most access-time-efficient: the offset of any named-value is known at hail compile time. The first two options require a logarithmic search of hail's dictionary tree representation. The third option is more user-friendly for accessing: `x.name`. The first is the least user-friendly: `x[indices[""name""]]`. The first and third options are the most cache-friendly for homogenous operations. The first uses `ArrayExpression.map`, so code size is `O(CODE)`. The third option's code size is `O(CODE * #VALUES)` because structs have no `map`-like primitive. The third option is also not user-friendly for homogenous operations (the user must repeat the code for each name-value pair). The third is the most self-documenting option. The number of fields and their names are visible in `ds.describe()`. The first is the next best because the dictionary is likely a global field that can be viewed with `x.indices.show()`. ---. ## Phase 1; Implement a new virtual type `tstaticdict<T, name1, name2, ..., nameN>` who's physical type is `PStruct` with N fields. These changes span Scala and Python. Implement `map` and `__getitem__` on `StaticDictExpression`s. `map` is implemented by code duplication. ## Phase 2; Implement a new physical type that implements homogenous operations wit",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6881:1093,user-friendly,user-friendly,1093,https://hail.is,https://github.com/hail-is/hail/issues/6881,1,['user-friendly'],['user-friendly']
Usability,"ne direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhYmU2OWI5ZC1kMzViLTQ1Y2ItYWY2NS04ZDEwN2YxZWMzZmMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImFiZTY5YjlkLWQzNWItNDVjYi1hZjY1LThkMTA3ZjFlYzNmYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""abe69b9d-d35b-45cb-af65-8d107f1ec3fc"",""prPublicId"":""abe69b9d-d35b-45cb-af65-8d107f1ec3fc"",""dependencies"":[{""name"":""cryptography"",""from"":""40.0.2"",""to"":""41.0.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-5663682""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lessons/redos/javascript/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13139:3162,Learn,Learn,3162,https://hail.is,https://github.com/hail-is/hail/pull/13139,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ne direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiYWUwMDM5My05NGUzLTRhNjYtYTE5Ni0xMjUwZDg0ZGZiZDgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImJhZTAwMzkzLTk0ZTMtNGE2Ni1hMTk2LTEyNTBkODRkZmJkOCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""bae00393-94e3-4a66-a196-1250d84dfbd8"",""prPublicId"":""bae00393-94e3-4a66-a196-1250d84dfbd8"",""dependencies"":[{""name"":""cryptography"",""from"":""42.0.2"",""to"":""42.0.4""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6261585""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [NULL Pointer Dereference](https://learn.snyk.io/lesson/null-dereference/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14343:3154,Learn,Learn,3154,https://hail.is,https://github.com/hail-is/hail/pull/14343,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ne direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJjOTM3MTIxYy1lZTM3LTQ2ZmMtYTcxMC04MWY4YzdhZmUyN2IiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImM5MzcxMjFjLWVlMzctNDZmYy1hNzEwLTgxZjhjN2FmZTI3YiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""c937121c-ee37-46fc-a710-81f8c7afe27b"",""prPublicId"":""c937121c-ee37-46fc-a710-81f8c7afe27b"",""dependencies"":[{""name"":""cryptography"",""from"":""40.0.2"",""to"":""41.0.0""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-5663682""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lessons/redos/javascript/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13136:3153,Learn,Learn,3153,https://hail.is,https://github.com/hail-is/hail/pull/13136,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ne direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmZWM3ZmQ2Ny0xZmE0LTRlNzEtODQ4Ni1hMDk5YThmYWM3NzgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImZlYzdmZDY3LTFmYTQtNGU3MS04NDg2LWEwOTlhOGZhYzc3OCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""fec7fd67-1fa4-4e71-8486-a099a8fac778"",""prPublicId"":""fec7fd67-1fa4-4e71-8486-a099a8fac778"",""dependencies"":[{""name"":""cryptography"",""from"":""40.0.2"",""to"":""41.0.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-5663682""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lessons/redos/javascript/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13138:3078,Learn,Learn,3078,https://hail.is,https://github.com/hail-is/hail/pull/13138,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,non$11.next(Iterator.scala:410); at scala.collection.Iterator$class.foreach(Iterator.scala:891); at scala.collection.AbstractIterator.foreach(Iterator.scala:1334); at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157); at scala.collection.AbstractIterator.foldLeft(Iterator.scala:1334); at scala.collection.TraversableOnce$class.fold(TraversableOnce.scala:212); at scala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mu,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7139,Simpl,Simplify,7139,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,"nt (PContainer and inheritors) and loadField (PBaseStruct and inheritors) have region-taking parameterizations, but these methods are always wrappers for non-region parameterization (e.g loadElement(region, offset, idx) = loadElement(offset, idx)), which makes sense since our ""offsets"" are now memory addresses in these cases (can be read without knowledge of the region that allocated that memory). I believe historically these were really offsets into a region, requiring that region to load it. I believe the remaining use case, now that these offsets are absolute, is to allow for off-heap allocation. This seems slightly odd for a load operation/getter, but I am probably not seeing the intention. Thanks!. daniel king: The history is correct. daniel king: You may want a load to do allocation if you're loading from a lazy datastructure, like a lazily decoded BGEN genotype row. Alex Kotlar: ok, thanks Dan, will keep that parameterization as is. daniel king: You should check-in with Tim though, not clear that load is the place to do this. Tim Poterba: Yep, agree with Dan here. This was the reason I pushed back on your pr to remove the region args in December. Patrick Schultz: How would a lazily decoded datastructure work? Would it mutate to record the fact that some lazy value has already been computed? Or would it recompute every time that value is accessed?. Patrick Schultz: We probably want the former for performance, but we should figure out what the memory management for that looks like. Patrick Schultz: It might be that the lazy datastructure should really own the region(s) it uses for on-demand computation, rather than getting them from its callers. Tim Poterba: hmmm, you're right. Passing the region on load is not sufficient -- that region needs to be the owning region for the original data. Alex Kotlar: Would we want to associate an instance of a PType with a single region?. Patrick Schultz: I think we have most of the infrastructure needed to have a hail type hol",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7826:1496,clear,clear,1496,https://hail.is,https://github.com/hail-is/hail/issues/7826,1,['clear'],['clear']
Usability,"o.txt&quot;</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/corydolphin/flask-cors/commit/91babb941e07a1f45636bdcb75675f13ce1503a2""><code>91babb9</code></a> Update Api docs for credentialed requests (<a href=""https://github-redirect.dependabot.com/corydolphin/flask-cors/issues/221"">#221</a>)</li>; <li><a href=""https://github.com/corydolphin/flask-cors/commit/522d98936f3995480fe3132b55415d74298d6790""><code>522d989</code></a> Release version 3.0.9 (<a href=""https://github-redirect.dependabot.com/corydolphin/flask-cors/issues/273"">#273</a>)</li>; <li><a href=""https://github.com/corydolphin/flask-cors/commit/67c4b2cc98ae87cf1fa7df4f97fd81b40c79b895""><code>67c4b2c</code></a> Fix request path normalization (<a href=""https://github-redirect.dependabot.com/corydolphin/flask-cors/issues/272"">#272</a>)</li>; <li><a href=""https://github.com/corydolphin/flask-cors/commit/5c6e05e996f10be1df1f2ad178560e54a2f82f1b""><code>5c6e05e</code></a> docs: Fix simple typo, garaunteed -&gt; guaranteed</li>; <li><a href=""https://github.com/corydolphin/flask-cors/commit/566aef21accd0a15cf127a41edbe14a40c80728c""><code>566aef2</code></a> Fixed over-indentation</li>; <li><a href=""https://github.com/corydolphin/flask-cors/commit/8a4e6e7057924d124a39ec08f446345bc19e4c5b""><code>8a4e6e7</code></a> Update changelog to give proper kudos to <a href=""https://github.com/juanmaneo""><code>@​juanmaneo</code></a> and <a href=""https://github.com/jdevera""><code>@​jdevera</code></a></li>; <li>See full diff in <a href=""https://github.com/corydolphin/flask-cors/compare/3.0.8...3.0.9"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=flask-cors&package-manager=pip&previous-version=3.0.8&new-version=3.0.9)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10464:2319,simpl,simple,2319,https://hail.is,https://github.com/hail-is/hail/pull/10464,1,['simpl'],['simple']
Usability,"o/en/stable/the_black_code_style/index.html#stability-policy"">stability policy</a>.</p>; <h3>Highlights</h3>; <ul>; <li><strong>Remove Python 2 support</strong> (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2740"">#2740</a>)</li>; <li>Introduce the <code>--preview</code> flag (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2752"">#2752</a>)</li>; </ul>; <h3>Style</h3>; <ul>; <li>Deprecate <code>--experimental-string-processing</code> and move the functionality under; <code>--preview</code> (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2789"">#2789</a>)</li>; <li>For stubs, one blank line between class attributes and methods is now kept if there's; at least one pre-existing blank line (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2736"">#2736</a>)</li>; <li>Black now normalizes string prefix order (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2297"">#2297</a>)</li>; <li>Remove spaces around power operators if both operands are simple (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2726"">#2726</a>)</li>; <li>Work around bug that causes unstable formatting in some cases in the presence of the; magic trailing comma (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2807"">#2807</a>)</li>; <li>Use parentheses for attribute access on decimal float and int literals (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2799"">#2799</a>)</li>; <li>Don't add whitespace for attribute access on hexadecimal, binary, octal, and complex; literals (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2799"">#2799</a>)</li>; <li>Treat blank lines in stubs the same inside top-level <code>if</code> statements (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2820"">#2820</a>)</li>; <li>Fix unstable formatting with semicolons and arithmetic expressions (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2817"">#281",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11468:8423,simpl,simple,8423,https://hail.is,https://github.com/hail-is/hail/pull/11468,1,['simpl'],['simple']
Usability,"ollow-redirects/follow-redirects/commit/8b347cbcef7c7b72a6e9be20f5710c17d6163c22""><code>8b347cb</code></a> Drop Cookie header across domains.</li>; <li><a href=""https://github.com/follow-redirects/follow-redirects/commit/6f5029ae1a0fdab4dc25f6379a5ee303c2319070""><code>6f5029a</code></a> Release version 1.14.6 of the npm package.</li>; <li><a href=""https://github.com/follow-redirects/follow-redirects/commit/af706bee57de954414c0bde0a9f33e62beea3e52""><code>af706be</code></a> Ignore null headers.</li>; <li><a href=""https://github.com/follow-redirects/follow-redirects/commit/d01ab7a5c5df3617c7a40a03de7af6427fdfac55""><code>d01ab7a</code></a> Release version 1.14.5 of the npm package.</li>; <li><a href=""https://github.com/follow-redirects/follow-redirects/commit/40052ea8aa13559becee5795715c1d45b1f0eb76""><code>40052ea</code></a> Make compatible with Node 17.</li>; <li><a href=""https://github.com/follow-redirects/follow-redirects/commit/86f7572f9365dadc39f85916259b58973819617f""><code>86f7572</code></a> Fix: clear internal timer on request abort to avoid leakage</li>; <li><a href=""https://github.com/follow-redirects/follow-redirects/commit/2e1eaf0218c5315a2ab27f53964d0535d4dafb51""><code>2e1eaf0</code></a> Keep Authorization header on subdomain redirects.</li>; <li><a href=""https://github.com/follow-redirects/follow-redirects/commit/2ad9e82b6277ae2104f7770e9ff1186cc6da29d4""><code>2ad9e82</code></a> Carry over Host header on relative redirects (<a href=""https://github-redirect.dependabot.com/follow-redirects/follow-redirects/issues/172"">#172</a>)</li>; <li><a href=""https://github.com/follow-redirects/follow-redirects/commit/77e2a581e1d1811674b7b74745a9c20a5b939488""><code>77e2a58</code></a> Release version 1.14.4 of the npm package.</li>; <li>Additional commits viewable in <a href=""https://github.com/follow-redirects/follow-redirects/compare/v1.14.1...v1.14.7"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11283:1384,clear,clear,1384,https://hail.is,https://github.com/hail-is/hail/pull/11283,2,['clear'],['clear']
Usability,"om/Azure/azure-sdk-for-python/issues/23659"">#23659</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/68dda72cab22a13014012c6b88137684180e941b""><code>68dda72</code></a> add app service api 2017 backward compatibility support (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23626"">#23626</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/1b23cab27114193fa8c19bfd47627093052d8212""><code>1b23cab</code></a> remove validate_authority (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23625"">#23625</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/a6a41458f5d15d47fe508629056b7c90185d4060""><code>a6a4145</code></a> refresh async oob (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23551"">#23551</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/95139f477dcda4de7f6fab56c17e7081f035595d""><code>95139f4</code></a> address arch board review feedback (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23539"">#23539</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/c344afe25cd36875d0fc0c7e4c03a942d2c19bf7""><code>c344afe</code></a> Add Azure Account extension version requirement to Identity README (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23518"">#23518</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/075e68abfb5d4ebe596c8e97fce0327cd0c1f6c2""><code>075e68a</code></a> check content (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23496"">#23496</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/a82e1ea612a3d3e9542812b04930fc8d797fce51""><code>a82e1ea</code></a> expose async client assertion (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23474"">#23474</a>)</li>; <li>A",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11752:3942,feedback,feedback,3942,https://hail.is,https://github.com/hail-is/hail/pull/11752,1,['feedback'],['feedback']
Usability,"om/pytest-dev/pytest-html/issues/244"">#244</a>) <a href=""https://github.com/lzhu666""><code>@​lzhu666</code></a></li>; <li>Trigger sorting for initial sort column (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/248"">#248</a>) <a href=""https://github.com/wanam""><code>@​wanam</code></a></li>; <li>Close opened resource. (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/235"">#235</a>) <a href=""https://github.com/krzysztof-pawlik-gat""><code>@​krzysztof-pawlik-gat</code></a></li>; <li>Keep sort preference for previously sorted columns (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/220"">#220</a>) <a href=""https://github.com/wanam""><code>@​wanam</code></a></li>; <li>Fix assets file naming to work across both *nix and windows (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/223"">#223</a>) <a href=""https://github.com/BeyondEvil""><code>@​BeyondEvil</code></a></li>; <li>Remove unused and undocumented markers (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/224"">#224</a>) <a href=""https://github.com/BeyondEvil""><code>@​BeyondEvil</code></a></li>; <li>Append a line break after captured log sections (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/217"">#217</a>) <a href=""https://github.com/borntyping""><code>@​borntyping</code></a></li>; <li>Handle when report title is stored as an environment variable (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/203"">#203</a>) <a href=""https://github.com/BeyondEvil""><code>@​BeyondEvil</code></a></li>; <li>Removed extraneous space from anchor tag (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/192"">#192</a>) <a href=""https://github.com/chardbury""><code>@​chardbury</code></a></li>; <li>Stop filtering out falsy environment values (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/18",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11524:6758,undo,undocumented,6758,https://hail.is,https://github.com/hail-is/hail/pull/11524,1,['undo'],['undocumented']
Usability,"on; defining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade; to Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy; credentials once the change has been fully deployed.</p>; <p>Users who do not use a proxy or do not supply their proxy credentials through; the user information portion of their proxy URL are not subject to this; vulnerability.</p>; <p>Full details can be read in our <a href=""https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q"">Github Security Advisory</a>; and <a href=""https://nvd.nist.gov/vuln/detail/CVE-2023-32681"">CVE-2023-32681</a>.</p>; </li>; </ul>; <h2>v2.30.0</h2>; <h2>2.30.0 (2023-05-03)</h2>; <p><strong>Dependencies</strong></p>; <ul>; <li>; <p>⚠️ Added support for urllib3 2.0. ⚠️</p>; <p>This may contain minor breaking changes so we advise careful testing and; reviewing <a href=""https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html"">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>; prior to upgrading.</p>; <p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>; </li>; </ul>; <h2>v2.29.0</h2>; <h2>2.29.0 (2023-04-26)</h2>; <p><strong>Improvements</strong></p>; <ul>; <li>Requests now defers chunked requests to the urllib3 implementation to improve; standardization. (<a href=""https://redirect.github.com/psf/requests/issues/6226"">#6226</a>)</li>; <li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=""https://redirect.github.com/psf/requests/issues/6356"">#6356</a>)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/psf/requests/blob/main/HISTORY.md"">requests's changelog</a>.</em></p>; <blockquote>; <h2>2.31.0 (2023-05-22)</h2>; <p><strong>Security</strong></p>; <ul>; <li>; <p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential; forwarding of <code>Proxy-Authorization</code> he",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13091:2043,guid,guide,2043,https://hail.is,https://github.com/hail-is/hail/pull/13091,6,['guid'],['guide']
Usability,"one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIyOTUzNDFmZi1lMjQ4LTRiOTItYTY1Yy1kYjJiZWQ3ZDQxMGQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjI5NTM0MWZmLWUyNDgtNGI5Mi1hNjVjLWRiMmJlZDdkNDEwZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""295341ff-e248-4b92-a65c-db2bed7d410d"",""prPublicId"":""295341ff-e248-4b92-a65c-db2bed7d410d"",""dependencies"":[{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.2""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-TORNADO-5537286""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[556],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Open Redirect](https://learn.snyk.io/lessons/open-redirect/python/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13066:3276,Learn,Learn,3276,https://hail.is,https://github.com/hail-is/hail/pull/13066,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"optimal order. This is advantageous for a couple of reasons:; - We want to list newer batches first; - For this query, the `batches` table has more applicables indexes; - We want the variable to order by to be in the primary key of the first; table so we can read the index in reverse. Before and after timings, collected by running the query 5 times, then using; profiles gathered by MySQL.; ```; +-------+---------------------------------------------------*; | query | description | ; +-------+---------------------------------------------------+; | 0 | All batches accessible to user `ci` |; | 1 | All batches accessible to user `ci` owned by `ci` |; +-------+---------------------------------------------------*. +-------+--------+--------------------------------------------------------+------------+------------+; | query | branch | timings | mean | stdev | ; +-------+--------+--------------------------------------------------------+------------+------------+; | 0 | main | 0.05894400,0.05207850,0.07067875,0.06281800,0.060250 | 0.06095385 | 0.00602255 |; | 1 | main | 14.1106150,12.2619323,13.8442850,12.0749633,14.0297822 | 13.2643156 | 0.90087263 |; +-------+--------+--------------------------------------------------------+------------+------------+; | 0 | PR | 0.04717375,0.04974350,0.04312150,0.04070850,0.04193650 | 0.04453675 | 0.00339069 |; | 1 | PR | 0.04423925,0.03967550,0.03935425,0.04056875,0.05286850 | 0.04334125 | 0.00507140 |; +-------+--------+--------------------------------------------------------+------------+------------+; ```. I'm hopeful that this won't introduce regressions for most use cases. While I; haven't benchmarked other queries, the MySQL client does feel more responsive; for a wider array of users. One notable exception is for the user `dking` who ; owns 3.7x more batches than has access to, of which all have been deleted. I; don't think this is a common enough use case to make this query even more; complicated than it already is. Resolves #14599",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14649:2844,responsiv,responsive,2844,https://hail.is,https://github.com/hail-is/hail/pull/14649,1,['responsiv'],['responsive']
Usability,or.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:5,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7555,Simpl,Simplify,7555,https://hail.is,https://github.com/hail-is/hail/issues/8338,3,"['Simpl', 'simpl']","['Simplify', 'simplifyMatrix']"
Usability,"orcing the global uniqueness of names as a basic invariant of the IR (typecheck could also check this invariant); * keep a string in the `Name`, but no longer require it to be unique. Instead it's just a suggestion for how to show the name in printouts, adding a uniqueifying suffix as needed. With `NormalizeNames` gone, this would let us preserve meaningful variable names further in the lowering pipeline.; * possibly keep other state in the `Name`, for example to allow a more efficient implementation of environments, similar to the `mark` state on `BaseIR`. This is obviously a large change, but there are only a few conceptual pieces (appologies for not managing to separate these out):; * attempt to minimize the number of locations in which the `Name` constructor is called, to make future refactorings easier; * add `freshName()`, which just wraps `genUID()`, returning a `Name`; * convert IR construction to use the convenience methods in `ir.package`, which take scala lambdas to represent blocks with bound variables, instead of manually creating new variable names; * replace uses of the magic constant variable names (`row`, `va`, `sa`, `g`, `global`) with constants (`TableIR.{rowName, globalName}`, `MatrixIR.{rowName, colName, entryName, globalName}`); * the above changes modified the names we use for bound variables in many places. That shouldn't matter, but it cought a couple bugs where it did.; * `NormalizeNames` optionally allows the IR to contain free variables. But it didn't do anything to ensure the newly generated variable names are distinct from any contained free variables. Thus it was possible to rename a bound variable to mistakenly capture a contained free variable. I've fixed that.; * `SimplifySuite` compared simplified IR with the pre-constructed expected IR, carefully controlling the `genUID` global state to make simplify generate exactly the names expected. I've replaced that by just comparing with the expected IR using a alpha-equivalence comparison.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14547:2300,Simpl,SimplifySuite,2300,https://hail.is,https://github.com/hail-is/hail/pull/14547,3,"['Simpl', 'simpl']","['SimplifySuite', 'simplified', 'simplify']"
Usability,"ormation: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJjMjFkYTE5Ny1lMDgzLTRiNzEtODc1Yi0xZmY0MjNhZWZmOWEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImMyMWRhMTk3LWUwODMtNGI3MS04NzViLTFmZjQyM2FlZmY5YSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""c21da197-e083-4b71-875b-1ff423aeff9a"",""prPublicId"":""c21da197-e083-4b71-875b-1ff423aeff9a"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.7"",""to"":""42.0.2""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6149518"",""SNYK-PYTHON-CRYPTOGRAPHY-6157248"",""SNYK-PYTHON-CRYPTOGRAPHY-6210214""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[509,581,451],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use of a Broken or Risky Cryptographic Algorithm](https://learn.snyk.io/lesson/insecure-hash/?loc&#x3D;fix-pr); 🦉 [Uncontrolled Resource Consumption (&#x27;Resource Exhaustion&#x27;)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [NULL Pointer Dereference](https://learn.snyk.io/lesson/null-dereference/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14236:4055,Learn,Learn,4055,https://hail.is,https://github.com/hail-is/hail/pull/14236,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ort](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""514b5ede-26fa-4106-8310-c2ceed7c08a9"",""prPublicId"":""514b5ede-26fa-4106-8310-c2ceed7c08a9"",""dependencies"":[{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.11.2""},{""name"":""setuptools"",""from"":""40.5.0"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-JUPYTERSERVER-6099119"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[531,null,null,null,509,384,494,539],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Access Control Bypass](https://learn.snyk.io/lesson/broken-access-control/?loc&#x3D;fix-pr); 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14365:6616,Learn,Learn,6616,https://hail.is,https://github.com/hail-is/hail/pull/14365,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ort](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""bc93468d-68e9-4fac-a335-f87261706f48"",""prPublicId"":""bc93468d-68e9-4fac-a335-f87261706f48"",""dependencies"":[{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.11.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-JUPYTERSERVER-6099119"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[531,null,null,null,509,384,494,539],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Access Control Bypass](https://learn.snyk.io/lesson/broken-access-control/?loc&#x3D;fix-pr); 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14211:6546,Learn,Learn,6546,https://hail.is,https://github.com/hail-is/hail/pull/14211,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ot all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIyMTAxMzNhYS03MjA2LTRmMzQtYTQ2OC1iYjY5YWJmYTUzZjEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjIxMDEzM2FhLTcyMDYtNGYzNC1hNDY4LWJiNjlhYmZhNTNmMSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""210133aa-7206-4f34-a468-bb69abfa53f1"",""prPublicId"":""210133aa-7206-4f34-a468-bb69abfa53f1"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.7"",""to"":""42.0.0""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6050294"",""SNYK-PYTHON-CRYPTOGRAPHY-6126975""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[479,616],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14200:3565,Learn,Learn,3565,https://hail.is,https://github.com/hail-is/hail/pull/14200,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"pendency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1NDMwZTFmMi0wNDZjLTQwNDctYmI3Mi1hZmJkZmM1MDViNGEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjU0MzBlMWYyLTA0NmMtNDA0Ny1iYjcyLWFmYmRmYzUwNWI0YSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""5430e1f2-046c-4047-bb72-afbdfc505b4a"",""prPublicId"":""5430e1f2-046c-4047-bb72-afbdfc505b4a"",""dependencies"":[{""name"":""certifi"",""from"":""2023.5.7"",""to"":""2023.7.22""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-5805047""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[471],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13304:3183,Learn,Learn,3183,https://hail.is,https://github.com/hail-is/hail/pull/13304,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"pendency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3Mzc3ZjFlZS1kMjJjLTQ0MDAtYmE1Yy04NGNkYWZmZWJmYzgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjczNzdmMWVlLWQyMmMtNDQwMC1iYTVjLTg0Y2RhZmZlYmZjOCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""7377f1ee-d22c-4400-ba5c-84cdaffebfc8"",""prPublicId"":""7377f1ee-d22c-4400-ba5c-84cdaffebfc8"",""dependencies"":[{""name"":""certifi"",""from"":""2023.5.7"",""to"":""2023.7.22""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-5805047""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[471],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13305:3166,Learn,Learn,3166,https://hail.is,https://github.com/hail-is/hail/pull/13305,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"pendency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJjMDQ5NzlhMC1iYWM3LTRiMjEtYmE0ZS02OWU5YjAzMTE5ZjAiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImMwNDk3OWEwLWJhYzctNGIyMS1iYTRlLTY5ZTliMDMxMTlmMCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/7fad328c-8d01-4768-8813-73d6c644e2d4?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/7fad328c-8d01-4768-8813-73d6c644e2d4?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""c04979a0-bac7-4b21-ba4e-69e9b03119f0"",""prPublicId"":""c04979a0-bac7-4b21-ba4e-69e9b03119f0"",""dependencies"":[{""name"":""certifi"",""from"":""2023.5.7"",""to"":""2023.7.22""}],""packageManager"":""pip"",""projectPublicId"":""7fad328c-8d01-4768-8813-73d6c644e2d4"",""projectUrl"":""https://app.snyk.io/org/danking/project/7fad328c-8d01-4768-8813-73d6c644e2d4?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-5805047""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[471],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13309:3168,Learn,Learn,3168,https://hail.is,https://github.com/hail-is/hail/pull/13309,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"pendency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJkY2E2ZDI1ZC1hZGM3LTRiNTctYWU3Zi0yNjExOTYzNTY5MmUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImRjYTZkMjVkLWFkYzctNGI1Ny1hZTdmLTI2MTE5NjM1NjkyZSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""dca6d25d-adc7-4b57-ae7f-26119635692e"",""prPublicId"":""dca6d25d-adc7-4b57-ae7f-26119635692e"",""dependencies"":[{""name"":""certifi"",""from"":""2023.5.7"",""to"":""2023.7.22""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-5805047""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[471],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13294:3175,Learn,Learn,3175,https://hail.is,https://github.com/hail-is/hail/pull/13294,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"pendency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlMjNiYjk0OC04YjdmLTQ5MzUtYTRkMi05ZWJmNjg4NjZlMmUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImUyM2JiOTQ4LThiN2YtNDkzNS1hNGQyLTllYmY2ODg2NmUyZSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""e23bb948-8b7f-4935-a4d2-9ebf68866e2e"",""prPublicId"":""e23bb948-8b7f-4935-a4d2-9ebf68866e2e"",""dependencies"":[{""name"":""certifi"",""from"":""2023.5.7"",""to"":""2023.7.22""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-5805047""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[471],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13316:3179,Learn,Learn,3179,https://hail.is,https://github.com/hail-is/hail/pull/13316,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"pendency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmYWJiOGYzZi1mMDFjLTQxMjktODJjNC1kZjQzMjRmZTU4YTIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImZhYmI4ZjNmLWYwMWMtNDEyOS04MmM0LWRmNDMyNGZlNThhMiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""fabb8f3f-f01c-4129-82c4-df4324fe58a2"",""prPublicId"":""fabb8f3f-f01c-4129-82c4-df4324fe58a2"",""dependencies"":[{""name"":""certifi"",""from"":""2023.5.7"",""to"":""2023.7.22""}],""packageManager"":""pip"",""projectPublicId"":""b72ce54d-5de3-48e5-a1d4-6f8967681a12"",""projectUrl"":""https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-5805047""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[471],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13296:3168,Learn,Learn,3168,https://hail.is,https://github.com/hail-is/hail/pull/13296,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,plify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:5,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:8523,Simpl,Simplify,8523,https://hail.is,https://github.com/hail-is/hail/issues/8338,6,"['Simpl', 'simpl']","['Simplify', 'simplifyMatrix']"
Usability,plify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anon,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:10459,Simpl,Simplify,10459,https://hail.is,https://github.com/hail-is/hail/issues/8338,3,"['Simpl', 'simpl']","['Simplify', 'simplifyMatrix']"
Usability,"populate the `aggregated_*_resources_by_date` tables.; 5. In 10-way parallelism (maxes out a 4 core database), randomly populate the tables for each chunk.; 6. From the last offset (original first running batch id), we sequentially process attempts in groups of 100. We take note of where we are at with tracking any updates to the attempts table (`attempts_time_msecs_diff`), populate the `aggregated_*_resources_by_date` tables, and then do a final catchup step where we apply any updates from `attempts_time_msecs_diff` for any attempts that we have already processed.; 7. Once we have reached the ""end"" of the attempts table, we lock all tables of interest especially the `attempts` table, and do one last final processing step before we add the new triggers that will auto-populate the `aggregated_*_resources_by_date` tables.; 8. Then we perform an audit and make sure things look correct. (I might need to change or eliminate the billing_project audit query because there are 5 batches with ~20 jobs that aren't perfectly tracked when we did the original switch over to the new billing tables).; 9. If there are any failures, we revert the triggers back to the original state. Also to note, is the new table for billing_projects is keyed by (billing_project, user) which will make queries much faster so they don't have to scan the batches aggregated resources table. I ran the migration successfully on a full test database and the audit was clean for jobs and batches except for the 5 batches that were running right when we started populating the original aggregated billing tables. . I'd like to gather all feedback and then will run the migration one more time to do a final test. Note, that most of the queries in the migration are not tested. The key thing to double check is the triggers will continue to insert data into the old tables and we get the end points correct (start is inclusive and end is exclusive) as unlike the previous migration, this set of updates is NOT idempotent.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11996:2607,feedback,feedback,2607,https://hail.is,https://github.com/hail-is/hail/pull/11996,1,['feedback'],['feedback']
Usability,"port for creating validator classes whose metaschema uses a different; dialect than its schemas. In other words, they may use draft2020-12 to define; which schemas are valid, but the schemas themselves use draft7 (or a custom; dialect, etc.) to define which <em>instances</em> are valid. Doing this is likely; not something most users, even metaschema authors, may need, but occasionally; will be useful for advanced use cases.</li>; </ul>; <h1>v4.12.1</h1>; <ul>; <li>Fix some stray comments in the README.</li>; </ul>; <h1>v4.12.0</h1>; <ul>; <li>Warn at runtime when subclassing validator classes. Doing so was not; intended to be public API, though it seems some downstream libraries; do so. A future version will make this an error, as it is brittle and; better served by composing validator objects instead. Feel free to reach; out if there are any cases where changing existing code seems difficult; and I can try to provide guidance.</li>; </ul>; <h1>v4.11.0</h1>; <ul>; <li>Make the rendered README in PyPI simpler and fancier. Thanks Hynek (<a href=""https://github-redirect.dependabot.com/python-jsonschema/jsonschema/issues/983"">#983</a>)!</li>; </ul>; <h1>v4.10.3</h1>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-jsonschema/jsonschema/commit/420fc6bd9a3ecc4cd637ece97cb4b482b4d0d37e""><code>420fc6b</code></a> Minor verbiage tweak for protocols.</li>; <li><a href=""https://github.com/python-jsonschema/jsonschema/commit/8ce8250897e1b2e9b1fea6825965dbc876ec1f4d""><code>8ce8250</code></a> Don't show type checker functions in TypeChecker reprs.</li>; <li><a href=""https://github.com/python-jsonschema/jsonschema/commit/6533d32cad0a65847979297c66f96f1dfbf1d68c""><code>6533d32</code></a> Tweak the colorscheme for code blocks in docs.</li>; <li><a href=""https://github.com/python-jsonschema/jsonschema/commit/792311dc26b5b6aec3b82930969f7eb2588a9fcd""><code>792311d</code></a>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12163:6049,simpl,simpler,6049,https://hail.is,https://github.com/hail-is/hail/pull/12163,1,['simpl'],['simpler']
Usability,pply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:19); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.expr.ir.Optimize$.is$hail$expr$ir$Optimize$$runOpt$1(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply$mcV$sp(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply(Optimize.scala:21); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply(Optimize.scala:21); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.exp,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:11559,Simpl,Simplify,11559,https://hail.is,https://github.com/hail-is/hail/issues/8338,3,"['Simpl', 'simpl']","['Simplify', 'simplifyValue']"
Usability,prefer IR over ApplyIR for simple functions,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4499:27,simpl,simple,27,https://hail.is,https://github.com/hail-is/hail/pull/4499,2,['simpl'],['simple']
Usability,pret$$anonfun$apply$1.apply(Interpret.scala:599); 	at is.hail.expr.ir.Interpret$$anonfun$apply$1.apply(Interpret.scala:599); 	at scala.Option.getOrElse(Option.scala:121); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:599); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:49); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:24); 	at is.hail.table.Table.count(Table.scala:257); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at sparklyr.Invoke.invoke(invoke.scala:139); 	at sparklyr.StreamHandler.handleMethodCall(stream.scala:123); 	at sparklyr.StreamHandler.read(stream.scala:66); 	at sparklyr.BackendHandler.channelRead0(handler.scala:51); 	at sparklyr.BackendHandler.channelRead0(handler.scala:4); 	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105); 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357); 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343); 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102); 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357); 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343); 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293); 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4513:4295,Simpl,SimpleChannelInboundHandler,4295,https://hail.is,https://github.com/hail-is/hail/issues/4513,1,['Simpl'],['SimpleChannelInboundHandler']
Usability,"project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlZjJlMTU4YS01YTI0LTQ2NjgtYjY2My1iMmYzYmNmZjM3NmUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImVmMmUxNThhLTVhMjQtNDY2OC1iNjYzLWIyZjNiY2ZmMzc2ZSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""ef2e158a-5a24-4668-b663-b2f3bcff376e"",""prPublicId"":""ef2e158a-5a24-4668-b663-b2f3bcff376e"",""dependencies"":[{""name"":""numpy"",""from"":""1.21.3"",""to"":""1.22.2""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-NUMPY-2321964"",""SNYK-PYTHON-NUMPY-2321966"",""SNYK-PYTHON-NUMPY-2321970""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown""],""priorityScoreList"":[null,null,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [NULL Pointer Dereference](https://learn.snyk.io/lessons/null-dereference/cpp/?loc&#x3D;fix-pr); 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lessons/redos/javascript/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12895:3677,Learn,Learn,3677,https://hail.is,https://github.com/hail-is/hail/pull/12895,3,"['Learn', 'learn']","['Learn', 'learn']"
Usability,prometheus was on a crash loop in Azure because it was failing to `mmap` a 0-byte file that the previous pod had created before getting shut down. Turns out this bug was fixed in a more recent version of prometheus so a simple upgrade fixed the issue. This is the most recent release.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11607:220,simpl,simple,220,https://hail.is,https://github.com/hail-is/hail/pull/11607,1,['simpl'],['simple']
Usability,"py<2', 'pandas>0.22,<0.24', 'parsimonious<0.9', 'PyJWT', 'python-json-logger==0.1.11', 'requests>=2.21.0,<2.21.1', 'scipy>1.2,<1.4', 'tabulate==0.8.3', 'slackclient==2.0.0', 'websocket-client', 'sklearn', 'tabulate', 'statsmodels', 'scikit-learn', 'hdbscan', 'matplotlib']; b""Double requirement given: tabulate (already in tabulate==0.8.3, name='tabulate')\nYou are using pip version 10.0.1, however version 19.1.1 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n""; Traceback (most recent call last):; File ""/etc/google-dataproc/startup-scripts/dataproc-initialization-script-0"", line 16, in safe_call; sp.check_output(args, stderr=sp.STDOUT); File ""/opt/conda/default/lib/python3.6/subprocess.py"", line 336, in check_output; **kwargs).stdout; File ""/opt/conda/default/lib/python3.6/subprocess.py"", line 418, in run; output=stdout, stderr=stderr); subprocess.CalledProcessError: Command '('pip', 'install', 'setuptools', 'mkl<2020', 'ipywidgets<8', 'jupyter_console<5', 'nbconvert<6', 'notebook<6', 'qtconsole<5', 'jupyter', 'tornado<6', 'lxml<5', 'google-cloud==0.32.0', 'ipython<7', 'jgscm<0.2', 'jupyter-spark', 'aiohttp', 'bokeh>1.1,<1.3', 'decorator<5', 'gcsfs==0.2.1', 'hurry.filesize==0.9', 'ipykernel<5', 'nest_asyncio', 'numpy<2', 'pandas>0.22,<0.24', 'parsimonious<0.9', 'PyJWT', 'python-json-logger==0.1.11', 'requests>=2.21.0,<2.21.1', 'scipy>1.2,<1.4', 'tabulate==0.8.3', 'slackclient==2.0.0', 'websocket-client', 'sklearn', 'tabulate', 'statsmodels', 'scikit-learn', 'hdbscan', 'matplotlib')' returned non-zero exit status 1. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/etc/google-dataproc/startup-scripts/dataproc-initialization-script-0"", line 66, in <module>; safe_call(*command); File ""/etc/google-dataproc/startup-scripts/dataproc-initialization-script-0"", line 18, in safe_call; print(e.output).decode(); AttributeError: 'NoneType' object has no attribute 'decode'; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6634:6898,learn,learn,6898,https://hail.is,https://github.com/hail-is/hail/issues/6634,1,['learn'],['learn']
Usability,python version doesn't give as much feedback,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1123:36,feedback,feedback,36,https://hail.is,https://github.com/hail-is/hail/issues/1123,2,['feedback'],['feedback']
Usability,"r both `outerRegion` and `eltRegion`. This lets us migrate to the new memory management one node at a time. When I talk about correctness, I mean that: no pointer is used after the region it points into has been freed; and, every region which is created is eventually freed. When reasoning about correctness, I consider `r.clear()` equivalent to `r.invalidate(); r.getNewRegion()`. As a demonstration of how this should work, this PR does convert `EmitStream.{toArray, write}` to use `eltRegion` correctly, which are used in the consumer nodes `ToArray`, `ArraySort`, `ToSet`, `ToDict`, and `GroupByKey`. Going forward, the plan is to convert the rest of the consumer and producer nodes, before converting the transformer nodes (which both consume and produce streams), as correctness can only be tested on pipelines in which all nodes have been converted. ### Semantics. A stream producer is passed two regions from its consumer: `outerRegion` and `eltRegion`. The node being emitted does not own either region, so may not free/clear them. The only thing a producer may do with either region is to put data in them, by writing directly to them or by giving/sharing ownership of a producer-owned region to them. Consumers' contract:; * The lifetime of `outerRegion` must contain the lifetime of the producer stream, i.e. `outerRegion` must be valid before the producer's `setup0` is called, and must still be valid when the producer's `close0` is called. Thus a producer may use `outerRegion` to store state that persists between elements, or it may use a region it owns itself.; * When the producer's `pull` is called, `eltRegion` must be valid (it does not need to be valid for setup/close). Producers' contract:; * When the consumer's `push` is called, the pushed value must be owned by either `outerRegion` or `eltRegion` (really `eltRegion`; using `outerRegion` is correct but unnecessarily extends the lifetime of the value). This can be accomplished by writing directly to the consumer's region",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9106:1650,clear,clear,1650,https://hail.is,https://github.com/hail-is/hail/pull/9106,1,['clear'],['clear']
Usability,"r. I think this is currently impossible due to lack of permissions, but we should either explicitly prohibit this or ensure our solution encompasses it. In particular, I am concerned OpenID could be used to grant permission for a GCP identity to write to S3 or ABS. . Pulling an image shouldn’t trigger substantial egress. In the first case, there are three kinds of possible egress:; 1. Egress to the Public Internet.; 2. Egress to a VM in a different Google region.; 3. Egress to a Google Service in a different Google region (e.g. uploading to a bucket in a different region). I believe (2) and (3) are charged equivalently. (1) is simply Internet egress pricing. In (3), I’m not sure who pays the egress from a VM to a bucket in a different region. I assume the VM owner. In all three cases, the destination’s location matters. For public Internet egress, we can use GeoIP to determine the region of the planet. I’m not sure if we can determine the region of (2) and (3). If we can’t, we should either prevent such traffic or we should charge the maximum egress. A final caveat is that we use Premium Networking. As a result, our traffic can use Google’s internal backbone. It’s not clear to me if this means that a packet from us-central to a public IP in Australia incurs just Internet egress or that *and* a region-to-region egress to pay for the use of GCP’s internal global backbone. The priority of various considerations:; 1. Top priority within this issue is to track and recover costs. Even if this means charging a flat fee across all possible kinds of egress. Even if that fee is substantially higher than the real cost to us.; 2. Second priority is to surface this information to the user. Simply providing, in the job page, the usage and cost of each resource for this job.; 3. Fine grained egress so that users can actually intentionally use it at cost or near cost to, for example, move data between clouds or regions. . ### Version. 0.2.120. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13428:1610,clear,clear,1610,https://hail.is,https://github.com/hail-is/hail/issues/13428,2,"['Simpl', 'clear']","['Simply', 'clear']"
Usability,"r. Users who rely on; defining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade; to Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy; credentials once the change has been fully deployed.</p>; <p>Users who do not use a proxy or do not supply their proxy credentials through; the user information portion of their proxy URL are not subject to this; vulnerability.</p>; <p>Full details can be read in our <a href=""https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q"">Github Security Advisory</a>; and <a href=""https://nvd.nist.gov/vuln/detail/CVE-2023-32681"">CVE-2023-32681</a>.</p>; </li>; </ul>; <h2>2.30.0 (2023-05-03)</h2>; <p><strong>Dependencies</strong></p>; <ul>; <li>; <p>⚠️ Added support for urllib3 2.0. ⚠️</p>; <p>This may contain minor breaking changes so we advise careful testing and; reviewing <a href=""https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html"">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>; prior to upgrading.</p>; <p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>; </li>; </ul>; <h2>2.29.0 (2023-04-26)</h2>; <p><strong>Improvements</strong></p>; <ul>; <li>Requests now defers chunked requests to the urllib3 implementation to improve; standardization. (<a href=""https://redirect.github.com/psf/requests/issues/6226"">#6226</a>)</li>; <li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=""https://redirect.github.com/psf/requests/issues/6356"">#6356</a>)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/psf/requests/commit/147c8511ddbfa5e8f71bbf5c18ede0c4ceb3bba4""><code>147c851</code></a> v2.31.0</li>; <li><a href=""https://github.com/psf/requests/commit/74ea7cf7a6a27a4eeb2ae24e162bcc942a6706d5""><code>74ea7cf</code></a> Merge pull request from GHSA-j8r2-6x86-q33q</li>; <li><a href=""https://github.com/psf/requests/commi",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13091:4596,guid,guide,4596,https://hail.is,https://github.com/hail-is/hail/pull/13091,6,['guid'],['guide']
Usability,r.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.ap,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:8642,Simpl,Simplify,8642,https://hail.is,https://github.com/hail-is/hail/issues/8338,3,"['Simpl', 'simpl']","['Simplify', 'simplifyMatrix']"
Usability,r.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:9610,Simpl,Simplify,9610,https://hail.is,https://github.com/hail-is/hail/issues/8338,3,"['Simpl', 'simpl']","['Simplify', 'simplifyMatrix']"
Usability,r.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.ap,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:8748,Simpl,Simplify,8748,https://hail.is,https://github.com/hail-is/hail/issues/8338,3,"['Simpl', 'simpl']","['Simplify', 'simplifyMatrix']"
Usability,r.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:9716,Simpl,Simplify,9716,https://hail.is,https://github.com/hail-is/hail/issues/8338,3,"['Simpl', 'simpl']","['Simplify', 'simplifyMatrix']"
Usability,r.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:19); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.expr.ir.Optimize$.is$hail$expr$ir$Optimize$$runOpt$1(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply$mcV$sp(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply(Optimize.scala:21); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply(Optimize.scala:21); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.expr.ir.Optimize$.apply(Optimize.scala:20); at is.hail.expr.ir.lowering.LoweringPipeline.apply(LoweringPipeline.scala:16); at is.hail.expr.ir.CompileAn,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:11735,Simpl,Simplify,11735,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,r.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:19); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.expr.ir.Optimize$.is$hail$expr$ir$Optimize$$runOpt$1(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply$mcV$sp(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply(Optimize.scala:21); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply(Optimize.scala:21); at is.hail,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:11520,Simpl,Simplify,11520,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,"r.buffer.max=1g,spark:spark.driver.extraJavaOptions=-Xss4M,spark:spark.executor.extraJavaOptions=-Xss4M,hdfs:dfs.replication=1,dataproc:dataproc.logging.stackdriver.enable=false,dataproc:dataproc.monitoring.stackdriver.enable=false,spark:spark.driver.memory=41g \; --initialization-actions=gs://hail-common/hailctl/dataproc/0.2.18/init_notebook.py,gs://gnomad-public/tools/inits/master-init.sh \; --metadata=^|||^WHEEL=gs://hail-common/hailctl/dataproc/0.2.18/hail-0.2.18-py3-none-any.whl|||PKGS=aiohttp|bokeh>1.1,<1.3|decorator<5|gcsfs==0.2.1|hurry.filesize==0.9|ipykernel<5|nest_asyncio|numpy<2|pandas>0.22,<0.24|parsimonious<0.9|PyJWT|python-json-logger==0.1.11|requests>=2.21.0,<2.21.1|scipy>1.2,<1.4|tabulate==0.8.3|slackclient==2.0.0|websocket-client|sklearn|tabulate|statsmodels|scikit-learn|hdbscan|matplotlib \; --master-machine-type=n1-highmem-8 \; --master-boot-disk-size=100GB \; --num-master-local-ssds=0 \; --num-preemptible-workers=0 \; --num-worker-local-ssds=0 \; --num-workers=2 \; --preemptible-worker-boot-disk-size=40GB \; --worker-boot-disk-size=40 \; --worker-machine-type=n1-standard-8 \; --zone=us-central1-b \; --initialization-action-timeout=20m \; --labels=creator=weisburd_broadinstitute_org \; --max-idle=12h; Starting cluster 'bw2'...; Waiting on operation [projects/seqr-project/regions/global/operations/46f1d37d-798a-3fc0-8f70-eac304448a08].; Waiting for cluster creation operation...; WARNING: For PD-Standard without local SSDs, we strongly recommend provisioning 1TB or larger to ensure consistently high I/O performance. See https://cloud.google.com/compute/docs/disks/performance for information on disk I/O performance.; Waiting for cluster creation operation...done.; ERROR: (gcloud.beta.dataproc.clusters.create) Operation [projects/seqr-project/regions/global/operations/46f1d37d-798a-3fc0-8f70-eac304448a08] failed: Initialization action failed. Failed action 'gs://hail-common/hailctl/dataproc/0.2.18/init_notebook.py', see output in: gs://dataproc-d919bdd",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6634:1230,learn,learn,1230,https://hail.is,https://github.com/hail-is/hail/issues/6634,1,['learn'],['learn']
Usability,raversableOnce$class.fold(TraversableOnce.scala:212); at scala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30);,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7470,Simpl,Simplify,7470,https://hail.is,https://github.com/hail-is/hail/issues/8338,2,['Simpl'],['Simplify']
Usability,"re than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1ZTRkMTU3Zi04YTdjLTRhNzctYTZlNC00YTdmNGU4Y2I0YzkiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjVlNGQxNTdmLThhN2MtNGE3Ny1hNmU0LTRhN2Y0ZThjYjRjOSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""5e4d157f-8a7c-4a77-a6e4-4a7f4e8cb4c9"",""prPublicId"":""5e4d157f-8a7c-4a77-a6e4-4a7f4e8cb4c9"",""dependencies"":[{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.2""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-TORNADO-5537286""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[384],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13323:3244,Learn,Learn,3244,https://hail.is,https://github.com/hail-is/hail/pull/13323,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"rect dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI2ZWQ3MzlmOS1mZjc4LTQzYzgtYWQwOC05MThjNmRhMWNlOTYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjZlZDczOWY5LWZmNzgtNDNjOC1hZDA4LTkxOGM2ZGExY2U5NiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""6ed739f9-ff78-43c8-ad08-918c6da1ce96"",""prPublicId"":""6ed739f9-ff78-43c8-ad08-918c6da1ce96"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.4"",""to"":""3.8.5""}],""packageManager"":""pip"",""projectPublicId"":""b72ce54d-5de3-48e5-a1d4-6f8967681a12"",""projectUrl"":""https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-5798483""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[658],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13284:3151,Learn,Learn,3151,https://hail.is,https://github.com/hail-is/hail/pull/13284,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"rect dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI4YTljZTU5Zi0yOTY3LTQ2MTQtOGE5YS1iY2M5YjU1ZWZkZGQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjhhOWNlNTlmLTI5NjctNDYxNC04YTlhLWJjYzliNTVlZmRkZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""8a9ce59f-2967-4614-8a9a-bcc9b55efddd"",""prPublicId"":""8a9ce59f-2967-4614-8a9a-bcc9b55efddd"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.4"",""to"":""3.8.5""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-5798483""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[658],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13282:3166,Learn,Learn,3166,https://hail.is,https://github.com/hail-is/hail/pull/13282,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"rect dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJjZmU2NDEwYi1jYjQ3LTQ2YzgtOTYwYy1kOWRlY2UxMjI5ZTIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImNmZTY0MTBiLWNiNDctNDZjOC05NjBjLWQ5ZGVjZTEyMjllMiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""cfe6410b-cb47-46c8-960c-d9dece1229e2"",""prPublicId"":""cfe6410b-cb47-46c8-960c-d9dece1229e2"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.4"",""to"":""3.8.5""}],""packageManager"":""pip"",""projectPublicId"":""b7c31419-ec34-40f1-8bc6-ad8303fb329b"",""projectUrl"":""https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-5798483""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[658],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13286:3157,Learn,Learn,3157,https://hail.is,https://github.com/hail-is/hail/pull/13286,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"rect dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlMjk5ZmU1Ni0wNGI1LTQ3MzEtYmUzYS03M2ZmYzgxZTZjYjgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImUyOTlmZTU2LTA0YjUtNDczMS1iZTNhLTczZmZjODFlNmNiOCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""e299fe56-04b5-4731-be3a-73ffc81e6cb8"",""prPublicId"":""e299fe56-04b5-4731-be3a-73ffc81e6cb8"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.4"",""to"":""3.8.5""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-5798483""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[658],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13283:3158,Learn,Learn,3158,https://hail.is,https://github.com/hail-is/hail/pull/13283,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"rect dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmZmEwNjUyZi1hMzc2LTQ0NmQtYWJjNC04NmJhMzUwNmY3MzMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImZmYTA2NTJmLWEzNzYtNDQ2ZC1hYmM0LTg2YmEzNTA2ZjczMyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/cbac91bd-aa95-4900-9a06-97404b268d6e?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/cbac91bd-aa95-4900-9a06-97404b268d6e?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""ffa0652f-a376-446d-abc4-86ba3506f733"",""prPublicId"":""ffa0652f-a376-446d-abc4-86ba3506f733"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.4"",""to"":""3.8.5""}],""packageManager"":""pip"",""projectPublicId"":""cbac91bd-aa95-4900-9a06-97404b268d6e"",""projectUrl"":""https://app.snyk.io/org/danking/project/cbac91bd-aa95-4900-9a06-97404b268d6e?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-5798483""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[658],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13285:3152,Learn,Learn,3152,https://hail.is,https://github.com/hail-is/hail/pull/13285,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"rect.dependabot.com/googleapis/python-logging/issues/434"">#434</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/googleapis/python-logging/commit/10727ef3c8cca7e20484e58e6afdc79e81a4d4c9""><code>10727ef</code></a> chore(main): release 3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/473"">#473</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/d86be6cf83c3f3b91c4fc0b2e0666b0ca1d7e248""><code>d86be6c</code></a> chore(deps): update dependency google-cloud-storage to v2.1.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/469"">#469</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544""><code>8a67b73</code></a> docs: update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3""><code>e0c5fc0</code></a> feat: trace improvements (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/450"">#450</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce""><code>97e32b6</code></a> fix: allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/444"">#444</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/a760e02371a55d6262e42de9e0222fffa2c7192b""><code>a760e02</code></a> feat: add json_fields extras argument for adding to jsonPayload (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/447"">",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:11824,guid,guide,11824,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['guid'],['guide']
Usability,remove learn more,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8851:7,learn,learn,7,https://hail.is,https://github.com/hail-is/hail/pull/8851,2,['learn'],['learn']
Usability,removed action and simplified rrm and grm,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3944:19,simpl,simplified,19,https://hail.is,https://github.com/hail-is/hail/pull/3944,2,['simpl'],['simplified']
Usability,ret.scala:599); 	at is.hail.expr.ir.Interpret$$anonfun$apply$1.apply(Interpret.scala:599); 	at scala.Option.getOrElse(Option.scala:121); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:599); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:49); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:24); 	at is.hail.table.Table.count(Table.scala:257); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at sparklyr.Invoke.invoke(invoke.scala:139); 	at sparklyr.StreamHandler.handleMethodCall(stream.scala:123); 	at sparklyr.StreamHandler.read(stream.scala:66); 	at sparklyr.BackendHandler.channelRead0(handler.scala:51); 	at sparklyr.BackendHandler.channelRead0(handler.scala:4); 	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105); 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357); 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343); 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102); 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357); 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343); 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293); 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267); 	at io.netty.channel.Abstra,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4513:4335,Simpl,SimpleChannelInboundHandler,4335,https://hail.is,https://github.com/hail-is/hail/issues/4513,1,['Simpl'],['SimpleChannelInboundHandler']
Usability,"rom v1 to v2.3.2 <a href=""https://github-redirect.dependabot.com/apache/commons-codec/issues/50"">#50</a>, <a href=""https://github-redirect.dependabot.com/apache/commons-codec/issues/56"">#56</a>.; Thanks to Dependabot.; o Update actions/setup-java from v1.4.0 to v1.4.1 <a href=""https://github-redirect.dependabot.com/apache/commons-codec/issues/57"">#57</a>.; Thanks to Dependabot.</p>; <p>For complete information on Apache Commons Codec, including instructions on how; to submit bug reports, patches, or suggestions for improvement, see the; Apache Commons Codec website:</p>; <p><a href=""https://commons.apache.org/proper/commons-codec/"">https://commons.apache.org/proper/commons-codec/</a></p>; <p>Download page: <a href=""https://commons.apache.org/proper/commons-codec/download_codec.cgi"">https://commons.apache.org/proper/commons-codec/download_codec.cgi</a></p>; <hr />; <pre><code> Apache Commons Codec 1.14 RELEASE NOTES; December 30 2019; </code></pre>; <p>The Apache Commons Codec package contains simple encoder and decoders for; various formats such as Base64 and Hexadecimal. In addition to these; widely used encoders and decoders, the codec package also maintains a</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/apache/commons-codec/commit/c89d2af770f05457fbefa5fb4713c888bf177fb2""><code>c89d2af</code></a> Prepare for 1.15 release</li>; <li><a href=""https://github.com/apache/commons-codec/commit/ba81ed5dc06661d931a4bb8f7abaa51ee5300396""><code>ba81ed5</code></a> Use gav=true for the maven central redirect</li>; <li><a href=""https://github.com/apache/commons-codec/commit/cb629f03516e21ba7daeb4dd9a7b5fe3c76fc841""><code>cb629f0</code></a> Update maven central badge</li>; <li><a href=""https://github.com/apache/commons-codec/commit/b8090b34914ef456a1262292b554c7a5e1e623e8""><code>b8090b3</code></a> Fix coverage badge to use the 'master' branch not the default 'trunk'",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12385:2525,simpl,simple,2525,https://hail.is,https://github.com/hail-is/hail/pull/12385,1,['simpl'],['simple']
Usability,"ry. The HTTP protocol is unchanged. The default port fort HTTP is; 80 and the default port for HTTPS 443, however any port may be used. There are currently four versions of TLS, the latest is TLS 1.3. All versions of; SSL are considered insecure. The OpenSSL library implements TLS. There are other implementations, such as; LibreSSL, but they implement roughly the same interface as OpenSSL. The TLS protocol defines both a scheme for the *encryption of messages* and for; the *authentication of parties*. The protocol defines authentication as; optional. In practice, at least one party presents authentication. For example,; public web servers authenticate themselves to clients but clients do not; reciprocate. ### Authentication; #### X.509 Certificates. TLS uses X.509 Certificates for authentication. X.509 is a rather complicated; standard. X.509 Certificates can be serialized in a variety of ways. We use the; Privacy-enhanced Electronic Mail (PEM) file format for serialization. PEM is; really simple. A file may contain multiple base64-encoded blobs each with a; header and footer of the form:. ```; -----BEGIN LABEL-----; ...; -----END LABEL-----; ```. where `LABEL` describes the data. We only use two labels: `CERTIFICATE` and; `PRIVATE KEY`. An X.509 Certificate is an unforgeable proof of identity. It usually is paired; with a private key that was used to digitally sign the certificate. In the; security literature, an authenticatable entity is usually called a; *principal*. Each principal should have a unique private key. In our system the; principals are both our services (e.g. `batch`, `batch-driver`) and any; non-serving clients (e.g. `test-batch`, `admin-pod`). A key and certificate are; generated ad nihilum by `openssl req -new`:. ```; openssl req -new \; -x509; -keyout key_file; -out cert_file; -newkey rsa:4096; -nodes; -subj /CN=example.com; -addext subjectAltName = DNS:www.example.com,DNS:foo.com; ```. The first three arguments are self-explanatory. I explain the",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8561:2593,simpl,simple,2593,https://hail.is,https://github.com/hail-is/hail/pull/8561,1,['simpl'],['simple']
Usability,"s no comparison: Angular takes months to know well, React days at worst. Also, by not buying into a full framework, we achieve modularity: If we end up finding React too slow, even with [planned 2019 improvements](https://reactjs.org/blog/2018/11/27/react-16-roadmap.html), there are plenty of others view layers we can migrate to, without gutting our entire app. Next makes this somewhat trickier, but since it's mostly a light wrapper around Webpack, there is essentially no Next-specific code (just a bit in pages/_app.js and pages/_document.js). Migrating from Next won't be an issue, we would just lose some of the tooling benefits. 8. Typescript: static typing, syntax more familiar to OO-language devs (interfaces, types, classes). 9. Really amazing debug, tooling. React debug tools natively included in Chrome for instance. First class support for JSX (React-wrapped HTML) in popular IDE's, most obviously Visual Studio Code. ## Tech TL;DR; Mainly React. React should take about a day to learn well enough to make contributions. Guide: https://reactjs.org/docs/introducing-jsx.html. ```jsx; # Renders Hello World; # Biggest annoyance (may go away in 2019) is that ""class"" is not a valid tag (reserved by React); export default function SomePage() {; const name = 'Alex'. # Renders ""Hello Alex""; return (; <div className='some-class'> Hello {name} </div>; ); }; ```. ## Challenges; 1. Auth ; Authentication is tricky, but not for any reason specific to React, Next, Node. Server-side rendered apps tie the web app to the resource server; as such it's easier to hide sensitive information. . Mobile and desktop apps have dealt with this for 2 decades. We should build a robust infrastructure, and not one that requires server-rendered web pages for security. Currently it seems Auth0 may not be the best choice: it does not interface for us with third-party API's; requires us to either insecurely store 3rd party access tokens (with at least 1 extra round trip), or altogether proxy all third",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931:5607,learn,learn,5607,https://hail.is,https://github.com/hail-is/hail/pull/4931,1,['learn'],['learn']
Usability,"s"">elasticsearch-spark-20_2.12's releases</a>.</em></p>; <blockquote>; <h2>Elasticsearch Hadoop 8.4.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html</a></p>; <h2>Elasticsearch Hadoop 8.4.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html</a></p>; <h2>Elasticsearch Hadoop 8.4.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html</a></p>; <h2>Elasticsearch Hadoop 8.4.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html</a></p>; <h2>Elasticsearch Hadoop 8.3.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html</a></p>; <h2>Elasticsearch Hadoop 8.3.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12358:1223,guid,guide,1223,https://hail.is,https://github.com/hail-is/hail/pull/12358,1,['guid'],['guide']
Usability,"s"">elasticsearch-spark-20_2.12's releases</a>.</em></p>; <blockquote>; <h2>Elasticsearch Hadoop 8.6.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html</a></p>; <h2>Elasticsearch Hadoop 8.5.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html</a></p>; <h2>Elasticsearch Hadoop 8.5.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html</a></p>; <h2>Elasticsearch Hadoop 8.5.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html</a></p>; <h2>Elasticsearch Hadoop 8.5.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/da4f3c3f209aea47d69c4faf90029a6933bd3a60""><code>da4f3c3</code></a> [DOCS] Add 8.5.3 release notes (<a href=""https://github-redirect.dependabot.com/elastic/elast",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12601:1222,guid,guide,1222,https://hail.is,https://github.com/hail-is/hail/pull/12601,1,['guid'],['guide']
Usability,"s"">elasticsearch-spark-20_2.12's releases</a>.</em></p>; <blockquote>; <h2>Elasticsearch Hadoop 8.6.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.1.html</a></p>; <h2>Elasticsearch Hadoop 8.6.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html</a></p>; <h2>Elasticsearch Hadoop 8.5.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html</a></p>; <h2>Elasticsearch Hadoop 8.5.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html</a></p>; <h2>Elasticsearch Hadoop 8.5.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html</a></p>; <h2>Elasticsearch Hadoop 8.5.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12623:1222,guid,guide,1222,https://hail.is,https://github.com/hail-is/hail/pull/12623,1,['guid'],['guide']
Usability,"s"">elasticsearch-spark-30_2.12's releases</a>.</em></p>; <blockquote>; <h2>Elasticsearch Hadoop 8.4.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html</a></p>; <h2>Elasticsearch Hadoop 8.4.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html</a></p>; <h2>Elasticsearch Hadoop 8.4.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html</a></p>; <h2>Elasticsearch Hadoop 8.4.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html</a></p>; <h2>Elasticsearch Hadoop 8.3.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html</a></p>; <h2>Elasticsearch Hadoop 8.3.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:1222,guid,guide,1222,https://hail.is,https://github.com/hail-is/hail/pull/12319,1,['guid'],['guide']
Usability,"s). [//]: # (snyk:metadata:{""prId"":""4c874ad7-563f-49cd-9773-8b9f1095e36c"",""prPublicId"":""4c874ad7-563f-49cd-9773-8b9f1095e36c"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""41.0.6""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-3315975"",""SNYK-PYTHON-CRYPTOGRAPHY-3316038"",""SNYK-PYTHON-CRYPTOGRAPHY-3316211"",""SNYK-PYTHON-CRYPTOGRAPHY-5663682"",""SNYK-PYTHON-CRYPTOGRAPHY-5777683"",""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750"",""SNYK-PYTHON-CRYPTOGRAPHY-5914629"",""SNYK-PYTHON-CRYPTOGRAPHY-6036192"",""SNYK-PYTHON-CRYPTOGRAPHY-6092044"",""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[554,704,509,454,616,584,479,509,509,509,509,589,509,691,399,479,399,539,479,616,519],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use After Free](https://learn.snyk.io/lesson/use-after-free/?loc&#x3D;fix-pr); 🦉 [Access of Resource Using Incompatible Type (&#x27;Type Confusion&#x27;)](https://learn.snyk.io/lesson/type-confusion/?loc&#x3D;fix-pr); 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14148:11808,Learn,Learn,11808,https://hail.is,https://github.com/hail-is/hail/pull/14148,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,s.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Sim,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:10594,Simpl,Simplify,10594,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,s.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.exp,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:8603,Simpl,Simplify,8603,https://hail.is,https://github.com/hail-is/hail/issues/8338,2,['Simpl'],['Simplify']
Usability,s.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); a,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:10539,Simpl,Simplify,10539,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,"s://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""12691d21-0395-41b3-80d2-f212830f66ea"",""prPublicId"":""12691d21-0395-41b3-80d2-f212830f66ea"",""dependencies"":[{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.7.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""},{""name"":""urllib3"",""from"":""1.26.17"",""to"":""1.26.18""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-URLLIB3-6002459""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[531,null,null,509,384,494,496],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Access Control Bypass](https://learn.snyk.io/lesson/broken-access-control/?loc&#x3D;fix-pr); 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13873:5967,Learn,Learn,5967,https://hail.is,https://github.com/hail-is/hail/pull/13873,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"se `test-database-instance` to create a `sql-test-instance-admin-config` that inherits the credentials from the production `database-server-config`, and then copies that within the test namespace to `database-server-config`. In this change, since we are creating the server ourselves, we can just replace these with a step that creates a `database-server-config` from scratch, and then uses that for the DB pod. Overall making these changes really gave me the heebie jeebies that the test and dev namespaces have all these credentials to the CloudSQL server. I'm glad this gets rid of that. ### Accessing the database server; We use the DB pod's service DNS name as the `host` so inside Kubernetes this Just Works. The one caveat is the CI pipeline in which we run migrations in batch jobs. Those jobs need a way to reach the DB pod. I achieve this with a NodePort and then use the job's K8s credentials to resolve the node and port that the DB is on. The code I've added to do this resolution feels a bit janky, wouldn't mind some feedback on that. In terms of security, if a user job was able to somehow resolve the address of a test db, they would still not have the credentials to access it, and this is currently also the case with the production database. Nevertheless, this does raise an action item that we should only allow traffic to the k8s and DB subnets for `network=private` jobs, but I think we should make that a separate PR. ### Database creation; In order to test this properly in a dev deploy, I needed to make some changes to `create_database.py`. In main, dev deploys can't create databases. I think they should be able to, and those operations should just be idempotent. When allowing dev deploys to create databases, I hit the `ALTER USER` lines in `create_database.py` which lock out any already-deployed application, which feels silly. Instead, I create the mysql user and create the corresponding secret iff the mysql username does not already exist. ### create_initial_acco",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13030:1447,feedback,feedback,1447,https://hail.is,https://github.com/hail-is/hail/pull/13030,1,['feedback'],['feedback']
Usability,see: https://hail.zulipchat.com/#narrow/stream/123010-Hail-0.2E2.20support/topic/Shuffle.20issues. Not clear exactly what's wrong but switching from the cartesian join syntax to the dict join syntax resolves the issue.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5707:103,clear,clear,103,https://hail.is,https://github.com/hail-is/hail/issues/5707,1,['clear'],['clear']
Usability,"service] make user cache thread-safe; - [ ] (@tpoterba) c315fcb0b1 [query-service] bugfix: preserve globals through a shuffle; - [ ] (@catoverdrive) 912c21f709 [shuffler] log ShuffleCodecSpec anytime it is created; - [x] (@daniel-goldstein) c2495837e7 [scala-lsm] bugfix: least key may equal greatest key; - [x] (@daniel-goldstein) 5fb3db703e [services] discovered new transient error; - [x] (@daniel-goldstein) 9cd0999938 [shuffler] more assertions in ShuffleClient; - [x] (@daniel-goldstein) a71a3c9b8c [shuffler] bugfix: shuffler needs a HailContext to decode loci; - [x] (@daniel-goldstein) 41b06aeaa8 [query-service] move hail.jar earlier in Dockerfile; - [x] (@daniel-goldstein) 8df4029698 [query-service] permit pod scaling and remove cpu limit; - [ ] (@catoverdrive) 0354e1f557 [query-service] simplify socket handling; - [x] (@jigold) 6690a4decc [batch] teach JVMJob where to find the hail configuration files; - [x] (@daniel-goldstein) ae2e3d2996 [query-service] switch to services team approved logging; - [ ] (@tpoterba) b18f86e647 [query-service] query workers need a hail context; - [ ] (@daniel-goldstein, @catoverdrive) 6d5d0b68af [query-service] use a UNIX Domain Socket for Py-Scala communication; - [ ] (@daniel-goldstein, @catoverdrive) 0d42df8b08 [query-service] run tests against query service; - [x] (@jigold) f9d361e686 [query-service] aiohttp.ClientSession must be created in async code; - [ ] (@cseed) c35f2e10e3 [query-service][hail][build.yaml] address miscellaneous comments from cotton; - [x] (@daniel-goldstein) 7f1b1363e9 [query-service] use two containers sharing an empty volume; - [x] (@daniel-goldstein) 2a8f23404a [query-service] in the service, log everything to stdout; - [x] (trivial) d8104a1dc4 [query-service] do not catch CancelledError; - [x] (trivial) efcb345185 [query-service] slightly more useful error message when socket dies; - [ ] (@tpoterba) f79c4023cf [shuffler] if we have an ExecuteContext, use it; - [x] (@daniel-goldstein,fyi: @tpoterba) 259f",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10100:1281,simpl,simplify,1281,https://hail.is,https://github.com/hail-is/hail/pull/10100,1,['simpl'],['simplify']
Usability,"shed to avoid using code generation abstractions (in this case, just factoring code into smaller functions), because they generate worse code.). The method is pretty simple. SNDArray shapes are now arrays of `SizeValue`, which is a sum type with cases `SizeValueDyn(Value[Long])` and `SizeValueStatic(Long)`. I don't think static sizes occur very often, but it was a simple addition. `SizeValue`s can be compared statically with `==`, or at runtime with `ceq`: the former is true only if we can prove statically that the two sizes must be equal, while the latter emits code to check equality at runtime, using static knowledge to elide dynamic checks where possible. The way we encode static knowledge that two sizes are equal is by using the same local variable to store both. The primary interface to introduce that static knowledge (other than using the same set of sizes to construct multiple SNDArrays), is the method `coerceToShape(cb: CodeBuilder, newShape: Seq[SizeValue]): SNDArrayValue`, which emits code to dynamically assert that `this.shape` agrees with `newShape`, then returns `this` with shape replaced by `newShape`. Thus, `a.coerceToShape(cb, newShape).shape == newShape` will always be true, preserving the static knowledge about the shape of `a`. As a simple example, `gemm` verifies its inputs with (simplifying to the case with no transposes); ```; val Seq(m, n) = C.shapes; val k = A.shapes(1); A.assertHasShape(cb, FastIndexedSeq(m, k), errMsg); B.assertHasShape(cb, FastIndexedSeq(k, n), errMsg); ```; If we call this with; ```; val m, n, k = \\ compute expected dim sizes. \\ emit dynamic size checks once; val A_ = A.coerceToShape(cb, IndexedSeq(m, k)); val B_ = B.coerceToShape(cb, IndexedSeq(k, n)); val C_ = C.coerceToShape(cb, IndexedSeq(m, n)). \\ this generates no new dynamic shape checks; SNDArray.gemm(cb, A, B, C); ```; then we can emit one set of runtime shape assertions, and further calls to methods with shape preconditions generate no new runtime assertions.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10783:1575,simpl,simple,1575,https://hail.is,https://github.com/hail-is/hail/pull/10783,2,['simpl'],"['simple', 'simplifying']"
Usability,simplified IRM toHailBlockMatrix,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2542:0,simpl,simplified,0,https://hail.is,https://github.com/hail-is/hail/pull/2542,2,['simpl'],['simplified']
Usability,simplified compiler interface,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3157:0,simpl,simplified,0,https://hail.is,https://github.com/hail-is/hail/pull/3157,2,['simpl'],['simplified']
Usability,simplified python normalization logic in pca,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2529:0,simpl,simplified,0,https://hail.is,https://github.com/hail-is/hail/pull/2529,2,['simpl'],['simplified']
Usability,simplify aggregators,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3570:0,simpl,simplify,0,https://hail.is,https://github.com/hail-is/hail/pull/3570,2,['simpl'],['simplify']
Usability,simplify error handling logic,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1888:0,simpl,simplify,0,https://hail.is,https://github.com/hail-is/hail/pull/1888,2,['simpl'],['simplify']
Usability,simplify index.html,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6047:0,simpl,simplify,0,https://hail.is,https://github.com/hail-is/hail/pull/6047,2,['simpl'],['simplify']
Usability,simplify scalar types in expression language,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/614:0,simpl,simplify,0,https://hail.is,https://github.com/hail-is/hail/issues/614,2,['simpl'],['simplify']
Usability,simplify type checking of entry_fields,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3778:0,simpl,simplify,0,https://hail.is,https://github.com/hail-is/hail/pull/3778,2,['simpl'],['simplify']
Usability,"stacked on #7446. This is the first step toward broad integration of the timer throughout the compiler. This gives us output like:; ```; 2019-11-06 18:44:11 root: INFO: Timer: all timings:; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- FoldConstants : 5.811ms, total 29.474ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ExtractIntervalFilters : 21.579ms, total 51.305ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- Simplify : 38.711ms, total 90.246ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ForwardLets : 58.138ms, total 148.873ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ForwardRelationalLets : 4.892ms, total 154.106ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- PruneDeadFields : 70.932ms, total 225.284ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- FoldConstants : 2.673ms, total 228.575ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ExtractIntervalFilters : 6.413ms, total 235.357ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- Simplify : 4.736ms, total 240.359ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ForwardLets : 38.152ms, total 278.793ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ForwardRelationalLets : 3.185ms, total 282.285ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- PruneDeadFields : 25.086ms, total 307.692ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAn",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7476:567,Simpl,Simplify,567,https://hail.is,https://github.com/hail-is/hail/pull/7476,1,['Simpl'],['Simplify']
Usability,"stacked on 3 other ci2 PRs. - add heal logic; - add job log endpoint; - some simplifications: PRs have a watched branch target (which has a sha) and a source sha, but don't need the source branch. Got rid of FQSHA.; - Ran by hand, seems to work. Will add tests back once build is actually doing something non-trivial.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5814:77,simpl,simplifications,77,https://hail.is,https://github.com/hail-is/hail/pull/5814,1,['simpl'],['simplifications']
Usability,stacked on: https://github.com/hail-is/hail/pull/5812 (which should hopefully go in soon?). simplified aioclient (added HTTP verb helper methods); changed cancel and close to PATCH endpoints; client side Batch object carries attributes,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5826:92,simpl,simplified,92,https://hail.is,https://github.com/hail-is/hail/pull/5826,1,['simpl'],['simplified']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html</a></p>; <h2>Elasticsearch Hadoop 8.2.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html</a></p>; <h2>Elasticsearch Hadoop 8.2.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.1.html</a></p>; <h2>Elasticsearch Hadoop 8.2.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.0.html</a></p>; <h2>Elasticsearch Hadoop 8.1.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a></p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/a7873eb46985d849286ab89fa0a51f8b5374e02e""><code>a7873eb</code></a> Update index.adoc (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2000"">#2000</a>) (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2002"">#2002</a>)</li>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/9f44fe66d0ff82f18a13a38cae6abf3f72183a94""><code>9f44fe6</code></a> Bump to version 8.4.3</li>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/c9e3b114b98bb0e",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:4078,guid,guide,4078,https://hail.is,https://github.com/hail-is/hail/pull/12319,2,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html</a></p>; <h2>Elasticsearch Hadoop 8.2.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html</a></p>; <h2>Elasticsearch Hadoop 8.2.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.1.html</a></p>; <h2>Elasticsearch Hadoop 8.2.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.0.html</a></p>; <h2>Elasticsearch Hadoop 8.1.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a></p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/a7873eb46985d849286ab89fa0a51f8b5374e02e""><code>a7873eb</code></a> Update index.adoc (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2000"">#2000</a>) (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2002"">#2002</a>)</li>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/9f44fe66d0ff82f18a13a38cae6abf3f72183a94""><code>9f44fe6</code></a> Bump to version 8.4.3</li>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/c9e3b114b98bb0e340555311c82e2d9f32c880b6""><code>c9e3b11</code></a> [DOCS] Add 8.4.2 release n",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:4156,guid,guide,4156,https://hail.is,https://github.com/hail-is/hail/pull/12319,2,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html</a></p>; <h2>Elasticsearch Hadoop 8.2.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html</a></p>; <h2>Elasticsearch Hadoop 8.2.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html</a></p>; <h2>Elasticsearch Hadoop 8.2.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.1.html</a></p>; <h2>Elasticsearch Hadoop 8.2.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.0.html</a></p>; <h2>Elasticsearch Hadoop 8.1.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a></p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/a7873eb46985d849286ab89fa0a51f8b5374e02e""><code>a7873eb</code></a> Update index.adoc (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2000"">#2000</a>) (<a href=""https://github-red",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:3752,guid,guide,3752,https://hail.is,https://github.com/hail-is/hail/pull/12319,2,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html</a></p>; <h2>Elasticsearch Hadoop 8.2.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html</a></p>; <h2>Elasticsearch Hadoop 8.2.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html</a></p>; <h2>Elasticsearch Hadoop 8.2.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.1.html</a></p>; <h2>Elasticsearch Hadoop 8.2.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.0.html</a></p>; <h2>Elasticsearch Hadoop 8.1.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a></p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/a7873eb46985d849286ab89fa0a51f8b5374e02e""><code>a7873eb</code></a> Update index.adoc (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2000"">#2000</a>) (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2002"">#2002</a>)</li>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:3830,guid,guide,3830,https://hail.is,https://github.com/hail-is/hail/pull/12319,2,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html</a></p>; <h2>Elasticsearch Hadoop 8.3.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html</a></p>; <h2>Elasticsearch Hadoop 8.2.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html</a></p>; <h2>Elasticsearch Hadoop 8.2.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html</a></p>; <h2>Elasticsearch Hadoop 8.2.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.1.html</a></p>; <h2>Elasticsearch Hadoop 8.2.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.0.html</a></p>; <h2>Elasticsearch Hadoop 8.1.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a></p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <d",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:3426,guid,guide,3426,https://hail.is,https://github.com/hail-is/hail/pull/12319,2,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html</a></p>; <h2>Elasticsearch Hadoop 8.3.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html</a></p>; <h2>Elasticsearch Hadoop 8.2.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html</a></p>; <h2>Elasticsearch Hadoop 8.2.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html</a></p>; <h2>Elasticsearch Hadoop 8.2.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.1.html</a></p>; <h2>Elasticsearch Hadoop 8.2.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.0.html</a></p>; <h2>Elasticsearch Hadoop 8.1.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a></p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/ela",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:3504,guid,guide,3504,https://hail.is,https://github.com/hail-is/hail/pull/12319,2,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html</a></p>; <h2>Elasticsearch Hadoop 8.3.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html</a></p>; <h2>Elasticsearch Hadoop 8.3.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html</a></p>; <h2>Elasticsearch Hadoop 8.2.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html</a></p>; <h2>Elasticsearch Hadoop 8.2.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html</a></p>; <h2>Elasticsearch Hadoop 8.2.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.1.html</a></p>; <h2>Elasticsearch Hadoop 8.2.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:3100,guid,guide,3100,https://hail.is,https://github.com/hail-is/hail/pull/12319,2,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html</a></p>; <h2>Elasticsearch Hadoop 8.3.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html</a></p>; <h2>Elasticsearch Hadoop 8.3.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html</a></p>; <h2>Elasticsearch Hadoop 8.2.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html</a></p>; <h2>Elasticsearch Hadoop 8.2.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html</a></p>; <h2>Elasticsearch Hadoop 8.2.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.1.html</a></p>; <h2>Elasticsearch Hadoop 8.2.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:3178,guid,guide,3178,https://hail.is,https://github.com/hail-is/hail/pull/12319,2,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html</a></p>; <h2>Elasticsearch Hadoop 8.3.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html</a></p>; <h2>Elasticsearch Hadoop 8.3.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html</a></p>; <h2>Elasticsearch Hadoop 8.3.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html</a></p>; <h2>Elasticsearch Hadoop 8.2.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html</a></p>; <h2>Elasticsearch Hadoop 8.2.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html</a></p>; <h2>Elasticsearch Hadoop 8.2.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:2774,guid,guide,2774,https://hail.is,https://github.com/hail-is/hail/pull/12319,2,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html</a></p>; <h2>Elasticsearch Hadoop 8.3.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html</a></p>; <h2>Elasticsearch Hadoop 8.3.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html</a></p>; <h2>Elasticsearch Hadoop 8.3.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html</a></p>; <h2>Elasticsearch Hadoop 8.2.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html</a></p>; <h2>Elasticsearch Hadoop 8.2.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html</a></p>; <h2>Elasticsearch Hadoop 8.2.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:2852,guid,guide,2852,https://hail.is,https://github.com/hail-is/hail/pull/12319,2,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html</a></p>; <h2>Elasticsearch Hadoop 8.3.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html</a></p>; <h2>Elasticsearch Hadoop 8.3.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html</a></p>; <h2>Elasticsearch Hadoop 8.3.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html</a></p>; <h2>Elasticsearch Hadoop 8.3.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html</a></p>; <h2>Elasticsearch Hadoop 8.2.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html</a></p>; <h2>Elasticsearch Hadoop 8.2.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:2448,guid,guide,2448,https://hail.is,https://github.com/hail-is/hail/pull/12319,2,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html</a></p>; <h2>Elasticsearch Hadoop 8.3.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html</a></p>; <h2>Elasticsearch Hadoop 8.3.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html</a></p>; <h2>Elasticsearch Hadoop 8.3.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html</a></p>; <h2>Elasticsearch Hadoop 8.3.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html</a></p>; <h2>Elasticsearch Hadoop 8.2.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html</a></p>; <h2>Elasticsearch Hadoop 8.2.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:2526,guid,guide,2526,https://hail.is,https://github.com/hail-is/hail/pull/12319,2,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html</a></p>; <h2>Elasticsearch Hadoop 8.4.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html</a></p>; <h2>Elasticsearch Hadoop 8.3.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html</a></p>; <h2>Elasticsearch Hadoop 8.3.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html</a></p>; <h2>Elasticsearch Hadoop 8.3.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html</a></p>; <h2>Elasticsearch Hadoop 8.3.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html</a></p>; <h2>Elasticsearch Hadoop 8.2.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:2122,guid,guide,2122,https://hail.is,https://github.com/hail-is/hail/pull/12319,2,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html</a></p>; <h2>Elasticsearch Hadoop 8.4.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html</a></p>; <h2>Elasticsearch Hadoop 8.3.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html</a></p>; <h2>Elasticsearch Hadoop 8.3.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html</a></p>; <h2>Elasticsearch Hadoop 8.3.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html</a></p>; <h2>Elasticsearch Hadoop 8.3.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html</a></p>; <h2>Elasticsearch Hadoop 8.2.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/eshadoop-8.2.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.2/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:2200,guid,guide,2200,https://hail.is,https://github.com/hail-is/hail/pull/12319,2,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html</a></p>; <h2>Elasticsearch Hadoop 8.4.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html</a></p>; <h2>Elasticsearch Hadoop 8.4.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html</a></p>; <h2>Elasticsearch Hadoop 8.3.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html</a></p>; <h2>Elasticsearch Hadoop 8.3.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html</a></p>; <h2>Elasticsearch Hadoop 8.3.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html</a></p>; <h2>Elasticsearch Hadoop 8.3.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:1796,guid,guide,1796,https://hail.is,https://github.com/hail-is/hail/pull/12319,2,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html</a></p>; <h2>Elasticsearch Hadoop 8.4.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html</a></p>; <h2>Elasticsearch Hadoop 8.4.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html</a></p>; <h2>Elasticsearch Hadoop 8.3.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html</a></p>; <h2>Elasticsearch Hadoop 8.3.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html</a></p>; <h2>Elasticsearch Hadoop 8.3.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html</a></p>; <h2>Elasticsearch Hadoop 8.3.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:1874,guid,guide,1874,https://hail.is,https://github.com/hail-is/hail/pull/12319,2,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html</a></p>; <h2>Elasticsearch Hadoop 8.4.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html</a></p>; <h2>Elasticsearch Hadoop 8.4.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html</a></p>; <h2>Elasticsearch Hadoop 8.4.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html</a></p>; <h2>Elasticsearch Hadoop 8.3.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html</a></p>; <h2>Elasticsearch Hadoop 8.3.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html</a></p>; <h2>Elasticsearch Hadoop 8.3.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:1470,guid,guide,1470,https://hail.is,https://github.com/hail-is/hail/pull/12319,2,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html</a></p>; <h2>Elasticsearch Hadoop 8.4.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html</a></p>; <h2>Elasticsearch Hadoop 8.4.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html</a></p>; <h2>Elasticsearch Hadoop 8.4.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html</a></p>; <h2>Elasticsearch Hadoop 8.3.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html</a></p>; <h2>Elasticsearch Hadoop 8.3.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.2.html</a></p>; <h2>Elasticsearch Hadoop 8.3.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:1548,guid,guide,1548,https://hail.is,https://github.com/hail-is/hail/pull/12319,2,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html</a></p>; <h2>Elasticsearch Hadoop 8.5.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html</a></p>; <h2>Elasticsearch Hadoop 8.5.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html</a></p>; <h2>Elasticsearch Hadoop 8.5.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/da4f3c3f209aea47d69c4faf90029a6933bd3a60""><code>da4f3c3</code></a> [DOCS] Add 8.5.3 release notes (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2045"">#2045</a>) (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2050"">#2050</a>)</li>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/79d592abdce1cd90845d153afab8b66069e2a172""><code>79d592a</code></a> [DOCS] Add 8.5.2 release notes (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2042"">#2042</a>) (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2049"">#2049</a>)</li>; <li><a href=""https://github.com/elastic/elasticsea",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12601:1796,guid,guide,1796,https://hail.is,https://github.com/hail-is/hail/pull/12601,1,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html</a></p>; <h2>Elasticsearch Hadoop 8.5.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html</a></p>; <h2>Elasticsearch Hadoop 8.5.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html</a></p>; <h2>Elasticsearch Hadoop 8.5.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/e665cd918aa8d0ba7806b92e16881edb96180d48""><code>e665cd9</code></a> Update Spark to 3.2.3 (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2056"">#2056</a>) (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2057"">#2057</a>)</li>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/07380b0e17c7d908d50d59fc69ac2953adfa5a0d""><code>07380b0</code></a> Use DRA repository for build-tools dependencies</li>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/77bce30bfefb39c39bd34a6f147b17fb0df4701c""><code>77bce30</code></a> Bump to version 8.6.1</li>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/92ac2d5e61b7b8c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12623:2122,guid,guide,2122,https://hail.is,https://github.com/hail-is/hail/pull/12623,1,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html</a></p>; <h2>Elasticsearch Hadoop 8.5.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html</a></p>; <h2>Elasticsearch Hadoop 8.5.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html</a></p>; <h2>Elasticsearch Hadoop 8.5.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/da4f3c3f209aea47d69c4faf90029a6933bd3a60""><code>da4f3c3</code></a> [DOCS] Add 8.5.3 release notes (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2045"">#2045</a>) (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2050"">#2050</a>)</li>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/79d592abdce1cd90845d153afab8b66069e2a172""><code>79d592a</code></a> [DOCS] Add 8.5.2 release notes (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2042"">#2042</a>) (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2049"">#2049</a>)</li>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/712f518822ff281abdd6f83c2e0ea97857dbf6ba""><code>712f518</cod",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12601:1874,guid,guide,1874,https://hail.is,https://github.com/hail-is/hail/pull/12601,1,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html</a></p>; <h2>Elasticsearch Hadoop 8.5.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html</a></p>; <h2>Elasticsearch Hadoop 8.5.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html</a></p>; <h2>Elasticsearch Hadoop 8.5.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/e665cd918aa8d0ba7806b92e16881edb96180d48""><code>e665cd9</code></a> Update Spark to 3.2.3 (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2056"">#2056</a>) (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2057"">#2057</a>)</li>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/07380b0e17c7d908d50d59fc69ac2953adfa5a0d""><code>07380b0</code></a> Use DRA repository for build-tools dependencies</li>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/77bce30bfefb39c39bd34a6f147b17fb0df4701c""><code>77bce30</code></a> Bump to version 8.6.1</li>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/92ac2d5e61b7b8cc16b6a9f29ad1454497f604ba""><code>92ac2d5</code></a> [DOCS] Add 8.6.0 release n",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12623:2200,guid,guide,2200,https://hail.is,https://github.com/hail-is/hail/pull/12623,1,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html</a></p>; <h2>Elasticsearch Hadoop 8.5.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html</a></p>; <h2>Elasticsearch Hadoop 8.5.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html</a></p>; <h2>Elasticsearch Hadoop 8.5.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html</a></p>; <h2>Elasticsearch Hadoop 8.5.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/da4f3c3f209aea47d69c4faf90029a6933bd3a60""><code>da4f3c3</code></a> [DOCS] Add 8.5.3 release notes (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2045"">#2045</a>) (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2050"">#2050</a>)</li>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/79d592abdce1cd90845d153afab8b660",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12601:1470,guid,guide,1470,https://hail.is,https://github.com/hail-is/hail/pull/12601,1,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html</a></p>; <h2>Elasticsearch Hadoop 8.5.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html</a></p>; <h2>Elasticsearch Hadoop 8.5.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html</a></p>; <h2>Elasticsearch Hadoop 8.5.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html</a></p>; <h2>Elasticsearch Hadoop 8.5.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/e665cd918aa8d0ba7806b92e16881edb96180d48""><code>e665cd9</code></a> Update Spark to 3.2.3 (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2056"">#2056</a>) (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2057"">#2057</a>)</li>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/07380b0e17c7d908d50d59fc69ac2953adfa5a0d""",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12623:1796,guid,guide,1796,https://hail.is,https://github.com/hail-is/hail/pull/12623,1,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html</a></p>; <h2>Elasticsearch Hadoop 8.5.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html</a></p>; <h2>Elasticsearch Hadoop 8.5.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html</a></p>; <h2>Elasticsearch Hadoop 8.5.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html</a></p>; <h2>Elasticsearch Hadoop 8.5.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/da4f3c3f209aea47d69c4faf90029a6933bd3a60""><code>da4f3c3</code></a> [DOCS] Add 8.5.3 release notes (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2045"">#2045</a>) (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2050"">#2050</a>)</li>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/79d592abdce1cd90845d153afab8b66069e2a172""><code>79d592a</code></a> [DOCS] Add 8.5.2 release notes (<a href=""ht",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12601:1548,guid,guide,1548,https://hail.is,https://github.com/hail-is/hail/pull/12601,1,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html</a></p>; <h2>Elasticsearch Hadoop 8.5.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html</a></p>; <h2>Elasticsearch Hadoop 8.5.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html</a></p>; <h2>Elasticsearch Hadoop 8.5.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html</a></p>; <h2>Elasticsearch Hadoop 8.5.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/e665cd918aa8d0ba7806b92e16881edb96180d48""><code>e665cd9</code></a> Update Spark to 3.2.3 (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2056"">#2056</a>) (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-hadoop/issues/2057"">#2057</a>)</li>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/07380b0e17c7d908d50d59fc69ac2953adfa5a0d""><code>07380b0</code></a> Use DRA repository for build-tools dependencies</li>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12623:1874,guid,guide,1874,https://hail.is,https://github.com/hail-is/hail/pull/12623,1,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.1.html</a></p>; <h2>Elasticsearch Hadoop 8.6.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html</a></p>; <h2>Elasticsearch Hadoop 8.5.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html</a></p>; <h2>Elasticsearch Hadoop 8.5.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html</a></p>; <h2>Elasticsearch Hadoop 8.5.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html</a></p>; <h2>Elasticsearch Hadoop 8.5.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/e665cd918aa8d0ba7806b92e16881edb96180d48""><code>e665cd9</code></a> Update Spark to",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12623:1470,guid,guide,1470,https://hail.is,https://github.com/hail-is/hail/pull/12623,1,['guid'],['guide']
Usability,"stic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.1.html</a></p>; <h2>Elasticsearch Hadoop 8.6.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html</a></p>; <h2>Elasticsearch Hadoop 8.5.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html</a></p>; <h2>Elasticsearch Hadoop 8.5.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html</a></p>; <h2>Elasticsearch Hadoop 8.5.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html</a></p>; <h2>Elasticsearch Hadoop 8.5.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/e665cd918aa8d0ba7806b92e16881edb96180d48""><code>e665cd9</code></a> Update Spark to 3.2.3 (<a href=""https://github-redirect.dependabot.com/elastic/elasticsearch-",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12623:1548,guid,guide,1548,https://hail.is,https://github.com/hail-is/hail/pull/12623,1,['guid'],['guide']
Usability,style guide is very out of date,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3067:6,guid,guide,6,https://hail.is,https://github.com/hail-is/hail/issues/3067,2,['guid'],['guide']
Usability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0MmRjMDIwMC02MDI1LTQ1M2QtYWUxNC00NDRlZjM5MmU4NTciLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjQyZGMwMjAwLTYwMjUtNDUzZC1hZTE0LTQ0NGVmMzkyZTg1NyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""42dc0200-6025-453d-ae14-444ef392e857"",""prPublicId"":""42dc0200-6025-453d-ae14-444ef392e857"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.17"",""to"":""1.26.18""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-6002459""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[496],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13854:3444,Learn,Learn,3444,https://hail.is,https://github.com/hail-is/hail/pull/13854,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3OWQ3MTdiYy05MThjLTRlMjctOGQ2OC0xNTNhNWIxZGFmM2YiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6Ijc5ZDcxN2JjLTkxOGMtNGUyNy04ZDY4LTE1M2E1YjFkYWYzZiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""79d717bc-918c-4e27-8d68-153a5b1daf3f"",""prPublicId"":""79d717bc-918c-4e27-8d68-153a5b1daf3f"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.17"",""to"":""1.26.18""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-6002459""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[496],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13850:3442,Learn,Learn,3442,https://hail.is,https://github.com/hail-is/hail/pull/13850,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI4MmZhNTRjZC0yOGI4LTQ3OTUtYWFjNy02MDE0NjY3NjMwNTUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjgyZmE1NGNkLTI4YjgtNDc5NS1hYWM3LTYwMTQ2Njc2MzA1NSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""82fa54cd-28b8-4795-aac7-601466763055"",""prPublicId"":""82fa54cd-28b8-4795-aac7-601466763055"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.16"",""to"":""1.26.17""}],""packageManager"":""pip"",""projectPublicId"":""b72ce54d-5de3-48e5-a1d4-6f8967681a12"",""projectUrl"":""https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-5926907""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13771:3360,Learn,Learn,3360,https://hail.is,https://github.com/hail-is/hail/pull/13771,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxNGQyZDIxMi00ZjI4LTQ0OGEtYWRkNS02NThkNDEwNzQxZDYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjE0ZDJkMjEyLTRmMjgtNDQ4YS1hZGQ1LTY1OGQ0MTA3NDFkNiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""14d2d212-4f28-448a-add5-658d410741d6"",""prPublicId"":""14d2d212-4f28-448a-add5-658d410741d6"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.17"",""to"":""1.26.18""}],""packageManager"":""pip"",""projectPublicId"":""b72ce54d-5de3-48e5-a1d4-6f8967681a12"",""projectUrl"":""https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-6002459""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[496],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13847:3360,Learn,Learn,3360,https://hail.is,https://github.com/hail-is/hail/pull/13847,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxOGU4YzI4Yi1kYWQ0LTQ5ZDUtOTExNi04NjFkYTdkODk5OTYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjE4ZThjMjhiLWRhZDQtNDlkNS05MTE2LTg2MWRhN2Q4OTk5NiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""18e8c28b-dad4-49d5-9116-861da7d89996"",""prPublicId"":""18e8c28b-dad4-49d5-9116-861da7d89996"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.16"",""to"":""1.26.17""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-5926907""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13773:3444,Learn,Learn,3444,https://hail.is,https://github.com/hail-is/hail/pull/13773,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiNzM0YmY4Ni1mNzQyLTQyMjMtOWVlYS1lNGU3ZjNmMTVlYWMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImI3MzRiZjg2LWY3NDItNDIyMy05ZWVhLWU0ZTdmM2YxNWVhYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""b734bf86-f742-4223-9eea-e4e7f3f15eac"",""prPublicId"":""b734bf86-f742-4223-9eea-e4e7f3f15eac"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.16"",""to"":""1.26.17""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-5926907""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13772:3374,Learn,Learn,3374,https://hail.is,https://github.com/hail-is/hail/pull/13772,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiODhmOTA3Ny02ZjlmLTRiZjEtYjFiYy0yZjNkNTE1MDEwYWEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImI4OGY5MDc3LTZmOWYtNGJmMS1iMWJjLTJmM2Q1MTUwMTBhYSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""b88f9077-6f9f-4bf1-b1bc-2f3d515010aa"",""prPublicId"":""b88f9077-6f9f-4bf1-b1bc-2f3d515010aa"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.16"",""to"":""1.26.17""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-5926907""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13783:3436,Learn,Learn,3436,https://hail.is,https://github.com/hail-is/hail/pull/13783,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmNDI4YzVjNi05NmZmLTQ1ZTMtYjY4ZC0zYzU5NjY3MjA3MGUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImY0MjhjNWM2LTk2ZmYtNDVlMy1iNjhkLTNjNTk2NjcyMDcwZSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""f428c5c6-96ff-45e3-b68d-3c596672070e"",""prPublicId"":""f428c5c6-96ff-45e3-b68d-3c596672070e"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.17"",""to"":""1.26.18""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-6002459""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[496],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13851:3436,Learn,Learn,3436,https://hail.is,https://github.com/hail-is/hail/pull/13851,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"t array *must* be the JAR URL and the SHA-1 is confusing. Instead, there are now two keys in a JVM process specification:; 1. `jar_spec`, which may be either `{""type"": ""jar_url"", ""value"": ""gs://..../abc123....jar""}` or `{""type"":""git_revision"", ""value"": ""abc123...""}`.; 2. `argv`, an opaque list of strings which are passed, by the JVMEntryway, along with a few more args, to `is.hail.backend.service.Main`. The `Main` class dispatches to either `ServiceBackendSocketAPI2` or the `Worker` based on the first element of `argv`. Each class expects different contents in `argv` that suits its needs. Second, I completely eliminated the HAIL_SHA/revision from the Worker and Hail Query Java code. This was only ever used as unique name for the JAR. Instead, I just use the full JAR URL as a unique name for the JAR. If you need to defeat the cache, just create a new git commit before running `make -C query ipython`. If defeating the cache becomes a common problem, we can add a ""reload_jar"" parameter or similar to the job spec. Third, I renamed `push-jar` in `query/Makefile` to `upload-query-jar` to mirror the build.yaml step. Fourth, I embraced the use of `NAMEPSACE` in `query/Makefile` instead of relying on the minor hack that our laptop usernames match our namespace names. This does mean you need to always specify NAMESPACE when uploading a jar. Finally, a pleasant outcome of this change is the elimination of a bunch of conditional build.yaml logic in the service backend tests!. I think this will simplify the use of Hail Query by Australia et al. because I've isolated the use of hail-specific data to `query/Makefile`. If there's a way to access the relevant global-config variables from `query/Makefile`, I can also fix the `query/Makefile` to be deployment-independent. cc: @lgruen @illusional @tpoterba . [1] For our default namespace deployment, `gs://hail-query/jars/{GIT_REVISION}.jar`. In general, `{HAIL_QUERY_STORAGE_URI}{HAIL_QUERY_ACCEPTABLE_JAR_SUBFOLDER}/{GIT_REVISION}.jar`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11645:2942,simpl,simplify,2942,https://hail.is,https://github.com/hail-is/hail/pull/11645,1,['simpl'],['simplify']
Usability,"t dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzNTM4YWIwOC03Yzk4LTRjMDUtOTQ0Ny0yMjYwYjliNjhmY2IiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjM1MzhhYjA4LTdjOTgtNGMwNS05NDQ3LTIyNjBiOWI2OGZjYiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""3538ab08-7c98-4c05-9447-2260b9b68fcb"",""prPublicId"":""3538ab08-7c98-4c05-9447-2260b9b68fcb"",""dependencies"":[{""name"":""pillow"",""from"":""9.5.0"",""to"":""10.0.1""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-PILLOW-5918878""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown""],""priorityScoreList"":[null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13708:3292,Learn,Learn,3292,https://hail.is,https://github.com/hail-is/hail/pull/13708,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"t for centralized assets governance 2) QuickSight Q now supports public embedding 3) New Termination protection flag to mitigate accidental deletes 4) Athena data sources now accept a custom IAM role 5) QuickSight supports connectivity to Databricks</li>; <li>api-change:<code>sagemaker</code>: [<code>botocore</code>] Added DisableProfiler flag as a new field in ProfilerConfig</li>; <li>api-change:<code>servicecatalog</code>: [<code>botocore</code>] This release 1. adds support for Principal Name Sharing with Service Catalog portfolio sharing. 2. Introduces repo sourced products which are created and managed with existing SC APIs. These products are synced to external repos and auto create new product versions based on changes in the repo.</li>; <li>api-change:<code>ssm-sap</code>: [<code>botocore</code>] AWS Systems Manager for SAP provides simplified operations and management of SAP applications such as SAP HANA. With this release, SAP customers and partners can automate and simplify their SAP system administration tasks such as backup/restore of SAP HANA.</li>; <li>api-change:<code>stepfunctions</code>: [<code>botocore</code>] Update stepfunctions client to latest version</li>; <li>api-change:<code>transfer</code>: [<code>botocore</code>] Adds a NONE encryption algorithm type to AS2 connectors, providing support for skipping encryption of the AS2 message body when a HTTPS URL is also specified.</li>; </ul>; <h1>1.26.12</h1>; <ul>; <li>api-change:<code>amplify</code>: [<code>botocore</code>] Adds a new value (WEB_COMPUTE) to the Platform enum that allows customers to create Amplify Apps with Server-Side Rendering support.</li>; <li>api-change:<code>appflow</code>: [<code>botocore</code>] AppFlow simplifies the preparation and cataloging of SaaS data into the AWS Glue Data Catalog where your data can be discovered and accessed by AWS analytics and ML services. AppFlow now also supports data field partitioning and file size optimization to improve query performance a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12498:4734,simpl,simplify,4734,https://hail.is,https://github.com/hail-is/hail/pull/12498,2,['simpl'],['simplify']
Usability,"t of this is that the `allowAllocations` bit is no longer hereditary. A `ChildStagedRegion` can be converted into a `ParentStagedRegion`, and hence another generation of children can be created, but now doing so requires explicitly specifying `allowAllocations` for the new generation. In emit, this happens at stream consumers, where the allocation strategy will be read off the PType of the stream. The full hierarchy is now:; * `StagedRegion` - The root class is the type for passing around unowned regions. Besides writing into the region, the method `asRoot` allows converting to a `RootStagedRegion` by specifying `allowAllocations`; * `ParentStagedRegion` - for passing around un-owned regions which allow creating child regions. Has a `allowSubregions` flag which encodes whether child regions are actually separate run-time regions.; * `ChildStagedRegion` - un-owned regions which know their parent, allowing methods like `copyToParent` and `createSiblingRegion`; * `OwnedStagedRegion` - owned regions are always children; adds methods like `free`, `clear`, `giveToParent`; * The concrete classes `RealOwnedStagedRegion` and `DummyOwnedStagedRegion`. These encode whether the parent region is real or dummy. They are intended to be private to the `StagedRegion` implementation. ### Update. At first, I restricted methods like `copyTo` and `giveTo` to copy/move to either a parent or sibling region. That is easy to verify correctness, but turned out to be too restrictive. I had been assuming an invariant that the `elementRegion` of a stream is always a direct child of the `outerRegion`. But this invariant is violated by some nested stream nodes like `StreamFlatMap` and `StreamGroupBy`. Take `StreamFlatMap`: the `outerRegion` of the inner stream should be the `eltRegion` of the outer stream, which is created and owned by the FlatMap code. But the `eltRegion` of the final flatMapped stream is passed in from the consumer, so is not a child of the inner stream's `outerRegion`. It is a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9401:2410,clear,clear,2410,https://hail.is,https://github.com/hail-is/hail/pull/9401,1,['clear'],['clear']
Usability,t.fireChannelRead(AbstractChannelHandlerContext.java:336); 	io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293); 	io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267); 	; 	at org.apache.spark.SparkContext.assertNotStopped(SparkContext.scala:100); 	at org.apache.spark.SparkContext.cancelAllJobs(SparkContext.scala:2209); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at sparklyr.Invoke.invoke(invoke.scala:139); 	at sparklyr.StreamHandler.handleMethodCall(stream.scala:123); 	at sparklyr.StreamHandler.read(stream.scala:66); 	at sparklyr.BackendHandler.channelRead0(handler.scala:51); 	at sparklyr.BackendHandler.channelRead0(handler.scala:4); 	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105); 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357); 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343); 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102); 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357); 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343); 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293); 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4513:10913,Simpl,SimpleChannelInboundHandler,10913,https://hail.is,https://github.com/hail-is/hail/issues/4513,1,['Simpl'],['SimpleChannelInboundHandler']
Usability,"t/chardet/commit/57abbca866a41758f7c26e1bb26a0126e28575c2""><code>57abbca</code></a> Rebased and cleaned up version of UTF-16/32 BE/LE PR (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/206"">#206</a>)</li>; <li><a href=""https://github.com/chardet/chardet/commit/eca9558cf7569c1f7689bd66e5aaf965a56e903c""><code>eca9558</code></a> Fix missing black formatting</li>; <li><a href=""https://github.com/chardet/chardet/commit/f1f9d4280e11fb3a9b2d9eaf1827dac9263cb1cb""><code>f1f9d42</code></a> slight increase in performance (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/252"">#252</a>)</li>; <li><a href=""https://github.com/chardet/chardet/commit/f9ef56cfd6c9b24b9c865eae6dc2285c67ffb75c""><code>f9ef56c</code></a> Use Python-3 super() syntax in Latin1Prober (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/240"">#240</a>)</li>; <li><a href=""https://github.com/chardet/chardet/commit/c5e5d5a8f1b6e135a8bffd8d60b2f726bb168339""><code>c5e5d5a</code></a> Simple maintenance improvements (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/244"">#244</a>)</li>; <li><a href=""https://github.com/chardet/chardet/commit/49b8341f507bed68f7d3ff7138bb97047a0e04f0""><code>49b8341</code></a> Configure setuptools using the declarative syntax in setup.cfg (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/239"">#239</a>)</li>; <li><a href=""https://github.com/chardet/chardet/commit/5c73bfcdf819251d1a1d0de672e34480ebafbe1f""><code>5c73bfc</code></a> Run all pre-commit hooks on pull requests (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/236"">#236</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/chardet/chardet/compare/4.0.0...5.0.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=chardet&package-manager=pip&previous-version=4.0.0&new-v",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12107:4747,Simpl,Simple,4747,https://hail.is,https://github.com/hail-is/hail/pull/12107,1,['Simpl'],['Simple']
Usability,"tation of `ArrayFilter`. There is basically no nice way to implement filter otherwise without introducing some significant code duplication.; - ~~The stream ""parameter"", as well as the `Empty` return, are not very useful for the basic streams in this PR. However, they simplify the implementation of `ArrayFlatMap` (aka ""composing"" two parameterized streams).~~ NOTE (to Patrick): I decided to abandon the ""empty"" return idea in favor of just providing ""default states"" that always yield empty streams. **Implementation Notes**. - The implementation makes great use of Scala's type system. Most of the streams are implemented first in a very type aware manner, where it is easy to reason about the types of data flowing in and out, before being instantiated with EmitTriplets and Envs which don't hold very much type information. For instance, we have the following helper for `map`:; ```scala; Parameterized[P, A].map(f: A => B): Parameterized[P, B]; ```; The emitter instantiates P = `Any`, A = `EmitTriplet`, B = `EmitTriplet` :/. - Complex streams will have non trivial control flow and jumps. Therefore `init` and `step` both take `JoinPointBuilder`s and return `Code[Ctrl]`, to indicate that they may create join points and do jumps. - I've utilized a cute continuation passing style trick in multiple functions. Instead of `init` ""returning"" `Missing`/`Start(s0)` (which is impossible, since these are compile time data structures; they won't exist during JVM runtime), init takes a continuation `k: Init[S] => Code[Ctrl]`, which it must call with one of these values. To use `init`, you can simply provide a pattern matching lambda, which closely resembles the syntax you would normally use to pattern match on a returned value, e.g. (from `contMap`):; ```scala; self.init(mb, jb, param) {; case Missing => k(Missing); case Start(s) => Code(setup, k(Start(s))); }; ```; This technique actually cleans up the implementation significantly, especially moving forward to more complicated streams.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7228:3330,simpl,simply,3330,https://hail.is,https://github.com/hail-is/hail/pull/7228,1,['simpl'],['simply']
Usability,"tch_id, jobs.job_id) IN (SELECT batch_id, job_id FROM job_attributes WHERE `key` = 'pheno' AND `value` = '50'); -> GROUP BY jobs.batch_id, jobs.job_id; -> ORDER BY jobs.batch_id, jobs.job_id ASC; -> LIMIT 50;; +----+-------------+--------------------------+------------+--------+--------------------------------------------------+--------------------------+---------+-----------------------------------------+------+----------+---------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+--------------------------+------------+--------+--------------------------------------------------+--------------------------+---------+-----------------------------------------+------+----------+---------------------------------+; | 1 | SIMPLE | batches | NULL | const | PRIMARY | PRIMARY | 8 | const | 1 | 100.00 | Using temporary; Using filesort |; | 1 | SIMPLE | job_attributes | NULL | ref | PRIMARY,job_attributes_key_value | job_attributes_key_value | 1081 | const,const,const | 3057 | 100.00 | Using where |; | 1 | SIMPLE | jobs | NULL | eq_ref | PRIMARY,jobs_batch_id_state_always_run_cancelled | PRIMARY | 12 | const,batch.job_attributes.job_id | 1 | 100.00 | NULL |; | 1 | SIMPLE | job_attributes | NULL | eq_ref | PRIMARY,job_attributes_key_value | PRIMARY | 314 | const,batch.job_attributes.job_id,const | 1 | 100.00 | NULL |; | 1 | SIMPLE | aggregated_job_resources | NULL | ref | PRIMARY | PRIMARY | 12 | const,batch.job_attributes.job_id | 5 | 100.00 | NULL |; | 1 | SIMPLE | resources | NULL | eq_ref | PRIMARY | PRIMARY | 302 | batch.aggregated_job_resources.resource | 1 | 100.00 | NULL |; +----+-------------+--------------------------+------------+--------+--------------------------------------------------+--------------------------+---------+-----------------------------------------+------+----------+---------------------------------+; 6 rows in set, 1 warning (0.01 sec); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9870:1623,SIMPL,SIMPLE,1623,https://hail.is,https://github.com/hail-is/hail/pull/9870,5,['SIMPL'],['SIMPLE']
Usability,"te(); r.getNewRegion()`. As a demonstration of how this should work, this PR does convert `EmitStream.{toArray, write}` to use `eltRegion` correctly, which are used in the consumer nodes `ToArray`, `ArraySort`, `ToSet`, `ToDict`, and `GroupByKey`. Going forward, the plan is to convert the rest of the consumer and producer nodes, before converting the transformer nodes (which both consume and produce streams), as correctness can only be tested on pipelines in which all nodes have been converted. ### Semantics. A stream producer is passed two regions from its consumer: `outerRegion` and `eltRegion`. The node being emitted does not own either region, so may not free/clear them. The only thing a producer may do with either region is to put data in them, by writing directly to them or by giving/sharing ownership of a producer-owned region to them. Consumers' contract:; * The lifetime of `outerRegion` must contain the lifetime of the producer stream, i.e. `outerRegion` must be valid before the producer's `setup0` is called, and must still be valid when the producer's `close0` is called. Thus a producer may use `outerRegion` to store state that persists between elements, or it may use a region it owns itself.; * When the producer's `pull` is called, `eltRegion` must be valid (it does not need to be valid for setup/close). Producers' contract:; * When the consumer's `push` is called, the pushed value must be owned by either `outerRegion` or `eltRegion` (really `eltRegion`; using `outerRegion` is correct but unnecessarily extends the lifetime of the value). This can be accomplished by writing directly to the consumer's region, or by giving/sharing ownership of a producer-owned region to it. Thus the consumer may assume the pushed value is valid until it frees/clears `eltRegion`. If the consumer needs the value to live longer, it must deep-copy the value to another region. These allow us to reason about (and, in principle, to prove) the correctness of each node independently.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9106:2759,clear,clears,2759,https://hail.is,https://github.com/hail-is/hail/pull/9106,1,['clear'],['clears']
Usability,"ted dependencies (we have a lot!). See [here](https://mill-build.com/mill/Intro_to_Mill.html) and [here](https://mill-build.com/mill/Builtin_Commands.html) for more details. ## IntelliJ setup. To import from scratch:; * delete any `.idea` directories in the hail root, or `hail/` subdirectory (you could try skipping this, but you're on your own); * in the `hail/` subdirectory, you can also delete `.classpath`, `.gradle`, `.project`, `.settings/`, `build/` (we still use this for a few things, but most of it is dead gradle output, and it's safe to delete it all and start clean), `build.gradle`, `gradle/`, `gradlew`, `gradlew.bat`, `pgradle`, `settings.gradle`; * run `mill mill.bsp.BSP/install` to generate the `.bsp` config directory (bsp is the Build Server Protocol); * In IntelliJ, go to File->Open, and choose the hail root directory; * When the project is open, go to File->Project Structure; * in the Project pane, set an sdk (8 or 11), and set the language level to 8; * in the Modules pane, delete the existing root module, click the plus sign -> Import Module, choose the `hail/` subdirectory, and choose ""Import module from external model"" and `BSP`; * you should see a progress bar at the bottom as it imports the project; * when it's done, quit and reopen IntelliJ. There should now be a bsp icon (two bars with two arrows between them) on the right, where the gradle elephant used to be. Just like before, sometimes you'll need to click the ""reload"" icon in there if things get wonky.; * if it says ""scalafmt configuration detected"", go ahead and enable the formatter. ## Metals setup. * delete any `.metals` directories; * open the hail repo in VSCode (even if you won't use VSCode, this seems to be the best way to get metals set up initially); * it should ask you to import a Mill build; * when that finishes, at the bottom it should say it's connected to a Bloop build server. In general, I think using Mill as the BSP directly will work best, but I don't have much experience t",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14147:4240,progress bar,progress bar,4240,https://hail.is,https://github.com/hail-is/hail/pull/14147,1,['progress bar'],['progress bar']
Usability,"ted dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxNjVmNDVkMi00ZDM3LTRmNzAtOGU1OC00OGIxOGJhNmVlOTgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjE2NWY0NWQyLTRkMzctNGY3MC04ZTU4LTQ4YjE4YmE2ZWU5OCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""165f45d2-4d37-4f70-8e58-48b18ba6ee98"",""prPublicId"":""165f45d2-4d37-4f70-8e58-48b18ba6ee98"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.7"",""to"":""42.0.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6050294"",""SNYK-PYTHON-CRYPTOGRAPHY-6126975""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[479,616],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14203:3858,Learn,Learn,3858,https://hail.is,https://github.com/hail-is/hail/pull/14203,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ted dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJkYWIzNjU3Mi1hNTUwLTQwY2EtYThjZi0zN2ZjODljOWI1OGEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImRhYjM2NTcyLWE1NTAtNDBjYS1hOGNmLTM3ZmM4OWM5YjU4YSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""dab36572-a550-40ca-a8cf-37fc89c9b58a"",""prPublicId"":""dab36572-a550-40ca-a8cf-37fc89c9b58a"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.7"",""to"":""42.0.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6050294"",""SNYK-PYTHON-CRYPTOGRAPHY-6126975""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[265,402],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14201:3808,Learn,Learn,3808,https://hail.is,https://github.com/hail-is/hail/pull/14201,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"ted, involved `@overload`, and did not seem to help me reason about that function. I presumed the root cause was that the Resource class had an insufficient interface. Here is how I understand what that function was trying to achieve: We need to track the set of resources that are produced by, produced-by-and-later-consumed, and consumed by a job:. 1. ""Produced by"" corresponds to `Job._valid`.; 2. ""Produced-by-and-later-consumed"" corresponds to `Job._internal_outputs` and `Job._external_outputs`.; 3. ""Consumed by"" corresponds to `Job._inputs`. There is also `Job._mentioned` which I do not fully understand but which does not use `_add_resource_to_set`. There is an important distinction between the latter two and the first kind of resource set. The latter two must be what I am now calling `SingleResource`s. These are actual single files that need to be uploaded or downloaded. In contrast the ""produced by"" set (and, I think `Job._mentioned`) might include `ResourceGroup`s which are composite: one or more `SingleResource`s that must be transmitted as a group. For example, a VCF file and its TBI index file must always be transmitted as a group, even if a job only references one of those two files. That's the essential functionality of a `ResourceGroup`. I introduced three operations to `Resource` which I think make this system simpler:. 1. `get_resource_group`: if a `Resource` is a group or a member thereof, return it. 2. `component_resources`: if a `Resource` is composite, return the components, otherwise just return the resource itself. 3. `bonded_resources`: the minimum set of resources that must be transmitted if this resource is transmitted. In particular, a member of a resource group returns itself and the other resources in the group. A resource group just returns its components. We can now add a type annotation which requires (2) and (3) to be sets of `SingleResource`. In; particular, (2) and (3) are concrete files that can be copied as opposed to groups thereof.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14319:1652,simpl,simpler,1652,https://hail.is,https://github.com/hail-is/hail/pull/14319,1,['simpl'],['simpler']
Usability,"than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0M2ViODJhZS04ZDkwLTRjZWUtYjIzMS01ZDMyYmZiZWM4OWEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjQzZWI4MmFlLThkOTAtNGNlZS1iMjMxLTVkMzJiZmJlYzg5YSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""43eb82ae-8d90-4cee-b231-5d32bfbec89a"",""prPublicId"":""43eb82ae-8d90-4cee-b231-5d32bfbec89a"",""dependencies"":[{""name"":""jinja2"",""from"":""3.1.2"",""to"":""3.1.3""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-JINJA2-6150717""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[556],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Cross-site Scripting (XSS)](https://learn.snyk.io/lesson/xss/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14136:3407,Learn,Learn,3407,https://hail.is,https://github.com/hail-is/hail/pull/14136,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlOTc1OTMyYy1kNmNhLTQ0NTUtYmU4ZC04NzY1ZGY0MTZjMWMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImU5NzU5MzJjLWQ2Y2EtNDQ1NS1iZThkLTg3NjVkZjQxNmMxYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""e975932c-d6ca-4455-be8d-8765df416c1c"",""prPublicId"":""e975932c-d6ca-4455-be8d-8765df416c1c"",""dependencies"":[{""name"":""jinja2"",""from"":""3.1.2"",""to"":""3.1.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-JINJA2-6150717""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[556],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Cross-site Scripting (XSS)](https://learn.snyk.io/lesson/xss/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14141:3725,Learn,Learn,3725,https://hail.is,https://github.com/hail-is/hail/pull/14141,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlYTQ5ODFkZC02M2FmLTQ4YzYtYTIwMC05NjkyZjg2ZTlhNjIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImVhNDk4MWRkLTYzYWYtNDhjNi1hMjAwLTk2OTJmODZlOWE2MiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""ea4981dd-63af-48c6-a200-9692f86e9a62"",""prPublicId"":""ea4981dd-63af-48c6-a200-9692f86e9a62"",""dependencies"":[{""name"":""jinja2"",""from"":""3.1.2"",""to"":""3.1.3""}],""packageManager"":""pip"",""projectPublicId"":""b7c31419-ec34-40f1-8bc6-ad8303fb329b"",""projectUrl"":""https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-JINJA2-6150717""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[556],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Cross-site Scripting (XSS)](https://learn.snyk.io/lesson/xss/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14140:3281,Learn,Learn,3281,https://hail.is,https://github.com/hail-is/hail/pull/14140,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"the current structure is easier to follow:. 1. Fit the null model.; 2. If wald, assume the beta for the genotypes is zero and use the rest of the parameters from the null model fit to compute the score (i.e. the gradient of the likelihood). Recall calculus: gradient near zero => value near the maximum. Return: this is the test.; 3. Otherwise, fit the full model starting at the null fit parameters.; 4. Test the ""goodness"" of this new & full fit. ---. Poisson regression is similar but with a different likelihood function and gradient thereof. Notice that I `key_cols_by()` to indicate to Hail that the order of the cols is irrelevant (the result is a locus-keyed table after all). This is necessary at least until #12753 merges. I think it's generally a good idea though: it indicates to Hail that the ordering of the columns is irrelevant, which is potentially useful information for the optimizer!. ---. Both logistic and Poisson regression can benefit from BLAS3 by running at least the score test for multiple variants at once. ---. I'll attach an image in the comments, but I spend ~6 seconds compiling this trivial model and ~140ms testing it. ```python3; import hail as hl; mt = hl.utils.range_matrix_table(1, 3); mt = mt.annotate_entries(x=hl.literal([1, 3, 10, 5])); ht = hl.poisson_regression_rows(; 'wald', y=hl.literal([0, 1, 1, 0])[mt.col_idx], x=mt.x[mt.col_idx], covariates=[1], max_iterations=2); ht.collect(); ```. I grabbed some [sample code from; scikit-learn](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.PoissonRegressor.html) for Poisson regression (doing a score test rather than a wald test) and timed it. It takes ~8ms. So we're 3 orders of magnitude including the compiler, and ~1.2 orders of magnitude off without the compiler. Digging in a bit:; - ~65ms for class loading.; - ~15ms for region allocation.; - ~20ms various little spots. Leaving about 40ms strictly executing generated code That's about 5x which is starting to feel reasonable.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12793:2487,learn,learn,2487,https://hail.is,https://github.com/hail-is/hail/pull/12793,2,['learn'],['learn']
Usability,"the local_path_uri function simply prepends 'file://' to the path provided. This leads to an odd situation were a relative path is transformed into 'file://relative/path/to/log', which parses as:. SCHEME: file; HOST : relative; PATH : path/to/log. To fix this, compute the real path of the log file and use that as the path for the local_path_uri",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13340:28,simpl,simply,28,https://hail.is,https://github.com/hail-is/hail/pull/13340,1,['simpl'],['simply']
Usability,"the number of used bits is a (statically known) constant. We use this to ensure the number of used bits is known statically.; 	; Types:; - missingness; - treat as a type constructor `optional<T>`, i.e. base types don't encode missingness. Emits a single bit in the encoding. Can invert this bit to control whether missing values come first or last in the ordering. If missing, nothing is emitted after.; - sort-order; - treat reversing the default ordering as a type constructor `reverse<T>`; - simply inverts the encoding bitwise; - primitive types; - same as in datafusion, encoding has same size as original type; - signed integers - flip the sign bit; - floating point numbers - if sign bit is set, invert all bits, otherwise only flip the sign bit; - arrays; - before each element and after last element, emit continuation bit (0 if no more elements); - pad before each element. This prevents a variable number of missing bits packing into a byte; - strings and byte-arrays; - simply use null-terminated strings (being careful to do this in a unicode-safe way); - structs; - simply concatenate element encodings. safe because codes are prefix-free; - key structs; - support variable length ""interval endpoints""; - e.g. for a key type `struct<t1, t2>`, the interval `[{a}, {a, b})` contains all keys with first field `a` and second field less than `b`. We break it into two ""interval endpoints"", `({a}, -1)` and `({a, b}, -1)`, which consist of a struct value which is a prefix of the key struct type, and a ""sign"". In this case, both endpoints ""lean left"".; - needed for working with partitioners at runtime; - like an array with fixed but heterogenous types and a max length; - before each element and after last element, emit two continuation bits; - `00` - end of key, leans left (less than all longer keys with this prefix); - `01` - continue, or after last key field of actual key value (not interval endpoint); - unambiguous because key value can't terminate early, and can't continue past",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14396:2118,simpl,simply,2118,https://hail.is,https://github.com/hail-is/hail/issues/14396,2,['simpl'],['simply']
Usability,the other way was clearly backwards,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3033:18,clear,clearly,18,https://hail.is,https://github.com/hail-is/hail/pull/3033,1,['clear'],['clearly']
Usability,"the same, a few changes were made to how options are handled. We first introduce a bit of terminology. In a shell command invocation like `$ cmd a -o c`, `a`, `-o` and `c` are called parameters. `a` and `c` which do not start with dashes, are called arguments. `-o`, which starts with a dash, is an option. This PR makes the following changes:. - For dataproc commands taking extra gcloud parameters, all parameters after a double-dash (--) are passed to gcloud.; - The actual rule is slightly more complicated, but I think the above rule is the right take away. In detail, extra parameters are passed to gcloud. Unknown options (starting with a dash) before `--` are reported as an error. So arguments (not options) before `--` and all parameters after are passed to gcloud. ; - Short options don't need a `=` when specifying a value. It is now `-p2`, not `-p=2`.; - While I was making breaking changes, I changed `dataproc submit` `--gcloud_configuration` to `--gcloud-configuration`. I am happy to undo this one.; - Group arguments must go before the next command. Write `hailctl dataproc --beta start ...` not `hailctl dataproc start --beta ...`, which is an error since `start` has no option `--beta`. This PR rewrites argument parsing to use click instead of argparse: https://click.palletsprojects.com/en/7.x/. Things you need to know about click:; - A group is a group of commands or subgroups, like `hailctl dataproc`, `hailctl batch`, etc. Groups are defined like this:; ; ```; @hailctl.group(; help=""Manage the Hail Batch service.""); def batch():; pass; ```; - A command in a group is defined like this:. ```; @batch.command(; help=""Get a particular batch's info.""); @click.argument('batch_id', type=int); @click.option('--output-format', '-o',; type=click.Choice(['yaml', 'json']),; default='yaml', show_default=True,; help=""Specify output format"",); def get(batch_id, output_format):; ...; ```. The command decorator replaces the function with one that takes a `List[str]` of command line",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9842:1102,undo,undo,1102,https://hail.is,https://github.com/hail-is/hail/pull/9842,1,['undo'],['undo']
Usability,"the tunneled connection to the destination server. Users who rely on; defining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade; to Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy; credentials once the change has been fully deployed.</p>; <p>Users who do not use a proxy or do not supply their proxy credentials through; the user information portion of their proxy URL are not subject to this; vulnerability.</p>; <p>Full details can be read in our <a href=""https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q"">Github Security Advisory</a>; and <a href=""https://nvd.nist.gov/vuln/detail/CVE-2023-32681"">CVE-2023-32681</a>.</p>; </li>; </ul>; <h2>v2.30.0</h2>; <h2>2.30.0 (2023-05-03)</h2>; <p><strong>Dependencies</strong></p>; <ul>; <li>; <p>⚠️ Added support for urllib3 2.0. ⚠️</p>; <p>This may contain minor breaking changes so we advise careful testing and; reviewing <a href=""https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html"">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>; prior to upgrading.</p>; <p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>; </li>; </ul>; <h2>v2.29.0</h2>; <h2>2.29.0 (2023-04-26)</h2>; <p><strong>Improvements</strong></p>; <ul>; <li>Requests now defers chunked requests to the urllib3 implementation to improve; standardization. (<a href=""https://redirect.github.com/psf/requests/issues/6226"">#6226</a>)</li>; <li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=""https://redirect.github.com/psf/requests/issues/6356"">#6356</a>)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/psf/requests/blob/main/HISTORY.md"">requests's changelog</a>.</em></p>; <blockquote>; <h2>2.31.0 (2023-05-22)</h2>; <p><strong>Security</strong></p>; <ul>; <li>; <p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerab",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13091:1977,guid,guide,1977,https://hail.is,https://github.com/hail-is/hail/pull/13091,6,['guid'],['guide']
Usability,"this by explaining the query against the DB:; ```; > kssh admin-pod; > mysql; mysql> use batch;; mysql> EXPLAIN SELECT attempts.*; -> FROM attempts; -> INNER JOIN jobs ON attempts.batch_id = jobs.batch_id AND attempts.job_id = jobs.job_id; -> LEFT JOIN instances ON attempts.instance_name = instances.name; -> WHERE attempts.start_time IS NOT NULL; -> AND attempts.end_time IS NULL; -> AND ((jobs.state != 'Running' AND jobs.state != 'Creating') OR jobs.attempt_id != attempts.attempt_id); -> AND instances.`state` = 'active'; -> ORDER BY attempts.start_time ASC; -> LIMIT 300\G;. *************************** 1. row ***************************; id: 1; select_type: SIMPLE; table: instances; partitions: NULL; type: ALL; possible_keys: PRIMARY; key: NULL; key_len: NULL; ref: NULL; rows: 1150201; filtered: 10.00; Extra: Using where; Using temporary; Using filesort; *************************** 2. row ***************************; id: 1; select_type: SIMPLE; table: attempts; partitions: NULL; type: ref; possible_keys: PRIMARY,attempts_instance_name; key: attempts_instance_name; key_len: 303; ref: batch.instances.name; rows: 91; filtered: 9.00; Extra: Using where; *************************** 3. row ***************************; id: 1; select_type: SIMPLE; table: jobs; partitions: NULL; type: eq_ref; possible_keys: PRIMARY,jobs_batch_id_state_always_run_cancelled,jobs_batch_id_state_always_run_inst_coll_cancelled,jobs_batch_id_update_id,jobs_batch_id_always_run_n_regions_regions_bits_rep_job_id,jobs_batch_id_ic_state_ar_n_regions_bits_rep_job_id,jobs_batch_id_job_group_id,jobs_batch_id_ic_state_ar_n_regions_bits_rep_job_group_id; key: PRIMARY; key_len: 12; ref: batch.attempts.batch_id,batch.attempts.job_id; rows: 1; filtered: 98.10; Extra: Using where; 3 rows in set, 1 warning (0.00 sec); ```. This is not great:; ```; rows: 1150201; filtered: 10.00; Extra: Using where; Using temporary; Using filesort; ```; what we want to see is a low number of rows, a high percent filtered, and somet",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14460:2235,SIMPL,SIMPLE,2235,https://hail.is,https://github.com/hail-is/hail/issues/14460,1,['SIMPL'],['SIMPLE']
Usability,tils$RichHadoopConfiguration$$using$extension(RichHadoopConfiguration.scala:226); 	at is.hail.utils.richUtils.RichHadoopConfiguration$.readFile$extension(RichHadoopConfiguration.scala:251); 	at is.hail.variant.VariantSampleMatrix$.readFileMetadata(VariantSampleMatrix.scala:72); 	at is.hail.variant.VariantSampleMatrix$.read(VariantSampleMatrix.scala:51); 	at is.hail.HailContext$$anonfun$10.apply(HailContext.scala:434); 	at is.hail.HailContext$$anonfun$10.apply(HailContext.scala:433); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.mutable.ArrayOps$ofRef.map(ArrayOps.scala:186); 	at is.hail.HailContext.readAll(HailContext.scala:433); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:497); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:237); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:280); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:214); 	at java.lang.Thread.run(Thread.java:745). Hail version: devel-41347fd; Error summary: HailException: corrupt or outdated VDS: invalid metadata; Recreate VDS with current version of Hail.; Detailed exception:; No usable value for sample_schema; Did not find value which can be converted into java.lang.String; ```,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2173:2800,usab,usable,2800,https://hail.is,https://github.com/hail-is/hail/pull/2173,1,['usab'],['usable']
Usability,"tm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""49ddea8a-962c-4889-b800-3d64b82a0b38"",""prPublicId"":""49ddea8a-962c-4889-b800-3d64b82a0b38"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.0""},{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.11.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-JUPYTERSERVER-6099119"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[591,591,531,444,429,501,509,384,494,539],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Access Control Bypass](https://learn.snyk.io/lesson/broken-access-control/?loc&#x3D;fix-pr); 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14109:7394,Learn,Learn,7394,https://hail.is,https://github.com/hail-is/hail/pull/14109,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"tp://dev.hail.is/t/proposal-for-aggregators/93/3. Builds on: https://github.com/hail-is/hail/pull/3552. I still need to finish converting some tests from ExtractAggregatorSuite (they are currently commented out). Old-style aggregators (filter, map, flatMap) are expanded at toIR conversion time to ApplyAggOp and SeqOp. ApplyAggOp returns the result of the aggregation. ApplyAggOp's first argument, which must be of type TVoid, is the expression to run for each element being aggregated over. SeqOp merges a computed value into the RegionValueAggregator. I added a AggSignature that holds the AggOp, type being aggregated over and the RegionValueAggregator constructor argument types. This is stored by the ApplyAggOp and the SeqOp. @tpoterba I believe TAggregable is no longer used in the IR code and can go away when the AST gets ripped out. @danking I added some IR testing logic to TestUtils. Namely, `eval` evaluates an IR with environments, args and/or aggregations with a single call (and verifies that the interpret with and without optimization and compiler all agree). There are also functions for asserting the result of aggregations, for example:. ```; val aggSig = AggSignature(Sum(), TFloat64(), FastSeq()); assertEvalsTo(ApplyAggOp(; SeqOp(ApplyBinaryPrimOp(Multiply(), Ref(""a"", TFloat64()), Ref(""b"", TFloat64())), I32(0), aggSig),; FastSeq(), aggSig),; (FastIndexedSeq(Row(1.0, 10.0), Row(10.0, 10.0), Row(null, 10.0)), TStruct(""a"" -> TFloat64(), ""b"" -> TFloat64())),; 110.0); ```. The line:. > (FastIndexedSeq(Row(1.0, 10.0), ...), TStruct(""a"" -> TFloat64(), ""b"" -> TFloat64())),. is the IndexedSeq of values to aggregate over, along with their signature. The struct type is used to build the scope in which aggregators are evaluated. (A little noisy because of the aggregator syntax. It's noisier than I'd like it to be.). This nicely paves the way for aggregators with multi-argument seqOps (like takeBy) that were previously handled by lambdas and we didn't have a clear plan for.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3570:2045,clear,clear,2045,https://hail.is,https://github.com/hail-is/hail/pull/3570,1,['clear'],['clear']
Usability,"tps://github.com/search?q=repo%3Ajupyterlab%2Fjupyterlab+involves%3Awelcome+updated%3A2024-01-19..2024-01-30&amp;type=Issues""><code>@​welcome</code></a></p>; <!-- raw HTML omitted -->; <h2>4.0.11</h2>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab/compare/v4.0.10...0708330843fd087134a239d2ad6005b1d543e246"">Full Changelog</a>)</p>; <h3>Security fixes</h3>; <ul>; <li>Potential authentication and CSRF tokens leak in JupyterLab (<a href=""https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-44cc-43rp-5947"">GHSA-44cc-43rp-5947</a>)</li>; <li>SXSS in Markdown Preview (<a href=""https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-4m77-cmpx-vjc4"">GHSA-4m77-cmpx-vjc4</a>)</li>; </ul>; <h3>Bugs fixed</h3>; <ul>; <li>Fixes focus indicator on input checkbox for Firefox <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15612"">#15612</a> (<a href=""https://github.com/alden-ilao""><code>@​alden-ilao</code></a>)</li>; </ul>; <h3>Documentation improvements</h3>; <ul>; <li>Fix link to yarn docs in extension migration guide <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15640"">#15640</a> (<a href=""https://github.com/krassowski""><code>@​krassowski</code></a>)</li>; </ul>; <h3>Contributors to this release</h3>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab/graphs/contributors?from=2023-12-29&amp;to=2024-01-19&amp;type=c"">GitHub contributors page for this release</a>)</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/e7a1af706875c8ab183101ff68b38e836181028c""><code>e7a1af7</code></a> [ci skip] Publish 4.0.12</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/69079ec413cbe6d173f0a667c15802b76423ece5""><code>69079ec</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15710"">#15710</a>: Removes Python 3.0, Notebook 5 mentions from cont",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14218:10920,guid,guide,10920,https://hail.is,https://github.com/hail-is/hail/pull/14218,1,['guid'],['guide']
Usability,turn back on progress bar,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3142:13,progress bar,progress bar,13,https://hail.is,https://github.com/hail-is/hail/issues/3142,2,['progress bar'],['progress bar']
Usability,"ummary>; <ul>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/13989b5b1253e26f3f3ee24013a3013fea1bdf73""><code>13989b5</code></a> [Storage] Fix ranged download for client-side encryption (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/25522"">#25522</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/e90af4374bfd7c139737ad2888fcd269b3023520""><code>e90af43</code></a> DataLake funny dependency (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/25129"">#25129</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/cbec3383039ffeb46760268d1a8f81cf1b4d2219""><code>cbec338</code></a> [AutoRelease] t2-storagecache-2022-07-06-35884(Do not merge) (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/25089"">#25089</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/dc7c5a16d39df8a8d4b838a7240e58f64fc824f2""><code>dc7c5a1</code></a> [Storage] API View Feedback For STG84 GA (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/25085"">#25085</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/9f66f6bce7d777b34c03dc9a633148acd0c4f238""><code>9f66f6b</code></a> [Storage] Revert removing aiohttp dependency for storage.blob.aio (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/25084"">#25084</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/e40d3e1d985cee13a2e0d070fb8e04958905f468""><code>e40d3e1</code></a> [storage.blob] Remove aiohttp as dependency for storage.blob.aio (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/24965"">#24965</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/7915719f211cc1217dfca6f3973a2b1f04c2e3f5""><code>7915719</code></a> [Storage] Prepare for STG83 GA release (<a href=""https://github-redirect.dependabot.com/Az",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12109:2524,Feedback,Feedback,2524,https://hail.is,https://github.com/hail-is/hail/pull/12109,1,['Feedback'],['Feedback']
Usability,updated style guide,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1395:14,guid,guide,14,https://hail.is,https://github.com/hail-is/hail/pull/1395,2,['guid'],['guide']
Usability,"urlparse isn't really what we want for breaking down a blob storage URL. There are special characters that delimit different parts of a typical URL that don't translate to a blob. Specifically, if a blob name contains a `?` (which is totally valid if albeit horrendous), `parsed.path` will terminate before the `?` and drop the rest because it views those as query params. We really just want everything after the container to be the blob name, so we do a bit more manual work in the name of simplicity. Dan already handled this in the Google async fs but this was never changed in the azure implementation. They now resemble each other more closely.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11851:492,simpl,simplicity,492,https://hail.is,https://github.com/hail-is/hail/pull/11851,1,['simpl'],['simplicity']
Usability,"using the; generalized cross-validation (GCV) criterion to find the tradeoff between; smoothness and proximity to data points.</li>; <li><code>scipy.stats</code> has three new distributions, two new hypothesis tests, three; new sample statistics, a class for greater control over calculations; involving covariance matrices, and many other enhancements.</li>; </ul>; <h1>New features</h1>; <h1><code>scipy.datasets</code> introduction</h1>; <ul>; <li>A new dedicated <code>datasets</code> submodule has been added. The submodules; is meant for datasets that are relevant to other SciPy submodules ands; content (tutorials, examples, tests), as well as contain a curated; set of datasets that are of wider interest. As of this release, all; the datasets from <code>scipy.misc</code> have been added to <code>scipy.datasets</code>; (and deprecated in <code>scipy.misc</code>).</li>; <li>The submodule is based on <a href=""https://www.fatiando.org/pooch/latest/"">Pooch</a>; (a new optional dependency for SciPy), a Python package to simplify fetching; data files. This move will, in a subsequent release, facilitate SciPy; to trim down the sdist/wheel sizes, by decoupling the data files and; moving them out of the SciPy repository, hosting them externally and</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/scipy/scipy/commit/dde50595862a4f9cede24b5d1c86935c30f1f88a""><code>dde5059</code></a> REL: 1.10.0 final [wheel build]</li>; <li><a href=""https://github.com/scipy/scipy/commit/7856f281b016c585b82d03723c4494bcdbdcd4a5""><code>7856f28</code></a> Merge pull request <a href=""https://redirect.github.com/scipy/scipy/issues/17696"">#17696</a> from tylerjereddy/treddy_110_final_prep</li>; <li><a href=""https://github.com/scipy/scipy/commit/205b6243c6d075d05695e7ac6d007e0f03bfbf42""><code>205b624</code></a> DOC: add missing author</li>; <li><a href=""https://github.com/scipy/scipy/c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13227:2590,simpl,simplify,2590,https://hail.is,https://github.com/hail-is/hail/pull/13227,1,['simpl'],['simplify']
Usability,"utor driver, partition 0, PROCESS_LOCAL, 4777 bytes); 2018-10-09 14:46:43 Executor: INFO: Running task 0.0 in stage 5.0 (TID 5); 2018-10-09 14:46:43 BlockManager: INFO: Found block rdd_9_0 locally; 2018-10-09 14:46:43 CodeGenerator: INFO: Code generated in 19.341759 ms; 2018-10-09 14:46:43 CodeGenerator: INFO: Code generated in 10.738625 ms; 2018-10-09 14:46:43 SparkContext: INFO: Invoking stop() from shutdown hook; 2018-10-09 14:46:43 AbstractConnector: INFO: Stopped Spark@31b6843e{HTTP/1.1,[http/1.1]}{0.0.0.0:4040}; 2018-10-09 14:46:43 SparkUI: INFO: Stopped Spark web UI at http://10.32.119.167:4040; 2018-10-09 14:46:43 DAGScheduler: INFO: Job 3 failed: fold at RVD.scala:361, took 0.107081 s; 2018-10-09 14:46:43 DAGScheduler: INFO: ResultStage 5 (fold at RVD.scala:361) failed in 0.097 s due to Stage cancelled because SparkContext was shut down; 2018-10-09 14:46:43 LiveListenerBus: ERROR: SparkListenerBus has already stopped! Dropping event SparkListenerStageCompleted(org.apache.spark.scheduler.StageInfo@58127452); 2018-10-09 14:46:43 LiveListenerBus: ERROR: SparkListenerBus has already stopped! Dropping event SparkListenerJobEnd(3,1539121603334,JobFailed(org.apache.spark.SparkException: Job 3 cancelled because SparkContext was shut down)); 2018-10-09 14:46:43 MapOutputTrackerMasterEndpoint: INFO: MapOutputTrackerMasterEndpoint stopped!; 2018-10-09 14:46:43 MemoryStore: INFO: MemoryStore cleared; 2018-10-09 14:46:43 BlockManager: INFO: BlockManager stopped; 2018-10-09 14:46:43 BlockManagerMaster: INFO: BlockManagerMaster stopped; 2018-10-09 14:46:43 OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: INFO: OutputCommitCoordinator stopped!; 2018-10-09 14:46:43 SparkContext: INFO: Successfully stopped SparkContext; 2018-10-09 14:46:43 ShutdownHookManager: INFO: Shutdown hook called; 2018-10-09 14:46:43 ShutdownHookManager: INFO: Deleting directory /private/var/folders/w4/9k0my8pd6113d61pq05fvqlr0000gn/T/spark-02128b51-f37e-4798-84bb-d3e3819e51be; ```; </details>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4513:49349,clear,cleared,49349,https://hail.is,https://github.com/hail-is/hail/issues/4513,1,['clear'],['cleared']
Usability,"ved the code). - `.strip()` the GitHub token in case there are newlines. - print the SHA being deployed in the log statement. - add `hail-ci-build.sh` to CI, which just invokes `make test-in-cluster`(which in turn runs `test-in-cluster.sh`. - `test-in-cluster.sh` copies the secrets for testing to the expected locations and exposes the pod in which it is running with an internal service, recent changes to `site` [redirect sub URLs of ci.test.is to services named using this scheme](https://github.com/hail-is/hail/blob/master/site/hail.nginx.conf#L38-L41). GitHub uses these URLs to send updates to the CI under test about the watched repositories. - `test-locally.sh` now installs `../batch` into the currently running `pip` before testing (NB: if you edit batch and run the tests without committing the changes you've made to batch, this will pass tests but fail when pushed to a PR!). - `test-locally.sh` activates the `hail-ci` conda environment itself because it was not being propagated from the `Makefile`. I don't know why, but this is a simple fix. - `test-locally.sh` starts the ci after the repository is created. CI will print error messages if a watched repository doesn't exist. - `test/test-ci.py` now uses access tokens for all interaction with GitHub, previously it relied on the latent privileges that I and Cotton had in our environments. - `test/test-ci.py` uses a temporary, but not automatically deleted, directory when the environment variable `IN_CLUSTER` is set to `true` (to which it is set by `test-in-cluster.sh`). I noticed that, when running in a batch job pod, if an error occurred, `pytest` failed to print any error information and instead failed because the current working directory no longer existed. I found very little information on Google about this. It seems safe to not clean up temporary directories created in the batch job pod because pods are ephemeral. cc: @cseed. Assigning to @tpoterba since he has the most context on this stuff other than Cotton.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4474:1517,simpl,simple,1517,https://hail.is,https://github.com/hail-is/hail/pull/4474,1,['simpl'],['simple']
Usability,"vert data to/from JSON and to/from the JVM (by way of this ""encoded"" representation which is a binary one). The details of that are not super important to this PR, but you might take a peek to understand the change. The main issue here is that in Python, you can't write:; ```; {[1]}; ```; Because sets must contain ""hashable"" data. Python lists are not hashable because they're mutable. This is transitively a problem. For example, the following also fails with the same error because the list inside the tuple is mutable thus the tuple is not (safely) hashable.; ```; {(""tuples"", ""are"", ""immutable"", [""lists"", ""are"", ""not""])}; ```. Hail's internal language is fully immutable, so every type can be placed inside a set (or used as the keys of a dict). When we convert from Hail's internal representation to Python, we cannot use mutable types in hashable positions. Unfortunately, we also need to maintain backwards compatibility with the way the code currently works. You can see this pretty clearly in the difference between `hl.agg.collect` and `hl.agg.collect_as_set`:; ```; t = hl.utils.range_table(1); t = t.annotate(ls = [1, 2, 3]); collected_ls = t.aggregate(hl.agg.collect(t.ls)); collected_as_set_ls = t.aggregate(hl.agg.collect_as_set(t.ls)); ```; `collected_ls` should be `[[1, 2, 3]]` whereas `collected_as_set_ls` necessarily uses hashable types: `{frozenlist([1, 2, 3])}`. Things are particularly subtle with dictionaries whose keys must always be hashable and whose values need only be hashable if the dictionary itself must be hashable. For example:; ```; t = hl.utils.range_table(1); # we're trying to create {[""hello""]: [""goodbye""]}, but that; # would fail because a python dictionary can't have a list; # as a key; t = t.annotate(x = hl.dict([([""hello""], [""goodbye""])])); in_list = t.aggregate(hl.agg.collect(t.x)); in_set = t.aggregate(hl.agg.collect_as_set(t.x)); ```; `in_list` will be `[{frozenlist([""hello""]): [""goodbye""]}]` (because we should be backwards compatible with th",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12265:1433,clear,clearly,1433,https://hail.is,https://github.com/hail-is/hail/pull/12265,1,['clear'],['clearly']
Usability,"w Intersphinx role :rst:role:<code>external</code> for explict; lookup in the external projects, without resolving to the local project.</li>; </ul>; <h2>Bugs fixed</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9866"">#9866</a>: autodoc: doccomment for the imported class was ignored</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/88f9647a223c77a29153683b49bc29852ed80721""><code>88f9647</code></a> Bump to 4.4.0 final</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/fc428ad324ef38402f1e93b38c61cd6348980ed2""><code>fc428ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9822"">#9822</a> from jakobandersen/intersphinx_role</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/5d595ec0c4294f45f3138c4c581b84c39cae5e29""><code>5d595ec</code></a> intersphinx role, simplify role_name check</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/6ee0ecbe40ab8a3251538409cf35ffcc04765bfa""><code>6ee0ecb</code></a> intersphinx role, simplify role name matching</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/3bf8bcd6e151a78b0dd003a3e76ff4c65566b6e6""><code>3bf8bcd</code></a> intersphinx role, update docs</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/c11b109d591a74f87de071ec4782ac3ab782ea38""><code>c11b109</code></a> intersphinx role: :external+inv:<strong>: instead of :external:inv+</strong>:</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/9589a2bc0531598cdd69f260f2f2c2dbc5852d6e""><code>9589a2b</code></a> intersphinx role, remove redundant method</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/941db550f02d76ee2b93300584ac85dc599d21e6""><code>941db55</code></a> intersphinx role, fix flake8 warnings</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/9",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11522:5873,simpl,simplify,5873,https://hail.is,https://github.com/hail-is/hail/pull/11522,2,['simpl'],['simplify']
Usability,"web page. Now, all of Hail's non-service website derives from; `site/templates/base.html`. It is a Jinja2 template with four blocks: title,; meta_description, head, and content. It ensures that:; - Hail's CSS is loaded,; - the Hail icon is set,; - the fonts are loaded,; - the source code highlighter is loaded (prism.js, only used outside the docs); - the nav bar is present and configured.; The nav bar is somewhat complicated. There are two pieces. `nav-top.html`; contains the nav bar HTML elements. `nav-bottom.html` contains the JavaScript; code that hooks the search bar up to Algolia and sets the active page in the; navigation. I believe JavaScript which modifies the HTML DOM is traditionally; placed at the bottom of the `body` tag so that it is executed *after* the HTML; DOM is mostly rendered. That's why the navigation/search bar is split across two; files. I also load the `prism.js` source code highlighter at the end of the; body. All of the non-docs pages are defined by html files in `pages`. Each one of; these is a Jinja2 template which derives from the base template. `make render`; converts every template in `pages` into a real HTML file in `www`. Check out; 404.html for a simple example. Once I had the site in working order, I turned my eyes to the docs. I converted; `docs/_templates/layout.html`, the base template for our docs, into a template; which derives from `site/templates/base.html`. That ensures everyone is using; the same CSS, the same navigation/search bar, same icon set, etc. Convincing; Sphinx to work like this was actually really easy because Sphinx already uses; Jinja2 templates! I just added site's templates folder to the Sphinx; `templates_path`. I eliminated a few conditionals that are only relevant if your docs are also; rendered on RTD's server, which ours are not. Finally, in order to experiment quickly with this, I changed site's Makefile to; add some rules that keep the automatically render the site and docs in response; to file edits.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9597:2770,simpl,simple,2770,https://hail.is,https://github.com/hail-is/hail/pull/9597,1,['simpl'],['simple']
Usability,"when plotting graphs</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11801"">#11801</a> [component: bokehjs] [BUG] Log axis figures don't render if they're not visible at start</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11807"">#11807</a> [component: bokehjs] Work around issues with initialization-time change discovery</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11808"">#11808</a> Don't unnecessarily update node/edge renderers in graphs</li>; </ul>; </li>; <li>; <p>tasks:</p>; <ul>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11613"">#11613</a> [component: docs] Cache-bust custom.css for docs</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11791"">#11791</a> [component: docs] Update issue template to use new GH forms</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11761"">#11761</a> [component: docs] Clarify use of color in first steps guide</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11762"">#11762</a> [component: docs] Replace slash with backslash for PS commands</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11767"">#11767</a> [component: bokehjs] Upgrade jquery-ui to resolve security concerns</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11781"">#11781</a> [component: examples] fix transform jitter example</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11786"">#11786</a> bokeh 2.4.2 backports</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11790"">#11790</a> [component: build] Bryanv/pin sphinx 42</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11797"">#11797</a> Add OS to bokeh info</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11805"">#11805</a> More 3.0 -&gt; 2.4.2 backports</li>; <li>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11540:1717,guid,guide,1717,https://hail.is,https://github.com/hail-is/hail/pull/11540,1,['guid'],['guide']
Usability,"wip. A few remaining tests fail. Includes a number of fixes to InferPType, InferType. Plan is to get this working before optimize, since that is the simple case, and then move to pre-simplify",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8063:149,simpl,simple,149,https://hail.is,https://github.com/hail-is/hail/pull/8063,2,['simpl'],"['simple', 'simplify']"
Usability,"writing a simple command such as read and write produces different type of error, but all related to memory issues. ; The most explicit error is: . ```; error='Cannot allocate memory' (errno=12); # There is insufficient memory for the Java Runtime Environment to continue.; # Native memory allocation (mmap) failed to map 7376207872 bytes for committing reserved memory.; ```. But also get this issue in other occasions:. ```; ExecutorLostFailure (executor 2265 exited caused by one of the running tasks) Reason: Container marked as failed: container_1481808189977_0001_01_002296 on host: gnomadpsychk-sw-wpt8.c.wgspd-147615.internal. Exit status: 50. Diagnostics: Exception from container-launch.; Container id: container_1481808189977_0001_01_002296; Exit code: 50; Stack trace: ExitCodeException exitCode=50:; 	at org.apache.hadoop.util.Shell.runCommand(Shell.java:582); 	at org.apache.hadoop.util.Shell.run(Shell.java:479); 	at org.apache.hadoop.util.Shell$ShellCommandExecutor.execute(Shell.java:773); 	at org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor.launchContainer(DefaultContainerExecutor.java:212); 	at org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch.call(ContainerLaunch.java:302); 	at org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch.call(ContainerLaunch.java:82); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745). Container exited with a non-zero exit code 50. Driver stacktrace:; ```. Log for this last error is here: https://storage.googleapis.com/wgspd_urv/hailNEW.log. I tried different projects and get the same error, both with pyhail and native hail. I don't see the same error when running on cray.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1186:10,simpl,simple,10,https://hail.is,https://github.com/hail-is/hail/issues/1186,1,['simpl'],['simple']
Usability,xpr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:19); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.expr.ir.Optimize$.is$hail$expr$ir$Optimize$$runOpt$1(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply$mcV$sp(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply(Optimize.scala:21); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply(Optimize.scala:21); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.expr.ir.Optimize$.apply(Optimize.scala:20,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:11625,Simpl,Simplify,11625,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,"y keyed by locus, and removed the MatrixKeyRowsBy in combine_gvcfs. To goal here is to avoid re-buidling an re-broadcasting the partitioner once for each gVCF. We'll need to re-key at the very end. I'm not so familiar with the end of the joint calling pipeline. @chrisvittal can you take care of that?. Second, I don't repartition in TableMultiWayZipJoin if the partitioners all match (which they should in in the joint calling pipeline). For that to work right, I need allowedOverlap == 0 (or to verify the partitions are in fact disjoint). Turns out allowedOverlap wasn't being propagated in various places. I fixed that. @patrick-schultz can you look at the RVDPartitioner changes? They just look like oversights to me, but maybe there was a reason why, for example, copy and coarsen wasn't preserving allowedOverlap?. Finally, now the joint calling pipeline/test_combiner_works segfaults, ugh:. ```; $ hail -m unittest test.hail.methods.test_impex.VCFTests.test_combiner_works; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x000000010e5fa090, pid=64905, tid=33795; #; # JRE version: Java(TM) SE Runtime Environment (8.0_45-b14) (build 1.8.0_45-b14); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.45-b02 mixed mode bsd-amd64 compressed oops); # Problematic frame:; # J 8877 C1 is.hail.expr.types.physical.PLocus$$anon$1.compare(Lis/hail/annotations/Region;JLis/hail/annotations/Region;J)I (117 bytes) @ 0x000000010e5fa090 [0x000000010e5f9de0+0x2b0]; #; ```. The rest of the tests pass (the other Python failures are cascaded failures from test_combiner_works, I double-checked in the hopes of finding an easier example to debug.) It is pretty clearly related to the no repartition optimization. If I disable it, test_combiner_works passes. I haven't tracked this down, but I do have one question @chrisvittal: who's responsible for freeing the inputs (that is, clearing the input regions) to multi-way zip join? I don't see where that happens.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5424:1756,clear,clearly,1756,https://hail.is,https://github.com/hail-is/hail/pull/5424,2,['clear'],"['clearing', 'clearly']"
Usability,"y, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0Y2E5NmE2ZC02MjMxLTQ1YTctYmQyOS1kYTA0ZmZhNTliYzQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjRjYTk2YTZkLTYyMzEtNDVhNy1iZDI5LWRhMDRmZmE1OWJjNCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""4ca96a6d-6231-45a7-bd29-da04ffa59bc4"",""prPublicId"":""4ca96a6d-6231-45a7-bd29-da04ffa59bc4"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.7"",""to"":""42.0.2""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6210214""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[451],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [NULL Pointer Dereference](https://learn.snyk.io/lesson/null-dereference/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14238:3441,Learn,Learn,3441,https://hail.is,https://github.com/hail-is/hail/pull/14238,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"y, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1MzAxOWZkZC04YjQwLTQ5NmUtYjRmYS0wMzA5MTAxOTBkZWMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjUzMDE5ZmRkLThiNDAtNDk2ZS1iNGZhLTAzMDkxMDE5MGRlYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""53019fdd-8b40-496e-b4fa-030910190dec"",""prPublicId"":""53019fdd-8b40-496e-b4fa-030910190dec"",""dependencies"":[{""name"":""cryptography"",""from"":""42.0.2"",""to"":""42.0.4""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6261585""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [NULL Pointer Dereference](https://learn.snyk.io/lesson/null-dereference/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14344:3447,Learn,Learn,3447,https://hail.is,https://github.com/hail-is/hail/pull/14344,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability,y.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:19); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.expr.ir.Optimize$.is$hail$expr$ir$Optimize$$runOpt$1(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply$mcV$sp(Optimize.scala:25); at is.hail.expr.ir.Optimize$$ano,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:11395,Simpl,Simplify,11395,https://hail.is,https://github.com/hail-is/hail/issues/8338,2,['Simpl'],['Simplify']
Usability,"ython-jsonschema/jsonschema/compare/v4.10.2...v4.10.3"">https://github.com/python-jsonschema/jsonschema/compare/v4.10.2...v4.10.3</a></p>; <h2>v4.10.2</h2>; <ul>; <li>Fix a second place where subclasses may have added attrs attributes (<a href=""https://github-redirect.dependabot.com/python-jsonschema/jsonschema/issues/982"">#982</a>).</li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/python-jsonschema/jsonschema/compare/v4.10.1...v4.10.2"">https://github.com/python-jsonschema/jsonschema/compare/v4.10.1...v4.10.2</a></p>; <h2>v4.10.1</h2>; <ul>; <li>Fix Validator.evolve (and APIs like <code>iter_errors</code> which call it) for cases; where the validator class has been subclassed. Doing so wasn't intended to be; public API, but given it didn't warn or raise an error it's of course; understandable. The next release however will make it warn (and a future one; will make it error). If you need help migrating usage of inheriting from a; validator class feel free to open a discussion and I'll try to give some; guidance (<a href=""https://github-redirect.dependabot.com/python-jsonschema/jsonschema/issues/982"">#982</a>).</li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/python-jsonschema/jsonschema/compare/v4.10.0...v4.10.1"">https://github.com/python-jsonschema/jsonschema/compare/v4.10.0...v4.10.1</a></p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-jsonschema/jsonschema/blob/main/CHANGELOG.rst"">jsonschema's changelog</a>.</em></p>; <blockquote>; <h1>v4.15.0</h1>; <ul>; <li>A specific API Reference page is now present in the documentation.</li>; <li><code>$ref</code> on earlier drafts (specifically draft 7 and 6) has been &quot;fixed&quot; to; follow the specified behavior when present alongside a sibling <code>$id</code>.; Specifically the ID is now properly ignored, and references are resolved; a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12163:3549,guid,guidance,3549,https://hail.is,https://github.com/hail-is/hail/pull/12163,1,['guid'],['guidance']
Usability,"| key | key_len | ref | rows | filtered | Extra |; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; | 1 | SIMPLE | billing_project_users | NULL | index | PRIMARY | PRIMARY | 204 | NULL | 3201 | 10.00 | Using where; Using index; Using temporary; Using filesort |; | 1 | SIMPLE | batches | NULL | ref | PRIMARY,batches_deleted,batches_token,batches_user_state,batches_time_completed,batches_billing_project_state | batches_billing_project_state | 102 | batch.billing_project_users.billing_project | 519 | 25.00 | Using where |; | 1 | SIMPLE | batches_n_jobs_in_complete_states | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | NULL |; | 1 | SIMPLE | batches_cancelled | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | Using index |; | 1 | SIMPLE | aggregated_batch_resources | NULL | ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 44 | 100.00 | NULL |; | 1 | SIMPLE | resources | NULL | eq_ref | PRIMARY | PRIMARY | 102 | batch.aggregated_batch_resources.resource | 1 | 100.00 | NULL |; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; ```. New plan; ```; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; | id | select_type | table | partitions | type | poss",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12049:1427,SIMPL,SIMPLE,1427,https://hail.is,https://github.com/hail-is/hail/pull/12049,1,['SIMPL'],['SIMPLE']
Usability,"},{""name"":""notebook"",""from"":""5.7.16"",""to"":""6.4.12""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""},{""name"":""wheel"",""from"":""0.30.0"",""to"":""0.38.0""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-IPYTHON-2348630"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERCORE-3063766"",""SNYK-PYTHON-MISTUNE-2940625"",""SNYK-PYTHON-NBCONVERT-2979829"",""SNYK-PYTHON-NOTEBOOK-1041707"",""SNYK-PYTHON-NOTEBOOK-2441824"",""SNYK-PYTHON-NOTEBOOK-2928995"",""SNYK-PYTHON-PYGMENTS-1086606"",""SNYK-PYTHON-PYGMENTS-1088505"",""SNYK-PYTHON-PYGMENTS-5750273"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-SPHINX-570772"",""SNYK-PYTHON-SPHINX-570773"",""SNYK-PYTHON-SPHINX-5811865"",""SNYK-PYTHON-SPHINX-5812109"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-WHEEL-3180413""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,531,null,null,null,null,null,null,null,null,null,null,509,null,null,null,null,384,494,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Improper Privilege Management](https://learn.snyk.io/lesson/insecure-design/?loc&#x3D;fix-pr); 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13932:10837,Learn,Learn,10837,https://hail.is,https://github.com/hail-is/hail/pull/13932,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"~So this PR is me trying to switch just `TableFilter` over to the correct region memory management model we've decided on.~. ~I used this `usingFreshContext` method to pass a new context to the producer that filter is consuming from so that filter can clear unused rows.~. This PR is where I'm cleaning up region management. So far, I've decided the following:. Addressed: ; - `TableFilter`; - `TableHead` (via `rvd.head`); - `TableTail` (via `rvd.tail`). No change needed: ; - `TableMapRows`; - `TableMapGlobals`; - `TableRange`; - `TableLiteral`. I also added a test using the new `hl.zeros` that's intended to catch memory leaks in filter by going through lots of large rows. For some reason, this test is failing on CI with OOM despite seeming to use constant memory on my local machine, I am still looking into why this is. Mostly, I'm wondering if this is consistent with what y'all imagined correct Region management would look like before I go through and do the rest of them. ; @cseed @tpoterba @catoverdrive @patrick-schultz",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8199:252,clear,clear,252,https://hail.is,https://github.com/hail-is/hail/pull/8199,1,['clear'],['clear']
Usability,"~Stacked on #10770~; ~Stacked on #10791~. This PR attempts to allow linear algebra codegen methods, like the LAPACK wrappers and the local whitening methods I'm working on, to defensively assert shape compatibility preconditions, without generating redundant runtime checks. (I always hate when we're pushed to avoid using code generation abstractions (in this case, just factoring code into smaller functions), because they generate worse code.). The method is pretty simple. SNDArray shapes are now arrays of `SizeValue`, which is a sum type with cases `SizeValueDyn(Value[Long])` and `SizeValueStatic(Long)`. I don't think static sizes occur very often, but it was a simple addition. `SizeValue`s can be compared statically with `==`, or at runtime with `ceq`: the former is true only if we can prove statically that the two sizes must be equal, while the latter emits code to check equality at runtime, using static knowledge to elide dynamic checks where possible. The way we encode static knowledge that two sizes are equal is by using the same local variable to store both. The primary interface to introduce that static knowledge (other than using the same set of sizes to construct multiple SNDArrays), is the method `coerceToShape(cb: CodeBuilder, newShape: Seq[SizeValue]): SNDArrayValue`, which emits code to dynamically assert that `this.shape` agrees with `newShape`, then returns `this` with shape replaced by `newShape`. Thus, `a.coerceToShape(cb, newShape).shape == newShape` will always be true, preserving the static knowledge about the shape of `a`. As a simple example, `gemm` verifies its inputs with (simplifying to the case with no transposes); ```; val Seq(m, n) = C.shapes; val k = A.shapes(1); A.assertHasShape(cb, FastIndexedSeq(m, k), errMsg); B.assertHasShape(cb, FastIndexedSeq(k, n), errMsg); ```; If we call this with; ```; val m, n, k = \\ compute expected dim sizes. \\ emit dynamic size checks once; val A_ = A.coerceToShape(cb, IndexedSeq(m, k)); val B_ = B.coerce",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10783:469,simpl,simple,469,https://hail.is,https://github.com/hail-is/hail/pull/10783,2,['simpl'],['simple']
Usability,"~Stacked on #10906~. This PR refactors `MethodBuilder.invoke` and `EmitCodeBuilder.invoke(S)Code` to take/return values. * `invoke` now takes a `CodeBuilderLike`. It is used in places where there is only access to a `CodeBuilder` (not an `EmitCodeBuilder`), so I had to use the generic interface, and had to move a couple methods on `EmitCodeBuilder` to `CodeBuilderLike`. I have never understood this Emit/non-Emit split; would be a great simplification if we could collapse it.; * This change pushed some (S)Code->(S)Value refactorings inside some aggregator implementations, which generate and invoke internal methods.; * I had to keep a version of `MethodBuilder.invoke` that doesn't take a CodeBuilder, for use in `ThisLazyFieldRef.get`. Will have to think more about how this should work when Code is (mostly) gone. Maybe lazy fields should not subclass Value, and to access a lazy field requires an explicit `load(cb: CodeBuilder): Value[T]`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10907:440,simpl,simplification,440,https://hail.is,https://github.com/hail-is/hail/pull/10907,1,['simpl'],['simplification']
Usability,"~Stacked on #8283~. We were creating fresh regions to pass as the `partitionRegion` to compiled functions deep within `ContextRDD` pipelines. Doing it that way, there's no clear owner responsible for freeing those regions. We're currently relying on Spark to clean them up. This PR adds a `partitionRegion` field to `RVDContext`. This way, the root consumer is responsible for creating the partition region before running the iterator, and for freeing it after. This is a step towards clarifying the structure of region ownership.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8288:172,clear,clear,172,https://hail.is,https://github.com/hail-is/hail/pull/8288,1,['clear'],['clear']
Usability,"~Stacked on #8874, not by necessity, but because the following PR lowering TableJoin depends on both this and that.~. * Before, `TableStage` defined it's per-partition behavior in an abstract method `def partition(ctxRef: Ref): IR`. This makes defining a new `TableStage` a bit heavy syntactically, and means we can't inspect the type of the partition IR without apply the function to something. This PR replaces the abstract method with two fields `ctxRefName: String` and `partitionIR: IR`. It defines a method `def partition(ctx: IR): IR` using these, which is more ergonomic to use because the context isn't forced to be a `Ref`. * With the type of the partition result accessible, this PR requires that type to be a `TStream<TStruct>`. Without this requirement, there is no clear connection between the partitioner and the rest of the `TableStage`. The only violation of this requirement was mapping to some other type right before collecting; this use is accommodated by a `mapCollect` method which combines the steps. * The binding structure of `TableStage` has been slightly reorganized. The `letBindings`, which are used on the master, and the `broadcastVals` which are used on the driver (previously, they had to also be usable on master), have been teased apart. In the new structure:; * `letBindings` are as before: a sequence of bindings which are evaluated in sequence on the master, whose bindings are visible in the `contexts` expression and in the `broadcastVals`; * `broadcastVals` are now a separate sequence of bindings, which are evaluated on the master in parallel (each broadcast binding sees only the `letBindings`, no previous `broadcastVals`), and whose bindings are visible only in the `partitionIR`; * `globals` is now required to be a `Ref`, which is defined in `letBindings` and redefined in `broadcastVals`, so that the `Ref` is valid in later `letBindings`, in `contexts`, as well as in the `partitionIR`. This does mean that `globals` is always broadcast, even when it",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8917:779,clear,clear,779,https://hail.is,https://github.com/hail-is/hail/pull/8917,1,['clear'],['clear']
Usability,"~~Stacked on #8140~~. This PR adds support for the new streams in the emitter for ArrayFilter, ArrayZip, ArrayFlatMap, If, and Let. It also changes the semantics of `Stream` slightly: Before, a producer had to close itself before calling EOS on its consumer. Now, the consumer is responsible for closing the producer after the producer calls EOS. This makes flatMap slightly more complicated, but it allows a significant simplification to zip. To implement the different modes of `ArrayZip`, I added `extendNA` and `take`. `extendNA` turns a stream into an infinite stream, where values after the end are missing, to allow the consumer to decide what to do when the stream ends. `take` is then needed to end infinite streams. Both use `COption` to encode whether the child stream has ended / whether to end the child stream. I still intend to convert uses of `COption` to use `CodeConditional` after lowering is unblocked.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8156:421,simpl,simplification,421,https://hail.is,https://github.com/hail-is/hail/pull/8156,1,['simpl'],['simplification']
Usability,"~~Stacked on #9177~~. These are tricky because of the overlapping lifetimes of the accumulator values. The solution implemented here is to keep two regions. When running the fold body, one region is empty, and the other holds just the previous accumulator. Then we deep copy the new accumulator to the empty region, clear the other one, then swap the two regions before moving to the next iteration. This required expanding the StagedRegion API a bit. First, it now strictly tracks the parent StagedRegion, even in the non-allocating case where the parent wraps the same run-time region. Second, in addition to copying a value to the parent, we can now copy a value to a sibling. It enforces at compile time that the two regions have the same parent. It follows that either both are actually separate regions, or both are just wrappers around the parent region. In the latter case, copying to a sibling is a no-op.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9178:316,clear,clear,316,https://hail.is,https://github.com/hail-is/hail/pull/9178,1,['clear'],['clear']
Usability,"~~Stacked on #9232.~~. This adds memory management to StreamGrouped and StreamGroupByKey. As always, the case where the inner stream is never consumed causes complications. Because the child stream gets its per-element region from the consumer of the inner stream, if the inner stream is unconsumed we have to pass some other region. The solution implemented here uses the outer stream's eltRegion. If the outer stream's consumer allows creating new regions, the grouping node creates an owned region to construct child stream elements in, and clears it every element (because it is never passed to a consumer). Otherwise, all child elements get created in the outer stream's eltRegion.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9234:544,clear,clears,544,https://hail.is,https://github.com/hail-is/hail/pull/9234,1,['clear'],['clears']
Usability,"…urces. TJ has raised a bunch of very legitimate concerns about the expressivity of; hailtop.batch. In this PR, I basically rebuilt hailtop.batch from scratch as; a learning exercise. Once I understood how it worked, I added two valuable; features:. 1. `hb.remote` creates a ""remote"" resource which is never localized but still; creates dependency relationships. 2. `ResourceToStringPickler` which pickles resources appropriately even if; they are nested within other structures.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11378:165,learn,learning,165,https://hail.is,https://github.com/hail-is/hail/pull/11378,1,['learn'],['learning']
