quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Deployability,"**Describe the bug**; After defining the FFD box correctly, using SU2_DEF, the *shape_optimization.py* script was launched to perform adjoint optimization of an internal flow over airfoil. The following error is printed out by SU2:; [SU2_error.txt](https://github.com/su2code/SU2/files/10999828/SU2_error.txt). The .cfg file attached below is largely inspired by the Onera test case already published in the tutorial collection. ; However, I checked the code looking for some issues that my configuration might have caused and I couldn't find any (to my knowledge). It seems the solver has issues converting to float-type variable my text indications for DV_PARAM option. Moreover, I tried to ""play"" with the values related to DV_PARAM and no difference was noted. The same issue was experienced both in version 7.5.0 and 7.5.1 regardless of running a pre-compiled version (Microsoft) or the built-from-source version (Ubuntu). **To reproduce**. [airfoil.txt](https://github.com/su2code/SU2/files/10999881/airfoil.txt); *Mesh file extension is not supported for upload*. **Bug report checklist**. - [ ✓] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [ ✓] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ ✓] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Ubuntu 20.04.0 & Microsoft; - C++ compiler and version: g++ 9.4.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: v7.5.1 & v7.5.0. *Thank you in advance for your help.*",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1970:491,configurat,configuration,491,https://su2code.github.io,https://github.com/su2code/SU2/issues/1970,1,['configurat'],['configuration']
Deployability,"**Describe the bug**; Attempting to run SU2 in dryrun mode (with ""-d"" flag) fails when compiled with debug flags:. ```; SU2_CFD_SERIAL_DEBUG: ../Common/src/linear_algebra/../../include/geometry/dual_grid/../../toolboxes/graph_toolbox.hpp:268: const Index_t* CCompressedSparsePattern<Index_t>::outerPtr() const [with Index_t = long unsigned int]: Assertion `!empty() && ""Sparse pattern has not been built.""' failed.; Aborted (core dumped); ```; Seems to run ok with release build. **To Reproduce**; Compile code with debug flags and run with dryrun option. **Desktop (please complete the following information):**; - OS: Arch Linux (kernel 5.6.10); - C++ compiler and version: gcc v. 9.3.0; - MPI implementation and version: openmpi 4.0.3; - SU2 Version: v. 7.0.4, branch: develop, commit: 31e55ed9f5f13762e939cd44650e34d6e4d5f0f7",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/988:465,release,release,465,https://su2code.github.io,https://github.com/su2code/SU2/issues/988,1,['release'],['release']
Deployability,"**Describe the bug**; Certain meshes seem to get stuck at Geometry Preprocessing: Checking the numerical grid orientation. It will remain stuck indefinitely (I've only left it for up to 20 hours, however). This has only happened to prism meshes that I've generated with Pointwise's T-Rex function. However, it only seems to affect some of them. I should mention that the geometry has a very sharp and flat wingtip - sometimes the final few cells on the wingtip become 2D flat plates rather than 3D cells. Will SU2 handle these? I notice that not all meshes with 2D tips get stuck, but all the meshes that are stuck are meshes with 2D tips. (i.e. some meshes seem to run fine.). I'm not sure if this is a bug or user error but I've also attached some images to demonstrate what I mean. I hope this helps.; ![Screenshot from 2019-05-17 17-20-26](https://user-images.githubusercontent.com/16842258/57913834-66807e00-78c8-11e9-9899-c96b10d14c7e.png); ![Screenshot from 2019-05-17 17-20-44](https://user-images.githubusercontent.com/16842258/57913836-66807e00-78c8-11e9-8bbe-c643994a62d4.png); ![Screenshot from 2019-05-17 17-21-11](https://user-images.githubusercontent.com/16842258/57913837-67191480-78c8-11e9-9c16-296cef99df9f.png). **To Reproduce**; This is a case which got stuck for me. I had used `mpirun -n 40 SU2_CFD inv_69deg-delta.cfg`; N.B. Added .txt to the configuration file for upload.; [inv_69deg-delta.cfg.txt](https://github.com/su2code/SU2/files/3190339/inv_69deg-delta.cfg.txt); [mesh.zip](https://www.dropbox.com/s/s3f3er9n0wv4bbf/mesh.zip?dl=0). **Desktop (please complete the following information):**; - OS: Linux (Red Hat Enterprise Linux Server release 7.3 (Maipo)); - C++ compiler and version: g++ (GCC) 4.8.5 20150623; - MPI implementation and version: Intel(R) MPI Library for Linux* OS, Version 2018 Update 2; - SU2 Version: v6.2.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683:1366,configurat,configuration,1366,https://su2code.github.io,https://github.com/su2code/SU2/issues/683,3,"['Update', 'configurat', 'release']","['Update', 'configuration', 'release']"
Deployability,"**Describe the bug**; Compile MPI Version error on Windows. I can build successfully by run ` py .\meson.py build` ant `ninja.exe build install` , but it can't compile with ` py .\meson.py build -Dwith-mpi=enabled`. the error message :; ```; Version: 0.61.1; Source dir: F:\suflow\code\Su-FVMu-Solver; Build dir: F:\suflow\code\Su-FVMu-Solver\build; Build type: native build; Project name: SU2; Project version: 7.5.1 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\zeng\AppData\Local\Programs\Python\Python37\python.exe); WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.platlibdir"" option.; WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.purelibdir"" option.; Found pkg-config: C:\Program Files\mingw-w64\bin\pkg-config.EXE (0.26); mpicc found: NO; Run-time dependency MPI for c found: YES; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig, config-tool and system). meson.build:61:2: ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system. A full log can be found at F:\suflow\code\Su-FVMu-Solver\build\meson-logs\meson-log.txt; ```. meson-log.txt: ; [meson-log.txt](https://github.com/su2code/SU2/files/12427739/meson-log.txt). **Bug report checklist**. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Windows/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:136,install,install,136,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,2,['install'],"['install', 'installed']"
Deployability,"**Describe the bug**; Error at link time when compiling SU2 without mpi (""-Dwith-mpi=disabled"") with debug flags (""--buildtype=debug""). This problem does not seem to occur when compiling with release (""--buildtype=release""). Error message:; ```; /usr/bin/ld: Common/src/libSU2Common.a(interface_interpolation_CMirror.cpp.o): in function `CMirror::SetTransferCoeff(CConfig const* const*)':; /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:173: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:174: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:175: undefined reference to `MPI_STATUS_IGNORE'; ```; I noticed that this method does not use any MPI preprocessor flags (i.e. this function does not make use of #ifdef HAVE_MPI); however, it's not obvious to me why switching the build type to release would solve the problem. . **To Reproduce**; Configure with meson:; ""./meson.py build --reconfigure --buildtype=debug -Dwith-mpi=disabled""; Build with ninja:; ./ninja -C build install. **Desktop (please complete the following information):**; - OS: Arch Linux 5.6.3-arch1-1; - C++ compiler and version: gcc (Arch Linux 9.3.0-1) 9.3.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: SU2 v. 7.0.3, branch: develop, commit: c093a62a2b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/956:192,release,release,192,https://su2code.github.io,https://github.com/su2code/SU2/issues/956,4,"['install', 'release']","['install', 'release']"
Deployability,"**Describe the bug**; Hello to everyone,; my research group and I found some differences in the computation of the skin friction coefficient between the JST and ROE schemes near the symmetry plane.; The difference is that when using the JST scheme, there is a gradient of the skin friction coefficient at the symmetry plane.; I expect that on the symmetry plane there would be no gradient. This issue is present only for the skin friction coefficient.; We found this difference for a straight wing, but we reproduced the same issue for the SU2 test case OneraM6.; <img src=""https://user-images.githubusercontent.com/53580993/101330251-ab855000-3872-11eb-90df-561ddfe3ed38.png"" width=""400"" height=""400""> <img src=""https://user-images.githubusercontent.com/53580993/101330317-be982000-3872-11eb-9b55-4fa87e55bef6.png"" width=""400"" height=""400"">. For the case of our straight wing, maybe it could be more clear, so here is the comparison for our case.; <img src=""https://user-images.githubusercontent.com/53580993/101330692-36fee100-3873-11eb-8638-827bc9008128.png"" width=""400"" height=""400""> <img src=""https://user-images.githubusercontent.com/53580993/101330706-3bc39500-3873-11eb-8d35-bc28fe432ffc.png"" width=""400"" height=""400"">. I think that there could be a problem on the symmetry plane boundary condition when using the JST scheme.; This issue is present since SU2 V6.2.0 until the latest release 7.0.8.; Thank you in advance for your help. **To Reproduce**; To reproduce the problem you can use the OneraM6 test case in the TestCases folder, just changing the scheme between ROE and JST. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 20.04.1 LTS); - C++ compiler and version: gcc 9.3.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: from 6.2.0 to 7.0.8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1125:1391,release,release,1391,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125,1,['release'],['release']
Deployability,"**Describe the bug**; I am trying to compile SU2 on a Linux cluster. I have an mpi module loaded and I run the command ./mseon.py build and that works. Then I run ./ninja -C build install. It will try to compile SU2 but while compiling it asks for root access. ; This is the output I get:; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; ==== AUTHENTICATING FOR org.freedesktop.policykit.exec ===; Authentication is needed to run `/usr/bin/python3' as the super user; Authenticating as: root. Is there a way to compile SU2 without root access?. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.7.1908 (Core) ; - C++ compiler and version: gcc.x86_64 4.8.5-39.el7 ; - MPI implementation and version: openmpi-3.1.5-gcc-9.2.0-r3pnpzw; - SU2 Version: ver. 7.0.3 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/936:180,install,install,180,https://su2code.github.io,https://github.com/su2code/SU2/issues/936,4,"['Install', 'install', 'release']","['Installation', 'Installing', 'install', 'release']"
Deployability,"**Describe the bug**; I faced some non determinism in #1892 which I traced back to spurious values of walll roughness.; I tried running UB sanitizer and valgrind, the latter finds one memory error when accessing the flatner, but theres nothing while it's built.; The ndflatner unit test also fails on my machine, both in release and debug builds. Given the complexity of that class, and it only being used in one place, I just wrote alternative code.; @maxaehle can you investigate the issue?. **Desktop (please complete the following information):**; - ubuntu 22 + gcc + mpich (standard packages)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893:321,release,release,321,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893,1,['release'],['release']
Deployability,"**Describe the bug**; I have 3 different versions of SU2 on my machine and they all work (master branch, feature_turbomachinery_restruct_singlezone, feature_turbomachinery).; I wanted to try feature_TMZHB in order to study Harmonic Balance problems. However during make process I faced an error. I tried it on my laptop as well and faced exactly the same error. It occurred during compiling of geometry_structure.cpp. I don't know how to solve this issue. Thanks for your help in advance.; Koray. **To Reproduce**; Here's my configure outputs:. Build Configuration Summary:. Source code location: /home/koray/SU2_TMZHB/SU2; Install location: 	 /usr/local; Version: 6.0.1; C++ Compiler: g++; C Compiler: gcc; Preprocessor flags: ; Compiler flags: -g -O2; Linker flags: ; MPI support: no; Metis support: no; Parmetis support: no; TecIO support: yes; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: 	 no; LAPACK support: no; Datatype support:; double yes; complex no; codi_reverse no; codi_forward no. External includes: -DHAVE_CGNS -I$(top_srcdir)/externals/cgns -I$(top_srcdir)/externals/cgns/adf -DHAVE_TECIO -I$(top_srcdir)/externals/tecio/include ; External libs: $(top_builddir)/externals/cgns/libcgns.a $(top_builddir)/externals/tecio/libtecio.a . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: yes; Build SU2_DEF: yes; Build SU2_SOL: yes; Build SU2_GEO: yes; Build Py Wrapper: no; ################. Here are the error lines during make process:. CXX ../src/libSU2_a-dual_grid_structure.o; CXX ../src/libSU2_a-geometry_structure.o; ../src/geometry_structure.cpp: In member function ‘virtual void CPhysicalGeometry::UpdateTurboVertex(CConfig*, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:14365:20: error: ‘HUGE’ was not declared in this scope; 14365 | su2double max = -HUGE;; | ^~~~; make[1]: *** [Makefile:857: ../src/libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory '/home/ko",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1644:551,Configurat,Configuration,551,https://su2code.github.io,https://github.com/su2code/SU2/issues/1644,2,"['Configurat', 'Install']","['Configuration', 'Install']"
Deployability,"**Describe the bug**; I have successfully built the `SU2`. Then, I import the `pysu2`, and a bug is reported:. ```; (SU2) zhq@ubuntu:~/Desktop/SU2$ python; Python 3.7.11 (default, Jul 27 2021, 14:32:16) ; [GCC 7.5.0] :: Anaconda, Inc. on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import pysu2; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/zhq/Desktop/SU2/bin/pysu2.py"", line 20, in <module>; _pysu2 = swig_import_helper(); File ""/home/zhq/Desktop/SU2/bin/pysu2.py"", line 17, in swig_import_helper; return importlib.import_module(mname); File ""/home/zhq/.conda/envs/SU2/lib/python3.7/importlib/__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); ValueError: mpi4py.MPI.Status size changed, may indicate binary incompatibility. Expected 56 from C header, got 48 from PyObject; >>> . ```. **To Reproduce**; I just build the `SU2` from the source code as the recommanded:. ```; python3 ./meson.py build -Denable-pywrapper=true --prefix=/home/zhq/Desktop/SU2/; ./ninja -C build install; ```; Then, enter the python environment, and import `pysu2`. . **Desktop (please complete the following information):**; - OS: Ubuntu 18; - C++ compiler and version: ; 1. gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04); 2. gcc 7.5.0 ""c++ (Ubuntu 7.5.0-3ubuntu1~18.04); - MPI implementation and version: mpi4py-3.1.3; - SU2 Version: 7.3.0 ""Blackbird"". Any suggestion is appreciated~~~",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1581:1105,install,install,1105,https://su2code.github.io,https://github.com/su2code/SU2/issues/1581,2,['install'],['install']
Deployability,"**Describe the bug**; I tried to install SU2 from source on HPC system, but on ninja install step it gives error about hdf5 like on attached file.; `(base) [root@headnode SU2_v7.5.1]# ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dwith-omp=true --prefix=/shared/apps/SU2/7.5.1/`; `(base) [root@headnode SU2_v7.5.1]# ./ninja -C build install`. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 7.9)]; - C++ compiler and version: [e.g., g++ (GCC) 8.5.0]; - MPI implementation and version: [e.g., OpenMPI 4.0.3]; - SU2 Version: [e.g., v7.5.1]. [ninja.txt](https://github.com/su2code/SU2/files/11848633/ninja.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2058:33,install,install,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/2058,3,['install'],['install']
Deployability,"**Describe the bug**; I'm attempting to run coupled CHT simulations with a single fluid and a single solid zone. Both zones are read as seperate CGNS files.; In Dry-run mode everything works fine. However, when starting an actual run no matter in which order the zones are specified in the configuration list, the 2nd zone is always considered invalid:. > ------------------- Geometry Preprocessing ( Zone 1 ) -------------------; > Reading the CGNS file: MeshSolid.cgns.; > WARNING: The CGNS file version (3.31) is old and may cause high memory usage issues, consider updating the file with the cgnsupdate tool.; > CGNS file contains 1 database(s).; > Database 1, BASE#1: cell dimension of 2, physical dimension of 3.; > 1 total zone(s).; > Zone number 2 invalid. It seems this error is thrown during the CGNS import.; https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/externals/cgns/cgns_internals.c#L10186-L10198. Both zones run fine individually (when adding the missing, coupled BC of course).; When the second zone is converted to SU2 format and read in the native format, the case runs normally. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [CoupledSim.zip](https://github.com/su2code/SU2/files/8303540/CoupledSim.zip). **Desktop (please complete the following information):**; - OS: SUSE Linux Enterprise Server 15 SP1; - C++ compiler and version: intel 19.0.5.281; - MPI implementation and version: intel MPI 2019; - SU2 Version: v7.3.0 (develop)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1564:290,configurat,configuration,290,https://su2code.github.io,https://github.com/su2code/SU2/issues/1564,1,['configurat'],['configuration']
Deployability,"**Describe the bug**; I'm trying to build SU2 with OpenMPI 4.0.2, which I installed as static only. The SU2 build fails when it tries to link an executable, because it links with libmpi.a, but it doesn't link with `-lopen-pal -lopen-rte -lz` which are required by OpenMPI (as correctly stated in the pkgconfig files that were created when compiling OpenMPI, but that are ignored by the SU2 build system). If I go to the build directory and try to link the executable manually, adding `-lopen-pal -lopen-rte -lz` at the end of the link line, it works, but then when running ninja again, it wants to relink it again (I hate it when build tools don't let you to do tricks :wink: ) so I get stuck and I cannot proceed beyond this point. **To Reproduce**; Just try to build with `./meson.py builddir --prefix=myinstalldir -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Denable-cgns=true -Denable-openblas=true` provided that you previously installed OpenMPI as static only. **Desktop (please complete the following information):**; - MacOS Sierra; - LLVM 7.0.0 (custom build); - OpenMPI 4.0.2; - SU2 7.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/867:74,install,installed,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/867,2,['install'],['installed']
Deployability,"**Describe the bug**; In PR #1105 an `isnan(SU2_TYPE::GetValue(monitor))` check was introduced. I get a compiler error (serial build, no AD DD involved) `call of overload isnan(souble&) is ambiguos` so the complier is probably confused about the return type of `SU2_TYPE::GetValue(monitor)` which is `passivedouble` which itself is hardcoded to be `double` in `datatype_structure.hpp`. Or sth else is happening idk. ![image](https://user-images.githubusercontent.com/31306376/99810957-c5b9f100-2b44-11eb-80e6-b58ce4277bd2.png). I only have the problem with gcc5.3.0. On the same system I have an unsupported gcc7.4.0 that works. My private machine with gcc10.2.0 works fine as well. So I guess it is a specific compiler problem. In my I hit the :keyboard: a few times without actually knowing what I am doing:; - use `isnan(monitor)` ... same error; - use `isnan(static_cast<double>(monitor))` ... same error; - use `isnan(static_cast<double>(SU2_TYPE::GetValue(monitor)))` ... same error; - changed the return type of `GetValue` to `double` ...same error. I guess this problem is really specific to my setup. gcc5.3.0 is old but not grandpa kinda old with the release dec 2015 ... well ok maybe it is :older_man: ; I would be happy with some suggestions what to try out maybe, also if I misinterpret the error a pointer in the right direction would help. If @pcarruscag could have a quick look that would be great. . Thanks and warm regards, Tobi. **To Reproduce**; You probably cant without an old enough compiler. **Desktop (please complete the following information):**; - OS: RHES 7.6; - C++ compiler and version: g++ (GCC) 5.3.0; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1112:1161,release,release,1161,https://su2code.github.io,https://github.com/su2code/SU2/issues/1112,1,['release'],['release']
Deployability,"**Describe the bug**; It looks like compilation depends on being able to reach the coolprop library, even when it is not used:; https://www.cfd-online.com/Forums/su2-installation/246859-coolprop-link-7-5-0-doesnt-work.html. I already noticed when compiling (in linux, not windows as the cfd-online post) that I always see some coolprop message. I guess some coolprop actions need to be inside some 'if coolprop' condition, depending on the presence of the coolprop compiler option (-Denable-coolprop). Besides that, it looks like the auto-fetch of coolprop in windows does not work, at least for the cfd-online user.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1868:166,install,installation,166,https://su2code.github.io,https://github.com/su2code/SU2/issues/1868,1,['install'],['installation']
Deployability,"**Describe the bug**; It looks like we do not actually need to prescribe unit normal vectors for MARKER_INLET, because it is normalized in the code, e.g. in BC_Inlet. When a 2D inlet is at a 45 degree angle, the normal vector of the inlet can be given as [1.0, 1.0] in the config file. However, when you want to generate and use an inlet profile for this, you will get an error message . ```; ERROR: Found these values in columns 4 - 5; [1.000000e+00, 1.000000e+00]; These values should be components of a unit vector for direction,; but their magnitude is: 1.414214e+00; ```; I suggest to accept non-normalized vectors as input. This simply means that we remove this check for inlet profiles and update the description for the inlet boundary condition: **accepts surface normal vector** instead of **accepts surface unit normal vector**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1495:697,update,update,697,https://su2code.github.io,https://github.com/su2code/SU2/issues/1495,1,['update'],['update']
Deployability,"**Describe the bug**; Symmetry boundary condition does not work properly. In particular, the values on the symmetry plane are wrong with respect to a computation performed on the complete mesh. In the images you can see the pressure coefficient and the skin friction coefficient magnitude for both the simulations. For each image, the upper half is the solution on the complete mesh whereas the lower portion is the solution on the halved mesh with the symmetry plane. I am performing an incompressible RANS simulation with SST turbulence model. I am attaching the files needed to perform both the simulations. The branch I used is the develop one. I also tried with the main branch but the error persists. ![PressureCoefficient](https://user-images.githubusercontent.com/43813346/180821411-9978c962-b3c0-42d0-b631-35a5b0c71b29.png); ![SFC_Error](https://user-images.githubusercontent.com/43813346/180821429-f476bb80-1ac1-4fad-b55b-f5ea05f3a604.png). **To Reproduce**; Please find the config and mesh file at the following link. https://we.tl/t-nmjBv7HJv0. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.6.1810 (Core); - C++ compiler and version: gcc 11.2.0; - MPI implementation and version: OpenMPI 4.0.1; - SU2 Version: v7.3.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1723:1134,release,release,1134,https://su2code.github.io,https://github.com/su2code/SU2/issues/1723,1,['release'],['release']
Deployability,"**Describe the bug**; There is some issue with having two sets of intersecting periodic boundary conditions. I was attempting to simulate plane channel flow (Poiseuille) between two infinite plates with SU2 v. 7.0.7 using RANS, but the results are not correct. Specifically, I see a lot of garbage in the corners, where the periodic BCs intersect (see pictures). ![corner_problems](https://user-images.githubusercontent.com/6933834/95637061-a5771c80-0a45-11eb-80d9-9e81affa0c89.png). I thought that periodic BCs had been updated and working, and that having multiple periodic BCs was not an issue. Is this not the case, or have I done something wrong?. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; (See attached). **Desktop (please complete the following information):**; - OS: Arch Linux - Linux Kernel 5.8.14; - C++ compiler and version: GCC 10.2.0; - MPI implementation and version: Open MPI 4.0.5; - SU2 Version: 7.0.7 - branch: develop - commit: e9c824cd70. [channel_bug_files.tar.gz](https://github.com/su2code/SU2/files/5357906/channel_bug_files.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1090:521,update,updated,521,https://su2code.github.io,https://github.com/su2code/SU2/issues/1090,1,['update'],['updated']
Deployability,"**Describe the bug**; This is an issue that @jayantmukho, @WallyMaier and I have seen when trying to build on Stanford's cluster with meson. Meson's call to `shutil.copystat()` fails, specifically on NFS filesystems, e.g.:; ```; [649/650] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/groups/jjalonso/su2/wwv/bin; Traceback (most recent call last):; File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/mesonmain.py"", line 129, in run; return options.run_func(options); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 515, in run; installer.do_install(datafilename); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 342, in do_install; self.install_targets(d); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 449, in install_targets; self.do_copyfile(fname, outname); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 258, in do_copyfile; shutil.copystat(from_file, to_file); File ""/share/software/user/open/python/3.6.1/lib/python3.6/shutil.py"", line 225, in copystat; _copyxattr(src, dst, follow_symlinks=follow); File ""/share/software/user/open/python/3.6.1/lib/python3.6/shutil.py"", line 164, in _copyxattr; value = os.getxattr(src, name, follow_symlinks=follow_symlinks); OSError: [Errno 22] Invalid argument: 'SU2_CFD/src/SU2_CFD'; ```; Commenting out the call to `copystat()` in line 258 of minstall.py (which doesn't seem critical for the installation) seems to fix the issue. I realize this isn't an issue specific to SU2, so I wanted peoples' opinions on how this should be handled. Just an addition to documentation?. **Desktop (please complete the following information):**; - OS: CentOS 7.x; - SU2 Version: v7.0.x",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/937:239,Install,Installing,239,https://su2code.github.io,https://github.com/su2code/SU2/issues/937,4,"['Install', 'install']","['Installing', 'installation', 'installer']"
Deployability,"**Describe the bug**; When I read the turb model code, I find the primitives used are usually in different iterations. What I mean is the NS solver has done Preprocessing/Space_Integration/Time_Integration/Postprocessing and updated the Solution before turb solver in CFluidIteration::Iterate(). And the consequence of that is the two vars Solution and Primitive are out of step for turb solver and the gradients is all related to Primitive but not Solution. Normally turb solver uses the Primitive and Gradient to compute flux, but when it comes to compute the eddy viscocity(MuT) in Postprocessing function both in SA and SST model. Take SA model as an example:. '''; void CTurbSASolver::Postprocessing(CGeometry *geometry, CSolver **solver_container, CConfig *config, unsigned short iMesh) {. const su2double cv1_3 = 7.1*7.1*7.1, cR1 = 0.5, rough_const = 0.03;. const bool neg_spalart_allmaras = config->GetSAParsedOptions().version == SA_OPTIONS::NEG;. /*--- Compute eddy viscosity ---*/. for (unsigned long iPoint = 0; iPoint < nPoint; iPoint ++) {. const su2double rho = solver_container[FLOW_SOL]->GetNodes()->GetDensity(iPoint);; const su2double mu = solver_container[FLOW_SOL]->GetNodes()->GetLaminarViscosity(iPoint);. const su2double nu = mu/rho;; const su2double nu_hat = nodes->GetSolution(iPoint,0);; const su2double roughness = geometry->nodes->GetRoughnessHeight(iPoint);; const su2double dist = geometry->nodes->GetWall_Distance(iPoint) + rough_const * roughness;. su2double Ji = nu_hat/nu;; if (roughness > 1.0e-10); Ji += cR1*roughness/(dist+EPS);. const su2double Ji_3 = Ji*Ji*Ji;; const su2double fv1 = Ji_3/(Ji_3+cv1_3);. su2double muT = rho*fv1*nu_hat;. if (neg_spalart_allmaras) muT = max(muT,0.0);. nodes->SetmuT(iPoint,muT);. }. }; '''. Defined in CEulerVariable.hpp and CNSVariable.hpp, the following two functions returns vars in next and current iterations:. rho = solver_container[FLOW_SOL]->GetNodes()->GetDensity(iPoint);; mu = solver_container[FLOW_SOL]->GetNodes()->G",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1809:225,update,updated,225,https://su2code.github.io,https://github.com/su2code/SU2/issues/1809,1,['update'],['updated']
Deployability,"**Describe the bug**; When I run command ""meson.py build"", the following happens; [WinError 123]:The syntax of the file name, directory name, or volume label is incorrect.:'D:\\MinGW\\mingw64\\.......\\libC:\\......\\msmpi.a. ![20200711213011325](https://user-images.githubusercontent.com/49433389/87293481-f35ab200-c534-11ea-9cd5-1e322a442c87.png). (you can see the detail in <https://www.cfd-online.com/Forums/su2/228717-error-su2-7-0-5-installation-source-windows10.html>). **To Reproduce**. **Desktop (please complete the following information):**; - OS: [Win10]; - C++ compiler and version: [MinGW-x64 8.0.1]; - MPI implementation and version: [MS MPI]; - SU2 Version: [v7.0.5]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1047:439,install,installation-source-,439,https://su2code.github.io,https://github.com/su2code/SU2/issues/1047,2,['install'],['installation-source-']
Deployability,**Describe the bug**; When I run the meson script for building it gives the wrong build command. This is both for the master and develop version. **To Reproduce**; Simply type; ./meson.py build. One of the last output lines is; Use './ninja -C false install' to compile and install SU2. while it should be; Use './ninja -C build install' to compile and install SU2. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: GCC 8.4.0; - MPI implementation and version: Sequential; - SU2 Version: 7.0.5,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1011:250,install,install,250,https://su2code.github.io,https://github.com/su2code/SU2/issues/1011,4,['install'],['install']
Deployability,"**Describe the bug**; When I try to create the OpenMP version of the adjoint solver with the Intel compiler, I get compiler error in opdi. Here are a couple of examples, which are all of the same error type. ../SU2/externals/opdi/include/opdi/backend/macro/dataTools.hpp(39): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(parallelData). ../SU2/externals/opdi/include/opdi/backend/macro/implicitBarrierTools.hpp(41): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(implicitBarrierStack). ../SU2/externals/opdi/include/opdi/logic/omp/adjointAccessControl.hpp(47): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(currentAdjointAccess). **To Reproduce**; Use the following build options (I don't think the mkl option is needed, but that is what I used). export CXX=mpiicpc; export CC=mpiicc; export CXXFLAGS=""-O2""; export CFLAGS=""-O2"". ./meson.py ../Build_MKL --prefix=/home/whatever -Denable-mkl=true -Dcustom-mpi=true -Dwith-omp=true -Denable-autodiff=true -Denable-directdiff=true; ./ninja -C ../Build_MKL install. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: Intel 19.1.0.166 20191121; - MPI implementation and version: Intel MPI; - SU2 Version: Latest develop version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1273:1163,install,install,1163,https://su2code.github.io,https://github.com/su2code/SU2/issues/1273,1,['install'],['install']
Deployability,"**Describe the bug**; When running any dry run in the form; `SU2_CFD -d <configname>.cfg`; an integer divide by zero (`Floating point exception: integer divide by zero`) happens. A backtrace pointed me towards `roundUpDiv (numerator=0, denominator=0)` in `omp_structure.hpp` +104 and further up `computeStaticChunkSize (totalWork=0, numThreads=1, maxChunkSize=4096)`. I guess one might check somewhere along the line whether there is even work to do, i.e. wrap the `*.Initialize(nPoint,...)` in `C<Inc>EulerSolver` etc in `if (nPoint != 0)` conditionals (that got the Quickstart working again for me). But maybe there is a better more elegant solution without too much overhead. I would like @pcarruscag to take a look as the omp stuff is involved :). **To Reproduce**; Every dryrun I tried, using Quickstart should be enough to understand the problem. **Desktop (please complete the following information):**; - OS: Red Hat Enterprise Linux 7.6; - C++ compiler and version: GCC 4.8.5; - MPI implementation and version: openMPI 3.1.2; - SU2 Version: latest develop, but this probably affects 7.0.1 as well, i.e. hotfix time 🕙",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/857:1112,hotfix,hotfix,1112,https://su2code.github.io,https://github.com/su2code/SU2/issues/857,1,['hotfix'],['hotfix']
Deployability,"**Describe the bug**; When setting OUTPUT_FILES= (SURFACE_TECPLOT) the output file is <name>.szplt. According to the code nomenclature, this file extension should be for the binary file: SU2_CFD/src/output/CTecplotBinaryFileWriter.cpp; When using the OUTPUT_FILES= (SURFACE_TECPLOT_BINARY) I get the following error:; OUTPUT_FILES: invalid option value SURFACE_TECPLOT_BINARY. Check current SU2 options in config_template.cfg. I think the nomenclature has changed w.r.t. previous versions but the template config file did not. SURFACE_TECPLOT which should output a "".dat"" file (see SU2_CFD/src/output/CTecplotFileWriter.cpp) is now (v7.0.6) SURFACE_TECPLOT_ASCII; SURFACE_TECPLOT_BINARY which should output a "".szplt"" file (see SU2_CFD/src/output/CTecplotBinaryFileWriter.cpp) is now (v7.0.6) SURFACE_TECPLOT. **Correction**; Update the config file. - SU2 Version: v7.0.5 (also applicable to v7.0.6)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1051:826,Update,Update,826,https://su2code.github.io,https://github.com/su2code/SU2/issues/1051,1,['Update'],['Update']
Deployability,"**Describe the bug**; While doing shape optimization for drag minimization with the Euler solver, I received a negative drag for the optimized geometry. This seemed strange to me, so I investigated it and realized, that the CD in SU2 seems to be computed incorrectly in some cases. . During the investigation, I computed the drag force in Paraview based on the SU2 flow result and compared it to the drag force computed by SU2 both for the initial and the final optimization geometry. The results did not match, which is not what I would have expected. . In SU2, I compute the drag force by multiplying CD with the non-dimensional factor written to the forces_breakdown file. For Paraview, I wrote a script which does the following to compute the drag force:; - Load surface flow solution for the wing surface; - Compute surface normals; - Compute Drag = -Pressure*(Normals_X * cos(AoA/180 * 3.1415) + Normals_Z * sin(AoA/180 * 3.1415)); - Integrate this over the whole wing surface to get the total drag force. You can also find this Paraview script attached.; I validated the Paraview script for multiple simple testcases, for which SU2 and Paraview gave me exactly the same drag force. When I applied it to the initial optimization geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific cr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:940,Integrat,Integrate,940,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['Integrat'],['Integrate']
Deployability,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1229:1258,configurat,configuration,1258,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229,2,['configurat'],['configuration']
Deployability,**Desktop (please complete the following information):**; - OS: WSL (Ubuntu22.04); - C++ compiler and version: g++ 11.3.0; - MPI implementation and version: 4.0; - SU2 Version: v7.5.1. Hello：; My computer have 2 epyc cpus，when I run QuickyStart ，; it warns：SU2 was not compiled for an AVX-capable architecture. Performance could be better。; My compile configuration：; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true . How can I solve it？; Thanks！,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1939:352,configurat,configuration,352,https://su2code.github.io,https://github.com/su2code/SU2/issues/1939,1,['configurat'],['configuration']
Deployability,"**Desktop (please complete the following information):**; - OS: [e.g., WSL (Mint 21.2)]; - C++ compiler and version: [e.g., g++ (GCC) 11.4.0]; - MPI implementation and version: [e.g., OpenMPI 4.1.2]; - SU2 Version: [e.g., v7.5.1]; ; I compile SU2 with ; ```; export CXXFLAGS=""-march=native -funroll-loops -O2""; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true --prefix=/opt/su2; ./ninja -C build install; ```. And it compiles successfully. When I run **QuickStart** with ``` mpirun -n 2 SU2_CFD inv_NACA0012.cfg```, it can run sucessfully, but when I run serial with ``` SU2_CFD inv_NACA0012.cfg```, I get a error:; ```; [DESKTOP-7ALPJDS:00356] *** An error occurred in MPI_Win_create; [DESKTOP-7ALPJDS:00356] *** reported by process [235864065,0]; [DESKTOP-7ALPJDS:00356] *** on communicator MPI_COMM_WORLD; [DESKTOP-7ALPJDS:00356] *** MPI_ERR_WIN: invalid window; [DESKTOP-7ALPJDS:00356] *** MPI_ERRORS_ARE_FATAL (processes in this communicator will now abort,; [DESKTOP-7ALPJDS:00356] *** and potentially your MPI job); ```. It seems that SU2 was able to run successfully in parallel, but something went wrong with running serially.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2104:412,install,install,412,https://su2code.github.io,https://github.com/su2code/SU2/issues/2104,1,['install'],['install']
Deployability,"**Is your feature request related to a problem? Please describe.**; *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*; This is a reminder for me that there is still no tutorial, documentation and V&V for wall functions. . **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*; 1. Add the Stanford diffuser case with wall functions as a tutorial to the website; 2. Add a wall function solution to the V&V for the flat plate ; 3. Update documentation for wall functions. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*. **Additional context**; *Add any other context or screenshots about the feature request here.*",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1694:519,Update,Update,519,https://su2code.github.io,https://github.com/su2code/SU2/issues/1694,1,['Update'],['Update']
Deployability,"**Is your feature request related to a problem? Please describe.**; Hello guys, I developed a [primitive tool](https://github.com/WenyinWei/SU2Configurer) to help with editing the configure file. Anyone can add or delete lines freely in the tool to configure your input to SU2. After the editing, the menu can save the .cfg file as a standard SU2 configure file. . ![Profile_Screenshot_2019_08_16](https://user-images.githubusercontent.com/33152225/63140409-6cdfdc80-c014-11e9-9e09-fe8b970d84ff.png). **Describe the solution you'd like**; 1. I am not familiar with the software release pipeline so the tool now just works in my PC with Linux version. Anyone interested in joining to make it more complete?; It is based on Qt so there should be no problem for its usage on cross-platform. . 2. I am not so familiar with the option reliance relationship in SU2 cause there are too many options in the configure template. Complicated reliance and number of options obstrcut the further intelligent implementation of automatical completion. . Any developer willing to tell me your module's option relationship will be appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/759:578,release,release,578,https://su2code.github.io,https://github.com/su2code/SU2/issues/759,2,"['pipeline', 'release']","['pipeline', 'release']"
Deployability,"**Is your feature request related to a problem? Please describe.**; When installing software on a high performance computing cluster, we typically want to reuse existing dependencies. SU2 seems to download a *lot* of things which we already have: autotools, catch2, cgns, metis, ninja, parmetis, ... . It will very likely *not* compile those correctly for our system. . **Describe the solution you'd like**; Give a flag to disable all download and fail when dependencies are not found. Give corresponding flags to point to the dependencies' folders, and use those. . **Describe alternatives you've considered**; Reverse engineering SU2's meson/ninja build to patch it to use existing dependencies.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086:73,install,installing,73,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086,2,"['install', 'patch']","['installing', 'patch']"
Deployability,"**Issue Description**; Dear all,; my research group and me found a problem when using the JST scheme.; The problem consists in a difference in the skin friction coefficient along the airfoil between 2D and 3D meshes (the 3D one is obtained by extruding the 2D mesh using only 1 cell in the span wise direction).; This difference arises when the JST scheme is used, and it leads to a ~25% of difference in the drag coefficient. In order to better explain what is happening, here is a summary table of the results for the CRM airfoil:; ![roe_jst](https://user-images.githubusercontent.com/53580993/117454345-56935600-af46-11eb-8c2f-7c314376a2a0.png). It is possible to notice that this difference does not emerge if the ROE scheme is used. For the 3D case, the boundary conditions at the side faces of the domain are `MARKER_SYM`, so that we think that this issue could be connected to the #1125 . **To Reproduce**; In order to reproduce the issue, a zip file is attached. It contains the configuration files for the 3D and 2D cases using JST and ROE, and the two grids of the CRM airfoil. It is possible to reproduce this issue also using a different airfoil. [ROEvsJST.zip](https://github.com/su2code/SU2/files/6441697/ROEvsJST.zip). **Desktop:**; - OS: Linux (Ubuntu); - C++ compiler and version: -; - MPI implementation and version: -; - SU2 Version: v7.1.1 and previous. Thanks for your help.; Ettore Saetta. Theoretical and Applied Aerodynamics Research Group (TAARG); University of Naples Federico II",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1280:987,configurat,configuration,987,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280,1,['configurat'],['configuration']
Deployability,"**Observed behaviour**; Thread sanitizer tests in the CI pipeline fail across PRs, e.g. #2158, with errors along the lines; ```; FATAL: ThreadSanitizer: unexpected memory mapping 0x7d81770ae000-0x7d8177500000; ```. **Background and possible causes**. There is some incompatibility between sanitizers and high degrees of address space layout randomization (https://github.com/google/sanitizers/issues/1716), it seems to be triggered by a combination of too recent kernel and/or too old LLVM and affects also github runners (https://github.com/actions/runner-images/issues/9491). **Possible fixes**. From what I understand in https://github.com/actions/runner-images/issues/9491 the corresponding parameters will be adapted in the runner, but it seems that there is also a workaround at the level of the workflow (https://github.com/openvswitch/ovs/commit/fa0dfa18d5344c82bc8387b4f79f4257a59d6f58).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2241:57,pipeline,pipeline,57,https://su2code.github.io,https://github.com/su2code/SU2/issues/2241,1,['pipeline'],['pipeline']
Deployability,"**This PR was created to trigger the CI pipeline, no merging intended.**. I noticed differences between results of regression tests, when running them on my system and by the Github CI pipeline. Let me check whether according to the CI pipeline, the wall roughness was actually always 0 before my bugfix in #1286. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1292:40,pipeline,pipeline,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/1292,4,"['pipeline', 'update']","['pipeline', 'updated']"
Deployability,", ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; ... and two other processes waiting at ; <details>; <summary>that place</summary>. ```; #0 ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:3225,integrat,integration,3225,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,"----------------- Space Numerical Integration ----------------------; Jameson-Schmidt-Turkel scheme (2nd order in space) for the flow inviscid terms.; JST viscous coefficients (2nd & 4th): 0.5, 0.02.; The method includes a grid stretching correction (p = 0.3).; Scalar upwind solver for the turbulence model.; First order integration in space.; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 999999999 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot binary (.plt).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; +-----------------------------------------+; | Marker Type| Marker Name|; +-----------------------------------------+; | Far-field| Tria-2-Bndry|; | | Tria-4-B",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:1762,integrat,integration,1762,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['integrat'],['integration']
Deployability,"-----------------------------------------------------------------------; | Copyright 2012-2018, Francisco D. Palacios, Thomas D. Economon, |; | Tim Albring, and the SU2 contributors. |; | |; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /home/bu/SU2; Install location: 	 /home/bu/SU2; Version: 6.1.0; C++ Compiler: /usr/lib64/mpich/bin/mpicxx; C Compiler: /usr/lib64/mpich/bin/mpicc; Preprocessor flags: -DHAVE_MPI ; Compiler flags: -O3 -Wall; Linker flags: ; MPI support: yes; Metis support: yes; Parmetis support: yes; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: 	 no; LAPACK support: no; Datatype support:; double no; complex no; codi_reverse yes; codi_forward no. External includes: -DHAVE_CGNS -I$(top_srcdir)/externals/cgns -I$(top_srcdir)/externals/cgns/adf -DHAVE_PARMETIS -I$(top_srcdir)/externals/parmetis/include -DHAVE_METIS -I$(top_srcdir)/externals/metis/include ; External libs: $(top_builddir)/externals/cgns/libcgns.a $(top_builddir)/externals/parmetis/libparmetis.a $(top_builddir)/externals/metis/libmetis.a . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: no; Build SU2_DEF: no; Build SU2_SOL: no; Build SU2_GEO: no; Build Py Wrapper: no.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:8816,Install,Install,8816,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['Install'],['Install']
Deployability,"------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\D",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:2760,install,install,2760,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['install'],['install']
Deployability,"--. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:2951,update,update,2951,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['update'],['update']
Deployability,"-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@depend",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2416,release,release-asset,2416,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['release'],['release-asset']
Deployability,./ninja -C build install error,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2199:17,install,install,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/2199,1,['install'],['install']
Deployability,".1 - <a href=""https://redirect.github.com/actions/download-artifact/pull/195"">actions/download-artifact#195</a></li>; <li>Fixed a bug in Node16 where if an HTTP download finished too quickly (&lt;1ms, e.g. when it's mocked) we attempt to delete a temp file that has not been created yet <a href=""hhttps://redirect.github.com/actions/toolkit/pull/1278"">actions/toolkit#1278</a></li>; </ul>; <h2>v3.0.1</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/download-artifact/pull/178"">Bump <code>@​actions/core</code> to 1.10.0</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/download-artifact/commit/c850b930e6ba138125429b7e5c93fc707a7f8427""><code>c850b93</code></a> Merge pull request <a href=""https://redirect.github.com/actions/download-artifact/issues/307"">#307</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/download-artifact/commit/6fd111f15ace90c9fbd0d73880db8338a776aaed""><code>6fd111f</code></a> update <code>@​actions/artifact</code></li>; <li><a href=""https://github.com/actions/download-artifact/commit/87c55149d96e628cc2ef7e6fc2aab372015aec85""><code>87c5514</code></a> Merge pull request <a href=""https://redirect.github.com/actions/download-artifact/issues/303"">#303</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/download-artifact/commit/47f9ce604fdcae5583e5ef84048eeb7ef2893652""><code>47f9ce6</code></a> update <code>@​actions/artifact</code></li>; <li><a href=""https://github.com/actions/download-artifact/commit/127824d34cb0da7dc3cb064a37ae280b7c09aca6""><code>127824d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/download-artifact/issues/299"">#299</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/download-artifact/commit/6dd49bff0a6150b47d41011c034b762053acaf6f""><code>6dd49bf</code></a> licensed only artifact</li>; <li><a href=""https://github.com/actions/download-artifact/commit/f71c0e3da3bb6",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:2964,update,update,2964,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['update'],['update']
Deployability,".1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:6301,upgrade,upgrade,6301,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,3,['upgrade'],['upgrade']
Deployability,".24.3 - 15 Feb 2024</h2>; <ul>; <li>Fix an issue where the CodeQL Action would fail to load a configuration specified by the <code>config</code> input to the <code>init</code> Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2147"">#2147</a></li>; </ul>; <h2>3.24.2 - 15 Feb 2024</h2>; <ul>; <li>Enable improved multi-threaded performance on larger runners for GitHub Enterprise Server users. This feature is already available to GitHub.com users. <a href=""https://redirect.github.com/github/codeql-action/pull/2141"">#2141</a></li>; </ul>; <h2>3.24.1 - 13 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.2. <a href=""https://redirect.github.com/github/codeql-action/pull/2124"">#2124</a></li>; <li>The CodeQL action no longer fails if it can't write to the telemetry api endpoint. <a href=""https://redirect.github.com/github/codeql-action/pull/2121"">#2121</a></li>; </ul>; <h2>3.24.0 - 02 Feb 2024</h2>; <ul>; <li>CodeQL Python analysis will no longer install dependencies on GitHub Enterprise Server, as is already the case for GitHub.com. See <a href=""https://github.com/github/codeql-action/blob/main/#3230---08-jan-2024"">release notes for 3.23.0</a> for more details. <a href=""https://redirect.github.com/github/codeql-action/pull/2106"">#2106</a></li>; </ul>; <h2>3.23.2 - 26 Jan 2024</h2>; <ul>; <li>On Linux, the maximum possible value for the <code>--threads</code> option now respects the CPU count as specified in <code>cgroup</code> files to more accurately reflect the number of available cores when running in containers. <a href=""https://redirect.github.com/github/codeql-action/pull/2083"">#2083</a></li>; <li>Update default CodeQL bundle version to 2.16.1. <a href=""https://redirect.github.com/github/codeql-action/pull/2096"">#2096</a></li>; </ul>; <h2>3.23.1 - 17 Jan 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.0. <a href=""https://redirect.github.com/github/codeql-action/pull/2073"">#2073</a></li>; <li>Change the retenti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:11455,install,install,11455,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['install'],['install']
Deployability,"//github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-auto",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8575,patch,patch,8575,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['patch'],['patch']
Deployability,"/1045"">Implement branch list using callbacks from exec function</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1050"">Add in explicit reference to private checkout options</a></li>; <li>[Fix comment typos (that got added in <a href=""https://redirect.github.com/actions/checkout/issues/770"">#770</a>)](<a href=""https://redirect.github.com/actions/checkout/pull/1057"">actions/checkout#1057</a>)</li>; </ul>; <h2>v3.2.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/942"">Add GitHub Action to perform release</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/967"">Fix status badge</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1002"">Replace datadog/squid with ubuntu/squid Docker image</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/964"">Wrap pipeline commands for submoduleForeach in quotes</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1029"">Update <code>@​actions/io</code> to 1.1.2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1039"">Upgrading version to 3.2.0</a></li>; </ul>; <h2>v3.1.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/939"">Use <code>@​actions/core</code> <code>saveState</code> and <code>getState</code></a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/922"">Add <code>github-server-url</code> input</a></li>; </ul>; <h2>v3.0.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/770"">Add input <code>set-safe-directory</code></a></li>; </ul>; <h2>v3.0.1</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac""><code>3df4ab1</code></a> Release 4.0.0 (<a href=""https://redirect.github.com/actions/checkout/issues/1447"">#1447</a>)</li>; <li><a href=""https",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:8956,Update,Update,8956,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Update'],['Update']
Deployability,"/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to read the code. Some simple ""bugs"" I've found but I doubt it.; In numerics_direct_mean.cpp , I've read compute_residual of CUSP and found something doubtly.; ; At line 643 . > for (iDim = 0; iDim < nDim; iDim++) {; Velocity_i[iDim] = V_i[iDim+1];; Velocity_j[iDim] = V_j[iDim+1];; sq_vel_i += 0.5*Velocity_i[iDim]*Velocity_i[iDim];; sq_vel_j += 0.5*Velocity_j[iDim]*Velocity_j[iDim];; }; ; SoundSpeed_i = sqrt(Gamma*Gamma_Minus_One*(Energy_i-0.5*sq_vel_i));; SoundSpeed_j = sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j));. Here I assume is computing Roe-Sound-Speed, but sq_vel_j's coefficient is not 1/4 but 1/2.; >sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j)). And I don't know whether it's suitable to mix original CUSP and simplified CUSP.; Here, in computing dissipation parameters, SU2 used a simplified Lamda. > LamdaNeg = ProjVelocity - MeanSoundSpeed;; LamdaPos = ProjVelocity + MeanSoundSpeed;. I've read paper and there are two kind of computing-dissipation-parameter method, SU2 seems mixed them. Whether it's legal?. At line 729 ; > if ((Beta > 0.0) && ((0.0 < Mach) && (Mach < 1.0))) Nu_c = - (1.0-Beta)*LamdaNeg;. In Computational Fluid Dynamics (Computational Fluid Dynamics: Principles and Applications (Third Edition)[J]. Computational Fluid Dynamics Principles & Applications, 2015:ix.); Nu_c seems to be - (1.0+Beta)*LamdaNeg. And I want to know which configuration is suit for this condition, thanks~. That's all my confusion. I don't know where I've done wrong and where I've misunderstood. ：）",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:4689,configurat,configuration,4689,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,1,['configurat'],['configuration']
Deployability,"/Python3.7/amgio_py.c:614:26: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~; ./sources/Python3.7/amgio_py.c:614:7: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warn",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:2959,Release,Release,2959,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['Release'],['Release']
Deployability,/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Document,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:6395,Install,Installing,6395,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\D,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:6488,Install,Installing,6488,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Da,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:6755,Install,Installing,6755,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"/SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:6763,integrat,integration,6763,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io;,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4581,Install,Installing,4581,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"/redirect.github.com/actions/setup-python/pull/724"">actions/setup-python#724</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4...v4.8.0"">https://github.com/actions/setup-python/compare/v4...v4.8.0</a></p>; <h2>v4.7.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump word-wrap from 1.2.3 to 1.2.4 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/702"">actions/setup-python#702</a></li>; <li>Add range validation for toml files by <a href=""https://github.com/dmitry-shibanov""><code>@​dmitry-shibanov</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/726"">actions/setup-python#726</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4...v4.7.1"">https://github.com/actions/setup-python/compare/v4...v4.7.1</a></p>; <h2>v4.7.0</h2>; <p>In scope of this release, the support for reading python version from pyproject.toml was added (<a href=""https://redirect.github.com/actions/setup-python/pull/669"">actions/setup-python#669</a>).</p>; <pre lang=""yaml""><code> - name: Setup Python; uses: actions/setup-python@v4; &lt;/tr&gt;&lt;/table&gt; ; </code></pre>; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/setup-python/commit/0a5c61591373683505ea898e09a3ea4f39ef2b9c""><code>0a5c615</code></a> Update action to node20 (<a href=""https://redirect.github.com/actions/setup-python/issues/772"">#772</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/0ae58361cdfd39e2950bed97a1e26aa20c3d8955""><code>0ae5836</code></a> Add example of GraalPy to docs (<a href=""https://redirect.github.com/actions/setup-python/issues/773"">#773</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/b64ffcaf5b410884ad320a9cfac8866006a109aa""><code>b64ffca</code></a> update ac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:4358,release,release,4358,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['release'],['release']
Deployability,"/user-images.githubusercontent.com/46273732/74617122-a3003500-50f9-11ea-9a0f-1db78a9d4d04.png); ![Tt comparsion](https://user-images.githubusercontent.com/46273732/74617123-a3003500-50f9-11ea-9f86-decee9d097b4.png); ![Turb comparsion](https://user-images.githubusercontent.com/46273732/74617124-a4316200-50f9-11ea-8e10-bc7dcbb0e8c6.png). I am also attaching my python plotting results in case someone wants to reproduce the graphs and/or look at the equations in detail. [plotting_script.txt](https://github.com/su2code/SU2/files/4217388/plotting_script.txt). Please note that the inlet file was created with random fluctuating values to ensure correct inlet interpolation is happening. Some values and patterns may look unrealistic. Additionally, note that Akima can extrapolate values as well but will display a warning if it is doing so. Linear will only do interpolation and will exit if the inlet file does not have the specific radius data. However, it will show on the console which radius data is missing so the user can add it. Also, currently, the flow should be in z-direction only. I don't know how to find the flow direction through any built-in method in SU2 during run. If you can tell me that I can update the code to support any flow direction. During interpolation, it will display that flow direction must be in z-direction to avoid any mistake by the user. Thanks,; Aman. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815:4142,update,update,4142,https://su2code.github.io,https://github.com/su2code/SU2/pull/815,1,['update'],['update']
Deployability,"0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9335,update,updates,9335,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['update'],['updates']
Deployability,"0507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195149921-6e85c1c7-2fc8-47e9-b935-246081ea17fd.png). SA+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195152304-e81c92f3-35da-4c50-9cd8-e5528c644cde.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. More comments to the code will be added in the following days. Especially to the declaration of some functions. I know that it is not the most good-looking code right now but I preferred uploading it now such that others can use it even if it is not really clean. . ## Related Work; Work is related to the PR #1751. It extends it to SA turbulence model and includes cross-flow effects (LM2015) and turbulence index computations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:4399,update,updated,4399,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['update'],['updated']
Deployability,"106</a></li>; </ul>; <h2>3.23.2 - 26 Jan 2024</h2>; <ul>; <li>On Linux, the maximum possible value for the <code>--threads</code> option now respects the CPU count as specified in <code>cgroup</code> files to more accurately reflect the number of available cores when running in containers. <a href=""https://redirect.github.com/github/codeql-action/pull/2083"">#2083</a></li>; <li>Update default CodeQL bundle version to 2.16.1. <a href=""https://redirect.github.com/github/codeql-action/pull/2096"">#2096</a></li>; </ul>; <h2>3.23.1 - 17 Jan 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.0. <a href=""https://redirect.github.com/github/codeql-action/pull/2073"">#2073</a></li>; <li>Change the retention period for uploaded debug artifacts to 7 days. Previously, this was whatever the repository default was. <a href=""https://redirect.github.com/github/codeql-action/pull/2079"">#2079</a></li>; </ul>; <h2>3.23.0 - 08 Jan 2024</h2>; <ul>; <li>We are rolling out a feature in January 2024 that will disable Python dependency installation by default for all users. This improves the speed of analysis while having only a very minor impact on results. You can override this behavior by setting <code>CODEQL_ACTION_DISABLE_PYTHON_DEPENDENCY_INSTALLATION=false</code> in your workflow, however we plan to remove this ability in future versions of the CodeQL Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2031"">#2031</a></li>; <li>The CodeQL Action now requires CodeQL version 2.11.6 or later. For more information, see <a href=""https://github.com/github/codeql-action/blob/main/#2227---16-nov-2023"">the corresponding changelog entry for CodeQL Action version 2.22.7</a>. <a href=""https://redirect.github.com/github/codeql-action/pull/2009"">#2009</a></li>; </ul>; <h2>3.22.12 - 22 Dec 2023</h2>; <ul>; <li>Update default CodeQL bundle version to 2.15.5. <a href=""https://redirect.github.com/github/codeql-action/pull/2047"">#2047</a></li>; </ul>; <h2>3.22.11 - 13 Dec 2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:12710,rolling,rolling,12710,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,2,"['install', 'rolling']","['installation', 'rolling']"
Deployability,"1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-bcea-11e7-94d5-e248812c385d.png). I forced it stopped and compare result with JST scheme:; >CUSP(3Level multigrid); Total CL: 0.336272 ; Total CD: 0.0220499 ; JST (3Level multigrid); Total CL: 0.326933 ; Total CD: 0.0213497 ; ; The result is acceptable.; But when I change the limiter to""BARTH_JESPERSEN""(The configuration file doesn't show it); (still CFL = 1.0; Same multigrid configuration); SU2 converged quickly.; ![cusp3levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32143902-c058ebdc-bceb-11e7-9b55-32ca093fd729.png); What's more, the result is also acceptable. Based on above results, I set no multigrid working.; SU2 still oscillating when CFL number is 4.0 (Both VENKATAKRISHNAN and BARTH_JESPERSEN limiter); BARTH_JESPERSEN ; ![cusp0levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:2310,configurat,configuration,2310,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,1,['configurat'],['configuration']
Deployability,"1e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9017,Update,Update,9017,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Update'],['Update']
Deployability,"2/amginria/interface.py"", line 41, in <module>; > import _amgio as amgio; > ModuleNotFoundError: No module named '_amgio'; > ```. and followed the instructions provided as in [https://github.com/su2code/SU2/issues/948#issuecomment-619334494](url):. > The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback.; > ; > Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; > ; > ```; > #!/usr/bin/env python; > ```; > ; > uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?; > ; > If it didn't build/install, you could go into extensions/AMGIO/su2io and run; > ; > ```; > python3 setup.py build_ext && python3 setup.py install; > ```; > ; > If it did build/install, try the command; > ; > ```; > python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; > ```. After doing `python3 setup.py build_ext && python3 setup.py install`, I encountered the following error:. > ```; > (temp_su5) takashi279@turing1:/dfs/user/takashi279/plasma/design/multiscale_adap3/SU2/externals/AMGIO/su2io$ python3 setup.py build_ext && python3 setup.py install; > running build_ext; > running install; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/install.py:37: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.; > setuptools.SetuptoolsDeprecationWarning,; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/easy_install.py:147: EasyInstallDeprecationWarning: easy_install command is deprecated. Use build and pip and other standards-based tools.; > EasyInstallDeprecationWarning,; > running bdist_egg; > error: Invalid distribution name",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1699:1691,install,install,1691,https://su2code.github.io,https://github.com/su2code/SU2/issues/1699,2,['install'],['install']
Deployability,2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Docume,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:6306,Install,Installing,6306,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,2649| 2.12649| kg/m^3| 1|; | Temperature| 300| 300| K| 1|; | Total Energy| 216650| 86117.4| m^2/s^2| 2.51575|; | Velocity-X| 51.2923| 293.458| m/s| 0.174786|; | Velocity-Y| 9.04422| 293.458| m/s| 0.0308195|; |Velocity Magnitude| 52.0836| 293.458| m/s| 0.177482|; +--------------------------------------------------------------------------+; | Viscosity| 1.84592e-05| 624.034| N.s/m^2| 2.95804e-08|; | Conductivity| -| 179134| W/m^2.K| -|; | Turb. Kin. Energy| 10.1726| 86117.4| m^2/s^2| 0.000118125|; | Spec. Dissipation| 117188| 293.458| 1/s| 399.335|; +--------------------------------------------------------------------------+; | Mach Number| -| -| -| 0.15|; | Reynolds Number| -| -| -| 6e+06|; +--------------------------------------------------------------------------+. Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; Initialize Jacobian structure (Navier-Stokes). MG level: 1.; Initialize Jacobian structure (Navier-Stokes). MG level: 2.; Initialize Jacobian structure (Navier-Stokes). MG level: 3. ----------------- Integration and Numerics Preprocessing ----------------; Integration Preprocessing.; Numerics Preprocessing. ---------------------- Python Interface Preprocessing ---------------------; Setting customized boundary conditions for zone 0. -------------------------- Output Preprocessing ---------------------------; Zone 1: Euler/Navier-Stokes/RANS output structure.; History filename: history.dat. ------------------------------ Begin Solver -----------------------------; +----------------------------------------------------------------+; | Ext_Iter| Res[Rho]| Res[RhoU]| Res[RhoV]| Res[RhoE]|; +----------------------------------------------------------------+; | 0| -4.165003| -14.735159| -14.709795| -3.618985|; | 1| -4.436685| -4.791378| -4.176224| -3.887401|; | 2| -4.772585| -5.044913| -4.741431| -4.226021|; | 3| -4.865861| -4.936267| -4.736063| -4.319940|; | 4| -4.908893| -4.837536| -4.707111| -4.363705|. ```,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:8854,Integrat,Integration,8854,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,2,['Integrat'],['Integration']
Deployability,2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5518,Install,Installing,5518,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Dani,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4333,Install,Installing,4333,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"3-450:590584] [ 0] /usr/lib/libc.so.6(+0x3bd70)[0x7f6d73811d70]; [arch-linux-hp-probook-g3-450:590584] [ 1] /usr/lib/openmpi/libmpi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/home/slimshady/UserPackages/MPICH_HOME/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. ```. The build runs on an ubuntu machine with the following details:; - OS: Ubuntu 18.04.4 LTS x86_64; - C++ compiler and version: g++, gcc 7.5.0; - MPI implementation and version: MPICH 3.3.1; - SU2 Version: v7.0.4; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000:1618,Release,Release,1618,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000,1,['Release'],['Release']
Deployability,"4/180909770-0bceb6e3-2b1a-4112-bfd8-51b45d7ea082.png); ![image](https://user-images.githubusercontent.com/50565314/180909897-2eb4d123-68f5-4e0b-b09a-c201c7a5d8ad.png); ![image](https://user-images.githubusercontent.com/50565314/180909936-f5766fd8-a5b3-428e-9ed4-bfe43de9f911.png). T3A-: ; The gird test result is not converged, but It's enough to compare the model. ![image](https://user-images.githubusercontent.com/50565314/180910790-a68881b3-9be6-45c4-aab3-333665d90798.png); ![image](https://user-images.githubusercontent.com/50565314/180910812-12dd3fa9-7c04-4319-845e-b37628752b2c.png); ![image](https://user-images.githubusercontent.com/50565314/180910818-4cdb2b80-d0fd-4303-9f25-d3b2f6b4fe6b.png); ![image](https://user-images.githubusercontent.com/50565314/180910823-88a0d2bd-3439-4318-a749-44867e259436.png). NLF : ; AoA 0 case is shown. In this case, the flow separation occurred on the upper surface. So, not fully converged, and I show only Fine level grid results according to the number of iterations. ; ![image](https://user-images.githubusercontent.com/50565314/180913288-e8d3bc9c-f153-4889-a2ea-d2527f81f897.png); Zoom to the separation region : ; ![image](https://user-images.githubusercontent.com/50565314/180913656-410185d5-2466-41a6-b074-6f0dbeb8afea.png). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751:4714,update,updated,4714,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751,1,['update'],['updated']
Deployability,"4494](url):. > The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback.; > ; > Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; > ; > ```; > #!/usr/bin/env python; > ```; > ; > uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?; > ; > If it didn't build/install, you could go into extensions/AMGIO/su2io and run; > ; > ```; > python3 setup.py build_ext && python3 setup.py install; > ```; > ; > If it did build/install, try the command; > ; > ```; > python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; > ```. After doing `python3 setup.py build_ext && python3 setup.py install`, I encountered the following error:. > ```; > (temp_su5) takashi279@turing1:/dfs/user/takashi279/plasma/design/multiscale_adap3/SU2/externals/AMGIO/su2io$ python3 setup.py build_ext && python3 setup.py install; > running build_ext; > running install; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/install.py:37: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.; > setuptools.SetuptoolsDeprecationWarning,; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/easy_install.py:147: EasyInstallDeprecationWarning: easy_install command is deprecated. Use build and pip and other standards-based tools.; > EasyInstallDeprecationWarning,; > running bdist_egg; > error: Invalid distribution name or version syntax: -amgio-2.1.1; > ```. Am I missing any dependencies? I previously compiled SU2 feature_adap branch without issues, and have already installed pyAMG. My python version is 3.7.12.; Any help would be really appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1699:2106,install,install,2106,https://su2code.github.io,https://github.com/su2code/SU2/issues/1699,5,['install'],"['install', 'installed']"
Deployability,"582:46: note: ; candidate function not viable: no known conversion from 'Divide11<double, codi::Subtract11<double, codi::Multiply11<double,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >' to 'long double'; for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double scalbn(long double __lcpp_x, int __lcpp_y) _NOEXCEPT {return scalbnl(__lcpp_x, __...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1586:20: note: ; candidate template ignored: disabled by 'enable_if' [with _A1 = codi::Divide11<double, codi::Subtract11<double,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >]; typename enable_if<is_integral<_A1>::value, double>::type; ^; 16 errors generated.; make[2]: **\* [../src/___bin_SU2_CFD_AD-driver_structure.o] Error 1; make[2]: **\* Waiting for unfinished jobs....; make[1]: **\* [install-recursive] Error 1; make: **\* [install-SU2_AD] Error 2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/319:46594,install,install-recursive,46594,https://su2code.github.io,https://github.com/su2code/SU2/issues/319,2,['install'],"['install-', 'install-recursive']"
Deployability,"5bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:1706,release,release-asset,1706,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['release'],['release-asset']
Deployability,7.0.8 update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1119:6,update,update,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/1119,1,['update'],['update']
Deployability,"8) : Error: Unable to find 'mpi4py\mpi4py.i'; [2/10] Linking static target externals/cgns/hdf5/libsu2hdf5.a; ninja: build stopped: subcommand failed.; ```. **To Reproduce**; Firstly, I install the `mpi4py` in a conda environment. And I am sure I have install `mpi4py`:. ```; (SU2) C:\Users\ZHQ>python; Python 3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)] :: Anaconda, Inc. on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from mpi4py import MPI; >>> MPI; <module 'mpi4py.MPI' from 'D:\\Anaconda\\envs\\SU2\\lib\\site-packages\\mpi4py\\MPI.cp37-win_amd64.pyd'>; >>>; ```; But the `python ./meson.py build` find another python environment:; ```; Program python3 found: YES (C:\Users\ZHQ\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\python.exe); ```; I have find a similar issure (https://github.com/su2code/SU2/issues/722). This issue suggestion that we need to modify the `Makefile`. However, since I build SU2 in Win10, I have no `Makefile`. Then, I find the `build/build.ninja` specified the location of `python.exe`. So I modify the `python.exe` location in `build.ninja` by:; 1. modify all `C:\Users\ZHQ\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\python.exe` to `D:\Anaconda\envs\SU2\python.exe`. ; 2. modify all `C$:/Users/ZHQ/AppData/Local/Microsoft/WindowsApps/PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0/python.exe` to `D$:/Anaconda/envs/SU2/python.exe`. Then, `.\ninja.exe -C build install` again, but the bug is still reported. . I even add the `mpi4py` to the computer environment variable:. But the bug is still reported. **Desktop (please complete the following information):**; - OS: Win 10; - C++ compiler and version: as the recommanded gcc version 8.1.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project); - MPI implementation and version: as the recommanded v10.1.2; - SU2 Version: 7.3.0 ""Blackbird"". Any suggestion is appreciated~~~",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1575:2065,install,install,2065,https://su2code.github.io,https://github.com/su2code/SU2/issues/1575,1,['install'],['install']
Deployability,"88-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034422-5a7fb987-208c-4da6-8282-5c912e671dbc.png). SA+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034460-7719f3ce-6674-4281-83fd-82ce064c452a.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. . ## Related Work; Work is related to the PR #1751. It extends it to SA turbulence model and includes cross-flow effects (LM2015) and turbulence index computations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810:3269,update,updated,3269,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810,1,['update'],['updated']
Deployability,"9236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2598,update,updates,2598,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['update'],['updates']
Deployability,": '.o' directive writing 2 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -1;; ^~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFtoSU2Sol':; ./sources/Python3.7/convert.c:32:26: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:32:7: note: 'sprintf' output between 5 and 1028 bytes into a desti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:5980,Release,Release,5980,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['Release'],['Release']
Deployability,":. ```; module load mkl/latest; module load mpi/openmpi-x86_64. CFLAGS=""-mtune=native -march=native -fPIC"" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/panos/Applications/SU2; enable-autodiff : true; enable-cgns : true; enable-directdiff: true; enable-mkl : true; enable-pywrapper : true; with-mpi : enabled. Found ninja-1.10.0.git at /home/panos/Development/SU2/SU2_SRC/ninja; ```. When compiling the process fails when trying to link with the libz library:. ```; [1357/1358] Linking target SU2_PY/pySU2/_pysu2ad.so; FAILED: SU2_PY/pySU2/_pysu2ad.so; /usr/lib64/openmpi/bin/mpicxx -o SU2_PY/pySU2/_pysu2ad.so SU2_PY/pySU2/_pysu2ad.so.p/meson-generated_pySU2ad.c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:1624,update,update,1624,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['update'],['update']
Deployability,"://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8135,release,release,8135,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['release'],['release']
Deployability,"://hub.docker.com/r/su2code/test-su2, respectively, based on Ubuntu18.04/gcc7.4/OpenMPI2). This has several advantages over the current (Travis based) system:. - Using the containers you can run the building/testing environment locally on your machine. You can even download the compiled binaries produced on github and run them locally to further debug problems.; - It is faster and more flexible. Compiling and running all tests requires ~1h since a lot of things run in parallel now (e.g. building the base, reverse AD and forward AD binaries). There is potential to further speed things up by splitting the test case scripts into several files. All of that requires minimal work. Unfortunately there is no caching using ccache at the moment, but it is likely that github introduces this feature mid of november. ; - Additional tests like unit tests can make use of the same docker containers and can be easily set up by creating a new workflow file.; - We can easily add a deployment step to automatically create releases and/or nightly builds. **Note:** the linked docker containers are **only** for development/testing purposes. Hence we cannot give any support in this regard. For production use it is recommended to use singularity containers. But: the docker containers can be used as basis layers for singularity. I will get back with more information on that topic. ~~I had to change regression test values of two cases since apparently they are compiler dependent.~~ I changed it to the same versions as we have on Travis. There will be some documentation on how to use the containers locally soon. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806:1238,deploy,deployment,1238,https://su2code.github.io,https://github.com/su2code/SU2/pull/806,2,"['deploy', 'release']","['deployment', 'releases']"
Deployability,"; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-bcea-11e7-94d5-e248812c385d.png). I forced it stopped and compare result with JST scheme:; >CUSP(3Level multigrid); Total CL: 0.336272 ; Total CD: 0.0220499 ; JST (3Level multigrid); Total CL: 0.326933 ; Total CD: 0.0213497 ; ; The result is acceptable.; But when I change the limiter to""BARTH_JESPERSEN""(The configuration file doesn't show it); (still CFL = 1.0; Same multigrid configuration); SU2 converged quickly.; ![cusp3levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32143902-c058ebdc-bceb-11e7-9b55-32ca093fd729.png); What's more, the result is also acceptable. Based on above results, I set no multigrid working.; SU2 still oscillating when CFL number is 4.0 (Both VENKATAKRISHNAN and BARTH_JESPERSEN limiter); BARTH_JESPERSEN ; ![cusp0levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to read the code. Some simple ""bugs"" I've found but I doubt it.; In numerics_direct_me",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:2380,configurat,configuration,2380,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,1,['configurat'],['configuration']
Deployability,"; <li><a href=""https://redirect.github.com/actions/checkout/pull/922"">Add <code>github-server-url</code> input</a></li>; </ul>; <h2>v3.0.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/770"">Add input <code>set-safe-directory</code></a></li>; </ul>; <h2>v3.0.1</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac""><code>3df4ab1</code></a> Release 4.0.0 (<a href=""https://redirect.github.com/actions/checkout/issues/1447"">#1447</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:10319,Update,Update,10319,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Update'],['Update']
Deployability,; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\S,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:6128,Install,Installing,6128,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"; This issue shall only contain the list and a brief description, with links to associated issues and pull requests.; To propose major issues / development areas please use discussion #1486. The purpose of this list is two fold:; - Direct the efforts of the SU2 Foundation towards addressing these issues, by efforts I mean funds (as they become available).; - Try to enlist help from the community to start addressing these issues, as much as possible we will try to break these down into ""bite sized"" chunks. **To be clear, all contributions are welcome, even if they do not fit in one of the categories below.**; **The main objective here is consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum workin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:1133,update,update,1133,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['update'],['update']
Deployability,"; ```; -Denable-cuda=true; ```; And activate the functions using the following Config File Option; ```; ENABLE_CUDA=YES; ```. ## NOTE ON IMPLEMENTATION. I've decided to go with a single version of the code where the CPU and GPU implementations co-exist in the same linear solver and can be disabled or switched using a combination of Meson and Config File options. This is why I have defined three classes - one over-arching class that is named CExecutionPath that has two child classes - CCpuExecution and CGpuExecution. These child classes contain the correct member function for each path - CPU or GPU functioning. . All of this could also be easily achieved with an if statement that switches between the two - but that particular implementation will access and run the statement for each call. In our case once a Matrix Vector Product object is created, it will immediately know whether to use CPU or GPU mode of execution. . Recommendations are most welcome to improve or make this implementation better. ## PR Checklist. Warning Levels do come (only at level 3) but they are all of the following type. ```; style of line directive is a GCC extension; ```. The documentation for compiling with CUDA needs to be added by forking the SU2 site repo and adding the relevant changes to it? Or do I need to contact someone to change things on the site itself?. DOxygen Documentations and config template are all updated. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346:2105,update,updated,2105,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346,2,['update'],['updated']
Deployability,"; dep_targets.extend(self.guess_external_link_dependencies(linker, target, commands, internal)); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2907, in guess_external_link_dependencies; search_dirs, static_patterns); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2848, in guess_library_absolute_path; trial = CCompiler._get_file_from_list(self.environment, trial); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\compilers\mixins\clike.py"", line 1036, in _get_file_from_list; if p.is_file():; File ""C:\Users\zeng\AppData\Local\Programs\Python\Python37\lib\pathlib.py"", line 1387, in is_file; return S_ISREG(self.stat().st_mode); File ""C:\Users\zeng\AppData\Local\Programs\Python\Python37\lib\pathlib.py"", line 1183, in stat; return self._accessor.stat(self); OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'C:\\ProgramData\\chocolatey\\lib\\mingw\\tools\\install\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\libC:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'. I noticed that other people on Github have also raised this issue, but they are on the second step `ninja -C build install` when I got this error on the first step `py meson.py build`. so the solve solutions are not work for me. For issue #1471 I found this silimar proplem between 7.3.1. thanks！. **To Reproduce**; Please provide a config file and mesh for a minimal example that recreates the problem.; [meson-log.txt](https://github.com/su2code/SU2/files/12335918/meson-log.txt); [meson-info.json.txt](https://github.com/su2code/SU2/files/12335924/meson-info.json.txt). **Desktop (please complete the following information):**; OS: [win11 ]; C++ compiler and version: [ g++ (GCC) 8.1.0]; MPI implementation and version: [Microsoft MPI v10.1.2]; SU2 Version: [v7.5.1]. **Other informations:**; the full console output : [console.txt](https://github.com/su2code/SU2/files/12335982/console.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2106:2381,install,install,2381,https://su2code.github.io,https://github.com/su2code/SU2/issues/2106,1,['install'],['install']
Deployability,"</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:6336,upgrade,upgrade,6336,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,3,['upgrade'],['upgrade']
Deployability,"</code></li>; <li><a href=""https://github.com/actions/download-artifact/commit/127824d34cb0da7dc3cb064a37ae280b7c09aca6""><code>127824d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/download-artifact/issues/299"">#299</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/download-artifact/commit/6dd49bff0a6150b47d41011c034b762053acaf6f""><code>6dd49bf</code></a> licensed only artifact</li>; <li><a href=""https://github.com/actions/download-artifact/commit/f71c0e3da3bb6b4fcc53196b9ac75ee981db5bc6""><code>f71c0e3</code></a> Revert &quot;licensed&quot;</li>; <li><a href=""https://github.com/actions/download-artifact/commit/7c63dfde29f42bb9cb0f61b67e54c91106a6586e""><code>7c63dfd</code></a> licensed</li>; <li><a href=""https://github.com/actions/download-artifact/commit/67d37cd34678091933f0a88cd1bb026171ea20d2""><code>67d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Depend",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:4469,Update,Update,4469,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,2,"['Update', 'release']","['Update', 'release-new-action-version']"
Deployability,"</li>; </ul>; <h2>v3.1.1</h2>; <ul>; <li>Update actions/core package to latest version to remove <code>set-output</code> deprecation warning <a href=""https://redirect.github.com/actions/upload-artifact/issues/351"">#351</a></li>; </ul>; <h2>v3.1.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump <code>@​actions/artifact</code> to v1.1.0 (<a href=""https://redirect.github.com/actions/upload-artifact/pull/327"">actions/upload-artifact#327</a>); <ul>; <li>Adds checksum headers on artifact upload (<a href=""https://redirect.github.com/actions/toolkit/pull/1095"">actions/toolkit#1095</a>) (<a href=""https://redirect.github.com/actions/toolkit/pull/1063"">actions/toolkit#1063</a>)</li>; </ul>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/5d5d22a31266ced268874388b861e4b58bb5c2f3""><code>5d5d22a</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/515"">#515</a> from actions/eggyhead/update-artifact-v2.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/f1e993d9663a03508e7fc0370c744c4b963f0044""><code>f1e993d</code></a> update artifact license</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/4881bfd3f27855c63733d8cfff17721cc0ad611f""><code>4881bfd</code></a> updating dist:</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/a30777e2653648a0a7bbd3efb5c96ef9131b96cc""><code>a30777e</code></a> <a href=""https://github.com/eggyhead""><code>@​eggyhead</code></a></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/3a8048248f2f288c271830f8ecf2a1c5d8eb0e9a""><code>3a80482</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/511"">#511</a> from actions/robherley/migration-docs-typo</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/9d63e3f2f81d9dc4e13d83fc330408f8a94b79d1""><code>9d63e3f</code></a> Merge branch 'main' in",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:3930,update,update-artifact-,3930,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['update'],['update-artifact-']
Deployability,"</ul>; <h3>Breaking Changes</h3>; <p>With the update to Node 16, all scripts will now be run with Node 16 rather than Node 12.</p>; <h2>v2.3.1</h2>; <p>Fix for empty fails on Windows failing on upload <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/281"">#281</a></p>; <h2>v2.3.0 Upload Artifact</h2>; <ul>; <li>Optimizations for faster uploads of larger files that are already compressed</li>; <li>Significantly improved logging when there are chunked uploads</li>; <li>Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files</li>; <li>Various other small bugfixes &amp; optimizations</li>; </ul>; <h2>v2.2.4</h2>; <ul>; <li>Retry on HTTP 500 responses from the service</li>; </ul>; <h2>v2.2.3</h2>; <ul>; <li>Fixes for proxy related issues</li>; </ul>; <h2>v2.2.2</h2>; <ul>; <li>Improved retryability and error handling</li>; </ul>; <h2>v2.2.1</h2>; <ul>; <li>Update used actions/core package to the latest version</li>; </ul>; <h2>v2.2.0</h2>; <ul>; <li>Support for artifact retention</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Add Third Party License Information</li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Use updated version of the <code>@action/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect case insensitive file uploads</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Fix for certain symlinks not correctly being identified as directories before starting uploads</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Support for uploading artifacts with multiple paths</li>; <li>Support for using exclude paths</li>; <li>Updates to dependencies</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/3cea5372237819ed00197afe530f5a7ea3e805c8""><code>3cea537</code></a> Merge pull request ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:1587,Update,Update,1587,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['Update'],['Update']
Deployability,"=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c710",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:7016,upgrade,upgrade,7016,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['upgrade'],['upgrade']
Deployability,"=""https://redirect.github.com/github/codeql-action/pull/2124"">#2124</a></li>; <li>The CodeQL action no longer fails if it can't write to the telemetry api endpoint. <a href=""https://redirect.github.com/github/codeql-action/pull/2121"">#2121</a></li>; </ul>; <h2>3.24.0 - 02 Feb 2024</h2>; <ul>; <li>CodeQL Python analysis will no longer install dependencies on GitHub Enterprise Server, as is already the case for GitHub.com. See <a href=""https://github.com/github/codeql-action/blob/main/#3230---08-jan-2024"">release notes for 3.23.0</a> for more details. <a href=""https://redirect.github.com/github/codeql-action/pull/2106"">#2106</a></li>; </ul>; <h2>3.23.2 - 26 Jan 2024</h2>; <ul>; <li>On Linux, the maximum possible value for the <code>--threads</code> option now respects the CPU count as specified in <code>cgroup</code> files to more accurately reflect the number of available cores when running in containers. <a href=""https://redirect.github.com/github/codeql-action/pull/2083"">#2083</a></li>; <li>Update default CodeQL bundle version to 2.16.1. <a href=""https://redirect.github.com/github/codeql-action/pull/2096"">#2096</a></li>; </ul>; <h2>3.23.1 - 17 Jan 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.0. <a href=""https://redirect.github.com/github/codeql-action/pull/2073"">#2073</a></li>; <li>Change the retention period for uploaded debug artifacts to 7 days. Previously, this was whatever the repository default was. <a href=""https://redirect.github.com/github/codeql-action/pull/2079"">#2079</a></li>; </ul>; <h2>3.23.0 - 08 Jan 2024</h2>; <ul>; <li>We are rolling out a feature in January 2024 that will disable Python dependency installation by default for all users. This improves the speed of analysis while having only a very minor impact on results. You can override this behavior by setting <code>CODEQL_ACTION_DISABLE_PYTHON_DEPENDENCY_INSTALLATION=false</code> in your workflow, however we plan to remove this ability in future versions of the CodeQL Action",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:12126,Update,Update,12126,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['Update'],['Update']
Deployability,=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3535,Install,Installing,3535,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:7231,integrat,integration,7231,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,"=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050:2627,update,updated,2627,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050,1,['update'],['updated']
Deployability,"> Hello. Can you add a test case about AUSMPLUSUP or AUSMPLUSUP2? I installed SU2 6.2.0 and used it to simulate two-dimensional lid-driven cavity flow. When I set 'CONV_NUM_METHOD_FOLW' to be 'AUSMPLUSUP' or 'AUSMPLUSUP2', it shows 'Error in ''void CSoLver::SetResidual_RMS(CGeometry*, CConfig*):' and 'MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD'. But when I set it to be other schemes like AUSM, ROE or so, it runs. Maybe if there is a test case, I can find where is my mistake. Thank you. _Originally posted by @cjz667 in https://github.com/su2code/SU2/pull/628#issuecomment-522633022_. @cjz667, there are a couple of examples in PR #691, specifically here: https://github.com/su2code/SU2/pull/691#issuecomment-502193463; Which may not run with v6.2 but should work with the current develop version.; In any case can you please upload your config?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/761:68,install,installed,68,https://su2code.github.io,https://github.com/su2code/SU2/issues/761,1,['install'],['installed']
Deployability,">3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:8189,update,update,8189,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['update'],['update']
Deployability,"><a href=""https://github.com/actions/download-artifact/commit/7c63dfde29f42bb9cb0f61b67e54c91106a6586e""><code>7c63dfd</code></a> licensed</li>; <li><a href=""https://github.com/actions/download-artifact/commit/67d37cd34678091933f0a88cd1bb026171ea20d2""><code>67d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:5059,update,updates,5059,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['update'],['updates']
Deployability,"><code>@​ljmf00</code></a> in <a href=""https://redirect.github.com/actions/upload-artifact/pull/313"">actions/upload-artifact#313</a></li>; <li>Bump <code>@​actions/artifact</code> version to v1.1.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/upload-artifact/pull/436"">actions/upload-artifact#436</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/upload-artifact/compare/v3...v3.1.3"">https://github.com/actions/upload-artifact/compare/v3...v3.1.3</a></p>; <h2>v3.1.2</h2>; <ul>; <li>Update all <code>@actions/*</code> NPM packages to their latest versions- <a href=""https://redirect.github.com/actions/upload-artifact/issues/374"">#374</a></li>; <li>Update all dev dependencies to their most recent versions - <a href=""https://redirect.github.com/actions/upload-artifact/issues/375"">#375</a></li>; </ul>; <h2>v3.1.1</h2>; <ul>; <li>Update actions/core package to latest version to remove <code>set-output</code> deprecation warning <a href=""https://redirect.github.com/actions/upload-artifact/issues/351"">#351</a></li>; </ul>; <h2>v3.1.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump <code>@​actions/artifact</code> to v1.1.0 (<a href=""https://redirect.github.com/actions/upload-artifact/pull/327"">actions/upload-artifact#327</a>); <ul>; <li>Adds checksum headers on artifact upload (<a href=""https://redirect.github.com/actions/toolkit/pull/1095"">actions/toolkit#1095</a>) (<a href=""https://redirect.github.com/actions/toolkit/pull/1063"">actions/toolkit#1063</a>)</li>; </ul>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/5d5d22a31266ced268874388b861e4b58bb5c2f3""><code>5d5d22a</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/515"">#515</a> from actions/eggyhead/update-artifact-v2.1.1</li>; <li><a href=""https://github.com/actions/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:2945,Update,Update,2945,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['Update'],['Update']
Deployability,">@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4782,Release,Releases,4782,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Release'],['Releases']
Deployability,">OutNam);; ^~~~~; ./sources/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lmsvcr140; collect2.exe: error: ld returned 1 exit status; error: command 'C:\\Program Files\\mingw-w64\\x86_64-8.1.0-posix-seh-rt_v6-rev0\\mingw64\\bin\\gcc.exe' faile",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:9596,Release,Release,9596,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['Release'],['Release']
Deployability,"@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:7045,integrat,integration,7045,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,"A section of the Build From Source tab of the WIKI mentions the following: . ""For example, to configure SU2 for parallel calculations (i.e., with ParMETIS and MPI) along with CGNS and TecIO support and a high level of compiler optimization, the configure command might look like this (replace with specific paths on your system):. ""$ ./configure --prefix=/path/to/install/SU2 --enable-mpi --with-cc=/path/to/mpicc ; --with-cxx=/path/to/mpicxx CXXFLAGS=""-O3"" --with-CGNS-lib=/path/to/CGNS/lib ; --with-CGNS-include=/path/to/CGNS/header"". Note that the actual configure call does not actually use TECIO as discribed in the paragraph leading up to the call.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/245:364,install,install,364,https://su2code.github.io,https://github.com/su2code/SU2/issues/245,1,['install'],['install']
Deployability,AD Tool Updates,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2206:8,Update,Updates,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/2206,1,['Update'],['Updates']
Deployability,AD tool updates,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2351:8,update,updates,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/2351,1,['update'],['updates']
Deployability,"Adaption of the interpolation method NearestNeighbor to turbomachinery applications when rotating frame is used. ## Proposed Changes; *If the flow is solved in a rotating frame, the grid is not actutally rotating. But the interpolation for a sliding interface should be done with an actually rotated boundary. The proposed changes add the function of rotating grid points on the boundary of a zone solved in rotating frame before the interpolation is executed. Currently, this is only implemented in CNearestneighbor class, other interpolation method should be changed as well in the near future.*. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ yes ] I am submitting my contribution to the develop branch.; - [ yes ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ yes ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173:1372,update,updated,1372,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173,1,['update'],['updated']
Deployability,Add CGNS source to repo and integrate with autoconf/automake for automatic inclusion in build.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/105:28,integrat,integrate,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/105,1,['integrat'],['integrate']
Deployability,Add release.yml for when release-drafter has issues,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1850:4,release,release,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/1850,2,['release'],"['release', 'release-drafter']"
Deployability,"Add yourself if you are a new contributor I missed, or if you have updated your github handle, or if you want to use your name instead, etc.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1390:67,update,updated,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/1390,1,['update'],['updated']
Deployability,Added Docker file for easy deployment and setup development environment with README.md,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/169:27,deploy,deployment,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/169,1,['deploy'],['deployment']
Deployability,Adding release drafter action,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813:7,release,release,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/813,1,['release'],['release']
Deployability,Address sanitizer tests in the CI pipeline,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246:34,pipeline,pipeline,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246,1,['pipeline'],['pipeline']
Deployability,Adds the classical fourth-order Runge-Kutta time integration scheme to the finite volume flow solver.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/376:49,integrat,integration,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/376,1,['integrat'],['integration']
Deployability,"After updating solution and before communications, the normal component is subtracted from the velocity of the sym wall. ## Related Work; https://github.com/su2code/SU2/pull/1168, https://github.com/su2code/SU2/pull/657, https://github.com/su2code/SU2/issues/1625, https://github.com/su2code/SU2/issues/1125,https://github.com/su2code/SU2/discussions/2169. The symmetry BC in SU2 is waiting for further implementation, for scalar vars and vectors. ; But first of all, we should ensure that the wall normal velocity is zero for the sym BC. ; When we run an unsteady simulation with sym BC such as the following A-airfoil cases, the spanwise velocity on the spanwise sym BC has a distribution that we donot want to see. (Free stream velocity is 0.15 and the spanwise velocity can exceed 0.01 (the ±0.001 in the figure is to show more clearly) where it should be zero.); And this PR is to ensure the zero normal velocity.; ![1](https://github.com/su2code/SU2/assets/58663453/ca4f99e8-909e-4468-95bc-4a594ba31ed0); ![2](https://github.com/su2code/SU2/assets/58663453/c35c7f1b-eca3-4da5-9828-0ef786f829eb). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2174:1846,update,updated,1846,https://su2code.github.io,https://github.com/su2code/SU2/pull/2174,1,['update'],['updated']
Deployability,"All the TestCases seem broken when I try to run SU2 4.1 compiled from source. When I run the serial_regression.py and parallel_regression.py scripts, I get error messages like . There is no geometry file (GetnZone))!. and mesh files like mesh_ONERAM6_turb_hexa_43008.su2 appear to be missing. When I copy one of these from a 4.0 sample directory (where everything worked) and rerun the test case manually by typing something like. mpirun -n 2 /mit/su2_v4.1/bin/SU2_CFD config_CFD.cfg. it works. Something seems to be missing that generates the mesh files but I'm no SU2 expert, I just install it for the real users. Thanks for any help. ```; Alex; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/222:585,install,install,585,https://su2code.github.io,https://github.com/su2code/SU2/issues/222,1,['install'],['install']
Deployability,"Allows weighted sum of objectives to be evaluated with the discrete adjoint. (Previously available only with continuous adjoint); A test case is added for this functionality in serial_regression_AD.py. Also includes:; related clean-up and standardization, such as making sure that a redundancy check inside python functions does the appropriate thing when multiple objectives are used (previously would duplicate some analyses during optimization). ; treating surface heatflux per-surface (making this more similar to how surface forces are treated) so that if multiple surfaces are included only the one specified as being monitored will be used in the objective function. ; removal of some unused variables that turned up during compiler checks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312:109,continuous,continuous,109,https://su2code.github.io,https://github.com/su2code/SU2/pull/312,1,['continuous'],['continuous']
Deployability,"Although a minor change, I think this will help SU2 stay up-to-date documentation wise with future updates. Staying ahead of documentation in future PRs will prevent further lag, in my opinion. ### Related work; I think this begins to address the documentation woes mentioned the issue #775 . - [x ] I am submitting my contribution to the develop branch.; - [N/A] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [N/A ] My contribution is commented and consistent with SU2 style.; - [ N/A] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/799:99,update,updates,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/799,1,['update'],['updates']
Deployability,BC Transition Model Term2 update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1132:26,update,update,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132,1,['update'],['update']
Deployability,"Based on the feature_pyWrapper branch :. -new SU2_API folder with :; *include for header files (.h/.hpp); *src for source files (.cpp); *obj for lib and Makefile; *_SU2_API for the Pyhon wrapper and the SWIG conf file. -new FSI folder in the SU2_PY folder + new LaunchFSIComputation.py file. -The compilation should run fine (./configure + options --> make --> make install) but only if the Tec IO support is disabled, otherwise there are some missing references that I have not fixed yet. -You have to compile manually the _SU2_API folder with the Makefile + change the SU2_DIR variable in the Makefile before this compilation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/217:366,install,install,366,https://su2code.github.io,https://github.com/su2code/SU2/pull/217,1,['install'],['install']
Deployability,Build Error on SU2-7.0.5 Installation from source for Windows10,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1047:25,Install,Installation,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/1047,1,['Install'],['Installation']
Deployability,Bump actions/upload-release-asset from 1.0.1 to 1.0.2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:20,release,release-asset,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['release'],['release-asset']
Deployability,"Bumps [actions/cache](https://github.com/actions/cache) from 1 to 3.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v3.0.0</h2>; <ul>; <li>; <p>This change adds a minimum runner version(node12 -&gt; node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via <a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:90,Release,Release,90,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,4,"['Release', 'release', 'update']","['Release', 'releases', 'updated']"
Deployability,"Bumps [actions/checkout](https://github.com/actions/checkout) from 3 to 4.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/checkout/releases"">actions/checkout's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update default runtime to node20 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1436"">actions/checkout#1436</a></li>; <li>Support fetching without the --progress option by <a href=""https://github.com/simonbaird""><code>@​simonbaird</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1067"">actions/checkout#1067</a></li>; <li>Release 4.0.0 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1447"">actions/checkout#1447</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1436"">actions/checkout#1436</a></li>; <li><a href=""https://github.com/simonbaird""><code>@​simonbaird</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1067"">actions/checkout#1067</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v3...v4.0.0"">https://github.com/actions/checkout/compare/v3...v4.0.0</a></p>; <h2>v3.6.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Mark test scripts with Bash'isms to be run via Bash by <a href=""https://github.com/dscho""><code>@​dscho</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1377"">actions/checkout#1377</a></li>; <li>Add option to fetch tags even if fetch-depth &gt; 0 by <a href=""https://github.com/RobertWieczoreck""><code>@​RobertWieczoreck</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/579"">ac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:96,Release,Release,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,10,"['Release', 'Update', 'release']","['Release', 'Update', 'releases']"
Deployability,"Bumps [actions/download-artifact](https://github.com/actions/download-artifact) from 3 to 4.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/download-artifact/releases"">actions/download-artifact's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <p>The release of upload-artifact@v4 and download-artifact@v4 are major changes to the backend architecture of Artifacts. They have numerous performance and behavioral improvements.</p>; <p>ℹ️ However, this is a major update that includes breaking changes. Artifacts created with versions v3 and below are not compatible with the v4 actions. Uploads and downloads <em>must</em> use the same major actions versions. There are also key differences from previous versions that may require updates to your workflows.</p>; <p>For more information, please see:</p>; <ol>; <li>The <a href=""https://github.blog/changelog/2023-12-14-github-actions-artifacts-v4-is-now-generally-available/"">changelog</a> post.</li>; <li>The <a href=""https://github.com/actions/download-artifact/blob/main/README.md"">README</a>.</li>; <li>The <a href=""https://github.com/actions/upload-artifact/blob/main/docs/MIGRATION.md"">migration documentation</a>.</li>; <li>As well as the underlying npm package, <a href=""https://github.com/actions/toolkit/tree/main/packages/artifact""><code>@​actions/artifact</code></a> documentation.</li>; </ol>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/bflad""><code>@​bflad</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/download-artifact/pull/194"">actions/download-artifact#194</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/download-artifact/compare/v3...v4.0.0"">https://github.com/actions/download-artifact/compare/v3...v4.0.0</a></p>; <h2>v3.0.2</h2>; <ul>; <li>Bump <code>@actions/artifact</code> to v1.1.1 - <a href=""https://redirect.github.com/actions/dow",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:114,Release,Release,114,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,6,"['Release', 'release', 'update']","['Release', 'release', 'releases', 'update', 'updates']"
Deployability,"Bumps [actions/setup-python](https://github.com/actions/setup-python) from 4 to 5.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/setup-python/releases"">actions/setup-python's releases</a>.</em></p>; <blockquote>; <h2>v5.0.0</h2>; <h2>What's Changed</h2>; <p>In scope of this release, we update node version runtime from node16 to node20 (<a href=""https://redirect.github.com/actions/setup-python/pull/772"">actions/setup-python#772</a>). Besides, we update dependencies to the latest versions.</p>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0"">https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0</a></p>; <h2>v4.8.0</h2>; <h2>What's Changed</h2>; <p>In scope of this release we added support for GraalPy (<a href=""https://redirect.github.com/actions/setup-python/pull/694"">actions/setup-python#694</a>). You can use this snippet to set up GraalPy:</p>; <pre lang=""yaml""><code>steps:; - uses: actions/checkout@v4; - uses: actions/setup-python@v4 ; with:; python-version: 'graalpy-22.3' ; - run: python my_script.py; </code></pre>; <p>Besides, the release contains such changes as:</p>; <ul>; <li>Trim python version when reading from file by <a href=""https://github.com/FerranPares""><code>@​FerranPares</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/628"">actions/setup-python#628</a></li>; <li>Use non-deprecated versions in examples by <a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/724"">actions/setup-python#724</a></li>; <li>Change deprecation comment to past tense by <a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/723"">actions/setup-python#723</a></li>; <li>Bump <code>@​babel/traverse</code> from 7.9.0 to 7.23.2 by <a href=""https://github.com/dependabot"">",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:104,Release,Release,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,7,"['Release', 'release', 'update']","['Release', 'release', 'releases', 'update']"
Deployability,"Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 1 to 3.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-artifact/releases"">actions/upload-artifact's releases</a>.</em></p>; <blockquote>; <h2>v3.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update default runtime to node16 (<a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/293"">#293</a>)</li>; <li>Update package-lock.json file version to 2 (<a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/302"">#302</a>)</li>; </ul>; <h3>Breaking Changes</h3>; <p>With the update to Node 16, all scripts will now be run with Node 16 rather than Node 12.</p>; <h2>v2.3.1</h2>; <p>Fix for empty fails on Windows failing on upload <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/281"">#281</a></p>; <h2>v2.3.0 Upload Artifact</h2>; <ul>; <li>Optimizations for faster uploads of larger files that are already compressed</li>; <li>Significantly improved logging when there are chunked uploads</li>; <li>Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files</li>; <li>Various other small bugfixes &amp; optimizations</li>; </ul>; <h2>v2.2.4</h2>; <ul>; <li>Retry on HTTP 500 responses from the service</li>; </ul>; <h2>v2.2.3</h2>; <ul>; <li>Fixes for proxy related issues</li>; </ul>; <h2>v2.2.2</h2>; <ul>; <li>Improved retryability and error handling</li>; </ul>; <h2>v2.2.1</h2>; <ul>; <li>Update used actions/core package to the latest version</li>; </ul>; <h2>v2.2.0</h2>; <ul>; <li>Support for artifact retention</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Add Third Party License Information</li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Use updated version of the <code>@action/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect cas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:110,Release,Release,110,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,6,"['Release', 'Update', 'release', 'update']","['Release', 'Update', 'releases', 'update']"
Deployability,"Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 3 to 4.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-artifact/releases"">actions/upload-artifact's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <p>The release of upload-artifact@v4 and download-artifact@v4 are major changes to the backend architecture of Artifacts. They have numerous performance and behavioral improvements.</p>; <p>ℹ️ However, this is a major update that includes breaking changes. Artifacts created with versions v3 and below are not compatible with the v4 actions. Uploads and downloads <em>must</em> use the same major actions versions. There are also key differences from previous versions that may require updates to your workflows.</p>; <p>For more information, please see:</p>; <ol>; <li>The <a href=""https://github.blog/changelog/2023-12-14-github-actions-artifacts-v4-is-now-generally-available/"">changelog</a> post.</li>; <li>The <a href=""https://github.com/actions/upload-artifact/blob/main/README.md"">README</a>.</li>; <li>The <a href=""https://github.com/actions/upload-artifact/blob/main/docs/MIGRATION.md"">migration documentation</a>.</li>; <li>As well as the underlying npm package, <a href=""https://github.com/actions/toolkit/tree/main/packages/artifact""><code>@​actions/artifact</code></a> documentation.</li>; </ol>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vmjoseph""><code>@​vmjoseph</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/upload-artifact/pull/464"">actions/upload-artifact#464</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/upload-artifact/compare/v3...v4.0.0"">https://github.com/actions/upload-artifact/compare/v3...v4.0.0</a></p>; <h2>v3.1.3</h2>; <h2>What's Changed</h2>; <ul>; <li>chore(github): remove trailing whitespaces by <a href=""https://github.com/ljmf00""><",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:110,Release,Release,110,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,6,"['Release', 'release', 'update']","['Release', 'release', 'releases', 'update', 'updates']"
Deployability,"Bumps [actions/upload-release-asset](https://github.com/actions/upload-release-asset) from 1.0.1 to 1.0.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-release-asset/releases"">actions/upload-release-asset's releases</a>.</em></p>; <blockquote>; <h2>Automate sliding major version number</h2>; <p>This is a minor update to make the current release have the latest code from master, and additionally allows for a new automation workflow to execute to automate the sliding of the major (v1, v2, v3, etc) version numbers for ease of referencing</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-relea",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:22,release,release-asset,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,22,"['Release', 'release', 'update']","['Release', 'release', 'release-asset', 'releases', 'update']"
Deployability,"Bumps [github/codeql-action](https://github.com/github/codeql-action) from 2 to 3.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/github/codeql-action/releases"">github/codeql-action's releases</a>.</em></p>; <blockquote>; <h2>CodeQL Bundle v2.16.3</h2>; <p>Bundles CodeQL CLI v2.16.3</p>; <ul>; <li>(<a href=""https://github.com/github/codeql-cli-binaries/blob/HEAD/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql-cli-binaries/releases/tag/v2.16.3"">release</a>)</li>; </ul>; <p>Includes the following CodeQL language packs from <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3""><code>github/codeql@codeql-cli/v2.16.3</code></a>:</p>; <ul>; <li><code>codeql/cpp-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/cpp/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/cpp/ql/src"">source</a>)</li>; <li><code>codeql/cpp-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/cpp/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/cpp/ql/lib"">source</a>)</li>; <li><code>codeql/csharp-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/csharp/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/csharp/ql/src"">source</a>)</li>; <li><code>codeql/csharp-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/csharp/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/csharp/ql/lib"">source</a>)</li>; <li><code>codeql/go-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/go/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/go/ql/src"">source</a>)</li>; <li><code>codeql/go-all</code> (<a href=""https://github.com/github/codeql",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:104,Release,Release,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,5,"['Release', 'release']","['Release', 'release', 'releases']"
Deployability,"Bumps [mheap/github-action-required-labels](https://github.com/mheap/github-action-required-labels) from 3 to 5.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/mheap/github-action-required-labels/releases"">mheap/github-action-required-labels's releases</a>.</em></p>; <blockquote>; <h2>v5</h2>; <p>Tag that always points to the latest commit in the v5.x.x series of releases</p>; <h2>v4.1.1</h2>; <ul>; <li>Fix build step by switching to <code>ubuntu-latest</code></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/mheap/github-action-required-labels/compare/v4.1.0...v4.1.1"">https://github.com/mheap/github-action-required-labels/compare/v4.1.0...v4.1.1</a></p>; <h2>v4.1.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Add newline after the match token in error comments by <a href=""https://github.com/zhimsel""><code>@​zhimsel</code></a> in <a href=""https://redirect.github.com/mheap/github-action-required-labels/pull/55"">mheap/github-action-required-labels#55</a></li>; <li>Labels Output by <a href=""https://github.com/jeff-miller-cfa""><code>@​jeff-miller-cfa</code></a> in <a href=""https://redirect.github.com/mheap/github-action-required-labels/pull/56"">mheap/github-action-required-labels#56</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/zhimsel""><code>@​zhimsel</code></a> made their first contribution in <a href=""https://redirect.github.com/mheap/github-action-required-labels/pull/55"">mheap/github-action-required-labels#55</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/mheap/github-action-required-labels/compare/v4.0.0...v4.1.0"">https://github.com/mheap/github-action-required-labels/compare/v4.0.0...v4.1.0</a></p>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Add issues/pull-requests permissions to README by <a href=""https://github.com/mheap""><code>@​mheap</code></a> in <a href=""https://redirect.github.com/mheap/github-action-required-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:134,Release,Release,134,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,8,"['Release', 'release']","['Release', 'releases']"
Deployability,C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Insta,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:7480,Install,Installing,7480,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tool,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:7572,Install,Installing,7572,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FS,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:7660,Install,Installing,7660,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5068,Install,Installing,5068,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,CGNS 4.0.0 update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/884:11,update,update,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/884,1,['update'],['update']
Deployability,"CGNS file older than 4.0 release have a high ram memory usage. ## Proposed Changes. Add a small message to help users understand that SU2 is eating their RAM with old CGNS files.; ; ## Related Work. See: #1378 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1479:25,release,release,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/1479,2,"['release', 'update']","['release', 'updated']"
Deployability,CVE-2007-4559 Patch,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1847:14,Patch,Patch,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/1847,1,['Patch'],['Patch']
Deployability,Cannot find mpi.h during the ninja installation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1691:35,install,installation,35,https://su2code.github.io,https://github.com/su2code/SU2/issues/1691,1,['install'],['installation']
Deployability,Cannot run with the new release v4.3,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/303:24,release,release,24,https://su2code.github.io,https://github.com/su2code/SU2/issues/303,1,['release'],['release']
Deployability,"Change HEATFLUX to TOTAL_HEATFLUX in output files so that optimization works correctly with OPT_OBJECTIVE= TOTAL_HEATFLUX; ; Additionally, a small change to updateHistoryMap.py has been made (a ""/"" in a path was missing), and historyMap.py has been modified by running updateHistoryMap.py. This fixes [#946](https://github.com/su2code/SU2/issues/946). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch. - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/947:157,update,updateHistoryMap,157,https://su2code.github.io,https://github.com/su2code/SU2/pull/947,3,['update'],"['updateHistoryMap', 'updated']"
Deployability,"Classes associated with spatial discretization are all instantiated once during initialization [see: Numerics_Preprocessing in definition_structure.cpp] whereas classes associated with time integration are instantiated and deleted over and over in solver_container[a][b][c]->ImplicitEuler_Iteration(). Similarly, each time a preconditioner is invoked, a new class is instantiated. I think the code will be easier to read and understand if space and time are treated similarly. The CSysSolve class can also be instantiated for each solver during Numerics_Preprocessing() using the new keyword. A caveat of this change is that it might be necessary to assure that the matrix/vector data in the CSysSolve class is cleared prior to each iteration. This is the cost of not creating and deleting the data structure at each step.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/82:190,integrat,integration,190,https://su2code.github.io,https://github.com/su2code/SU2/issues/82,1,['integrat'],['integration']
Deployability,CoDiPack 2 Update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1903:11,Update,Update,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/1903,1,['Update'],['Update']
Deployability,CoDiPack Update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2009:9,Update,Update,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/2009,4,['Update'],['Update']
Deployability,CoDiPack Update and Explicit Adjoints Locking,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2146:9,Update,Update,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/2146,1,['Update'],['Update']
Deployability,"CodeQL bundle version to 2.16.3. <a href=""https://redirect.github.com/github/codeql-action/pull/2156"">#2156</a></li>; </ul>; <h2>3.24.4 - 21 Feb 2024</h2>; <ul>; <li>Fix an issue where an existing, but empty, <code>/sys/fs/cgroup/cpuset.cpus</code> file always resulted in a single-threaded run. <a href=""https://redirect.github.com/github/codeql-action/pull/2151"">#2151</a></li>; </ul>; <h2>3.24.3 - 15 Feb 2024</h2>; <ul>; <li>Fix an issue where the CodeQL Action would fail to load a configuration specified by the <code>config</code> input to the <code>init</code> Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2147"">#2147</a></li>; </ul>; <h2>3.24.2 - 15 Feb 2024</h2>; <ul>; <li>Enable improved multi-threaded performance on larger runners for GitHub Enterprise Server users. This feature is already available to GitHub.com users. <a href=""https://redirect.github.com/github/codeql-action/pull/2141"">#2141</a></li>; </ul>; <h2>3.24.1 - 13 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.2. <a href=""https://redirect.github.com/github/codeql-action/pull/2124"">#2124</a></li>; <li>The CodeQL action no longer fails if it can't write to the telemetry api endpoint. <a href=""https://redirect.github.com/github/codeql-action/pull/2121"">#2121</a></li>; </ul>; <h2>3.24.0 - 02 Feb 2024</h2>; <ul>; <li>CodeQL Python analysis will no longer install dependencies on GitHub Enterprise Server, as is already the case for GitHub.com. See <a href=""https://github.com/github/codeql-action/blob/main/#3230---08-jan-2024"">release notes for 3.23.0</a> for more details. <a href=""https://redirect.github.com/github/codeql-action/pull/2106"">#2106</a></li>; </ul>; <h2>3.23.2 - 26 Jan 2024</h2>; <ul>; <li>On Linux, the maximum possible value for the <code>--threads</code> option now respects the CPU count as specified in <code>cgroup</code> files to more accurately reflect the number of available cores when running in containers. <a href=""https://redirect.github",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:11064,Update,Update,11064,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['Update'],['Update']
Deployability,"Collection of improvements in the upwind with limiter methods. - Elimination of the option GetViscous_Limiter_Flow and GetViscous_Limiter_Turb and related subroutines. It is not useful, and it doesn’t make too much sense to me.; - Renaming VAN_ALBADA to VAN_ALBADA_EDGE to distinguish between multidimensional stencils and edge based stencils.; - Adding VENKATAKRISHNAN_WANG limiter in which the Epsilon is computed using flow solution. It is very difficulty to be successful with the original version of the Venkat’s limiter... the calibration is too case dependent.; - Adding NO_LIMITER as a new option.; - Adding AD stuff to the BARTH_JESPERSEN... same code that in VENKATAKRISHNAN; - Updated screen output. Best,; Vivaan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/438:688,Update,Updated,688,https://su2code.github.io,https://github.com/su2code/SU2/pull/438,2,['Update'],['Updated']
Deployability,"Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7964,Update,Updated,7964,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Update'],['Updated']
Deployability,Complete update of the Near-Field Boundary Condition.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/69:9,update,update,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/69,1,['update'],['update']
Deployability,"Complete update of the engine and actuator disk boundary conditions, including a new regression test (propeller.cfg).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/318:9,update,update,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/318,1,['update'],['update']
Deployability,Consistent calculation of dissipation terms for the Roe scheme for both explicit and implicit time integration. The previous explicit implementation was unstable with the high-order DG solver.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/299:99,integrat,integration,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/299,1,['integrat'],['integration']
Deployability,Correct type of history field for INVERSE_DESIGN_PRESSURE and update history map,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1730:62,update,update,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/1730,1,['update'],['update']
Deployability,"Critical improvements in the CL driver including the restart capability. New information, like the updated AoA or the current external iteration, is stored at the end of the restart file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/325:99,update,updated,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/325,1,['update'],['updated']
Deployability,"Currently we transfer forces from the fluid side to the structural side, this is fine for matching meshes and for non-matching (interpolated) if the conservative approach is used (i.e. transpose the displacement interpolation matrix to transfer the loads). For non-matching and the consistent approach (i.e. use the same interpolation scheme both ways) this creates ""extra force"", to avoid that, stress needs to be transferred instead of force and integrated on the structural side.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/596:448,integrat,integrated,448,https://su2code.github.io,https://github.com/su2code/SU2/issues/596,1,['integrat'],['integrated']
Deployability,Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3827,Install,Installing,3827,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"Dear Developers, . I have been trying to run the ""Constrained shape design of a transonic inviscid wing at a cte. CL"" tutorial but am having issues in installing SU2 properly. I realize that the SU2 tools necessary for this tutorial are not included with the binary executables and I have been working on properly configuring and building SU2 to have the necessary tools and to run in parallel by following the compilation guide. Unfortunately, I have yet to install a working parallel version to run this tutorial. A solution to avoiding some of these installation issues would be to set up this environment within a singularity container. I found a singularity container definition for an old version of SU2 in #738 and modified the su2.def file to read:. Bootstrap: docker; From: ubuntu:19.04; ; %post; apt-get -y update; apt-get -y install python3 git build-essential autoconf python-dev libopenmpi3 openmpi-common; git clone --depth=1 https://github.com/su2code/SU2; cd SU2; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true --prefix=$PWD; ./ninja -C build install; ; %runscript; exec /SU2/bin/$1 $2 . This code raises the following error after running . FATAL: Unable to build from su2.def: while parsing definition: su2.def: invalid selection(s) specified:. I understand this is an issue stemming from singularity and how I defined the definition file, but I was wondering if there was any supported singularity container for running SU2 that supports AD and parallel computing?. Best",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1626:151,install,installing,151,https://su2code.github.io,https://github.com/su2code/SU2/issues/1626,6,"['install', 'update']","['install', 'installation', 'installing', 'update']"
Deployability,"Dear SU2 Team Members,. Greetings! We are very happy to inform you that we are exploring the aerodynamic shape optimization script of SU2 R 5.0.0 (Raven) with different configurations. And we would also like to seek your assistance in connection with the following two issues:. 1. We are not getting any clue on restarting procedure of the optimization process from previously finished cycles. 2. Is there any way for exporting the intermediate / final optimized geometry as 3D CAD model. Thanking you in advance. Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/489:169,configurat,configurations,169,https://su2code.github.io,https://github.com/su2code/SU2/issues/489,1,['configurat'],['configurations']
Deployability,"Dear all,. I have tried to install/compile the source code on Windows 10 by following literally the instructions on the documentation page but I got the following error also reported in the attached document:. OSError: [WinError 123] La sintassi del nome del file, della directory o del volume non è corretta: 'C:\\MINGW_W64\\mingw_w64\\posix\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\libC:\\MICROSOFT_SDKs\\MPI\\Lib\\x64\\msmpi.a'. [error.txt](https://github.com/su2code/SU2/files/5379915/error.txt); ; Can you help me to fix it?; Thanks,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1093:27,install,install,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/1093,1,['install'],['install']
Deployability,"Dear all,. This PR resolves an issue with the updated restart logic. Further, it also provides a couple of modifications which will be required in a future PR aimed at the automatic identification of the aerodynamic system. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1295:46,update,updated,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295,2,['update'],['updated']
Deployability,"Dear all,. as many of you know, we have been working for quite a while in the development of the FSI solver within SU2. So far, we have been using a separate branch; however, this branch has grown quite big (almost 200 commits!) and it's probably time to merge it with the develop branch. This way, other folks can start using the new code infrastructure for multi-physics problems, while reducing the hassle for everyone in future pull requests from our side. . This pull request includes, among others:; 1. Multi-physics support and improvements: ; - CTransfer structure with MPI support for parallel multi-zone simulations.; - CTransfer subclasses for physical definition of multi-physics interaction variables.; - CInterpolator structure with support for interpolation algorithms.; 2. A FEM structural solver aiming to deal with geometrical and material nonlinearities.; 3. A BGS driver structure for FSI problems.; 4. General bug fixes and improvements for unsteady problems with dynamic meshes.; 5. New configuration options required for the different kinds of problems tackled. If all the tests pass, I will add some regression tests, once the mesh files and solution files have been added to the TestCases repository. Please note that this version of the code is still under development, and we are currently working on further improvements in the efficiency and the capabilities of the solver. We intend to include these further developments by the time of the next release of the code. . Cheers,. Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/234:1009,configurat,configuration,1009,https://su2code.github.io,https://github.com/su2code/SU2/pull/234,2,"['configurat', 'release']","['configuration', 'release']"
Deployability,"Dear all,; This pull request is to add the gamma_BC variable (the intermittency function of B-C transition model) to the output file for visualization purposes, so that the user can see the laminar and turbulent regions of the flow.; This does not work as is now, and needs to be corrected. Tim is already helping me on this, and I am trying to figure everything out according to his comments. Any additional advice/help is appreciated. Hope this would be ready for the next release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/419:475,release,release,475,https://su2code.github.io,https://github.com/su2code/SU2/pull/419,1,['release'],['release']
Deployability,"Dear developers,; I am trying to install SU2 in docker ubuntu 18.04 container so that I can easily share with partner. But I failed to compile the code with following errors:; ```; (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx; checking build system type... x86_64-pc-linux-gnu; checking host system type... x86_64-pc-linux-gnu; checking target system type... x86_64-pc-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /bin/mkdir -p; checking for gawk... no; checking for mawk... mawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking whether make supports nested variables... (cached) yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... no; configure: error: in `/home/SU2':; configure: error: C++ compiler cannot create executables; See `config.log' for more details; ```; I am sure that I have installed gcc/g++ successfully. You can see; ```; (base) root@a5502ebdff64:/home# gcc --version; gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0; Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```; ```; (base) root@a5502ebdff64:/home# g++ -o hello hello.cc; (base) root@a5502ebdff64:/home# ./hello ; Hello, World!; ```; I have uploaded the `config.log` file. Could you give me some suggestions, please?; [config.log](https://github.com/su2code/SU2/files/3418183/config.log)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738:33,install,install,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/738,4,['install'],"['install', 'installed']"
Deployability,"Dear developers,; I am trying to install SU2 v6.2.0 on Ubuntu 16.04 following the [instruction](https://su2code.github.io/docs/Python-Wrapper-Build/) you provided. But it failed with errors. I have installed Swig and mpi4py as you suggested. The command I used:; ```; ./configure --prefix=/home/lab/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx --enable-PY_WRAPPER; ```; The SU2_RUN and SU2_HOME environment variables displayed at the conclusion of configure. When I run `make -j 24`, the error showed up:; ```; make[2]: Entering directory '/home/lab/SU2/SU2_PY/pySU2'; swig -DHAVE_MPI -Wall -I/home/lab/anaconda3/include/python3.7m -I/home/lab/anaconda3/include/python3.7m -I/home/lab/.local/lib/python2.7/site-packages/mpi4py/include -I/home/lab/anaconda3/lib/python3.7/site-packages/mpi4py/include -I/Library/Python/2.7/site-packages/mpi4py/include -outdir ./ -o SU2_APIPYTHON_wrap.cxx -c++ -python /home/lab/SU2/SU2_PY/pySU2/pySU2.i ; /home/lab/SU2/SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; Makefile:532: recipe for target 'SU2_APIPYTHON_wrap.cxx' failed; make[2]: *** [SU2_APIPYTHON_wrap.cxx] Error 1; make[2]: Leaving directory '/home/lab/SU2/SU2_PY/pySU2'; Makefile:525: recipe for target 'all' failed; make[1]: *** [all] Error 2; make[1]: Leaving directory '/home/lab/SU2/SU2_PY/pySU2'; Makefile:441: recipe for target 'all-recursive' failed; make: *** [all-recursive] Error 1; ```. Best.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722:33,install,install,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/722,2,['install'],"['install', 'installed']"
Deployability,"Dear friends of the Heat Solver and Periodic Boundary conditions, . I feared no exhausting work and added periodic BC to the Heat Solver. Stock up your supplies, cancel meetings for today and dive into the diff to review this piece. Ok for real, I don't know if that is all that has to be done? I did some early testing with mixed results, I noticed that I had to turn down CFL for the solid zone (1e4 in non-periodic case-> 1) to get a solution that seems to respect the periodicity. If the CFL is too large then I get some spurious temperature and weird residual pattern. Any comments are appreciated. This was just a first shot so Im gonna do more digging on that issue. ## Related Work; Periodic bc was initially implemented in #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382:1404,update,updated,1404,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382,1,['update'],['updated']
Deployability,"Dear reader, . Let me give a little bit background first:. When a massflow is prescribed for periodic flow (`KIND_STREAMWISE_PERIODIC= MASSFLOW`), then a pressure drop is iterated(/adapted in each iteration) to fulfill that massflow requirement. In the Volume Source term only this pressure drop is used. The initial value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Mass",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:535,update,update,535,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,2,['update'],['update']
Deployability,"Dear,. I have recently installed SU2 v3.0 64bit (pre-compiled from SU2 download) on a Windows 7 x64 single_threded and installed python2.7.6 (winPython_amd64) also tried python3.3. I have installed SU2 as c:\SU2 (no spaces as in program files installation).; When I tried to run the test case of turb_RAE2822 at command prompt: . Code:; python ""c:\su2\shape_optimization.py"" -f turb_rae2822.cfg; Follwing error displayed:. Traceback (most recent call last):; File ""shape_optimization.py"", line 26, in <module>; import_su2; File ""_init_.py"", line 13, in <module>; if 'libedit' in readline._doc_. Type Error: argument of type 'nonetype' is not iterable. How can it be solved?; What is the appropriate version of python?; One more thing that I have found that SU2 is slower than Fluent, i tried naca0012 test case, how can it be sppedy?. ---. Best Regards; Ali",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/25:23,install,installed,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/25,4,['install'],"['installation', 'installed']"
Deployability,Dependabot updates,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2234:11,update,updates,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/2234,1,['update'],['updates']
Deployability,"Describe the bug; I use SU2-v6.2.0 to optimize a wing. But it seems the SU2_DEF does not change the mesh in accord with the surface sensitivity. Is there something wrong with my configuration file? ; The surface sensitivity I got is here:; ![ed8f67ba4ad091367ee775b7e40408c](https://user-images.githubusercontent.com/55584189/95045704-2c11be00-0715-11eb-97a4-307f2dd0623d.png). The deformation is here:; ![45c257b8f11f820fa5be17e276ae65e](https://user-images.githubusercontent.com/55584189/95045842-6f6c2c80-0715-11eb-80ce-5ad26339217b.png). My configure is here:; [wing_op-200929.cfg.txt](https://github.com/su2code/SU2/files/5325585/wing_op-200929.cfg.txt). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1083:178,configurat,configuration,178,https://su2code.github.io,https://github.com/su2code/SU2/issues/1083,1,['configurat'],['configuration']
Deployability,Disabling the new parallel IO routines for the release.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/364:47,release,release,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/364,1,['release'],['release']
Deployability,Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\b,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:7848,Install,Installing,7848,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"Does SU2 allows patching of quadrilateral mesh. If yes, then are there any issues concerned with the same?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/158:16,patch,patching,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/158,1,['patch'],['patching']
Deployability,Doxygen groups can be used to create a separate page which will display anything specified by a \ingroup command. I think this would be a good way to keep our documentation updated about the available config file options and their syntax.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/122:173,update,updated,173,https://su2code.github.io,https://github.com/su2code/SU2/issues/122,1,['update'],['updated']
Deployability,"ENGTH= 1.0; % Compressible flow non-dimensionalization (DIMENSIONAL, FREESTREAM_PRESS_EQ_ONE,; % FREESTREAM_VEL_EQ_MACH, FREESTREAM_VEL_EQ_ONE); REF_DIMENSIONALIZATION= FREESTREAM_VEL_EQ_MACH. % ----------------------------- CL DRIVER DEFINITION ---------------------------%; %; % Activate fixed lift mode (specify a CL instead of AoA, NO/YES); FIXED_CL_MODE= YES; %; % Target coefficient of lift for fixed lift mode (0.80 by default); TARGET_CL= 0.5; %; % Estimation of dCL/dAlpha (0.2 per degree by default); DCL_DALPHA= 0.3; %; % Maximum number of iterations between AoA updates; UPDATE_AOA_ITER_LIMIT= 200; %; % Number of iterations to evaluate dCL_dAlpha by using finite differences (500 by default); ITER_DCL_DALPHA= 500; %; % ---------------------- REFERENCE VALUE DEFINITION ---------------------------%; %; % Reference origin for moment computation (in); REF_ORIGIN_MOMENT_X = 78.759; REF_ORIGIN_MOMENT_Y = 0.0; REF_ORIGIN_MOMENT_Z = 10.570; %; % Reference length for pitching, rolling, and yawing non-dimensional; % moment (in); REF_LENGTH= 16.383; %; % Reference area for force coefficients (0 implies automatic; % calculation) (in^2); REF_AREA= 2098.39; %; % Aircraft semi-span (0 implies automatic calculation) (m or in); SEMI_SPAN= 68.71; %; % -------------------- BOUNDARY CONDITION DEFINITION --------------------------%; %; % Navier-Stokes wall boundary marker(s) (NONE = no marker); MARKER_HEATFLUX= ( Sting, 0.0, Fuselage, 0.0, WingUpper, 0.0, WingLower, 0.0, VT, 0.0, HTUpper, 0.0, HTLower, 0.0, HTTE, 0.0, VTWingTip, 0.0, VTTE, 0.0, WingTE, 0.0, WBFairing, 0.0, PWUpper, 0.0, PWLower, 0.0, PWTE, 0.0 )%; % Far-field boundary marker(s) (NONE = no marker); MARKER_FAR= ( Farfield ); %; % Symmetry boundary marker(s) (NONE = no marker); % MARKER_SYM= ( Symmetry ); %; % ------------------------ SURFACES IDENTIFICATION ----------------------------%; %; % Marker(s) of the surface to be plotted or designed; MARKER_PLOTTING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HT",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:3675,rolling,rolling,3675,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['rolling'],['rolling']
Deployability,Error in AD install for 5.0.0 Raven with libSU2Core.a,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447:12,install,install,12,https://su2code.github.io,https://github.com/su2code/SU2/issues/447,1,['install'],['install']
Deployability,"Extra space. ## Proposed Changes; There was an extra space. ## Related Work; Compute polar did not work when I tried to vary the mach number only. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1039:769,update,updated,769,https://su2code.github.io,https://github.com/su2code/SU2/pull/1039,1,['update'],['updated']
Deployability,"FFD box fix to avoid ambiguous definition of nonplanar faces . ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The FFD box is defined using quadrilateral faces. These faces can in principle be non-planar. To avoid ambiguity, we define a supporting middle node and divide each face into 4 triangles. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1742:1123,update,updated,1123,https://su2code.github.io,https://github.com/su2code/SU2/pull/1742,1,['update'],['updated']
Deployability,FIx a bug which influenced the convergence behavior when using multigrid and SST by allowing the turbulent solution vector to propagate into the coarser grids (during multigrid) at each iteration. In addition this fix includes an update in the variable names for the parallel output.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/372:230,update,update,230,https://su2code.github.io,https://github.com/su2code/SU2/pull/372,1,['update'],['update']
Deployability,FSI_tools module installs to /usr/bin,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2075:17,install,installs,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/2075,1,['install'],['installs']
Deployability,Failed to install SU2 by Python Wrapper Build,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722:10,install,install,10,https://su2code.github.io,https://github.com/su2code/SU2/issues/722,1,['install'],['install']
Deployability,Feature multi obj update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/494:18,update,update,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/494,1,['update'],['update']
Deployability,Feature small makefile update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/235:23,update,update,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/235,1,['update'],['update']
Deployability,"Feature: Blade element momentum (BEM) method for variable load actuator disk modelling of propellers. ## Proposed Changes. The present work is on modifications to the actuator disk model. Variable load actuator disk (VLAD) [Saetta, 2020] uses the given blade loading (which is fixed for the entire duration of the simulation) to impose axial and tangential jumps at the interface. Propeller loading depends on many different parameters and is affected by the surrounding structures and angle of attack (AoA). A method that updates the blade loading at run time is required to take care of the interactions and installation effects. . In the present approach, the Blade Element Method (BEM) is used to calculate the pressure jump and swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:523,update,updates,523,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,2,"['install', 'update']","['installation', 'updates']"
Deployability,Fine-tuning of Scott Imlay's TecIO update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/636:35,update,update,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/636,1,['update'],['update']
Deployability,Fix dissipation in transition model and update inlet profile (initial profile from config),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1268:40,update,update,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268,1,['update'],['update']
Deployability,Fix for axisymmetric terms in NEMO + general NEMO updates,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1326:50,update,updates,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/1326,1,['update'],['updates']
Deployability,Fix heat flux continuous adj,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/251:14,continuous,continuous,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/251,1,['continuous'],['continuous']
Deployability,"Fix some ""resource not released in destructor"" warnings",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1579:23,release,released,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/1579,1,['release'],['released']
Deployability,Fix update of dual-time solver for species transport.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2260:4,update,update,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/2260,1,['update'],['update']
Deployability,"G from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:1623,configurat,configuration,1623,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,1,['configurat'],['configuration']
Deployability,General cleanup and update naming in structural classes,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/522:20,update,update,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/522,1,['update'],['update']
Deployability,"Generated .su2 mesh using Gmsh with same number of elements and nodes as .cgns mesh have on ""su2code.github.io/Inviscid_Wedge/"" repository and used same configuration file from the repository but results are different on using .su2 mesh from Gmsh and the one downloaded from repository. . Its weird that both the mesh are exactly same and same cfg file but different shock resolutions (repository mesh give smoother result). Please check attached Mach contour generated using Paraview.; ![MachContour](https://user-images.githubusercontent.com/59632055/75407996-ce83ea80-5957-11ea-8b7c-9c1a731d7a84.png); [mesh_and_config_files.zip](https://github.com/su2code/SU2/files/4259257/mesh_and_config_files.zip). **Desktop (please complete the following information):**; - OS: Windows 7; - MPI implementation and version: MicrosoftMPI v10.1; - SU2 Version: v7.0.0 (binary executable)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/890:153,configurat,configuration,153,https://su2code.github.io,https://github.com/su2code/SU2/issues/890,1,['configurat'],['configuration']
Deployability,"Good evening, I am currently struggling with compiling SU2 from source code. After I have built the program I try to compile it using ninja.exe, but during the process I get the following error:. ```; [443/454] Linking target SU2_DEF/src/SU2_DEF.exe; FAILED: SU2_DEF/src/SU2_DEF.exe; c++ @SU2_DEF/src/SU2_DEF.exe.rsp; C:/Program Files/mingw-w64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; C:/Program Files/mingw-w64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; C:/Program Files/mingw-w64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; C:/Program Files/mingw-w64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; collect2.exe: error: ld returned 1 exit status; [448/454] Compiling C++ object SU2_CFD/src/libSU2core.a.p/.._include_numerics_simd_CNumericsSIMD.cpp.obj; ninja: build stopped: subcommand failed.; ```. I do not understand what causes the problem since MPI should have been correctly installed and the msmpi.lib file is present in C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64.; I imagine this is a trivial problem due to my inexperience but I am not able to understand how to fix it. Any help would be greatly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1468:1356,install,installed,1356,https://su2code.github.io,https://github.com/su2code/SU2/issues/1468,1,['install'],['installed']
Deployability,"HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/github/codeql-action/commit/66c3cec3e84942c64294dd8ea34532318b12a14e""><code>66c3cec</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/36f1104e11cf100d92d694d3df5330397e1a1a2d""><code>36f1104</code></a> Bump the npm group with 5 updates</li>; <li><a href=""https://github.com/github/codeql-action/commit/905ae4af531685eaee37e94f46845bf4c420dc62""><code>905ae4a</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2163"">#2163</a> from github/mergeback/v3.24.5-to-main-47b3d888</li>; <li><a href=""https://github.com/github/codeql-action/commit/6dab9f2356bef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dep",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:14819,release,releases,14819,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['release'],['releases']
Deployability,"Having to run `make install` and put `SU2_PY` on the path manually is sort of a pain and misses out on some of the convenient features of `setuptools`, e.g., installing with `pip` in editable mode with the `-e` flag, to allow development work to be done without the install step.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/463:20,install,install,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/463,3,['install'],"['install', 'installing']"
Deployability,"Hello SU2 users and developers,. Begin this year I noticed that the dv_value of an incompressible optimization case is not adjusted by the SLSQP optimizer, but is just halving for each function call. I executed th; e following test cases, to narrow the possibilities and to possibly detect the problem. . First I took a compressible test case to see the deformation behavior of a compressible case; the behavior was as suspected. ; The next step is the change of regime type: compressible to incompressible, which results into a wrong behavior of the dv_value (halving for each function call). ; Subsequently I changed the regime from incompressible to compressible and I changed only the velocity (not the Reynolds number) from Mach 0.7-> 0.07; dv_value worked as suspected. ; As last I ran the compressible case with Mach 0.07 and I changed Reynolds from 6.5e6 -> 1.6e6, which results in a wrong behavior (halving for each function call). It seems to be a bug, because it is an unsuspected behavior and I do not see any relation between the regime type and the adjoint equations. I tried to find it in the code for weeks, however I could not find it. Can someone please tell me why the optimization process behaves in this way for incompressible flows. . I saw many updates of SU2 to the adjoint scripts and to shape_optimization.py. Now I am wondering whether this behavior has been taken into account during the update. So whether the incompressible optimizer will work properly after I have updated the SU2 package. I really look forward to a solution or reply!. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409:1268,update,updates,1268,https://su2code.github.io,https://github.com/su2code/SU2/issues/409,3,['update'],"['update', 'updated', 'updates']"
Deployability,"Hello everybody:; I would like to have more informations about the correct usage of discrete Adjoint when the fluid domain contains two different zones.; I tried to run a discrete Adjoint simulation using the test case ""Axial_stage_2D"" (inside the turbomachinery sub-directory); the cfg file has been modified in order to allow the adjoint calculation, Hick-Henne bumps have been set on both surfaces of the blades but when I tried to run the simulation there have been several problems:; - firstly, SU2_DEF in stand-alone mode seems to disregard the second part of the mesh (the rotor);; - when I tried to apply a deformation just on the statoric part, the DEF module placed Hicks-Henne bumps on the surface but in positions which were incoherent with the ones specified into the configuration file.; - I used the Python script but even in that case, the effective bump position was different from the expected one.; - Using the Python script discrete_adjoint.py with nzones =2 (specified through the -z 2 flag), two different history-files (history_direct_0.dat, history_direct_1.dat) are sistematically generated by the CFD module (one for each zone) but when the next module (CFD_AD) is called, it tries to find a single history file named ""history_direct.dat"", which does not exist, and consequently displays an error and stops. A similar thing happens when running finite_difference.py. Is there a documentation that I can use to correctly set a multi-zone Adjoint? Does a similar note exist for the correct setting of bump placement?; Thanks a lot!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/630:781,configurat,configuration,781,https://su2code.github.io,https://github.com/su2code/SU2/issues/630,1,['configurat'],['configuration']
Deployability,"Hello everyone,. I am starting to work on adding inlet file interpolation capabilities in SU2. I currently have a spanwise PT and TT distribution (r vs PT or TT) for an inlet boundary for a Stator (periodic, turbomachinery case). I want to carry out a spanwise interpolation at the inlet vertices. I can write a program to read an inlet file for a new format (r vs PT or TT). Then I want to 1D interpolate this data against the radii of all the vertices on the inlet face. The best way is to generate a **piecewise 1D interpolation function** that can return the value of the interpolated data at that radius. I have done this before in python using 'interp1D'. I have found the following library for C++ that does have this capability:. http://people.math.sc.edu/Burkardt/cpp_src/pwl_interp_1d/pwl_interp_1d.html. which will require _'The PWL_INTERP_1D test code needs the R8LIB and TEST_INTERP libraries._'. I hope these libraries will be integrated with SU2 without any issue. However, it would be better if I can use some of the built-in interpolation capabilities in SU2 like what I found in 'interpolation_structure.cpp'. I also look forward to extending this capability for 2D interpolation(that is, in r and theta). It would be very helpful if someone who has worked with interpolation before can point to a function that is capable of generating a piecewise interpolation function that could work for my case or can pitch in any idea related to this. Thanks!. @vdweide @clarkpede @economon @juanjosealonso @sravya91 @bmunguia @jayantmukho",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/791:941,integrat,integrated,941,https://su2code.github.io,https://github.com/su2code/SU2/issues/791,1,['integrat'],['integrated']
Deployability,"Hello everyone,. I encountered an error in the writing of a CGNS file when no nodes are associated to a given rank. It usually happens when small grids are employed and the simulation is performed on more than one core. have uploaded at the following link the mesh and the config used to reproduce the error. https://polimi365-my.sharepoint.com/:f:/g/personal/10507725_polimi_it/Ekl88a3uOKhMu4uCLRy3tHIBNNo6_3oMTNiZq97NB6ztDw?e=Hu8pqe. Notice that, if only one heatflux marker is selected to print the results onto, then it does not work when 2 or more cores are used. On the other hand, if both of the heatflux markers are used then it works in parallel. To solve this issue I just added a check on the number of local points in the function CCGNSFileWriter::WriteField. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2178:1516,update,updated,1516,https://su2code.github.io,https://github.com/su2code/SU2/pull/2178,1,['update'],['updated']
Deployability,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948:81,install,installation,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/948,11,"['Install', 'install']","['Install', 'install', 'installation', 'installed']"
Deployability,"Hello guys,; I run the shape_optimization.py to optimize a wing. I want to minimize the drag function. But the drag function increased. And I have not found any setting in the configuration that clearly define the optimization goal is minimize or muximize the objective function. I only found two setting, 'OPT_OBJECTIVE= DRAG * SCALE' and 'OPT_CONSTRAINT= (STATION1_THICKNESS > 0.077) *SCALE' , ralating to optimization objective. Does it default to minimize drag and muxmize lift? ; Can anybody know that?; the second question is about the scale of OPT_OBJECTIVE and OPT_CONSTRAINT. Does the SLSQP change the constrainted question into unconstrainted with the two scale when solve the optimization question. If so, can anyone tell me the transformed function.; Thanks. - SU2 Version: [ v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1103:176,configurat,configuration,176,https://su2code.github.io,https://github.com/su2code/SU2/issues/1103,1,['configurat'],['configuration']
Deployability,"Hello team,. I have done following changes,; - I have created Dockerfiles for Ubuntu and CentOS and included a Readme file for people to understand how to create and setup binaries to be used, based on this pull request [#169](https://github.com/su2code/SU2/pull/169) as per Heather's recommendation; - I also created a configuration file generator to aid people to quickly create a .cfg file and use them. It is a simple HTML page without anything to be installed. For more details, please read the README.md file checked in @ SU2_IDE/Configuration-gen location. Let me know if you have any questions. Krishna",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172:320,configurat,configuration,320,https://su2code.github.io,https://github.com/su2code/SU2/pull/172,3,"['Configurat', 'configurat', 'install']","['Configuration-gen', 'configuration', 'installed']"
Deployability,"Hello!. ## Proposed Changes; To continue current work being done on different transition models, I am working at the implementation of the eN model for low-turbulence external aerodynamics as proposed by James G. Goder and Mark D. Maughmer ([10.2514/1.J052905](https://arc.aiaa.org/doi/10.2514/1.J052905)). This model incorporates a new transport equation to describe the growth of the maximum Tollmien-Schlichting instability amplitude in the presence of a boundary layer.; ; ## Related Work; This work will be set-up in the same way as the LM model is in https://github.com/su2code/SU2/pull/1751 (which was also generally speaking how I had set up my own LM transition implementation) to make sure merging in a later stage will be easier. ## Roadmap; I am hoping to achieve a working implementation of the eN transition method. This work will be done as finishing part of my master thesis. We will have to see if I have time to completely finish the V&V phase due to time restrictions. I have already done quite some work on implementing and verifying the LM method on a private branch and results show mixed results, especially at higher Re numbers (mentioned also by Menter et all.). Thus the step is made to see how these LM results will compare to eN results. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1765:1896,update,updated,1896,https://su2code.github.io,https://github.com/su2code/SU2/pull/1765,1,['update'],['updated']
Deployability,"Hello!. I am new to SU2 and I'm having trouble running the incompressible turbulent RANS NACA0012 test case on SU2 in Windows.; I have downloaded the binary excecutables SU2 v7.3.0 and my simulation seems to stop after 250 iterations with the error:. _Error in""bool CFileWriter::OpenMPIFile(std::__cxx11::string)"":; Unable to open file restart_flow.dat_. At first I thought that perhaps my MPI I/O was causing this error to occur, however this error also appears when I run the case in serial.; I have had a look at the SU2 documentation and on this forum and so far I haven't been able to find a similar error happening for anyone else. I am not sure how to go about fixing this issue so any help is appreciated. I have attatched the configuration file and screenshots from Windows Powershell to this post and the mesh I am using is n0012_897-257.su2.; Let me know if I need to clarify any further details. Thank you!. **Desktop (please complete the following information):**; - OS: Windows 10.0.19043; - C++ compiler and version: g++ MinGW-W64 8.1.0; - MPI implementation and version: Microsoft MPI v10.1.2 ; - SU2 Version: v 7.3.0 'Blackbird'; [turb_NACA0012_sa.txt](https://github.com/su2code/SU2/files/8005251/turb_NACA0012_sa.txt); ![SU2_error_1](https://user-images.githubusercontent.com/99037921/152580001-7c7670fd-b5ca-4667-a4f5-16350cb67378.png); ![SU2_error_2](https://user-images.githubusercontent.com/99037921/152580035-fe0d1954-2044-4767-a4f8-47effb1d1082.png); ![SU2_error_3](https://user-images.githubusercontent.com/99037921/152580030-60da648d-4d96-451c-8449-e17b4a04e01d.png); ![SU2_error_4](https://user-images.githubusercontent.com/99037921/152580021-abb070b1-9d94-4649-a265-c9ad35a678d3.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1537:735,configurat,configuration,735,https://su2code.github.io,https://github.com/su2code/SU2/issues/1537,1,['configurat'],['configuration']
Deployability,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1037:595,install,installation,595,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037,5,['install'],"['install', 'installation']"
Deployability,"Hello, . all the residuals in the adjoint.dat file written after running a continuous adjoint simulation ( with the option WRT_RESIDUALS= YES) are zero. . Here are the config file and mesh for the QuickStart example which also has this problem; [files.zip](https://github.com/su2code/SU2/files/1495681/files.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/475:75,continuous,continuous,75,https://su2code.github.io,https://github.com/su2code/SU2/issues/475,1,['continuous'],['continuous']
Deployability,"Hello, I am new to SU2 and trying to install it on cluster locally. I am facing issue in compilation and installation step. I used following command to build:; `./meson.py -Dwith-mpi=enabled -Dcustom-mpi=true -Dextra-deps=mpich -Denable-cgns=false --prefix=$HOME/SU2/SU2-Install build`. After which I tried to compile and install:; `./ninja -C build install`. However I am getting an error:; `ninja: Entering directory build; [1/463] Compiling C object externals/metis/libmetis.a.p/GKlib_htable.c.o; FAILED: externals/metis/libmetis.a.p/GKlib_htable.c.o ; cc -Iexternals/metis/libmetis.a.p -Iexternals/metis -I../externals/metis -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -std=c99 -O3 -fPIC -D_FILE_OFFSET_BITS=64 -DNDEBUG -DNDEBUG2 -DHAVE_GETLINE -DUSE_GKREGEX -Wno-implicit-function-declaration -Wno-unused-result -Wno-unused-parameter -Wno-unused-variable -Wno-unused-but-set-variable -Wno-unknown-pragmas -Wno-sign-compare -Wno-clobbered -Wno-empty-body -Wno-unused-label -Wno-misleading-indentation -Wno-maybe-uninitialized -Wno-pedantic -Wno-error=absolute-value -MD -MQ externals/metis/libmetis.a.p/GKlib_htable.c.o -MF externals/metis/libmetis.a.p/GKlib_htable.c.o.d -o externals/metis/libmetis.a.p/GKlib_htable.c.o -c ../externals/metis/GKlib/htable.c; cc1: error: -Werror=absolute-value: no option -Wabsolute-value; cc1: warning: unrecognized command line option ""-Wno-misleading-indentation"" [enabled by default]`. I am unable to understand if its an issue with GCC compiler of the HPC cluster or something else. Would be a great help if someone can guide me on this. Thanks in advance!. **Cluster Information**; - OS: [CentOS Linux 7]; - C++ compiler and version: [g++ (GCC) 13.2.0] (Loaded as module); - MPI implementation and version: [mpich 4.1.2] (Loaded as module); - SU2 Version: [8.0.0 ""Harrier""]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2182:37,install,install,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/2182,5,"['Install', 'install']","['Install', 'install', 'installation']"
Deployability,"Hello, I am new to SU2. I cloned the git repository and wanted to build it from source (on Debian GNU/Linux).; I noticed that the 'meson.py' script downloads a bunch of external dependencies, including Meson and Ninja (as documented in <https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/>). I wanted to use the system-wide versions of Meson and Ninja that I have installed on my Debian box, hence I had to modify the 'meson.build' file, in order to drop the following lines:. if meson.version() != '0.61.1'; error('SU2 must be configured with the extended Meson script (./meson.py) in the SU2 root directory.'); endif. And then I had to manually download the relevant external dependencies.; After that, I issued:. $ meson setup -D_configuration-options_ build; $ ninja -C build install. The build was successful, but using system-wide Meson and Ninja could be made easier. I think that the 'meson.py' script could have an option to avoid downloading Meson and Ninja and to avoid the automatic invocation of the downloaded Meson. Moreover, the 'meson.build' file should not exit unsuccessfully on the basis of meson.version(), or, at least, should check that meson.version() is equal to or later than a given minimum version.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945:369,install,installed,369,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945,2,['install'],"['install', 'installed']"
Deployability,"Hello,. I have been using SU2 NEMO to run cases for steady, inviscid, hypersonic flow around blunt objects. Previously I have been able to successfully run cases using SU2 version 7.1.1. However, I have been running into residual stalling with the newer versions (7.4.1 and 7.5.1). Recently, I tried two different meshes which worked for me before (TestCases/euler/bluntbody/blunt_91.su2 and a RAM C-II mesh I previously used). I also tried updating the confguration file to match selections in TestCases/nonequilibrium/invwedge_ausm.cfg but I still face this issue. I have attached the relevant files here. Please let me know if this is a solver issue or if I need to change any selections in the configuration file. ; [residual_stalling.zip](https://github.com/su2code/SU2/files/11425983/residual_stalling.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2026:698,configurat,configuration,698,https://su2code.github.io,https://github.com/su2code/SU2/issues/2026,1,['configurat'],['configuration']
Deployability,"Hello,. I just tried to run the sliding_interface/channel_2D case, which has 3 zones (0,1,2) in the grid file. The configuration file I used is same as in TestCase, and the only thing I changed is the OUTPUT_FORMAT set to TECPLOT format. The solution output file for zone 1 is not corrected, and a lot of terms in flow_1_*.dat file are 2.502053e-316. Anyone has idea about this issue?. Thanks!. ![bug](https://user-images.githubusercontent.com/20882368/27462920-abbe023e-57f6-11e7-9842-b15b864d79d8.png); ![bug1](https://user-images.githubusercontent.com/20882368/27462924-affcbde0-57f6-11e7-8fa5-8400a5ba6f40.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/402:115,configurat,configuration,115,https://su2code.github.io,https://github.com/su2code/SU2/issues/402,1,['configurat'],['configuration']
Deployability,"Hello,. I wanted to put a given mass flow and given temperature at an inlet.; Here is the thread: http://www.cfd-online.com/Forums/su2/151385-mass-flow-inlet-given-temperature.html. My workaround was 1) to estimate the pressure (eg. p = p_inf), then 2) to use the perfect gas equation to get the density:; p = rho . Rs . T => rho = p / Rs / T; , thanks to which I could 3) get the velocity:; v = mass_flow / rho / S. Thanks to this, and because my case was quite simple, I could have somehow the desired temperature at my inlets. I think, though, that it would be nice to estimate the local pressure at each iteration, for example by averaging it on the boundary, so as to update the inlet density & velocity.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/181:673,update,update,673,https://su2code.github.io,https://github.com/su2code/SU2/issues/181,1,['update'],['update']
Deployability,"Hello,. I'm posting this issue based on the discussion on CFD Online [here](https://www.cfd-online.com/Forums/su2/235889-error-executing-deformation-multiple-ffd-control-point.html#post803932). The original query goes like this- . I'm trying to perform the mesh deformation of Onera M6 mesh with SU2_DEF using multiple FFD control points. The same mesh has been used in the current case as used in the SU2's tutorial of [Onera M6](https://su2code.github.io/tutorials/Inviscid_3D_Constrained_ONERAM6/). The configuration file used in the simulation is attached below- ; [Adjoint_ONERAM6.txt](https://github.com/su2code/SU2/files/6489000/Adjoint_ONERAM6.txt). On executing SU2_DEF, .su2 format of mesh is generated which is used as an input for the simulation. But on executing discrete_adjoint.py, I get the following error-. Error in ""void CConfig::SetConfig_Parsing(std::istream&)"":; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM. ------------------------------ Error Exit -------------------------------. From the looks of the error and my configuration file, I do have an equal number of arguments in the DV_VALUE as well as DV_KIND or DV_PARAM. Thanks! . Desktop:; - OS: Linux (CentOS); - C++ compiler and version: -; - MPI implementation and version: OpenMPI 1.8.8; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1289:506,configurat,configuration,506,https://su2code.github.io,https://github.com/su2code/SU2/issues/1289,2,['configurat'],['configuration']
Deployability,"Hello,. There is a stray allocation in the Integration_Postprocessing routine in line 1804 in the develop branch. Currently reads:. if (template_solver) integration[val_iInst][TEMPLATE_SOL] = new CSingleGridIntegration(config);. instead of delete. Is this resolved in a more recent PR?. Cheers,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/792:153,integrat,integration,153,https://su2code.github.io,https://github.com/su2code/SU2/issues/792,1,['integrat'],['integration']
Deployability,"Hello,; I have a cgns file but it‘s version seems to be incompatible with the CGNS of the SU2.; How to upgrade the CGNS version or Use CGNS that I installed myself when I build SU2?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2063:103,upgrade,upgrade,103,https://su2code.github.io,https://github.com/su2code/SU2/issues/2063,2,"['install', 'upgrade']","['installed', 'upgrade']"
Deployability,"Hello.; After installing latest version 7.0.5 SU2, test case,rotating_caradonna_tung, giving me vtu output files. I cant open it in tecplot or paraview. How can i change the output format ?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1033:14,install,installing,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/1033,1,['install'],['installing']
Deployability,"Hey Guys,. I fixed the Riemann BC to work also with grid movement and updated the entropy fix of the GeneralRoe scheme. The testcases failing are only the ones in the folder nicf (as expected). After the merge i will update the value of the regression tests!. cheers!!!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/184:70,update,updated,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/184,2,['update'],"['update', 'updated']"
Deployability,"Hey everyone, . Following the discussions at the SU2 Developers meeting this week, I wanted to start a conversation about compiling a comprehensive set of V&V cases for SU2 that can showcase it's performance in comparison to other solvers. . I think the the [NASA TMR website](https://turbmodels.larc.nasa.gov/index.html) is a good model to base it on. The idea would be to present the V&V case, provide working configuration and mesh files, and provide results comparing performance to other solvers and to higher fidelity data (when available). This allows people to see the performance of SU2 and replicate it, if need be. . The first step would be compiling a list of cases that should be covered. The [SU2 2014 SciTech paper](https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf) would be a good starting point as it already had a couple of validation cases. This list can be bolstered with some of the NASA TMR cases, and with grid convergence studies. I would like to propose an initial list that the community can talk through and make changes as we see fit. I am mostly only familiar with canonical CFD flows that are used in these cases. But it would be great to have other cases, such as Turbo-machinary or FSI cases, that show the full breadth of SU2's abilities. This is by no means an exhaustive list:. 1. Zero Gradient Flat Plate; 2. 2D and 3D Bump in Channel; 3. Asymmetric Diffuser; 4. Backward facing step; 5. Unsteady Square cylinder; 6. NACA0012; 7. NACA4412 Trailing Edge Seperation; 8. Joukowski Airfoil; 9. 30P30N High Lift airfoil; 10. ONERAM6 Wing; 11. NASA CRM; 12. Subsonic and Supersonic Jets. It would be ideal for these test cases to have either high-fidelity data (wind tunnel tests, or LES/DNS data), and/or published results of other solvers so that comparisons can be made. . I also want to point out the difference between this and the TestCases repository. The TestCases repo is used in regression tests to ensure that parts of the code don't break when cha",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581:412,configurat,configuration,412,https://su2code.github.io,https://github.com/su2code/SU2/issues/581,1,['configurat'],['configuration']
Deployability,"Hey guys, I am running into a seemingly super simple problem. I am trying to build SU2(v7.0.2) with python wrapper option, and I got an error ""Run-time dependency python3 found: NO"", but clearly python3 is installed, as shown below:. <img width=""1032"" alt=""image"" src=""https://user-images.githubusercontent.com/42105225/76112937-2e5e3f00-5fb1-11ea-817f-178f4ffd811f.png"">. other info:; - OS: Ubuntu 18.04; - C++ compiler and version: [e.g., g++ (GCC) 7.4.0]; - MPI implementation and version: [e.g., OpenMPI 2.1.1]; - SU2 Version: [e.g., v7.0.2]. Could anyone help on this? Thanks!. Best,. Aaron",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/903:206,install,installed,206,https://su2code.github.io,https://github.com/su2code/SU2/issues/903,1,['install'],['installed']
Deployability,"Hey there :wave:,. This is an ***automated PR*** to migrate recent [DEP](https://github.com/apps/dep) App users to a new [GitHub action](https://github.com/features/actions) called [Dependent Issues]( https://github.com/marketplace/actions/dependent-issues). . If you received this PR it means you have DEP installed on the organization level (not necessarily enabled on this repository). If you think this is a mistake, I'm sorry. Please close this PR. ### :newspaper: TLDR. * The current DEP app has _been deprecated in favor of the new [Dependent Issues](https://github.com/marketplace/actions/dependent-issues)_ Github Action and it will be removed soon.; * The new Action works the same way the bot did but with additional features/changes:; - Works with both _PRs and issues_ (disabled by default).; - Works with _cross-repository_ dependencies e.g. `microsoft/vscode#999`.; - It _notifies users by writing a comment_ with the list of dependencies and keep their states updated. This is especially useful when having the action enabled for non-PR issues.; - Keywords and the label _can now be customized._; - It sets the state of the head commit on a PR _to `pending` instead of `failure`_ (shows as :orange_circle: instead of a :x: ) when some dependencies are not yet ready (i.e. closed). Breaking changes? Nothing. You can use the action the same way as before. eg. Writing `Depends on #number` or `Depends on owner/repo#number` clause(s) on the PR/issue description. For more info please visit :point_right: https://github.com/marketplace/actions/dependent-issues. ### :bulb: Usage. ![example](https://raw.githubusercontent.com/z0al/dependent-issues/main/demo.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1116:307,install,installed,307,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116,2,"['install', 'update']","['installed', 'updated']"
Deployability,"Hi -. I'm at the AIAA meeting this week and downloaded SU2 after listening to few talks. I noticed you guys optionally link to tecio, the templet binary API, when it is available. . I'm the project manager of the libMesh finite element library, a general purpose C++ finite element library (http://libmesh.sourceforge.net). I also work at NASA/JSC in the Aerosciences & CFD group, hence the potential interest in SU2. In libMesh, we build a number of optional software dependencies from source - Metis, ParMetis, tecio, etc… We find this much preferable to requiring (simple) dependencies to be preinstalled by the user. This pull request adds the source files for tecio, along with automake integration, so that the Tecplot dependencies can be satisfied internally to SU2. The Tecplot tecio source is distributed openly at http://www.tecplot.com/downloads/tecio-library, so there are no issues with redistribution. Some notes on the implementation:; 1. It includes all the tecio sources,; 2. It includes the configure.ac & Makefile.am changes required. Specifically, I did _not_ update the Makefile.in or configure scripts you have checked in to your master, as my autotools are quite newer and doing so would result in unnecessary diffs. So I ask - do you guys have a requirement on the version of autotools you are using, since you are checking in derived files?. See relevant discussion here http://stackoverflow.com/questions/4873065/autotools-and-version-control. If you like this approach, I'll follow up with a similar implementation for building Metis from source as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/21:692,integrat,integration,692,https://su2code.github.io,https://github.com/su2code/SU2/pull/21,2,"['integrat', 'update']","['integration', 'update']"
Deployability,"Hi All,. It seems that the AD build fails with OpenMPI 4.0.0. I don't really know where the source of error is, but I suspect it's with CGNS and how it's handled by OpenMPI?. The error is as follows:. In file included from ../../../Common/lib/../src/../include/./mpi_structure.hpp:42:0,; from ../../../Common/lib/../src/../include/geometry_structure.hpp:41,; from ../../../Common/lib/../src/fem_cgns_elements.cpp:34:; /usr/local/include/mpi.h:2633:20: note: declared here; OMPI_DECLSPEC int MPI_Keyval_free(int *keyval); ^~~~~~~~~~~~~~~; Makefile:1504: recipe for target '../src/libSU2_AD_a-fem_cgns_elements.o' failed; make[2]: *** [../src/libSU2_AD_a-fem_cgns_elements.o] Error 1; make[2]: Leaving directory '/home/akb1r19/CFD_Solvers/SU2/SU2-6.2.0/SU2_AD/Common/lib'; Makefile:441: recipe for target 'install-recursive' failed; make[1]: *** [install-recursive] Error 1; make[1]: Leaving directory '/home/akb1r19/CFD_Solvers/SU2/SU2-6.2.0/SU2_AD'; Makefile:13: recipe for target 'install-SU2_AD' failed; make: *** [install-SU2_AD] Error 2. My pregonfigure command is:. `export CXXFLAGS=""-O3"" && sudo ./preconfigure.py --enable-autodiff --prefix=/home/akb1r19/CFD_Solvers/SU2/Instldir --enable-mpi --with-cc=/usr/local/bin/mpicc --with-cxx=/usr/local/bin/mpicxx &>preconfig.out`. Attaching the whole make output, and the preconfigure log files here too.; I have successfully been able to compile with AD on a cluster with Intel MPI (2017.4.239). I run the exact same commands and it compiles without issue. I haven't tried mpich yet to see if the error persists. Any thoughts?. Thanks,; Amir. [config.log.ad.txt](https://github.com/su2code/SU2/files/2926538/config.log.ad.txt); [config.log.base.txt](https://github.com/su2code/SU2/files/2926539/config.log.base.txt); [conf_SU2_AD.log.txt](https://github.com/su2code/SU2/files/2926540/conf_SU2_AD.log.txt); [conf_SU2_BASE.log.txt](https://github.com/su2code/SU2/files/2926541/conf_SU2_BASE.log.txt); [make.out.txt](https://github.com/su2code/SU2/files",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/659:804,install,install-recursive,804,https://su2code.github.io,https://github.com/su2code/SU2/issues/659,4,['install'],"['install-', 'install-recursive']"
Deployability,"Hi Everyone. I'm new to SU2.; Installed on my mac (Catalina) the parallel version 7.0.2.; Also installed MPICH. I am not using bash but rather tcsh (maybe there is a problem there...); Added the following lines to .tcshrc:; setenv SU2_RUN /Applications/SU2/bin; setenv PYTHONPATH $SU2_RUN. I have tried to run the onera3D tutorial case in parallel and got the following message:; % parallel_computation.py -f inv_ONERAM6.cfg -n 2; Traceback (most recent call last):; File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in <module>; main(); File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; options.compute ); File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; the_Command = build_command( the_Command, processes ); File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in build_command; raise RuntimeError('could not find an mpi interface'); RuntimeError: could not find an mpi interface. Ideas to what can I do?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/938:30,Install,Installed,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/938,2,"['Install', 'install']","['Installed', 'installed']"
Deployability,"Hi `su2code/SU2`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request —",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:129,integrat,integrated,129,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,2,['integrat'],['integrated']
Deployability,"Hi all! I am facing this issue when trying to do the ninja build.; I am trying to install SU2 on the remote server where I don't have root access. **Firstly, I cloned the latest repo (per Nov 3, 2021), and then run the following meson command.**; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/FDa/FDa045/programs/SU2/SU2-7.2.1 -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/home/FDa/FDa045/programs/intel/2020_update4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:82,install,install,82,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,1,['install'],['install']
Deployability,"Hi all, . I will be opening a number of issues that were raised during the Developers Meeting for discussion, to get things started. One interesting open question is **how many of the branches available in the repo are still active.**. My suggestion is that we all work together in having a list of branches with a short description in order to have an idea of where we stand. I would propose that all of you go through your feature branches and collect the following information about them:. - Branch name; - A two line description on the goal of the branch; - Status of the branch:; - Under active development (we are adding a new feature here); - Complete feature, (not necessarily up-to-date with develop); - In such case, latest compatible release; - Mature feature (not necessarily complete); - Test feature, still under consideration; - Test feature, discontinued; - Old feature / unknown status; - Can the branch be deleted?. This information would be very valuable, as maybe some people would be interested in continuing old developments, some repetitive work would also be avoided, and collaboration between complementary branches would be enhanced. I'm happy to help in collecting this information and later cleaning up the repository. Please let me know of your thoughts, but I think we should get this started asap.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/582:745,release,release,745,https://su2code.github.io,https://github.com/su2code/SU2/issues/582,1,['release'],['release']
Deployability,"Hi all,. As I am stepping through DA cases with my debugger I am cleaning some things left and right. No major changes. - making local vars const when possible; - moving the `config->GetBool` directly to the conditional instead of making it a var and using it 1 time; - removing dead code; - adding some comments; - some typos fixed. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1257:759,update,updated,759,https://su2code.github.io,https://github.com/su2code/SU2/pull/1257,1,['update'],['updated']
Deployability,"Hi all,. I experimented a little bit with a different build system to replace automake/autotools. Although it works most of the time fine, it is cumbersome to work with. Especially when modifying the .am files and the configure.ac due to the complicated syntax. Furthermore it is relatively slow. One alternative would be cmake, however, the syntax is also not very comfortable and it has too many features which we actually don't need. . So I came across meson and ninja. It is lightweight and very easy to use (setting it up for SU2 took half a day, without any prior knowledge). Compilation time is faster because it builds all object files in parallel. Another advantage is that it is platform independent. Creating packages and binaries and also crafting releases is much simpler with this system (which we can exploit to automate the release process). It is also possible to embed our regression test framework into that process. . In case you want to try it out, checkout the branch **meson_build**. Everything needed is added as submodule (meson and ninja), so make sure to do a `git submodule update` to clone them. To configure and build use the following commands:. `externals/meson/meson.py build`; `./ninja -C build`. Please test it and give feedback. I have not tried it on windows or mac, so if you are using any of these OS, give it a try!. Note: automake and meson can co-exist together without any interference. So the old way of building SU2 still works in that branch.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685:760,release,releases,760,https://su2code.github.io,https://github.com/su2code/SU2/issues/685,3,"['release', 'update']","['release', 'releases', 'update']"
Deployability,"Hi all,. I made the ENUM_TURB_MODEL an enum class. I will add a few other small things in here. In case you have some minor cleanup commit feel free to push in here. Also made some turbSA+SST functions final where it was override previously. ## Related Work; #1220 #1242 and probably some others on the road to enum class. @suargi i hope this will not interfere to heavily with your work on the SA model things . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1404:1078,update,updated,1078,https://su2code.github.io,https://github.com/su2code/SU2/pull/1404,1,['update'],['updated']
Deployability,"Hi all,. I'm new to CFD and SU2. I'm trying to modify the c++ code to add a time-dependent mach in the compressible Euler equations (SU2 Solver: EULER) for a rocket head cone design. At about line 786 of the CEulerSolver.cpp, I want to have a slight numerical change in its mach, for example, a sine function. After I saw the example of the Adding Custom Source Terms to Euler Equations I modified the code like this:. ```; const auto dt = config->GetDelta_UnstTimeND();; su2double time = config->GetTime_Step() * dt;; su2double Alpha = config->GetAoA()*PI_NUMBER/180.0;; su2double Beta = config->GetAoS()*PI_NUMBER/180.0;; const su2double MachValue = config->GetMach();; su2double Mach = 2 * MachValue + 0.01 * sin(2 * PI_NUMBER * time);; ```. But during postprocessing I noticed that Mach becomes 2 * MachValue + 0 as the ""time"" could not be updated to the series of 0, 1, 2, 3, 4... So I'm wondering how I can build a mach that could change over time. I'm not sure what kind of syntax I should be using or how exactly to implement this mach term. . I am using SU2 7.3.1. Thank you so much!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1835:844,update,updated,844,https://su2code.github.io,https://github.com/su2code/SU2/issues/1835,1,['update'],['updated']
Deployability,"Hi all,. When I try using the mesh_adaptation.py feature with the SUPERSONIC_SHOCK option on the inviscid wedge tutorial to capture the shock, the mesh is changed incorrectly. The original and ""adapted"" meshes are:; ![adapted_quad_grid](https://user-images.githubusercontent.com/18233420/47829974-e80f2500-dd57-11e8-8318-e84ea38336ad.png); ![original_quad_grid](https://user-images.githubusercontent.com/18233420/47829975-e80f2500-dd57-11e8-941c-d552839b12f1.png). The same random element divisions also occur if I use a mesh composed of triangles:; ![original_triangle_grid](https://user-images.githubusercontent.com/18233420/47829998-01b06c80-dd58-11e8-8553-5de26b8313ca.png); ![adapted_triangle_grid](https://user-images.githubusercontent.com/18233420/47829997-01b06c80-dd58-11e8-9f1a-1f33a820292e.png). I am not sure if this is related, but when I run the KIND_ADAPT= GRAD_FLOW option to adapt based on the density gradient (as opposed to using SUPERSONIC_SHOCK), I receive the following output from SU2 from both cases along with no adaptation (even though the grid is composed of quads or triangles):; --------------------- Start numerical grid adaptation -------------------; WARNING: Tried to find 4455 cells suitable for adaptation, but only found 0; The following cell types are currently adaptable: ; + triangles; + quadrilaterals; + tetrahedrons; Your grid may have too high a percentage of other types.; Number of elements to adapt: 0. I attached the configuration file (just the inviscid tutorial config file with the added mesh adaptation parameters at the bottom) and the mesh used (just the inviscid wedge tutorial mesh). [Config_file_and_mesh.zip](https://github.com/su2code/SU2/files/2537063/Config_file_and_mesh.zip). Thanks for any help,; Alex",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606:1464,configurat,configuration,1464,https://su2code.github.io,https://github.com/su2code/SU2/issues/606,1,['configurat'],['configuration']
Deployability,"Hi all,. When running `TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/configMaster.cfg` with 4 cores, SU2 freezes after printing `Simulation Run using the Multizone Driver` to screen. No more screen or file output (e.g. history), but `top` shows that the processes are not idling and the respective cores are at ~100% workload. . Call `mpirun -n 4 SU2_CFD configMaster.cfg` and tell me if it is the same for you. I tested on on our cluster and my private machine with the same result and it also happens every time. They seem to run forever ... I let both setups run for an hour (on 3 cores it takes a couple of min to complete) without any change in what i see = no output + cores at 100%. With any other number !=4 for cores the code runs. When was it introduced? Not very very recent ... already there when #773 was merged . **Now to the debugging efforts:**; Happens in debug and release mode. I changed quite a few options to see if sth interesting happens (no turb model, velocity inlet and pressure outlet, changed linear solvers and permutated values all over the place) but no change there. . As it is just 4 cores I went attached to all processes with ; ```; mpirun -n 4 xterm -e gdb --args SU2_CFD configMaster.cfg; ```; And the backtraces show that 2 processes are waiting at:; <details>; <summary>this place</summary>. ```; #0 0x00002aaac3d5ec40 in hmca_bcol_basesmuma_bcast_k_nomial_knownroot_progress; () from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf5ee590 in hmca_coll_ml_allgather (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf32f7e0 in mca_coll_hcoll_allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:902,release,release,902,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['release'],['release']
Deployability,"Hi all,. for multipoint optimization only Linux User were the target group ;-) :. In bin\SU2\eval\functions.py and two times in bin\SU2\eval\gradients.py replace:. string = ""ln -s "" + src + "" "" + dst; stringlist = string.split(); subprocess.Popen(stringlist). with something like:. if os.name == 'nt':; # make windows link; string = ""mklink /d \"""" + dst + ""\"" \"""" + src + ""\""""; stringlist = string.split(); try:; subprocess.Popen(stringlist, stdout = subprocess.PIPE, stderr = subprocess.STDOUT, shell = True); except:; print(""Enable in Windows settings -> Update and Security -> Developer Options, otherwise symbolic links cannot be created""); ; else:; # make unix link; string = ""ln -s "" + src + "" "" + dst; stringlist = string.split(); subprocess.Popen(stringlist). Cheers,. US",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1046:557,Update,Update,557,https://su2code.github.io,https://github.com/su2code/SU2/issues/1046,1,['Update'],['Update']
Deployability,"Hi all,. lately I was fixing restarts. Making sure the adjoint also has a correct primal restart is somewhat annoying due to the way the residuals are printed to screen. I want to change that to look like a normal screen output of all residuals. Here the old variant on top and the new below (field names need to be adapted to usual screen output); ![image](https://user-images.githubusercontent.com/31306376/133253618-e20b6be0-fd29-4c03-96b5-a70f84f06523.png). The code as of today only changes this for single zone and does not use the usual output routines (and is a bit hacky). I want to add multizone and use the output routines instead of this handwritten PrintDirectResidual routine. I'll look into both. Let me know if there are reasons against this or any other comments. ## Related Work; The printing tool box of Tim. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1371:1253,update,updated,1253,https://su2code.github.io,https://github.com/su2code/SU2/pull/1371,1,['update'],['updated']
Deployability,"Hi all,; I'm experiencing some issues with travis lately, not only with time-outs (already discussed a few times), but also with this message:. _No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself._. _Check the details on how to adjust your build configuration on: https://docs.travis-ci.com/user/common-build-problems/#Build-times-out-because-no-output-was-received; The build has been terminated_. It appears to happen randomly, and I noticed that this happened as well to the latest develop build. Anyone that could give any input on this matter?. Thanks,; Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/524:326,configurat,configuration,326,https://su2code.github.io,https://github.com/su2code/SU2/issues/524,1,['configurat'],['configuration']
Deployability,"Hi everyone,. I recently joined the SU2 community and I was wandering if probe feature (to monitor time-history of unsteady flow at chosen location) is available for the latest release of SU2. There was some discussion in 2017 & 2019 (in the issue #466) about exactly this feature but I couldn't find any updates nor confirmations of this being available. Thanks in advance!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1797:177,release,release,177,https://su2code.github.io,https://github.com/su2code/SU2/issues/1797,2,"['release', 'update']","['release', 'updates']"
Deployability,"Hi everyone,. When I try to run an equivalent area calculation for a supersonic aircraft, I'm unable to obtain any results. . EQUIV_AREA= YES. EA_INT_LIMIT= ( 0, 35, 0.5 ). EA_SCALE_FACTOR= 1.0. FIX_AZIMUTHAL_LINE= 90.0. Here are the options I'm using. Are the integration limits dimensional or non-dimensionalized? How do I obtain an output equivalent area as a function of x, as in the figure below (taken from ""Adjoint-based method for supersonic aircraft design using equivalent area distributions"" by Palacios et al)?. ![image](https://user-images.githubusercontent.com/16397216/56650567-ef7b0f80-66a4-11e9-85a7-a7ec229174a6.png). The only mention of equivalent area in the output is in the history.csv file and it looks like this.; ![SU2_EQ_AREA](https://user-images.githubusercontent.com/16397216/56650782-60bac280-66a5-11e9-84f9-65c2eb582142.png). Can someone tell me where I'm going wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/673:261,integrat,integration,261,https://su2code.github.io,https://github.com/su2code/SU2/issues/673,1,['integrat'],['integration']
Deployability,"Hi!. I tried the [Quick Start] tutorial. [Quick Start]: <https://su2code.github.io/docs_v7/Quick-Start/>. I built SU2 from source (from commit 3f68501a7ccb107f05a44c2aa5747797541fb683 , branch 'develop').; I took files 'mesh_NACA0012_inv.su2' and 'inv_NACA0012.cfg' from the same commit. I managed to obtain a correct solution for the DIRECT problem (pressure field visualized with ParaView from 'flow.vtu' looks reasonably similar to the image shown in the tutorial).; Afterward, I changed the parameter MATH_PROBLEM from DIRECT to CONTINUOUS_ADJOINT in the configuration file and:. $ ln -s restart_flow.dat solution_flow.dat; $ SU2_CFD inv_adj_NACA0012.cfg. I obtained a correct adjoint solution (density adjoint field visualized with ParaView from 'adjoint.vtu' looks reasonably similar to the image shown in the tutorial). Finally, I wanted to also try the algorithmic differentiation, so I changed the parameter MATH_PROBLEM to DISCRETE_ADJOINT in the configuration file and:. $ SU2_CFD_AD inv_dadj_NACA0012.cfg. I failed to obtain a correct adjoint solution (I expected to see something really similar to what I got with the CONTINUOUS_ADJOINT method): the density adjoint field seems to have a completely different scale (instead of having values in the approximate range -200 ÷ +200, it has values in the range -0.264 ÷ +0.217 and the values not too close to zero are concentrated in an area near the farfield boundary, far from the airfoil). What's wrong?; Does anything else need to be changed in the configuration file?. **Bug report checklist**. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/). From the above mentioned commit, I built with:. $ ./preconfigure.py --no-medi --no-opdi --no-mpp --no-coolprop; $ export CXXFLAGS='-march=native -mtune=native -O3 -msse -mfpmath=sse'; $ meson setup -Dwith-mpi=disabled -Denable-cgns=true -Denable-tecio=false -Denable-autodiff=true -Denable-directdiff=true --prefix=${HOME}/local build; $ ninja",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1993:559,configurat,configuration,559,https://su2code.github.io,https://github.com/su2code/SU2/issues/1993,2,['configurat'],['configuration']
Deployability,"Hi, . I am getting a strange build issue when I enable pywrapper. See below. . I build my meson with: . `python meson.py build --reconfigure -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=""C:\bin""`. `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; The Meson build system; Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Valu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:398,update,update,398,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['update'],['update']
Deployability,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/40:1175,release,release,1175,https://su2code.github.io,https://github.com/su2code/SU2/issues/40,5,['release'],['release']
Deployability,"Hi, I want to build SU2 from source because I need python wrapper.; After I configured, I tried to type ""make"" to install it.; But I found an error:. ```; ......; CC libparmetis/libparmetis_a-serial.o; CC libparmetis/libparmetis_a-stat.o; CC libparmetis/libparmetis_a-timer.o; CC libparmetis/libparmetis_a-util.o; CC libparmetis/libparmetis_a-wave.o; CC libparmetis/libparmetis_a-weird.o; CC libparmetis/libparmetis_a-wspace.o; CC libparmetis/libparmetis_a-xyzpart.o; AR libparmetis.a; ar: `u' modifier ignored since `D' is the default (see `U'); make[2]: Leaving directory '/home/xxx/SU2-7.3.0/externals/parmetis'; Making all in cgns; make[2]: Entering directory '/home/xxx/SU2-7.3.0/externals/cgns'; CC libcgns_a-cgns_error.o; CC libcgns_a-cgns_internals.o; CC libcgns_a-cgns_io.o; CC libcgns_a-cgnslib.o; In file included from cgns_error.c:24:; cgnslib.h:49:10: fatal error: cgnstypes.h: No such file or directory; 49 | #include ""cgnstypes.h""; | ^~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:430: libcgns_a-cgns_error.o] Error 1; make[2]: *** Waiting for unfinished jobs....; In file included from cgns_io.c:43:; cgns_io.h:32:10: fatal error: cgnstypes.h: No such file or directory; 32 | #include ""cgnstypes.h""; | ^~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:458: libcgns_a-cgns_io.o] Error 1; cgns_internals.c:30:10: fatal error: cgnsconfig.h: No such file or directory; 30 | #include ""cgnsconfig.h""; | ^~~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:444: libcgns_a-cgns_internals.o] Error 1; In file included from cgnslib.c:51:; cgnslib.h:49:10: fatal error: cgnstypes.h: No such file or directory; 49 | #include ""cgnstypes.h""; | ^~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:472: libcgns_a-cgnslib.o] Error 1; make[2]: Leaving directory '/home/xxx/SU2-7.3.0/externals/cgns'; make[1]: *** [Makefile:398: all-recursive] Error 1; make[1]: Leaving directory '/home/xxx/SU2-7.3.0/externals'; make: *** [Makefile:440: all-recursive] ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1629:114,install,install,114,https://su2code.github.io,https://github.com/su2code/SU2/issues/1629,1,['install'],['install']
Deployability,"Hi, I want to build SU2 from source using meson and ninja. After I enabled mpi and tried to install by typing ""./ninja -C build install"" an error occurs:. ```; ......; [14/1296] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Aint.c.o; FAILED: externals/cgns/hdf5/libsu2hdf5.a.p/H5Aint.c.o; cc -Iexternals/cgns/hdf5/libsu2hdf5.a.p -Iexternals/cgns/hdf5 -I../externals/cgns/hdf5 -fdiagnostics-color=always -g -fPIC -Wno-unused-result -Wno-unused-parameter -Wno-unused-variable -Wno-unused-but-set-variable -Wno-sign-compare -Wno-stringop-overflow -Wno-discarded-qualifiers -Wno-error=maybe-uninitialized -Wno-error=unused-function -Wno-error=unused-label -Wno-pedantic -D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE -D_LARGEFILE_SOURCE -D_POSIX_C_SOURCE=200809L -D_GNU_SOURCE -MD -MQ externals/cgns/hdf5/libsu2hdf5.a.p/H5Aint.c.o -MF externals/cgns/hdf5/libsu2hdf5.a.p/H5Aint.c.o.d -o externals/cgns/hdf5/libsu2hdf5.a.p/H5Aint.c.o -c ../externals/cgns/hdf5/H5Aint.c; In file included from ../externals/cgns/hdf5/H5private.h:27,; from ../externals/cgns/hdf5/H5Aint.c:35:; ../externals/cgns/hdf5/H5public.h:63:10: fatal error: mpi.h: No such file or directory; 63 | #include <mpi.h>; | ^~~~~~~; compilation terminated.; ninja: build stopped: subcommand failed.; ```; All the error output is due to this problem of missing mpi.h, but I can confirm that mpi.h is in that directory.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1691:92,install,install,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/1691,2,['install'],['install']
Deployability,"Hi, I'm trying to install SU2 5.0.0 Raven on my Ubuntu with AD support. Following the documentation, I ran preconfigure.py with the following options:; `export CXXFLAGS=""-O3"" && python2.7 ./preconfigure.py --enable-autodiff --prefix=/opt/SU2/SU2v5.0.0 --enable-mpi --with-cc=/opt/openmpi/openmpi-3.0.0/bin/mpicc --with-cxx=/opt/openmpi/openmpi-3.0.0/bin/mpicxx --enable-PY_WRAPPER --with-HDF5-lib=/opt/hdf5/hdf5-1.10.1/lib --with-HDF5-include=/opt/hdf5/hdf5-1.10.1/include --with-ZLIB-lib=/opt/zlib/zlib-1.2.11/lib --with-ZLIB-include=/opt/zlib/zlib-1.2.11/include --with-SZIP-lib=/opt/szip/szip-2.1.1/lib --with-SZIP-include=/opt/szip/szip-2.1.1/include --with-LAPACK-lib=/usr/lib --with-LAPACK-include=/usr/include`. This appears to complete successfully. I then do a `make install` but the install fails when in the /SU2_AD/SU2_PY/pySU2 directory with `make[3]: *** No rule to make target '/opt/SU2/SU2v5.0.0_src/SU2_AD/SU2_CFD/obj/libSU2Core.a', needed by 'SU2_APIPYTHON_wrap.cxx'. Stop.`. I've attached the whole output in the following text file. Am I missing something in my setup?; [make_install_error.txt](https://github.com/su2code/SU2/files/1339819/make_install_error.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447:18,install,install,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/447,3,['install'],['install']
Deployability,"Hi, all. This PR is for implementing various transition models, which are composed of 1~2 additional transport equations. List of wishes to implement transition model : . - [Langtry and Menter model](https://doi.org/10.2514/1.42362) ; - [k-w-gamma](https://doi.org/10.1016/j.paerosci.2012.08.004); - [SA-AFT](https://doi.org/10.2514/6.2019-0039). Now working on : ; - Langtry and Menter model. ## Related Work. LM feature -> development. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1496:1103,update,updated,1103,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496,1,['update'],['updated']
Deployability,"Hi, all. This PR is resuming the #1592 I'm not familiar with the git, so the branch is unfortunately merged. ""[WIP] Develop for Langtry and Menter transition model. https://github.com/su2code/SU2/pull/1592"" was merged while trying to update my remote repository to v7.40. I'm not good at using GitHub, so I'm sorry for this situation. My remote repository(forked) is not synchronized with v7.40, and I don't know what the problem is. So, I will delete the forked repository and fork it again to PR with the same name and content. Fortunately, the LM model updated to v7.40 obtained the same residuals and results as the previous v7.3.1. ## Current State . Code is well running and, validation is almost done. V&V cases: T3A, T3A-, NLF. Flow conditions are the reference from: https://doi.org/10.2514/6.2022-3679. The grids of T3A and NLF cases are provided by [TMW](https://transitionmodeling.larc.nasa.gov/workshop_i/)(Transition Model Workshop). And I made the grid of T3A- myself. To validate the LM model, the simulation results of SU2 are compared with the results of Fluent19.0 with a similar numerical setting. Here is the numerical scheme : . <html xmlns:m=""http://schemas.microsoft.com/office/2004/12/omml""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=PowerPoint.Slide>; <meta name=Generator content=""Microsoft PowerPoint 15"">. <!--tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; td; 	{padding-top:1.0px;; 	padding-right:1.0px;; 	padding-left:1.0px;; 	mso-ignore:padding;; 	color:windowtext;; 	font-size:18.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Arial;; 	mso-generic-font-family:auto;; 	mso-font-charset:0;; 	text-align:general;; 	vertical-align:bottom;; 	border:none;; 	mso-background-source:auto;; 	mso-pattern:auto;}; .oa1; 	{border:1.0pt solid black;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; .oa2; 	{border:1.0pt solid blac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751:234,update,update,234,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751,2,['update'],"['update', 'updated']"
Deployability,"Hi, i am trying to install SU2 on my computer and after running ./ninja -C build install, this is the error I am getting:. 1 warning generated.; [658/711] Compiling C++ object SU2_CFD/s...core.a.p/drivers_CSinglezo[659/711] Compi[660/711] Compiling C++ object SU2_CFD/s...p/drivers_C[672/711] Compilin[696/711] Linking static target SU2_CFD/src/libSU2core.a; /Library/Developer/CommandLineTools/usr/bin/ranlib: file: SU2_CFD/src/libSU2core.a(fluid_CMutationTCLib.cpp.o) has no symbols; /Library/Developer/CommandLineTools/usr/bin/ranlib: file: SU2_CFD/src/libSU2core.a(numerics_scalar_scalar_sources.cpp.o) has no symbols; [701/711] Linking target SU2_SOL/src/SU2_SOL; ld: warning: -undefined error is deprecated; ld: warning: ignoring duplicate libraries: '-lz'; [703/711] Linking target SU2_GEO/src/SU2_GEO; ld: warning: -undefined error is deprecated; ld: warning: ignoring duplicate libraries: '-lz'; [705/711] Linking target SU2_CFD/src/SU2_CFD; ld: warning: -undefined error is deprecated; ld: warning: ignoring duplicate libraries: '-lz'; [707/711] Linking target SU2_DEF/src/SU2_DEF; ld: warning: -undefined error is deprecated; ld: warning: ignoring duplicate libraries: '-lz'; [710/711] Linking target SU2_DOT/src/SU2_DOT; ld: warning: -undefined error is deprecated; ld: warning: ignoring duplicate libraries: '-lz'; [710/711] Installing files.; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Traceback (most recent call last):; File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/mesonmain.py"", line 146, in run; return options.run_func(options); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 811, in run; installer.do_install(datafilename); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 587, in do_install; self.install_targets(d, dm, destdir, fullprefix); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 730, in install_targets",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2199:19,install,install,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/2199,3,"['Install', 'install']","['Installing', 'install']"
Deployability,"Hi, this is an SU2 user who want to use parallel_computation.py to simulate the QuickStart configuration file.; When I access the QuickStart folder and type “parallel_computation.py -f inv_NACA0012.cfg -n 4”, the parallel computation do not work but everything repeat 4 times. The same solution also appear 4 times and the speed become lower. ```; | 0| 1.1562e+00| -1.026860| 0.201330| 0.082117|; | 1| 1.0859e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1016e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1172e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1562e+00| -1.169122| 0.263458| 0.037718|; | 2| 1.0833e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1042e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1354e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1458e+00| -1.236203| 0.301817| 0.029207|; | 3| 1.0742e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1055e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1172e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1172e+00| -1.327201| 0.320840| 0.024965|; | 4| 1.0906e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.0844e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.1125e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.1187e+00| -1.419001| 0.329132| 0.023806|; | 5| 1.0859e+00| -1.513907| 0.332101| 0.023194|; ```. However, when I type this ""mpirun -np 4 SU2_CFD inv_NACA0012.cfg"" the parallel computing can work normally.; I am sure I installed mpich and enabled python wrapper.; How can I solve this problem of those repeatition?. Thank you very much!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1688:91,configurat,configuration,91,https://su2code.github.io,https://github.com/su2code/SU2/issues/1688,2,"['configurat', 'install']","['configuration', 'installed']"
Deployability,"Hi,. After the ""Update IO"" on April 17 (4c4c296) commit, the Yplus seems to be not right in the output files. The skin friction has been split in x,y and z components and after that I noticed that the y+ in the outputs started to be strange. It's may be a MPI synchronization issue. And just another quick question: Is there any motivation to change the names from ""Pressure_Coefficient"" to ""C<sub>p</sub>"" in the output?. Best,. Cleber.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/283:16,Update,Update,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/283,1,['Update'],['Update']
Deployability,"Hi,. Comp/Inc/Nemo output all had the same RMS_TKE etc output -> now this is done once in CFlowOutput and Comp/Inc/NemoOutput only call sth like `SetHistoryOutput_Turb` in their respective `SetHistoryOutput`. this is just a cleanup and shouldnt change too much. I do this in anticipation of addition of Species related output which I dont want to repeat. So #1388 will use the same concept. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1449:1073,update,updated,1073,https://su2code.github.io,https://github.com/su2code/SU2/pull/1449,1,['update'],['updated']
Deployability,"Hi,. I am new to SU2 and I am trying to install and build from the source code of SU2 on WSL Ubuntu 16.04. However, I kept getting errors in the meson build process on the website. It might be something stupid but I would appreciate it if anyone could help me with it. I first cloned the GitHub repo to the local directory by:; git clone https://github.com/su2code/SU2.git. then I run the meson file; ./meson.py build. The code seems to be running for a while, downloading something (I assume they are prerequisites) in subprojects/ folder. Then I got this error in the following:. $ ./meson.py ./build; ......; ......; Checking connectivity... done.; Submodule path 'externals/mel': checked out '2484cd3258ef800a10e361016cb341834ee7930b'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; Traceback (most recent call last):; File ""./meson.py"", line 83, in <module>; from mesonbuild import mesonmain; File ""/mnt/c/Users/NAME/Work/Code/SU2/externals/meson/mesonbuild/mesonmain.py"", line 191; mlog.error(f'Error in {script_name} helper script:'); ^; SyntaxError: invalid syntax. I am not sure what is happening here. Could anyone please help me? Thank you very much.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2016:40,install,install,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/2016,1,['install'],['install']
Deployability,"Hi,. I am running shape optimization on the HPC ARCC cluster we have here at U of Cincinnati. Running it normally through a shell script with sbatch commands gives the following error:. ```; The application appears to have been direct launched using ""srun"",; but OMPI was not built with SLURM's PMI support and therefore cannot; execute. There are several options for building PMI support under; SLURM, depending upon the SLURM version you are using:. version 16.05 or later: you can use SLURM's PMIx support. This; requires that you configure and build SLURM --with-pmix. Versions earlier than 16.05: you must use either SLURM's PMI-1 or; PMI-2 support. SLURM builds PMI-1 by default, or you can manually; install PMI-2. You must then build Open MPI using --with-pmi pointing; to the SLURM PMI library location. Please configure as appropriate and try again.; ```. Since this was using srun, I found a way to by-pass this issue by changing:; https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_PY/SU2/run/interface.py#L58. to; `mpi_Command = 'mpirun -n %i %s'`. which works fine (for single node). A better way would be:. `mpi_Command = 'mpirun %s'`. but then I get the following error:. ```; File ""/home/baigan/SU2/bin/SU2/run/interface.py"", line 277, in build_command; the_Command = mpi_Command % (processes,the_Command); TypeError: not all arguments converted during string formatting; ```. I see in interface.py that using srun was the way SU2 was expected to run on SLURM. But since it doesn't I am curious what is the way other people are running if they use SLURM. This PMIx support issue may be specific to the cluster I am using.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1032:707,install,install,707,https://su2code.github.io,https://github.com/su2code/SU2/issues/1032,1,['install'],['install']
Deployability,"Hi,. I am trying to install SU v7.0.3 and I find a peculiar problem. I have set -Denable-autodiff = false & -Denable-directdiff = false during configuration creation using meson.py. However, the configuration still downloads CoDiPack and MediPack. Shouldn't the downloading be bypassed or is there something wrong with my understanding?. Thanks and regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/953:20,install,install,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/953,3,"['configurat', 'install']","['configuration', 'install']"
Deployability,"Hi,. I am trying to install SU2 from source, on a cluster that has no internet access. Firstly, is it possible to install SU2 in this scenario? Secondly, can you suggest a way to do this without running into dependency issues? I tried to find this information but could not get it. I will appreciate your help/suggestions regarding this. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955:20,install,install,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/955,2,['install'],['install']
Deployability,"Hi,. I am trying to install SU2 v7.1.1 on a cluster without internet access. I have downloaded CoDiPack, MeDiPack, Meson, Ninja and Mutation modules in the root directory. However, when I run meson.py I get the following error:. Downloading CoDiPack '1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8'; Traceback (most recent call last):; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1318, in do_open; encode_chunked=req.has_header('Transfer-encoding')); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1239, in request; self._send_request(method, url, body, headers, encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1285, in _send_request; self.endheaders(body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1234, in endheaders; self._send_output(message_body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1026, in _send_output; self.send(msg); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 964, in send; self.connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1392, in connect; super().connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 936, in connect; (self.host,self.port), self.timeout, self.source_address); File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 724, in create_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1335:20,install,install,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335,1,['install'],['install']
Deployability,"Hi,. I am trying to installSU2 in my machine. I am using python3 as suggested. When I am building the configuration using ./meson.py build I get the following error:. Traceback (most recent call last):; File ""./meson.py"", line 74, in <module>; build_ninja(); File ""./meson.py"", line 60, in build_ninja; subprocess.run([sys.path[0] + os.path.sep + 'ninja', '--version'], stdout=subprocess.PIPE); AttributeError: 'module' object has no attribute 'run'. What does this error indicate? Do I require a later version of python (>3.5)?. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/954:102,configurat,configuration,102,https://su2code.github.io,https://github.com/su2code/SU2/issues/954,1,['configurat'],['configuration']
Deployability,"Hi,. I am trying to run SU2 on parallel, and MPI is installed and on path in system variables. I have also tried enforcing with meson with the commands said in the website, but the system does not take it either, as in it does not recognize meson commands also, when it is in system variables as well. ; When I installed SU2, it had shown the message of MPI not found. Is there any other way to make it work?. Thank you beforehand!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1233:52,install,installed,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233,2,['install'],['installed']
Deployability,"Hi,. I try to install SU2-7.4.0 with mpi and cgns features to Ubuntu 22.04.3 LTS. I run ""./meson.py build "" successfully, however, the installation stops at the following step while running ""./ninja -C build essential"". ""[461/1361] Compiling C++ object extern...ibteciompi.a.p/ZoneWriterFactory.cpp.o"". I also tried to install it without mpi, cgns and tecio, but unfortunately it stops at the following step. ""[6/842] Compiling C++ object Common/src/libSU2Common.a.p/linear_algebra_CSysSolve.cpp.o"". I used the patch file provided on this page (https://github.com/su2code/SU2/issues/955), but unfortunately, it didn't resolve the issue. I use gcc 9.5.0, g++ 9.5.0, mpirun 4.1.2, and python 3.10.12 for installation. Any help would be appreciated.; Thanks,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2148:14,install,install,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/2148,5,"['install', 'patch']","['install', 'installation', 'patch']"
Deployability,"Hi,. I've been trying to build SU2 with its Python bindings, but have sadly been unable to link the targets `SU2_PY/pySU2/_pysu2.so` and `SU2_PY/pySU2/_pysu2ad.so`. I have attempted the compilation & linking from both the master branch, and the latest release with the same result. The steps I followed here were:. 1. Meson configuration:; ```bash; ./meson.py build -Denable-autodiff=true -Denable-pywrapper=true -Dwith-mpi=enabled --prefix=/local/temp/DifferentiableProgramming/SU2/python-build --optimization=3 --buildtype=release; ```. 2. Building with ninja:; ```bash; cd build && ninja; ```. 3. Getting an error at the linking stage (the full command is at the bottom of the issue):4. ; ```bash; /usr/bin/ld: /usr/lib/x86_64-linux-gnu/libz.a(zutil.o): warning: relocation against `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib/x86_64-linux-gnu/libz.a(deflate.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; ```; But looking at the linking command `-fPIC` is already used, so I am a little lost for advice here. . Does anyone have any intuition or suggestions what this could be due to?. **Desktop:**; - OS: Ubuntu 22.04; - C++ compiler and version: g++ 11.2.0; - MPI implementation and version: OpenMPI v4.1.4; - SU2 Version: master & v7.3.1. ### Full linking command. ```bash; Linking target SU2_PY/pySU2/_pysu2ad.so; FAILED: SU2_PY/pySU2/_pysu2ad.so ; g++ -o SU2_PY/pySU2/_pysu2ad.so SU2_PY/pySU2/_pysu2ad.so.p/meson-generated_pySU2ad.cxx.o SU2_CFD/src/libSU2core_AD.a.p/definition_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/python_wrapper_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CFluidModel.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CIdealGas.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CPengRobinson.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CVanDerWaalsGas.cpp.o SU2_CFD/src/libSU2core",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1707:252,release,release,252,https://su2code.github.io,https://github.com/su2code/SU2/issues/1707,3,"['configurat', 'release']","['configuration', 'release']"
Deployability,"Hi,. Possibility to give the Heatflux over a boundary in [W] instead of [W/m^2]. This was already possible in the HeatSolver but now also in Inc and Comp flow solvers.; Prescribing a fixed Watt is especially useful in optimization scenarios with Temperature OF where otherwise the optimizer can exploit that a smaller boundary almost certainly yields smaller Temperatures. The necessary SurfaceAreas are computed and stored in CGeometry instances which is computed once at program start by a call from the Driver. I also added NEMO for this feature. There is currently no Testcase which uses `INTEGRATED_HEATFLUX= YES` so one might want to change that :grimacing: :shushing_face: . For the HeatSolver this was originally introduced at some point by @oleburghardt . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1530:1190,update,updated,1190,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530,1,['update'],['updated']
Deployability,"Hi,. Some necessary changes for the species transport solver to work nicely with the Discrete adjoint solver. So it is the same structure that was Introduced for CFlowOutput but now it is CAdjFlowOutput.; - generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication (Done); - Make More OF available such that one can actually use the DA solver; - Add a Gradient validation + Optimization FADO template plus add DA regression tests (or tutorials 🤔 I think I will make a tutorial thing for this); - Some smaller fixes to the previous PR. ## Related Work; directly following #1388 where the majority of adjoint work for the species solver was already done. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1461:1115,update,updated,1115,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461,1,['update'],['updated']
Deployability,"Hi,. When restarted at e.g. Time-Iter 2 the first value would be divided by 3 (number of timesteps counting from zero).; So if your first value in that restarted sim is a 3, the running average would be 1. This is fixed with this commit by setting WINDOW_START_ITER = RESTART_ITER in the Config Postprocessing,; if the option is not set. If the option is set, but incorrectly, an error is raised. ## Related Work; Original implementation #836 ; Change in previous behavior introduced in #1548 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1601:1160,update,updated,1160,https://su2code.github.io,https://github.com/su2code/SU2/pull/1601,1,['update'],['updated']
Deployability,"Hi,. While working with Marker_Engine_Inflow, I have noticed that the boundary condition is not working as intended with the option ENGINE_INFLOW_TYPE= FAN_FACE_MACH. The solutions rapidly diverge when I use FAN_FACE_MACH, but they converge if I use FAN_FACE_PRESSURE and set the pressure to a reasonable value. Looking at the source code, I believe this cause by not reevaluating the marker's Mach Number. . Looking at the source code, I would suggest adding the following line of code to CEulerSolver.cpp after line 2932 which is where it seems to update other marker parameters. config->SetInflow_Mach(iMarker_Inlet, Inlet_Mach_Total[iMarker_Inlet]);",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2274:550,update,update,550,https://su2code.github.io,https://github.com/su2code/SU2/issues/2274,1,['update'],['update']
Deployability,"Hi,. i tried to compile SU2 v7.0.1 on Windows 10.; For this i followed your despription in Docs/Build from Source/Build SU2 on Windows. I installed MS MPI and MS MPISDK 10.1.2, MinGW 8.1.0, pkg-config 0.26 - 1 and swigwin 4.0.1. The command for meson is:; python meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled --prefix=""D:\\Programs\\SU2 CFD\\SU2-7.0.1\\bin"". The result is the following:; git command not found. Using fall-back method to init submodules; The Meson build system; Version: 0.52.999; Source dir: D:\Programs\SU2 CFD\SU2-7.0.1; Build dir: D:\Programs\SU2 CFD\SU2-7.0.1\build; Build type: native build; Project name: SU2; Project version: 7.0.1; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: GNU ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: GNU ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Name\AppData\Local\Programs\Python\Python38\python.exe); Run-time dependency MPI for c found: YES; Run-time dependency MPI for cpp found: NO. meson.build:37:2: ERROR: Dependency ""mpi"" not found. Can you help me what is wrong here?; Which settings do you use to compile SU2 on Windows 10? Did you change any meson.build files?. Thank you very much. Kind Regards; KleineKampfzwergin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888:138,install,installed,138,https://su2code.github.io,https://github.com/su2code/SU2/issues/888,1,['install'],['installed']
Deployability,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1450:1215,update,updated,1215,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450,1,['update'],['updated']
Deployability,"Hi. I'm not sure if this is the best place to post this but there appears to be a problem with the way arguments are handled in the preconfigure.py file within Raven. I am trying to install SU2 with AD support and following the install documentation online, I have the following bash command (I'm running Ubuntu 16.04):. `export CXXFLAGS=""-O3"" && python2.7 ./preconfigure.py --enable-autodiff --prefix=/opt/SU2/SU2v5.0.0 --enable-mpi --with-cc=/opt/openmpi/openmpi-3.0.0/bin/mpicc --with-cxx=/opt/openmpi/openmpi-3.0.0/bin/mpicxx --enable-PY_WRAPPER --with-HDF5-lib=/opt/hdf5/hdf5-1.10.1/lib --with-HDF5-include=/opt/hdf5/hdf5-1.10.1/include --with-ZLIB-lib=/opt/zlib/zlib-1.2.11/lib --with-ZLIB-include=/opt/zlib/zlib-1.2.11/include --with-SZIP-lib=/opt/szip/szip-2.1.1/lib -with-SZIP-include=/opt/szip/szip-2.1.1/include --with-LAPACK-lib=/usr/lib --with-LAPACK-include=/usr/include`. I tested the ordinary 'configure' version of the command first (without AD) and the install seems to work fine, but on trying the above preconfigure.py command, I get the error `configure: error: unrecognized option: '-w=--with-LAPACK-lib'`. Is there some mistake in the string handling of arguments? I've attached a text output an image of error. Please let me know what other information you may need. Regards, Tim. [preconfigure_erro.txt](https://github.com/su2code/SU2/files/1339638/preconfigure_erro.txt). ![preconfigure_error](https://user-images.githubusercontent.com/16842258/30951291-11d2af9a-a45d-11e7-9437-330d33ca2ef1.jpg)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/446:182,install,install,182,https://su2code.github.io,https://github.com/su2code/SU2/issues/446,3,['install'],['install']
Deployability,"Hi. While attempting to run compressible N-S simulation using Peng-Robinsion EoS, I ran into a problem with non-physical solutions. Running SU2_CFD gives the following error multiple times and exits:. ------------------------------ Begin Solver -----------------------------; not physical solution found, h and s input -1.24974 -3.8387; ...; !!! Error: SU2 has diverged. Now exiting... !!! . The simulation which resulted in the error was run at around 313 K and 400 bar, which is in the critical region of the fluid I used (CO2). Repeating the simulation at lower pressures (less than about 100 bar) seems to work fine. In the critical region the EoS has only one real solution, so perhaps the problem is related to finding a root for the EoS in fluid_model_ppr.cpp. Has anyone else encountered the problem?. Relevant configuration options were:. FREESTREAM_PRESSURE= 399E+5; FREESTREAM_TEMPERATURE= 313; REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE. MARKER_RIEMANN= (inlet, TOTAL_CONDITIONS_PT, 400E+5, 313.15, 1.0, 0.0, 0.0); MARKER_NRBC= ( outlet, STATIC_PRESSURE, 395E+5, 0.0, 0.0, 0.0, 0.0). % ---- IDEAL GAS, POLYTROPIC, VAN DER WAALS AND PENG ROBINSON CONSTANTS -------%; FLUID_MODEL= PR_GAS; GAMMA_VALUE= 1.28; GAS_CONSTANT= 188.9221; CRITICAL_TEMPERATURE= 304.1282; CRITICAL_PRESSURE= 7377300; CRITICAL_DENSITY= 480.9911; ACENTRIC_FACTOR= 0.2239",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/398:819,configurat,configuration,819,https://su2code.github.io,https://github.com/su2code/SU2/issues/398,1,['configurat'],['configuration']
Deployability,"Hi; Might be a specific problem: Meson and Ninja work well when your system; is connected to the web network. ; However, importing the software to a disconnected network, that also lacks python3, ; make them unavailable. Would you think that it can be possible to conserve the previously configure procedure as an additional installation script? less efficient but always working...; Trying to use the configure from older versions works, but then Make aborts missing; some modules, like CHeatSolverFVM.cpp. Thanks,; Eran",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910:325,install,installation,325,https://su2code.github.io,https://github.com/su2code/SU2/issues/910,1,['install'],['installation']
Deployability,How to install the software?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/453:7,install,install,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/453,1,['install'],['install']
Deployability,How to upgrade the CGNS version or Use CGNS that I installed myself,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2063:7,upgrade,upgrade,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/2063,2,"['install', 'upgrade']","['installed', 'upgrade']"
Deployability,"I am adding regressions for all the convective numerical schemes in NEMO using the implicit solver. All cases run on an inviscid wedge at the moment, but I am happy to make a new folder in the regression. . ## Related Work; This will allow us to better track our changes and is the start of a more comprehensive set of regression tests for the Nemo solver coming in the future (boundary conditions, etc.) ; This directly relates to #1773 to eventually refactor the AUSM schemes. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1885:868,update,updated,868,https://su2code.github.io,https://github.com/su2code/SU2/pull/1885,1,['update'],['updated']
Deployability,"I am an SU2 user simulating config_incomp_turb_sa.cfg. I would like to define a UDF to simulate an airfoil vibration dynamics.; the original configuration feature is:; ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= (0.25 0.0 0.0); PITCHING_OMEGA= (0.0 0.0 14.91675); PITCHING_AMPL= (0.0 0.0 8.0); ```; The pitching amplitude is a fixed number. however, in my simulation task, i would like to build a UDF to show an increasing pitching amplitude, which depends on the value of the current timestep. I would like to know if there is a related testcase that shows how a UDF is written. Thank you very much.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1673:141,configurat,configuration,141,https://su2code.github.io,https://github.com/su2code/SU2/issues/1673,1,['configurat'],['configuration']
Deployability,"I am attempting to install SU2 master branch and/or feature_NEMO branch on a HPC cluster (https://arc.vt.edu/tinkercliffs/). The modules that I am loading prior to installation are listed below:; GCC/10.2.0; OpenMPI/4.0.5-GCC-10.2.0; CMake/3.18.4-GCCcore-10.2.0; Ninja/1.10.1-GCCcore-10.2.0; Python/3.8.6-GCCcore-10.2.0. My meson command is:; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-mpp=true. The ninja subcommand fails because it fails to link various targets (SU2_GEO/src/SU2_GEO, SU2_DOT/src/SU2_DOT, SU2_DEF/src/SU2_DEF, SU2_SOL/src/SU2_SOL, SU2_CFD/src/SU2_CFD) and then proceeds to Linking static target SU2_CFD/src/libSU2core_AD.a where the message appears: 'ninja: build stopped: subcommand failed.'. The reason for failing to link the targets is common in all instances and is shown as '/apps/easybuild/software/tinkercliffs-rome/libevent/2.1.12-GCCcore-10.2.0/lib64: pread failed: Is a directory'. Please let me know if there's a way to get around this issue. . Thanks in advance. **Desktop (please complete the following information):**; - OS: Linux; - C++ compiler and version: GCC 10.2.0; - MPI implementation and version: OpenMPI 4.0.5; - SU2 Version: 7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1278:19,install,install,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/1278,2,['install'],"['install', 'installation']"
Deployability,"I am exploring the use of SU2's adjoint capability for solving an inverse problem. I wish to know if it is possible to use this to optimize a spatially varying parameter (e.g., spatially varying viscosity). I have measured values of the velocity field in the flow domain, and below is the process I wish to follow for the inference.; 1. Guess viscosity values at grid points.; 2. Run a RANS solution; 3. Compare the RANS velocity field with the measured field; 4. Use loss function = (u_rans-u_measure)^2; 5. Use adjoint optimization to get the updated viscosity field; 6. Repeat 1-5 until convergence (Loss<set_threshold)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1623:545,update,updated,545,https://su2code.github.io,https://github.com/su2code/SU2/issues/1623,1,['update'],['updated']
Deployability,"I am trying to compile SU2 for parallel runs using intel compilers. SU2 compiles perfectly when compiled without the --enable-autodiff flag, but throws an error when compiling with it. The error is: . ```; ../../../Common/lib/../src/adt_structure.cpp(1402): internal error: assertion failed at: “shared/cfe/edgcpfe/exprutil.c”, line 7266. const su2double V0x = xc[0] - 0.5*xRel[4][0] - 0.125*(xRel[1][0]+xRel[2][0]+xRel[3][0]);; ^. compilation aborted for ../../../Common/lib/../src/adt_structure.cpp (code 4); make[2]: *** [../src/libSU2_AD_a-adt_structure.o] Error 4; make[2]: *** Waiting for unfinished jobs....; make[2]: Leaving directory `/path/SU2_AD/Common/lib’; make[1]: *** [install-recursive] Error 1; make[1]: Leaving directory `/path/SU2_AD’; make: *** [install-SU2_AD] Error 2; ```. Looking for the error online, it seems to be something related to the compiler itself. I was wondering if anyone else had encountered this error message, and how they got around it. . I am using icc and icpc version 18.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/719:684,install,install-recursive,684,https://su2code.github.io,https://github.com/su2code/SU2/issues/719,2,['install'],"['install-', 'install-recursive']"
Deployability,"I am trying to get the Dynamic FSI tutorial to work and have rebuilt SU2 for the python wrapper, as well as install all dependencies, including mpi4py, petsc and petsc4py. I am getting the following error and the **_fsi_computation.py_** file is showing that the **_allMarkersID_** variable has no attribute for **_keys_**. I am running the case with Ubuntu 20.04 with openmpi and python 3.8. Can someone please let me know what is causing this issue/ bug?. Traceback (most recent call last):; File ""/usr/lib/python3.8/runpy.py"", line 194, in _run_module_as_main; return _run_code(code, main_globals, None,; File ""/usr/lib/python3.8/runpy.py"", line 87, in _run_code; exec(code, run_globals); File ""/usr/local/lib/python3.8/dist-packages/mpi4py/__main__.py"", line 7, in <module>; main(); File ""/usr/local/lib/python3.8/dist-packages/mpi4py/run.py"", line 198, in main; run_command_line(args); File ""/usr/local/lib/python3.8/dist-packages/mpi4py/run.py"", line 47, in run_command_line; run_path(sys.argv[0], run_name='__main__'); File ""/usr/lib/python3.8/runpy.py"", line 265, in run_path; return _run_module_code(code, init_globals, run_name,; File ""/usr/lib/python3.8/runpy.py"", line 97, in _run_module_code; _run_code(code, mod_globals, init_globals,; File ""/usr/lib/python3.8/runpy.py"", line 87, in _run_code; exec(code, run_globals); File ""/path/to/folder/SU2/SU2_PY/fsi_computation.py"", line 259, in <module>; main(); File ""/path/to/folder/SU2/SU2_PY/fsi_computation.py"", line 165, in main; FSIInterface.connect(FSI_config, FluidSolver, SolidSolver); File ""/path/to/folder/SU2/SU2_PY/FSI_tools/FSIInterface.py"", line 314, in connect; if allMovingMarkersTags[0] in allMarkersID.keys():; AttributeError: 'tuple' object has no attribute 'keys'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2129:108,install,install,108,https://su2code.github.io,https://github.com/su2code/SU2/issues/2129,1,['install'],['install']
Deployability,"I am trying to install the newest version of SU2 on our computing cluster; previously I have been running SU2 v6.2. I have successfully installed swig:; ```; $ swig -version. SWIG Version 2.0.10. Compiled with g++ [x86_64-redhat-linux-gnu]. Configured options: +pcre; ```; When I installed mpi4py, I had to install it with the `--user` flag: `$ pip install mpi4py --user`. I then edited my bash file to include the new python path. I have since run into the following error when trying to run `./meson.py`. I am using Python 3.6.8. **Meson Output**; ```; $ python3 ./meson.py build; ninja executable not found. Building ...; bootstrapping ninja...; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlini",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1042:15,install,install,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042,5,['install'],"['install', 'installed']"
Deployability,"I am trying to simulate a 2.5D airfoil set-up (though the example I show has a cylinder currently). I am trying to reduce the cell count by having the inlet and outlet relatively close to the airfoil (3 and 5 chords respectively). To prevent reflections I'm trying the Riemann BC. The rest of the patches of the box are periodic in such a way that the upper and lower, and front and back patches are communicated. I get what seems to be a strange even-odd decoupling at the inlet (see screen grab attached). I thought it would be related to https://github.com/su2code/SU2/issues/1090, but changing the front and back periodics to symmetry does not fix it, so I assume it must be a problem with the Riemann. I attach 2 cfg files (one with a steady state with symmetry planes, used to get the initial solution for the unsteadyc, but it also develops the same instability if I set them periodic ) and the gmsh geo file that generates the mesh. [su2bug.zip](https://github.com/su2code/SU2/files/14342916/su2bug.zip). System info:; - OS: Windows 10, Ubuntu wsl2; - C++ compiler and version: g++ (GCC) 9.4.0; - MPI implementation and version: OpenMPI 4.0.3, but I'm running serial; - SU2 Version: 8.0.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2218:297,patch,patches,297,https://su2code.github.io,https://github.com/su2code/SU2/issues/2218,2,['patch'],['patches']
Deployability,"I am using SU2 v7.0.6 to do turbomachinery simulations. I am using a radial compressor. There are points in my flow field that show unexpected values of temperature and density, which also makes mach values at those points to be abnormal. There is a sudden change at the trailing edge in my geometry. These points are located right at the trailing edge of my blade and only at these points I see abnormal density and temperature values. I made sure that the velocity of the blade was correctly set. I am sharing a sectional close-up of the trailing edge of my blade with the mesh at that region being visible. . ![teTipMach](https://user-images.githubusercontent.com/66836581/127540972-80cf9914-d6e9-4c9a-af48-aa48478d2c09.png). I am using SST turbulence model. I have simulated a specific case without turbulence to see if it was the issue and the same behavior was present so, the turbulence model does not seem to induce this issue. I have shared my configuration file with numerical information redacted, only to show which markers and settings I am using. Currently I can't share my mesh file. [Configuration.txt](https://github.com/su2code/SU2/files/6902770/Configuration.txt). This issue is present when I am only using basic Roe scheme with MUSCL option turned off. If I turn on MUSCL option, the density and temperature values at these points become even more unnatural and diverge my simulation. - OS: [ Linux (Ubuntu 18.04.5)]; - C++ compiler and version: [g++ (GCC) 7.5.0]; - MPI implementation and version: [OpenMPI 2.1.1]; - SU2 Version: [v7.0.6]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1337:953,configurat,configuration,953,https://su2code.github.io,https://github.com/su2code/SU2/issues/1337,3,"['Configurat', 'configurat']","['Configuration', 'configuration']"
Deployability,"I am using SU2 version 3.2.8 on a Linux workstation.; I am trying to optimize an NACA0012 for Euler flow Test_cases/Optimization_euler/steady_naca0012).; The code diverged after 115 call to functions. I am including the output.; If I am trying to read the error, it seems there is an issue with slsqp that; is provided by Python. If this is the cases, what Scipy version of Python would you recommend?. python shape_optimization.py -f inv_NACA0012_adv.cfg -r 0. ---. | ___ _ _ ___ |; | / **| | | |_ ) Release 3.2.8 ""eagle"" |; | \** \ |_| |/ / |; | |___/_**//_**| Aerodynamic Shape Optimization Script |; ## | |. NIT FC OBJFUN GNORM; 1 1 2.134595E-05 1.958771E-02; 2 6 2.134988E-05 1.958696E-02; 3 13 2.134986E-05 1.958707E-02; 4 24 2.134983E-05 1.958709E-02; 5 35 2.134980E-05 1.958711E-02; 6 46 2.134976E-05 1.958720E-02; 7 54 2.134978E-05 1.958710E-02; 8 65 2.134975E-05 1.958720E-02; 9 76 2.134973E-05 1.958720E-02; 10 87 2.134973E-05 1.958720E-02; 11 98 2.134970E-05 1.958720E-02; 12 104 2.134968E-05 1.958720E-02; 13 115 2.134967E-05 1.958720E-02; Traceback (most recent call last):; File ""shape_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/170:501,Release,Release,501,https://su2code.github.io,https://github.com/su2code/SU2/issues/170,1,['Release'],['Release']
Deployability,"I did a couple of changes to the discrete adjoint implementation. Despite the necessary changes in the iteration structure, the following things have been changed/added:; - It is now possible to compute Pressure, Mach and AoA sensitivities (similar to the continuous adjoint), along with this I modified the screen output.; - The computation of the geometry sensitivities is now split from the adjoint iteration itself (this saves a lot of memory and is much faster). However, this also means that geometry sensitivities are only updated just before the solution files are written.; - In some places in the code you may find the macro AD_BEGIN_PASSIVE and AD_END_PASSIVE. Everything in between is not recorded (called passive section). This is currently used for sections that are related to the construction of the flow Jacobian, since we assume that this Matrix does not depend on the flow solution, i.e. is constant. This is of course not true and leads to a very small error (~0.05% for a flow residual of 10^-4) in the sensitivities, but also increases performance a lot. Then there is a small change in solver_direct_mean.cpp:; - I moved the computation of the primitive variables in the Preprocessing routine into a separate routine (SetPrimitive_Variables). This way it is easier and there is less overhead when computing the coupling of the flow and turbulent variables needed in the discrete adjoint solver. And this is also beneficial for the maintenance and readability of the code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/201:256,continuous,continuous,256,https://su2code.github.io,https://github.com/su2code/SU2/pull/201,2,"['continuous', 'update']","['continuous', 'updated']"
Deployability,"I do not know if it exists already and /or if it is planned at all. In the case it does not exist it would be good to have output information on global energy balances at hand. This specifically applies to CHT multizone computations, but not only. **Describe the solution you'd like**; The energy balance should take care about delta enthalpy between inlet(s) and outlet(s). That can be compared to the heat transferred across the wall(s). So in a steady simulation with one inlet, one outlet and a wall the balance global balance should be zero. When working e.g. on a heat exchanger designs could also be compared with respect to their performance (e.g. NTU numbers or similar). This could be specifically interesting for multizone examples. Further that should work for steady, unsteady, open/closed domains and also consider technical work (as in the case of turbomachinery). ; Essentially it is an output request that should reflect the first law of thermodynamics (including open, transient systems and technical work).; It would help in engineering assessment, convergence control and be a check when new features are implemented. **Example**. Integrated Inlet Power [W] = 3.0050E+05; Integrated Outlet Power [W] = 2.5441E+05; Integrated Wall Heat Loss [W] = 5.4138E+03; Global Energy Balance [W] = 4.0676E+04 (could be internal energy or error); Mean Temperature Based HTC [W/m2K] = 8.5339E+02; Near-Wall Temperature Based HTC [W/m2K] = 7.7598E+02; Number of Transfer Units-NTU [-] = 1.8859E+01; Thermal Residence Time [s] = 8.0691E-03; Thermal Relaxation Time [s] = 4.2786E-04. **and/or**. 	LHS = dQtot + dHtot + Ptot;; 	RHS = dU/dt + dE/dt;; 	err_energy = LHS - RHS;; 	xcol("""", ""dHtot"", ""W"", dHtot);; 	xcol("""", ""dQtot"", ""W"", dQtot);; 	xcol("""", ""dWtot"", ""W"", Ptot);; 	xcol("""", ""LHS"", ""W"", LHS);; 	xcol("""", ""RHS"", ""W"", RHS);; 	xcol("""", ""E-imbalance"", ""W"", err_energy);; 	xcol("""", ""E-imbalance-relative"", ""%"", 100.0 * err_energy / energy_ref);; 	xwrite(""energy_balance.txt"");",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/800:1151,Integrat,Integrated,1151,https://su2code.github.io,https://github.com/su2code/SU2/issues/800,3,['Integrat'],['Integrated']
Deployability,I found that in my old linux SU2's master node didn't release memory after mesh partition .; So I reviewed the code in CGeometry::~CGeometry. I find you use delete like this. ```; if (bound != NULL) {; for (iMarker = 0; iMarker < nMarker; iMarker++) {; for (iElem_Bound = 0; iElem_Bound < nElem_Bound[iMarker]; iElem_Bound++) {; if (bound[iMarker][iElem_Bound] != NULL) delete bound[iMarker][iElem_Bound];; }; }; ```. This will cause only **bound[iMarker][iElem_Bound][0]** be released correctly. ; Sometimes compiler will fix this for you. ; But I think you should change this. ; Just change **delete** to **delete[]**,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/164:54,release,release,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/164,2,['release'],"['release', 'released']"
Deployability,"I had raised the issue #1000 and followed the development when #1102 was proposed. I tried to install SU2 on my new PC with the proposed changes but the ninja built failed with [this long error](https://www.dropbox.com/s/mh3x98kcv8pifv7/ninjarun.log?dl=0). **To Reproduce:**; Run the meson script similar to the following command: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=true -Denable-pywrapper=true -Dextra-deps=lapack,mpich -Denable-pastix=false --prefix=/home/slimshady/UserPackages/su2-test/SU2_INSTALL`. **Desktop:**; - OS: Arch Linux: Kernel 5.10.4; - C++ compiler and version: gcc (GCC) 10.2.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: 7.0.8. I was able to install it by changing the meson.build file like so:; ```; # mpi_dep = [dependency('mpi', language: 'c', required : get_option('with-mpi')),; # dependency('mpi', language: 'cpp', required : get_option('with-mpi'))]; mpi_dep = [dependency('mpich', required : get_option('with-mpi')), #new-change; dependency('mpich', required : get_option('with-mpi'))] #new-change; ```; and then configuring without the custom-mpi flag. What could be the issue? Am I using the flags wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1151:94,install,install,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151,2,['install'],['install']
Deployability,"I have built SU2 in docker and run several cases, but some of them failed at _MPI_Waitany_ . Will there be officially support for a docker release version of SU2 ?. here's the Dockerfile I used to build SU2. [Dockerfile.txt](https://github.com/su2code/SU2/files/3449693/Dockerfile.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/747:139,release,release,139,https://su2code.github.io,https://github.com/su2code/SU2/issues/747,1,['release'],['release']
Deployability,"I have checked and validated the number of elements for DEFINITION_DV, DV_VALUE, DV_KIND and DV_PARAM.; if I keep DEFINITION_DV unchanged, but assign to DV_KIND, DV_PARAM and DV_VALUE just one entry I found no comply on parsing the config file, parallel_computation will work as expected, but shape_optimization ""successfully"" finishes showing a GNORN=0 for each of objective function I have tried! The workaround suggested by Pedro Gomes in the CFD on line site, has not worked.; I have a 2D model, which is my ""smaller"" dataset, and can provide the slurm config and SU2 config. The mesh file size is 31801880 bytes. If those are ok to you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:692,install,installation,692,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['install'],['installation']
Deployability,I have created CMake configuration files to build and install SU2.; I have tested the build and installation process on both the Linux and OS X platform.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/30:21,configurat,configuration,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/30,3,"['configurat', 'install']","['configuration', 'install', 'installation']"
Deployability,"I ran the git command to list contributors and did my best to remove duplicates.; If git does not know your name it will use the github alias, if you don't like that please correct the file directly on this PR. We have a few new names since the last update, welcome to SU2!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1186:250,update,update,250,https://su2code.github.io,https://github.com/su2code/SU2/pull/1186,1,['update'],['update']
Deployability,"I recently downloaded and compiled the feature_adap branch of SU2. . After installing I attempted to run an adaptation case with pyamg. However my code errors out with, . 'File ""C:\bin\SU2\amginria\interface.py"", line 136, in call_pyamg; mesh_new = pyamg.adapt_mesh(mesh, remesh_options); AttributeError: module 'pyamg' has no attribute 'adapt_mesh''. Does the newest version of pyamg no longer have this method? If so, what is the fix?. Thanks; Daniel",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1380:75,install,installing,75,https://su2code.github.io,https://github.com/su2code/SU2/issues/1380,1,['install'],['installing']
Deployability,"I run SU2_CFD.exe of Binary Executables, it shows:. Error in ""void CConfig::SetConfig_Parsing(char*)"":; -------------------------------------------------------------------------; The configuration file (.cfg) is missing!!. Another exe files fail to run ,too. This is true for both serial and parallel versions. What is the reason for this?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2288:183,configurat,configuration,183,https://su2code.github.io,https://github.com/su2code/SU2/issues/2288,1,['configurat'],['configuration']
Deployability,"I tried to compile SU2 with:. ```; git clone https://github.com/su2code/SU2; cd SU2; ./configure; make -j$(nproc); ```. `Configure` ran without any issues, but `make` failed because it was looking for `automake-1.14` and `aclocal-1.14`. On my system I have version `1.11` installed. So I created two symlinks:. ```; sudo ln -s /usr/bin/automake /usr/local/bin/automake-1.14; sudo ln -s /usr/bin/aclocal /usr/local/bin/aclocal-1.14; ```. Ran make again, et voila, everything worked out fine. No issues. I would like to suggest to change the source of SU2 to **not** specifically require version 1.14 of `automake` and `aclocal`.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/27:272,install,installed,272,https://su2code.github.io,https://github.com/su2code/SU2/issues/27,1,['install'],['installed']
Deployability,"I used SU2-3.0.0 'eagle' ; My metis version is 5.1.0. But when I compile Metis 64bit (set IDXTYPEWIDTH to 64) .There are some compile errors occured below:. ......; ......; ../src/geometry_structure.cpp(5371): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_SetDefaultOptions(options);; ^; ../src/geometry_structure.cpp(5373): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);; ......; ...... Same to metis, when I compile cgns with hdf5. There are also some errors. The library link may be had some mistake. But the most important error is that -- when I change --with-mpi=mpicxx to --with-mpi=mpiicpc . Build Configuration Summary:. ```; Source code location: /parastor/users/isc01/zy/temp/SU2-master-back; Install location: ; Version: 3.0.0 ""eagle""; Compiler: mpiicpc; Preprocessor flags: -O3; Compiler flags: -O3; Linker flags: ; CGNS support: no; MPI support: yes; Metis support: yes; TecIO support: no; Mutation++ support: no; Jsoncpp support: no. Build SU2_CFD: yes; Build SU2_DDC: yes; Build SU2_GPC: yes; Build SU2_MAC: yes; Build SU2_MDC: yes; Build SU2_PBC: yes; Build SU2_SOL: yes; Build SU2_GDC: yes; Build SU2_UMC: yes; ```. There are some errors below:. Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/lib",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/31:821,Configurat,Configuration,821,https://su2code.github.io,https://github.com/su2code/SU2/issues/31,2,"['Configurat', 'Install']","['Configuration', 'Install']"
Deployability,"I used SU2_DEF to evaluate CRM wing grid deformation, but the quality of my structured mesh is pretty bad. My question is whether the FFD box settings could affect the grid deformation,for example the distance of FFD box from the wall. Another question is whether the strctured mesh doesn't fit SU2_DEF? ; Could anyone help with this ? thank you!; Here are my FFD boxes, configuration file and slice of my wing (red color is deformed grid, the black one is original grid); [screen output.txt](https://github.com/su2code/SU2/files/835550/screen.output.txt); [configuration.txt](https://github.com/su2code/SU2/files/835551/configuration.txt); ![comparison](https://cloud.githubusercontent.com/assets/23302629/23821092/b4b13030-0663-11e7-91b5-e63849c323ab.png); ![ffdbox1](https://cloud.githubusercontent.com/assets/23302629/23821093/b5400cf6-0663-11e7-9975-e59a144298e6.png); ![ffdbox2](https://cloud.githubusercontent.com/assets/23302629/23821094/b541fd22-0663-11e7-8423-46502ca059d0.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/384:371,configurat,configuration,371,https://su2code.github.io,https://github.com/su2code/SU2/issues/384,3,['configurat'],['configuration']
Deployability,"I was installing the SU2 v7.3.1 from branch feature_pysu2_fsi_adjoint using a new virtual machine. ; I was using the following environment: ; OS Ubuntu 20.04.4 LTS; Python 3.8.10; gcc 9.4.0; open-mpi 4.1.3; swig 4.0.2; I installed mpi4py, notice that mpi4py was installed in directory /home/aarons/.local/lib/python3.8/site-packages/mpi4py. While python was installed in Ubuntu system default that shipped through Ubuntu. . I tried to use default SU2 meson script and installed meson and ninja to build and compile the code. Both of them stuck at the ninja compiling step, when linking target SU2_PY/_pysu2ad.so. The following error message appears:. ```; [8/1355] Generating externals/cgns/hdf5/H5T_init.c with a custom command; [1351/1355] Linking target SU2_PY/pySU2/_pysu2.so. FAILED: SU2_PY/pySU2/_pysu2.so. c++ -o SU2_PY/pySU2/_pysu2.so SU2_PY/pySU2/_pysu2.so.p/meson-generated_pySU2.cxx.o ; SU2_CFD/src/libSU2core.a.p/definition_structure.cpp.o SU2_CFD/src/libSU2core.a.p/python_wrapper_structure.cpp.o ; SU2_CFD/src/libSU2core.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core.a.p/fluid_CFluidModel.cpp.o ; SU2_CFD/src/libSU2core.a.p/fluid_CIdealGas.cpp.o SU2_CFD/src/libSU2core.a.p/fluid_CPengRobinson.cpp.o ; SU2_CFD/src/libSU2core.a.p/fluid_CVanDerWaalsGas.cpp.o SU2_CFD/src/libSU2core.a.p/fluid_CNEMOGas.cpp.o ; SU2_CFD/src/libSU2core.a.p/fluid_CMutationTCLib.cpp.o SU2_CFD/src/libSU2core.a.p/fluid_CSU2TCLib.cpp.o ; SU2_CFD/src/libSU2core.a.p/output_COutputFactory.cpp.o SU2_CFD/src/libSU2core.a.p/output_CAdjElasticityOutput.cpp.o ; SU2_CFD/src/libSU2core.a.p/output_CAdjFlowOutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_CAdjFlowCompOutput.cpp.o ; SU2_CFD/src/libSU2core.a.p/output_CAdjFlowIncOutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_CAdjHeatOutput.cpp.o ; SU2_CFD/src/libSU2core.a.p/output_CBaselineOutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_CMultizoneOutput.cpp.o ; SU2_CFD/src/libSU2core.a.p/output_CElasticityOutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_CFlowComp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1605:6,install,installing,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/1605,5,['install'],"['installed', 'installing']"
Deployability,"I'm a junior student and a new CFDer.; I'v been testing upwind scheme in QuickStart and found that CUSP scheme diverged. Below is some important configuration information; Firstly I just changed convective scheme of ""inv_NACA0012.cfg"" in QuickStart to CUSP and SU2 diverged directly. Configuration information lies below.(CFL = 4.0); >% Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.8; %; % Angle of attack (degrees); AOA= 1.25; %; % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE); MGCYCLE= W_CYCLE; %; % Multi-Grid PreSmoothing Level; MG_PRE_SMOOTH= ( 1, 2, 3, 3 ); %; % Multi-Grid PostSmoothing Level; MG_POST_SMOOTH= ( 0, 0, 0, 0 ); %; % Jacobi implicit smoothing of the correction; MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); %; % Damping factor for the residual restriction; MG_DAMP_RESTRICTION= 1.0; %; % Damping factor for the correction prolongation; MG_DAMP_PROLONGATION= 1.0; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= CUSP; %; % Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:145,configurat,configuration,145,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,2,"['Configurat', 'configurat']","['Configuration', 'configuration']"
Deployability,"ION_ORIGIN that the pull-up. To simulate a free-flying aircraft (in a flight mechanical sense) which moves and rotates in all six degrees of freedom about the center of gravity, a combination of both translation and rotation is beneficial. In the proposed change, the ROTATING_FRAME now considers both parameters ROTATION_RATE and TRANSLATION_RATE given in the config file. Because the default translation rates are zero, there should be no effect for users who want pure rotation. The option STEADY_TRANSLATION now appears obsolete to me because the functionality is included in the ROTATING_FRAME, but I didn't want to remove the code because someone else might use that parameter? . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. This is a follow-up of a discussion here: https://www.cfd-online.com/Forums/su2/241889-rotating_frame-grid-velocity-correct-flow-physics-wrong.html. Fix #1595 (https://github.com/su2code/SU2/issues/1588)](https://github.com/su2code/SU2/pull/1595/commits/c2018c836791944383c13d32dcfec903d5657072) is required to get proper nodal forces and has already been merged into the develop branch, thank you Pedro :). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1621:2701,update,updated,2701,https://su2code.github.io,https://github.com/su2code/SU2/pull/1621,1,['update'],['updated']
Deployability,"Iexternals/cgns -I../externals/cgns -Iexternals/cgns/hdf5 -I../externals/cgns/hdf5 -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -I../externals/mel -ICommon/src -I../Common/src -I/usr/include -I/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi -I/usr/lib/x86_64-linux-gnu/openmpi/include -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -pthread -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ SU2_CFD/src/libSU2core.a.p/output_CAdjElasticityOutput.cpp.o -MF SU2_CFD/src/libSU2core.a.p/output_CAdjElasticityOutput.cpp.o.d -o SU2_CFD/src/libSU2core.a.p/output_CAdjElasticityOutput.cpp.o -c ../SU2_CFD/src/output/CAdjElasticityOutput.cpp; In file included from ../SU2_CFD/src/output/../../include/output/CAdjElasticityOutput.hpp:30,; from ../SU2_CFD/src/output/CAdjElasticityOutput.cpp:29:; ../SU2_CFD/src/output/../../include/output/COutput.hpp:50:10: fatal error: mel.hpp: No such file or directory; 50 | #include ""mel.hpp""; ```. **To Reproduce**. Firstly, I configure su2 by `python3 ./meson.py build`, and it suceed. . ![image](https://user-images.githubusercontent.com/29271051/159434916-1545a216-7f8d-4742-9b8e-1bdc56924adf.png); ![image](https://user-images.githubusercontent.com/29271051/159434952-60d64b38-1322-4ff5-81ce-9e1e2ef33c03.png). Then, I use `./ninja -C build install` to compile it, and the bug is reported. . **Desktop (please complete the following information):**; - OS: the subsystem (Ubuntu 20) on win10; - C++ compiler and version: gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04); - MPI implementation and version: I do not manually install it. ; - SU2 Version: 7.3.0 ""Blackbird"". Download from git. Any suggestion is appreciated~~~",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1569:3597,install,install,3597,https://su2code.github.io,https://github.com/su2code/SU2/issues/1569,2,['install'],['install']
Deployability,If you see some testcases failing seemingly at random do not update them!; Do `git cherry-pick e71a956b49156fcf3b30b705e0e48e803ba155c1` (fixed in #1055),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1060:61,update,update,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/1060,1,['update'],['update']
Deployability,"Implementation of the original SA and Negative SA turbulence models as well as their no-ft2 versions. ## Proposed Changes; Implementation of the original version of Spalart-Allmaras turbulence model (https://www.researchgate.net/publication/236888804_A_One-Equation_Turbulence_Model_for_Aerodynamic_Flows).; Implementation of the Spalart-Allmaras turbulence model without the ft2 term.; Implementation of the original version of Negative Spalart-Allmaras turbulence model (https://www.iccfd.org/iccfd7/assets/pdf/papers/ICCFD7-1902_paper.pdf); Implementation of the Negative Spalart-Allmaras turbulence model without the ft2 term neither modified vorticity. On the config file, choose:; SA: Original SA model; SA_NOFT2: SA model without ft2 term (the *same* model found in the develop branch); SA_NEG: Original negative SA model; SA_NEG_NOFT2: Negative SA model (the *same* model found in the develop branch). *They are not the same as in the develop branch, because I corrected a minor bug.*. Updated the template config file to be in accordance with the source code: turbulent models and OUTPUT_FILES tags. ## Related Work; This PR resolves issues #992 and #1051. ## Regression testing; Tested on tutorials:; - Turbulent Flat Plate; - RAE2822; - Turbulent ONERA M6. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1066:994,Update,Updated,994,https://su2code.github.io,https://github.com/su2code/SU2/pull/1066,2,"['Update', 'update']","['Updated', 'updated']"
Deployability,Improve the configuration file for the SA Neg test case,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559:12,configurat,configuration,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559,1,['configurat'],['configuration']
Deployability,"In `CDiscAdjMultizoneDriver::HandleDataTransfer` we have the following code structure:. bool DeformMesh = false;; for (unsigned short jZone = 0; jZone < nZone; jZone++){; if (jZone != iZone && interface_container[jZone][iZone] != nullptr) {; DeformMesh = DeformMesh || Transfer_Data(jZone, iZone);; }; }; if (DeformMesh) DynamicMeshUpdate(iZone, ExtIter);. `Transfer_Data` returns `true` if and only if the interface type is `BOUNDARY_DISPLACEMENTS`. If this happens once, no further call to `Transfer_Data` will occur for this particular `iZone` because of short-circuit evaluation of the `||`. . Though I'm new to the adjoint driver, I can hardly imagine that this is intended. Maybe the order of the arguments of `||` should be swapped, or it should be coded as in `CMultizoneDriver::Update`?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1285:787,Update,Update,787,https://su2code.github.io,https://github.com/su2code/SU2/issues/1285,1,['Update'],['Update']
Deployability,"In keeping with our open-source philosophy, the SU2 webpage should be open and modifiable by all members of the community, just like the rest of the code. This will make it much easier to manage and improve in the long run with distributed effort. As a first step to accomplish this, we are taking advantage of GitHub Pages (https://pages.github.com) in order to host our current SU2 page. A new repository has been created within the SU2 GitHub organization here:. https://github.com/su2code/su2code.github.io. and it contains a copy of the current webpage located at http://su2.stanford.edu with all necessary modifications to links, data, etc. so that it functions correctly and independently. The files on the master branch of that new repository are automatically hosted for us by GitHub here (for free):. https://su2code.github.io. All developers now have access to this repository, and in the future, we can all collaborate together to keep it updated and modernize it. An important note is that GitHub allows for custom domain names to be applied to this website, allowing us to use a "".org"" domain name instead of https://su2code.github.io in the future, once available (https://help.github.com/articles/using-a-custom-domain-with-github-pages/). As for next steps, I would like to use this PR to invite discussion about this. If we are in agreement to approve this PR, then we will add an automatic redirect from http://su2.stanford.edu to https://su2code.github.io and focus solely on the version of the website in the new repo going forward. Please do share any comments or thoughts.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/436:951,update,updated,951,https://su2code.github.io,https://github.com/su2code/SU2/pull/436,1,['update'],['updated']
Deployability,"In reference to this problem on the cfd-online forums, [here](https://www.cfd-online.com/Forums/su2-installation/188365-ad-build-problem-su2-5-0-0-a.html), where `preconfigure.py` fails to download CoDi and AdjointMPI. I just downloaded the latest develop from Github and noticed that the problem is still there when you try to build AD. I think it's due to a simple problem - the exact error I see in preconf.err is:. ```; --2017-12-08 17:18:47-- https://github.com/scicompkl/CoDiPack/archive/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip; Resolving github.com... 192.30.255.112, 192.30.255.113; Connecting to github.com|192.30.255.112|:443... connected.; HTTP request sent, awaiting response... 302 Found; Location: https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13 [following]; --2017-12-08 17:18:48-- https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13; Resolving codeload.github.com... 192.30.255.120, 192.30.255.121; Connecting to codeload.github.com|192.30.255.120|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: unspecified [application/zip]; Saving to: `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13'. 0K .......... .......... .......... .......... .......... 223K; 50K .......... .......... .......... .......... .......... 442K; 100K .......... .......... .......... .......... .......... 441K; 150K .......... .......... .......... .......... .......... 443K; 200K .......... .......... .......... .......... ...... 9.79M=0.6s. Last-modified header missing -- time-stamps turned off.; 2017-12-08 17:18:49 (435 KB/s) - `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13' saved [252908]. unzip: cannot find or open 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip, 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.zip or 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.ZIP.; ```; It seems `unzip` searches for various endings, such as '.zip, '.zip.zip', and '.zip.ZIP' but I suspect these are failing becaus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/483:100,install,installation,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/483,1,['install'],['installation']
Deployability,Included Dockerfiles for multiple platforms and created a Configuration generation UI,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172:58,Configurat,Configuration,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/172,1,['Configurat'],['Configuration']
Deployability,Install SU2 by python wrapper build in singularity container,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739:0,Install,Install,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/739,1,['Install'],['Install']
Deployability,Install bits need atleast Python 3.5 (Please mention this in the documentation),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/855:0,Install,Install,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/855,1,['Install'],['Install']
Deployability,Installation Issue,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1093:0,Install,Installation,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1093,1,['Install'],['Installation']
Deployability,Installation Problem SU2 7.0.5,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1019:0,Install,Installation,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019,1,['Install'],['Installation']
Deployability,Installation documentation inconsistant,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/245:0,Install,Installation,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/245,1,['Install'],['Installation']
Deployability,Installation: Error during building configuration,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/954:0,Install,Installation,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/954,2,"['Install', 'configurat']","['Installation', 'configuration']"
Deployability,Installing SU2 on a machine without internet access,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955:0,Install,Installing,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955,2,['Install'],['Installing']
Deployability,Integrate MKL 2019 into Develop branch,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/542:0,Integrat,Integrate,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/542,1,['Integrat'],['Integrate']
Deployability,Integrate MKL option for performance improvement on Intel Architectures.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/543:0,Integrat,Integrate,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/543,1,['Integrat'],['Integrate']
Deployability,Integrated Heatflux for flow problems,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1530:0,Integrat,Integrated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530,1,['Integrat'],['Integrated']
Deployability,Issues with the Updated IO 4c4c296,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/283:16,Update,Updated,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/283,1,['Update'],['Updated']
Deployability,"It would be good to have these beta terms available as outputs for debugging purposes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2303:831,update,updated,831,https://su2code.github.io,https://github.com/su2code/SU2/pull/2303,1,['update'],['updated']
Deployability,Major update in grid deformation subroutines,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/278:6,update,update,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/278,1,['update'],['update']
Deployability,"Make changes throughout the docs about requiring bootstrap before configure-make-install for all releases after v6.1.0, and implement clear strategy for master branch and source distributions for subsequent releases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/599:81,install,install,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/599,3,"['install', 'release']","['install', 'releases']"
Deployability,Memory fix + release script update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/708:13,release,release,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/708,2,"['release', 'update']","['release', 'update']"
Deployability,"Modify TestCase.py related to #2159. . ## Proposed Changes; Replaced `platform.processor()` with `platform.machine()` for better cross-platform support. Add `amd64` and `arm64` as additional supported cpu arch. ## Related Work; Issue #2159 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2163:986,update,updated,986,https://su2code.github.io,https://github.com/su2code/SU2/pull/2163,1,['update'],['updated']
Deployability,More arm64 updates and fix a race condition in a test,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2076:11,update,updates,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/2076,1,['update'],['updates']
Deployability,Multi-stage time integration schemes for multiple zones,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437:17,integrat,integration,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/437,1,['integrat'],['integration']
Deployability,"My goal is to have a simple pressure pulse propagate within the domain to ensure my setup is not wrong (boundary conditions, axisymmetry etc). The procedure I follow:; - I set the reference conditions to a quiscent flow condition. ; - Then have SU2 write a RESTART_ASCII file.; - I then modify this ASCII file to now have a Gaussian pressure pulse at the domain center.; - Next, I ask SU2 to read this restart_file.csv as the solution_file.; - However, the very next iteration from SU2 using this initial condition (IC) is a quiescent one. ; - I have tried different solvers and time steps and CFL numbers to no avail. ; - I suspect my configuration file is time stepping away from the pulse IC so quickly that there is no evidence of it in the next time steps I have SU2 write. . Please share any thought you might have regarding the issue my Config file is attached to this comment. . [AcousticPulseTS.txt](https://github.com/su2code/SU2/files/5643539/AcousticPulseTS.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1122:636,configurat,configuration,636,https://su2code.github.io,https://github.com/su2code/SU2/issues/1122,1,['configurat'],['configuration']
Deployability,"N. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Install",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3332,Install,Installing,3332,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"NDENCY_INSTALLATION=false</code> in your workflow, however we plan to remove this ability in future versions of the CodeQL Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2031"">#2031</a></li>; <li>The CodeQL Action now requires CodeQL version 2.11.6 or later. For more information, see <a href=""https://github.com/github/codeql-action/blob/main/#2227---16-nov-2023"">the corresponding changelog entry for CodeQL Action version 2.22.7</a>. <a href=""https://redirect.github.com/github/codeql-action/pull/2009"">#2009</a></li>; </ul>; <h2>3.22.12 - 22 Dec 2023</h2>; <ul>; <li>Update default CodeQL bundle version to 2.15.5. <a href=""https://redirect.github.com/github/codeql-action/pull/2047"">#2047</a></li>; </ul>; <h2>3.22.11 - 13 Dec 2023</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/github/codeql-action/commit/66c3cec3e84942c64294dd8ea34532318b12a14e""><code>66c3cec</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/36f1104e11cf100d92d694d3df5330397e1a1a2d""><code>36f1104</code></a> Bump the npm group with 5 updates</li>; <li><a href=""https://github.com/github/codeql-action/commit/905ae4af531685eaee37e94f46845bf4c420dc62""><code>905ae4a</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2163"">#2163</a> from github/mergeback/v3.24.5-to-main-47b3d888</li>; <li><a href=""https://github.com/github/codeql-action/commit/6dab9f2356bef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:14007,Update,Update,14007,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['Update'],['Update']
Deployability,"NEMO ONLY (not develop): Update some structures within NEMO, more in line with develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1078:25,Update,Update,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/1078,1,['Update'],['Update']
Deployability,"New code created by Blanca Fuentes Monjas, pushed by Evert Bunschoten for permission reasons. ## Proposed Changes; - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1*T + n2*T^2 +n3*T^3 + n4*T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS) ; - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. ; - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent.; . ## Related Work; - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1684:1546,update,updated,1546,https://su2code.github.io,https://github.com/su2code/SU2/pull/1684,1,['update'],['updated']
Deployability,New release 3.2.2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/76:4,release,release,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/76,1,['release'],['release']
Deployability,"Ninja gets built even when it's already installed, this should not happen, meson should use the already available (in this case system installed) ninja. ```; ~/s/t/SU2:master ◼ ❯ ninja --version; 1.8.2; ~/s/t/SU2:master ◼ ❯ which ninja; /usr/bin/ninja; ~/s/t/SU2:master ❯ ./meson.py build; Initialize submodule /home/simon/src/tmp/SU2/externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/simon/src/tmp/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Initialize submodule /home/simon/src/tmp/SU2/externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/simon/src/tmp/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Initialize submodule /home/simon/src/tmp/SU2/externals/meson using git ... ; Submodule 'externals/meson' (https://github.com/mesonbuild/meson) registered for path 'externals/meson'; Cloning into '/home/simon/src/tmp/SU2/externals/meson'...; Submodule path 'externals/meson': checked out '0435691e83fb7172e2a9635d2eb32d5521089916'; Initialize submodule /home/simon/src/tmp/SU2/externals/ninja using git ... ; Submodule 'externals/ninja' (https://github.com/ninja-build/ninja) registered for path 'externals/ninja'; Cloning into '/home/simon/src/tmp/SU2/externals/ninja'...; Submodule path 'externals/ninja': checked out '2d15b04e411229cb902332957281622119025e77'; ninja executable not found. Building ...; bootstrapping ninja...; wrote build.ninja.; bootstrap complete. rebuilding...; [31/31] LINK ninja; ```. **Desktop (please complete the following information):**; - OS: Linux (gentoo)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/911:40,install,installed,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/911,2,['install'],['installed']
Deployability,"Number of elements to apply the criteria; CONV_CAUCHY_ELEMS= 100; %; % Epsilon to control the series convergence; CONV_CAUCHY_EPS= 1E-10; %. % ------------------------- INPUT/OUTPUT INFORMATION --------------------------%; %; % Mesh input file; MESH_FILENAME= NLU_Baseline.su2; %; % Mesh input file format (CGNS, NETCDF_ASCII); MESH_FORMAT= SU2; %; % Mesh output file; MESH_OUT_FILENAME= mesh_caradonna_tung_periodic.su2; %; % Restart flow input file; SOLUTION_FILENAME= solution_flow.dat; %; % Restart adjoint input file; SOLUTION_ADJ_FILENAME= solution_adj.dat; %; TABULAR_FORMAT= CSV; %; % Output file convergence history (w/o extension) ; CONV_FILENAME= history; %; % Output file restart flow; RESTART_FILENAME= restart_flow.dat; %; % Output file restart adjoint; RESTART_ADJ_FILENAME= restart_adj.dat; %; % Output file flow (w/o extension) variables; VOLUME_FILENAME= flow; %; % Output file adjoint (w/o extension) variables; VOLUME_ADJ_FILENAME= adjoint; %; % Output Objective function gradient (using continuous adjoint); GRAD_OBJFUNC_FILENAME= of_grad.dat; %; % Output file surface flow coefficient (w/o extension); SURFACE_FILENAME= surface_flow; %; % Output file surface adjoint coefficient (w/o extension); SURFACE_ADJ_FILENAME= surface_adjoint; %; % Writing solution file frequency; OUTPUT_WRT_FREQ= 10; %. SCREEN_OUTPUT= (INNER_ITER, WALL_TIME, RMS_RES, FORCE_X, MOMENT_X); HISTORY_OUTPUT=(INNER_ITER, WALL_TIME, RMS_RES, AERO_COEFF)`. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]; 3 OS were used:; Ubuntu 22.04 on AWS; WSL with ubuntu 20.04 LST; Windows. Latest MPICH package was used on the ubuntu versions; (basically the one that come with a 'sudo apt-get install mpich'); Latest mpiexec version is used on windows. The code was not compiled, the binaries form the website were used (SU2 v7.3.1).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:10305,install,install,10305,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['install'],['install']
Deployability,"OME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_f",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3221,Install,Installing,3221,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"ON ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION); SOLVER= EULER; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= NO . % ----------- COMPRESSIBLE AND INCOMPRESSIBLE FREE-STREAM DEFINITION ----------%; %; % Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.0; %; % Angle of attack (degrees); AOA= 0.0; %; % Side-slip angle (degrees); SIDESLIP_ANGLE= 0.0; %; % Free-stream pressure (101325.0 N/m^2 by default, only Euler flows) ; FREESTREAM_PRESSURE= 101325.0; %; % Free-stream temperature (288.15 K by default); FREESTREAM_TEMPERATURE= 288.15. % ---------------------- REFERENCE VALUE DEFINITION ---------------------------%; %; % Reference origin for moment computation; REF_ORIGIN_MOMENT_X = 0.25; REF_ORIGIN_MOMENT_Y = 0.00; REF_ORIGIN_MOMENT_Z = 0.00; %; % Reference length for pitching, rolling, and yawing non-dimensional moment; REF_LENGTH= 1.0; %; % Reference area for force coefficients (0 implies automatic calculation); REF_AREA= 14.098904. % ----------------------- DYNAMIC MESH DEFINITION -----------------------------%; %; % Type of dynamic mesh (NONE, RIGID_MOTION, DEFORMING, ROTATING_FRAME,; % MOVING_WALL, AEROELASTIC, EXTERNAL); GRID_MOVEMENT= ROTATING_FRAME; %; % Motion mach number (non-dimensional). Used for intitializing a viscous flow; % with the Reynolds number and for computing force coeffs. with dynamic meshes.; MACH_MOTION= 0.001; %; % Coordinates of the motion origin; MOTION_ORIGIN= 0.0 0.0 0.0; %; % Angular velocity vector (rad/s) about the motion origin; ROTATION_RATE = 335.103216 0.0 0.0; % 2000 RPM -> 209.43950999999998 ; % 2200 RPM -> 230.38346099999998 ; % 2400 RPM -> 251.32741199999998 ; % 2600 RPM -> 272.271363; % 2800 RPM -> 293.215314 ; % 3000 RPM -> 314.159265 ; % 3000 RPM -> 335.103216 . % -------------------- BOUNDARY CONDITION DEFINITION ---------",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:3997,rolling,rolling,3997,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['rolling'],['rolling']
Deployability,OpDiLib Update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1369:8,Update,Update,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/1369,1,['Update'],['Update']
Deployability,Option for Joule Heating not in configuration file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/230:32,configurat,configuration,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/230,1,['configurat'],['configuration']
Deployability,Parmetis integration,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/135:9,integrat,integration,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/135,1,['integrat'],['integration']
Deployability,Patching of Mesh,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/158:0,Patch,Patching,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/158,1,['Patch'],['Patching']
Deployability,Per today's dev meeting. @bigfooted feel free to add more.; I think this will only take effect once we update master.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1612:103,update,update,103,https://su2code.github.io,https://github.com/su2code/SU2/pull/1612,1,['update'],['update']
Deployability,Prepare release scripts for version 8,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2102:8,release,release,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/2102,1,['release'],['release']
Deployability,"Preprocess in iteration_structure.hpp. ## Proposed Changes; * Fix a minor comment spelling error in CSinglezoneDriver.cpp. The preprocess method's comment section involving param in is missing, so I added in. ; . ## Related Work; *N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/987:859,update,updated,859,https://su2code.github.io,https://github.com/su2code/SU2/pull/987,1,['update'],['updated']
Deployability,Properly document changes to the autotools for releases after v.6.1.0,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/599:47,release,releases,47,https://su2code.github.io,https://github.com/su2code/SU2/issues/599,1,['release'],['releases']
Deployability,"Proposed Changes. This pull request adds the test case that we used for the Fuel paper. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. I am submitting my contribution to the develop branch.; My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; I used the pre-commit hook to prevent dirty commits and used pre-commit run --all to format old commits.; I have added a test case that demonstrates my contribution, if necessary.; I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2238:930,update,updated,930,https://su2code.github.io,https://github.com/su2code/SU2/pull/2238,1,['update'],['updated']
Deployability,"Pruned unnecessary files from Boost archive, updated .gitignore files to ignore .szplt files, and eliminated an unnecessary include file check for TecIO. ## Proposed Changes; Pruned unnecessary files from the Boost archive included with TecIO; Updated .gitgnores in example folders to ignore .szplt files; Eliminated an unnecessary check for an X11 header file that TecIO no longer relies on.; . ## Related Work; Fine-tuning to Scott Imlay's TecIO update. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/636:45,update,updated,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/636,3,"['Update', 'update']","['Updated', 'update', 'updated']"
Deployability,"Python interface updated to automatically use ibrun when using slurm on a tacc machine (ie, Stampede)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/227:17,update,updated,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/227,1,['update'],['updated']
Deployability,Python wrapper last updates,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/357:20,update,updates,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/357,1,['update'],['updates']
Deployability,Quickstart tutorial is not updated to latest file versions,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/887:27,update,updated,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/887,1,['update'],['updated']
Deployability,Release v5.0.0,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/366:0,Release,Release,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/366,1,['Release'],['Release']
Deployability,Release v6.0.0,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/509:0,Release,Release,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/509,1,['Release'],['Release']
Deployability,Release v6.1.0,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/540:0,Release,Release,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/540,1,['Release'],['Release']
Deployability,Release v6.2.0,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/641:0,Release,Release,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/641,1,['Release'],['Release']
Deployability,"Release v7.0.0 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/762:0,Release,Release,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/762,1,['Release'],['Release']
Deployability,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/190:172,update,update,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/190,2,"['install', 'update']","['install', 'update']"
Deployability,"Revert ""Update of codi and medi""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/667:8,Update,Update,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/667,1,['Update'],['Update']
Deployability,"Reverts su2code/SU2#507. @clarkpede: while this is absolutely a good thing to fix, unfortunately, it has cause a couple of memory issues that need more time to investigate (we will release v6 tomorrow). We will revert this for now, but let's keep the PR open and clean this up right after the release. Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/508:181,release,release,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/508,2,['release'],['release']
Deployability,"Right now if you include an EnumListOption with no values, for example, . % Type of mesh motion; % Type: EnumListOption Default: GridMovement_Map; GRID_MOVEMENT_KIND= ( ). SU2 gives an error of . Error inT okenizeString(): option GRID_MOVEMENT_KIND in configuration file with no value assigned. I think this is not good behavior. It means that you cannot easily switch from a config file that uses grid movement to one that does not, and it means your can't write a valid config file that has all of the config options in it.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/13:252,configurat,configuration,252,https://su2code.github.io,https://github.com/su2code/SU2/issues/13,1,['configurat'],['configuration']
Deployability,SU2 installation: ninja subcommand fails because of linking target errors on HPC cluster,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1278:4,install,installation,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/1278,1,['install'],['installation']
Deployability,SU2-7.4.0 Installation Issue,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2148:10,Install,Installation,10,https://su2code.github.io,https://github.com/su2code/SU2/issues/2148,1,['Install'],['Installation']
Deployability,SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:6578,Install,Installing,6578,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\U,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:6843,Install,Installing,6843,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3485,Install,Installing,3485,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\S,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4164,Install,Installing,4164,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,Set up CI with Azure Pipelines,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/742:21,Pipeline,Pipelines,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/742,1,['Pipeline'],['Pipelines']
Deployability,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/278:83,update,updated,83,https://su2code.github.io,https://github.com/su2code/SU2/pull/278,2,"['release', 'update']","['release', 'updated']"
Deployability,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes. - General cleanup/optimization in NEMO solver/numerics. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1389:811,update,updated,811,https://su2code.github.io,https://github.com/su2code/SU2/pull/1389,1,['update'],['updated']
Deployability,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes. Fixes supersonic inlet BC in CNEMOEulerSolver so that it becomes operational.; Clean up NEMO supersonic outlet BC.; Clean up NEMO farfield BC.; ; ## Related Work; See associated PR to update documentation: https://github.com/su2code/su2code.github.io/pull/112. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862:255,update,update,255,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862,2,['update'],"['update', 'updated']"
Deployability,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes; Correction of indexing in NEMO axisymmetric source residual, consistent with change in perfect gas source residual in develop. . ## Related Work; Related to #1192 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1207:901,update,updated,901,https://su2code.github.io,https://github.com/su2code/SU2/pull/1207,1,['update'],['updated']
Deployability,"Simple bug that converted errors like ""duplicate MACH setting in configuration file"" to ""missing configuration file"".",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144:65,configurat,configuration,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/144,2,['configurat'],['configuration']
Deployability,Small BLAS related documentation update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/891:33,update,update,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/891,1,['update'],['update']
Deployability,Small update of the python fsi interface,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148:6,update,update,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148,1,['update'],['update']
Deployability,Small update to version numbers.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1485:6,update,update,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/1485,1,['update'],['update']
Deployability,"So I built SU2 after addressing all the problems in #991, it worked just fine with openmpi. However, I would prefer to install it with mpich since I use it for different other programs as well. The built was successful but SU2 does not run and fails with the following error. I tried it with mpich v3.3.1 as well (my previous SU2 v6.2 was running on this). ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ SU2_CFD; [arch-linux-hp-probook-g3-450:590584] *** Process received signal ***; [arch-linux-hp-probook-g3-450:590584] Signal: Segmentation fault (11); [arch-linux-hp-probook-g3-450:590584] Signal code: Address not mapped (1); [arch-linux-hp-probook-g3-450:590584] Failing at address: 0x440000e8; [arch-linux-hp-probook-g3-450:590584] [ 0] /usr/lib/libc.so.6(+0x3bd70)[0x7f6d73811d70]; [arch-linux-hp-probook-g3-450:590584] [ 1] /usr/lib/openmpi/libmpi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000:119,install,install,119,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000,1,['install'],['install']
Deployability,Some final changes for the release.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/284:27,release,release,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/284,1,['release'],['release']
Deployability,Some small changes to bring the continuous adjoint total heat flux gradient closer to finite difference result (mainly there was a missing area term in BC_isothermal). ; There may still be a problem with the continuous adjoint for maximum heat flux; modifications also include changing norm used on the max heat flux to be the same as the norm used in the output calculation for max heat flux.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/251:32,continuous,continuous,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/251,2,['continuous'],['continuous']
Deployability,Some small issues resulting from recent file restructurings and PR's are **already** fixed in #824 and can be merged with #843 and #849 (no need for anyone else to fix them). Namely:; - Updated legacy build system;; - Meson with cgns disabled;; - IDE-friendly include paths (with all the `../` required);; - Compiler warnings addressed.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/851:186,Update,Updated,186,https://su2code.github.io,https://github.com/su2code/SU2/issues/851,1,['Update'],['Updated']
Deployability,Sometimes the automated release drafter losses track of some PR's,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1850:24,release,release,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/1850,1,['release'],['release']
Deployability,"Sorry if this is a simple question. I have an error trying to compile v7.0.8 on a HPC system. To try and identify the issue, I removed most of the AD/mkl/mpi flags. I tried running:; ```; ./meson.py build -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8; ./ninja -j2 -C build install; ```. but I get the following:. ```; ninja: Entering directory `build'; [360/448] Compiling C++ object SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o ; c++ -ISU2_CFD/src/libSU2core.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -ICommon/src -I../Common/src -I/work/A/openmpi/3.0.0_intel2018u2/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -pthread -Wno-empty-body -Wno-unused-parameter -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o -MF 'SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o.d' -o SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o -c ../SU2_CFD/src/solvers/CIncNSSolver.cpp; In file included from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/C2DContainer.hpp:32:0,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/container_decorators.hpp:31,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/CConfig.hpp:47,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/CFluidModel.hpp:33,; from ../SU2_CFD/src/solvers/../../include/solvers/CSolver.hpp:43,; from ../SU2_CFD/s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134:294,install,install,294,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134,1,['install'],['install']
Deployability,Testing Release Crafter (can be ignored),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/811:8,Release,Release,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/811,1,['Release'],['Release']
Deployability,"Thank you very much for creating SU2,. I would like to know more about the drag coefficient calculation used to produce the results in Forces_breakdown.dat. May someone add a page on the SU2 website to include further details on this?. Thanks a bunch. **In general it would be great if there was a manual page for configuration options used in both compressible and incompressible flow simulations.**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/758:314,configurat,configuration,314,https://su2code.github.io,https://github.com/su2code/SU2/issues/758,1,['configurat'],['configuration']
Deployability,"The Coupled RHT-CFD Adjoint did not compare the computed gradient file to the reference file. Instead, the test case passed without file comparison. ## Proposed Changes; Added a call to run_filediff to ensure the test is run.; Moved the Coupled RHT-CFD Adjoint test in serial_regression_AD.py down to the file difference test. ## Related Work; This fixes the related issue #1431 ; The reference gradient file in the test case repo needs a small modification. See su2code/TestCases/pull/84. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1437:1155,update,updated,1155,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437,1,['update'],['updated']
Deployability,"The NACA 0012 test case (TestCases/rans/naca0012) does not converge with the provided config file if RESTART_SOL=NO, and the number of iterations is increased beyond 25. The test case should be updated to have a config file which converges ""out of the box""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/37:194,update,updated,194,https://su2code.github.io,https://github.com/su2code/SU2/issues/37,1,['update'],['updated']
Deployability,"The NELEM of the deformed mesh is incorrect. I have to pause the optimization, correct the file and then resume to run the primal solution on the new design. My mesh file is pretty big. If it is needed I can find a way to upload it. - OS: CentOS 7; - SU2 Version: branch: [turbo_output_opt](https://github.com/su2code/SU2/tree/turbo_output_opt). the branch I am working on is branched out from [feature_turbomanchinery_output](https://github.com/su2code/SU2/tree/feature_turbomanchinery_output) by @arubino . I have replaced the turbomachinery objective function TOTAL_PRESSURE_LOSS with PRESSURE_LOSS in the new single-zone output format. It is not updated with the latest develop as I ran into some conflicts when merging. It is, however, updated with SU2 7.0.1. I cannot run this optimization with the latest SU2 version. Doesn't work with turbo markers right now. If this problem has been fixed is it possible for someone to point me to the commit so I can make those changes in this branch. Thanks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/972:650,update,updated,650,https://su2code.github.io,https://github.com/su2code/SU2/issues/972,2,['update'],['updated']
Deployability,The NS continuous adjoint solver tries to load a restart even with RESTART_SOL = NO,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1477:7,continuous,continuous,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/1477,1,['continuous'],['continuous']
Deployability,"The Near-Field BC (useful for Equivalent Area based optimizations) was using the old MPI with buffering, and conservative variables instead of primitive variables. The new version has been tested using the LM1021 configuration.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/69:213,configurat,configuration,213,https://su2code.github.io,https://github.com/su2code/SU2/pull/69,1,['configurat'],['configuration']
Deployability,"The SU2 version that is listed during the config process is incorrect. Output of ./configure --enable-mpi --prefix=/apps/intel-2020.2/impi-2020.2/su2-7.0.6/ CC=mpiicc CXX=mpiicpc CXXFLAGS=""-I/apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/mkl/include -g -O2 -std=c++11"". ```; -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.2.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /tmp/jhrogers/SU2-7.0.6; Install location: 	 /apps/intel-2020.2/impi-2020.2/su2-7.0.6; Version: 6.2.0; C++ Compiler: mpiicpc; C Compiler: mpiicc. ```. OS: CentOS 7.8; Compiler/MPI: Intel 2020/impi 2020; Version: ""7.0.6"" according to the tar ball",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1072:410,Release,Release,410,https://su2code.github.io,https://github.com/su2code/SU2/issues/1072,3,"['Configurat', 'Install', 'Release']","['Configuration', 'Install', 'Release']"
Deployability,"The current CGNS mesh reader (serial, ADF format) fails when reading large grids in parallel (>100 mio cells) due to memory exhaustion issues. Updates to the underlying CGNS library are needed (to v3.4.0), and some additional improvements to the CGNS reader in SU2 are being added. . This is joint work with @MicK7 and a PR will be opened before long.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/727:143,Update,Updates,143,https://su2code.github.io,https://github.com/su2code/SU2/issues/727,1,['Update'],['Updates']
Deployability,"The default values for the marker options do not parse. It would be nice to add a ""NONE"" flag that can be parsed as not having any of that boundary type. . in config:; % Dirichlet boundary marker(s); % Type: MarkerOption Default: Marker_Dirichlet; MARKER_DIRICHLET= Marker_Dirichlet. error is:; Error in CMarkerDirichletRef::SetValue(): incorrect number of MARKER_DIRICHLET_ELEC parameters in the configuration file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/14:397,configurat,configuration,397,https://su2code.github.io,https://github.com/su2code/SU2/issues/14,1,['configurat'],['configuration']
Deployability,The interface received some modifications to clean up and update various function. The python switch has been removed.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1198:58,update,update,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/1198,1,['update'],['update']
Deployability,"The ninja build command fails with the following error: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2$ ./ninja -j4 -C build install; ninja: Entering directory `build'; [568/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags /usr/lib/openmpi/libmpi.so -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags /usr/lib/openmpi/libmpi_cxx.so /usr/lib/libopenblas.so -Wl,--end-group -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags '-Wl,-rpath,$ORIGIN/:$ORIGIN/../../externals/cgns:$ORIGIN/../../externals/metis:$ORIGIN/../../externals/parmetis:$ORIGIN/../../externals/tecio/teciompisrc:$ORIGIN/../../Common/src' -Wl,-rpath-link,/home/slimshady/UserPackages/SU2/build/SU2_CFD/src -Wl,-rpath-link,/home/slimshady/UserPackages/SU2/build/externals/cgns -Wl,-rpath-link,/home/slimshady/UserPackages/SU2/build/externals/metis -Wl,-rpath-link,/home/slimshady/UserPackages/SU2/build/externals/parmetis -Wl,-rpath-link,/home/slimshady/UserPackages/SU2/build/externals/tecio/teciompisrc -Wl,-rpath-link,/home/slimshady/UserPackages/SU2/build/Common/src; /usr/bin/ld: Common/src/libSU2Common.a(fem_geometry_structure.cpp.o): in function `CMeshFEM_DG::MetricTermsVolumeElements(CConfig*)':; fem_geometry_structure.cpp:(.text+0xdcbc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991:129,install,install,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/991,1,['install'],['install']
Deployability,"The same configurations are used to compile; ./configure CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/local/mpi3-dynamic/bin/mpicc --with-cxx=/usr/local/mpi3-dynamic/bin/mpicxx ; CGNS flag is no need to enable since the new version has already taken care of it. . A couple of issues when ran the quicktest,; 1. segmentation fault after the Begin Solver. ; 2. when using multi-cores, got multi-thread outputs. Must be something wrong with the mpi. . Does anybody else have a similar issue? Or it is just my problem. . Thanks,; Paul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/303:9,configurat,configurations,9,https://su2code.github.io,https://github.com/su2code/SU2/issues/303,1,['configurat'],['configurations']
Deployability,"The shape_optimization.py script fails when setting `OPT_OBJECTIVE= TOTAL_HEATFLUX `.; The name of the variables have apparently been changed, but this change is not reflected in files _SU2_CFD/src/output/CFlowCompOutput.cpp_ and _SU2_CFD/src/output/CFlowIncOutput.cpp_. In those files, replacing all instances of `""HEATFLUX""` with `""TOTAL_HEATFLUX""` solves the problem. ; For reference, I also run the script SU2/SU2_PY/updateHistoryMap.py after recompiling, but I am not sure if this is needed. **Desktop (please complete the following information):**; - OS: Linux (Red Hat 7.6); - C++ compiler and version: g++ 8.3.0; - MPI: mvapich 2.3.1; - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/946:421,update,updateHistoryMap,421,https://su2code.github.io,https://github.com/su2code/SU2/issues/946,1,['update'],['updateHistoryMap']
Deployability,"The word ""numerics"" applies to most of what SU2 does including time integration. For this reason, a class called CNumerics that only relates to spatial discretization is confusing. . Considering the routines which inherit from this parent class (CUpwRoe_Flow, CAvgGradCorrected_Flow, etc.), I suggest as a new name CSpatialSchemes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/81:68,integrat,integration,68,https://su2code.github.io,https://github.com/su2code/SU2/issues/81,1,['integrat'],['integration']
Deployability,"There is an issue for time accurate simulations with multi-stage time integration schemes in combination with multiple (fluid) zones. The reason is that the loop over the multiple (usually Runge-Kutta) stages takes place in the function CMultiGridIntegration::MultiGrid_Cycle, while the loop over the zones is carried out in the drivers. Hence the loop over the (Runge-Kutta) stages takes place inside the loop over the multiple zones. This is fundamentally wrong and will lead to at most 1st order accuracy in time. Hence, the sequence of these loops should be reversed. In principle there are two ways to do this, namely moving the loop over the Runge-Kutta stages up in the hierarchy, or moving the loop over the zones down. I think the former option is undesirable, because this means that all the details of the different time integration schemes must be moved to the driver, which does not improve readability (to say the least). Furthermore, it leads to serious problems when more advanced time integration schemes (with time accurate local time stepping) are employed. So therefore, in my opinion, the only practical solution is to move the loop over the zones downwards in the hierarchy. This leads to significant changes in the implementation, but does this lead to a fundamental problem for any of the applications of SU2?. Thanks,. Edwin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437:70,integrat,integration,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/437,3,['integrat'],['integration']
Deployability,"There seems to potentially be a bug with doing an unsteady dual-timestepping simulation without a provided initial condition (restart file):. When no restart file is provided, the first inner iterations have Time_Iter=0 and Cur_Time=0 (the state **before** these inner iterations). After completion of this time iteration, a file `flow_00000.vtu` and all others are outputted. These files are _not_ the initial condition as specified by the configuration file -- they seem to actually be the solution after the first time step. This can be reproduced easily in the config file I have attached to this issue (an updated version of TestCases/plunging_naca0012 for SU2 v8). The `flow_00000.vtu` file has non-uniform flowfields, which doesn't make sense. For simulations where a restart file like `restart_00000.dat` is provided, the Time_Iter=1 and Cur_Time=dt (the state **after** these inner iterations), and the subsequently outputted files have the correct time iteration appended to it. I think that for non-restart unsteady simulations, the IC should be outputted as solely just the initialization before any inner iterations are completed, Time_Iter++ and Cur_Time+=dt, and THEN inner iterations performed. [plunging_NACA0012.cfg.txt](https://github.com/user-attachments/files/16912625/plunging_NACA0012.cfg.txt). **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 22.04); - C++ compiler and version: GNU; - MPI implementation and version: MPICH; - SU2 Version: v8.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2353:441,configurat,configuration,441,https://su2code.github.io,https://github.com/su2code/SU2/issues/2353,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"They may be too high. This is certainly the case whether one runs in a dimensional or non-dimensional mode. It may be sufficiently low for one mode but marginally low for the second mode. Therefore, we suggest clipping the solution relative to the TKE and Omega freestream values such that:. TKE_LowerLimit = C_k * TKE_infinity; Omega _LowerLimit = C_w * Omega_infinity. Where C_k and C_w are constants. . The control over these constants is given to the user, However based on our 20 years of experience with the k-w models, Omega will not drop below 1E-3 * Omega_infinity (converged solution). However, in the process of convergence, it may reach lower values. Therefore, a value of . C_w = 1E-6. is reasonable. The solution of TKE is not very sensitive to C_K (assume it is sufficiently low). We recommended:. C_K = 1E-20. setting these as default values. . ## Related Work; Results of the change on convergence of VFE2 test case are presented. Two configurations of CFL adaptation were tested on both the original and modified lower limit code, ; 1. CFL_ADAPT_PARAM= ( 0.99, 1.005, 5.0, 50.0, 0.0001 ) named max CFL 50 ; 2. CFL_ADAPT_PARAM= ( 0.99, 1.05, 5.0, 200.0, 0.0001 ) named max CFL 200. ![rms Rho](https://github.com/su2code/SU2/assets/139676851/6481464c-6da3-4565-8415-d19d9ea211ab). ![rms k](https://github.com/su2code/SU2/assets/139676851/e1582ea2-f77e-4814-9eda-dd41c006aabf). we point out that beyond the change in maximum CFL, also the acceleration rate is changed. . Beyond adding robustness allowing the the use of a CFL of 200 which diverges under the original limit , the modified limit allows for better convergence of the flow and turbulence residuals for CFL of 50. Plots of the Lift and drag Coefficients are added here showing that results are not affected by the new limit, and additionally convergence is slightly quicker for the lift coefficient even with a CFL of 50 . . ![CL](https://github.com/su2code/SU2/assets/139676851/61adc0af-9449-41e8-aac7-e985ca3c9bdb); ![CD]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323:1394,configurat,configurations,1394,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323,1,['configurat'],['configurations']
Deployability,"This PR addresses the dual-time solver of NEMO. A small lack of initialization of the solutions was causing problems. ; There are also some small code clean-ups here and there. Our current regression uses regular time-stepping, not sure if its worth adding an additional case for this.; I have yet to fully test this to make sure it works properly. ## Related Work; #1391 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1533:1039,update,updated,1039,https://su2code.github.io,https://github.com/su2code/SU2/pull/1533,1,['update'],['updated']
Deployability,"This PR adds an updated doxyfile (thanks Gigi Martinelli!) and a logo directly to SU2/Common/doc. Doxygen is now set up to be run directly from that directory with. $ doxygen su2_doxyfile. and an html/ directory will be created with the output. The latest Doxygen docs for v5.0 have been generated and can be found here: http://su2.stanford.edu/doxygen/. However, we have many warnings when running doxy, and we can do a lot more to improve the documentation. We should customize further the doxyfile, update the SU2/Common/doc/docmain.hpp, and clean / improve the doxy comments throughout the code. Any volunteers to help?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/373:16,update,updated,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/373,2,['update'],"['update', 'updated']"
Deployability,"This PR contains two items:; 1. Improvements to the periodic BC. The periodic BCs are now more stable, especially in parallel.; 2. Memory clean up. The RANS solver is now entirely free of memory leaks. I recommend that everyone should run valgrind (http://valgrind.org) on their branches after integrating, in order to check for memory problems and to fix them. While all tests are passing, it is possible that you may see segfaults or other memory problems on your individual branches, now that the class destructors are all active when the code exits. Please let me know asap if you have any problems.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/294:294,integrat,integrating,294,https://su2code.github.io,https://github.com/su2code/SU2/pull/294,1,['integrat'],['integrating']
Deployability,"This PR implements the specification of a different wall function treatment per viscous wall marker. In the configuration file you do this as follows, where the default is NO_WALL_FUNCTION. % Viscous wall markers for which wall functions must be applied. (NONE = no marker); % Format: ( marker name, wall function type, ... ); MARKER_WALL_FUNCTIONS= ( airfoil, NO_WALL_FUNCTION ). You can determine the type of wall function treatment for a given marker by calling the function CConfig::GetWallFunction_Treatment. I put a dummy call in CNSSolver::BC_HeatFlux_Wall and CNSSolver::BC_Isothermal_Wall, as an example. It is the intention that the branches feature_Wall_Functions and feature_hom_wallModel merge with this version and work out the actual implementation for the FV solver and DG-FEM solver, respectively.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/435:108,configurat,configuration,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/435,1,['configurat'],['configuration']
Deployability,"This PR integrates new MKL features into SU2 to accelerate performance on Intel architectures. Changes 1) and 2) below are protected by a ""HAVE_MKL"" preprocessor flag. To observe performance improvement from change 2), the ""DIRECT_CALL_MKL_SEQ"" compiler flag must be enabled. These changes require MKL 2019 or newer, as the JIT GEMM feature is a brand new feature. 1) Integrate MKL JIT GEMM to accelerate MatrixMatrix and MatrixVector Products. ; 2) Use LAPACK DGETRF + DGETRS in place of Gaussian Elimination ILU when MKL is present. ; 3) Use memcpy in Gaussian Elimination ILU. Source/dest overlap is not a concern and this is faster. The changes improve Broadwell performance by up to 18% and Skylake performance by up to 28%. These improvements were measured on the Inviscid_ONERA_M6 tutorial. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/543:8,integrat,integrates,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/543,2,"['Integrat', 'integrat']","['Integrate', 'integrates']"
Deployability,This PR integrates the source for CGNS v3.3.0 into the SU2 distribution (in externals/cgns/*) and into the autotools build so that it is automatically compiled and linked for you (on by default).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/300:8,integrat,integrates,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/300,1,['integrat'],['integrates']
Deployability,"This PR introduces a quick fix for the output routine. It allows to print grid velocities also if the new mesh solver is used. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1412:552,update,updated,552,https://su2code.github.io,https://github.com/su2code/SU2/pull/1412,1,['update'],['updated']
Deployability,This PR introduces the last updates for the Python wrapper :. - Ability to run a SU2 computation that can interact with an external Python environment in order to exchange data (in both directions). - The code has been cleaned and comments were added. - The structure for an arbitrary MPI communicator (other than COMM_WORLD) to be passed to the Python wrapper is set but cannot be used at this time. COMM_WORLD is still used by default. - The Python wrapper is now compatible with Mac OS. PR #356 has to be closed first. Then I will push a last commit after merging with the fixed develop.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/357:28,update,updates,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/357,1,['update'],['updates']
Deployability,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/514:19,upgrade,upgrade,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/514,6,"['configurat', 'continuous', 'integrat', 'update', 'upgrade']","['configuration', 'continuous', 'integrated', 'integration', 'updated', 'upgrade']"
Deployability,This PR makes sure that the implicit decision in the axi-symmetric source term is based on the time integration of the flow and not of the turbulence.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/456:100,integrat,integration,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/456,1,['integrat'],['integration']
Deployability,"This PR simply aims to cleanup, fix dates, and remove any ""fluff"" from the test/regression cases in SU2. This will not affect the cases in the V&V folder. Its a purely maintenance pr, while I have some time to be productively unproductive. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1845:613,update,updated,613,https://su2code.github.io,https://github.com/su2code/SU2/pull/1845,1,['update'],['updated']
Deployability,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/513:559,update,updated,559,https://su2code.github.io,https://github.com/su2code/SU2/pull/513,1,['update'],['updated']
Deployability,"This change should have removed all the tabs in SU2.; Hopefully code-factor agrees with me.; ; This is a general maintenance pr. . - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1135:539,update,updated,539,https://su2code.github.io,https://github.com/su2code/SU2/pull/1135,1,['update'],['updated']
Deployability,"This fixes a bug on the single-zone direct driver, that has shown in one of my branches after I updated with develop. ## Proposed Changes; Just a minor bug fix. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/707:96,update,updated,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/707,1,['update'],['updated']
Deployability,"This implements the k-omega SST source terms for 2D axisymmetric problems in a new member function of the existing source term class (it would never be used independently of it so I did not create a new class). The extra source terms are the difference between the equations in 2D cartesian and 3D cylindrical coordinates under an assumption of axisymmetry without swirl. They are almost the same as those for Wilcox's k-omega shown in this image (taken from http://eprints.gla.ac.uk/184394/1/184394.pdf). ; ![kwcyl](https://user-images.githubusercontent.com/55834287/107506869-056e0300-6b9f-11eb-834b-f82d6b502690.png); Only the constants have been swapped for the blended ones and the changed definition of the eddy viscosity is taken into account (see [menter1994.pdf](https://github.com/su2code/SU2/files/5957873/menter1994.pdf)). Cross diffusion is the same as in 2D when assuming there is no azimuth gradient. Note that these source terms have the opposite sign (RHS) of the flow equations source terms (LHS) since the block is subtracted and not added. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. Looking into creating an axisymmetric RANS test/regression case",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1195:1468,update,updated,1468,https://su2code.github.io,https://github.com/su2code/SU2/pull/1195,1,['update'],['updated']
Deployability,"This is a SU2 user using Linux system. When simulating the a testcase of shape optimisation simulation in parallel, an error occured after the first set of DIRECT solution calculated, which is shown below:. ```; -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Aerodynamic Shape Optimization Script |; | |; -------------------------------------------------------------------------; | SU2 Project Website: https://su2code.github.io |; | |; | The SU2 Project is maintained by the SU2 Foundation |; | (http://su2foundation.org) |; -------------------------------------------------------------------------; | Copyright 2012-2022, SU2 Contributors (cf. AUTHORS.md) |; | |; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------; Found: mesh_NACA64A010_turb.su2; New Project: ./; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 50 ( 50 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 100; Requested accuracy: 1.0000000000000001e-11; Initial guess for the independent variable(s): [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:321,Release,Release,321,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['Release'],['Release']
Deployability,"This is a first complete implementation of the new CDriver and CIteration classes. More info to come soon via email assuming the tests pass. . Still to do:; - Consider moving geometry preprocessing into CDriver constructor from SU2_CFD.cpp; - Remove MeanFlowIteration() function in iteration_structure.cpp, which is still being used by CDiscAdjMeanFlowIteration->Iterate(); - Find new home for remainder of iteration_structure.cpp functions, such as grid movement (likely CMeanFlowIteration for that one, for example); - Decompose Iterate() routines for different physics to take advantage of the other CIteration() methods; - Move ""zone"" loops up out of the Iterate() methods, as CMultiZoneDriver should manage this now; - In the previous bullet, take care to correctly move the time spectral routines in iteration_structure.cpp that update all zones",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/196:835,update,update,835,https://su2code.github.io,https://github.com/su2code/SU2/pull/196,1,['update'],['update']
Deployability,"This is a pull request to merge in progress made in the NEMO solver. The goal here is keep the pull requests to reasonable sizes. As such, there may be multiple PRs to prevent this from being a monumental task. This pull request addresses some of the following:; -adoption of code structure in develop; - CommonPreproccessing, SU2 screen output, etc.; -Incorporation of Smoluchowski-Maxwell BC; -general formatting; -correcting headers and briefs; -Updated test cases. - [ x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ x] I have added a test case that demonstrates my contribution, if necessary.; - [ x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1111:449,Update,Updated,449,https://su2code.github.io,https://github.com/su2code/SU2/pull/1111,2,"['Update', 'update']","['Updated', 'updated']"
Deployability,This is a pull request to test the generation of the doxygen documentation. It is currently set up to upload the documentation (i.e. to push to the Doxygen repository) if there is a push to the master or develop branch. For any other branch or pull request it will still run the generation so that we can look for warnings etc. . The documentation will be visible here:. - develop: https://su2code.github.io/Doxygen/develop/html/index.html; - master: https://su2code.github.io/Doxygen/master/html/index.html. Eventually we will add these links (or at least the one to the master) to the website. It uses the new stages feature of travis. In the future we might also add a deployment stage for automating the release process.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/518:672,deploy,deployment,672,https://su2code.github.io,https://github.com/su2code/SU2/pull/518,2,"['deploy', 'release']","['deployment', 'release']"
Deployability,"This is a small issue I noticed when I worked on some features for the discrete adjoint driver.; In CDiscAdjFluidIteration::RegisterInput the inputs for the AD tape are registered.; At the moment if kind_recording == RECORDING::SOLUTION_AND_MESH is set it only registers the flow variables and has no difference to RECORDING::SOLUTION_VARIABLES. If I understand the logic for this enum option correctly, it should register the flow variables and the mesh coordinates from geometry. I.e. if you want to add unctions to the driver, which can evaluate derivatives w.r.t. flow and geometry in one tape evaluation, you should use this option. In addition, I change an out-of-date comment. ## Proposed Changes; Register the geometry variables as inputs in the discrete adjoint flow iteration if 'kind_recording == RECORDING::SOLUTION_AND_MESH'. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1492:1504,update,updated,1504,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492,1,['update'],['updated']
Deployability,This is just a small update of the codi/medi submodules to the newest versions.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/495:21,update,update,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/495,1,['update'],['update']
Deployability,"This is the first of a number of important changes to make way for the discrete adjoint framework. With this change, one must use CONTINUOUS_ADJOINT instead of ADJOINT in config files to run the continuous adjoint problem. Contains all necessary changes to the C++ and Python source.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/185:195,continuous,continuous,195,https://su2code.github.io,https://github.com/su2code/SU2/pull/185,1,['continuous'],['continuous']
Deployability,"This is the hybrid portion of the SU2. I haven't yet checked to make sure that my merge from `pecos-dev` into `pecos-aniso_viscosity` hasn't changed the CDP vs SU2 comparison. I can do that sometime on Thursday. The [documentation on the SVN repo](https://svn.ices.utexas.edu/repos/turbulence/docs/SU2_hybrid/) contains some information on the changes. It's a little out-of-date, but there haven't been any revolutionary changes on the implementation side of things. I mostly need to update what we've continued to implement (v2-f now supported, more outputs written to files, etc.). Side note: Valgrind shows some false positives in the MKL side of the eigenvector calculations. See [this thread on their forums](https://software.intel.com/en-us/forums/intel-math-kernel-library/topic/279131) for more information. It seems to be a nonissue.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/471:484,update,update,484,https://su2code.github.io,https://github.com/su2code/SU2/pull/471,1,['update'],['update']
Deployability,This is to facilitate the auto-generated release notes,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1963:41,release,release,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1963,1,['release'],['release']
Deployability,This makes sure DV_KIND comes before DV_PARAM when a config file is output by the python scripts. The python dict passed to update doesn't guarantee order. This issue occured when DV_KIND and DV_PARAM were not previously defined in a config file passed to shape_optimization.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/20:124,update,update,124,https://su2code.github.io,https://github.com/su2code/SU2/pull/20,1,['update'],['update']
Deployability,This makes sure DV_KIND comes before DV_PARAM when a config file is; output by the python scripts. The python dict passed to update doesn't; guarantee order. This issue occured when DV_KIND and DV_PARAM; were not previously defined in a config file passed to; shape_optimization.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/73:125,update,update,125,https://su2code.github.io,https://github.com/su2code/SU2/pull/73,1,['update'],['update']
Deployability,"This patch fix multile errors while python byte-compilling:. - TabError: inconsistent use of tabs and spaces in indentation;; - SyntaxError: invalid syntax (for 'raise' and 'print' functions). ## Proposed Changes; In some Linux distributive, e.g. Gentoo, before installation phase the python byte compile action is required for python scripts being installed. Such scripts are under `SU2/SU2_PY` directory. During **python3** byte compilation of mentioned scripts multiple TabError and SyntaxError take place.; To reproduce this errors go to the `SU2/SU2_PY` source directory and run `python -m compileall .` command. The following error messages appears:; ```; Listing '.'...; Listing './FSI'...; Compiling './FSI/FSIInterface.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSIInterface.py, line 50); Compiling './FSI/PitchPlungeAirfoilStructuralTester.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (PitchPlungeAirfoilStructuralTester.py, line 177); Listing './FSI/io'...; Compiling './FSI/io/FSI_config.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the n",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/983:5,patch,patch,5,https://su2code.github.io,https://github.com/su2code/SU2/pull/983,3,"['install', 'patch']","['installation', 'installed', 'patch']"
Deployability,"This pull request deprecates the generalized outflow adjoint. This functionality is still available in an alternate branch, however I won't be able to maintain it for future updates. ; This means that some of the regression tests had to be updated, since they previously included testing this functionality. . This pull request uses a matching branch in the TestCases repository to ease that update - the .travis.yml file will can be switched back to the TestCases/develop branch when needed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/390:174,update,updates,174,https://su2code.github.io,https://github.com/su2code/SU2/pull/390,3,['update'],"['update', 'updated', 'updates']"
Deployability,"This pull request features some improvements regarding the FFD. To be more precise:; - It is now possible to allow the FFD control points to move in an arbitrary direction. This is automatically enabled if the direction of movement in the design variable definition is set to (0.0,0.0,0.0). The set_ffd_design_var.py is updated accordingly (you can now specify the direction, default is 0.0). At the moment this is only possible for the discrete adjoint. But it could also be extended to the cont. adjoint.; - Along with this goes a refactoring of SU2_DOT to reduce code copy. Especially for the optimization of turbine blades and everything else that is not an airfoil this might be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/239:320,update,updated,320,https://su2code.github.io,https://github.com/su2code/SU2/pull/239,1,['update'],['updated']
Deployability,"This pull request fixes a segfault issue in the continuous adjoint solver initialization. Since iMarker is recycled in SetForceProj_Vector, it could be set as nMarker if no matching marker is found for a given Marker_Monitoring, which leads to an out-of-bounds access. A check on the value of iMarker has been moved from the first for loop (where it is unnecessary), to the second for loop where iMarker is recycled and the segfault occurs.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/482:48,continuous,continuous,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/482,1,['continuous'],['continuous']
Deployability,This pull request fixes the issue #319. Already includes the codi update #350. Would be better to merge the latter first though.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/351:66,update,update,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/351,1,['update'],['update']
Deployability,"This pull request includes the exact formulation of HLLC jacobians.; The implementation can deal both with ideal and real gases and moving grids too.; (The formulation for real gases is based on ""Exact jacobians for implicit Navier-Stokes simulations of equilibrium real gas flows"" Rinaldi et al, J. of Computational Physics 2014). Regression tests for HLLC scheme are expected to fail since residuals will change due to the new implementation, I will update them later as soon as I have new values. Let me know if you have any question. cheers,; Giulio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/243:452,update,update,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/243,1,['update'],['update']
Deployability,"This pull request includes:; - updates and refinement of multiple objective gradient evaluation and optimization; - per-surface evaluation of forces and moments can now be included in an optimization or gradient evaluation: this is only used when more than one objective is specified. ; - the multiobjective test case has been added back into the regressions; - FIN_DIFF_STEP can now be specified in the config file (the option was already added in the develop branch; a small modification was needed to the python code in order to use it). If this option is not specified the previous behavior is used. ; - a few minor corrections are also included; - penalty functions can now be used as a portion of the objective. The penalty function is defined as the square of the difference between the function and its constraint - this is hard-coded, but can be modified by simply changing obj_p and obj_dp in the python scripts. . A tutorial around multiobjective optimization may be added later based on the inv_wedge_ROE_multiobj.cfg case.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385:31,update,updates,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/385,1,['update'],['updates']
Deployability,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298:1133,install,installed,1133,https://su2code.github.io,https://github.com/su2code/SU2/pull/298,3,"['configurat', 'install']","['configuration', 'installed']"
Deployability,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295:454,install,installed,454,https://su2code.github.io,https://github.com/su2code/SU2/pull/295,2,['install'],"['installation', 'installed']"
Deployability,"This pull request is another in a series of pull requests to merge developments of the NEMO branch into develop without a massive PR. . This pull requests addresses:; -Fixes non-operable schemes (ROE, MSW, LAX); -AUSMPWPLUS remains functional but extremely unstable => flag to make unusable.; -Removes config->GetGamma() in with an appropriate function; -Renames 'Get' functions to 'Compute' where applicable. Somethings that are in the works/on the radar:; -Migrate toward Geometry:ToolBox functions (Remove GetBasis function); -Centralize the INDEX information; . ## Related Work; This is related to feature_NEMO and previous pull requests (#1111) . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1117:1317,update,updated,1317,https://su2code.github.io,https://github.com/su2code/SU2/pull/1117,1,['update'],['updated']
Deployability,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328:1686,update,update,1686,https://su2code.github.io,https://github.com/su2code/SU2/pull/328,1,['update'],['update']
Deployability,"This pull request replaces AdjointMPI with our own open-source library called Medipack (https://github.com/SciCompKL/MeDiPack). It covers most of the MPI standard (especially non-blocking communication, custom data types and operators), which makes it more flexible for future extensions of the MPI communication in SU2. Furthermore this updates Codi to the newest version and provides support for different taping strategies. Eventually we want to get rid of the #ifdef's for MPI, so I also started with replacing almost all MPI calls with calls to the SU2_MPI wrapper class. . I also removed the complex step datatype since I cannot make sure that it still works (and it makes no sense to maintain a forward mode and complex step ...)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473:338,update,updates,338,https://su2code.github.io,https://github.com/su2code/SU2/pull/473,1,['update'],['updates']
Deployability,"This pull requests adds a capability for multi-objective adjoint evaluation. ; In order to use this capability, a matching number of objectives and surface markers on which to evaluate those objectives, as well as weighting values for each objective must be set. This also works with the python optimization tools, where a flag (COMBINE_OBJECTIVE) determines whether the gradients will be evaluated with a single combined adjoint evaluation or with separate, sequential evaluations. . Option Syntax:; For use with shape_optimization.py:; OPT_OBJECTIVE = DRAG*1.0; LIFT*2.0 ; COMBINE_OBJECTIVE = YES; For use with continuous_adjoint, SU2_CFD, etc, or automatically set by the shape_optimization script:; OBJECTIVE = DRAG, LIFT; OBJECTIVE_WEIGHT = 1.0, -2.0; (Note: opt_objective is still effected by automatically-applied signs - that is, whatever scale is applied to lift will be *-1 to make it a maximization problem. User can now reverse that sign if desired.); In either case, MARKER_MONITORING =( drag_surface, lift_surface); If only one surface is specified, it will automatically be the surface for all objectives listed. Different objectives on different surfaces can also be applied, using lists of the same length. . This change required moving some scaling terms - which means that in one of the test cases the values changed because a scaling factor is moved within the boundary conditions rather than applied after the fact (the final gradient result is the same). In addition to allowing the adjoint for a weighted sum of objectives, this may theoretically allow for applying a numerically convenient scaling factor in the future - ie, in cases where the boundary terms are either too large or too small and cause numerical cancellation errors. . Currently limited to finite difference and continuous adjoint - discrete adjoint coming soon in a separate pull request. ; Also coming soon: an additional test case to add this capability to the regressions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/292:1803,continuous,continuous,1803,https://su2code.github.io,https://github.com/su2code/SU2/pull/292,1,['continuous'],['continuous']
Deployability,This should help with keeping the GitHub actions updated on new releases. This will also help with keeping it secure. Dependabot helps in keeping the supply chain secure https://docs.github.com/en/code-security/dependabot. GitHub actions up to date https://docs.github.com/en/code-security/dependabot/working-with-dependabot/keeping-your-actions-up-to-date-with-dependabot. https://github.com/ossf/scorecard/blob/main/docs/checks.md#dependency-update-tool; Signed-off-by: naveen <172697+naveensrinivasan@users.noreply.github.com>,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1682:49,update,updated,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/1682,3,"['release', 'update']","['releases', 'update-tool', 'updated']"
Deployability,"This suggestion is a continuation for the previous report on the topic “[Remove unnecessary null pointer checks](https://github.com/su2code/SU2/issues/26 ""Deletion of redundant pointer checks?"")”.; Would you like to wrap any pointer data members with the template class “[std::unique_ptr](https://en.wikipedia.org/wiki/Smart_pointer#unique_ptr ""Description for std::unique_ptr"")”?. Update candidates:; - [CPoint](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/dual_grid_structure.cpp#L323); - [CSysMatrix](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/matrix_structure.cpp#L70)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400:382,Update,Update,382,https://su2code.github.io,https://github.com/su2code/SU2/issues/400,1,['Update'],['Update']
Deployability,This updates some dates and version numbers not captured in the recent update to develop. #1518,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1526:5,update,updates,5,https://su2code.github.io,https://github.com/su2code/SU2/pull/1526,2,['update'],"['update', 'updates']"
Deployability,"This version works with 2D and 3D elements (TRIANGLE, RECTANGLE, TETRAHEDRON, PYRAMID, WEDGE, HEXAHEDRON). Steady is working, the unsteady capability is implemented but not working (it works in previous releases).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/43:203,release,releases,203,https://su2code.github.io,https://github.com/su2code/SU2/pull/43,1,['release'],['releases']
Deployability,Thread sanitizer tests in the CI pipeline,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2068:33,pipeline,pipeline,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/2068,1,['pipeline'],['pipeline']
Deployability,"To Whom it May Concern, . I am writing in connection with the Transitional Flat Plate Test Case and wanted to report that the tutorial available on SU2 website was not working with the current version of the code: 7.3. That is to say that after I followed the tutorial step by step without changing anything, I had the following terminal error : ""FGMRES orthogonalization failed, linear solver diverged"". I checked the source code and found a little contradiction between the configuration file of the tutorial and the implementation of the transitional model. As you can see in the configuration file, the turbulence intensity Tu is already specified in % so the factor 100 added to Tu in the code does not seem necessary. . ![configuration_file](https://user-images.githubusercontent.com/109698292/180274079-ece0c6f6-4d64-4897-8e2d-abff41d30056.png); ![code](https://user-images.githubusercontent.com/109698292/180274082-b2dbee2d-a0ea-4967-b33e-a698f61d7471.png). When I erased that factor 100 in the source code (SU2_CFD/include/numerics/turbulent/turb_sources.hpp) I was able to get the same results as displayed in the tutorial for the skin friction coefficient. . Thank you",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1719:476,configurat,configuration,476,https://su2code.github.io,https://github.com/su2code/SU2/issues/1719,2,['configurat'],['configuration']
Deployability,"To be safe for v5, we will disable the new parallel IO restart routines until we have time to test on more and larger machines (a few folks have reported issues). All of the necessary code remains in the develop branch, however, and we will be working on this heavily right after the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/364:284,release,release,284,https://su2code.github.io,https://github.com/su2code/SU2/pull/364,1,['release'],['release']
Deployability,Try to minimize the size of the folder and add an updated logo.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/63:50,update,updated,50,https://su2code.github.io,https://github.com/su2code/SU2/issues/63,1,['update'],['updated']
Deployability,U2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installi,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:6934,Install,Installing,6934,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"U2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\Users\\Danie\\Anaconda3\\envs\\vsptools\\python.exe"" ""C:\\Users\\Danie\\Documents\\SU2\\meson.py"" ""install"" ""--no-rebuild""; ninja: build stopped: subcommand failed.`. I think it might be d",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:8400,Install,Installing,8400,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,Until now we have always patched the interface.py by hand to make it run on Windows Server 2012 R2.; By issueing a PR we hope this won't be necessary in the future anymore.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/331:25,patch,patched,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/331,1,['patch'],['patched']
Deployability,Update AUTHORS.md,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1390:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1390,1,['Update'],['Update']
Deployability,Update AUTHORS.md (CHECK IF YOU ARE HERE!),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1186:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1186,1,['Update'],['Update']
Deployability,Update Area computations with the geometry toolbox,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1137:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1137,1,['Update'],['Update']
Deployability,Update Bug Report and Pull Request templates,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1612:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1612,1,['Update'],['Update']
Deployability,Update CODE_OF_CONDUCT.md,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/695:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/695,1,['Update'],['Update']
Deployability,Update CoDiPack and MeDiPack,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1049:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1049,1,['Update'],['Update']
Deployability,Update CoDiPack.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1096:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1096,1,['Update'],['Update']
Deployability,Update CoolProp to v6.5.0,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2136:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2136,1,['Update'],['Update']
Deployability,Update LUT routine,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1792:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1792,1,['Update'],['Update']
Deployability,Update MEL,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2144:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2144,1,['Update'],['Update']
Deployability,Update SU2-python 2.0,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1359:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1359,1,['Update'],['Update']
Deployability,Update Xcode,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1535:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1535,1,['Update'],['Update']
Deployability,Update Xcode and one bug fix,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/981:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/981,1,['Update'],['Update']
Deployability,Update adaptive CFL,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036,1,['Update'],['Update']
Deployability,Update arm64 regressions,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1777:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1777,2,['Update'],['Update']
Deployability,Update catch.hpp to v2.13.9,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1726:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1726,1,['Update'],['Update']
Deployability,Update codi/medi,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/495:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/495,1,['Update'],['Update']
Deployability,Update config_template.cfg,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1934:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1934,1,['Update'],['Update']
Deployability,Update driver_direct_singlezone.cpp,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/707:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/707,1,['Update'],['Update']
Deployability,Update for compatibility with TACC machines,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/227:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/227,1,['Update'],['Update']
Deployability,Update issue templates,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/647:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/647,1,['Update'],['Update']
Deployability,Update master,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1173:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1173,7,['Update'],['Update']
Deployability,Update master according to release 7.0.7,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1098:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1098,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update of CoDiPack and MeDiPack versions,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/660:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/660,1,['Update'],['Update']
Deployability,Update of Codi to the most recent version.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/350:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/350,1,['Update'],['Update']
Deployability,Update of MeDiPack.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1210:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1210,1,['Update'],['Update']
Deployability,Update of MeDiPack. Fixes issue https://github.com/su2code/SU2/issues/1209.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1210:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1210,1,['Update'],['Update']
Deployability,Update of SU2-Python 3.0,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1363:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1363,1,['Update'],['Update']
Deployability,Update of meson and ninja to most recent version,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/998:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/998,1,['Update'],['Update']
Deployability,Update of the python fsi interface and new feature coupling SU2 with Nastran,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124,1,['Update'],['Update']
Deployability,Update option_structure.hpp,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/154:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/154,1,['Update'],['Update']
Deployability,Update solver_direct_mean.cpp,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/71:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/71,1,['Update'],['Update']
Deployability,Update tests and fix windows compilation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2165:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2165,1,['Update'],['Update']
Deployability,"Update the email on the code of conduct to the su2 Foundation site. ## Proposed Changes; Just a minor change to point to the Foundation info email in the code of conduct. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/695:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/695,1,['Update'],['Update']
Deployability,Update to check convergence in elasticity adjoint problems.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/901:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/901,1,['Update'],['Update']
Deployability,Update to start volume averaging after StartWindowIteration.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2251:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2251,2,['Update'],['Update']
Deployability,Update turbomachinery testcases and regression tests,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158,1,['Update'],['Update']
Deployability,Update variable_direct_mean.cpp,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/308:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/308,2,['Update'],['Update']
Deployability,Update xcode,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1405:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1405,1,['Update'],['Update']
Deployability,Updated Adjoint variable to Continuous_Adjoint,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244:0,Update,Updated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/244,1,['Update'],['Updated']
Deployability,Updated FEA solver (steady state),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/43:0,Update,Updated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/43,1,['Update'],['Updated']
Deployability,Updated MLPCpp module supporting additional input/output scaling methods,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2369:0,Update,Updated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2369,1,['Update'],['Updated']
Deployability,Updated SU2_DEF,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/130:0,Update,Updated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/130,1,['Update'],['Updated']
Deployability,Updated Xcode projects,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/602:0,Update,Updated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/602,1,['Update'],['Updated']
Deployability,Updated binomial,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/212:0,Update,Updated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/212,1,['Update'],['Updated']
Deployability,Updates of SU2-python,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1357:0,Update,Updates,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357,1,['Update'],['Updates']
Deployability,"Updates to .travis.yml to get the tests working after the Travis CI move to Ubuntu Trusty. Script is a bit cleaner, but there were also a few important changes to fix problems related to compilers and Python packages.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/420:0,Update,Updates,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/420,1,['Update'],['Updates']
Deployability,Updates to NEMO solvers,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1111:0,Update,Updates,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1111,1,['Update'],['Updates']
Deployability,"Updates to compute_polar.py and supporting library before releasing. Added a new test case to the regressions. Thanks again for the contribution, Eran!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/361:0,Update,Updates,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/361,1,['Update'],['Updates']
Deployability,Updates to interpolation:; - Parallelized isoparametric interpolation; - Modified variable names w/in isoparametric calc for easier human-interpretation; - Introduced 'mirror' interpolation for use with Consistent & Conservative interpolation; - modified driver_structure such that structure -> fluid interpolation is defined first (which is necessary for C&C interpolation); - some code which was repeated in multiple interpolator child classes was moved to functions defined in the parent interpolator class (Determine_ArraySize and Collect_VertexInfo).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/231:0,Update,Updates,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/231,1,['Update'],['Updates']
Deployability,Updates to the Elastic mesh solver and AD-wrapped code,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:0,Update,Updates,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['Update'],['Updates']
Deployability,"Updating my Fork. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1018:883,update,updated,883,https://su2code.github.io,https://github.com/su2code/SU2/pull/1018,1,['update'],['updated']
Deployability,"Upfront: I am running a mingw-64 terminal on windows as suggested in the SUAVE build instructions. . From another thread, it was suggested to go into SU2\externals\AMGIO\su2io and try to manually build the _amgio; When I run the command 'python setup.py build_ext -c mingw32' I get the following output. . `running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; C:\Softwares\swigwin-4.0.2\swig.exe -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; creating build; creating build\temp.win-amd64-3.8; creating build\temp.win-amd64-3.8\Release; creating build\temp.win-amd64-3.8\Release\sources; creating build\temp.win-amd64-3.8\Release\sources\python3.7; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c: In function 'py_WriteMeshAndSol':; ./sources/Python3.7/amgio_py.c:628:28: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:628:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:624:28: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:624:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:614:26: warning: ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:635,Release,Release,635,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,3,['Release'],['Release']
Deployability,Upgrade external CGNS library to 4.4 release.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2179:0,Upgrade,Upgrade,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2179,2,"['Upgrade', 'release']","['Upgrade', 'release']"
Deployability,Upgrade to meson 0.61.1,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1509:0,Upgrade,Upgrade,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1509,1,['Upgrade'],['Upgrade']
Deployability,Use doxygen to keep config options updated,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/122:35,update,updated,35,https://su2code.github.io,https://github.com/su2code/SU2/issues/122,1,['update'],['updated']
Deployability,Use latest build-su2-cross Docker image for `release-management` Github Actions workflow,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1693:45,release,release-management,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/1693,1,['release'],['release-management']
Deployability,Use setuptools to install SU2 Python package and scripts into Python environment,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/463:18,install,install,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/463,1,['install'],['install']
Deployability,"Variable name change (Adjoint -> ContinuousAdjoint). There is now a clear distinction between DiscreteAdjoint variable and ContinuousAdjoint variable (booleans). I have also fixed some bugs in the I/O (tecplot and fieldview) due to the previous problem: we were using only the Adjoint boolean and the Discrete adjoint output was incorrect. An interesting bug in geometry.py has been also fixed. We must keep an eye on shape design using geometrical constraints. Because of this problem, it is not working in the master repository and current release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244:33,Continuous,ContinuousAdjoint,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/244,3,"['Continuous', 'release']","['ContinuousAdjoint', 'release']"
Deployability,"Version 4.1.0 ""Cardinal"", installed both on my own MacBook Pro and the super computer at my school. Neither can output flow solution when using more than one cores, but the restart file is written with no problem. Not quite sure why... Have to trick the code and restart it to get the solution. . Thanks,; Paul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/268:26,install,installed,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/268,1,['install'],['installed']
Deployability,"Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:1613,install,install,1613,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['install'],['install']
Deployability,"Volume Source term only this pressure drop is used. The initial value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:1239,update,update,1239,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['update'],['update']
Deployability,"We can remove the calls to SetVolume_Deformation() in between each of the updates of the surface positions for DEFORMING mode in iteration_structure.cpp.. in the case that multiple sequential surface movements are present, they should be additive (they use an increment to the position) and we should be able to call SetVolume_Deformation() just once at the end of the sequence instead.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/730:74,update,updates,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/730,1,['update'],['updates']
Deployability,"When I run config_gui.by, it goes wrong. Traceback (most recent call last):; File ""./SU2_PY/config_gui.py"", line 314, in <module>; option_data = prepare_data() ; File ""./SU2_PY/config_gui.py"", line 300, in prepare_data; option_list = parse_config(config_cpp, config_hpp); File ""/home/ubuntu/SU2/SU2_PY/parse_config.py"", line 84, in parse_config; thisval = s2.split('""')[1]; IndexError: list index out of range. When it reads an empty line, split() returns a list with one element. So the index [1] goes beyond the range. ---. My OS:; Linux ip-172-31-10-55 3.13.0-48-generic #80-Ubuntu SMP Thu Mar 12 11:16:15 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux. SU2 version:; 4.0.2. ---. p.s. Another problem is I have to install wxpython to run config_gui.py. But I think it would be better to use Tkinter which is distributed with python. So it would be helpful to run in cluster environment.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/216:710,install,install,710,https://su2code.github.io,https://github.com/su2code/SU2/issues/216,1,['install'],['install']
Deployability,"When I try to build with Metis 5 I get the following error : ; ../src/geometry_structure.cpp:4994:101: error: cannot convert 'int_' to 'idx_t_ {aka long int_}' for argument '1' to 'int METIS_PartMeshNodal(idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, real_t_, idx_t_, idx_t_, idx_t_, idx_t*)'; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);. the other problem is that you are using metis static (libmetis.a ) instead of libmetis.so (shared). that' s a problem when you try to package SU^2 for a Linux distribution like Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/19:644,patch,patch,644,https://su2code.github.io,https://github.com/su2code/SU2/issues/19,1,['patch'],['patch']
Deployability,"When compiling SU2, it appears the LAPACK can be used for some linear solver routines. There's a optional compile flag `--with-LAPACK-lib` and a `LAPACK support: no` readout. There's even a comment in the configure.ac file: `LAPACK connection added by Teus van der Stelt, 11/13/2014`. However, I can't find any code at all that uses LAPACK. At least, there aren't any sections that switch on with `HAVE_LAPACK`. Am I missing something? Was this removed at some point? Is there a branch that does have this integration?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/478:506,integrat,integration,506,https://su2code.github.io,https://github.com/su2code/SU2/issues/478,1,['integrat'],['integration']
Deployability,"When running discrete_adjoint.py (or shape_optimization.py with a discrete adjoint method) for the test case steady_inverse_design, the value of the adjoint variables at the first iterations is already O(1e-10) and after a while the following message is printed on screen:. CSysSolve::FGMRES(): system solved by initial guess. This problem does not occur when using other objective functions or a continuous adjoint method. P.S. I am using SU2 v 6.0.0.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/515:397,continuous,continuous,397,https://su2code.github.io,https://github.com/su2code/SU2/issues/515,1,['continuous'],['continuous']
Deployability,"When you finish building SU2, you are told to set both $SU2_RUN (pointing to the install path) and $SU2_HOME (pointing to the source path). However, if you install a precompiled binary, there's no source in it, and [you are told](https://su2code.github.io/docs_v7/SU2-Linux-MacOS/) to set $SU2_RUN only. Do I really need to set $SU2_HOME for using SU2 if I built it from source? What if I prefer to keep the source packed in a tarball rather than extracted? What's the use of $SU2_HOME?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/886:81,install,install,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/886,2,['install'],['install']
Deployability,"While `SU2_CFD` has been made to use binary restart files by default, the `SU2_MSH` code has not been updated to be compatible with binary restarts. If a grid adaptation strategy requires a solution (as in `GRAD_FLOW`), then `SU2_MSH` tries to read from the restart file. This is handled by `CGridAdaptation::GetFlowSolution`. If you look into the code, you'll notice that it's still set up for ASCII restart files. There's no check for binary restarts, and no ability to load a binary restart. The code tries to read the binary file as an ASCII file without complaint. A brief check on my part confirmed that ASCII restart files work with `SU2_MSH`, but binary restart files do not. This bug results in errors that are not caught by the program, as seen in Issue #606.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/610:102,update,updated,102,https://su2code.github.io,https://github.com/su2code/SU2/issues/610,1,['update'],['updated']
Deployability,"While doing some simulations with the version 6.2.0, I found a strange behaviour on the pressure field.; The test case is a naca0012 at AoA=0°, M=0.7, Re=9e6.; When running with SST turbulence model, the pressure field in the ""boundary layer region"" is not constant. Using SA turbulence model, this behaviour is not shown. It looks like the tubulent kinetic energy field affect the computation of pressure field, leading to a non zero gradient pressure at wall, as shown in the attached figures:. In the figures it can be seen a comparison between the in-house solver of the Italian Aerospace Research Center (CIRA), where SST model is implemented, and SU2 using both available turbulence models, SST and SA. The isolines represent the pressure field and the contour is the TKE field obtained with SU2 with SST. In particular, solid red line is CIRA solver, the solid black line is SU2-SST, and dashed black line is SU2-SA. Near the LE where TKE is 0, the isolines are similar and 0 pressure gradient at the wall is obtained with both turbulence models. When TKE starts to grow, the pressure computed with SU2-SST shows a non constant behaviour and at the wall has non 0 gradient. Furthermore, in the wake region the defect is more evident. Leading edge detail:; ![cp_tke_detail_Le](https://user-images.githubusercontent.com/36844965/66407922-53448b00-e9ee-11e9-877d-88ace3a222fb.png). Detail at 30% of the chord length:; ![cp_tke_detail_1](https://user-images.githubusercontent.com/36844965/66407921-53448b00-e9ee-11e9-8a22-87106066984b.png). Wake region detail:; ![cp_tke_detail_wake](https://user-images.githubusercontent.com/36844965/66407920-53448b00-e9ee-11e9-92ad-b770e0ac5743.png). Has anyone found previously this behaviour? Could it depend on the set up that I have used? . I attach the grid and configurations files.; [grid_and_conf_files.zip](https://github.com/su2code/SU2/files/3703135/grid_and_conf_files.zip). Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797:1806,configurat,configurations,1806,https://su2code.github.io,https://github.com/su2code/SU2/issues/797,1,['configurat'],['configurations']
Deployability,"While playing around with the APU turbocharger test case I observed some weird behaviour. For some specific number of cores (in my case 10 or 40 [works for 6, 8, 12, 20]), the test case fails in the pre-processing step of the geometry, and gives me the following error:. Error in ""virtual void CPhysicalGeometry::ComputeNSpan(CConfig*, short unsigned int, short unsigned int, bool)"": ; -------------------------------------------------------------------------; At the moment only turbomachinery with the same amount of span-wise section can be simulated; nSpan inflow 16, nSpan outflow 0; ------------------------------ Error Exit -------------------------------. I have the idea that this is due to the way the mesh is partitioned. But don't how to solve it. - OS: Ubuntu 16.04; - MPI implementation and version: OpenMPI 1.10.2; - SU2 Version: develop branch @ b12ec3aab87002480a56f6109a281c323a553087. Update:; Did some more testing. For the current master branch @ 284b2a5b8f74fcf2f6ff16d97f24e5b36c4bbb4d. ; The APU turbocharger runs for the 10 cores. However it gives a segmentation fault for 20 cores in the geometry prepocessing step (works for 19 and 21). For 40, 38 and 32 cores the code hangs in the geometry pre-processing at ""Compute the surface curvature.""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/749:904,Update,Update,904,https://su2code.github.io,https://github.com/su2code/SU2/issues/749,1,['Update'],['Update']
Deployability,WinError123 ：installation SU2 from source on Win10,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1048:13,install,installation,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/1048,1,['install'],['installation']
Deployability,Xcode Update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/832:6,Update,Update,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/832,1,['Update'],['Update']
Deployability,Xcode update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/750:6,update,update,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/750,1,['update'],['update']
Deployability,Y\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\S,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5604,Install,Installing,5604,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"[ issue title should say ""Python modules install to /usr/bin"" - it's not just FSI_tools ]. Building v7.5.1 on Linux (Slackware 15.0) installs three subdirectories to /usr/bin:. /usr/bin/FSI_tools/; /usr/bin/SU2/; /usr/bin/SU2_Nastran/. These appear to be Python modules. Is this install location intended? Perhaps I missed an important build step. The difficulty is that this conflicts with the Linux filesystem hierarchy: ""4.4.2: There must be no subdirectories in /usr/bin."". https://refspecs.linuxfoundation.org/FHS_3.0/fhs/ch04s04.html. ... and results in complaints when building e.g. a Slackbuild package. In any event, /usr/bin is not where Python modules belong. Minor problem, I know, but the fix is probably pretty easy: Install these modules using pip. I believe pip is supposed to know the correct place to install modules. For example, on my system, pip installs them to /usr/lib64/python<version>/site-packages, which seems to be on the default module search path. Side benefit: one can dispense with setting SU2_RUN and PYTHONPATH in ~/.bashrc. And PATH in any event, since /usr/bin should already be in the path except in rare cases. I would offer to implement this but surely there are others more familiar with meson+ninja ... but if need be, I'll give it my best shot. - JM. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Linux Slackware 15.0; - C++ compiler and version: gcc 11.2; - MPI implementation and version: mpich 4.1.2; - SU2 Version: v7.5.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2075:41,install,install,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/2075,6,"['Install', 'install']","['Install', 'install', 'installs']"
Deployability,"[//]: # (dependabot-start); ⚠️ **Dependabot is rebasing this PR** ⚠️ . Rebasing might not happen immediately, so don't worry if this takes some time. Note: if you make any changes to this PR yourself, they will take precedence over the rebase. ---. [//]: # (dependabot-end). Bumps [actions/cache](https://github.com/actions/cache) from 3 to 4.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update action to node20 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li>feat: save-always flag by <a href=""https://github.com/to-s""><code>@​to-s</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:365,Release,Release,365,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,4,"['Release', 'Update', 'release']","['Release', 'Update', 'releases']"
Deployability,"[//]: # (dependabot-start); ⚠️ **Dependabot is rebasing this PR** ⚠️ . Rebasing might not happen immediately, so don't worry if this takes some time. Note: if you make any changes to this PR yourself, they will take precedence over the rebase. ---. [//]: # (dependabot-end). Bumps [actions/upload-release-asset](https://github.com/actions/upload-release-asset) from 1.0.1 to 1.0.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-release-asset/releases"">actions/upload-release-asset's releases</a>.</em></p>; <blockquote>; <h2>Automate sliding major version number</h2>; <p>This is a minor update to make the current release have the latest code from master, and additionally allows for a new automation workflow to execute to automate the sliding of the major (v1, v2, v3, etc) version numbers for ease of referencing</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1754:297,release,release-asset,297,https://su2code.github.io,https://github.com/su2code/SU2/pull/1754,9,"['Release', 'release', 'update']","['Release', 'release', 'release-asset', 'releases', 'update']"
Deployability,"[WIP] CI pipeline test, no merging intended",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1292:9,pipeline,pipeline,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/1292,1,['pipeline'],['pipeline']
Deployability,[WIP] Improve implementation of periodicity for implicit integration,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585:57,integrat,integration,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585,1,['integrat'],['integration']
Deployability,[WIP] Update turbo interfaces,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2209:6,Update,Update,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/2209,1,['Update'],['Update']
Deployability,[WIP] pyBeam integration into SU2 as a subproject,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/902:13,integrat,integration,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/902,1,['integrat'],['integration']
Deployability,"[case728.txt](https://github.com/su2code/SU2/files/5137616/case728.txt). What does:; ```; OPT_BOUND_UPPER= 0.0001; OPT_BOUND_LOWER= -0.0001; ```; achieve?. It shows the upper and lower bounds have been read:; `Lower and upper bound for each independent variable: [(-0.0001, 0.0001), (-0.0001, 0.0001), (-0.0001, 0.0001),...`. However, the max deformation of the FFD box never satisfies this limit. I am getting way more deformations than I want. The limit is only satisfied if I specify:. `OPT_LINE_SEARCH_BOUND=0.0001`; and shown by:; ```; SU2 is fixing the planes to maintain a continuous 2nd order derivative.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.000340635.; Out-of-bounds, re-adjusting scale factor to safisfy line search limit.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.0001.; ```. What is the intended purpose of upper and lower bound options and what is the correct way to use them?. Using SU2 v6.1.0. I don't think this part of the optimization script has changed in the newer version. Config is attached.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1069:580,continuous,continuous,580,https://su2code.github.io,https://github.com/su2code/SU2/issues/1069,3,"['Update', 'continuous']","['Update', 'continuous']"
Deployability,"[sd2_case1b_ddes_v7.cfg.txt](https://github.com/su2code/SU2/files/4531160/sd2_case1b_ddes_v7.cfg.txt). Hello,. We are currently unable to restart SU2 in DDES mode from a restart file that includes time-averaged data on very large (~180 million cell) meshes. Compiled in release mode, the code gives the error ""FGMRES orthogonalization failed, linear solver diverged."". Compiled in debug mode, the code issues an assertion failure at line 1881 of $SU2_HOME/SU2_CFD/src/numerics_structure.cpp, which is a check in the CNumerics::SetRoe_Dissipation(...) method to make sure that variable 'Dissipation_j' is between zero and one. This problem only appears when attempting to restart from solution files that include ""TIME_AVERAGE"" data on very large meshes. Note the above behavior is occurring with commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 of the ""develop"" branch. . I have pulled the latest commits of develop (c093a62a2b) and master (d9c867d342), but get segfaults during Jacobian structure initialization when attempting to restart on multiple cores. All help is appreciated. -Paul. **To Reproduce**; Config file attached, but mesh file is quite large... 17.6 GB. **Desktop (please complete the following information):**; - Department of Defense Unclassified System: ""Onyx""; - System type: Cray XC40/50; - OS: Variant of SuSe Linux 12.3 and/or Cray Linux Environment; - Compiler: Intel 19.0.1.144; - MPI: cray-mpich 7.6.3; - SU2 v. 7.0.1, develop branch, commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 (and segfaults with latest commits of develop (c093a62a2b) and master (d9c867d342) ).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949:270,release,release,270,https://su2code.github.io,https://github.com/su2code/SU2/issues/949,1,['release'],['release']
Deployability,\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5333,Install,Installing,5333,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4826,Install,Installing,4826,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\User,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:8129,Install,Installing,8129,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:6667,Install,Installing,6667,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"_CFD/src/libSU2core.a(fluid_CMutationTCLib.cpp.o) has no symbols; /Library/Developer/CommandLineTools/usr/bin/ranlib: file: SU2_CFD/src/libSU2core.a(numerics_scalar_scalar_sources.cpp.o) has no symbols; [701/711] Linking target SU2_SOL/src/SU2_SOL; ld: warning: -undefined error is deprecated; ld: warning: ignoring duplicate libraries: '-lz'; [703/711] Linking target SU2_GEO/src/SU2_GEO; ld: warning: -undefined error is deprecated; ld: warning: ignoring duplicate libraries: '-lz'; [705/711] Linking target SU2_CFD/src/SU2_CFD; ld: warning: -undefined error is deprecated; ld: warning: ignoring duplicate libraries: '-lz'; [707/711] Linking target SU2_DEF/src/SU2_DEF; ld: warning: -undefined error is deprecated; ld: warning: ignoring duplicate libraries: '-lz'; [710/711] Linking target SU2_DOT/src/SU2_DOT; ld: warning: -undefined error is deprecated; ld: warning: ignoring duplicate libraries: '-lz'; [710/711] Installing files.; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Traceback (most recent call last):; File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/mesonmain.py"", line 146, in run; return options.run_func(options); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 811, in run; installer.do_install(datafilename); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 587, in do_install; self.install_targets(d, dm, destdir, fullprefix); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 730, in install_targets; file_copied = self.do_copyfile(fname, outname, makedirs=(dm, outdir)); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 458, in do_copyfile; self.copy2(from_file, to_file); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 353, in copy2; shutil.copy2(*args, **kwargs); File ""/Library/Frameworks/Python.framework/Versions/3.9/lib/pyt",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2199:1357,Install,Installing,1357,https://su2code.github.io,https://github.com/su2code/SU2/issues/2199,1,['Install'],['Installing']
Deployability,"` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/921:2234,update,updated,2234,https://su2code.github.io,https://github.com/su2code/SU2/pull/921,1,['update'],['updated']
Deployability,"` to be set properly. However, in the FEM/DG solver, the `base_nodes` is defaulted to `nullptr` and we have workarounds in the FEM/DG sovler that does not require a call to `GetNodes()` in other parts of the code (we use elements instead of nodes, so the concept of nodes is not really well-defined in the FEM/DG solver). . At the moment, the develop branch will fail at this line if anyone attempts to use the FEM/DG solver. . E.g., Taking the `hom_euler/NACA0012_5thOrder` test case in the repo gives the following error message:; ```SU2_CFD: ../SU2_CFD/src/output/../../include/solvers/CSolver.hpp:230: const CVariable* CSolver::GetNodes() const: Assertion `base_nodes!=nullptr && ""CSolver::base_nodes was not set properly, see brief for CSolver::SetBaseClassPointerToNodes()""' failed.``` at the pre-processing stage before any computation is done. Hence, a conditional operator is added to avoid this call for DG solvers. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; @vdweide and I are working on a new version of the DG solver that needs this workaround anyway. This is just added for now in case anyone else wants to work on the current version of DG solver available. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1772:2396,update,updated,2396,https://su2code.github.io,https://github.com/su2code/SU2/pull/1772,1,['update'],['updated']
Deployability,"able-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/panos/Applications/SU2; enable-autodiff : true; enable-cgns : true; enable-directdiff: true; enable-mkl : true; enable-pywrapper : true; with-mpi : enabled. Found ninja-1.10.0.git at /home/panos/Development/SU2/SU2_SRC/ninja; ```. When compiling the process fails when trying to link with the libz library:. ```; [1357/1358] Linking target SU2_PY/pySU2/_pysu2ad.so; FAILED: SU2_PY/pySU2/_pysu2ad.so; /usr/lib64/openmpi/bin/mpicxx -o SU2_PY/pySU2/_pysu2ad.so SU2_PY/pySU2/_pysu2ad.so.p/meson-generated_pySU2ad.cxx.o SU2_CFD/src/libSU2core_AD.a.p/definition_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/python_wrapper_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CFluidModel.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CIdealGas.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CPengRobinson.cpp.o SU2_CFD/sr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:1962,install,install,1962,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,2,['install'],['install']
Deployability,"ache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7651,update,update-toolkit-version,7651,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['update'],['update-toolkit-version']
Deployability,"action-required-labels/commit/5384b5bb3bf2c6b1c100a2a5821e1ddac8c38cae""><code>5384b5b</code></a> Add newline after the match token in error comments (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/55"">#55</a>)</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/e33092117bdd8c435e9b654d53726c6936f19518""><code>e330921</code></a> Only use a single comment when the action fails (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/53"">#53</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/mheap/github-action-required-labels/compare/v3...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:5874,update,updates,5874,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,2,['update'],['updates']
Deployability,"actions/upload-artifact/issues/281"">#281</a></p>; <h2>v2.3.0 Upload Artifact</h2>; <ul>; <li>Optimizations for faster uploads of larger files that are already compressed</li>; <li>Significantly improved logging when there are chunked uploads</li>; <li>Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files</li>; <li>Various other small bugfixes &amp; optimizations</li>; </ul>; <h2>v2.2.4</h2>; <ul>; <li>Retry on HTTP 500 responses from the service</li>; </ul>; <h2>v2.2.3</h2>; <ul>; <li>Fixes for proxy related issues</li>; </ul>; <h2>v2.2.2</h2>; <ul>; <li>Improved retryability and error handling</li>; </ul>; <h2>v2.2.1</h2>; <ul>; <li>Update used actions/core package to the latest version</li>; </ul>; <h2>v2.2.0</h2>; <ul>; <li>Support for artifact retention</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Add Third Party License Information</li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Use updated version of the <code>@action/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect case insensitive file uploads</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Fix for certain symlinks not correctly being identified as directories before starting uploads</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Support for uploading artifacts with multiple paths</li>; <li>Support for using exclude paths</li>; <li>Updates to dependencies</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/3cea5372237819ed00197afe530f5a7ea3e805c8""><code>3cea537</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/327"">#327</a> from actions/robherley/artifact-1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/849aa7758a428ee22be38de371b49c8bd57c4b9d""><code>8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:1833,update,updated,1833,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['update'],['updated']
Deployability,"ainst `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib64/libz.a(zutil.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status. ```; **To Reproduce**. I configured the source code with the commands:. ```; module load mkl/latest; module load mpi/openmpi-x86_64. CFLAGS=""-mtune=native -march=native -fPIC"" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/panos/Applications/SU2; enable-autodiff : true; enable-cgns : true; enable-directdiff: true; enable-mkl : true; enable-pywrapper : true; with-mpi : e",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:1234,Configurat,Configuration,1234,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['Configurat'],['Configuration']
Deployability,"al value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The Pressure-drop gradient is O(1e-5) where the others are O(1 -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:1277,Update,Update,1277,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['Update'],['Update']
Deployability,alling C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Inst,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:7203,Install,Installing,7203,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,alling SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4417,Install,Installing,4417,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"allows for a new automation workflow to execute to automate the sliding of the major (v1, v2, v3, etc) version numbers for ease of referencing</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&pr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:1418,release,release-asset,1418,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['release'],['release-asset']
Deployability,"als that the problem variables in `val` are the jacobian components calculated in the Roe and JST scheme (these are the two options I have tested). It is possible to resolve this error by simply moving the stopping of the preaccumulation region from before the call to `updateLinearSystem` in the `ComputeFlux` method of both these schemes, to after, as show below. `/*--- Update the vector and system matrix. ---*/. updateLinearSystem(iEdge, iPoint, jPoint, implicit, updateType,; updateMask, flux, jac_i, jac_j, vector, matrix);. /*--- Stop preaccumulation. ---*/. stopPreacc(flux);`. However, whilst this resolve the error in this location, the next error appears in the Giles boundary condition. Here the two jacobian components within the residual object are not recorded correctly in the preaccumulation output region also. This in `CEulerSolver.cpp:6556`. `/*--- Compute the residual using an upwind scheme ---*/; auto residual = conv_numerics->ComputeResidual(config);. /*--- Update residual value ---*/; LinSysRes.AddBlock(iPoint, residual);`. I have tried simpy adding these components as preacc outputs however they are SIMD arrays and the datatype cannot be converted using the existing implementation. . I am not sure what is going on here, or the next steps to resolve this problem. Any further assistance would be greatly appreciated, thank you :). **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [MacOS Sonoma 14.6.1]; - C++ compiler and version: [clang 14.0.3 ""Apple clang version 14.0.3 (clang-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2368:1629,Update,Update,1629,https://su2code.github.io,https://github.com/su2code/SU2/issues/2368,1,['Update'],['Update']
Deployability,"am install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:2615,install,install,2615,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,2,['install'],['install']
Deployability,"ame| Dim. value| Ref. value| Unit|Non-dim. value|; +------------------------------------------------------------------------------+; | Static Pressure| 41342.4| 1| Pa| 41342.4|; | Density| 0.499813| 1| kg/m^3| 0.499813|; | Temperature| 288.15| 1| K| 288.15|; | Total Energy| 236805| 1| m^2/s^2| 236805|; | Velocity-X| 244.973| 1| m/s| 244.973|; | Velocity-Y| 0| 1| m/s| 0|; | Velocity-Z| 4.48986| 1| m/s| 4.48986|; | Velocity Magnitude| 245.014| 1| m/s| 245.014|; +------------------------------------------------------------------------------+; | Viscosity| 1.7248e-05| 1| N.s/m^2| 1.7248e-05|; | Conductivity| -| 1| W/m^2.K| -|; | Turb. Kin. Energy| 225.119| 1| m^2/s^2| 225.119|; | Spec. Dissipation| 652349| 1| 1/s| 652349|; +------------------------------------------------------------------------------+; | Mach Number| -| -| -| 0.72|; | Reynolds Number| -| -| -| 7.1e+06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model). ----------------- Integration and Numerics Preprocessing ----------------; Integration Preprocessing.; Numerics Preprocessing. ---------------------- Python Interface Preprocessing ---------------------; Setting customized boundary conditions for zone 0. ```; ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:8646,Integrat,Integration,8646,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,2,['Integrat'],['Integration']
Deployability,"amination of the shear stress transport assumption with a low-Reynolds number k-omega model for aerodynamic flows."" Eq 17.; - Boundary conditions errors at inlets, following the Issue #1851. A fix has been proposed following @pcarruscag suggestions for the supersonic inlet BC.; - Boundary conditions definitions are different than the ones proposed in TMR. Maybe give the user the choice to use the BCs implemented in SU2 or the ones from TMR. Changes to SST model proposed:; - Inclusion of non modified versions of SST. In this case I think that more work is needed to be sure that the correct terms are taken into account everywhere in the code.; - Give the user the possibility of changing the production limiter for TKE (not essential).; - Change values of default turbulent to laminar viscosity to 1e-2 (NASA TMR reports that it should be in the range of 1e-2 to 1e-5, but in SU2 this is set to 10 as default). . I've seen the proposed changes to the lower limits of k and w in #2323 and I tried implementing it in my branch. However, if the implementation proposed in the respective PR is preferred then I will change mine. . ## Related Work; #2323 #1851 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329:2912,update,updated,2912,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329,1,['update'],['updated']
Deployability,"andle, buf);; ^; In file included from ../../../Common/lib/../src/../include/./mpi_structure.hpp:42:0,; from ../../../Common/lib/../src/../include/config_structure.hpp:41,; from ../../../Common/lib/../src/config_structure.cpp:38:; /usr/include/mpich-x86_64/mpi.h:1460:5: error: initializing argument 3 of ‘int MPI_T_pvar_write(MPI_T_pvar_session, MPI_T_pvar_handle, void*)’ [-fpermissive]; int MPI_T_pvar_write(MPI_T_pvar_session session, MPI_T_pvar_handle handle, void *buf);; ^; make[2]: *** [../src/libSU2_AD_a-config_structure.o] Error 1; make[2]: Leaving directory `/home/bu/SU2/SU2_AD/Common/lib'; make[1]: *** [all-recursive] Error 1; make[1]: Leaving directory `/home/bu/SU2/SU2_AD'; make: *** [SU2_AD] Error 2; ```; Following is the config log:; ```; checking build system type... x86_64-unknown-linux-gnu; checking host system type... x86_64-unknown-linux-gnu; checking target system type... x86_64-unknown-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /usr/bin/mkdir -p; checking for gawk... gawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpic",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:2976,install,install,2976,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['install'],['install']
Deployability,"ase 4.0.0 (<a href=""https://redirect.github.com/actions/checkout/issues/1447"">#1447</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:10865,update,updates,10865,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['update'],['updates']
Deployability,"ated. ```; ------------------------ Physical Case Definition -----------------------; Compressible RANS equations.; Turbulence model: Spalart Allmaras; Hybrid RANS/LES: No Hybrid RANS/LES; Mach number: 0.15.; Angle of attack (AoA): 10 deg, and angle of sideslip (AoS): 0 deg.; Reynolds number: 6e+06. Reference length 1.; No restart solution, use the values at infinity (freestream).; Non-Dimensional simulation (P=1.0, Rho=1.0, T=1.0 at the farfield).; The reference area is 1 m^2.; The semi-span will be computed using the max y(3D) value.; The reference length is 1 m.; Reference origin for moment evaluation is (0.25, 0, 0).; Surface(s) where the force coefficients are evaluated: airfoil. Surface(s) plotted in the output file: airfoil.; Input mesh file name: n0012_225-65.su2. ---------------------- Space Numerical Integration ----------------------; Roe (with entropy fix = 0.001) solver for the flow inviscid terms.; Standard Roe without low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping factor for the residual restriction: 0.75.; Damping factor for the correction prolongation: 0.75.; No CFL adaptation.; +-------------------------------------------+; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:2409,integrat,integration,2409,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['integrat'],['integration']
Deployability,"ation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /home/bu/SU2; Install location: 	 /home/bu/SU2; Version: 6.1.0; C++ Compiler: /usr/lib64/mpich/bin/mpicxx; C Compiler: /usr/lib64/mpich/bin/mpicc; Preprocessor flags: -DHAVE_MPI ; Compiler flags: -O3 -Wall; Linker flags: ; MPI support: yes; Metis support: yes; Parmetis support: yes; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: 	 no; LAPACK support: no; Datatype support:; double no; complex no; codi_reverse yes; codi_forward no. External includes: -DHAVE_CGNS -I$(top_srcdir)/externals/cgns -I$(top_srcdir)/externals/cgns/adf -DHAVE_PARMETIS -I$(top_srcdir)/externals/parmetis/include -DHAVE_METIS -I$(top_srcdir)/externals/metis/include ; External libs: $(top_builddir)/externals/cgns/libcgns.a $(top_builddir)/externals/parmetis/libparmetis.a $(top_builddir)/externals/metis/libmetis.a . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: no; Build SU2_DEF: no; Build SU2_SOL: no; Build SU2_GEO: no; Build Py Wrapper: no. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=""/home/bu/SU2/bin""; export SU2_HOME=""/home/bu/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:9898,update,update,9898,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,2,"['configurat', 'update']","['configuration', 'update']"
Deployability,"ave expected. . In SU2, I compute the drag force by multiplying CD with the non-dimensional factor written to the forces_breakdown file. For Paraview, I wrote a script which does the following to compute the drag force:; - Load surface flow solution for the wing surface; - Compute surface normals; - Compute Drag = -Pressure*(Normals_X * cos(AoA/180 * 3.1415) + Normals_Z * sin(AoA/180 * 3.1415)); - Integrate this over the whole wing surface to get the total drag force. You can also find this Paraview script attached.; I validated the Paraview script for multiple simple testcases, for which SU2 and Paraview gave me exactly the same drag force. When I applied it to the initial optimization geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific criteria a geometry must fulfill in order that the drag is computed correctly?. **To Reproduce**; To reproduce the drag force calculation for either the initial or the final result:; - Open ""Drag Force computation.pvsm"" in Paraview with load state. Open it with the .vtu file you want to analzye; - Read the correct AoA in the forces_breakout.dat file. Then go to ""Calculator1"" in the Paraview script and insert the correct AoA into the formula.; - Read the Paraview Drag result. The script assumes surface normal vectors pointing outwards. ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:1507,integrat,integration,1507,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['integrat'],['integration']
Deployability,"ave to bear with me, I might get some of this wrong, I am not entirely sure what is going on here so I will try and include as much information as possible. Using the tape tagging method developed by @oleburghardt in #2343 and presented at the most recent SU2 Conference, a run of the full tape reveals that a variable used in a preaccumulation output is not properly recorded. The variable is the `val` in the function `PassiveAssign` in `CSysMatrix.hpp` line 215. `FORCEINLINE static ScalarType PassiveAssign(const SrcType& val) {; return SU2_TYPE::GetValue(val);; }`. Following the call stack of the error reveals that the problem variables in `val` are the jacobian components calculated in the Roe and JST scheme (these are the two options I have tested). It is possible to resolve this error by simply moving the stopping of the preaccumulation region from before the call to `updateLinearSystem` in the `ComputeFlux` method of both these schemes, to after, as show below. `/*--- Update the vector and system matrix. ---*/. updateLinearSystem(iEdge, iPoint, jPoint, implicit, updateType,; updateMask, flux, jac_i, jac_j, vector, matrix);. /*--- Stop preaccumulation. ---*/. stopPreacc(flux);`. However, whilst this resolve the error in this location, the next error appears in the Giles boundary condition. Here the two jacobian components within the residual object are not recorded correctly in the preaccumulation output region also. This in `CEulerSolver.cpp:6556`. `/*--- Compute the residual using an upwind scheme ---*/; auto residual = conv_numerics->ComputeResidual(config);. /*--- Update residual value ---*/; LinSysRes.AddBlock(iPoint, residual);`. I have tried simpy adding these components as preacc outputs however they are SIMD arrays and the datatype cannot be converted using the existing implementation. . I am not sure what is going on here, or the next steps to resolve this problem. Any further assistance would be greatly appreciated, thank you :). **Bug report checklist*",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2368:1018,Update,Update,1018,https://su2code.github.io,https://github.com/su2code/SU2/issues/2368,1,['Update'],['Update']
Deployability,"b96cc""><code>a30777e</code></a> <a href=""https://github.com/eggyhead""><code>@​eggyhead</code></a></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/3a8048248f2f288c271830f8ecf2a1c5d8eb0e9a""><code>3a80482</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/511"">#511</a> from actions/robherley/migration-docs-typo</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/9d63e3f2f81d9dc4e13d83fc330408f8a94b79d1""><code>9d63e3f</code></a> Merge branch 'main' into robherley/migration-docs-typo</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/dfa1ab292d2fdd78d056187f11c568c16ab53de9""><code>dfa1ab2</code></a> fix typo with v3 artifact downloads in migration guide</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d00351bf698398c17253d21cf8f90e57a344e14b""><code>d00351b</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/509"">#509</a> from markmssd/patch-1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/707f5a7b71e0fb01c5df1e16e9679a3292606ef2""><code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:5379,patch,patch-,5379,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['patch'],['patch-']
Deployability,"be computed using the max y(3D) value.; The reference length is 1 m.; Reference origin for moment evaluation is (0.25, 0, 0).; Surface(s) where the force coefficients are evaluated: airfoil. Surface(s) plotted in the output file: airfoil.; Input mesh file name: n0012_225-65.su2. ---------------------- Space Numerical Integration ----------------------; Roe (with entropy fix = 0.001) solver for the flow inviscid terms.; Standard Roe without low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping factor for the residual restriction: 0.75.; Damping factor for the correction prolongation: 0.75.; No CFL adaptation.; +-------------------------------------------+; | MG Level| Presmooth|PostSmooth|CorrectSmo|; +-------------------------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; Courant-Friedrichs-Lewy number: 10; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 99999.; Reduce the density residual 10 orders of magnitude.; The minimum bound for the density residual ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:2903,Integrat,Integration,2903,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['Integrat'],['Integration']
Deployability,"bin/SU2/eval/design.py"", line 380, in obj_df; grad = su2grad(this_obj,grad_method,config,state); File ""/usr/local/bin/SU2/eval/gradients.py"", line 96, in gradient; grads = adjoint( func_name, config, state ); File ""/usr/local/bin/SU2/eval/gradients.py"", line 294, in adjoint; info = su2run.adjoint(konfig); File ""/usr/local/bin/SU2/run/adjoint.py"", line 79, in adjoint; SU2_CFD(konfig); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2/SU2-7.0.4/test1/DESIGNS/DSN_001/ADJOINT_DRAG/,; Command = /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD config_CFD_AD.cfg; SU2 process returned error '127'; /bin/sh: 1: /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD: not found; ```; So I tried to build AD under the instruction. I copied the exact same thing and pasted to the command. The error is:. ```; Checking the status of submodules; =====================================================================; Found an old or unspecified version of CoDiPack in externals/codi.; Use -u to reset module.; ```; However, when I try to update/reinstall the codi, I failed in the extraction process. The error is:; ```; Checking the status of submodules; =====================================================================. git command failed (either git is not installed or this is not a git repository). Using fall-back method to initialize submodule CoDiPack. Initializing CoDiPack 'bd4a639c2fe625a80946c8365bd2976a2868cf46'; =====================================================================; Downloading module from https://github.com/scicompkl/CoDiPack; Extracting archive ...; Extraction of module CoDiPack failed. See preconf.err for more information.; ```; So how can I build the SU2_CFD_AD and run the shape_optimization.py? Thank you very much. All the direct solutions can work well.; My SU2 version is 7.0.4 under Linux system.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:3335,update,update,3335,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,2,"['install', 'update']","['installed', 'update']"
Deployability,bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Dani,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3435,Install,Installing,3435,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bi,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4660,Install,Installing,4660,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"ble */; ^; ../externals/cgns/hdf5/H5Dchunk.c: In function 'H5D__chunk_copy_cb':; ../externals/cgns/hdf5/H5Dchunk.c:6081:75: warning: passing argument 3 of 'H5O_copy_expand_ref' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]; if (H5O_copy_expand_ref(udata->file_src, udata->tid_src, udata->dt_src, buf, nbytes,; ~~~~~^~~~~~~~; In file included from ../externals/cgns/hdf5/H5Dprivate.h:25,; from ../externals/cgns/hdf5/H5Dpkg.h:30,; from ../externals/cgns/hdf5/H5Dchunk.c:55:; ../externals/cgns/hdf5/H5Oprivate.h:997:74: note: expected 'H5T_t *' {aka 'struct H5T_t *'} but argument is of type 'const H5T_t *' {aka 'const struct H5T_t *'}; H5_DLL herr_t H5O_copy_expand_ref(H5F_t *file_src, hid_t tid_src, H5T_t *dt_src, void *buf_src,; ~~~~~~~^~~~~~; [50/903] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5C.c.obj; ninja: build stopped: subcommand failed.; PS C:\su2code-SU2-09ba9e3> python ninja.exe -C C:\su2code-SU2-09ba9e3\build install; SyntaxError: Non-UTF-8 code starting with '\x90' in file C:\su2code-SU2-09ba9e3\ninja.exe on line 1, but no encoding declared; see https://peps.python.org/pep-0263/ for details; PS C:\su2code-SU2-09ba9e3> python ninja.exe -C C:\su2code-SU2-09ba9e3\build install; SyntaxError: Non-UTF-8 code starting with '\x90' in file C:\su2code-SU2-09ba9e3\ninja.exe on line 1, but no encoding declared; see https://peps.python.org/pep-0263/ for details; PS C:\su2code-SU2-09ba9e3> ninja.exe -C C:\su2code-SU2-09ba9e3\build install; ninja: Entering directory `C:\su2code-SU2-09ba9e3\build'; [1/854] Linking target externals/cgns/hdf5/H5make_libsettings.exe; FAILED: externals/cgns/hdf5/H5make_libsettings.exe; ""gcc"" -o externals/cgns/hdf5/H5make_libsettings.exe externals/cgns/hdf5/H5make_libsettings.exe.p/H5make_libsettings.c.obj ""-Wl,--allow-shlib-undefined"" ""-Wl,-O1"" ""-Wl,--start-group"" ""-lz"" ""-lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi"" ""-Wl,--subsystem,console"" ""-lkernel32"" ""-luser32"" ""-lgdi32"" ""-lwinspool"" ""-ls",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1982:4812,install,install,4812,https://su2code.github.io,https://github.com/su2code/SU2/issues/1982,1,['install'],['install']
Deployability,"blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:8618,release,release,8618,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['release'],['release']
Deployability,"c3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:5149,update,updates,5149,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['update'],['updates']
Deployability,"ca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CF",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5532,integrat,integration,5532,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,cannot find cngstypes.h and cngsconfig.h files during installation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1629:54,install,installation,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/1629,1,['install'],['installation']
Deployability,"code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1436"">actions/checkout#1436</a></li>; <li><a href=""https://github.com/simonbaird""><code>@​simonbaird</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1067"">actions/checkout#1067</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v3...v4.0.0"">https://github.com/actions/checkout/compare/v3...v4.0.0</a></p>; <h2>v3.6.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Mark test scripts with Bash'isms to be run via Bash by <a href=""https://github.com/dscho""><code>@​dscho</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1377"">actions/checkout#1377</a></li>; <li>Add option to fetch tags even if fetch-depth &gt; 0 by <a href=""https://github.com/RobertWieczoreck""><code>@​RobertWieczoreck</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/579"">actions/checkout#579</a></li>; <li>Release 3.6.0 by <a href=""https://github.com/luketomlinson""><code>@​luketomlinson</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1437"">actions/checkout#1437</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/RobertWieczoreck""><code>@​RobertWieczoreck</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/579"">actions/checkout#579</a></li>; <li><a href=""https://github.com/luketomlinson""><code>@​luketomlinson</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1437"">actions/checkout#1437</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v3.5.3...v3.6.0"">https://github.com/actions/checkout/compare/v3.5.3...v3.6.0</a></p>; <h2>v3.5.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Fix: Checkout Issue in self hosted runner due to faulty submodule check-ins by <a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:2034,Release,Release,2034,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Release'],['Release']
Deployability,"codeql-cli/v2.16.2/ruby/ql/src"">source</a>)</li>; <li><code>codeql/ruby-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/ruby/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/ruby/ql/lib"">source</a>)</li>; <li><code>codeql/swift-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/src"">source</a>)</li>; <li><code>codeql/swift-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/lib"">source</a>)</li>; </ul>; <h2>CodeQL Bundle v2.16.1</h2>; <p>Bundles CodeQL CLI v2.16.1</p>; <ul>; <li>(<a href=""https://github.com/github/codeql-cli-binaries/blob/HEAD/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql-cli-binaries/releases/tag/v2.16.1"">release</a>)</li>; </ul>; <p>Includes the following CodeQL language packs from <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.1""><code>github/codeql@codeql-cli/v2.16.1</code></a>:</p>; <ul>; <li><code>codeql/cpp-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.1/cpp/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.1/cpp/ql/src"">source</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/github/codeql-action/blob/main/CHANGELOG.md"">github/codeql-action's changelog</a>.</em></p>; <blockquote>; <h2>3.24.6 - 29 Feb 2024</h2>; <p>No user facing changes.</p>; <h2>3.24.5 - 23 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.3. <a href=""https://redirect.github.com/github/codeql-action/pull/2156"">#2156</a></li>; </ul>;",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:9200,release,releases,9200,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['release'],['releases']
Deployability,"codeql-cli/v2.16.3/ruby/ql/src"">source</a>)</li>; <li><code>codeql/ruby-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/ruby/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/ruby/ql/lib"">source</a>)</li>; <li><code>codeql/swift-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/swift/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/swift/ql/src"">source</a>)</li>; <li><code>codeql/swift-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/swift/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/swift/ql/lib"">source</a>)</li>; </ul>; <h2>CodeQL Bundle v2.16.2</h2>; <p>Bundles CodeQL CLI v2.16.2</p>; <ul>; <li>(<a href=""https://github.com/github/codeql-cli-binaries/blob/HEAD/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql-cli-binaries/releases/tag/v2.16.2"">release</a>)</li>; </ul>; <p>Includes the following CodeQL language packs from <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2""><code>github/codeql@codeql-cli/v2.16.2</code></a>:</p>; <ul>; <li><code>codeql/cpp-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/src"">source</a>)</li>; <li><code>codeql/cpp-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/lib"">source</a>)</li>; <li><code>codeql/csharp-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/csharp/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/csharp/ql/src"">source</a>)</li>; <li><code>codeql/csharp-all</code> (<a hr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:4848,release,releases,4848,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['release'],['releases']
Deployability,"cogs.com/gif.latex?%5Ctau_w%3Dc_f%5Cfrac%7B1%7D%7B2%7D%5Crho%20V_%5Cinfty%5E2).; We found this possible problem while doing a run on a NACA0012 airfoil.; The problem found is that the skin friction coefficient along the airfoil is too high compared to the theory.; The grid has 257 nodes on the airfoil, and it has been downloaded from the NASA website (https://turbmodels.larc.nasa.gov/naca0012_grids.html).; The solved equations are the RANS with the SST turbulence model, in compressible regime. M=0.1, Re=1e6, TU=10%, mut/mu=0.001; The run is dimensional.; ![ImmaginiSU2-1](https://user-images.githubusercontent.com/53580993/96976601-5688b700-151c-11eb-8a72-ed0e0ff340dc.png); In this figure ""Rough Wall 1"" is the case of tau wall computed with the current version.; ""Rough Wall 2"" is the case of tau wall computed after this modification.; The chosen k+ is 4 because, considering the Wilcox paper ""Formulation of the k-w Turbulence Model Revisited, AIAA Journal, Vol. 46, No. 11, November 2008"", the smooth wall has k+ < 5.; Moreover, the order of magnitude of omega wall is O(1e9). In case of the ""Rough Wall 1"" it is of O(1e6), while in case of ""Rough Wall 2"" it is of O(1e9).; We don't know if the problem is somewhere else, but changing the computation of the tau wall it seems to be fixed.; We hope this could be useful. Authors: TAARG (Theoretical and Applied Aerodynamic Research Group), University of Naples Federico II.; Ettore Saetta, Lorenzo Russo, Renato Tognaccini, Benedetto Mele. ## Related Work; #877 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1097:2221,update,updated,2221,https://su2code.github.io,https://github.com/su2code/SU2/pull/1097,1,['update'],['updated']
Deployability,"com/actions/upload-artifact/issues/509"">#509</a> from markmssd/patch-1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/707f5a7b71e0fb01c5df1e16e9679a3292606ef2""><code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6335,update,updates,6335,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['update'],['updates']
Deployability,"compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:11385,upgrade,upgrade,11385,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,3,['upgrade'],['upgrade']
Deployability,"concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi,. I am currently using SU2 to do some test cases for AIAA 1st Stability and Control Workshop. These cases need to run with a fixed-Cl as the DPW6 cases did. When I tried to use the knobs “FIXED_CL_MODE= YES” and “TARGET_CL= 0.50” in the .cfg input file to run these cases, the Cl change always got some odd significant jumps even though the AoA change was quite small and then the computations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % psf = lbf/ft^2, Density = slug/ft^3,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:1017,configurat,configuration,1017,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['configurat'],['configuration']
Deployability,"copy_expand_ref(udata->file_src, udata->tid_src, udata->dt_src, buf, nbytes,; ~~~~~^~~~~~~~; In file included from ../externals/cgns/hdf5/H5Dprivate.h:25,; from ../externals/cgns/hdf5/H5Dpkg.h:30,; from ../externals/cgns/hdf5/H5Dchunk.c:55:; ../externals/cgns/hdf5/H5Oprivate.h:997:74: note: expected 'H5T_t *' {aka 'struct H5T_t *'} but argument is of type 'const H5T_t *' {aka 'const struct H5T_t *'}; H5_DLL herr_t H5O_copy_expand_ref(H5F_t *file_src, hid_t tid_src, H5T_t *dt_src, void *buf_src,; ~~~~~~~^~~~~~; [50/903] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5C.c.obj; ninja: build stopped: subcommand failed.; PS C:\su2code-SU2-09ba9e3> python ninja.exe -C C:\su2code-SU2-09ba9e3\build install; SyntaxError: Non-UTF-8 code starting with '\x90' in file C:\su2code-SU2-09ba9e3\ninja.exe on line 1, but no encoding declared; see https://peps.python.org/pep-0263/ for details; PS C:\su2code-SU2-09ba9e3> python ninja.exe -C C:\su2code-SU2-09ba9e3\build install; SyntaxError: Non-UTF-8 code starting with '\x90' in file C:\su2code-SU2-09ba9e3\ninja.exe on line 1, but no encoding declared; see https://peps.python.org/pep-0263/ for details; PS C:\su2code-SU2-09ba9e3> ninja.exe -C C:\su2code-SU2-09ba9e3\build install; ninja: Entering directory `C:\su2code-SU2-09ba9e3\build'; [1/854] Linking target externals/cgns/hdf5/H5make_libsettings.exe; FAILED: externals/cgns/hdf5/H5make_libsettings.exe; ""gcc"" -o externals/cgns/hdf5/H5make_libsettings.exe externals/cgns/hdf5/H5make_libsettings.exe.p/H5make_libsettings.c.obj ""-Wl,--allow-shlib-undefined"" ""-Wl,-O1"" ""-Wl,--start-group"" ""-lz"" ""-lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi"" ""-Wl,--subsystem,console"" ""-lkernel32"" ""-luser32"" ""-lgdi32"" ""-lwinspool"" ""-lshell32"" ""-lole32"" ""-loleaut32"" ""-luuid"" ""-lcomdlg32"" ""-ladvapi32"" ""-Wl,--end-group""; C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; collect2.exe:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1982:5075,install,install,5075,https://su2code.github.io,https://github.com/su2code/SU2/issues/1982,1,['install'],['install']
Deployability,"corresponding to different operating cases) can coupled with other solvers and tools, to perform coupled aero-structural shape optimisation. . The framework initialises MPI and assigns processors to the different solvers and tools as required. The SU2 instances are initialised and controlled through Python, and given a communicator for the relevant subset of the MPI processes. . **Issue**; Shape optimisation with SU2 (using discrete adjoints) require four operations at each major optimisation iteration:. 1. `SU2_DEF`: Deform the mesh according to the new design variables (or _design deformations_, in contrast to e.g. the _structural deformations_ in an aeroelastic analysis), and output the deformed mesh to file,; 2. `SU2_CFD`: Update the primal solution, which may include a mesh deformation due to structural deformations in an aeroelastic analysis, and output the converged state to file,; 3. `SU2_CFD_AD`: Update the discrete adjoint solution corresponding to the converged primal solution, once for each objective function of interest, and output the converged adjoints to file,; 4. `SU2_DOT_AD`: Calculate the surface sensititivities from the discrete adjoint solution (from what I can gather, this step is required in the discrete-adjoint sensitivity analysis to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:1012,Update,Update,1012,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['Update'],['Update']
Deployability,cuments\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5426,Install,Installing,5426,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"d 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -I/home/FDa/FDa045/programs/intel/2020_update4/mkl/include -I../externals/codi/include -I../externals/medi/include -I../externals/medi/src -ICommon/src -I../Common/src -I/work/A/openmpi/3.0.0_intel2018u2/include -pipe ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:1724,install,install,1724,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,1,['install'],['install']
Deployability,"d `WALL_TIME` is supposed to hold the . > Current average wall-clock time for one iteration. as per the documentation and dry-run output. However, the screen and history outputs of this field do not seem to actually represent this value. The screen-output of the 0th inner iteration of each time-iteration seems to represent the accumulated WCT since the last output (or restart file) was written. What the screen- and history-output of other inner iterations within a timestep mean is not obvious. See attached discussion for more details. **Expected behaviour**; During transient simulations the `WALL_TIME` history output should either be the average WCT for one time-iteration or the accumulated WCT since simulation start.; The screen output of `WALL_TIME ` should either be the average WCT for a time-iteration ( thus the same for all inner iterations ) or (better) correctly compute the average WCT of one inner iteration. **To Reproduce**; See attached mesh and config, but any transient simulation with activated WALL_TIME and implicit time integration should do.; [MeshAndConfig.zip](https://github.com/su2code/SU2/files/8034224/MeshAndConfig.zip). **Desktop (please complete the following information):**; - OS: SLES 15; - C++ compiler and version: icpc (intel 19.0.5.281); - MPI implementation and version: intelMPI 2019; - SU2 Version: 7.3.0 (master/develop). <div type='discussions-op-text'>. <sup>Originally posted by **ChristianBauerEng** February 8, 2022</sup>; Hi All!. I'm currently running transient, 2D axisymmetric simulations of an oscillating resonator. For now I'm still in the validation and testing phase, but the results look promising!. However, I've noticed that solver performance (as in Time/Iteration) seems to degrade over runtime, so I wanted to measure that by including `WALL_TIME` in screen and history output. I still have trouble understanding the outputs, though. The screen output looks like this:. > +-------------------------------------; > | Time_Iter| Inn",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1542:1167,integrat,integration,1167,https://su2code.github.io,https://github.com/su2code/SU2/issues/1542,1,['integrat'],['integration']
Deployability,"d non-dimensionalization is more readible this way. Furthermore the convergence history uses the same table class. Let me know what you think. Any comments are appreciated. ```; ------------------------ Physical Case Definition -----------------------; Compressible RANS equations.; Turbulence model: Spalart Allmaras; Hybrid RANS/LES: No Hybrid RANS/LES; Mach number: 0.15.; Angle of attack (AoA): 10 deg, and angle of sideslip (AoS): 0 deg.; Reynolds number: 6e+06. Reference length 1.; No restart solution, use the values at infinity (freestream).; Non-Dimensional simulation (P=1.0, Rho=1.0, T=1.0 at the farfield).; The reference area is 1 m^2.; The semi-span will be computed using the max y(3D) value.; The reference length is 1 m.; Reference origin for moment evaluation is (0.25, 0, 0).; Surface(s) where the force coefficients are evaluated: airfoil. Surface(s) plotted in the output file: airfoil.; Input mesh file name: n0012_225-65.su2. ---------------------- Space Numerical Integration ----------------------; Roe (with entropy fix = 0.001) solver for the flow inviscid terms.; Standard Roe without low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:2244,Integrat,Integration,2244,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['Integrat'],['Integration']
Deployability,"d on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please join the discussion [here](https://github.com/orgs/community/discussions/29534) in the official GitHub community!. #### I have another question / how do I get in touch?; Please join the discussion [here](https://github.com/orgs/community/discussions/29534) to ask further questions and send us suggestions!. </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:4391,integrat,integrated,4391,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['integrat'],['integrated']
Deployability,"d pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:2369,configurat,configuration,2369,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['configurat'],['configuration']
Deployability,"d"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.1/cpp/ql/src"">source</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/github/codeql-action/blob/main/CHANGELOG.md"">github/codeql-action's changelog</a>.</em></p>; <blockquote>; <h2>3.24.6 - 29 Feb 2024</h2>; <p>No user facing changes.</p>; <h2>3.24.5 - 23 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.3. <a href=""https://redirect.github.com/github/codeql-action/pull/2156"">#2156</a></li>; </ul>; <h2>3.24.4 - 21 Feb 2024</h2>; <ul>; <li>Fix an issue where an existing, but empty, <code>/sys/fs/cgroup/cpuset.cpus</code> file always resulted in a single-threaded run. <a href=""https://redirect.github.com/github/codeql-action/pull/2151"">#2151</a></li>; </ul>; <h2>3.24.3 - 15 Feb 2024</h2>; <ul>; <li>Fix an issue where the CodeQL Action would fail to load a configuration specified by the <code>config</code> input to the <code>init</code> Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2147"">#2147</a></li>; </ul>; <h2>3.24.2 - 15 Feb 2024</h2>; <ul>; <li>Enable improved multi-threaded performance on larger runners for GitHub Enterprise Server users. This feature is already available to GitHub.com users. <a href=""https://redirect.github.com/github/codeql-action/pull/2141"">#2141</a></li>; </ul>; <h2>3.24.1 - 13 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.2. <a href=""https://redirect.github.com/github/codeql-action/pull/2124"">#2124</a></li>; <li>The CodeQL action no longer fails if it can't write to the telemetry api endpoint. <a href=""https://redirect.github.com/github/codeql-action/pull/2121"">#2121</a></li>; </ul>; <h2>3.24.0 - 02 Feb 2024</h2>; <ul>; <li>CodeQL Python analysis will no longer install dependencies on GitHub Enterprise Server, as is already the case for GitHub.com. See <a href=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:10556,configurat,configuration,10556,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['configurat'],['configuration']
Deployability,"d68184-2d20-4a93-abb2-0b6fd361846e); ![image](https://github.com/su2code/SU2/assets/50565314/57a76a0b-d8a2-4da7-b1e8-ddee848e7062); ![image](https://github.com/su2code/SU2/assets/50565314/afd310db-3aa2-48e3-813b-c20b198df8fe); ![image](https://github.com/su2code/SU2/assets/50565314/4863963a-533c-4e6b-8e45-c632e571704c). ## Validation Case. Validation analysis is conducted for the [hypersonic flat plate](https://turbmodels.larc.nasa.gov/ZPGflatplateSS_val.html). Two different wall temperature(T_w/T_free = 1.090 and T_w/T_free = 2.725) results are presented and compared with simulation results of ANSYS Fluent. . The CC of Fluent and Wilcox is almost same, but they have different coefficients(Wilcox : ![image](https://github.com/su2code/SU2/assets/50565314/a9e69d6e-7ad2-4752-8aa8-0dfe718306ce) / Fluent : ![image](https://github.com/su2code/SU2/assets/50565314/e2786d93-f933-424e-bd23-171ba1fa0347)). So, The results show a similar behavior to the Fluent results. ; ![image](https://github.com/su2code/SU2/assets/50565314/711274f0-ab32-4281-bc72-168445f24766); ![image](https://github.com/su2code/SU2/assets/50565314/9d8a39a2-423f-4ca1-b209-cbe613a9d76c). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2271:3687,update,updated,3687,https://su2code.github.io,https://github.com/su2code/SU2/pull/2271,1,['update'],['updated']
Deployability,"d` ant `ninja.exe build install` , but it can't compile with ` py .\meson.py build -Dwith-mpi=enabled`. the error message :; ```; Version: 0.61.1; Source dir: F:\suflow\code\Su-FVMu-Solver; Build dir: F:\suflow\code\Su-FVMu-Solver\build; Build type: native build; Project name: SU2; Project version: 7.5.1 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\zeng\AppData\Local\Programs\Python\Python37\python.exe); WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.platlibdir"" option.; WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.purelibdir"" option.; Found pkg-config: C:\Program Files\mingw-w64\bin\pkg-config.EXE (0.26); mpicc found: NO; Run-time dependency MPI for c found: YES; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig, config-tool and system). meson.build:61:2: ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system. A full log can be found at F:\suflow\code\Su-FVMu-Solver\build\meson-logs\meson-log.txt; ```. meson-log.txt: ; [meson-log.txt](https://github.com/su2code/SU2/files/12427739/meson-log.txt). **Bug report checklist**. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Windows/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desk",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:1094,install,installed,1094,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,1,['install'],['installed']
Deployability,"dary condition, which is implemented in the `CEulerSolver.cpp`, the `Inflow_Mach_old` returned is 0.0, causing the computation of the updated pressure to be incorrect. In practice, this drives the pressure lower and lower until it becomes negative. To find this, I added debug statements to `SU2_CFD/src/solvers/CEulerSolver.cpp` where the FAN_FACE_MACH BC logic is to iterate on the outflow pressure. . // cout << endl << ""PRINTING DEBUG INFO FOR FAN_FACE_MACH"" << endl;; // cout << ""Rank = "" << rank << endl;; // cout << ""Kind_Engine_Inflow = "" << Kind_Engine_Inflow << endl;; // cout << ""Target_Inflow_Mach = "" << Target_Inflow_Mach << endl;; // cout << ""Inflow_Pressure_old = "" << Inflow_Pressure_old << endl;; // cout << ""Inflow_Mach_old = "" << Inflow_Mach_old << endl;; // cout << ""Inflow_Pressure_inc = "" << Inflow_Pressure_inc << endl;; // cout << ""Inflow_Pressure = "" << Inflow_Pressure << endl;. which resulted in the output:. PRINTING DEBUG INFO FOR FAN_FACE_MACH; Rank = 1; Kind_Engine_Inflow = 1; Target_Inflow_Mach = 0.64; Inflow_Pressure_old = 2.36396; Inflow_Mach_old = 0; ... So it seems the main issue is that in the `config` the `Inflow_Mach` quantity is never getting updated. I _believe_ this should happen in `src/solvers/CEulerSolver.cpp` starting at line 2855 `if (Engine) { ... ` . Here, a call to `config->SetInflow_Mach(iMarker_Inlet, Inlet_Mach_Total[iMarker_Inlet]);` is completely missing. I'm not familiar with the code base, so I'm not sure if it is supposed to be updated elsewhere. However, inserting that line appears to fix the problem and the above logic around FAN_FACE_MACH begins working as expected. **Reproduce**; Perhaps the only thing about my problem worth mentioning is it is ran as axisymmetric. I'm running RANS, with the SST model. . **Desktop (please complete the following information):**; - OS: [e.g., Linux (Centos 7)]; - C++ compiler and version: [g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 4.0.1]; - SU2 Version: [v7.3.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1607:1292,update,updated,1292,https://su2code.github.io,https://github.com/su2code/SU2/issues/1607,2,['update'],['updated']
Deployability,"date README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:10487,upgrade,upgrade,10487,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,3,['upgrade'],['upgrade']
Deployability,"dentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the next set of similar error messages appears. This patch fix such `TabError`, `SyntaxError` (for `raise` and `print` functions), replace some indent tabs with spaces (generally with 8 spaces) before comments, remove trailing spaces where needed. Please fix this small issue as resulting patch to fix it for distributive build script is rather huge (~ 100 Kb). Many changes are in `SU2_PY/FSI/FSIInterface.py` and the `Split` mode of github change preview is more suitable to compare and to recheck the correctness of new indentation (or via Meld application). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my cont",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/983:2049,patch,patch,2049,https://su2code.github.io,https://github.com/su2code/SU2/pull/983,1,['patch'],['patch']
Deployability,"direct.github.com/github/codeql-action/pull/2079"">#2079</a></li>; </ul>; <h2>3.23.0 - 08 Jan 2024</h2>; <ul>; <li>We are rolling out a feature in January 2024 that will disable Python dependency installation by default for all users. This improves the speed of analysis while having only a very minor impact on results. You can override this behavior by setting <code>CODEQL_ACTION_DISABLE_PYTHON_DEPENDENCY_INSTALLATION=false</code> in your workflow, however we plan to remove this ability in future versions of the CodeQL Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2031"">#2031</a></li>; <li>The CodeQL Action now requires CodeQL version 2.11.6 or later. For more information, see <a href=""https://github.com/github/codeql-action/blob/main/#2227---16-nov-2023"">the corresponding changelog entry for CodeQL Action version 2.22.7</a>. <a href=""https://redirect.github.com/github/codeql-action/pull/2009"">#2009</a></li>; </ul>; <h2>3.22.12 - 22 Dec 2023</h2>; <ul>; <li>Update default CodeQL bundle version to 2.15.5. <a href=""https://redirect.github.com/github/codeql-action/pull/2047"">#2047</a></li>; </ul>; <h2>3.22.11 - 13 Dec 2023</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/github/codeql-action/commit/66c3cec3e84942c64294dd8ea34532318b12a14e""><code>66c3cec</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/36f1104e11cf100d92d694d3df5330397e1a1a2d""><code>36f1104</code></a> Bump the npm group with 5 updates</li>; <li><a href=""https://github.com/github/codeql-action/commit/905ae4af531685eaee37e94f46845bf4c420dc62""><code>905ae4a</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2163"">#2163</a> from github/mergeback/v3.24.5-to-main-47b3d888</li>; <li><a href=""https://github.com/github/codeql-action/commit/6dab9f2356bef6518153087116230299a4ee671",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:13585,Update,Update,13585,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['Update'],['Update']
Deployability,djoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5782,Install,Installing,5782,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"dy detailed in #591. I added a table output class for structuring screen output. As a first step I used it for the preprocessing output, but it will eventually be also used in the new output structure that follows soon. I am pretty sure there are more places where a table can be helpful for readability, but we can make these changes as we go. Note: the convergence output is not affected yet!. The class is added in a folder called ""Common/toolboxes"". My intention is that in the future we will add there more small helper tools/classes, which are essentially independent of the rest of the code. . Below you find an example output of the current preprocessing:. ```. ---------------------- Space Numerical Integration ----------------------; Jameson-Schmidt-Turkel scheme (2nd order in space) for the flow inviscid terms.; JST viscous coefficients (2nd & 4th): 0.5, 0.02.; The method includes a grid stretching correction (p = 0.3).; Scalar upwind solver for the turbulence model.; First order integration in space.; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. ----------",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:1074,integrat,integration,1074,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['integrat'],['integration']
Deployability,"e bug**; When creating a CDriver instance, for example through the Python wrapper, with an MPI communicator which is defined only on a subset of the processes on which the MPI library was initialised, SU2 will deadlock. This seems to be because most of the MPI communication and synchronisation operations in SU2 explicitly refer to the global `MPI_COMM_WORLD`. The issue arose when attempting to control several Euler/RANS SU2 `CSinglezoneDriver` and `CDiscAdjSinglezoneDriver` instances in parallel (i.e. simultaneously) within a larger optimisation code, which provides each analysis with a subset of the ranks in its own MPI communicator. Naively replacing _all_ references to `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` throughout the code (except where it is defined, and where it is used to initialise the MPI wrapper in the SU2_XXX.cpp files) prevents the deadlock and results in the desired behaviour. However, I imagine that this ""fix"" may well cause all sorts of issues outside of my own, limited use case. **To Reproduce**; The issue can be reproduced with any SU2_CFD configuration file and mesh, run in parallel using the Python wrapper as follows: ; ```; from mpi4py import MPI; import pysu2 # or pysu2ad. filename = 'example.cfg'; zones = 1. rank = MPI.COMM_WORLD.Get_rank(); size = MPI.COMM_WORLD.Get_size(). group = MPI.COMM_WORLD.group.Excl([0]) # exclude the first rank; comm = MPI.COMM_WORLD.Create_group(group). if comm: # is False only on the excluded rank; print(""Running SU2 on global rank {} of {} ... "".format(rank, size)). # create SU2 instance -- will hang during Geometry preprocessing; instance = pysu2.CSinglezoneDriver(filename, zones, comm). else:; print(""Doing nothing on global rank {} of {} ... "".format(rank, size)). ```. **Desktop (please complete the following information):**; - OS: Redhat 7.7; - C++ compiler and version: g++ (GCC) 4.8.5; - MPI implementation and version: MPICH 3.2.1; - SU2 Version: 7.0.2 ""Blackbird"" (looks to be reproducible on 7.1.0 also)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1179:1093,configurat,configuration,1093,https://su2code.github.io,https://github.com/su2code/SU2/issues/1179,1,['configurat'],['configuration']
Deployability,e-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3689,Install,Installing,3689,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"e> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/ruby/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/ruby/ql/lib"">source</a>)</li>; <li><code>codeql/swift-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/src"">source</a>)</li>; <li><code>codeql/swift-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/lib"">source</a>)</li>; </ul>; <h2>CodeQL Bundle v2.16.1</h2>; <p>Bundles CodeQL CLI v2.16.1</p>; <ul>; <li>(<a href=""https://github.com/github/codeql-cli-binaries/blob/HEAD/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql-cli-binaries/releases/tag/v2.16.1"">release</a>)</li>; </ul>; <p>Includes the following CodeQL language packs from <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.1""><code>github/codeql@codeql-cli/v2.16.1</code></a>:</p>; <ul>; <li><code>codeql/cpp-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.1/cpp/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.1/cpp/ql/src"">source</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/github/codeql-action/blob/main/CHANGELOG.md"">github/codeql-action's changelog</a>.</em></p>; <blockquote>; <h2>3.24.6 - 29 Feb 2024</h2>; <p>No user facing changes.</p>; <h2>3.24.5 - 23 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.3. <a href=""https://redirect.github.com/github/codeql-action/pull/2156"">#2156</a></li>; </ul>; <h2>3.24.4 - 21 Feb 2024</h2>; <ul>; <li>Fix an issue where an existing, but e",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:9222,release,release,9222,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['release'],['release']
Deployability,"e> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/ruby/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/ruby/ql/lib"">source</a>)</li>; <li><code>codeql/swift-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/swift/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/swift/ql/src"">source</a>)</li>; <li><code>codeql/swift-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/swift/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/swift/ql/lib"">source</a>)</li>; </ul>; <h2>CodeQL Bundle v2.16.2</h2>; <p>Bundles CodeQL CLI v2.16.2</p>; <ul>; <li>(<a href=""https://github.com/github/codeql-cli-binaries/blob/HEAD/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql-cli-binaries/releases/tag/v2.16.2"">release</a>)</li>; </ul>; <p>Includes the following CodeQL language packs from <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2""><code>github/codeql@codeql-cli/v2.16.2</code></a>:</p>; <ul>; <li><code>codeql/cpp-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/src"">source</a>)</li>; <li><code>codeql/cpp-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/lib"">source</a>)</li>; <li><code>codeql/csharp-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/csharp/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/csharp/ql/src"">source</a>)</li>; <li><code>codeql/csharp-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/csharp/ql/lib/CHAN",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:4870,release,release,4870,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['release'],['release']
Deployability,"e></a></li>; </ul>; <h2>v3.3.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1045"">Implement branch list using callbacks from exec function</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1050"">Add in explicit reference to private checkout options</a></li>; <li>[Fix comment typos (that got added in <a href=""https://redirect.github.com/actions/checkout/issues/770"">#770</a>)](<a href=""https://redirect.github.com/actions/checkout/pull/1057"">actions/checkout#1057</a>)</li>; </ul>; <h2>v3.2.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/942"">Add GitHub Action to perform release</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/967"">Fix status badge</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1002"">Replace datadog/squid with ubuntu/squid Docker image</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/964"">Wrap pipeline commands for submoduleForeach in quotes</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1029"">Update <code>@​actions/io</code> to 1.1.2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1039"">Upgrading version to 3.2.0</a></li>; </ul>; <h2>v3.1.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/939"">Use <code>@​actions/core</code> <code>saveState</code> and <code>getState</code></a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/922"">Add <code>github-server-url</code> input</a></li>; </ul>; <h2>v3.0.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/770"">Add input <code>set-safe-directory</code></a></li>; </ul>; <h2>v3.0.1</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac""><code>3df4ab1</code></a> Release 4.0.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:8828,pipeline,pipeline,8828,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['pipeline'],['pipeline']
Deployability,e\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\b,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4744,Install,Installing,4744,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,e\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py t,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4914,Install,Installing,4914,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"earch group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:2574,integrat,integrated,2574,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['integrat'],['integrated']
Deployability,"earest neighbor which will lead to wrong results. . This PR introduces a small modification to the MatchPeriodic routine that will allow nodes on the axis to map onto themselves. . ## Related Work. As a test, consider the dummy geometry below. The domain is periodic about the Z-axis. I added a wall BC in the middle of the domain and the flow is supposed to separate at that point. This case is not very realistic but the main idea was to have periodic boundaries with points on the axis of rotation. The domain and the boundary conditions are similar to what we typically have when solving turbine blades. I wasn't sure if I can share the geometry, so I made this dummy test case. This case diverges with the develop branch. The image is from an intermediate result using the fix.; ![sample_test_case_fix](https://user-images.githubusercontent.com/28007882/70721921-b4425500-1cf6-11ea-829c-7d91ca8bb1ef.jpeg). A quick way to verify if the nodes are matched properly is to check the velocity on the nodes that lie on the axis of rotation. Due to the periodicity constraint, the velocities must be aligned with the axis (here the Z-axis) which can be seen here as well. ![vel](https://user-images.githubusercontent.com/28007882/70722647-eef8bd00-1cf7-11ea-9b25-971f9718e151.jpeg). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/840:2309,update,updated,2309,https://su2code.github.io,https://github.com/su2code/SU2/pull/840,1,['update'],['updated']
Deployability,"eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:1996,release,release-asset,1996,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,6,"['Update', 'release']","['Update', 'release-asset']"
Deployability,"ect.github.com/actions/download-artifact/pull/178"">Bump <code>@​actions/core</code> to 1.10.0</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/download-artifact/commit/c850b930e6ba138125429b7e5c93fc707a7f8427""><code>c850b93</code></a> Merge pull request <a href=""https://redirect.github.com/actions/download-artifact/issues/307"">#307</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/download-artifact/commit/6fd111f15ace90c9fbd0d73880db8338a776aaed""><code>6fd111f</code></a> update <code>@​actions/artifact</code></li>; <li><a href=""https://github.com/actions/download-artifact/commit/87c55149d96e628cc2ef7e6fc2aab372015aec85""><code>87c5514</code></a> Merge pull request <a href=""https://redirect.github.com/actions/download-artifact/issues/303"">#303</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/download-artifact/commit/47f9ce604fdcae5583e5ef84048eeb7ef2893652""><code>47f9ce6</code></a> update <code>@​actions/artifact</code></li>; <li><a href=""https://github.com/actions/download-artifact/commit/127824d34cb0da7dc3cb064a37ae280b7c09aca6""><code>127824d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/download-artifact/issues/299"">#299</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/download-artifact/commit/6dd49bff0a6150b47d41011c034b762053acaf6f""><code>6dd49bf</code></a> licensed only artifact</li>; <li><a href=""https://github.com/actions/download-artifact/commit/f71c0e3da3bb6b4fcc53196b9ac75ee981db5bc6""><code>f71c0e3</code></a> Revert &quot;licensed&quot;</li>; <li><a href=""https://github.com/actions/download-artifact/commit/7c63dfde29f42bb9cb0f61b67e54c91106a6586e""><code>7c63dfd</code></a> licensed</li>; <li><a href=""https://github.com/actions/download-artifact/commit/67d37cd34678091933f0a88cd1bb026171ea20d2""><code>67d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-ar",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:3403,update,update,3403,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['update'],['update']
Deployability,"ect.github.com/actions/upload-artifact/issues/351"">#351</a></li>; </ul>; <h2>v3.1.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump <code>@​actions/artifact</code> to v1.1.0 (<a href=""https://redirect.github.com/actions/upload-artifact/pull/327"">actions/upload-artifact#327</a>); <ul>; <li>Adds checksum headers on artifact upload (<a href=""https://redirect.github.com/actions/toolkit/pull/1095"">actions/toolkit#1095</a>) (<a href=""https://redirect.github.com/actions/toolkit/pull/1063"">actions/toolkit#1063</a>)</li>; </ul>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/5d5d22a31266ced268874388b861e4b58bb5c2f3""><code>5d5d22a</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/515"">#515</a> from actions/eggyhead/update-artifact-v2.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/f1e993d9663a03508e7fc0370c744c4b963f0044""><code>f1e993d</code></a> update artifact license</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/4881bfd3f27855c63733d8cfff17721cc0ad611f""><code>4881bfd</code></a> updating dist:</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/a30777e2653648a0a7bbd3efb5c96ef9131b96cc""><code>a30777e</code></a> <a href=""https://github.com/eggyhead""><code>@​eggyhead</code></a></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/3a8048248f2f288c271830f8ecf2a1c5d8eb0e9a""><code>3a80482</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/511"">#511</a> from actions/robherley/migration-docs-typo</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/9d63e3f2f81d9dc4e13d83fc330408f8a94b79d1""><code>9d63e3f</code></a> Merge branch 'main' into robherley/migration-docs-typo</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/dfa1ab292d2fdd78d056187f11c568c16ab53de9""><code>dfa1ab2</code",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:4089,update,update,4089,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['update'],['update']
Deployability,"ef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15581,update,updates,15581,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['update'],['updates']
Deployability,"ef=""https://redirect.github.com/actions/setup-python/issues/723"">#723</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/f6cc428f535856f9c23558d01765a42a4d6cf758""><code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=""https://redirect.github.com/actions/setup-python/issues/724"">#724</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060""><code>5f2af21</code></a> Add GraalPy support (<a href=""https://redirect.github.com/actions/setup-python/issues/694"">#694</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/setup-python/compare/v4...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:7698,update,updates,7698,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['update'],['updates']
Deployability,"ehensive set of V&V cases for SU2 that can showcase it's performance in comparison to other solvers. . I think the the [NASA TMR website](https://turbmodels.larc.nasa.gov/index.html) is a good model to base it on. The idea would be to present the V&V case, provide working configuration and mesh files, and provide results comparing performance to other solvers and to higher fidelity data (when available). This allows people to see the performance of SU2 and replicate it, if need be. . The first step would be compiling a list of cases that should be covered. The [SU2 2014 SciTech paper](https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf) would be a good starting point as it already had a couple of validation cases. This list can be bolstered with some of the NASA TMR cases, and with grid convergence studies. I would like to propose an initial list that the community can talk through and make changes as we see fit. I am mostly only familiar with canonical CFD flows that are used in these cases. But it would be great to have other cases, such as Turbo-machinary or FSI cases, that show the full breadth of SU2's abilities. This is by no means an exhaustive list:. 1. Zero Gradient Flat Plate; 2. 2D and 3D Bump in Channel; 3. Asymmetric Diffuser; 4. Backward facing step; 5. Unsteady Square cylinder; 6. NACA0012; 7. NACA4412 Trailing Edge Seperation; 8. Joukowski Airfoil; 9. 30P30N High Lift airfoil; 10. ONERAM6 Wing; 11. NASA CRM; 12. Subsonic and Supersonic Jets. It would be ideal for these test cases to have either high-fidelity data (wind tunnel tests, or LES/DNS data), and/or published results of other solvers so that comparisons can be made. . I also want to point out the difference between this and the TestCases repository. The TestCases repo is used in regression tests to ensure that parts of the code don't break when changes are made. This is more a test of SU2's fidelity. It would feature large grids and configuration files that can be run to convergence.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581:2088,configurat,configuration,2088,https://su2code.github.io,https://github.com/su2code/SU2/issues/581,1,['configurat'],['configuration']
Deployability,"els (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing properties of said multicomp flow). That PR is built upon #1223 but will merge this PR (once it is done) and throw out all additional changes in order to be merged into develop without relying on feature_flamelet. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330:2988,update,updated,2988,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330,1,['update'],['updated']
Deployability,"ementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Notes; As indicated, this is work in progress. The code compiles and runs with a test case but is far from being clean. Side effects in non-flamelet simulations might occur.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223:2309,update,updated,2309,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223,1,['update'],['updated']
Deployability,"ence over the rebase. ---. [//]: # (dependabot-end). Bumps [actions/upload-release-asset](https://github.com/actions/upload-release-asset) from 1.0.1 to 1.0.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-release-asset/releases"">actions/upload-release-asset's releases</a>.</em></p>; <blockquote>; <h2>Automate sliding major version number</h2>; <p>This is a minor update to make the current release have the latest code from master, and additionally allows for a new automation workflow to execute to automate the sliding of the major (v1, v2, v3, etc) version numbers for ease of referencing</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1754:1174,release,release-asset,1174,https://su2code.github.io,https://github.com/su2code/SU2/pull/1754,1,['release'],['release-asset']
Deployability,"ent for make and is used to execute the compiler and to resolve dependencies. Meson uses ninja as the default backend. So instead of using configure + make, we use meson + ninja. As with meson, we can ship it as a submodule. It needs a compilation, but again it has no dependencies apart from python. ### How to use ?; The correct meson and ninja versions are added as git submodules. So in case you don't have meson and ninja installed (there should be packages available for all major distros), compile ninja using:. ```; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; and run meson using; ```; meson.py build --prefix=$PWD -Denable-pywrapper=true -Denable-autodiff=true; ```; to ocnfigure SU2 with the python wrapper and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Additional notes; - Meson requires python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:1957,configurat,configuration,1957,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['configurat'],['configuration']
Deployability,"ent to 2° = approx doubling of the lift coefficient; - [x] ~~gust + moving grid --> plausibility check by comparison with farfield onflow condition from above~~; - [x] ~~new python interface for grid movement update --> plausibility check with a) sudden jump in heave velocity w, b) sinusoidal velocity w at different frequencies to observe influence of unsteady aerodynamics (phase shift and reduction of resulting lift)~~; - [x] mesh deformation via python interface --> plausibility check with sinusoidal displacement z, scaled and shifted by 90° to correspond to velocity w from above, leads to same results; - [ ] ~~mesh deformation + moving grid --> differences with respect to farfield onflow condition / does NOT lead to same results as above. The grid velocities look right though, both on the temporary screen output and when plotting them by slicing through the volume results, but the amplitude of the lift coefficient is too small. I guess that the velocities are not set properly / mixed up / require a call to some update function or similar. **I'm stuck at this point. Does someone have any idea what I'm doing wrong?? I feel that I am missing an important step here...**~~; - [ ] ~~final test: mesh deformation + moving grid + gust~~; - [x] final test: mesh deformation + gust. Apart from the steps above, the following questions / tasks remain:; - [ ] ~~The the Split Velocity Method (classes SetWind_GustField and CSourceWindGust) is not used in SU2 as far a I understand and for all gust types, the inputs are zero. Instead, the Field Velocity Method is used, but when trying to remove the functions SetWindGust and SetWindGustDer, I broke the code elsewhere. In order to enable 3D meshes, I simply set the outputs to zero for now. I believe that we should clean up the code, but my C++ skills are the limiting factor here, so I need some help with that.~~ --> In a new, dedicated pull request. ## Related Work; The gust encounter for 3D meshes was requested in #1319 and in the Fo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:2931,update,update,2931,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,1,['update'],['update']
Deployability,"epts in Aeronautics at Tech. Inst. of Aeronautics. |; -------------------------------------------------------------------------; | Copyright 2012-2018, Francisco D. Palacios, Thomas D. Economon, |; | Tim Albring, and the SU2 contributors. |; | |; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /home/bu/SU2; Install location: 	 /home/bu/SU2; Version: 6.1.0; C++ Compiler: /usr/lib64/mpich/bin/mpicxx; C Compiler: /usr/lib64/mpich/bin/mpicc; Preprocessor flags: -DHAVE_MPI ; Compiler flags: -O3 -Wall; Linker flags: ; MPI support: yes; Metis support: yes; Parmetis support: yes; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: 	 no; LAPACK support: no; Datatype support:; double no; complex no; codi_reverse yes; codi_forward no. External includes: -DHAVE_CGNS -I$(top_srcdir)/externals/cgns -I$(top_srcdir)/externals/cgns/adf -DHAVE_PARMETIS -I$(top_srcdir)/externals/parmetis/include -DHAVE_METIS -I$(top_srcdir)/externals/metis/include ; External libs: $(top_builddir)/externals/cgns/libcgns.a $(top_builddir)/externals/parmetis/libparmetis.a $(top_builddir)/externals/metis/libmetis.a . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: no; Build SU2_DEF: no; Bui",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:8756,Configurat,Configuration,8756,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['Configurat'],['Configuration']
Deployability,"er and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Additional notes; - Meson requires python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major advantage: we can now properly use ccache and the caching feature of travis (that means only files that have changed will be compiled if a cache is available). This should speed up the runs by a lot. . - automake and meson can coexist without any problems. Maybe we can keep this compatibility for version 7 and remove it later if we all agree. Also the preconfigure.py should not be necessary anymore then. - (unit) tests can be easily added and integrated into the build process. - I will add a proper documentation soon. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #685 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any qu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:2742,install,installed,2742,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['install'],['installed']
Deployability,"es &amp; optimizations</li>; </ul>; <h2>v2.2.4</h2>; <ul>; <li>Retry on HTTP 500 responses from the service</li>; </ul>; <h2>v2.2.3</h2>; <ul>; <li>Fixes for proxy related issues</li>; </ul>; <h2>v2.2.2</h2>; <ul>; <li>Improved retryability and error handling</li>; </ul>; <h2>v2.2.1</h2>; <ul>; <li>Update used actions/core package to the latest version</li>; </ul>; <h2>v2.2.0</h2>; <ul>; <li>Support for artifact retention</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Add Third Party License Information</li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Use updated version of the <code>@action/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect case insensitive file uploads</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Fix for certain symlinks not correctly being identified as directories before starting uploads</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Support for uploading artifacts with multiple paths</li>; <li>Support for using exclude paths</li>; <li>Updates to dependencies</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/3cea5372237819ed00197afe530f5a7ea3e805c8""><code>3cea537</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/327"">#327</a> from actions/robherley/artifact-1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/849aa7758a428ee22be38de371b49c8bd57c4b9d""><code>849aa77</code></a> nvm use 12 &amp; npm run release</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/4d3986961d0423ba9a593efb490a2960eb65f43b""><code>4d39869</code></a> recompile with correct ncc version</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2e0d362ec5cf81e334dda822c49c96dcd4b7df2c""><code>2e0d362</code></a> bump <code>@​actions/artifact</code> to 1.1.0</li>; <li><a href=""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:2307,Update,Updates,2307,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['Update'],['Updates']
Deployability,"es/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot comman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:1876,release,release-asset,1876,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,6,"['release', 'update']","['release-asset', 'update']"
Deployability,"est case are presented. Two configurations of CFL adaptation were tested on both the original and modified lower limit code, ; 1. CFL_ADAPT_PARAM= ( 0.99, 1.005, 5.0, 50.0, 0.0001 ) named max CFL 50 ; 2. CFL_ADAPT_PARAM= ( 0.99, 1.05, 5.0, 200.0, 0.0001 ) named max CFL 200. ![rms Rho](https://github.com/su2code/SU2/assets/139676851/6481464c-6da3-4565-8415-d19d9ea211ab). ![rms k](https://github.com/su2code/SU2/assets/139676851/e1582ea2-f77e-4814-9eda-dd41c006aabf). we point out that beyond the change in maximum CFL, also the acceleration rate is changed. . Beyond adding robustness allowing the the use of a CFL of 200 which diverges under the original limit , the modified limit allows for better convergence of the flow and turbulence residuals for CFL of 50. Plots of the Lift and drag Coefficients are added here showing that results are not affected by the new limit, and additionally convergence is slightly quicker for the lift coefficient even with a CFL of 50 . . ![CL](https://github.com/su2code/SU2/assets/139676851/61adc0af-9449-41e8-aac7-e985ca3c9bdb); ![CD](https://github.com/su2code/SU2/assets/139676851/17b877df-7eff-47d4-9a77-95e3ccd2afcd). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323:3274,update,updated,3274,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323,1,['update'],['updated']
Deployability,"etails>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/4e9ef4ce8c697cf55716ecbf7f13a3d9e0b6ac6a""><code>4e9ef4c</code></a> Automatic compilation</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/18f57d781fe045548933f7465750a46e9994f1fd""><code>18f57d7</code></a> Allow labels to be provided one per line in input</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/1b8424df557fae55fef867af22d5d0625fe6742f""><code>1b8424d</code></a> Update README to v5</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/418d9eb4e79b6ba0ec64538e261b3e87c946f8ba""><code>418d9eb</code></a> Support running multiple instances without collision (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/54"">#54</a>)</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/ae0422e63fb7b70f0adcc7c0e40882c7dcf0f84d""><code>ae0422e</code></a> Update GH Action versions</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/ef663c01940ab85ef6d576ecbf82f6bd46c29ce5""><code>ef663c0</code></a> Run CI on PRs from forks</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/0b719abe3b9b0890d9806348507d9e704fc39643""><code>0b719ab</code></a> npm run lint:fix</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/65d195bf4a9b738e8f2a9c540d0cc182bb80df72""><code>65d195b</code></a> Add <code>labels</code> output which will contain all the matching/intersecting labels i...</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/5384b5bb3bf2c6b1c100a2a5821e1ddac8c38cae""><code>5384b5b</code></a> Add newline after the match token in error comments (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/55"">#55</a>)</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:4200,Update,Update,4200,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,2,['Update'],['Update']
Deployability,"ew</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:7612,upgrade,upgrade,7612,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,3,['upgrade'],['upgrade']
Deployability,"ewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:3096,integrat,integration,3096,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,"f so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special via a boolean vector and know how to access via a hash table (for example). **Alternatives**; We could make the storage continuous by using a memory pool i.e. allocate outside the class and give the class a pointer to its memory location. This is still not truly contiguous as the pointers the class holds are variables themselves and so they would still be separated (albeit by a smaller huge distance), thus the amount of overhead would still inf",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:7064,update,updated,7064,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['update'],['updated']
Deployability,"f=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automer",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9415,Update,Update,9415,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Update'],['Update']
Deployability,"fPIC -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -MD -MQ UnitTests/test_driver.p/test_driver.cpp.o -MF UnitTests/test_driver.p/test_driver.cpp.o.d -o UnitTests/test_driver.p/test_driver.cpp.o -c ../UnitTests/test_driver.cpp; In file included from /usr/include/signal.h:328,; from ../externals/catch2/catch.hpp:7955,; from ../UnitTests/test_driver.cpp:32:; ../externals/catch2/catch.hpp:10735:58: error: call to non-‘constexpr’ function ‘long int sysconf(int)’; 10735 | static constexpr std::size_t sigStackSize = 32768 >= MINSIGSTKSZ ? 32768 : MINSIGSTKSZ;; | ^~~~~~~~~~~; In file included from /usr/include/x86_64-linux-gnu/bits/sigstksz.h:24,; from /usr/include/signal.h:328,; from ../externals/catch2/catch.hpp:7955,; from ../UnitTests/test_driver.cpp:32:; /usr/include/unistd.h:640:17: note: ‘long int sysconf(int)’ declared here; 640 | extern long int sysconf (int __name) __THROW;; | ^~~~~~~; In file included from ../UnitTests/test_driver.cpp:32:; ../externals/catch2/catch.hpp:10794:45: error: size of array ‘altStackMem’ is not an integral constant-expression; 10794 | char FatalConditionHandler::altStackMem[sigStackSize] = {};; | ^~~~~~~~~~~~; ```. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; In my case, this issue occurred when I upgraded my kubuntu version to 22.04; some info:; https://github.com/catchorg/Catch2/issues/2178; https://github.com/catchorg/Catch2/issues/2421. **Desktop (please complete the following information):. Project version: 7.3.1 ""Blackbird""; C compiler for the host machine: /usr/bin/mpicc.mpich (gcc 11.2.0 ""gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0""); C linker for the host machine: /usr/bin/mpicc.mpich ld.bfd 2.38; C++ compiler for the host machine: /usr/bin/mpicxx.mpich (gcc 11.2.0 ""g++ (Ubuntu 11.2.0-19ubuntu1) 11.2.0""); C++ linker for the host machine: /usr/bin/mpicxx.mpich ld.bfd 2.38",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1724:2963,upgrade,upgraded,2963,https://su2code.github.io,https://github.com/su2code/SU2/issues/1724,1,['upgrade'],['upgraded']
Deployability,"ffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x0000000",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5808,integrat,integration,5808,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,first release of the turbomachinery capabilities,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:6,release,release,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,1,['release'],['release']
Deployability,fix axisym source term + update regression cases,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1366:25,update,update,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/1366,1,['update'],['update']
Deployability,"fixed set functions for NEMO axisymmetric, implemented auxvargrad correction in nemo axisymmetric source residual, fixed fluid model/transport model print statement. Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes; This PR addresses an issue found with not setting primitive and conservative variables in computing the axisymmetric source residual, as well as implementing the auxvargrad indexing correction applied in the standard air axisymmetric source residual and fixing an issue with printing the fluid and transport models. . ## Related Work; This PR is related to #1192 and #1162. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1205:1276,update,updated,1276,https://su2code.github.io,https://github.com/su2code/SU2/pull/1205,1,['update'],['updated']
Deployability,"flows); SIDESLIP_ANGLE= 1.0; %; % Free-stream temperature (518.67 R by default); FREESTREAM_TEMPERATURE= 559.67; %; % Reynolds number (non-dimensional, based on the free-stream values); REYNOLDS_NUMBER= 260025.6363; %REYNOLDS_NUMBER= 4260000; %; % Reynolds length (1 in by default); REYNOLDS_LENGTH= 1.0; % Compressible flow non-dimensionalization (DIMENSIONAL, FREESTREAM_PRESS_EQ_ONE,; % FREESTREAM_VEL_EQ_MACH, FREESTREAM_VEL_EQ_ONE); REF_DIMENSIONALIZATION= FREESTREAM_VEL_EQ_MACH. % ----------------------------- CL DRIVER DEFINITION ---------------------------%; %; % Activate fixed lift mode (specify a CL instead of AoA, NO/YES); FIXED_CL_MODE= YES; %; % Target coefficient of lift for fixed lift mode (0.80 by default); TARGET_CL= 0.5; %; % Estimation of dCL/dAlpha (0.2 per degree by default); DCL_DALPHA= 0.3; %; % Maximum number of iterations between AoA updates; UPDATE_AOA_ITER_LIMIT= 200; %; % Number of iterations to evaluate dCL_dAlpha by using finite differences (500 by default); ITER_DCL_DALPHA= 500; %; % ---------------------- REFERENCE VALUE DEFINITION ---------------------------%; %; % Reference origin for moment computation (in); REF_ORIGIN_MOMENT_X = 78.759; REF_ORIGIN_MOMENT_Y = 0.0; REF_ORIGIN_MOMENT_Z = 10.570; %; % Reference length for pitching, rolling, and yawing non-dimensional; % moment (in); REF_LENGTH= 16.383; %; % Reference area for force coefficients (0 implies automatic; % calculation) (in^2); REF_AREA= 2098.39; %; % Aircraft semi-span (0 implies automatic calculation) (m or in); SEMI_SPAN= 68.71; %; % -------------------- BOUNDARY CONDITION DEFINITION --------------------------%; %; % Navier-Stokes wall boundary marker(s) (NONE = no marker); MARKER_HEATFLUX= ( Sting, 0.0, Fuselage, 0.0, WingUpper, 0.0, WingLower, 0.0, VT, 0.0, HTUpper, 0.0, HTLower, 0.0, HTTE, 0.0, VTWingTip, 0.0, VTTE, 0.0, WingTE, 0.0, WBFairing, 0.0, PWUpper, 0.0, PWLower, 0.0, PWTE, 0.0 )%; % Far-field boundary marker(s) (NONE = no marker); MARKER_FAR= ( Farfield ); %; % ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:3262,update,updates,3262,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['update'],['updates']
Deployability,"flows. To perform such analysis, I need to firstly obtain a steady-state solution of the Navier-Stokes equations. This is not a problem when a physical steady-state exists but becomes cumbersome otherwise. In the latter case, I need to drive the flow to a steady-state numerically such that the flow becomes steady and linear stability analysis can be performed. Presently, there is no compressible open-source CFD code capable of supersonic simulations, as far as I know, able to obtain ''unstable'' steady-states. The solutions outlined below not only would give the users capabilities needed to perform stability analysis of globally unstable flows with help of SU2 code but would also provide means of accelerating convergence of any unsteady solution. **Describe the solution you'd like**; Implementation of selective frequency damping (SFD) for unsteady simulation as introduced in [1] and boostconv algorithm as proposed by [2]. _SFD_: A method, enabling the computation of steady solutions of the Navier-Stokes equations in globally unstable configurations. Steady-state is achieved by damping the unstable temporal frequencies with addition of a dissipative relaxation term proportional to the high-frequency content of the velocity fluctuations. [1]. _boostconv_: An iterative algorithm, inspired by Krylov-subspace methods, which is able to compute unstable steady states and/or accelerate the convergence to stable configurations. This algorithm is based on the minimization of the residual norm at each iteration step with a projection basis updated at each iteration rather than at periodic restarts like in the classical GMRES method. The algorithm is able to stabilize any dynamical system without increasing the computational time of the original numerical procedure used to solve the governing equations. _Moreover, it can be easily inserted into a pre-existing relaxation (integration) procedure with a call to a single black-box subroutine_. [2]. **Additional context**; I would b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022:1322,configurat,configurations,1322,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022,1,['configurat'],['configurations']
Deployability,"from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5558,integrat,integration,5558,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,"from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:2583,update,updated,2583,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,1,['update'],['updated']
Deployability,"ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1411:6556,update,updated,6556,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411,1,['update'],['updated']
Deployability,"ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1413:6741,update,updated,6741,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413,1,['update'],['updated']
Deployability,g C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Inst,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:7382,Install,Installing,7382,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"g externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial College London. |; | - Prof. Vincent Terrapon's group at the University of Liege. |; | - Prof. Edwin van der Weide's group at the University of Twente. |; | - Lab. of New Concepts in Aeronautics at Tech. Inst. of Aeronautics. |; -------------------------------------------------------------------------; | Copyright 2012-2018, Francisco D. Palacios, Thomas D. Economon, |; | Tim Albring, and the SU2 contributors. |; | |; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:7249,release,release,7249,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['release'],['release']
Deployability,"g. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this);",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2006,update,updated,2006,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['update'],['updated']
Deployability,"github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6328,Update,Updates,6328,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Update'],['Updates']
Deployability,"gs mentioned above. However, the current implementation in develop only works correctly for PARAVIEW_MULTIBLOCK and for RESTART type output files. This is because in the case of PARAVIEW_MULTIBLOCK, the additional file output using the iteration number in the filename, is performed in the switch case block directly. . For all other output files, the switch case block only generates the correct filename with the iteration number appended. After the switch block, it is (wrongly) checked if (and only if) the WRT_RESTART_OVERWRITE flag is set to NO. If so, the additional file is written. Therefore, this logic only works correctly for RESTART files (and PARAVIEW_MULTIBLOCK files, because for that format, the file dump is independent of the file dump after the switch block. . The proposed fix here introduces a local boolean (doWriteIterFile) that acts as a switch for the additional file dump. It is set in the switch case block and afterwards it is checked if this variable is true or false. Based on this value, the file dump is executed or not. Furthermore, the fix introduces and corrects some comments to make the function easier to understand. ## Related Work; The flags are already available in the develop branch as config options but they don't work as expected. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2036:2643,update,updated,2643,https://su2code.github.io,https://github.com/su2code/SU2/pull/2036,1,['update'],['updated']
Deployability,"h the volume results, but the amplitude of the lift coefficient is too small. I guess that the velocities are not set properly / mixed up / require a call to some update function or similar. **I'm stuck at this point. Does someone have any idea what I'm doing wrong?? I feel that I am missing an important step here...**~~; - [ ] ~~final test: mesh deformation + moving grid + gust~~; - [x] final test: mesh deformation + gust. Apart from the steps above, the following questions / tasks remain:; - [ ] ~~The the Split Velocity Method (classes SetWind_GustField and CSourceWindGust) is not used in SU2 as far a I understand and for all gust types, the inputs are zero. Instead, the Field Velocity Method is used, but when trying to remove the functions SetWindGust and SetWindGustDer, I broke the code elsewhere. In order to enable 3D meshes, I simply set the outputs to zero for now. I believe that we should clean up the code, but my C++ skills are the limiting factor here, so I need some help with that.~~ --> In a new, dedicated pull request. ## Related Work; The gust encounter for 3D meshes was requested in #1319 and in the Forum https://www.cfd-online.com/Forums/su2/234021-gusts-3d.html and https://www.cfd-online.com/Forums/su2/225914-no-slip-condition-3d-gust.html. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:4676,update,updated,4676,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,1,['update'],['updated']
Deployability,"h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and sp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1934,Upgrade,Upgrades,1934,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Upgrade'],['Upgrades']
Deployability,"he host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SH",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:1885,Configurat,Configuration,1885,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Configurat'],['Configuration']
Deployability,"he tests I did over at #1388 where I will also add a inc+turb+2species-with-2-inlets reg test (and hopefully also non-dimensional). Inlet file non-dimensionalization: The inlet file writes dimensional values for the mean flow, and the values that are read are non-dimensionalized in the BC_Inlet routine itself -> I personally find this approach quite good, but I dont believe the SA+SST are adhering to that. See also [this cfd-online issue](https://www.cfd-online.com/Forums/su2/239313-inlet-profile-sst-nondimensional-treatment.html). I will try to fix this here as well.; - nu tilde is non-dimensionalized by multiplying with densityRef/viscosityRef (which I guess from the code); - TKE by multiplying with 1/VelocityRef^2 (which I guess from the code, and would fit with Feng Liu Non-Dim paper i have); - Omega ~~by multiplying with length_Ref/VelocityRef (which would fit with Feng Liu) or~~ by multiplying with ViscRef/(rhoRef*VelocityRef^2); Any info on this is appreciated.; My approach would be non-dimensionalize in the BC_Inlet routine for Turb as well to stay consistent with the mean flow, For the mean flow it has to be done like that because the meaning of the values is determined in the inlet routine. Otherwise one could do all that consistently a bit earlier. I have to remember to add a little hint to the laminar step tutorial to state that the inlet file should be dimensional. ## Related Work; https://github.com/su2code/SU2/pull/516 initial implementation. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1427:2266,update,updated,2266,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427,1,['update'],['updated']
Deployability,"his PR applies the following bugfixes:; - correct retrieval of the wall roughness in a multizone setup, the original intention of this PR; - the non-MPI substitute for `SU2_MPI::Allgatherv` and `Alltoallv` now takes the displacement into account; - fix #1293, adding a missing `#include` statement . Below is the original PR description. ## Proposed Changes; I think that currently the roughness at the closest wall is retrieved in a wrong way for multizone setups. The current structure is like this:. def CGeometry::ComputeWallDistance:; for each iZone:; construct an ADT which stores the markers of iZone; for each jZone:; call CPhysicalGeometry::SetWallDistance to jZone geometry which \; reduces the stored wall distances of jZone's points according to iZone's markers in the ADT and\; sets wall roughnesses of jZone's points according to data from jZone's geometry. The issue I perceive here is that the closest wall in the ADT, identified by the `markerID`, belongs to `iZone`. `iZone`'s geometry and config must therefore be an additional argument to `CPhysicalGeometry::SetWallDistance`. We must not use the wall roughness from `jZone`'s geometry and config associated to the markerID, as it is currently done. ## Related Work; ?; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286:1972,update,updated,1972,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286,1,['update'],['updated']
Deployability,"https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6223,Update,Updated,6223,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Update'],['Updated']
Deployability,"i.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:2815,integrat,integration,2815,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,"i>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR af",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2194,release,release-asset,2194,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['release'],['release-asset']
Deployability,"iable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified bound 33 equals destination size [-Wstringop-truncation]; strncpy(str_buf, SolTag[i], CGNS_STRING_SIZE);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/option.c: In function 'CheckOptions':; ./sources/Python3.7/option.c:46:32: warning: '.o' directive writing 2 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:4790,Release,Release,4790,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['Release'],['Release']
Deployability,iation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5870,Install,Installing,5870,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"ield and outlet as TOTAL_INLET, FARFIELD, OUTLET and EULER and some (not all) combination between these BC were tried. The mesh was generated with Salome-Meca. It is a tetrahedral mesh. I have a script that permits to change the domain size with ease. So from the mesh perspective it is fairly easy to test different mesh sizes and domain sizes.; Generally the outer domain radius was between 1.5*propRadius to 10*propRadus. Domain height between 3*propRadius to 15*propRadius. The prop was at 2/3 of the total height (1/2 and 3/4 were also tested). Some simulations approximated from a far experimental results (thrust +/-10% error, torque +/-15%). Some completely diverged some converge towards something way out of the 10% error range. **To Reproduce**. You can find the configuration file below.; I cannot provide the mesh at the moment.; If needed I will change the geometry for ""reproduction"". `%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: Caradonna & Tung rotor in hover (still air) %; % Author: Thomas D. Economon %; % Institution: Stanford University %; % Date: 2020.05.24 %; % File Version 7.3.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION); SOLVER= EULER; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= NO . % ----------- COMPRESSIBLE AND INCOMPRESSIBLE FREE-STREAM DEFINITION ----------%; %; % Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.0; %; % Angle of attack (degrees); AOA= 0.0; %; % Side-slip angle (degrees); SIDESLIP_ANGLE= 0.0; %; % Free-stream pressure (101325.0 N/m^2 by default, only Euler flows) ; FREESTREAM_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:2638,configurat,configuration,2638,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['configurat'],['configuration']
Deployability,"ime — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:3218,upgrade,upgrade,3218,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,2,"['deploy', 'upgrade']","['deployed', 'upgrade']"
Deployability,"imizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859E-11; Optimization terminated successfully. (Exit mode 0); Current function value: 1.07807522; Iterations: 1; Function evaluations: 1; Gradient evaluations: 1. And no further designs are generated. What makes SLSQP to 'converge'?. **I am using branch** [turbo_output_opt](https://github.com/su2code/SU2/compare/develop...turbo_output_opt) (updated to latest develop). Thanks in advance. Config file: [case728.txt](https://github.com/su2code/SU2/files/4606913/case728.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:2403,update,updated,2403,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,1,['update'],['updated']
Deployability,"in SU2/Common/src/config_structure.cpp:. addStringListOption(""DV_MARKER"", nMarker_DV, Marker_DV);; 	/* DESCRIPTION: Parameters of the shape deformation; - FFD_TWIST_ANGLE ( FFDBox ID, x_Orig, y_Orig, z_Orig, x_End, y_End, z_End ) */. I think FFD_TWIST_ANGLE is superseded (needs confirmation) by FFD_TWIST_2D and FFD_TWIST but the comment has not been updated to reflect this. If FFD_TWIST_ANGLE is not in use anymore, then SU2/SU2_PY/SU2/io/config_options.py needs updating as it references FFD_TWIST_ANGLE also",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/688:352,update,updated,352,https://su2code.github.io,https://github.com/su2code/SU2/issues/688,1,['update'],['updated']
Deployability,"in symmetry planes;; - ~Calculates new residuals to take into account the symmetry of the mesh;~ Only corrects momentum residual vector in current version.; - ~Uses a modified volume to calculate the solution in symmetry planes;~ Does not require modified volume in current version. ## Related Work; #657. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Results. For the sake of demonstrating the capability of the new Symmetry Boundary condition, the image shows a comparison of pressure at the surface, using the new implementation and the old symmetry boundary condition, for a flow over a 3D cylinder and considering the lateral and bottom surfaces as symmetry plane:. ### New Implementation vs Old Implementation for N2 mixture (2nd Order - NEMO_NS solver - AUSM scheme). ![Screenshot from 2021-01-20 23-28-31](https://user-images.githubusercontent.com/29612207/105253606-b6244c00-5b77-11eb-8689-c6e6190b4b5b.png). I have run this test without changing the viscous eigenvalues, and it converges to the same value. However, for unsteady simulations, changing the eigenvalues provides better results. ### New Implementation (on NEMO) vs Current SU2 Implementation for AIR5 mixture (2nd Order - NS solver - AUSM scheme). ![image](https://user-images.githubusercontent.com/29612207/105",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1168:1171,update,updated,1171,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168,1,['update'],['updated']
Deployability,in\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:6043,Install,Installing,6043,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"ing on here so I will try and include as much information as possible. Using the tape tagging method developed by @oleburghardt in #2343 and presented at the most recent SU2 Conference, a run of the full tape reveals that a variable used in a preaccumulation output is not properly recorded. The variable is the `val` in the function `PassiveAssign` in `CSysMatrix.hpp` line 215. `FORCEINLINE static ScalarType PassiveAssign(const SrcType& val) {; return SU2_TYPE::GetValue(val);; }`. Following the call stack of the error reveals that the problem variables in `val` are the jacobian components calculated in the Roe and JST scheme (these are the two options I have tested). It is possible to resolve this error by simply moving the stopping of the preaccumulation region from before the call to `updateLinearSystem` in the `ComputeFlux` method of both these schemes, to after, as show below. `/*--- Update the vector and system matrix. ---*/. updateLinearSystem(iEdge, iPoint, jPoint, implicit, updateType,; updateMask, flux, jac_i, jac_j, vector, matrix);. /*--- Stop preaccumulation. ---*/. stopPreacc(flux);`. However, whilst this resolve the error in this location, the next error appears in the Giles boundary condition. Here the two jacobian components within the residual object are not recorded correctly in the preaccumulation output region also. This in `CEulerSolver.cpp:6556`. `/*--- Compute the residual using an upwind scheme ---*/; auto residual = conv_numerics->ComputeResidual(config);. /*--- Update residual value ---*/; LinSysRes.AddBlock(iPoint, residual);`. I have tried simpy adding these components as preacc outputs however they are SIMD arrays and the datatype cannot be converted using the existing implementation. . I am not sure what is going on here, or the next steps to resolve this problem. Any further assistance would be greatly appreciated, thank you :). **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2368:1062,update,updateLinearSystem,1062,https://su2code.github.io,https://github.com/su2code/SU2/issues/2368,3,['update'],"['updateLinearSystem', 'updateMask', 'updateType']"
Deployability,"ion lies below.(CFL = 4.0); >% Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.8; %; % Angle of attack (degrees); AOA= 1.25; %; % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE); MGCYCLE= W_CYCLE; %; % Multi-Grid PreSmoothing Level; MG_PRE_SMOOTH= ( 1, 2, 3, 3 ); %; % Multi-Grid PostSmoothing Level; MG_POST_SMOOTH= ( 0, 0, 0, 0 ); %; % Jacobi implicit smoothing of the correction; MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); %; % Damping factor for the residual restriction; MG_DAMP_RESTRICTION= 1.0; %; % Damping factor for the correction prolongation; MG_DAMP_PROLONGATION= 1.0; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= CUSP; %; % Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-bcea-11e7-94d5-e248812c385d.png). I forced it stopped and compare result with JST scheme:; >CUSP(3Level multigrid); Total CL: 0.336272 ; Total CD: 0.0220499 ; JST (3Level multigrid); Total CL: 0.326933 ; Total CD: 0.0213497 ; ; The result is acceptable.; But when I change the limiter to""BARTH_JESPERSEN""(T",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:1295,integrat,integration,1295,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,1,['integrat'],['integration']
Deployability,"ions/checkout/pull/964"">Wrap pipeline commands for submoduleForeach in quotes</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1029"">Update <code>@​actions/io</code> to 1.1.2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1039"">Upgrading version to 3.2.0</a></li>; </ul>; <h2>v3.1.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/939"">Use <code>@​actions/core</code> <code>saveState</code> and <code>getState</code></a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/922"">Add <code>github-server-url</code> input</a></li>; </ul>; <h2>v3.0.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/770"">Add input <code>set-safe-directory</code></a></li>; </ul>; <h2>v3.0.1</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac""><code>3df4ab1</code></a> Release 4.0.0 (<a href=""https://redirect.github.com/actions/checkout/issues/1447"">#1447</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/gi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:9842,Release,Release,9842,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Release'],['Release']
Deployability,"isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/38071223/78511123-34069a80-7792-11ea-950f-750cef80f1f8.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:2299,integrat,integration,2299,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,2,"['integrat', 'update']","['integration', 'updated']"
Deployability,"it/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:10108,update,updates,10108,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['update'],['updates']
Deployability,"ith ParaView from 'adjoint.vtu' looks reasonably similar to the image shown in the tutorial). Finally, I wanted to also try the algorithmic differentiation, so I changed the parameter MATH_PROBLEM to DISCRETE_ADJOINT in the configuration file and:. $ SU2_CFD_AD inv_dadj_NACA0012.cfg. I failed to obtain a correct adjoint solution (I expected to see something really similar to what I got with the CONTINUOUS_ADJOINT method): the density adjoint field seems to have a completely different scale (instead of having values in the approximate range -200 ÷ +200, it has values in the range -0.264 ÷ +0.217 and the values not too close to zero are concentrated in an area near the farfield boundary, far from the airfoil). What's wrong?; Does anything else need to be changed in the configuration file?. **Bug report checklist**. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/). From the above mentioned commit, I built with:. $ ./preconfigure.py --no-medi --no-opdi --no-mpp --no-coolprop; $ export CXXFLAGS='-march=native -mtune=native -O3 -msse -mfpmath=sse'; $ meson setup -Dwith-mpi=disabled -Denable-cgns=true -Denable-tecio=false -Denable-autodiff=true -Denable-directdiff=true --prefix=${HOME}/local build; $ ninja -C build install. N.B.: CPU is an Intel Core i5-6600 CPU @ 3.30GHz. - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/). I haven't found any other GitHub issue about the Quick Start tutorial. - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). I used the tip of the develop branch, as of yesterday. **Desktop:**; - OS: Debian GNU/Linux 12.0 'bookworm' (up-to-date Debian testing); - C++ compiler and version: g++ (Debian 12.2.0-14) 12.2.0; - MPI implementation and version: irrelevant (built without MPI support); - SU2 Version: commit 3f68501a7ccb107f05a44c2aa5747797541fb683 , branch 'develop'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1993:2011,install,install,2011,https://su2code.github.io,https://github.com/su2code/SU2/issues/1993,1,['install'],['install']
Deployability,"ith SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `export LD_LIBRARY_PATH=/path/to/libROM/build/:$LD_LIBRARY_PATH`; 4. You can test by adding `SAVE_LIBROM=YES` to the Quickstart config",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1310:1670,update,updated,1670,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310,1,['update'],['updated']
Deployability,"ithub.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8866,Update,Update,8866,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,"['RELEASE', 'Update']","['RELEASES', 'Update']"
Deployability,"k's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [not yet] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1014:2117,update,updated,2117,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014,1,['update'],['updated']
Deployability,"k. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/982:2257,update,updated,2257,https://su2code.github.io,https://github.com/su2code/SU2/pull/982,1,['update'],['updated']
Deployability,l SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3637,Install,Installing,3637,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,l; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Document,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:6218,Install,Installing,6218,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"labels/compare/v4.0.0...v4.1.0"">https://github.com/mheap/github-action-required-labels/compare/v4.0.0...v4.1.0</a></p>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Add issues/pull-requests permissions to README by <a href=""https://github.com/mheap""><code>@​mheap</code></a> in <a href=""https://redirect.github.com/mheap/github-action-required-labels/pull/52"">mheap/github-action-required-labels#52</a></li>; <li>Only use a single comment when the action fails by <a href=""https://github.com/mheap""><code>@​mheap</code></a> in <a href=""https://redirect.github.com/mheap/github-action-required-labels/pull/53"">mheap/github-action-required-labels#53</a></li>; </ul>; <h2>New Contributors</h2>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/mheap/github-action-required-labels/compare/v3.0.1...v4.0.0"">https://github.com/mheap/github-action-required-labels/compare/v3.0.1...v4.0.0</a></p>; <h2>v4</h2>; <p>Tag that always points to the latest commit in the v4.x.x series of releases</p>; <h2>v3.0.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Add default error message by <a href=""https://github.com/mheap""><code>@​mheap</code></a> in <a href=""https://redirect.github.com/mheap/github-action-required-labels/pull/51"">mheap/github-action-required-labels#51</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/mheap/github-action-required-labels/compare/v3.0.0...v3.0.1"">https://github.com/mheap/github-action-required-labels/compare/v3.0.0...v3.0.1</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/4e9ef4ce8c697cf55716ecbf7f13a3d9e0b6ac6a""><code>4e9ef4c</code></a> Automatic compilation</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/18f57d781fe045548933f7465750a46e9994f1fd""><code>18f57d7</code></a> Allow labels to be provided one per line in input</li>; <li><a href=""https://github.com/mheap/github-action-requ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:2646,release,releases,2646,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,2,['release'],['releases']
Deployability,"ld/lib -lpython3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; WARNING: extract_all_objects called without setting recursive; keyword argument. Meson currently defaults to; non-recursive to maintain backward compatibility but; the default will be changed in the future. >SU2_PY/pySU2/meson.build:27:2: ERROR: Tried to form an absolute path to a source dir.; You should not do that but use relative paths instead. >To get include path to any directory relative to the current dir do. >incdir = include_directories(dirname). >After this incdir will contain both the current source dir as well as the; corresponding build dir. It can then be used in any subdirectory and; Meson will take care of all the busywork to make paths work. >Dirname can even be '.' to mark the current directory. Though you should; remember that the current source and build directories are always; put in the include directories by default so you only need to do; include_directories('.') if you intend to use the result in a; different subdirectory. **To Reproduce**. > $ cd $HOME/local; > $ git clone https://github.com/su2code/SU2.git; > $ cd SU2; > $ mkdir build; > $ $HOME/local/Python-3.7.9/python -m venv venv; > $ source venv/bin/activate; > (venv)$ export MPICC=/path/to/mpicc; > (venv)$ export MPICXX=/path/to/mpicxx; > (venv)$ export CC=$MPICC ; > (venv)$ export CXX=$MPICXX ; > (venv)$ pip install --upgrade pip; > (venv)$ pip install mpi4py; > (venv)$ ./meson.py build -Dcustom-mpi=true -Denable-pywrapper=True --prefix=$HOME/local/SU2/build/. **Desktop (please complete the following information):**. - OS: Linux (CentOS 7); - MPI implementation and version: mpich-3.2-intel64-19.0.1.144; - Python Version: Python-3.7.9; - swig Version: 3.0.12; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1672:3143,install,install,3143,https://su2code.github.io,https://github.com/su2code/SU2/issues/1672,3,"['install', 'upgrade']","['install', 'upgrade']"
Deployability,"le besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. I am using SU2 V7.2.1 but I also tested them with versions from this to 7.0.0. The files from the tutorial without solution_*.dat files:; [turb_SA_RAE2822.zip](https://github.com/su2code/SU2/files/7639785/turb_SA_RAE2822.zip). Personal files:; [naca0012_8_1_0_700.zip](https://github.com/su2code/SU2/files/7640051/naca0012_8_1_0_700.zip). The command that I use is: python shape_optimization.py -n 8 -g CONTINUOUS_ADJOINT -o SLSQP -f used_file.cfg. UPDATE: I also compiled the code in Ubuntu 20.04 enabling the DISCRETE_ADJOINT functionality but I always receive the same message. How can I create those solution_adj_*.dat files to start the ADJOINT problem?. Have I missed something written in other tutorials?. Thank you very much for all of the support.</div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1466:2551,UPDATE,UPDATE,2551,https://su2code.github.io,https://github.com/su2code/SU2/issues/1466,1,['UPDATE'],['UPDATE']
Deployability,"le boundary conditions setup were tested for the ""inlet"", ""farfield"" and ""outlet"" markers. Furthermore the Inlet BC were tried with many different vertical speeds (vx=0/0.001/0.01/0.1/1/10). Simulations with the inlet, farfield and outlet as TOTAL_INLET, FARFIELD, OUTLET and EULER and some (not all) combination between these BC were tried. The mesh was generated with Salome-Meca. It is a tetrahedral mesh. I have a script that permits to change the domain size with ease. So from the mesh perspective it is fairly easy to test different mesh sizes and domain sizes.; Generally the outer domain radius was between 1.5*propRadius to 10*propRadus. Domain height between 3*propRadius to 15*propRadius. The prop was at 2/3 of the total height (1/2 and 3/4 were also tested). Some simulations approximated from a far experimental results (thrust +/-10% error, torque +/-15%). Some completely diverged some converge towards something way out of the 10% error range. **To Reproduce**. You can find the configuration file below.; I cannot provide the mesh at the moment.; If needed I will change the geometry for ""reproduction"". `%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: Caradonna & Tung rotor in hover (still air) %; % Author: Thomas D. Economon %; % Institution: Stanford University %; % Date: 2020.05.24 %; % File Version 7.3.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION); SOLVER= EULER; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= NO . % ----------- COMPRESSIBLE AND INCOMPRESSIBLE FREE-STREAM DEFINITION ----------%; %; % Mach number (non-dimensional, based on ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:2418,configurat,configuration,2418,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['configurat'],['configuration']
Deployability,"le phenomena in hypersonic blunt bodies (https://doi.org/10.1016/j.apm.2019.09.005); 2.) Wally - A full refactoring of the AUSM schemes within NEMO; 3.) Removal of AUSMPW+ scheme; ; ## Related Work; This work is a follow-up and a cleaner version of the work in the branch **feature_NEMO_AUSMPLUSM**. I will delete both branches after merge. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary. ### Benchmark. I have conducted a comparison between the AUSM and AUSM+M for a 2D axisymmetric non-equilibrium flow over a cylinder with a 0.1 meter diameter and a freestream of M=24, P = 10.23 N and T = 224.5 K. ![image](https://user-images.githubusercontent.com/29612207/192250118-eb074187-3002-468a-8406-b01047c790bd.png); The left image represents the converged 2nd order solution using AUSM+M and the right image using the standard AUSM scheme. The new AUSM+M scheme enables to get rid of the pressure oscillations near the stagnation area. ![image](https://user-images.githubusercontent.com/29612207/192250632-85b64454-c54c-4815-8664-f72fc17d705d.png); Temperature at the stagnation line (solid line is AUSM+M and dashed line is AUSM). ![image](https://user-images.githubusercontent.com/29612207/192250763-ee3b96db-b42f-4ebe-a256-bcb9043ecb24.png); ![image](https://user-images.githubusercontent.com/29612207/192250910-2fae95b2-ee",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773:1120,update,updated,1120,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773,1,['update'],['updated']
Deployability,"li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:3750,upgrade,upgrade,3750,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,9,['upgrade'],['upgrade']
Deployability,ling C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5150,Install,Installing,5150,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"ll -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/option.c: In function 'CheckOptions':; ./sources/Python3.7/option.c:46:32: warning: '.o' directive writing 2 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:5615,Release,Release,5615,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['Release'],['Release']
Deployability,lling C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Ins,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:7293,Install,Installing,7293,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,lling C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5240,Install,Installing,5240,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"lve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362:2822,update,updated,2822,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362,2,['update'],['updated']
Deployability,"m/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6037,RELEASE,RELEASES,6037,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['RELEASE'],['RELEASES']
Deployability,makefile fixes and preconfigure version update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/898:40,update,update,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/898,1,['update'],['update']
Deployability,"medium.su2; %; % Mesh input file format (SU2, CGNS); MESH_FORMAT= SU2; %; % Mesh output file; MESH_OUT_FILENAME= mesh_out.su2; %; % Restart flow input file; SOLUTION_FILENAME= solution_flow.dat; %; % Restart adjoint input file; SOLUTION_ADJ_FILENAME= solution_adj.dat; %; % Output file format (TECPLOT, TECPLOT_BINARY, PARAVIEW,; % FIELDVIEW, FIELDVIEW_BINARY); OUTPUT_FILES= RESTART, PARAVIEW_ASCII, SURFACE_PARAVIEW_ASCII; %; % Output file convergence history (w/o extension) ; CONV_FILENAME= history; %; % Output file with the forces breakdown; BREAKDOWN_FILENAME= forces_breakdown.dat; %; % Output file restart flow; RESTART_FILENAME= restart_flow.dat; %; % Output file restart adjoint; RESTART_ADJ_FILENAME= restart_adj.dat; %; % Output file flow (w/o extension) variables; VOLUME_FILENAME= flow; %; % Output file adjoint (w/o extension) variables; VOLUME_ADJ_FILENAME= adjoint; %; % Output Objective function; VALUE_OBJFUNC_FILENAME= of_eval.dat; %; % Output objective function gradient (using continuous adjoint); GRAD_OBJFUNC_FILENAME= of_grad.dat; %; % Output file surface flow coefficient (w/o extension); SURFACE_FILENAME= surface_flow; %; % Output file surface adjoint coefficient (w/o extension); SURFACE_ADJ_FILENAME= surface_adjoint; %; % Writing frequency for volume/surface output; OUTPUT_WRT_FREQ= 5000; % Writing frequency for history output; HISTORY_WRT_FREQ_INNER= 1; % Writing convergence history frequency; SCREEN_WRT_FREQ_INNER= 1; % Screen output fields. SCREEN_OUTPUT = (INNER_ITER, RMS_DENSITY, RMS_TKE, RMS_DISSIPATION, LIFT, DRAG, MOMENT_Y); % History output groups (use 'SU2_CFD -d <config_file>' to view list of available fields); HISTORY_OUTPUT= (ITER, RMS_RES, AERO_COEFF, WALL_TIME); %; % Volume output fields/groups (use 'SU2_CFD -d <config_file>' to view list of available fields); VOLUME_OUTPUT= (COORDINATES, SOLUTION, PRIMITIVE, VORTEX_IDENTIFICATION). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:9878,continuous,continuous,9878,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['continuous'],['continuous']
Deployability,"metric formulation. In the baseline model, the only term that has an impact is:; ![image](https://github.com/su2code/SU2/assets/65549824/2afb2da5-4fb5-460d-86da-dfec60fb689f); Rewriting it in cylindrical coordinates, an additional source term is obtained:; ![image](https://github.com/su2code/SU2/assets/65549824/7e2a7f15-acae-49b7-9db7-7e65630c0045). In the Negative variant of the model, this source varies slightly due to the presence of $f_n$:; ![image](https://github.com/su2code/SU2/assets/65549824/fdb23203-1c0a-45ea-94ce-e0e6190293db). The compressibility correction also requires a new source. Rewriting; ![image](https://github.com/su2code/SU2/assets/65549824/a639b5a9-18a8-4c6a-aa5a-dfdac00a2e38); in cylindrical coordinates yields the new source; ![image](https://github.com/su2code/SU2/assets/65549824/2c2d7c80-2db3-4a6c-bdd8-68a5e76aaa46). For the other model variants, it looks like the modification of strain magnitude (done for SST) takes care of the differences, but I might be mistaken. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1565 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197:2081,update,updated,2081,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197,1,['update'],['updated']
Deployability,multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\S,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5698,Install,Installing,5698,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"n Windows runners by upgrading <code>@​actions/github</code> dependency by <a href=""https://github.com/BrettDong""><code>@​BrettDong</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1246"">actions/checkout#1246</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/BrettDong""><code>@​BrettDong</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1246"">actions/checkout#1246</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/checkout/blob/main/CHANGELOG.md"">actions/checkout's changelog</a>.</em></p>; <blockquote>; <h1>Changelog</h1>; <h2>v4.0.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1067"">Support fetching without the --progress option</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1436"">Update to node20</a></li>; </ul>; <h2>v3.6.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1377"">Fix: Mark test scripts with Bash'isms to be run via Bash</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/579"">Add option to fetch tags even if fetch-depth &gt; 0</a></li>; </ul>; <h2>v3.5.3</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1196"">Fix: Checkout fail in self-hosted runners when faulty submodule are checked-in</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1287"">Fix typos found by codespell</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1369"">Add support for sparse checkouts</a></li>; </ul>; <h2>v3.5.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1289"">Fix api endpoint for GHES</a></li>; </ul>; <h2>v3.5.1</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1246"">Fix slow checkout on Windows</a></li>; <",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:6368,Update,Update,6368,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Update'],['Update']
Deployability,n.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5958,Install,Installing,5958,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,n\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4254,Install,Installing,4254,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"nd 1024 [-Wformat-overflow=]; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lmsvcr140; collect2.exe: error: ld returned 1 exit status; error: command 'C:\\Program Files\\mingw-w64\",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:9532,Release,Release,9532,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['Release'],['Release']
Deployability,"nd swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtual event. Veldhuis L (2005) Propeller-wing aerodynamic interface,; Ph.D. thesis, Delft University of Technology, Delft, Netherlands. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:2638,update,updated,2638,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['update'],['updated']
Deployability,"ndabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4285,install,installed,4285,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['install'],['installed']
Deployability,"ng (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4823,Update,Updated,4823,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Update'],['Updated']
Deployability,"ng restarts for prescribed massflow in streamwise periodic simulations (primal and adjoint). The massflow is achieved by dialing a pressure drop which is written and read to/from the `flow.meta` file. That file was used mainly for fixed CL stuff as far as I am aware of. The story is not done though really with this one change. There is still the restart-should-contain-everything-in-the-first-iteration-for-the-adjoint-taping issue which is currently not the case ... and not super straightforward to solve -> see https://github.com/su2code/SU2/commit/c11354115757d673a771e04562e6920024e013a2 description for more info. (EDIT: I will not tackle the massflow adjoint part in this PR, as with the PerSurf output it contains enough stuff which I like to have merged); - I added a `weight` to heat-solid zone OF's; - when `pressure_drop` is used, the first two entries of `MARKER_ANALYZE` are used as out-inlet but more than two markers are allowed. This comes in handy with `FLOW_COEFF_SURF` imo; - Adding per surface output for multizone cases. Was not working before in the way that `_SURF[0]` fields were reported to be ignored. A regression test is updated for that.; - Little fix to the regression system where Testcase.py had unsuitable default values such that failing reg tests were reported passing. So I will continue fiddling a little bit with massflow restarts but i already successfully optimized with that setup so it is not completely useless. ## Related Work; #773 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1527:1210,update,updated,1210,https://su2code.github.io,https://github.com/su2code/SU2/pull/1527,2,['update'],['updated']
Deployability,"ngw-64 terminal on windows as suggested in the SUAVE build instructions. . From another thread, it was suggested to go into SU2\externals\AMGIO\su2io and try to manually build the _amgio; When I run the command 'python setup.py build_ext -c mingw32' I get the following output. . `running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; C:\Softwares\swigwin-4.0.2\swig.exe -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; creating build; creating build\temp.win-amd64-3.8; creating build\temp.win-amd64-3.8\Release; creating build\temp.win-amd64-3.8\Release\sources; creating build\temp.win-amd64-3.8\Release\sources\python3.7; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c: In function 'py_WriteMeshAndSol':; ./sources/Python3.7/amgio_py.c:628:28: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:628:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:624:28: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:624:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:614:26: warning: '.solb' directive writing ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:1023,Release,Release,1023,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['Release'],['Release']
Deployability,"niconda3/envs/temp_su5/bin/SU2/__init__.py"", line 14, in <module>; > from SU2 import amginria; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/amginria/__init__.py"", line 4, in <module>; > from .interface import *; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/amginria/interface.py"", line 41, in <module>; > import _amgio as amgio; > ModuleNotFoundError: No module named '_amgio'; > ```. and followed the instructions provided as in [https://github.com/su2code/SU2/issues/948#issuecomment-619334494](url):. > The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback.; > ; > Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; > ; > ```; > #!/usr/bin/env python; > ```; > ; > uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?; > ; > If it didn't build/install, you could go into extensions/AMGIO/su2io and run; > ; > ```; > python3 setup.py build_ext && python3 setup.py install; > ```; > ; > If it did build/install, try the command; > ; > ```; > python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; > ```. After doing `python3 setup.py build_ext && python3 setup.py install`, I encountered the following error:. > ```; > (temp_su5) takashi279@turing1:/dfs/user/takashi279/plasma/design/multiscale_adap3/SU2/externals/AMGIO/su2io$ python3 setup.py build_ext && python3 setup.py install; > running build_ext; > running install; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/install.py:37: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.; > setuptools.SetuptoolsDeprecationWarning,; > /dfs/user/takashi279/miniconda3/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1699:1454,install,installed,1454,https://su2code.github.io,https://github.com/su2code/SU2/issues/1699,1,['install'],['installed']
Deployability,nie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3585,Install,Installing,3585,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,ninja gets built even when it's already installed,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/911:40,install,installed,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/911,1,['install'],['installed']
Deployability,"nja.exe -C C:\Users\qiang_zhang\Desktop\TestCases\SU2\build install; ninja: Entering directory `C:\Users\qiang_zhang\Desktop\TestCases\SU2\build'; [1/767] Linking target externals/cgns/hdf5/H5detect.exe; FAILED: externals/cgns/hdf5/H5detect.exe; ""gcc"" -o externals/cgns/hdf5/H5detect.exe externals/cgns/hdf5/H5detect.exe.p/H5detect.c.obj ""-Wl,--allow-shlib-undefined"" ""-Wl,-O1"" ""D:/Anaconda/Library/lib/z.lib"" ""-Wl,--start-group"" ""-lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi"" ""-Wl,--subsystem,console"" ""-lkernel32"" ""-luser32"" ""-lgdi32"" ""-lwinspool"" ""-lshell32"" ""-lole32"" ""-loleaut32"" ""-luuid"" ""-lcomdlg32"" ""-ladvapi32"" ""-Wl,--end-group""; D:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; collect2.exe: error: ld returned 1 exit status; [10/767] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Pint.c.obj; ninja: build stopped: subcommand failed.; ```. **To Reproduce**. I can sucess configure su2:; ![image](https://user-images.githubusercontent.com/29271051/159446256-dc866db4-9199-42d0-86b4-c38839753dd3.png); ![image](https://user-images.githubusercontent.com/29271051/159446307-354518f6-3382-401b-80c9-ac9e72f3d224.png). Then, I want to compile it by:; ```; ./ninja.exe -C C:\Users\qiang_zhang\Desktop\TestCases\SU2\build install; ```; And the bug is reported:. ```; cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; ```; However, I have install the `msmpisdk.msi` and `msmpisetup.exe`. . ![image](https://user-images.githubusercontent.com/29271051/159446649-f606a381-0896-461c-bd09-9e0b9243ce2e.png). **Desktop (please complete the following information):**; - OS: win10; - C++ compiler and version: as the recommanded `gcc version 8.1.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project)`; - MPI implementation and version: as the recommanded v10.1.2; - SU2 Version: Project version: 7.3.0 ""Blackbird"". Any suggestion is appreciated~~~",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1570:1428,install,install,1428,https://su2code.github.io,https://github.com/su2code/SU2/issues/1570,2,['install'],['install']
Deployability,"nning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs wer",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:1374,configurat,configuration,1374,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['configurat'],['configuration']
Deployability,"not only would give the users capabilities needed to perform stability analysis of globally unstable flows with help of SU2 code but would also provide means of accelerating convergence of any unsteady solution. **Describe the solution you'd like**; Implementation of selective frequency damping (SFD) for unsteady simulation as introduced in [1] and boostconv algorithm as proposed by [2]. _SFD_: A method, enabling the computation of steady solutions of the Navier-Stokes equations in globally unstable configurations. Steady-state is achieved by damping the unstable temporal frequencies with addition of a dissipative relaxation term proportional to the high-frequency content of the velocity fluctuations. [1]. _boostconv_: An iterative algorithm, inspired by Krylov-subspace methods, which is able to compute unstable steady states and/or accelerate the convergence to stable configurations. This algorithm is based on the minimization of the residual norm at each iteration step with a projection basis updated at each iteration rather than at periodic restarts like in the classical GMRES method. The algorithm is able to stabilize any dynamical system without increasing the computational time of the original numerical procedure used to solve the governing equations. _Moreover, it can be easily inserted into a pre-existing relaxation (integration) procedure with a call to a single black-box subroutine_. [2]. **Additional context**; I would be happy to collaborate on implementation of said algorithms in SU2 but I do not have much experience with C++ (I mostly use Fortran) and I am not too familiar with SU2 source code so it would be great to work with someone more experienced in those areas. Figure from [2] outlining performance of SFD and boostconv on a cylinder:; <img width=""882"" alt=""Screenshot 2023-05-02 at 22 23 19"" src=""https://user-images.githubusercontent.com/67333831/235789512-63bc5e29-6d09-478f-a9e5-9931b5673bd0.png"">. **Bibliography**; [1] Åkervik, E., Brandt, L., He",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022:1827,update,updated,1827,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022,1,['update'],['updated']
Deployability,"nterface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special via a boolean vector and know how to access via a hash table (for example). **Alternatives**; We could make the storage continuous by using a memory pool i.e. allocate outside the class and give the class a pointer to its memory location. This is still not truly contiguous as the pointers the class holds are variables themselves and so they would still be separated (albeit by a smaller huge distance), thus the amount of overhead would still influence performance. Right, that is enough writing... please let me know what you think.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:7727,continuous,continuous,7727,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['continuous'],['continuous']
Deployability,"ntly playing around. This new version has the same EOS as NIST. It also comes with a variety of bug fixes and improvements. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - The code generates quite a few warning when compiling on Debian 12, which uses GCC12 , but none were introduced in this commit. I tested the compilation using an Apptainer/Singularity container.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - I changed the Python code, for which I saw no entry in the style guide.; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - I did not run it as I did not know about it, but I do not think it applies for this (though maybe it does); - [ ] I have added a test case that demonstrates my contribution, if necessary.; - Not necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; - No documentation related to SU2 should be affected. I do have one question which is not directly related to this PR. I have an Apptainer/Singularity container for SU2 which has most of the bells and whistles. I saw that you have docker containers, but for HPC (and normal computers) Docker [can have a large performance penalty](https://www.youtube.com/watch?v=2FPB74YB-ng). Would you like for me to contribute my Apptainer recipes? . Any and all feedback welcome!. P.S: I did not know that even after updating the hash commit of CoolProp in the meson script, I also had to update the submodule, that is not very intuitive. In this current state, the Meson commit hash has little to no value if it gets changed independently afterwards :); P.P.S: I also did not know that SU2 v8.0 was going to be released this earlier, otherwise I would have tried to get it updated earlier!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2136:1412,update,updated,1412,https://su2code.github.io,https://github.com/su2code/SU2/pull/2136,4,"['release', 'update']","['released', 'update', 'updated']"
Deployability,"ntra_fanin_progress (); from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf587798 in _coll_ml_allreduce (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf33038d in mca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5331,integrat,integration,5331,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,nts\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:8032,Install,Installing,8032,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"nvs/temp_su5/bin/SU2/amginria/__init__.py"", line 4, in <module>; > from .interface import *; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/amginria/interface.py"", line 41, in <module>; > import _amgio as amgio; > ModuleNotFoundError: No module named '_amgio'; > ```. and followed the instructions provided as in [https://github.com/su2code/SU2/issues/948#issuecomment-619334494](url):. > The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback.; > ; > Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; > ; > ```; > #!/usr/bin/env python; > ```; > ; > uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?; > ; > If it didn't build/install, you could go into extensions/AMGIO/su2io and run; > ; > ```; > python3 setup.py build_ext && python3 setup.py install; > ```; > ; > If it did build/install, try the command; > ; > ```; > python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; > ```. After doing `python3 setup.py build_ext && python3 setup.py install`, I encountered the following error:. > ```; > (temp_su5) takashi279@turing1:/dfs/user/takashi279/plasma/design/multiscale_adap3/SU2/externals/AMGIO/su2io$ python3 setup.py build_ext && python3 setup.py install; > running build_ext; > running install; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/install.py:37: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.; > setuptools.SetuptoolsDeprecationWarning,; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/easy_install.py:147: EasyInstallDeprecationWarning: easy_install command is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1699:1572,install,install,1572,https://su2code.github.io,https://github.com/su2code/SU2/issues/1699,1,['install'],['install']
Deployability,o C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Ins,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4497,Install,Installing,4497,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"o identify the symmetry planes and mirror the flux through the faces. ; Blazek continues: ""The second methodology computes the fluxes for the halved control volume (but not accross the boundary). The components of **the residual normal to the symmetry plane** are then zeroed out. It is also necessary to correct normal vectors of those faces of the control volume, which touch the boundary. The modification consists of removing all components of the face vector, which are normal to the symmetry plane. The gradients also have to be corrected according to Eq. (8.40) [points 2,3,4 above]"". 1. Modify Green-Gauss and Least-Squares gradient computation for symmetry planes; -> This seems to work fine; 2. Fix normal components of edges connected to symmetry plane; -> This seems to work fine; 3. Fix residual components of velocity on the symmetry plane; -> This seems to work fine; 4. Multiple symmetry planes, including Euler walls; -> This seems to work fine; 6. multigrid; -> Works fine now that we use the agglomeration as in the paper of Diskin.; 7. grid movement; 8. -> Works fine with the new fix to the residuals (energy update). ## Related Work; #1168 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194:2300,update,update,2300,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194,2,['update'],"['update', 'updated']"
Deployability,o; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installi,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:7021,Install,Installing,7021,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"ocess to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7358,Update,Updated,7358,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Update'],['Updated']
Deployability,ocuments\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:7944,Install,Installing,7944,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"odeQL bundle version to 2.15.5. <a href=""https://redirect.github.com/github/codeql-action/pull/2047"">#2047</a></li>; </ul>; <h2>3.22.11 - 13 Dec 2023</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/github/codeql-action/commit/66c3cec3e84942c64294dd8ea34532318b12a14e""><code>66c3cec</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/36f1104e11cf100d92d694d3df5330397e1a1a2d""><code>36f1104</code></a> Bump the npm group with 5 updates</li>; <li><a href=""https://github.com/github/codeql-action/commit/905ae4af531685eaee37e94f46845bf4c420dc62""><code>905ae4a</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2163"">#2163</a> from github/mergeback/v3.24.5-to-main-47b3d888</li>; <li><a href=""https://github.com/github/codeql-action/commit/6dab9f2356bef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:14618,Update,Update,14618,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['Update'],['Update']
Deployability,"oid*’ to ‘void*’ [-fpermissive]; return MPI_T_pvar_write(session, handle, buf);; ^; In file included from ../../../Common/lib/../src/../include/./mpi_structure.hpp:42:0,; from ../../../Common/lib/../src/../include/config_structure.hpp:41,; from ../../../Common/lib/../src/config_structure.cpp:38:; /usr/include/mpich-x86_64/mpi.h:1460:5: error: initializing argument 3 of ‘int MPI_T_pvar_write(MPI_T_pvar_session, MPI_T_pvar_handle, void*)’ [-fpermissive]; int MPI_T_pvar_write(MPI_T_pvar_session session, MPI_T_pvar_handle handle, void *buf);; ^; make[2]: *** [../src/libSU2_AD_a-config_structure.o] Error 1; make[2]: Leaving directory `/home/bu/SU2/SU2_AD/Common/lib'; make[1]: *** [all-recursive] Error 1; make[1]: Leaving directory `/home/bu/SU2/SU2_AD'; make: *** [SU2_AD] Error 2; ```; Following is the config log:; ```; checking build system type... x86_64-unknown-linux-gnu; checking host system type... x86_64-unknown-linux-gnu; checking target system type... x86_64-unknown-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /usr/bin/mkdir -p; checking for gawk... gawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:2956,install,install,2956,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['install'],['install']
Deployability,"om/github/codeql-action/pull/2031"">#2031</a></li>; <li>The CodeQL Action now requires CodeQL version 2.11.6 or later. For more information, see <a href=""https://github.com/github/codeql-action/blob/main/#2227---16-nov-2023"">the corresponding changelog entry for CodeQL Action version 2.22.7</a>. <a href=""https://redirect.github.com/github/codeql-action/pull/2009"">#2009</a></li>; </ul>; <h2>3.22.12 - 22 Dec 2023</h2>; <ul>; <li>Update default CodeQL bundle version to 2.15.5. <a href=""https://redirect.github.com/github/codeql-action/pull/2047"">#2047</a></li>; </ul>; <h2>3.22.11 - 13 Dec 2023</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/github/codeql-action/commit/66c3cec3e84942c64294dd8ea34532318b12a14e""><code>66c3cec</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/36f1104e11cf100d92d694d3df5330397e1a1a2d""><code>36f1104</code></a> Bump the npm group with 5 updates</li>; <li><a href=""https://github.com/github/codeql-action/commit/905ae4af531685eaee37e94f46845bf4c420dc62""><code>905ae4a</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2163"">#2163</a> from github/mergeback/v3.24.5-to-main-47b3d888</li>; <li><a href=""https://github.com/github/codeql-action/commit/6dab9f2356bef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See ful",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:14197,update,updates,14197,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['update'],['updates']
Deployability,"on: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 fi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:1812,Release,Release,1812,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Release'],['Release']
Deployability,"on\mesonbuild\backend\ninjabackend.py"", line 3062, in generate_link; dep_targets.extend(self.guess_external_link_dependencies(linker, target, commands, internal)); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2907, in guess_external_link_dependencies; search_dirs, static_patterns); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2848, in guess_library_absolute_path; trial = CCompiler._get_file_from_list(self.environment, trial); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\compilers\mixins\clike.py"", line 1036, in _get_file_from_list; if p.is_file():; File ""C:\Users\zeng\AppData\Local\Programs\Python\Python37\lib\pathlib.py"", line 1387, in is_file; return S_ISREG(self.stat().st_mode); File ""C:\Users\zeng\AppData\Local\Programs\Python\Python37\lib\pathlib.py"", line 1183, in stat; return self._accessor.stat(self); OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'C:\\ProgramData\\chocolatey\\lib\\mingw\\tools\\install\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\libC:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'. I noticed that other people on Github have also raised this issue, but they are on the second step `ninja -C build install` when I got this error on the first step `py meson.py build`. so the solve solutions are not work for me. For issue #1471 I found this silimar proplem between 7.3.1. thanks！. **To Reproduce**; Please provide a config file and mesh for a minimal example that recreates the problem.; [meson-log.txt](https://github.com/su2code/SU2/files/12335918/meson-log.txt); [meson-info.json.txt](https://github.com/su2code/SU2/files/12335924/meson-info.json.txt). **Desktop (please complete the following information):**; OS: [win11 ]; C++ compiler and version: [ g++ (GCC) 8.1.0]; MPI implementation and version: [Microsoft MPI v10.1.2]; SU2 Version: [v7.5.1]. **Other informations:**; the full console output : [conso",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2106:2133,install,install,2133,https://su2code.github.io,https://github.com/su2code/SU2/issues/2106,1,['install'],['install']
Deployability,"ope of this release, the support for reading python version from pyproject.toml was added (<a href=""https://redirect.github.com/actions/setup-python/pull/669"">actions/setup-python#669</a>).</p>; <pre lang=""yaml""><code> - name: Setup Python; uses: actions/setup-python@v4; &lt;/tr&gt;&lt;/table&gt; ; </code></pre>; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/setup-python/commit/0a5c61591373683505ea898e09a3ea4f39ef2b9c""><code>0a5c615</code></a> Update action to node20 (<a href=""https://redirect.github.com/actions/setup-python/issues/772"">#772</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/0ae58361cdfd39e2950bed97a1e26aa20c3d8955""><code>0ae5836</code></a> Add example of GraalPy to docs (<a href=""https://redirect.github.com/actions/setup-python/issues/773"">#773</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/b64ffcaf5b410884ad320a9cfac8866006a109aa""><code>b64ffca</code></a> update actions/checkout to v4 (<a href=""https://redirect.github.com/actions/setup-python/issues/761"">#761</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/8d2896179abf658742de432b3f203d2c2d86a587""><code>8d28961</code></a> Examples now use checkout@v4 (<a href=""https://redirect.github.com/actions/setup-python/issues/738"">#738</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/7bc6abb01e0555719edc2dbca70a2fde309e5e56""><code>7bc6abb</code></a> advanced-usage.md: Encourage the use actions/checkout@v4 (<a href=""https://redirect.github.com/actions/setup-python/issues/729"">#729</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/e8111cec9d3dc15220d8a3b638f08419f57b906a""><code>e8111ce</code></a> Bump <code>@​babel/traverse</code> from 7.9.0 to 7.23.2 (<a href=""https://redirect.github.com/actions/setup-python/issues/743"">#743</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/a00ea43da65e7c04d2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:5367,update,update,5367,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['update'],['update']
Deployability,"option to fetch tags even if fetch-depth &gt; 0</a></li>; </ul>; <h2>v3.5.3</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1196"">Fix: Checkout fail in self-hosted runners when faulty submodule are checked-in</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1287"">Fix typos found by codespell</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1369"">Add support for sparse checkouts</a></li>; </ul>; <h2>v3.5.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1289"">Fix api endpoint for GHES</a></li>; </ul>; <h2>v3.5.1</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1246"">Fix slow checkout on Windows</a></li>; </ul>; <h2>v3.5.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1237"">Add new public key for known_hosts</a></li>; </ul>; <h2>v3.4.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1209"">Upgrade codeql actions to v2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1210"">Upgrade dependencies</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1225"">Upgrade <code>@​actions/io</code></a></li>; </ul>; <h2>v3.3.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1045"">Implement branch list using callbacks from exec function</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1050"">Add in explicit reference to private checkout options</a></li>; <li>[Fix comment typos (that got added in <a href=""https://redirect.github.com/actions/checkout/issues/770"">#770</a>)](<a href=""https://redirect.github.com/actions/checkout/pull/1057"">actions/checkout#1057</a>)</li>; </ul>; <h2>v3.2.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/942"">Add GitHub Action to perform release</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/967"">Fix status badge</a></li>; <li><a href",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:7615,Upgrade,Upgrade,7615,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Upgrade'],['Upgrade']
Deployability,or ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial College London. |; | - Prof. Vincent Terrapon's group at the University of Liege. |; | - Prof. Edwin van der Weide's group at the University,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6779,Release,Release,6779,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['Release'],['Release']
Deployability,"or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:3395,release,released,3395,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['release'],['released']
Deployability,"oring duplicate libraries: '-lz'; [710/711] Linking target SU2_DOT/src/SU2_DOT; ld: warning: -undefined error is deprecated; ld: warning: ignoring duplicate libraries: '-lz'; [710/711] Installing files.; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Traceback (most recent call last):; File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/mesonmain.py"", line 146, in run; return options.run_func(options); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 811, in run; installer.do_install(datafilename); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 587, in do_install; self.install_targets(d, dm, destdir, fullprefix); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 730, in install_targets; file_copied = self.do_copyfile(fname, outname, makedirs=(dm, outdir)); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 458, in do_copyfile; self.copy2(from_file, to_file); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 353, in copy2; shutil.copy2(*args, **kwargs); File ""/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/shutil.py"", line 432, in copy2; copyfile(src, dst, follow_symlinks=follow_symlinks); File ""/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/shutil.py"", line 261, in copyfile; with open(src, 'rb') as fsrc, open(dst, 'wb') as fdst:; PermissionError: [Errno 13] Permission denied: '/usr/local/bin/SU2_CFD'. ERROR: Unhandled python exception. This is a Meson bug and should be reported!; FAILED: meson-install ; /Library/Frameworks/Python.framework/Versions/3.9/bin/python3 /Users/vanessachung/Downloads/SU2-8.0.0/meson.py install --no-rebuild. **Desktop (please complete the following information):**; - OS: Mac M1; - C++ compiler and version: Apple clang version 15.0.0 (clang-1500.1.0.2.5); - SU2 Version: v8.0.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2199:2840,install,install,2840,https://su2code.github.io,https://github.com/su2code/SU2/issues/2199,2,['install'],['install']
Deployability,"oupled discrete adjoint sensitivity analysis. These bottlenecks include a lack of flexibility, modularity, and robustness of the computational tools, as well as the potential startup development costs needed to implement and verify the MDAO features. The purpose of this work is to facilitate the coupling of SU2 with external structural codes (e.g. NASTRAN, TACS, Airbus structural suite Lagrange) for gradient-based aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:1151,integrat,integration,1151,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['integrat'],['integration']
Deployability,"ow match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" case shouldnt be counted for this I feel). **To Reproduce**; I post my setups later here. Cannot upload through vpn. I also use a simple bash script to do these comparisons for me. So the chance for manual errors is much lower. **Additional Notes**; A few things ahead, I run FGMRES+ILU for all configurations. No periodic boundaries at all. I went without turbulence for the cht cases to make it simpler. In the past and now we were able to see some good gradient validation against FD. So this issue is not super dramatic (although I am pretty annoyed by that) and I think I simply overlooked it in the past. In case there is sth unclear pls let me know, I'll will try to clarify asap. I still have some debugging to do but I appreciate all hints as I am currently more poking into the fog. . Thanks already , Tobi. **Desktop (please complete the following information):**; - OS: [RHELS 7.6 Maipo]; - C++ compiler and version: [g++ (GCC) 5.3.0]; - MPI implementation and version: [OpenMPI 3.1.6]; - SU2 Version: [#1394]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1395:6345,configurat,configurations,6345,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395,1,['configurat'],['configurations']
Deployability,"p towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148:2102,update,updated,2102,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148,1,['update'],['updated']
Deployability,"p-python's releases</a>.</em></p>; <blockquote>; <h2>v5.0.0</h2>; <h2>What's Changed</h2>; <p>In scope of this release, we update node version runtime from node16 to node20 (<a href=""https://redirect.github.com/actions/setup-python/pull/772"">actions/setup-python#772</a>). Besides, we update dependencies to the latest versions.</p>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0"">https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0</a></p>; <h2>v4.8.0</h2>; <h2>What's Changed</h2>; <p>In scope of this release we added support for GraalPy (<a href=""https://redirect.github.com/actions/setup-python/pull/694"">actions/setup-python#694</a>). You can use this snippet to set up GraalPy:</p>; <pre lang=""yaml""><code>steps:; - uses: actions/checkout@v4; - uses: actions/setup-python@v4 ; with:; python-version: 'graalpy-22.3' ; - run: python my_script.py; </code></pre>; <p>Besides, the release contains such changes as:</p>; <ul>; <li>Trim python version when reading from file by <a href=""https://github.com/FerranPares""><code>@​FerranPares</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/628"">actions/setup-python#628</a></li>; <li>Use non-deprecated versions in examples by <a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/724"">actions/setup-python#724</a></li>; <li>Change deprecation comment to past tense by <a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/723"">actions/setup-python#723</a></li>; <li>Bump <code>@​babel/traverse</code> from 7.9.0 to 7.23.2 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/743"">actions/setup-python#743</a></li>; <li>advanced-usage.md: Encourage the use actions/checkout@v4 by <a href=""https://gi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:1178,release,release,1178,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['release'],['release']
Deployability,"p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:1545,release,release-asset,1545,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['release'],['release-asset']
Deployability,"pare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:12142,upgrade,upgrade,12142,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,6,['upgrade'],['upgrade']
Deployability,"pare/v3...v4.0.0"">https://github.com/actions/upload-artifact/compare/v3...v4.0.0</a></p>; <h2>v3.1.3</h2>; <h2>What's Changed</h2>; <ul>; <li>chore(github): remove trailing whitespaces by <a href=""https://github.com/ljmf00""><code>@​ljmf00</code></a> in <a href=""https://redirect.github.com/actions/upload-artifact/pull/313"">actions/upload-artifact#313</a></li>; <li>Bump <code>@​actions/artifact</code> version to v1.1.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/upload-artifact/pull/436"">actions/upload-artifact#436</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/upload-artifact/compare/v3...v3.1.3"">https://github.com/actions/upload-artifact/compare/v3...v3.1.3</a></p>; <h2>v3.1.2</h2>; <ul>; <li>Update all <code>@actions/*</code> NPM packages to their latest versions- <a href=""https://redirect.github.com/actions/upload-artifact/issues/374"">#374</a></li>; <li>Update all dev dependencies to their most recent versions - <a href=""https://redirect.github.com/actions/upload-artifact/issues/375"">#375</a></li>; </ul>; <h2>v3.1.1</h2>; <ul>; <li>Update actions/core package to latest version to remove <code>set-output</code> deprecation warning <a href=""https://redirect.github.com/actions/upload-artifact/issues/351"">#351</a></li>; </ul>; <h2>v3.1.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump <code>@​actions/artifact</code> to v1.1.0 (<a href=""https://redirect.github.com/actions/upload-artifact/pull/327"">actions/upload-artifact#327</a>); <ul>; <li>Adds checksum headers on artifact upload (<a href=""https://redirect.github.com/actions/toolkit/pull/1095"">actions/toolkit#1095</a>) (<a href=""https://redirect.github.com/actions/toolkit/pull/1063"">actions/toolkit#1063</a>)</li>; </ul>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/5d5d22a31266ced268874388b861e4b58bb5c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:2763,Update,Update,2763,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['Update'],['Update']
Deployability,"parmetis.a externals/tecio/teciompisrc/libteciompi.a /usr/lib64/libpython3.10.so /usr/lib64/libz.a -lm -ldl -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags /usr/lib64/openmpi/lib/libmpi.so -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags /usr/lib64/openmpi/lib/libmpi_cxx.so -Wl,--start-group /opt/intel/oneapi/mkl/latest/lib/pkgconfig/../../lib/intel64/libmkl_intel_lp64.a /opt/intel/oneapi/mkl/latest/lib/pkgconfig/../../lib/intel64/libmkl_sequential.a /opt/intel/oneapi/mkl/latest/lib/pkgconfig/../../lib/intel64/libmkl_core.a -Wl,--end-group -lpthread -Wl,--end-group -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,--start-group -Wl,--end-group -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags; /usr/bin/ld: /usr/lib64/libz.a(deflate.o): warning: relocation against `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib64/libz.a(zutil.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status; ninja: build stopped: subcommand failed. ```. I do use the -fPIC option for the compilation process but even if I remove it from the configuration execution line I still get the same linking error. **Desktop (please complete the following information):**. - OS: Linux (Fedora 35); - C++ 11.2.1 20220127 (Red Hat 11.2.1-9) (GCC); - MPI implementation and version: OpenMPI v4.1.1; - SU2 Version: v7.3.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:16050,configurat,configuration,16050,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['configurat'],['configuration']
Deployability,"pd.read_csv(config[""CONV_FILENAME""]); 164 if auto_delete:; 165 delete_output_files(config, config_path, num_zones). File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/pandas/io/parsers/readers.py:1024, in read_csv(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend); 1011 kwds_defaults = _refine_defaults_read(; 1012 dialect,; 1013 delimiter,; (...); 1020 dtype_backend=dtype_backend,; 1021 ); 1022 kwds.update(kwds_defaults); -> 1024 return _read(filepath_or_buffer, kwds). File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/pandas/io/parsers/readers.py:618, in _read(filepath_or_buffer, kwds); 615 _validate_names(kwds.get(""names"", None)); 617 # Create the parser.; --> 618 parser = TextFileReader(filepath_or_buffer, **kwds); 620 if chunksize or iterator:; 621 return parser. File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/pandas/io/parsers/readers.py:1618, in TextFileReader.__init__(self, f, engine, **kwds); 1615 self.options[""has_index_names""] = kwds[""has_index_names""]; 1617 self.handles: IOHandles | None = None; -> 1618 self._engine = self._make_engine(f, self.engine). File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/pandas/io/parsers/readers.py:1878, in TextFileReader._make_engine(self, f, engine); 1876 if ""b"" not in mode:; 1877 mode += ""b""; -> 1878 self.handles = get_handle(; 1879 f,; 1880 mode,; 1881 encoding=self.options.get(""encoding"", None),; 1882 compression=self.options.get(""com",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2204:4641,update,update,4641,https://su2code.github.io,https://github.com/su2code/SU2/issues/2204,1,['update'],['update']
Deployability,"pecifically from the Testcases I tried:; ; - `turbomachinery/APU_turbocharger/Jones_rst.cfg`; - `sliding_interface/rotating_cylinders/rot_cylinders_WA.cfg` (I saw a regression test failing for @economon which I was able to reproduce). I did some debugging and I think the code is wrong in `CBaseLineSolver::LoadRestart(...)` in solver_structure.cpp starting in line 3925. Inside that routine the `geometry` container is called as `geometry[iZone]` to address the final `C(Physical)Geometry` object. I think that the addressable level is the instance level i.e. it should be `geometry[iInst]`. ; As the Jones_rst case has two zones but only one instance the object `geometry[iZone=1]` in LoadRestart refers to what is `geometry_container[iZone=1][iInst=1]` in SU2_SOL.cpp - which does not exists and should be `geometry_container[iZone=1][iInst=0]`. Unfortunately it does not fail there directly for as it reaches (I guess) valid memory and simply interprets what it finds which leads to wrong evaluation of e.g. `GetnDim()=2376` or so. . I extracted a patch (apply with `patch -p1 < _patchfile_ ` in the root of the code directory) for the current develop branch which fixes the segfault problem for the above mentioned cases but I don't know whether it works correctly if multiple Instances are computed. ; [SU2_SOL_segfault_patch.txt](https://github.com/su2code/SU2/files/2328459/SU2_SOL_segfault_patch.txt) (github does not accept *.patch files...). Is there a testcase which covers multiple zones and multiple instances. At best with nZones!=nInstances? Can somebody confirm that this is actually a bug and if the patch fixes it? I probably don't know if it occurs somewhere else, so if somebody thinks their problems are related let me know. It is no problem to do a PR if I get some feedback. The (possible) bug was introduced here https://github.com/su2code/SU2/commit/1a75ebd0343694977a98c945833928bcc96932c1 . I hope my explanation of the bug above is somewhat understandable :); Cheers Tobi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/568:1169,patch,patch,1169,https://su2code.github.io,https://github.com/su2code/SU2/issues/568,4,['patch'],['patch']
Deployability,"pers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/167",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:1264,update,update,1264,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['update'],['update']
Deployability,"piler.; There is a problem when trying to link with the system's libz library. ```; /usr/bin/ld: /usr/lib64/libz.a(deflate.o): warning: relocation against `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib64/libz.a(zutil.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status. ```; **To Reproduce**. I configured the source code with the commands:. ```; module load mkl/latest; module load mpi/openmpi-x86_64. CFLAGS=""-mtune=native -march=native -fPIC"" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:1161,Release,Release,1161,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['Release'],['Release']
Deployability,"pp.o SU2_CFD/src/libSU2core.a.p/iteration_CFEAIteration.cpp.o SU2_CFD/src/libSU2core.a.p/iteration_CFEMFluidIteration.cpp.o SU2_CFD/src/libSU2core.a.p/iteration_CFluidIteration.cpp.o SU2_CFD/src/libSU2core.a.p/iteration_CHeatIteration.cpp.o SU2_CFD/src/libSU2core.a.p/iteration_CTurboIteration.cpp.o SU2_CFD/src/libSU2core.a.p/limiters_CLimiterDetails.cpp.o ; -Wl,--as-needed -Wl,--no-undefined -shared -fPIC -Wl,--start-group -Wl,-soname,_pysu2.so -Wl,-rpath,/usr/local/lib -Wl,-rpath-link,/usr/local/lib Common/src/libSU2Common.a externals/cgns/libcgns.a externals/cgns/hdf5/libsu2hdf5.a ; externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/libpython3.8.so /usr/lib/x86_64-linux-gnu/libz.a -lm -ldl -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags /usr/local/lib/libmpi.so -Wl,--end-group -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags; /usr/bin/ld: /usr/lib/x86_64-linux-gnu/libz.a(deflate.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC. /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status; [1352/1355] Linking target SU2_DOT/src/SU2_DOT_AD; ninja: build stopped: subcommand failed.; ```. I am not sure what is the bug here. I have seen some reports on the Python 3.8 update related swig issue. I am not sure if this is related to that bug.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1605:13283,update,update,13283,https://su2code.github.io,https://github.com/su2code/SU2/issues/1605,1,['update'],['update']
Deployability,"ps in reducing numerical diffusion offered by the scheme. Results from the literature shows that using the vorticity confinement technique, a better resolution is achieved in the problems like flow behind bluff bodies, rotors, wings etc. References. J. Steinhoff and D. Underhill, ``Modification of the euler equations for vorticity confinement: Application to the computation of interacting vortex rings,'' Physics of Fluids, vol.6, no.8, pp. 2738--2744, 1994. https://doi.org/10.1063/1.868164. D. A. Caughey and M. M. Hafez, Frontiers of Computational Fluid Dynamics 2006. WORLD SCIENTIFIC, 2005. https://www.worldscientific.com/doi/abs/10.1142/5963. R. Loehner and C. Yang, Vorticity confinement on unstructured grids, 40th AIAA Aerospace Sciences Meeting &amp; Exhibit, 2002. [Online]. Available: https://arc. aiaa.org/doi/abs/10.2514/6.2002-137. A. Povitsky and K. C. Pierson, ``Vorticity confinement applied to accurate prediction of convection of wing tip vortices and induced drag,'' International Journal of Computational Fluid Dynamics, vol. 35, no. 3, pp. 143--156, 2021. https://doi.org/10.1080/10618562.2020.1856822. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1854:2593,update,updated,2593,https://su2code.github.io,https://github.com/su2code/SU2/pull/1854,1,['update'],['updated']
Deployability,"ps://redirect.github.com/actions/checkout/pull/1196"">Fix: Checkout fail in self-hosted runners when faulty submodule are checked-in</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1287"">Fix typos found by codespell</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1369"">Add support for sparse checkouts</a></li>; </ul>; <h2>v3.5.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1289"">Fix api endpoint for GHES</a></li>; </ul>; <h2>v3.5.1</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1246"">Fix slow checkout on Windows</a></li>; </ul>; <h2>v3.5.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1237"">Add new public key for known_hosts</a></li>; </ul>; <h2>v3.4.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1209"">Upgrade codeql actions to v2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1210"">Upgrade dependencies</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1225"">Upgrade <code>@​actions/io</code></a></li>; </ul>; <h2>v3.3.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1045"">Implement branch list using callbacks from exec function</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1050"">Add in explicit reference to private checkout options</a></li>; <li>[Fix comment typos (that got added in <a href=""https://redirect.github.com/actions/checkout/issues/770"">#770</a>)](<a href=""https://redirect.github.com/actions/checkout/pull/1057"">actions/checkout#1057</a>)</li>; </ul>; <h2>v3.2.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/942"">Add GitHub Action to perform release</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/967"">Fix status badge</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1002"">Replace datadog/squid with ubuntu/squid Docker",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:7723,Upgrade,Upgrade,7723,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Upgrade'],['Upgrade']
Deployability,"r that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:2457,Update,Update,2457,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Update'],['Update']
Deployability,"r::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5782,integrat,integration,5782,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,"rces files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing properties of said multicomp flow). That PR is built upon #1223 but will merge this PR (once it is done) and throw out all additional changes in order to be merged into develop without relying on feature_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330:1501,integrat,integrated,1501,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330,1,['integrat'],['integrated']
Deployability,reating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial College London. |; | - Prof. Vincent Terrapon's group at the University of Liege. |; | - Prof. Edwin van der Weide's group at the University of Twente. |; | - Lab. of New Concepts in Aeronautics at Tech. Inst. of Aeronautics. |; -------------------------------------------------------------------------; | Copyright 2012-20,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6950,release,release,6950,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['release'],['release']
Deployability,"recently (in develop) scale/rotate/translate were changed to do volume deformations (aka, all at once and not requiring a linear elasticity solve to get the updated volume mesh). This branch includes changes to allow scaling, translating, or rotating only a surface w/in the volume. If all markers are included in the deformation, it returns to the all-at-once volume deformation. . Hypothetically this should allow multi-body movements (as in, rotating a control surface) while maintaining the more efficient volume deformation for operations like scaling the mesh.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187:157,update,updated,157,https://su2code.github.io,https://github.com/su2code/SU2/pull/187,1,['update'],['updated']
Deployability,"reported by @jtlau . > I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":; > ; > Configuring H5pubconf.h using configuration; > ; > externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; > ; > I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; > LMK if you need the full configure error",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1507:141,configurat,configuration,141,https://su2code.github.io,https://github.com/su2code/SU2/issues/1507,1,['configurat'],['configuration']
Deployability,"res python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major advantage: we can now properly use ccache and the caching feature of travis (that means only files that have changed will be compiled if a cache is available). This should speed up the runs by a lot. . - automake and meson can coexist without any problems. Maybe we can keep this compatibility for version 7 and remove it later if we all agree. Also the preconfigure.py should not be necessary anymore then. - (unit) tests can be easily added and integrated into the build process. - I will add a proper documentation soon. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #685 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:3392,integrat,integrated,3392,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['integrat'],['integrated']
Deployability,"rity-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:4015,integrat,integration,4015,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['integrat'],['integration']
Deployability,"rning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:624:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:614:26: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~; ./sources/Python3.7/amgio_py.c:614:7: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:2606,Release,Release,2606,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['Release'],['Release']
Deployability,"rrently working on the backward facing step and I will work on the flatplate too. The choice of the validation test cases is key since the computational cost is quite large, thus if you have any suggestions that may speed up this part then feel free to write them down. . Implemented versions:; - SST-DDES; - SST-IDDES; - SST-SIDDES. I am also working on the Scale Adaptive Simulations (SAS) implementations for SST, following the work in ""ON URANS SOLUTIONS WITH LES-LIKE BEHAVIOUR"", Travis et al., and ""[Evaluation of scale-adaptive simulation for transonic cavity flows"", Babu et al., (https://www.inderscienceonline.com/doi/abs/10.1504/IJESMS.2016.075510). The last one, especially, is quite tricky due to the computation of the velocity laplacian. I tried computing it in Paraview as the divergence of the gradient field and it seems quite similar, but it is the first time that I've touched that section of the code, thus some work might still be needed. Implemented versions:; - SST-SAS_Simple (better naming is necessary), from the article of Travis et al.; - SST-SAS_Complicated (better naming is necessary), it is related to the article from Babu et al. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150:2248,update,updated,2248,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150,1,['update'],['updated']
Deployability,rs\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:7751,Install,Installing,7751,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,rs\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/st,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4995,Install,Installing,4995,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"s in [https://github.com/su2code/SU2/issues/948#issuecomment-619334494](url):. > The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback.; > ; > Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; > ; > ```; > #!/usr/bin/env python; > ```; > ; > uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?; > ; > If it didn't build/install, you could go into extensions/AMGIO/su2io and run; > ; > ```; > python3 setup.py build_ext && python3 setup.py install; > ```; > ; > If it did build/install, try the command; > ; > ```; > python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; > ```. After doing `python3 setup.py build_ext && python3 setup.py install`, I encountered the following error:. > ```; > (temp_su5) takashi279@turing1:/dfs/user/takashi279/plasma/design/multiscale_adap3/SU2/externals/AMGIO/su2io$ python3 setup.py build_ext && python3 setup.py install; > running build_ext; > running install; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/install.py:37: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.; > setuptools.SetuptoolsDeprecationWarning,; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/easy_install.py:147: EasyInstallDeprecationWarning: easy_install command is deprecated. Use build and pip and other standards-based tools.; > EasyInstallDeprecationWarning,; > running bdist_egg; > error: Invalid distribution name or version syntax: -amgio-2.1.1; > ```. Am I missing any dependencies? I previously compiled SU2 feature_adap branch without issues, and have already installed pyAMG. M",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1699:1895,install,install,1895,https://su2code.github.io,https://github.com/su2code/SU2/issues/1699,1,['install'],['install']
Deployability,"s pyBeam, a non-linear open source beam solver, into the SU2 infrastructure as a subproject, and adds support for coupled FSI simulations using SU2's flow solver and pyBeam's structural solver. Tutorials on how to use the implementation will come soon. At this point, only minor changes to the compilation and the python scripts are required. The impact to the core of the code is minor. I will be away for a few days, but please go ahead and have a look/comment/find room for improvement in the meantime :) I will reply to your comments as soon as I'm back to office. I also added a couple of test cases, but I haven't yet found the best way to hook them to our regression test system. I'll definitely look into it before the PR is merged, but due to personal time constraints, it'd be great if this could be integrated for 7.0.3. ## Related Work; This work is the result of a collaboration with @RoccoBombardieri and @crauno from the University Carlos III Madrid. . Please refer to a recent [paper at EUROGEN 2019](https://www.researchgate.net/publication/335972259_Towards_an_open-source_framework_for_aero-structural_design_and_optimization_within_the_SU2_suite) with regards to this work. Full reference will be provided here upon publication in an Springer ECCOMAS book series. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/902:1945,update,updated,1945,https://su2code.github.io,https://github.com/su2code/SU2/pull/902,1,['update'],['updated']
Deployability,"s**. For less than or equal to 6 processors there is no error. I have this issue with 7.04, 7.1 and now 7.1.1. . This issue has a previous bug report in the MPI partitioning issues for Turbomachinery runs #990. I am sure the config file is correct. I have my solutions from 6 processors, but I really need to scale up the processor count so that the restitution time is within a reasonable time.; Below is an example of where it crashes for 7 processors: ; ### WITH 7 processors:; ---------------------- Turbomachinery Preprocessing ---------------------. Initialize Turbo Vertex Structure.; **_Number of span-wise sections in Zone 0: 139. [This is incorrect number of span-wise sections]_**; Max number of span-wise sections among all zones: 139.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; [1:node0567] unexpected disconnect completion event from [0:node0564]; [3:node0566] unexpected disconnect completion event from [0:node0564]. ### WITH 6 processors:; Initialize Turbo Vertex Structure.; **Number of span-wise sections in Zone 0: 137. [This is the correct number of span-wise sections]**; Max number of span-wise sections among all zones: 137.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Transfer average geometric quantities to zone 0.; Inlet area for Row 1: 30.7045 cm^2.; Oulet area for Row 1: 16.9716 cm^2.; Recomputed number of blades for Row 1: 36.; Initialize inflow and outflow average solution quantities.; Inlet flow angle for Row 1: -0.00422866°.; Outlet flow angle for Row 1: -28.9224°.; ------------------------------ Begin Solver -----------------------------; ....... System settings:; **CLUSTER**; - OS: CentOS release 6.5; - C++ compiler and version: GCC/7.3.0-2.30; - MPI implementation and version: compiler/intel/2018.0.1 intelmpi/2018.0.1/64 mkl/2018.0.1; - SU2 Version: [v7.1 and 7.1.1]; Thanks; Ashvin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1219:2252,release,release,2252,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219,1,['release'],['release']
Deployability,"s/checkout/pull/1437"">actions/checkout#1437</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v3.5.3...v3.6.0"">https://github.com/actions/checkout/compare/v3.5.3...v3.6.0</a></p>; <h2>v3.5.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Fix: Checkout Issue in self hosted runner due to faulty submodule check-ins by <a href=""https://github.com/megamanics""><code>@​megamanics</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1196"">actions/checkout#1196</a></li>; <li>Fix typos found by codespell by <a href=""https://github.com/DimitriPapadopoulos""><code>@​DimitriPapadopoulos</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1287"">actions/checkout#1287</a></li>; <li>Add support for sparse checkouts by <a href=""https://github.com/dscho""><code>@​dscho</code></a> and <a href=""https://github.com/dfdez""><code>@​dfdez</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1369"">actions/checkout#1369</a></li>; <li>Release v3.5.3 by <a href=""https://github.com/TingluoHuang""><code>@​TingluoHuang</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1376"">actions/checkout#1376</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/megamanics""><code>@​megamanics</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1196"">actions/checkout#1196</a></li>; <li><a href=""https://github.com/DimitriPapadopoulos""><code>@​DimitriPapadopoulos</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1287"">actions/checkout#1287</a></li>; <li><a href=""https://github.com/dfdez""><code>@​dfdez</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1369"">actions/checkout#1369</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v3...v3.5.3"">https://git",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:3666,Release,Release,3666,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Release'],['Release']
Deployability,"s://github.com/actions/download-artifact/commit/47f9ce604fdcae5583e5ef84048eeb7ef2893652""><code>47f9ce6</code></a> update <code>@​actions/artifact</code></li>; <li><a href=""https://github.com/actions/download-artifact/commit/127824d34cb0da7dc3cb064a37ae280b7c09aca6""><code>127824d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/download-artifact/issues/299"">#299</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/download-artifact/commit/6dd49bff0a6150b47d41011c034b762053acaf6f""><code>6dd49bf</code></a> licensed only artifact</li>; <li><a href=""https://github.com/actions/download-artifact/commit/f71c0e3da3bb6b4fcc53196b9ac75ee981db5bc6""><code>f71c0e3</code></a> Revert &quot;licensed&quot;</li>; <li><a href=""https://github.com/actions/download-artifact/commit/7c63dfde29f42bb9cb0f61b67e54c91106a6586e""><code>7c63dfd</code></a> licensed</li>; <li><a href=""https://github.com/actions/download-artifact/commit/67d37cd34678091933f0a88cd1bb026171ea20d2""><code>67d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automer",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:4316,Update,Update,4316,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['Update'],['Update']
Deployability,"s</a></li>; </ul>; <h2>v3.4.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1209"">Upgrade codeql actions to v2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1210"">Upgrade dependencies</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1225"">Upgrade <code>@​actions/io</code></a></li>; </ul>; <h2>v3.3.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1045"">Implement branch list using callbacks from exec function</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1050"">Add in explicit reference to private checkout options</a></li>; <li>[Fix comment typos (that got added in <a href=""https://redirect.github.com/actions/checkout/issues/770"">#770</a>)](<a href=""https://redirect.github.com/actions/checkout/pull/1057"">actions/checkout#1057</a>)</li>; </ul>; <h2>v3.2.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/942"">Add GitHub Action to perform release</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/967"">Fix status badge</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1002"">Replace datadog/squid with ubuntu/squid Docker image</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/964"">Wrap pipeline commands for submoduleForeach in quotes</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1029"">Update <code>@​actions/io</code> to 1.1.2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1039"">Upgrading version to 3.2.0</a></li>; </ul>; <h2>v3.1.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/939"">Use <code>@​actions/core</code> <code>saveState</code> and <code>getState</code></a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/922"">Add <code>github-server-url</code> input</a></li>; </ul>; <h2>v3.0.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/che",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:8510,release,release,8510,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['release'],['release']
Deployability,"s\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\Users\\Danie\\Anaconda3\\envs\\vsptools\\python.exe"" ""C:\\Users\\Danie\\Documents\\SU2\\meson.p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:8308,Install,Installing,8308,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,se lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optim,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3385,Install,Installing,3385,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"sting './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the next set of similar error messages appears. This patch fix such `TabError`, `SyntaxError` (for `raise` and `print` functions), replace some indent tabs with spaces (generally with 8 spaces) before comments, remove trailing spaces where needed. Please fix this small issue as resulting patch to fix it for distributive build script is rather huge (~ 100 Kb). Many changes are in `SU2_PY/FSI/FSIInterface.py` and the `Split` mode of github change preview is more suitable to compare and to recheck the correctness of new indentation (or via Meld application). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/983:2285,patch,patch,2285,https://su2code.github.io,https://github.com/su2code/SU2/pull/983,2,"['patch', 'update']","['patch', 'updated']"
Deployability,"sts. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:4373,update,updated,4373,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['update'],['updated']
Deployability,"t convergence criteria at iteration number; CONV_STARTITER= 10; %; % Number of elements to apply the criteria; CONV_CAUCHY_ELEMS= 100; %; % Epsilon to control the series convergence; CONV_CAUCHY_EPS= 1E-10; %. % ------------------------- INPUT/OUTPUT INFORMATION --------------------------%; %; % Mesh input file; MESH_FILENAME= NLU_Baseline.su2; %; % Mesh input file format (CGNS, NETCDF_ASCII); MESH_FORMAT= SU2; %; % Mesh output file; MESH_OUT_FILENAME= mesh_caradonna_tung_periodic.su2; %; % Restart flow input file; SOLUTION_FILENAME= solution_flow.dat; %; % Restart adjoint input file; SOLUTION_ADJ_FILENAME= solution_adj.dat; %; TABULAR_FORMAT= CSV; %; % Output file convergence history (w/o extension) ; CONV_FILENAME= history; %; % Output file restart flow; RESTART_FILENAME= restart_flow.dat; %; % Output file restart adjoint; RESTART_ADJ_FILENAME= restart_adj.dat; %; % Output file flow (w/o extension) variables; VOLUME_FILENAME= flow; %; % Output file adjoint (w/o extension) variables; VOLUME_ADJ_FILENAME= adjoint; %; % Output Objective function gradient (using continuous adjoint); GRAD_OBJFUNC_FILENAME= of_grad.dat; %; % Output file surface flow coefficient (w/o extension); SURFACE_FILENAME= surface_flow; %; % Output file surface adjoint coefficient (w/o extension); SURFACE_ADJ_FILENAME= surface_adjoint; %; % Writing solution file frequency; OUTPUT_WRT_FREQ= 10; %. SCREEN_OUTPUT= (INNER_ITER, WALL_TIME, RMS_RES, FORCE_X, MOMENT_X); HISTORY_OUTPUT=(INNER_ITER, WALL_TIME, RMS_RES, AERO_COEFF)`. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]; 3 OS were used:; Ubuntu 22.04 on AWS; WSL with ubuntu 20.04 LST; Windows. Latest MPICH package was used on the ubuntu versions; (basically the one that come with a 'sudo apt-get install mpich'); Latest mpiexec version is used on windows. The code wa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:9453,continuous,continuous,9453,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['continuous'],['continuous']
Deployability,"t iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1217:2777,update,updated,2777,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217,1,['update'],['updated']
Deployability,"t/commit/3a8048248f2f288c271830f8ecf2a1c5d8eb0e9a""><code>3a80482</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/511"">#511</a> from actions/robherley/migration-docs-typo</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/9d63e3f2f81d9dc4e13d83fc330408f8a94b79d1""><code>9d63e3f</code></a> Merge branch 'main' into robherley/migration-docs-typo</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/dfa1ab292d2fdd78d056187f11c568c16ab53de9""><code>dfa1ab2</code></a> fix typo with v3 artifact downloads in migration guide</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d00351bf698398c17253d21cf8f90e57a344e14b""><code>d00351b</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/509"">#509</a> from markmssd/patch-1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/707f5a7b71e0fb01c5df1e16e9679a3292606ef2""><code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependab",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:5523,Update,Update,5523,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['Update'],['Update']
Deployability,"t: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3168,Install,Installing,3168,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,talling C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; In,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:7111,Install,Installing,7111,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"te the grid movement during the time domain simulation via the python interface; Involved parameters: ; GRID_MOVEMENT= ROTATING_FRAME; TRANSLATION_RATE= u v w ; ROTATION_RATE= p q r~~; - update the surface mesh deformation during the time domain simulation via the python interface ; Involved parameters: ; DEFORM_MESH= YES; MARKER_DEFORM_MESH= ( list of markers ). Summing up, I will need to combine the grid velocities due to aircraft movement, elasticity and gust. Currently, this is not possible in SU2. ; I split the work into the following steps. Here is what is working / not working:; - [x] gust with 3D meshes --> plausibility check with rectangular, 3 meter wing at 2° + long gust equivalent to 2° = approx doubling of the lift coefficient; - [x] ~~gust + moving grid --> plausibility check by comparison with farfield onflow condition from above~~; - [x] ~~new python interface for grid movement update --> plausibility check with a) sudden jump in heave velocity w, b) sinusoidal velocity w at different frequencies to observe influence of unsteady aerodynamics (phase shift and reduction of resulting lift)~~; - [x] mesh deformation via python interface --> plausibility check with sinusoidal displacement z, scaled and shifted by 90° to correspond to velocity w from above, leads to same results; - [ ] ~~mesh deformation + moving grid --> differences with respect to farfield onflow condition / does NOT lead to same results as above. The grid velocities look right though, both on the temporary screen output and when plotting them by slicing through the volume results, but the amplitude of the lift coefficient is too small. I guess that the velocities are not set properly / mixed up / require a call to some update function or similar. **I'm stuck at this point. Does someone have any idea what I'm doing wrong?? I feel that I am missing an important step here...**~~; - [ ] ~~final test: mesh deformation + moving grid + gust~~; - [x] final test: mesh deformation + gust. Apart fr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:2110,update,update,2110,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,1,['update'],['update']
Deployability,"te.h:997:74: note: expected 'H5T_t *' {aka 'struct H5T_t *'} but argument is of type 'const H5T_t *' {aka 'const struct H5T_t *'}; H5_DLL herr_t H5O_copy_expand_ref(H5F_t *file_src, hid_t tid_src, H5T_t *dt_src, void *buf_src,; ~~~~~~~^~~~~~; [50/903] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5C.c.obj; ninja: build stopped: subcommand failed.; PS C:\su2code-SU2-09ba9e3> python ninja.exe -C C:\su2code-SU2-09ba9e3\build install; SyntaxError: Non-UTF-8 code starting with '\x90' in file C:\su2code-SU2-09ba9e3\ninja.exe on line 1, but no encoding declared; see https://peps.python.org/pep-0263/ for details; PS C:\su2code-SU2-09ba9e3> python ninja.exe -C C:\su2code-SU2-09ba9e3\build install; SyntaxError: Non-UTF-8 code starting with '\x90' in file C:\su2code-SU2-09ba9e3\ninja.exe on line 1, but no encoding declared; see https://peps.python.org/pep-0263/ for details; PS C:\su2code-SU2-09ba9e3> ninja.exe -C C:\su2code-SU2-09ba9e3\build install; ninja: Entering directory `C:\su2code-SU2-09ba9e3\build'; [1/854] Linking target externals/cgns/hdf5/H5make_libsettings.exe; FAILED: externals/cgns/hdf5/H5make_libsettings.exe; ""gcc"" -o externals/cgns/hdf5/H5make_libsettings.exe externals/cgns/hdf5/H5make_libsettings.exe.p/H5make_libsettings.c.obj ""-Wl,--allow-shlib-undefined"" ""-Wl,-O1"" ""-Wl,--start-group"" ""-lz"" ""-lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi"" ""-Wl,--subsystem,console"" ""-lkernel32"" ""-luser32"" ""-lgdi32"" ""-lwinspool"" ""-lshell32"" ""-lole32"" ""-loleaut32"" ""-luuid"" ""-lcomdlg32"" ""-ladvapi32"" ""-Wl,--end-group""; C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; collect2.exe: error: ld returned 1 exit status; [2/854] Linking target externals/cgns/hdf5/H5detect.exe; FAILED: externals/cgns/hdf5/H5detect.exe; ""gcc"" -o externals/cgns/hdf5/H5detect.exe externals/cgns/hdf5/H5detect.exe.p/H5detect.c.obj ""-Wl,--allow-shlib-undefined"" ""-Wl,-O1"" ""-Wl,--",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1982:5331,install,install,5331,https://su2code.github.io,https://github.com/su2code/SU2/issues/1982,1,['install'],['install']
Deployability,"te_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 248, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 223, in urlopen; return opener.open(url, data, timeout); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 526, in open; response = self._open(req, data); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 544, in _open; '_open', req); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 504, in _call_chain; result = func(*args); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1361, in https_open; context=self._context, check_hostname=self._check_hostname); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1320, in do_open; raise URLError(err); urllib.error.URLError: <urlopen error [Errno 110] Connection timed out>. I have no idea why this is happening. I was able to install SU2 v7.0.3 this way. Any help regarding this will be greatly appreciated. These are the modules in the root directory. MeDiPack-6aef76912e7099c4f08c9705848797ca9e8070da.zip ; CoDiPack-1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8.zip ; meson-29ef4478df6d3aaca40c7993f125b29409be1de2.zip ; Mutationpp-5ff579f43781cae07411e5ab46291c9971536be6.zip ; ninja-52649de2c56b63f42bc59513d51286531c595b44.zip. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1335:2962,install,install,2962,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335,1,['install'],['install']
Deployability,the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Dani,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3996,Install,Installing,3996,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the program (compare 1st number 6 and 2nd number number 10).; The first waits at an `Allgather` and the 2nd at an `Allreduce`. . I am somewhat certain that the problem is this code bit which the second (the furhter back) backtrace points to. CSysVector.hpp -> `ScalarType dot` function l. 317; ```c++; /*--- Update shared variable with ""our"" partial sum. ---*/; atomicAdd",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:7570,integrat,integration,7570,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,"thon/pull/702"">actions/setup-python#702</a></li>; <li>Add range validation for toml files by <a href=""https://github.com/dmitry-shibanov""><code>@​dmitry-shibanov</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/726"">actions/setup-python#726</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4...v4.7.1"">https://github.com/actions/setup-python/compare/v4...v4.7.1</a></p>; <h2>v4.7.0</h2>; <p>In scope of this release, the support for reading python version from pyproject.toml was added (<a href=""https://redirect.github.com/actions/setup-python/pull/669"">actions/setup-python#669</a>).</p>; <pre lang=""yaml""><code> - name: Setup Python; uses: actions/setup-python@v4; &lt;/tr&gt;&lt;/table&gt; ; </code></pre>; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/setup-python/commit/0a5c61591373683505ea898e09a3ea4f39ef2b9c""><code>0a5c615</code></a> Update action to node20 (<a href=""https://redirect.github.com/actions/setup-python/issues/772"">#772</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/0ae58361cdfd39e2950bed97a1e26aa20c3d8955""><code>0ae5836</code></a> Add example of GraalPy to docs (<a href=""https://redirect.github.com/actions/setup-python/issues/773"">#773</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/b64ffcaf5b410884ad320a9cfac8866006a109aa""><code>b64ffca</code></a> update actions/checkout to v4 (<a href=""https://redirect.github.com/actions/setup-python/issues/761"">#761</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/8d2896179abf658742de432b3f203d2c2d86a587""><code>8d28961</code></a> Examples now use checkout@v4 (<a href=""https://redirect.github.com/actions/setup-python/issues/738"">#738</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/7bc6abb01e0555719edc2dbca70a2fde309e5e56""><code>7bc6abb</code></a> advanc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:4884,Update,Update,4884,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['Update'],['Update']
Deployability,"thub.com/github/codeql-action/pull/2121"">#2121</a></li>; </ul>; <h2>3.24.0 - 02 Feb 2024</h2>; <ul>; <li>CodeQL Python analysis will no longer install dependencies on GitHub Enterprise Server, as is already the case for GitHub.com. See <a href=""https://github.com/github/codeql-action/blob/main/#3230---08-jan-2024"">release notes for 3.23.0</a> for more details. <a href=""https://redirect.github.com/github/codeql-action/pull/2106"">#2106</a></li>; </ul>; <h2>3.23.2 - 26 Jan 2024</h2>; <ul>; <li>On Linux, the maximum possible value for the <code>--threads</code> option now respects the CPU count as specified in <code>cgroup</code> files to more accurately reflect the number of available cores when running in containers. <a href=""https://redirect.github.com/github/codeql-action/pull/2083"">#2083</a></li>; <li>Update default CodeQL bundle version to 2.16.1. <a href=""https://redirect.github.com/github/codeql-action/pull/2096"">#2096</a></li>; </ul>; <h2>3.23.1 - 17 Jan 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.0. <a href=""https://redirect.github.com/github/codeql-action/pull/2073"">#2073</a></li>; <li>Change the retention period for uploaded debug artifacts to 7 days. Previously, this was whatever the repository default was. <a href=""https://redirect.github.com/github/codeql-action/pull/2079"">#2079</a></li>; </ul>; <h2>3.23.0 - 08 Jan 2024</h2>; <ul>; <li>We are rolling out a feature in January 2024 that will disable Python dependency installation by default for all users. This improves the speed of analysis while having only a very minor impact on results. You can override this behavior by setting <code>CODEQL_ACTION_DISABLE_PYTHON_DEPENDENCY_INSTALLATION=false</code> in your workflow, however we plan to remove this ability in future versions of the CodeQL Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2031"">#2031</a></li>; <li>The CodeQL Action now requires CodeQL version 2.11.6 or later. For more information, see <a href=""http",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:12307,Update,Update,12307,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['Update'],['Update']
Deployability,"thub.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jor",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:2591,Update,Updated,2591,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Update'],['Updated']
Deployability,"tion/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect case insensitive file uploads</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Fix for certain symlinks not correctly being identified as directories before starting uploads</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Support for uploading artifacts with multiple paths</li>; <li>Support for using exclude paths</li>; <li>Updates to dependencies</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/3cea5372237819ed00197afe530f5a7ea3e805c8""><code>3cea537</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/327"">#327</a> from actions/robherley/artifact-1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/849aa7758a428ee22be38de371b49c8bd57c4b9d""><code>849aa77</code></a> nvm use 12 &amp; npm run release</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/4d3986961d0423ba9a593efb490a2960eb65f43b""><code>4d39869</code></a> recompile with correct ncc version</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2e0d362ec5cf81e334dda822c49c96dcd4b7df2c""><code>2e0d362</code></a> bump <code>@​actions/artifact</code> to 1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/09a5d6a283da3e7c9f3253a5d4cdab2347712a66""><code>09a5d6a</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/320"">#320</a> from actions/dependabot/npm_and_yarn/ansi-regex-4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/189315d9106f43a2a8eb60836608bb96b1f69d77""><code>189315d</code></a> Bump ansi-regex from 4.1.0 to 4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d159c2d80bf32e77611286e4d71bfe6d15208d88""><code>d159c2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:2908,release,release,2908,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['release'],['release']
Deployability,"tion=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the program (compare 1st number 6 and 2nd number number 10).; The first waits at an `Allgather` and the 2nd at an `Allreduce`. . I am somewhat certain that the problem is this code bit which the second (the furhter back) backtrace points to. CSysVector.hpp -> `ScalarType dot` function l. 317; ```c++; /*--- Update shared variable with ""our"" partial sum. ---*/; atomicAdd(sum, dotRes);; SU2_MPI::Barrier(SU2_MPI::GetComm()); //added by tobi; #ifdef HAVE_MPI; /*--- Reduce across all mpi ranks, only master thread communicates.; * The nElm condition is to allow vectors to also be used locally. ---*/; std::cout << ""Rank: "" << SU2_MPI::GetRank() << "", nElm != nElmDomain="" << (nElm != nElmDomain) << std::endl; //added by tobi; if (nElm != nElmDomain) {; SU2_OMP_BARRIER; SU2_OMP_MASTER {; sum = dotRes;; const auto mpi_type = (sizeof(ScalarType) < sizeof(double)) ? MPI_FLOAT : MPI_DOUBLE;; SelectMPIWrapper<ScalarType>::W::Allreduce(&sum, &dotRes, 1, mpi_type, MPI_SUM, SU2_MPI::GetComm());; }; }; #endif; /*--- Make view of result consistent across threads. ---*/; SU2_OMP_BARRIER. return dotRes;; }; ```; The Problem is the `Allreduce` in the `if (nElm != nElmDomain) {` which leads to a freeze if not all ranks get the same result for that boolean.; The eagle eye prob already spotted the cout-Debugging in there. I a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:8564,Update,Update,8564,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['Update'],['Update']
Deployability,"tions are equivalent for smooth surfaces and clearly surface neighbors are always volume neighbors as well. However, at surfaces with sharp edges, two vertices can be volume neighbors without being surface neighbors. This happens when the edge of the volume element connecting the vertices lies inside the domain. `CInterpolator::ReconstructBoundary` is called from `CSlidingMesh::SetTransferCoeff`, which then hands the connectivity structure to `CSlidingMesh::Build_3D_surface_element`. The latter function forms a circular ordering of the neighbors of each vertex s: e.g. if there are four neighbors a,b,c,d of s with connectivity a-b,c-d,b-c,a-d then it performs an iteration over e.g. a-b-c-d. If we understand ""neighbors"" as ""surface neighbors"", the neighbors of any vertex s can be brought into a ""closed circle"" or ""open chain"" ordering where each of them is neighbor only to its direct predecessor and successor. This is not true for the volume neighbor relation however, and in this case the iteration might enter an infinite loop e-a-b-c-d-a-b-... (until the access to `element[ iElementNode ]` segfaults). That's approximately how we (@maxaehle,@mcmorelli,@BeckettZhou,@EduardoMolina) noticed the bug.; ; ## Related Work; #1344 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346:2433,update,updated,2433,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346,1,['update'],['updated']
Deployability,"tive(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; [726/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CEulerSolver.cpp.o; ninja: build stopped: subcommand failed. **I suspect it got something to do with my GCC version. Since I can't update the system GCC, I tried to build the newer version of GCC locally and used it to build SU2. But then I encountered another systemic error that seem to be much more complicated (long errors, but one of them is..)**. > /home/FDa/FDa045/.local/lib64/libstdc++.so.6: no version information available (required by /usr/bin/swig) . I am happy if anybody could suggest me anything!!. **The remote server systems**; - OS: Linux (Red Hat Enterprise Linux Server 7.5 (Maipo)); - C++ compiler and version: [g++ (GCC) 4.8.5]; - MPI implementation and version: [OpenMPI 3.0.0]; - SU2 Version: [e.g., v7.2.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:5150,update,update,5150,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,1,['update'],['update']
Deployability,"tps://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:3040,Update,Update,3040,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Update'],['Update']
Deployability,"try****, CConfig**, unsigned long, unsigned short) (output_structure.cpp:12608); ==29692== by 0x905C0C: CMultizoneDriver::Output(unsigned long) (driver_direct_multizone.cpp:595); ==29692== by 0x905E23: CMultizoneDriver::StartSolver() (driver_direct_multizone.cpp:188); ==29692== by 0x364A19: main (SU2_CFD.cpp:174); ==29692== Block was alloc'd at; ==29692== at 0x483850F: operator new[](unsigned long) (vg_replace_malloc.c:423); ==29692== by 0x99F3EA: COutput::SortVolumetricConnectivity(CConfig*, CGeometry*, unsigned short, bool) (output_structure.cpp:15318); ==29692== by 0x9A14EC: COutput::SortConnectivity(CConfig*, CGeometry*, unsigned short, bool) (output_structure.cpp:14736); ==29692== by 0x9CCD39: COutput::SetResult_Files_Parallel(CSolver*****, CGeometry****, CConfig**, unsigned long, unsigned short) (output_structure.cpp:12485); ==29692== by 0x905C0C: CMultizoneDriver::Output(unsigned long) (driver_direct_multizone.cpp:595); ==29692== by 0x905E23: CMultizoneDriver::StartSolver() (driver_direct_multizone.cpp:188); ==29692== by 0x364A19: main (SU2_CFD.cpp:174); ```. If I run it in parallel and request output from PARAVIEW (so volume files are not written out) the error disappears, but it happens again when PARAVIEW_BINARY output is requested, so it's definitely on the volume writing structure. . There have been some changes to output_structure.cpp since the last released version 6.2.0, I wonder if those are the reason. When running it with the released version the seg fault is not there. I haven't tried yet with the new output currently being finalized by @talbring. . **To Reproduce**; To reproduce, run the case below using ```SU2_CFD config.cfg```; [square_beam.zip](https://github.com/su2code/SU2/files/3289851/square_beam.zip). **Desktop (please complete the following information):**; - OS: Antergos Linux x86-64 kernel 5.0.5-arch1-1-ARCH; - C++ compiler and version: GCC 8.2.1; - MPI implementation and version: OpenMPI 4.0.1; - SU2 Version: current develop vs v6.2.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/713:2891,release,released,2891,https://su2code.github.io,https://github.com/su2code/SU2/issues/713,2,['release'],['released']
Deployability,"ts\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\User",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:8218,Install,Installing,8218,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"ttps://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8707,Update,Update,8707,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Update'],['Update']
Deployability,"ttps://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8281,Update,Updated,8281,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Update'],['Updated']
Deployability,"ull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deploy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:2310,update,updated,2310,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['update'],['updated']
Deployability,"uments\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\Users\\Danie\\Anaconda3\\envs\\vsptools\\python.exe"" ""C:\\Users\\Danie\\Documents\\SU2\\meson.py"" ""install"" ""--no-rebuild""; ninja: build stopped: subcommand failed.`. I think it might be due to the fact that I am working in an Anaconda environment. But maybe not. Any thoughts?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:8494,Install,Installing,8494,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,10,"['Install', 'install']","['Installing', 'install']"
Deployability,"ummary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-release-asset/releases"">actions/upload-release-asset's releases</a>.</em></p>; <blockquote>; <h2>Automate sliding major version number</h2>; <p>This is a minor update to make the current release have the latest code from master, and additionally allows for a new automation workflow to execute to automate the sliding of the major (v1, v2, v3, etc) version numbers for ease of referencing</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:1033,release,release-asset,1033,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,6,['release'],"['release-asset', 'releases']"
Deployability,update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/178:0,update,update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/178,1,['update'],['update']
Deployability,update QuickStart example,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2066:0,update,update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2066,1,['update'],['update']
Deployability,update docker images,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1855:0,update,update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1855,1,['update'],['update']
Deployability,update master,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1216:0,update,update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1216,5,['update'],['update']
Deployability,update regression.yml,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2371:0,update,update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2371,1,['update'],['update']
Deployability,update style guide,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/89:0,update,update,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/89,2,['update'],['update']
Deployability,update to TestCases/optimization_euler/steady_oneram6/inv_ONERM6_basic.cfg,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/362:0,update,update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/362,1,['update'],['update']
Deployability,update xcode,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1660:0,update,update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1660,1,['update'],['update']
Deployability,"upling of SU2 with external structural codes (e.g. NASTRAN, TACS, Airbus structural suite Lagrange) for gradient-based aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used pre-commit run --all to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:1437,update,updates,1437,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['update'],['updates']
Deployability,"urbed solution).; This linear system is much more ill-conditioned, and so in addition to the classical linear preconditioners, it is possible to use the traditional linear system as the preconditioner (you gotta love the kind of stuff SU2 lets you get away with sometimes).; This nesting makes each iteration potentially very expensive, it is crucial not to ""over solve"" the linear systems, and to use adaptive CFL to run always at the highest CFL possible. Notwithstanding the preconditioner madness, this also works for explicit solvers, but that may only be good enough for dual time methods with relatively small time steps. This seems to be good at converging problems that would otherwise not get past a limit cycle.; I do not expect it to be faster when that is not a problem. Some references:; https://arc.aiaa.org/doi/abs/10.2514/6.2021-0857; https://arc.aiaa.org/doi/10.2514/1.J052255. Example config for the RANS ONERA M6 in the repo: [turb_ONERAM6_nk.txt](https://github.com/su2code/SU2/files/5947580/turb_ONERAM6_nk.txt); It contains the explanation and recommendations for the different parameters. The initial idea was to couple all solvers (flow, turbulence, etc.) but that makes the problem even more ill-conditioned and so I took a step back (as that also makes the implementation simpler...).; The skeleton of the coupled iteration exists in commit c97221b6f7dfd315dfceb9f59f8928790c78e0ce and it was functional... if anyone wants to take it further, it's there. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183:2194,update,updated,2194,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183,1,['update'],['updated']
Deployability,"urces/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lmsvcr140; collect2.exe: error: ld returned 1 exit status; error: command 'C:\\Program Files\\mingw-w64\\x86_64-8.1.0-posix-seh-rt_v6-rev0\\mingw64\\bin\\gcc.exe' failed with exit status 1`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:9656,Release,Release,9656,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,7,['Release'],['Release']
Deployability,"ut to the <code>init</code> Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2147"">#2147</a></li>; </ul>; <h2>3.24.2 - 15 Feb 2024</h2>; <ul>; <li>Enable improved multi-threaded performance on larger runners for GitHub Enterprise Server users. This feature is already available to GitHub.com users. <a href=""https://redirect.github.com/github/codeql-action/pull/2141"">#2141</a></li>; </ul>; <h2>3.24.1 - 13 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.2. <a href=""https://redirect.github.com/github/codeql-action/pull/2124"">#2124</a></li>; <li>The CodeQL action no longer fails if it can't write to the telemetry api endpoint. <a href=""https://redirect.github.com/github/codeql-action/pull/2121"">#2121</a></li>; </ul>; <h2>3.24.0 - 02 Feb 2024</h2>; <ul>; <li>CodeQL Python analysis will no longer install dependencies on GitHub Enterprise Server, as is already the case for GitHub.com. See <a href=""https://github.com/github/codeql-action/blob/main/#3230---08-jan-2024"">release notes for 3.23.0</a> for more details. <a href=""https://redirect.github.com/github/codeql-action/pull/2106"">#2106</a></li>; </ul>; <h2>3.23.2 - 26 Jan 2024</h2>; <ul>; <li>On Linux, the maximum possible value for the <code>--threads</code> option now respects the CPU count as specified in <code>cgroup</code> files to more accurately reflect the number of available cores when running in containers. <a href=""https://redirect.github.com/github/codeql-action/pull/2083"">#2083</a></li>; <li>Update default CodeQL bundle version to 2.16.1. <a href=""https://redirect.github.com/github/codeql-action/pull/2096"">#2096</a></li>; </ul>; <h2>3.23.1 - 17 Jan 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.0. <a href=""https://redirect.github.com/github/codeql-action/pull/2073"">#2073</a></li>; <li>Change the retention period for uploaded debug artifacts to 7 days. Previously, this was whatever the repository default was. <a href=""https://redirect.github.com/git",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:11628,release,release,11628,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['release'],['release']
Deployability,"v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6109,Release,Releases,6109,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Release'],['Releases']
Deployability,"vironment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cach",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7800,Update,Updated,7800,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Update'],['Updated']
Deployability,"w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces st",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:2994,release,release,2994,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['release'],['release']
Deployability,"xactly the same error. It occurred during compiling of geometry_structure.cpp. I don't know how to solve this issue. Thanks for your help in advance.; Koray. **To Reproduce**; Here's my configure outputs:. Build Configuration Summary:. Source code location: /home/koray/SU2_TMZHB/SU2; Install location: 	 /usr/local; Version: 6.0.1; C++ Compiler: g++; C Compiler: gcc; Preprocessor flags: ; Compiler flags: -g -O2; Linker flags: ; MPI support: no; Metis support: no; Parmetis support: no; TecIO support: yes; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: 	 no; LAPACK support: no; Datatype support:; double yes; complex no; codi_reverse no; codi_forward no. External includes: -DHAVE_CGNS -I$(top_srcdir)/externals/cgns -I$(top_srcdir)/externals/cgns/adf -DHAVE_TECIO -I$(top_srcdir)/externals/tecio/include ; External libs: $(top_builddir)/externals/cgns/libcgns.a $(top_builddir)/externals/tecio/libtecio.a . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: yes; Build SU2_DEF: yes; Build SU2_SOL: yes; Build SU2_GEO: yes; Build Py Wrapper: no; ################. Here are the error lines during make process:. CXX ../src/libSU2_a-dual_grid_structure.o; CXX ../src/libSU2_a-geometry_structure.o; ../src/geometry_structure.cpp: In member function ‘virtual void CPhysicalGeometry::UpdateTurboVertex(CConfig*, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:14365:20: error: ‘HUGE’ was not declared in this scope; 14365 | su2double max = -HUGE;; | ^~~~; make[1]: *** [Makefile:857: ../src/libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory '/home/koray/SU2_TMZHB/SU2/Common/lib'; make: *** [Makefile:391: all-recursive] Error 1; ###. **Desktop (please complete the following information):**; - OS: Ubuntu 20.04.2 LTS; - C++ compiler and version: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0; - MPI implementation and version: mpiexec (OpenRTE) 4.0.3; - SU2 Version: SU2 (ver. 6.0.1 ""Falcon"")",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1644:1693,Update,UpdateTurboVertex,1693,https://su2code.github.io,https://github.com/su2code/SU2/issues/1644,1,['Update'],['UpdateTurboVertex']
Deployability,"y name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:2277,update,update,2277,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['update'],['update']
Deployability,"~~Convergence history is non deterministic when running the RANS solver with SA model using OMP-only parallelism. When fixing the min RMS residual, the computation stops at a different iteration each time I run the solver.~~. ~~That does not happen with the EULER or NAVIER_STOKES solvers.~~. Convergence history is non deterministic when using the NEWTON_KRYLOV solver using OMP-only parallelism. When fixing the min RMS residual, the computation stops at a different iteration each time I run the solver.; That happens with the EULER or NAVIER_STOKES and RANS solvers. I am using a common setup for each case i.e. ROE+MUSCL convective fluxes, WLSQ for viscous gradients, LSQ for MUSCL gradients. Tried also switching ON and OFF the CFL adaptation and limiters, different linear solvers, and precision (single/double) of the linear solver but that doesn't change the outcome of the test (RANS conv history remains non deterministic while EULER and NS have always the same convergence history). I compiled in release (-O3), with OMP support and exported the mtune/march variables to enable SIMD types. ~~I'll be looking in the SA/Scalar solver for some uninitialized vars. Any other idea?~~. I'll be looking in the CNewtonIntegration files for some uninitialized vars/thread safety issue. Any other idea? . **Bug report checklist**; - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.4 LTS); - C++ compiler and version: g++ (GCC) 7.5.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 8.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2259:1009,release,release,1009,https://su2code.github.io,https://github.com/su2code/SU2/issues/2259,1,['release'],['release']
Deployability,"~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFSoltoMet':; ./sources/Python3.7/convert.c:114:22: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:9326,Release,Release,9326,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['Release'],['Release']
Deployability,"~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:3313,Release,Release,3313,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['Release'],['Release']
Energy Efficiency," ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:2751,power,powers,2751,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,2,['power'],['powers']
Energy Efficiency," (NONE = no marker); MARKER_FAR= ( Farfield ); %; % Symmetry boundary marker(s) (NONE = no marker); % MARKER_SYM= ( Symmetry ); %; % ------------------------ SURFACES IDENTIFICATION ----------------------------%; %; % Marker(s) of the surface to be plotted or designed; MARKER_PLOTTING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%; %; % Numerical method for spatial gradients (GREEN_GAUSS, WEIGHTED_LEAST_SQUARES); NUM_METHOD_GRAD= GREEN_GAUSS; %; % Courant-Friedrichs-Lewy condition of the finest grid; CFL_NUMBER= 20.0; %; % Adaptive CFL number (NO, YES); CFL_ADAPT= NO; %; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10, 0.001 ); %; %; % ------------------------ LINEAR SOLVER DEFINITION ---------------------------%; %; % Linear solver or smoother for implicit formulations (BCGSTAB, FGMRES, SMOOTHER_JACOBI, ; % SMOOTHER_ILU, SMOOTHER_LUSGS, ; % SMOOTHER_LINELET); LINEAR_SOLVER= FGMRES; %; % Preconditioner of the Krylov linear solver (ILU, LU_SGS, LINELET, JACOBI); LINEAR_SOLVER_PREC= ILU; %; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-6; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 5 ; % Restart frequency for RESTARTED_FGMRES; LINEAR_SOLVER_RESTART_FREQUENCY= 10; %; % Relaxation factor for smoother-type solvers (LINEAR_SOLVER= SMOOTHER); LINEAR_SOLVER_SMOOTHER_RELAXATION= 0.9; %; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:5262,Adapt,Adaptive,5262,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,2,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Energy Efficiency," for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In the singlezone setup, the whole mesh has been exported to `singlezone.su2`. The `singlezone.cfg` is `TestCases/rans/naca0012/turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; ======================",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:2714,adapt,adapted,2714,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['adapt'],['adapted']
Energy Efficiency," heat flux over different surfaces during runtime would be a good metric for judging convergence and quality of the design. Currently (as of 7.3.0) this does not seem to be possible. *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*; In my mesh I have defined various markers which indicate the surfaces of interest, where I would like the average heat-flux to evaluate over time. As suggested by the DryRun info I've indicated the surfaces with the MARKER_MONITORING specifier in the config file:. `MARKER_MONITORING = (NS_WALL_RESONATORTIP, NS_WALL_RESONATOR3, NS_WALL_RESONATOR2)`. However, the history and screen output shows only the heat flux aggregated over all surfaces. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. I would like the values of the HEAT group to behave just like those of the FLOW_COEFF group, where the heat flux is indicated on a per-surface basis. This would allow me to track the development of the heat fluxes with good time resolution, without having to write an excessive amount of surface files. The output in the solution history could be similar to that of other output groups, i. e.:; `""Avg_HeatFlux(SURF1)"",""Avg_HeatFlux(SURF2)"",...`. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*; Regularly exporting the entire surface data to discrete files and analyzing them during post-processing is a possible work-around, but leads to an excessive amount of files. **Additional context**; *Add any other context or screenshots about the feature request here.*; My cases are highly transient and require quite some timesteps until a quasi-stationary limit cycle is reached. In the limit cycle the cycle-averaged net heat fluxes should be nearly zero. However, the magnitude of the heat transport is also of interest, which is why I would like to monitor these properties over time.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1531:2185,monitor,monitor,2185,https://su2code.github.io,https://github.com/su2code/SU2/issues/1531,1,['monitor'],['monitor']
Energy Efficiency," of the control volume by mirroring the grid on the boundary. The fluxes and gradients are then evaluated like in the interior using reflected flow variables."" This approach can be implemented in an easy way when computing the Green-Gauss gradients. In SU2, routines are already in place that deal with GG gradients on boundaries. Here, we just have to identify the symmetry planes and mirror the flux through the faces. ; Blazek continues: ""The second methodology computes the fluxes for the halved control volume (but not accross the boundary). The components of **the residual normal to the symmetry plane** are then zeroed out. It is also necessary to correct normal vectors of those faces of the control volume, which touch the boundary. The modification consists of removing all components of the face vector, which are normal to the symmetry plane. The gradients also have to be corrected according to Eq. (8.40) [points 2,3,4 above]"". 1. Modify Green-Gauss and Least-Squares gradient computation for symmetry planes; -> This seems to work fine; 2. Fix normal components of edges connected to symmetry plane; -> This seems to work fine; 3. Fix residual components of velocity on the symmetry plane; -> This seems to work fine; 4. Multiple symmetry planes, including Euler walls; -> This seems to work fine; 6. multigrid; -> Works fine now that we use the agglomeration as in the paper of Diskin.; 7. grid movement; 8. -> Works fine with the new fix to the residuals (energy update). ## Related Work; #1168 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194:1772,Green,Green-Gauss,1772,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194,1,['Green'],['Green-Gauss']
Energy Efficiency," of the tutorials. Therefore, there is a mismatch in what the C++ code uses, and what the python code uses. This is an easy problem to fix and is being fixed in the branch fix_set_ffd_script. Next, I want to have a discussion about the shape optimization options and scalings. Currently there are the following options in the config template to control scaling:. ```; % Optimization objective function with scaling factor, separated by semicolons.; % To include quadratic penalty function: use OPT_CONSTRAINT option syntax within the OPT_OBJECTIVE list.; % ex= Objective * Scale; OPT_OBJECTIVE= DRAG * 10; % Optimization constraint functions with pushing factors (affects its value, not the gradient in the python scripts), separated by semicolons; % ex= (Objective = Value ) * Scale, use '>','<','='; OPT_CONSTRAINT= ( LIFT > 0.328188 ) * 0.001; ( MOMENT_Z > 0.034068 ) * 0.001; ( AIRFOIL_THICKNESS > 0.11 ) * 0.001; %; % Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts); % In general, a norm of the gradient ~1E-6 is desired.; OPT_GRADIENT_FACTOR= 1E-6; %; % Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF); % In general, surface deformations of 0.01'' or 0.0001m are desirable; OPT_RELAX_FACTOR= 1E3; %; % Optimization bound (bounds the line search in SU2_DEF); OPT_LINE_SEARCH_BOUND= 0.1; %; % Upper bound for each design variable (bound in the python optimizer); OPT_BOUND_UPPER= 1E10; %; % Lower bound for each design variable (bound in the python optimizer); OPT_BOUND_LOWER= -1E10; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil | AIRFOIL, 0, 0, 0, 1.0 ); ...; ```. Now this provides a lot of flexibility in scaling the inputs to the optimizer, which is great because these optimizers aren't very robust with scaling. But the way they behave is sometimes a little odd. I am going to go through each option and talk about how it affects th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:1337,reduce,reduce,1337,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['reduce'],['reduce']
Energy Efficiency," past iterates. Here, they are used to identify eigenvectors with large eigenvalues which slow down the overall convergence and to form a (small) subspace basis from them. Each fixed-point solution update is then [projected onto that subspace and the projected part will be additionally corrected via a ""real"" Newton step (a.k.a. ""RPM"")](https://doi.org/10.1137/0730057) using the computational graph for precise derivative information. This preliminary result with one basis vector indicates that the procedure can be effective at very low additional cost (for n basis vectors, it mainly reduces to n scalar products of the current fixed-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1217:1230,Green,Green,1230,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217,1,['Green'],['Green']
Energy Efficiency," points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @talbring ; - I already started adding the mesh solver, numerics and transfer functions in separate files as discussed in #583 and already started in #725. For clarity and ease of merging, only new classes are split so far, but I will probably start splitting other structures soon in PRs to come. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:1852,adapt,adapt,1852,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['adapt'],['adapt']
Energy Efficiency,"# Proposed Changes; There has been talk about using external solvers in SU2. I am especially interested in this as due to the ill-conditioned matrices I get in structural topology optimization a direct sparse solver will probably be required.; One tricky issue with using external solvers is their compatibility with the discrete adjoint. Luckily in the reverse mode we do not differentiate the solver, only the operation A^-1 * b. Nevertheless currently all CSysVectors and CSysMatrices use su2double which makes them incompatible with external libraries and slower than in direct mode.; To address this issue I want to template the required classes such that we have the option (but not be obligated) to have CSysMatrices of passivedoubles in the discrete adjoint.; Moreover, I want to do some refactoring to make CSysSolve a proper class instead of an aggregate of functions. Currently we instantiate a CSysSolve whenever we need to solve a system, I think it would be beneficial to keep CSysSolve as a member of the classes that use it, so that for example, working memory used by Krylov methods is allocated only once. Note: I am aware that @talbring started some work on this (and more) in the *feature_template_linear_solver* branch, I tried to pick up were Tim left of but it was too much (a lot changes in one year). I really like the refactoring he was doing and will try to bring as much as possible into this, but I need to do it in smaller steps. Now this PR deals with some of the aforementioned refactoring, namely:; - CG, BCGSTAB, and GMRES have their working vectors and matrices as members of CSysSolve and allocate them only on the first call.; - CSysSolve is now a member of CSolver and CVolumetricMovement.; - BCGSTAB uses two fewer vectors than before and the ""p"" and ""v"" vectors are initialized to 0 instead of ""b"" (I think this was a small bug?).; - CSysSolve takes a ""mesh deformation"" flag at construction so that Solve can be called by CSolver and by CElasticityMovement, be",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650:1104,allocate,allocated,1104,https://su2code.github.io,https://github.com/su2code/SU2/pull/650,1,['allocate'],['allocated']
Energy Efficiency,"## **BUG DESCRIPTION**. ## **Flow scenario**; The following 3D-centrifugal impeller was designed and the flow field simulated. The aim was to optimize the blade leading edge with respect to outlet static pressure (_please note that the mesh is rotating_):. ![Screenshot (157)](https://user-images.githubusercontent.com/96534491/236707270-c9de2899-1a72-4876-975c-eabaec826c4f.png). The mesh is deliberately coarse being the intention to firstly perform the simulation utilizing Euler's convective scheme. ; Subsequently, the flow field is computed correctly and the solution is converged. The solution was obtained setting up the turbomachinery simulation options available in SU2. After this initial procedure the FFD Box was successfully generated ( FFD_DEGREE = 2,2,2 ) and attached to the domain as explained in the tutorials ( *using SU2_DEF* ). The FFD box appears as follows:. *FFD box edges: green ; FFD box control point: yellow; There is no intersection between FFD edges and periodic boundaries*. ![Screenshot (158)](https://user-images.githubusercontent.com/96534491/236707553-92fb9e5a-3808-4ea0-a02e-43b574de44c0.png). It was intended to operate each SU2 module manually: . 1. **SU2_DEF** -> FFD box generation; 2. **SU2_CFD** -> flow field computation; 3. **SU2_CFD_AD** -> adjoint solution; 4. **SU2_DOT_AD** -> gradient calculation; 5. **SU2_DEF** -> shape deformation. ## **Shape deformation test**; Before the actual gradients computation it was preferred to perform a deformation test with the presented settings: . % ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%. DV_KIND= FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT; %; % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= ( BLADE1 ); %; % Parameters of the shape deformation ; % 	- FFD_CONTROL_POINT ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp ); %; DV_PARAM= ( BLADE_BOX, 0, 0, 0, 1.0, 0.0, 0.0 ); ( BLADE_BOX, 0, 1, 0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025:899,green,green,899,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025,1,['green'],['green']
Energy Efficiency,"## Proposed Changes. - Addition of species diffusion terms to surface energy balance in NEMO, important for highly dissociated flows; - Addition of vector for s species, ""enthalpys"", to variable to store values accessed in solver.; - General cleanup/commenting of the NEMO heat flux computation in CFVMFlowSolverBase.inl. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1383:70,energy,energy,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/1383,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes. - Temporarily remove sumJhs term from surface energy balance. The species density gradients provided by WLS and GG are very different, and the GG values give incorrect results for surface heating. I want to remove this term for now, until the gradient difference sorted, so it does not result in incorrect surface heating prediction if the user specifies GG. . ## Related Work; This reverts the changes in PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1400:67,energy,energy,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/1400,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes. . 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better.; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader.; 4. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to #1263 and #1265 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1268:653,energy,energy,653,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes. 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better. ; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader. ; 3. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to issue #1265 and #1263. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1267:653,energy,energy,653,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes. Add `workflow_call` event to `regression.yml` Github Actions workflow. This way it is possible to [re-use](https://docs.github.com/en/actions/using-workflows/reusing-workflows) it from another workflow. Add a new workflow - `scheduled-arm64.yml`. It is a scheduled workflow that just executes `regressions.yml` on a self-hosted runner. ## Related Work. https://github.com/su2code/Docker-Builds/pull/1 - A PR that updates the build and test Docker images to Ubuntu 20.04 so that they could be used on both AMD64 and ARM64. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619:246,schedul,scheduled-,246,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619,2,['schedul'],"['scheduled', 'scheduled-']"
Energy Efficiency,"## Proposed Changes. The Boundary conditions in the SST turbulence model are based on the free stream conditions. However if we mix two stream with different fluid properties at the inlets, the Turbulent Kinetic Energy, omega and eddy viscosity at the inlets should be based on these local fluid properties. So in this pull request, we aim to use the known fluid properties at the inlets in order to set the BC for the SST model. ; I can add a test case if it is needed. ## Related Work. This pull request is related to #1784. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1796:212,Energy,Energy,212,https://su2code.github.io,https://github.com/su2code/SU2/pull/1796,1,['Energy'],['Energy']
Energy Efficiency,"## Proposed Changes. This PR introduces a completely rewritten output structure. If you have ever looked into the old output_structure.cpp file, you probably noticed that it was quite messy. To add new output to screen or history people just copied what was there and modified it to suit there own needs. This resulted in a lot of if/switch statements and was hard to read ... one reason for this was that we have not really used an object oriented structure for the output. Despite rearranging everything into separate classes, here is a non-exhaustive list of new features and changes:. - Fully customizable screen, history and volume output; - New multizone screen output; - New flexible way so set convergence criteria (any residual and/or coefficient can be used as a monitor); - Consistent naming of iteration variables (TIME_ITER, OUTER_ITER, INNER_ITER); - Consistent file naming options (RESTART_FILENAME, SOLUTION_FILENAME); - On-the-fly writing of all visualization files; - New Singlezone and Multizone drivers are now used by default. Note that this is a very big change. And i apologize for any inconvenience and troubles that this might cause. I can only maintain features covered by the regression tests. So please test it with your cases and let me know if anything is missing (especially in the output). . I will create documentation for all the new features soon. If you want to test it already, please let me know, I need some feedback. . User Documentation on the changes:; https://su2code.github.io/docs/Solver-Setup; https://su2code.github.io/docs/Custom-Output; https://su2code.github.io/docs/Guide-to-v7/. ## Related Work; #715 is already included in this PR and should be merged before. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contri",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724:773,monitor,monitor,773,https://su2code.github.io,https://github.com/su2code/SU2/pull/724,1,['monitor'],['monitor']
Energy Efficiency,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:394,reduce,reduces,394,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,2,"['efficient', 'reduce']","['efficient', 'reduces']"
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; 1. arrays in gettriangle need to be size 2 instead of 3; 2. error message that checks species clipping only checks if the keyword is present, not if clipping is on; 3. added setblock_zero ""per-species"" to CSysVector (added here to reduce the mega-PR for the flamelet model); 4. fix speling eror. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1761:323,reduce,reduce,323,https://su2code.github.io,https://github.com/su2code/SU2/pull/1761,1,['reduce'],['reduce']
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adapting and fixing mixing density model when species transport equations are being solved.; The species dependent properties will be added in 3 PRs:; 1/3 : mixture density model (this PR); 2/3 : mixture viscosity + heat capacity; 3/3 : mixture mass diffusivity + thermal conductivity. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Mark Heimgartner implemented the MIXTURE_FLUID model during his master thesis at Bosch. In this pull request, we aim to adapt his implementation to the latest version of develop branch, fixing some implementations that we think were causing numerical issues in his original implementation. EDIT: Here, the mixture density will be implemented, based on the ideal gas law (computing mixture molecular weights). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1620:94,Adapt,Adapting,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/1620,2,"['Adapt', 'adapt']","['Adapting', 'adapt']"
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes a bug in the Q-criterion and replaces it with a more efficient implementation. It is now computed directly as the second invariant of the velocity gradient tensor. @EduardoMolina : since you had asked about this, can you please check my math :) ?. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/704:153,efficient,efficient,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/704,1,['efficient'],['efficient']
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes a bug that I introduced in #598. When the energy eqn. is not active, the temperature is not written to the restart file, but this was not taken into account for the restart loader. This corrects the restart loader to read the correct number of variables when energy is inactive. I have also taken the opportunity to improve the regression cases for the incompressible solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Thanks to @TobiKattmann and @talbring for finding this so quickly!. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/601:142,energy,energy,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/601,2,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; More efficient loops/maps for sorting of grid points and connectivity during initial reading/partitioning. This is important for very large meshes when running on limited resources. Due to the changes in the initial ordering of the connectivity, this PR results in minor differences in the residuals for the regressions. They have been updated accordingly. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/576:99,efficient,efficient,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/576,1,['efficient'],['efficient']
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Removing CFL adaption for the Quick Start. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Fixes #887. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/958:107,adapt,adaption,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/958,1,['adapt'],['adaption']
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains a new routine to compute 3 mesh quality metrics (similar to what you may find in commercial codes): orthogonality angle, cell aspect ratio, and cell volume ratio. It replaces an old routine that was not being used. Note that this is for the **dual control volumes of the finite volume solver** (not the primal elements), so the values are vertex-based. The min & max of the 3 metrics are reported to the console during preprocessing, and if you would like the fields to be written to the viz. files, you can use . ```; WRT_MESH_QUALITY= YES; ```. For now, it is just for sanity checks. In the future, we can use this as an optimization objective/constraint, for automatically improving grids (r-adaptation), or as part of advanced limiters/numerical methods. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778:806,adapt,adaptation,806,https://su2code.github.io,https://github.com/su2code/SU2/pull/778,1,['adapt'],['adaptation']
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR greatly improves the robustness and convergence behavior of the flow solvers by implementing a more sophisticated controller for nonlinear iterations along with several other important modifications. The changes are the following:; - New under-relaxation strategy. Variables such as density and energy are only allowed to change by +/- 20% with each nonlinear iteration by applying an under-relaxation parameter to the updates at each node, which helps with difficult transients, especially at calculation startup. Also applied to turbulence model updates (though threshold is larger).; - CFL adaption via an exponential progression with under-relaxation approach, i.e., changes to CFL are coupled to the under-relaxation parameter (small under-relaxation parameter = decrease, and large = increase). CFL is now locally defined for each CV for this process.; - Modified realizability checks to avoid negative density/pressure/temperature at the nodes and also during 2nd-order reconstruction at cell faces.; - CV face states for 2nd-order MUSCL are now optionally reconstructed with a separate gradient method (unweighted least squares recommended), which is very important for robustness. Gradients for viscous terms and sources are still computed via GG or WLS for accuracy reasons.; - SA model was being clipped unnecessarily. This clipping has been removed. Here is my recommendation on how to run all of your 2nd-order cases going forward:. ### Euler / Laminar N-S; Turn off the limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:397,energy,energy,397,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,2,"['adapt', 'energy']","['adaption', 'energy']"
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR will close the release of v6.2.0. The goal is to tag it within the next week or two once this is merged. Soon, folks in the community will be submitting PRs for major changes to the I/O, drivers, MPI, and more, as we prepare for a major v7 release (scheduled around the time of the developers meeting in May). This v6.2.0 is a minor/maintenance release that will serve as a good snapshot before the major changes. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. We will merge some of the currently open PRs before the release, especially smaller PRs and clean up PRs. Feel free to comment below if there are any outstanding items that you would like to add to develop via PR before release. For significant changes, please wait for the v7 release. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/641:351,schedul,scheduled,351,https://su2code.github.io,https://github.com/su2code/SU2/pull/641,1,['schedul'],['scheduled']
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is one for v7 and needs some testing. This PR contains a complete refactoring of the point-to-point MPI infrastructure and an entirely new implementation of the periodic BC for the FV solvers. For the MPI refactoring:; - All calls are abstracted to parent classes (geometry, solver, matrix), meaning we will remove all Set_MPI_* routines.; - Point-to-point comms are all non-blocking calls that have been separated into InitiateComms() & CompleteComms(), so that, in theory, they can be overlapped with computation where possible. It would also be possible now to group the comms into larger messages easily. These optimizations are a next step (not for this PR).; - Persistent communication schedules and memory are used throughout the calculation.; - Results are the same, this is just a refactoring to improve performance, scalability, etc. while making the code much simpler and separating the periodic part. For the periodic BC:; - No longer need a preprocessing with SU2_MSH - use the original grid and just call SU2_CFD.; - Adjacent periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than P",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:791,schedul,schedules,791,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,1,['schedul'],['schedules']
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Based on the observations of Albring et al. in ""Challenges in Sensitivity Computations for (D)DES and URANS"" we implemented the windowing regularizers proposed in the work of Krakos et al. ""Sensitivity analysis of limit cycle oscillations"" and adapted it to the AD framework of SU2. ; We call the feature in the following ""windowing"". ; Windowing can be applied if one takes the (windowed) time average of a periodic function, i.e. in the case of an instationary flow field that exhibits periodic behaviour. ; - We changed the functionality of the output-field-prefix TAVG and D_TAVG from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that ap",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:336,adapt,adapted,336,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,2,['adapt'],['adapted']
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Nodes shared by an inlet and a wall show nonphysical values in the corner node for energy, temperature, pressure, density. This fixes the issue. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2266:175,energy,energy,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/2266,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; - Fixes the adjoint residual computation for multizone cases (which was wrong on first inner iterations due to cross term extraction).; - Fixes (hopefully for good) discadj FEA solutions when INCREMENTAL_LOAD=YES (left over from #933); - Add relaxation to CDiscAdjSolver via option RELAXATION_FACTOR_ADJOINT, that replaces the old RELAXATION_FACTOR_ADJFLOW . I found this to be necessary for adjoint FSI problems, the adjoint of the interpolation matrix (and therefore the cross terms) are not smooth which makes convergence more difficult. In version 6 this was achievable via the old options RELAXATION_FACTOR_FLOW/TURB.; - Adds OpenMP directives to the CFL adaptation routine (a ""todo"" from #861), restricts the Min/Max/Avg CFL calculation to the fine grid (which will change the output but not the solution). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/950:681,adapt,adaptation,681,https://su2code.github.io,https://github.com/su2code/SU2/pull/950,1,['adapt'],['adaptation']
Energy Efficiency,"## Proposed Changes; Add further parallel regions in discrete adjoint computations. Changes in this PR also reduce the memory footprint of hybrid parallel AD, by avoiding that freed indices end up in tapes not used thereafter, and by aligning the serial and parallel parts between flow and mesh recording. ## Related Work; #1214. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2208:108,reduce,reduce,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/2208,1,['reduce'],['reduce']
Energy Efficiency,"## Proposed Changes; Add the Kenway-Martins separation sensor for buffet-onset detection (see [doi.org/10.2514/1.J055172](https://doi.org/10.2514/1.J055172) for details). Config options include:. 1. BUFFET_MONITORING= YES will compute; a. The sensor value (between 0 and 1) on NS marker vertices, stored in CNSSolver as Buffet_Sensor; b. The integral of the sensor values normalized by reference area (percent of reference area over which separation occurs), stored in CNSSolver as Buffet_Metric (per-surface) and Total_Buffet_Metric; 2. BUFFET_K and BUFFET_LAMBDA specify the sharpness and offset of the Heaviside function used to compute the nodal sensor value; 3. Objective function option BUFFET, which uses the integrated metric as a cost function; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/614:55,sensor,sensor,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/614,4,['sensor'],['sensor']
Energy Efficiency,"## Proposed Changes; Added `SelectZone` function to `CDriverBase` that dynamically sets the zone index; . ## Example Usage; ```python; import pysu2; from mpi4py import MPI. def execute_su2():; # Import mpi4py for parallel run; comm = MPI.COMM_WORLD; rank = comm.Get_rank(); num_zones = 2; # Initialize the corresponding driver of SU2, this includes solver preprocessing; SU2Driver = pysu2.CMultizoneDriver(config_path, num_zones, comm) # type: ignore. # Get all the markers defined on this rank and their associated indices.; allMarkerIDs = SU2Driver.GetMarkerIndices(). # Time loop is defined in Python so that we have acces to SU2 functionalities at each time step; comm.Barrier(). # Time iteration preprocessing; SU2Driver.Preprocess(0). # Run one time-step (static: one simulation); SU2Driver.Run(). # Update the solver for the next time iteration; SU2Driver.Update(). # Monitor the solver and output solution to file if required; SU2Driver.Monitor(0). for izone in range(num_zones):; SU2Driver.SelectZone(izone); # Get all the markers defined on this rank and their associated indices.; allMarkerIDs = SU2Driver.GetMarkerIndices(); print(allMarkerIDs). # Output the solution to file; SU2Driver.Output(0). # Finalize the solver and exit cleanly; SU2Driver.Finalize(); ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2019:875,Monitor,Monitor,875,https://su2code.github.io,https://github.com/su2code/SU2/pull/2019,2,['Monitor'],['Monitor']
Energy Efficiency,"## Proposed Changes; Adding support to use the external library libROM (https://github.com/LLNL/libROM) for reduced order modeling with SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `ex",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1310:108,reduce,reduced,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310,1,['reduce'],['reduced']
Energy Efficiency,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. ## Related Work; This is a new solver, therefore is mostly new and independent work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [? ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). I was not able to test this, since these commands do not seem to work with meson/ninja. . - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1006:334,energy,energy,334,https://su2code.github.io,https://github.com/su2code/SU2/pull/1006,2,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1014:334,energy,energy,334,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014,2,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; Changed the wall distance calculation to calculate the distance to the nearest element rather than calculating the distance to the nearest node. This significantly improves the performance of turbulence models for meshes where the mesh doesn't grow perpendicular to the wall. This pull request also contains a simple improvement to the AD recording in CADTElemClass::DetermineNearestElement that significantly reduces memory usage when running the Discrete Adjoint. . This will likely break any regression test that requires a wall distance calculation, i.e. any test that has a turbulence model. Is there a easy way of changing the regression test values that doesn't require manual changing of the values? . ## Related Work; NA. ## PR Checklist. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/604:431,reduce,reduces,431,https://su2code.github.io,https://github.com/su2code/SU2/pull/604,1,['reduce'],['reduces']
Energy Efficiency,"## Proposed Changes; Changed the wall distance calculation to calculate the distance to the nearest element rather than calculating the distance to the nearest node. This significantly improves the performance of turbulence models for meshes where the mesh doesn't grow perpendicular to the wall. This pull request also contains a simple improvement to the AD recording in CADTElemClass::DetermineNearestElement that significantly reduces memory usage when running the Discrete Adjoint. This will likely break any regression test that requires a wall distance calculation, i.e. any test that has a turbulence model. Is there a easy way of changing the regression test values that doesn't require manual changing of the values?. (I mistakenly submitted the previous PR to merge with master) . ## Related Work; NA. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605:431,reduce,reduces,431,https://su2code.github.io,https://github.com/su2code/SU2/pull/605,1,['reduce'],['reduces']
Energy Efficiency,"## Proposed Changes; Check for Nan in the monitored values of COutput (was already done for time domain).; For SU2_CFD_AD and SU2_DOT_AD the default MATH_PROBLEM becomes DISCRETE_ADJOINT; When the MATH_PROBLEM is DISCRETE_ADJOINT the linear solver and preconditioner of primal solvers is made the same as the DISCADJ_** ones, i.e. LINEAR_SOLVER and LINEAR_SOLVER_PREC are ignored (see why I think it makes sense in #942, and let me know if you think it doesn't make sense). ## Related Work; #942 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1105:42,monitor,monitored,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1105,1,['monitor'],['monitored']
Energy Efficiency,"## Proposed Changes; Compute Green-Gauss gradients and limiters via a point-loop (like we do for Least Squares), in the limit this allows one thread per point of parallelization. Parallel regions are started inside the functions and again only the master thread calls MPI routines. Move these routines out of CSolver and make them general to reduce code duplication (compressible/incompressible, solution/primitives), and to improve test-ability (if key areas of the code depend less on large objects we can more easily treat them as units). Introduce a way to create different limiters by defining small details like the limiter function (and its associated constants), or any geometry-based modification. I don't seem to have ""hard"" failures in the regressions but I need to run tests, especially for periodic cases as I had to change the ""communication model"" for the min / max computed for limiters.; I will start documenting anyway. ## Related Work; #789 #824 ; Depends on #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/834:29,Green,Green-Gauss,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/834,2,"['Green', 'reduce']","['Green-Gauss', 'reduce']"
Energy Efficiency,"## Proposed Changes; Dear all,. Here are some updates for the python fsi interface. Namely:. - Better use of mpi4py, using always numpy array (more computationally efficient); - Fix of the restarted coupled simulation; - Automatic use of default values, in case of wrong inputs; - Introduction of a sort of dry run, which actually prints out the mapped modes and the normals of the aerodynamic surface mesh. This is yet another step towards the automatic creation of ROM from aerodynamic response; - Fix of small bugs. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1357:164,efficient,efficient,164,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357,1,['efficient'],['efficient']
Energy Efficiency,"## Proposed Changes; Edge coloring tends to perform better than reductions for the hybrid parallel discrete adjoint because it uses less memory and enables the shared reading optimization. This PR puts two additional strategies in place for the discrete adjoint that help with obtaining a coloring before resorting to reductions, making successful coloring more likely. 1. If the requested edge color group size does not produce an efficient coloring, the maximum edge color group size that still produces an efficient coloring is chosen instead. This decision is made per rank.; 2. The discrete adjoint is allowed to use more colors. ## Related Work; work on hybrid parallel AD, like #2039. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2167:432,efficient,efficient,432,https://su2code.github.io,https://github.com/su2code/SU2/pull/2167,2,['efficient'],['efficient']
Energy Efficiency,"## Proposed Changes; Extend the Turbulence CFL reduction option, such that it can be used for adaptive CFL too. Turbulence cfl reduction was previously implemented only for a constant cfl, here the treatment is extended also for adaptive cfl. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295:94,adapt,adaptive,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295,2,['adapt'],['adaptive']
Energy Efficiency,"## Proposed Changes; Following up on #583 this is a restructuring of the fiels related to the driver. In addition I rearranged preprocessing routines in the driver constructor. I added arguments to the calls to make it more clear what the dependencies are and what is allocated. Furthermore I merged all loops over zones and instances into a single loop. This should make it much more readable. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/736:268,allocate,allocated,268,https://su2code.github.io,https://github.com/su2code/SU2/pull/736,1,['allocate'],['allocated']
Energy Efficiency,"## Proposed Changes; Hi all,. In neither solver (incompressible and compressible) viscous fluxes are considered in the symmetry plane boundary condition. In both codes the BC_sym_plane links directly to Euler_Wall. . Compressible: A ""reflected state"" approach is done. Create a reflected halo node which enforces symmetry and compute the occurring flux just as in the interior. Problem: the primitive gradients are not adapted nor a viscous flux based on that is computed. Incompressible: Here a ""direct flux"" approach is chosen in Euler Wall. Insert the symmetry conditions directly in the FV derivation on the boundary part and thereby eliminate most terms. For the convective terms only a pressure contribution in the momentum equation remains. No Viscous terms are currently considered which is not correct for the momentum equation. . For both solvers I implemented a ""reflected state"" approach in C*Solver::BC_sym_plane as I didn't want to touch the Euler_wall implementations especially from the compressible solver. . I (informally) wrote a bit down as explanation in Latex how I did the derivation.; [Symmetry_BC.pdf](https://github.com/su2code/SU2/files/2891210/Symmetry_BC.pdf); Note that in the DG-FEM solver of @vdweide the same ""reflected state"" approach is implemented although it is not clear to me how the derivation was done there. See the bottom of the pdf for more info. I would be happy to get some insight here :). I also did a bit of testing with some cases and will showcase the differences between current develop and my implementation with pictures below. I attached two easy 2D cases (compr. & incompr. half cylinder) which you could quickly compare the current develop and this PR with.; [Sym_plane_testcases.gz](https://github.com/su2code/SU2/files/2891254/Sym_plane_testcases.gz); tar xzf Sym_plane_testcases.gz. 1. Compressible half cylinder, navier-stokes, no Turb-model, Pin has a solid wall, farfield around. You see pressure contour lines:; ![compr_half_cyl_p](https",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657:419,adapt,adapted,419,https://su2code.github.io,https://github.com/su2code/SU2/pull/657,1,['adapt'],['adapted']
Energy Efficiency,"## Proposed Changes; Hi everyone,. I have been working on the implementation of the DDES formulations for the SST model, following the work in ""Development of DDES and IDDES Formulations for the k-ω Shear Stress Transport Model"" (DOI:10.1007/s10494-011-9378-4). The implementation is easy, whereas the validation may take some time. I am currently working on the backward facing step and I will work on the flatplate too. The choice of the validation test cases is key since the computational cost is quite large, thus if you have any suggestions that may speed up this part then feel free to write them down. . Implemented versions:; - SST-DDES; - SST-IDDES; - SST-SIDDES. I am also working on the Scale Adaptive Simulations (SAS) implementations for SST, following the work in ""ON URANS SOLUTIONS WITH LES-LIKE BEHAVIOUR"", Travis et al., and ""[Evaluation of scale-adaptive simulation for transonic cavity flows"", Babu et al., (https://www.inderscienceonline.com/doi/abs/10.1504/IJESMS.2016.075510). The last one, especially, is quite tricky due to the computation of the velocity laplacian. I tried computing it in Paraview as the divergence of the gradient field and it seems quite similar, but it is the first time that I've touched that section of the code, thus some work might still be needed. Implemented versions:; - SST-SAS_Simple (better naming is necessary), from the article of Travis et al.; - SST-SAS_Complicated (better naming is necessary), it is related to the article from Babu et al. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150:705,Adapt,Adaptive,705,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150,2,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Energy Efficiency,"## Proposed Changes; I have been implementing for SU2 the radial basis function mesh deformation method with the selection of the control points using a greedy algorithm and a volume reduction technique to reduce the computational cost. The method can be used inside the shape optimization framework when calling SU2_DEF, keeping the standard ELA differentiated by codipack for the mesh sensitivity. ; References:; Abergo, Luca, Myles Morelli, and Alberto Guardone. ""Aerodynamic Shape Optimization Based on Discrete Adjoint and RBF."" Journal of Computational Physics (2023): 111951. M. Morelli, T. Bellosta, A. Guardone, Efficient radial basis function mesh deformation methods for aircraft icing, J. Comput. Appl. Math. (2021) 113492,. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1959:206,reduce,reduce,206,https://su2code.github.io,https://github.com/su2code/SU2/pull/1959,2,"['Efficient', 'reduce']","['Efficient', 'reduce']"
Energy Efficiency,"## Proposed Changes; I have found it useful to be able to adaptively change deltaT using the Python wrapper -- this PR implements that functionality. Instead of `CDriver::GetUnsteadyTimeStep` returning `CConfig::GetTime_Step`, it was updated to return the actual dimensional timestep used in iterations. A new `CDriver::SetUnsteadyTimeStep` function was implemented that updates both `Delta_UnstTimeND` and `Delta_UnstTime` in `CConfig`. A new setter function for `Delta_UnstTime` had to be implemented to do this as well. A quick grep showed me that the only usage of `CConfig::GetTime_Step` appears to be in SU2_SOL, initialization, and outputting in the NonDimTable. However, I did see one usage of it here, which appears to be called every iteration:. https://github.com/su2code/SU2/blob/2c9fbb6cfc0f9dfbb4a1f6afb9cf5004c33b1c25/SU2_CFD/src/integration/CFEM_DG_Integration.cpp#L75. I can update that line if necessary to instead call `CConfig::GetDelta_UnstTime`. I don't _believe_ that there are any additional issues that may be arisen beyond this. ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190:58,adapt,adaptively,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190,1,['adapt'],['adaptively']
Energy Efficiency,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/933:249,Reduce,Reduces,249,https://su2code.github.io,https://github.com/su2code/SU2/pull/933,1,['Reduce'],['Reduces']
Energy Efficiency,"## Proposed Changes; In a nutshell, we still solve a linear system to update the solution, but the approximate Jacobian is replaced by matrix-free products with the ""real"" Jacobian which are obtained by finite differences (each product requires the computation of the residual for a perturbed solution).; This linear system is much more ill-conditioned, and so in addition to the classical linear preconditioners, it is possible to use the traditional linear system as the preconditioner (you gotta love the kind of stuff SU2 lets you get away with sometimes).; This nesting makes each iteration potentially very expensive, it is crucial not to ""over solve"" the linear systems, and to use adaptive CFL to run always at the highest CFL possible. Notwithstanding the preconditioner madness, this also works for explicit solvers, but that may only be good enough for dual time methods with relatively small time steps. This seems to be good at converging problems that would otherwise not get past a limit cycle.; I do not expect it to be faster when that is not a problem. Some references:; https://arc.aiaa.org/doi/abs/10.2514/6.2021-0857; https://arc.aiaa.org/doi/10.2514/1.J052255. Example config for the RANS ONERA M6 in the repo: [turb_ONERAM6_nk.txt](https://github.com/su2code/SU2/files/5947580/turb_ONERAM6_nk.txt); It contains the explanation and recommendations for the different parameters. The initial idea was to couple all solvers (flow, turbulence, etc.) but that makes the problem even more ill-conditioned and so I took a step back (as that also makes the implementation simpler...).; The skeleton of the coupled iteration exists in commit c97221b6f7dfd315dfceb9f59f8928790c78e0ce and it was functional... if anyone wants to take it further, it's there. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183:689,adapt,adaptive,689,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183,1,['adapt'],['adaptive']
Energy Efficiency,"## Proposed Changes; In order to structure the construction of the solvers a little bit and to remove the dependency of the driver on the solver, I created a static solver factory class. There are routines to create individual instances as well as the whole container. It should be much easier now to see what position in the containers are actually allocated for the different solvers. The `createSolver` routine is a generic one that simply calls `new`. The others have some additional checks or calls for the construction. The idea here was to remove any `if` statements in the `createSolverContainer` routine to ease readability. . If everybody agrees, we could use a similar structure for other classes as well. Let me know what you think. Note from TobiKattmann: This PR depends on #861 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/881:350,allocate,allocated,350,https://su2code.github.io,https://github.com/su2code/SU2/pull/881,1,['allocate'],['allocated']
Energy Efficiency,"## Proposed Changes; Not that anyone uses the scheme, but the sensors were missing (i.e. 0 dissipation everywhere all the time). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1052:62,sensor,sensors,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/1052,1,['sensor'],['sensors']
Energy Efficiency,"## Proposed Changes; On a user-specified upstream half-plane, fix the values of turbulence quantities to their far-field values, instead of integrating the turbulence model equations. In the far-field flow, the production terms of SST for K and omega are zero, while destruction still takes place. Thus the turbulence quantities typically decay on their way from the far-field boundary to the airfoil, until they reach the `lowerlimit`. See for instance this turbulence kinetic energy plot on the NACA0012 mesh:; ![kk_sst_copr_TKE](https://user-images.githubusercontent.com/72806890/111277953-4f805380-8639-11eb-8d34-466e612aac4e.png). This has been presented in [1] together with two solution approaches:; - *Sustaining terms*, which are additional source terms compensating the destruction terms in the far-field flow. This approach has been already implemented with the `KIND_TURB_MODEL= SST_SUST` option.; ![kk_sst_copr_sust_TKE](https://user-images.githubusercontent.com/72806890/111278024-60c96000-8639-11eb-8b1b-f4e95a3f97ab.png); - *Floor values*, which is equivalent to set the `lowerlimit` to the far-field values in the upstream region of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubuserco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236:478,energy,energy,478,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; Optimization of the Preprocessing phase;; Inclusion of the Chapmann-Enskog option for Mutation++. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Performed. I have reduced almost by half the time of the preprocessing phase, leading to a ~10% less time per iteration. This was done by:; * Calculate dPdU, dTdU, dTvedU only for the implicit case; * Avoid the calculation of eve_min and eve_max using Mutation++. Instead, return nonphysical if the vibrational temperatures reach the specified minimum and maximum value. Additionally, I have included the option of using Chapmann-Enskog for the calculation of transport equations and thermal conductivity using Mutation++",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1343:937,reduce,reduced,937,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343,1,['reduce'],['reduced']
Energy Efficiency,"## Proposed Changes; Prior to this PR, tape statistics were collected and printed for the tape of thread 0 of rank 0, with special handling for the memory usage of thread 0, which was reduced across MPI processes. This PR extends this to also take OpenMP parallel parts into account (threads other than thread 0), and reduces everything (not only used memory) across MPI processes. ## Related Work; any prior work on hybrid AD. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2235:184,reduce,reduced,184,https://su2code.github.io,https://github.com/su2code/SU2/pull/2235,2,['reduce'],"['reduced', 'reduces']"
Energy Efficiency,"## Proposed Changes; Reduce duplication and maybe make it a bit faster. We were reading the entire mesh file in four passes (open-close, open-close, ...) one for metadata (NDIME, NELEM, etc.) one for points, one for elements, and then one for markers.; Now we have a maximum of 2 (meta + reading) and if the points are listed before the elements we do it in 1 pass (there are some meshes like that in TestCases).; If we need to split actuator disk surfaces there are more passes, don't ask me how many because I'm not going to touch that function (it is probably not used often). We still do a lot of reading for single-file multizone meshes to get to each zone, and usually we put smaller meshes at the end right :sweat_smile: I won't get into that now. ## Related Work; #1345 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1361:21,Reduce,Reduce,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1361,1,['Reduce'],['Reduce']
Energy Efficiency,"## Proposed Changes; Similar to the quasi-Newton acceleration provided by `CQuasiNewtonInvLeastSquares`, the proposed toolbox class `CNewtonUpdateOnSubspace` performs a correction on adjoint solution updates by keeping track of past iterates. Here, they are used to identify eigenvectors with large eigenvalues which slow down the overall convergence and to form a (small) subspace basis from them. Each fixed-point solution update is then [projected onto that subspace and the projected part will be additionally corrected via a ""real"" Newton step (a.k.a. ""RPM"")](https://doi.org/10.1137/0730057) using the computational graph for precise derivative information. This preliminary result with one basis vector indicates that the procedure can be effective at very low additional cost (for n basis vectors, it mainly reduces to n scalar products of the current fixed-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics pro",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1217:816,reduce,reduces,816,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217,1,['reduce'],['reduces']
Energy Efficiency,"## Proposed Changes; The ```CLookUpTable``` class allows for the fast interpolation of unstructured 2D data. It was found that the query time of this class scaled significantly with the number of output variables, indicating inefficiencies in the query process.; ; These inefficiencies came from string comparison routines in the ```GetIndexOfVar``` function of the ```CLookUpTable``` class. By implementing overloaded instances of the look-up functions which retrieve data from data indices directly, the query time efficiency scaling was significantly improved. . Also reduced duplicate code within the ```CLookUpTable``` class. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214:571,reduce,reduced,571,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214,1,['reduce'],['reduced']
Energy Efficiency,"## Proposed Changes; The conjugate heat variables were not communicated properly between the flow and flamelet solver, resulting in the interface temperature between the fluid and solid to be always maintained at 300 kelvin for flamelet simulations. The changes mainly regard the recognition of the inclusion of energy for flamelet problems for the CHT methods, while in the flamelet solver, the conjugate variables are obtained from the flow solver instead of the flamelet solver itself. ; . ## Related Work; Related work includes the pull requests regarding the flamelet solver, as well as the related regression tests. The latter were obtained with this bug included, so the solution files have to be updated and the residual values in the regression tests have to be updated. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2067:312,energy,energy,312,https://su2code.github.io,https://github.com/su2code/SU2/pull/2067,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; The following members of `CHeatSolver` were allocated but never freed: `Primitive_Flow_i`, `Primitive_Flow_j`, `HeatFlux_per_Marker`, `AverageT_per_Marker`, `Surface_Areas`, `ConjugateVar`. I propose to correct this in the spirit of #1225, using containers (`std::vector`) instead of pointers. There is a bit of additional cleanup. ## Related Work; #1225 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1256:65,allocate,allocated,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256,1,['allocate'],['allocated']
Energy Efficiency,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/908:425,reduce,reducer,425,https://su2code.github.io,https://github.com/su2code/SU2/pull/908,3,['reduce'],['reducer']
Energy Efficiency,"## Proposed Changes; The implementation of the symmetry plane is incomplete. We follow here the book of Blazek, _Computational Fluid Dynamics: Principles and Applications_ . According to Blazek, (chapter 8.6) 4 conditions have to be met on a symmetry plane:. 1. No flux across the boundary; 2. $\overline n \cdot \nabla \phi = 0$ (gradient of scalars are zero); 3. $\overline n \cdot \nabla (\overline U \cdot \overline t) = 0$ (gradient of tangential velocity normal to boundary); 4. $\overline t \cdot \nabla (\overline U \cdot \overline n) = 0$ (gradient of normal velocity along the boundary). Points 2-4 all deal with gradients and can be dealt with in the gradient computation, i.e. Green-Gauss or Least Squares. According to Blazek, 2 approaches can be followed. ""One possibility is to construct the missing half of the control volume by mirroring the grid on the boundary. The fluxes and gradients are then evaluated like in the interior using reflected flow variables."" This approach can be implemented in an easy way when computing the Green-Gauss gradients. In SU2, routines are already in place that deal with GG gradients on boundaries. Here, we just have to identify the symmetry planes and mirror the flux through the faces. ; Blazek continues: ""The second methodology computes the fluxes for the halved control volume (but not accross the boundary). The components of **the residual normal to the symmetry plane** are then zeroed out. It is also necessary to correct normal vectors of those faces of the control volume, which touch the boundary. The modification consists of removing all components of the face vector, which are normal to the symmetry plane. The gradients also have to be corrected according to Eq. (8.40) [points 2,3,4 above]"". 1. Modify Green-Gauss and Least-Squares gradient computation for symmetry planes; -> This seems to work fine; 2. Fix normal components of edges connected to symmetry plane; -> This seems to work fine; 3. Fix residual components of velocity",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194:689,Green,Green-Gauss,689,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194,1,['Green'],['Green-Gauss']
Energy Efficiency,"## Proposed Changes; There was a bug in the CTurbSolver::ComputeUnderRelaxation() that would return a negative UR if the change in solution was too negative (less than the allowable decrease), which could cause the solution to head in the wrong direction. I'm not really sure why the turbulent solver version of this function was written differently than the flow solver (maybe the intention was to have a different allowable increase and decrease but they ended up being the same in the end?), but I changed it to make it consistent with the flow solver version. Also, as I mentioned in #1036, the UR parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. While on the topic of UR, I was wondering what the community's thoughts are on changing the SST models to use UR instead of solution clipping. The limits seem somewhat arbitrary to me (is there a ref?), and the tests I've done on my mesh adaptation cases have performed well where I've replaced clipping with UR. I realize this is a very limited dataset so if anyone has any strong opinions of why we should be clipping, let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1057:988,adapt,adaptation,988,https://su2code.github.io,https://github.com/su2code/SU2/pull/1057,1,['adapt'],['adaptation']
Energy Efficiency,"## Proposed Changes; This PR adds the [Piperno slope limiter](http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=71E315A30221171183B3425C51A4A33B?doi=10.1.1.493.3132&rep=rep1&type=pdf) and introduces a parameter to control the relative upwind vs central differencing in the MUSCL scheme:; <img width=""359"" alt=""Screen Shot 2020-07-17 at 11 35 28 AM"" src=""https://user-images.githubusercontent.com/19416354/87819813-b981f800-c821-11ea-85b9-c9427e7b5378.png"">; where ; - X=0 gives the original unstructured formulation for second-order variable extrapolation (default); - X=-1 gives second-order fully-upwinded MUSCL-type variable extrapolation; - X=1/2 gives third-order variable extrapolation to the cell face; - X=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ``",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050:1004,adapt,adaptation,1004,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050,1,['adapt'],['adaptation']
Energy Efficiency,"## Proposed Changes; This PR breaks up the following files:; 1. grid_movement_structure; 2. adt_structure. It also gets rid of grid_adaptation_structure and the entire SU2_MSH module. These files have not be updated in a long time are are deprecated. None of the new work in mesh adaptation by @bmunguia uses any of these routines. . ## Related Work; #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1035:280,adapt,adaptation,280,https://su2code.github.io,https://github.com/su2code/SU2/pull/1035,1,['adapt'],['adaptation']
Energy Efficiency,"## Proposed Changes; This PR contains fixes for two memory issues. - The first issue regards AD builds. The reinterpret cast of the dynamically allocated char array to an `su2double` array prevents `su2double` default constructor calls. In that case, the memory must be zero initialized in order for the AD index management to work correctly.; - Regarding the second issue, invalid reads occur when the pointers to the local arrays are used later in `CConfig::SetDefaults()` when the arrays are already out of scope. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1077:144,allocate,allocated,144,https://su2code.github.io,https://github.com/su2code/SU2/pull/1077,1,['allocate'],['allocated']
Energy Efficiency,"## Proposed Changes; This PR fixes a couple issues in the nonlinear adaptive CFL scheme. - Convergence of the linear solver was assumed if the residual was greater than 0.5, which is quite large. I replaced this with the linear solver tolerance.; - The sum of nonlinear residuals was never computed for steady since `TimeIter` was used.; - The under-relaxation parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. @jayantmukho and I wanted to discuss more possible improvements to the scheme. I wanted to open this up before making any actual changes. - Currently there is a check for stalling residuals (the sum over 100 iterations of delta_Res must be > 0.1 Res), but this doesn't protect against increasing residuals. We should implement another check to prevent divergence.; - Instead of computing a single local CFL for flow/turbulence with a reduction factor for turbulence, maybe it would be better to have both solvers make their own call to `AdaptCFLNumber` and compute their own local CFL based on their own ResRMS. I feel like this would make more sense since the solvers are decoupled anyway. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036:68,adapt,adaptive,68,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036,2,"['Adapt', 'adapt']","['AdaptCFLNumber', 'adaptive']"
Energy Efficiency,"## Proposed Changes; This PR fixes a couple of bugs I found recently. I also adapted the config preprocessing output to reflect the new output and convergence criteria options. . Furthermore it fixes the artifacts mentioned by @TobiKattmann in #774 regarding the Heatflux sensitivity. . Feel free to add any other fixes that you might came across. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798:77,adapt,adapted,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/798,1,['adapt'],['adapted']
Energy Efficiency,"## Proposed Changes; This PR incorporates a P1 solver for Radiative Heat Transfer to SU2. The P1 model is a popular 1-equation model to solve the infinite-dimensional Radiative Heat Equation (RHE) that works under the assumption that the energy distribution is linearly isotropic (1). The implementation is general and thought to allow further extension of the radiation solvers in SU2, e.g., to discrete ordinates or partial moment approximations. The solution method is staggered and works in a very similar way to the turbulence models in SU2. . (1) Frank, M., _et al._ (2006), Partial moment entropy approximation to radiative heat transfer. _Journal of Computational Physics 218(1), 1–18._ DOI: [10.1016/j.jcp.2006.01.038](https://doi.org/10.1016/j.jcp.2006.01.038). ## Related Work; - I'm preparing some tutorials at the moment that I hope to have finalised by the time of the release of 7.0.2. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/872:238,energy,energy,238,https://su2code.github.io,https://github.com/su2code/SU2/pull/872,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; This PR introduces the discrete adjoint counterpart for the multizone driver. It also comes with some heat solver-related additions for the new input/output structure as CHT (conjugate heat transfer) cases are the primary application so far. The new driver adapts many of the well-known routines for registering variables, recording, initializing and extracting adjoints. The main difference is the handling of multiple zones. . The adjoint (fixed point-) iteration approach in `CDiscAdjMultizoneDriver` is to initialize them per-zone in an outer loop and to extract adjoints with respect to _dependent variables from all zones_, thereby inherently capturing the cross dependencies.; Multiple successive evaluations of adjoints with respect to the same zone (equivalent to inner iterations in the multizone driver) are possible.; ; In order not to have to re-record a tape in the (outer) zone-loop as it can be quite costly, this branch includes some new functionalities in the underlying AD-structure which make it possible to record a ""full"" tape that holds all derivative information and that can be accessed flexibly for different input and output variables across zones.; This also overcomes the restriction that adjoints have to be evaluated in the same order as their variables had been registered.; ; This is the first version of the driver and my intention is to continue contributing to it in terms of both performance and coverage of different kinds of physical couplings in SU2. ## PR Checklist; A regression test for a heated cylinder array with conjugate heat transfer is added to `TestCases/coupled_cht/disc_adj_incomp_2d`. The very same case is used in a tutorial showcasing the new driver and CHT sensitivity analysis, see [Heated cylinders test case](https://github.com/su2code/su2code.github.io/pull/14). I'll check carefully for compiler warnings during test phase. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774:278,adapt,adapts,278,https://su2code.github.io,https://github.com/su2code/SU2/pull/774,1,['adapt'],['adapts']
Energy Efficiency,"## Proposed Changes; This PR is a preparatory step to reintegrate all the turbo-machinery features with the current develop.; In this first step, I have restructured the single-zone turbomachinery problem to run using both the SingleZoneDriver and the FluidIteration. ; The Next steps will be . - [x] Adapt the turbomachinery output with the new Output structure. ; - [ ] Fix the Multizone steady turbomachinery problem to run with the MultizoneDriver.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/866:301,Adapt,Adapt,301,https://su2code.github.io,https://github.com/su2code/SU2/pull/866,1,['Adapt'],['Adapt']
Energy Efficiency,"## Proposed Changes; This a initial merge to begin incorporating some modification to the sliding mesh interface which we are planning to improve in the next future. ## Related Work; Mostly performance improvements in the creation of the super mesh for the Weighted Average sliding mesh approach.; ADT is now used to initialize the supermesh construction. Some portions of the code were re-implemented using a smarter algorithm which reduces the code length. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2334:434,reduce,reduces,434,https://su2code.github.io,https://github.com/su2code/SU2/pull/2334,1,['reduce'],['reduces']
Energy Efficiency,"## Proposed Changes; This a initial merge to begin incorporating some modification to the sliding mesh interface which we are planning to improve in the next future. . ## Related Work; Mostly performance improvements in the creation of the super mesh for the Weighted Average sliding mesh approach.; ADT is now used to initialize the supermesh construction. Some portions of the code were re-implemented using a smarter algorithm which reduces the code length. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2332:436,reduce,reduces,436,https://su2code.github.io,https://github.com/su2code/SU2/pull/2332,1,['reduce'],['reduces']
Energy Efficiency,"## Proposed Changes; This adds/extends the turbulence solver for NEMO. As of right now, there is a lot of repeated code. ; Much testing is still needed, but the base structure is here. I hoping to get some early comments, and ideas of how to reduces the code repetition. ## Related Work; Other feature developments in NEMO, as PR #1356 and PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1385:242,reduce,reduces,242,https://su2code.github.io,https://github.com/su2code/SU2/pull/1385,1,['reduce'],['reduces']
Energy Efficiency,"## Proposed Changes; This draft PR aims to generalize and template the turbulence solver/ scalar solvers to reduce code duplication and allow NEMO access to the turbulence solvers. The ideas were discussed with @pcarruscag, @TobiKattmann and @suargi, ; I am opening up the draft PR very early, so this is very much a work in process. The main idea is use templates to introduce differing variable index values into the Scalar/Turb solvers. ## Related Work; This idea follows PR #1375 and PR #1330. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1392:108,reduce,reduce,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/1392,1,['reduce'],['reduce']
Energy Efficiency,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1348:61,efficient,efficient,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348,3,"['efficient', 'energy']","['efficient', 'energy']"
Energy Efficiency,"## Proposed Changes; This is a preparation for the upcoming release 7 ""Blackbird"". The schedule is planned like this:. - **08/27**: Pull request opening window ends. PRs with **new features** opened after this date will not be considered for v7.0.0.; - **09/01 - 09/29**: Testing phase. Only PRs with **bugfixes** and remaining PRs opened before **08/27** will be merged during that phase. ; - **09/30**: Release date. Note that we will have a stricter policy for new features for this release: Features with no documentation or tutorial(s) will not be advertised. Please also remember to prepare for #724. . If you have any questions, please let me know. Also if you can offer any help with testing/updating documentation. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/762:87,schedul,schedule,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/762,1,['schedul'],['schedule']
Energy Efficiency,"## Proposed Changes; This is the continuation to #650, so please compare these changes to the ones therein. The linear systems solved in the discrete adjoint are now in passivedouble which speeds the discrete adjoint by a factor of about 1.5 (less for low CFL, more for stiff Jacobians like those in structural FEM). This is possible because we only carry the derivatives of the residual. I tried to keep the design simple. CSysSolve and all related classes (vector, matrix, preconditioner, and matrix-vector product) have a single template parameter, the data type (which can be passivedouble or su2double). There are no provisions for ""mixed"" arithmetic, except in CSysSolve where through ::Solve (and only through ::Solve) one can ask for the solution of a system with passive Jacobian and active RHS and solution (this is possible at the expense of temporaries that are allocated only once). Passive-Passive and Active-Active work without temporaries and Active-Passive is not supported as it does not make sense (see end of previous paragraph). This is to keep the need for template specialization to a minimum. Wherever mixing types was necessary small helper methods were defined to provide the compatibility instead of specializing larger methods, I think this keeps the code readable. The place where passive and active types mix the most is CSysMatrix. This happens because the blocks are prepared by the numerics in **su2double and are then ""Set"", ""Add"", or ""Subtract"", on a CSysMatrix<passivedouble>. The solution was to inline those routines and template them also for the data type of the block (or diagonal). I only tested on one fluid adjoint and one FSI adjoint case (fingers cross not to fail too many tests). ## Related Work; #594 Does not help with memory much but helps with speed.; #648 Makes it easier to interface with an external solver and still work with the discrete adjoint.; #650 Builds on top of what is proposed there.; #543 These MKL optimizations will now be possible",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/653:874,allocate,allocated,874,https://su2code.github.io,https://github.com/su2code/SU2/pull/653,1,['allocate'],['allocated']
Energy Efficiency,"## Proposed Changes; This makes the routines InitiateComms and CompleteComms (and periodic counterparts) safe to call in parallel, until now they had to be guarded inside SU2_OMP_MASTER sections.; The calls to MPI are still only made by the master thread (funneled communication) but the buffers are packed and unpacked by all threads.; I also made a slight change which seems to make communications more efficient, we were always communicating the entire buffer, which is sized for the maximum number of variables per point, because the data was packed like this:; `o o o o _ _ _ _ o o o o _ ...` (count = 4, maxCount = 8);; I changed it to:; `o o o o o o o o ... _ _ _ _ ...`; Which allows only part of the buffer to be communicated.; (The maximum size `nPrimVarGrad*nDim*2` is actually quite large compared to the median `nVar`). In the process I also had to make a few more CGeometry routines thread safe. ## Related Work; #789; Resolves #1011. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1009:405,efficient,efficient,405,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009,1,['efficient'],['efficient']
Energy Efficiency,"## Proposed Changes; This one's really small, but when running valgrind on some of my adaptation runs, I noticed that a lot of memory was being leaked due to not deleting direct_iteration and direct_output in CDiscAdjSinglezoneDriver.; ; ## Related Work; None that I'm aware of after a cursory look through PRs. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/929:86,adapt,adaptation,86,https://su2code.github.io,https://github.com/su2code/SU2/pull/929,1,['adapt'],['adaptation']
Energy Efficiency,"## Proposed Changes; This project aims to couple the free and open-source thermodynamics library CoolProp with SU2. There are **two advantages:**. 1. More accurate numerical results. ; CoolProp can provide accurate thermodynamics properties (P, T, rho, ect) of commone fluids by either extracting experiment data from published papers, or computing based on the state-of-the-art Helmholtz energy formulations. ; So, thermodynamics properties obtained from CoolProp should be more accurate than those obtained from Van der Waals or peng robinson gas model embedded in SU2. Also, the numerical results should be more accurate.; 2. More user-friendly; To use CoolProp feature, the ony input from the user is the name of fluid. Then all other thermodynamics can be provided by CoolProp.; %FLUID_MODEL = COOLPROP; %FLUID_NAME = nitrogen; ; ## Related Work; This project references the following work:; 1.the work of coupling 'Mutationpp' with SU2.; 4. the pull request of 'Feature nppr gas #1718'. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] Simulations with the following test fluids succeed: nitrogen, oxygen, carbon dioxide, MM.; - [ ] Currently, this new feature is applied for only Euler flow. For viscous flow, further work need to be done, including viscosity, conductivity from CoolProp. ; - [ ] CoolProp does not support non-dimension.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782:389,energy,energy,389,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; This project aims to couple the free and open-source thermodynamics library CoolProp with SU2. There are **two advantages:**. 1. More accurate numerical results. ; CoolProp can provide accurate thermodynamics properties (P, T, rho, ect) of commone fluids by either extracting experiment data from published papers, or computing based on the state-of-the-art Helmholtz energy formulations. ; So, thermodynamics properties obtained from CoolProp should be more accurate than those obtained from Van der Waals or peng robinson gas model embedded in SU2. Also, the numerical results should be more accurate.; 2. More user-friendly; To use CoolProp feature, the ony input from the user is the name of fluid. Then all other thermodynamics can be provided by CoolProp.; %FLUID_MODEL = COOLPROP; %FLUID_NAME = nitrogen; ; ## Related Work; This project references the following work:; 1.the work of coupling 'Mutationpp' with SU2.; 4. the pull request of 'Feature nppr gas #1718'. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings.; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] Simulations with the following test fluids succeed: nitrogen, oxygen, carbon dioxide, MM.; - [x] Currently, this new feature is applied for only Euler flow. For viscous flow, further work need to be done, including viscosity, conductivity from CoolProp. ; - [ ] CoolProp does not support non-dimension.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1806:389,energy,energy,389,https://su2code.github.io,https://github.com/su2code/SU2/pull/1806,2,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; This removes some leftovers from when we deprecated the mesh adaptation.; I had a look at the ""adap"" branches and it seems that the new interface has completely new scripts and these are not needed, @bmunguia correct me if I am wrong. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1153:82,adapt,adaptation,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153,1,['adapt'],['adaptation']
Energy Efficiency,"## Proposed Changes; This temporarily disables the compilation of TecIO in travis to reduce the overall runtime of the jobs. We are not checking the tecplot binary output anyway at the moment.; . ## Related Work; -. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/611:85,reduce,reduce,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/611,1,['reduce'],['reduce']
Energy Efficiency,"## Proposed Changes; To improve robustness of the SU2 code, specifically when using the SST (1994/2003) model, we would like to suggest a slight modification to the lower limits of the turbulent kinetic energy (TKE) and the specific turbulent dissipation rate (Omega). Presently, the lower limits are given as follows:; TKE_LoweLimit = 1E-10; Omega_LowerLimit = 1E-4. Estimating if these lower limits are sufficiently low is very difficult.; They may be too high. This is certainly the case whether one runs in a dimensional or non-dimensional mode. It may be sufficiently low for one mode but marginally low for the second mode. Therefore, we suggest clipping the solution relative to the TKE and Omega freestream values such that:. TKE_LowerLimit = C_k * TKE_infinity; Omega _LowerLimit = C_w * Omega_infinity. Where C_k and C_w are constants. . The control over these constants is given to the user, However based on our 20 years of experience with the k-w models, Omega will not drop below 1E-3 * Omega_infinity (converged solution). However, in the process of convergence, it may reach lower values. Therefore, a value of . C_w = 1E-6. is reasonable. The solution of TKE is not very sensitive to C_K (assume it is sufficiently low). We recommended:. C_K = 1E-20. setting these as default values. . ## Related Work; Results of the change on convergence of VFE2 test case are presented. Two configurations of CFL adaptation were tested on both the original and modified lower limit code, ; 1. CFL_ADAPT_PARAM= ( 0.99, 1.005, 5.0, 50.0, 0.0001 ) named max CFL 50 ; 2. CFL_ADAPT_PARAM= ( 0.99, 1.05, 5.0, 200.0, 0.0001 ) named max CFL 200. ![rms Rho](https://github.com/su2code/SU2/assets/139676851/6481464c-6da3-4565-8415-d19d9ea211ab). ![rms k](https://github.com/su2code/SU2/assets/139676851/e1582ea2-f77e-4814-9eda-dd41c006aabf). we point out that beyond the change in maximum CFL, also the acceleration rate is changed. . Beyond adding robustness allowing the the use of a CFL of 200 which diver",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323:203,energy,energy,203,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; With steady computations, the pywrapper call to `SU2Driver.Run()` will run it for the number of iterations in the config file. The first change this PR makes is that a call to `SU2Driver.Preprocess(nIter)` will overwrite the number of inner iterations when the case is not time dependent. We can now do `SU2Driver.Run()` for a single iteration by setting `SU2Driver.Preprocess(1)`. A call to `SU2Driver.Monitor(Iter)` will check the stopping criteria, including the maximum number of iterations. When you have set this to 1 using `SU2Driver.Preprocess(1)`, a call to `SU2Driver.Monitor(0)` will still stop the calculations because we are checking if (iter+1)>=nIter. The second change is that we now check if (iter >= nIter). I also change this behavior for time dependent problems to make this behavior consistent. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960:424,Monitor,Monitor,424,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960,2,['Monitor'],['Monitor']
Energy Efficiency,"## Proposed Changes; ```; CVariable -> CFlowVariable -> CEulerVariable -> CNSVariable; ```; **Likewise for incompressible and NEMO.**. **CFlowVariable** stores, allocates, and gives access to, primitives, their gradients and limiters, and a few other odd things.; For now this is just cleanup but it can be used to give non-virtual access to these flow variables to other solvers.; For example, the scalar solver #1330 can static_cast or dynamic_cast the nodes of the flow solver to access some quantities more efficiently.; I'll leave that for after #1330 is merged. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1375:161,allocate,allocates,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375,2,"['allocate', 'efficient']","['allocates', 'efficiently']"
Energy Efficiency,"## Scope; Elasticity problems can be quite demanding linear solver wise as your typical case will have very few Dirichlet boundaries.; Common iterative methods can only go so far, and pseudo time strategies to improve conditioning do not work as well as for fluid problems due to the elliptic nature of the equations.; Scalability is also an issue since most preconditioners get weaker as the problem gets partitioned.; Direct sparse solvers handle these problems just fine, so life is good again, until you run out of RAM that is (which only ever happens in 3D). Time complexity is about O(N^2) and storage O(N^1.5). ## Proposed Changes; Wrapper class for Inria's direct sparse solver [PaStiX](http://pastix.gforge.inria.fr/files/README-txt.html).; Why this solver? Because it is open source, has active development in advanced features like GPU support and compression techniques to reduce memory footprint, and from my experience it is really robust. ## Implementation; As this feature benefits mostly the FSI people (@rsanfer, @cvencro, and me) I tried to keep it as standalone as possible.; The core implementation is in separate files and nothing needs to change in CSysMatrix for this to work. ## Usage; Available factorizations:; - LDLT; - LU; - ILU(k). The ILU is different from the one we have in that it is computed for the entire matrix and not just for the local matrices (i.e. it considers halos), it is not very fast though.; The three factorizations can be used as preconditioners via options PASTIX_ILU, PASTIX_LU, and PASTIX_LDLT. And the first two as solvers via options PASTIX_LU and PASTIX_LDLT (in which case you should use a preconditioner type that does not cause CSysMatrix to allocate extra memory (LU_SGS).; The reason LDLT and LU can also be used as preconditioners is that it is possible to set a factorization frequency (via PASTIX_FACTORIZATION_FREQUENCY) so that the factorizations are only computed every N iterations or only on the first call (frequency set to 0), th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771:885,reduce,reduce,885,https://su2code.github.io,https://github.com/su2code/SU2/pull/771,1,['reduce'],['reduce']
Energy Efficiency,"## Steps to reproduce the underlying issue. Compile SU2 with Clang and `-fsanitize=address` (and possibly `-fno-omit-frame-pointer`), and run the testcases as usual. AddressSanitizer warnings appear in the output (if any). So far, only the tests in serial_regression.py have been analyzed. ## Proposed Changes. Depending on the context of the memory leak, ; - add `delete` / `delete[]` statement; - turn `new`-allocated arrays into `std::vector`s, or; - for one bug caused by a `delete` to a base class pointer, make its destructor `virtual`. . ## Related Work. #2211 and #2213 have been detected in the same way, but I'm not sure how to properly fix them. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [not necessary] I have added a test case that demonstrates my contribution, if necessary.; - [not necessary] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2212:410,allocate,allocated,410,https://su2code.github.io,https://github.com/su2code/SU2/pull/2212,1,['allocate'],['allocated']
Energy Efficiency,"### Discussed in https://github.com/su2code/SU2/discussions/1877. <div type='discussions-op-text'>. <sup>Originally posted by **ChristianBauerEng** January 5, 2023</sup>; I would like to monitor the average fluid temperatures in parts of the domain volume. For example here i the part marked red.; ![grafik](https://user-images.githubusercontent.com/42602495/210860583-4e521476-096e-454c-9824-33de652b8e40.png); </div>. In the discussion it became clear, that surface-averages and integrals are supported by means of specifying an MARKER_INTERNAL in the mesh. Could it be possible to extend this functionality to support also volume-elements for MARKER_INTERNAL?. Which code changes would be required to make this happen?. Kind regards,. Christian",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1894:187,monitor,monitor,187,https://su2code.github.io,https://github.com/su2code/SU2/issues/1894,1,['monitor'],['monitor']
Energy Efficiency,"): 0.5, 0.02.; The method includes a grid stretching correction (p = 0.3).; Scalar upwind solver for the turbulence model.; First order integration in space.; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 999999999 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot binary (.plt).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; +-----------------------------------------+; | Marker Type| Marker Name|; +-----------------------------------------+; | Far-field| Tria-2-Bndry|; | | Tria-4-Bndry|; | | Tria-5-Bndry|; +-----------------------------------------+; | Symmetry plane| Tria-3-Bndry|; | | Quad-6-Bndry|; +-----------------------------------------+; | Heat flux wall| ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:1914,Reduce,Reduce,1914,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['Reduce'],['Reduce']
Energy Efficiency,"**Describe the bug**. For optimising a symmetric NACA 0012 airfoil, SU2 does not detect the `AIRFOIL_THICKNESS` automatically as it does for the complete geometry. . When `SU2_GEO` is utilized, it stops at the following stage without evaluating `AIRFOIL_THICKNES`, `AIRFOIL_TOC` and etc. -------------------- Objective function evaluation ----------------------. Station 1. YCoord: 0 m,. Due to this, I can't set an `OPT_CONSTRAINT` for the simulation. Please help me if there is a workaround for this. **Desktop (please complete the following information):**; - OS: WINDOWS; - C++ compiler and version: WINDOWS POWERSHELL; - SU2 Version: 7.2.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1543:612,POWER,POWERSHELL,612,https://su2code.github.io,https://github.com/su2code/SU2/issues/1543,1,['POWER'],['POWERSHELL']
Energy Efficiency,"**Describe the bug**. Hi, everyone. I'm trying to using hybrid rans/les method in my work. However, it seems that the implementation of SA_EDDES length scale in su2 is different from the paper, so I wonder whether it is a bug or just for the sake of experience. The relevant code locate in the void SetDES_LengthScale() function in SU2_CFD/src/solvers/CTurbSASolver.cpp， in line 1480 to 1495 the vorticity-adaptive SGS is calculated. But different for the published function, the absolute value of edge vector between vertex i and j are used and such a form seems unphysical. 1480 ln_max = 0.0;; 1481 deltaDDES = 0.0;; 1482 for (iNeigh = 0;iNeigh < nNeigh; iNeigh++){; 1483 jPoint = geometry->nodes->GetPoint(iPoint, iNeigh);; 1484 coord_j = geometry->nodes->GetCoord(jPoint);; 1485 for (iDim = 0; iDim < nDim; iDim++){; 1486 delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]); //why absolute value; 1487 }; 1488 deltaDDES = geometry->nodes->GetMaxLength(iPoint);; 1489 ln[0] = delta[1]*ratioOmega[2] - delta[2]*ratioOmega[1];; 1490 ln[1] = delta[2]*ratioOmega[0] - delta[0]*ratioOmega[2];; 1491 ln[2] = delta[0]*ratioOmega[1] - delta[1]*ratioOmega[0];; 1492 aux_ln = sqrt(ln[0]*ln[0] + ln[1]*ln[1] + ln[2]*ln[2]);; 1493 ln_max = max(ln_max,aux_ln);; 1494 vortexTiltingMeasure += nodes->GetVortex_Tilting(jPoint);; 1495 }. Any help would be appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462:406,adapt,adaptive,406,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462,1,['adapt'],['adaptive']
Energy Efficiency,"**Describe the bug**. I found a bug while testing the SST model.; I'm trying to simulate the high Mach number flat plate case. The flow condition is below. Temperature (K) | Unit Re (1/m) | Mach | Pressure | Wall Temperature(K); -- | -- | -- | -- | --; 800 | 4.9×10^6 | 6.1 | 12100 | 300. After calculation, I check the flow field, including the boundary. But, the inlet boundary is not the same flow conditions I imposed. ; Here is the comparison of other models using the same flow conditions. . ![image](https://user-images.githubusercontent.com/50565314/208847631-a3ced0ab-7a70-45ee-b67e-41314b2ddfb1.png). ![image](https://user-images.githubusercontent.com/50565314/208847743-6f08eb96-ea5e-4ac5-a50a-0d980f33c547.png). So, I tried to find the cause. . When deriving the RANS equation from the energy equation, the turbulent kinetic energy(TKE) is derived from the kinetic energy of Total Energy(E) as shown below.; ![image](https://user-images.githubusercontent.com/50565314/208849564-da4f1b0a-ff2f-4732-911a-b1ed2a4ca1c8.png). In the boundary condition and initialization part, k is considered depending on whether or not the SST model is used for Total Energy. In CEulerSolver.cpp ; `bool tkeNeeded = (turbulent && config->GetKind_Turb_Model() == TURB_MODEL::SST);`; `if (tkeNeeded) { Energy_FreeStream += Tke_FreeStream; }; config->SetEnergy_FreeStream(Energy_FreeStream);`; `if (tkeNeeded) Energy_FreeStreamND += Tke_FreeStreamND;`. But In the flux calculation part, when calculating the speed of sound(a), using the total enthalpy(H). But, in this part consider only the kinetic energy. . Expressed mathematically ; ![image](https://user-images.githubusercontent.com/50565314/208861650-92b8cad6-5a1f-4742-952b-30d0187ae28b.png). but in the SU2 code using below. ![image](https://user-images.githubusercontent.com/50565314/208861902-ff614d53-d07e-4237-a04d-73a49ad5a55c.png). The speed of sound always has a slightly high value because TKE is not subtracted. See ""roe.cpp"" line 119 ~ 149. ; `",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851:798,energy,energy,798,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851,4,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi all,. The STL-file writer does not write quad surface elements (So far so good :) ). So in case of a Hexa-Grid (i.e. quad surface elements) the .stl is pretty much empty, which is not really what we want.; I will attach an image later (firewall's at it again) down below which shows a mixed surface mesh (tris and quads). On the left will be the current version of SU2 where quads are simply not written and on the right a fixed version where each quad is separated into 2 tris. ![stl_quads_tris](https://user-images.githubusercontent.com/31306376/58827759-17667700-8644-11e9-9e6f-4643d2e7fdb7.JPG). That was found (and fixed) by Fabian Woerenkaemper @ElGarno . As the output is currently overhauled, I shortly chatted with its adoptive father @talbring and I will adapt the fixed STL-writer to the new structure and it will (hopefully) go into develop with that in a somewhat near future. If you desperately ;) need that fix right now, I can add a patch for the current develop down below. Cheers, Tobi. **Desktop (please complete the following information):**; - SU2 Version: latest develop, but this problem is probably also present in older versions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/694:953,adapt,adapt,953,https://su2code.github.io,https://github.com/su2code/SU2/issues/694,1,['adapt'],['adapt']
Energy Efficiency,"**Describe the bug**; I'd like to use the FFD shape optimization feature of SU2. From a geometrical point of view the domain is very similar to the ""2 way mixing channel optimization"" tutorial example. I've therefore followed the steps of this tutorial and tested the mesh deformation with some dummy values. The result of the deformation can be seen here:; ![grafik](https://user-images.githubusercontent.com/42602495/211366671-1344820b-87f6-429f-b1d4-c396a6467440.png). The lower halve of the picture shows the original, undeformed mesh. The upper halve contains in green the original FFD box (ffd_box_0.vtk), in white the deformed FFD box and the deformed mesh (volume_deformed_0000.vtu) in blue/white. From the definition of the deformation I'd expect that the cells outside the FFD box to remain largely unchanged. Instead, here the largest deformations occur. Following the mixer-example the FFD information was added to the mesh by running SU2_DEF with a config file containing this information:; ```; %%%%%%%%%%%%%%% FFD definition %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; FFD_DEFINITION = (BOX, \; 0.012, 0.0005, 0.0,\; 0.080, 0.0005, 0.0,\; 0.080, 0.0035, 0.0,\; 0.012, 0.0035, 0.0 ); FFD_DEGREE= (4, 1, 0); FFD_CONTROL_POINT; DV_KIND = FFD_SETTING; DV_MARKER = (NS_Resonator_Wall, NS_ResonatorTip_Wall); DV_PARAM = (1.0); ```. This added the following info to the mesh:; ```; FFD_NBOX= 1; FFD_NLEVEL= 1; FFD_TAG= BOX; FFD_LEVEL= 0; FFD_DEGREE_I= 4; FFD_DEGREE_J= 1; FFD_BLENDING= BEZIER; FFD_PARENTS= 0; FFD_CHILDREN= 0; FFD_CORNER_POINTS= 4; 0.012 0.0005; 0.08 0.0005; 0.08 0.0035; 0.012 0.0035; FFD_CONTROL_POINTS= 20; 0 0 0 0.012 0.0005 -0.5; 0 0 1 0.012 0.0005 0.5; 0 1 0 0.012 0.0035 -0.5; 0 1 1 0.012 0.0035 0.5; 1 0 0 0.029 0.0005 -0.5; 1 0 1 0.029 0.0005 0.5; 1 1 0 0.029 0.0035 -0.5; 1 1 1 0.029 0.0035 0.5; 2 0 0 0.046 0.0006 -0.5; 2 0 1 0.046 0.0005 0.5; 2 1 0 0.046 0.0036 -0.5; 2 1 1 0.046 0.0035 0.5; 3 0 0 0.063 0.0007 -0.5; 3 0 1 0.063 0.0005 0.5; 3 1 0 0.063 0.0037 -0.5; 3 1 1 0.06",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1879:568,green,green,568,https://su2code.github.io,https://github.com/su2code/SU2/issues/1879,1,['green'],['green']
Energy Efficiency,"**Describe the bug**; If you follow the Quickstart tutorial, you get one warning (""The adjoint solver should use a non-dimensional flow solution"") and this error when running the CONTINUOUS_ADJOINT pass:. ```; SU2_CFD inv_NACA0012.cfg; WARNING: The adjoint solver should use a non-dimensional flow solution. Error in ""void CConfig::SetPostprocessing(unsigned short, unsigned short, unsigned short)"": ; -------------------------------------------------------------------------; CFL adaption only available for finite-volume fluid solvers.; Please select CFL_ADAPT = NO.; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; ```. **To Reproduce**; *Just follow the steps in the tutorial, one by one, and when you get to step 3 in the CONTINUOUS_ADJOINT run, you get the error.*. **Desktop (please complete the following information):**; - SU2 Version: [e.g., v7.0.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/887:481,adapt,adaption,481,https://su2code.github.io,https://github.com/su2code/SU2/issues/887,1,['adapt'],['adaption']
Energy Efficiency,"**Describe the bug**; In PR #1105 an `isnan(SU2_TYPE::GetValue(monitor))` check was introduced. I get a compiler error (serial build, no AD DD involved) `call of overload isnan(souble&) is ambiguos` so the complier is probably confused about the return type of `SU2_TYPE::GetValue(monitor)` which is `passivedouble` which itself is hardcoded to be `double` in `datatype_structure.hpp`. Or sth else is happening idk. ![image](https://user-images.githubusercontent.com/31306376/99810957-c5b9f100-2b44-11eb-80e6-b58ce4277bd2.png). I only have the problem with gcc5.3.0. On the same system I have an unsupported gcc7.4.0 that works. My private machine with gcc10.2.0 works fine as well. So I guess it is a specific compiler problem. In my I hit the :keyboard: a few times without actually knowing what I am doing:; - use `isnan(monitor)` ... same error; - use `isnan(static_cast<double>(monitor))` ... same error; - use `isnan(static_cast<double>(SU2_TYPE::GetValue(monitor)))` ... same error; - changed the return type of `GetValue` to `double` ...same error. I guess this problem is really specific to my setup. gcc5.3.0 is old but not grandpa kinda old with the release dec 2015 ... well ok maybe it is :older_man: ; I would be happy with some suggestions what to try out maybe, also if I misinterpret the error a pointer in the right direction would help. If @pcarruscag could have a quick look that would be great. . Thanks and warm regards, Tobi. **To Reproduce**; You probably cant without an old enough compiler. **Desktop (please complete the following information):**; - OS: RHES 7.6; - C++ compiler and version: g++ (GCC) 5.3.0; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1112:63,monitor,monitor,63,https://su2code.github.io,https://github.com/su2code/SU2/issues/1112,5,['monitor'],['monitor']
Energy Efficiency,"**Describe the bug**; In my transient, compressible simulation the achievable residuals strongly depend on the type of boundary condition that is specified for a wall:. MARKER_ISOTHERMAL / MARKER_HEATFLUX (h=0):; rms_density < 1e-8; rms_energy < 1e-3. MARKER_HEATTRANSFER; rms_density > 1e-5; rms_energy > 1e-1. Here the development of the overall residuals can be seen. (other residuals look similar).; ![grafik](https://user-images.githubusercontent.com/42602495/210543380-b231a0a1-6ccf-49cd-94aa-b84ffa901815.png). The temperature development along one of the walls can be seen here and is what I'd expect.; ![grafik](https://user-images.githubusercontent.com/42602495/210544363-b4302822-91fe-411a-958c-e603fddec227.png). A more detailed analysis of local residuals shows, that the energy residuals are the largest directly at the convective wall:; ![grafik](https://user-images.githubusercontent.com/42602495/210545535-70fca515-c2e0-45ed-bed8-1fd54dab0a11.png). I've tried various numerical schemes, limiters, linear solvers and gradient reconstruction methods, but none of these settings seem to improve convergence with convective BCs. I am not sure if this is an actual bug or simply a limitation due to the way the convective BC is implemented. So far the solution looks realistic, but since my case is very sensitive to cumulative heat losses this may possibly have an influence on the final outcome. **Case summary**. - Solver: RANS, transient; - Domain: 2D Axisymmetric; - Convection: SLAU2, NTS_DUCROS; - Gradients: GREEN_GAUSS; - Turbulence: SST V2003m, Sustaining; - Slope Limiter: Venkat_Wang; - Time: 2nd Order. Full setup, mesh and outputs can be found [here](https://tumde-my.sharepoint.com/:u:/g/personal/bauer_christian_tum_de/EVbBCu8i8b9FuXNl4QyC0icB3mnnd2Ac3dRFAlRI-HrVSg?e=7nA0Vt). **Desktop (please complete the following information):**; - OS: SLES 15.1; - C++ compiler and version: Intel 2021.4; - MPI implementation and version: intelMPI 2019; - SU2 Version: current master ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872:785,energy,energy,785,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872,1,['energy'],['energy']
Energy Efficiency,"**Describe the bug**; This is something I have noticed multiple times when running with JST on RANS cases: If the CFL number is increased (>5) the density residual stops changing and the solution essentially stalls: . ![image](https://user-images.githubusercontent.com/30271435/65646456-01444400-dfb0-11e9-9c77-59d3458ceb92.png). I am digging into the JST implementation to see what is going on but haven't had any luck so far. Is this something that other people have experienced and have an explanation for? . Changing the LINEAR_SOLVER_PREC sometimes helps. In this flatplate case ILU does better but for other simulations this stalling will persist. Adaptive CFL will almost certainly mess things up (even #790). Sidenote, is there a rule of thumb for which LINEAR_SOLVER_PREC and LINEAR_SOLVER to use?. **To Reproduce**; This was on the basic flatplate test case that is available with the repo. Including files here for completeness ; [flatplate_jst_Sa.tar.gz](https://github.com/su2code/SU2/files/3655187/flatplate_jst_Sa.tar.gz). If the CFL is set to 5, the solution converges as expected. But if it is increased to 8, it stops moving. . **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 16.04.11); - C++ compiler and version: g++ (GCC) 5.4.0; - MPI implementation and version: openmpi 1.10.2; - SU2 Version: v6.2.0 develop. This has been replicated on a variety of systems",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/793:654,Adapt,Adaptive,654,https://su2code.github.io,https://github.com/su2code/SU2/issues/793,1,['Adapt'],['Adaptive']
Energy Efficiency,"**Describe the bug**; When loading grid points for the ith zone, it seems that grid points for all zones after the ith zone will be loaded as well.; This grid point loading is implemented in the function of void CSU2ASCIIMeshReaderFVM::ReadPointCoordinates() . The code snippet below is doing the function. I think there should be a break for the while loop once the grid points for the required zone are loaded. /*--- Open the mesh file and jump to our zone. ---*/. mesh_file.open(meshFilename, ios::in);; FastForwardToMyZone();. /*--- Read the point coordinates into our data structure. ---*/. string text_line;; string::size_type position;; while (getline (mesh_file, text_line)) {. position = text_line.find (""NPOIN="",0);; if (position != string::npos) {. - SU2 Version:7.1.1. It should be noted that this bug is not expected to cause wrong solutions, but lead to unnecessary extra time cost and memory consumption probably.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1345:907,consumption,consumption,907,https://su2code.github.io,https://github.com/su2code/SU2/issues/1345,1,['consumption'],['consumption']
Energy Efficiency,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1229:560,reduce,reduces,560,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229,2,['reduce'],"['reduced', 'reduces']"
Energy Efficiency,"**Edit**: Besides introducing the `NdFlattener` data structure, this PR applies the following bugfixes:; - correct retrieval of the wall roughness in a multizone setup, the original intention of this PR; - the non-MPI substitute for `SU2_MPI::Allgatherv` and `Alltoallv` now takes the displacement into account; - fix #1293, adding a missing `#include` statement . Below is the original PR description. ## Proposed Changes; I think that currently the roughness at the closest wall is retrieved in a wrong way for multizone setups. The current structure is like this:. def CGeometry::ComputeWallDistance:; for each iZone:; construct an ADT which stores the markers of iZone; for each jZone:; call CPhysicalGeometry::SetWallDistance to jZone geometry which \; reduces the stored wall distances of jZone's points according to iZone's markers in the ADT and\; sets wall roughnesses of jZone's points according to data from jZone's geometry. The issue I perceive here is that the closest wall in the ADT, identified by the `markerID`, belongs to `iZone`. `iZone`'s geometry and config must therefore be an additional argument to `CPhysicalGeometry::SetWallDistance`. We must not use the wall roughness from `jZone`'s geometry and config associated to the markerID, as it is currently done. ## Related Work; ?; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documenta",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286:758,reduce,reduces,758,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286,1,['reduce'],['reduces']
Energy Efficiency,"**Is your feature request related to a problem? Please describe.**. Hello guys,. Have you ever heard about MHD(magnetohydrodynamics) simulation? That's used in plasma physics with the hypothesis that most of the particles in a control volume have the same velocity. However, the atoms' first electrons are stripped and, hence, magnetic field confinement to the plasma is possible due to ions and electrons' net charge. Moreover, due to the huge mass difference between ion and electron, they are normally treated as two-fluid interacting with each other. The most successful MHD code is produced by [PPPL](https://w3.pppl.gov/~nferraro/m3dc1.html), but not open source. I want to base on SU2 to make a flexible one. Do you think a feature_* or develop branch is better?. feature_ExMHD(extended MHD) may be a good branch name?. **Describe alternatives you've considered**; If there already exists the relevant module concerning the electromagnetic content, please let me know. Importantly, if there exists a chemical diffusion problem solver, it would reduce my coding time significantly by imitating the code. . If anyone can give some guidance on how to change the governing equations quickly and safely, please inform me.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/741:411,charge,charge,411,https://su2code.github.io,https://github.com/su2code/SU2/issues/741,2,"['charge', 'reduce']","['charge', 'reduce']"
Energy Efficiency,"**Is your feature request related to a problem? Please describe.**. Overset grids are very advantageous for storage separation or rotorcraft dynamic problems where rigid bodies move independently. In the past, it is shown that SU2 can be adapted to work with the overset grid as shown in [video](https://www.youtube.com/watch?v=tsr-1Qyk1AQ) [paper](https://arc.aiaa.org/doi/abs/10.2514/6.2015-3428) however this future newer added to community version. . **Describe the solution you'd like**. I would like to get the idea of the community about overset grids, the possible implementation, and the work effort required for such a modification. . Any contribution/suggestion is highly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1905:238,adapt,adapted,238,https://su2code.github.io,https://github.com/su2code/SU2/issues/1905,1,['adapt'],['adapted']
Energy Efficiency,"**Is your feature request related to a problem? Please describe.**; For the problems in which parameters located in only a limited region vary much faster than others, the mesh is able to self-adjust to reduce the requirement to computational resources. One mature framework of the technique is [Chombo](https://commons.lbl.gov/display/chombo?atl_token=81243520c3e3754ade36ac0a45eb4e156dac45e0), which can surprisingly reduce the time required to finish the computation job for the aforementioned problem such as moving shock-wave. **Describe the solution you'd like**; AMR frame option added. ; Maybe it will be very difficult to merge Chombo and SU2, and not necessary. We can also develop our own AMR algorithm based on current research. **Describe alternatives you've considered**; The aim of AMR is just for reducing run time. Or just increase the Grid number . **Additional context**; [Adaptive Mesh Refinement.pdf](https://github.com/su2code/SU2/files/3426255/Adaptive.Mesh.Refinement.pdf); [An introduction to AMR.pdf](https://github.com/su2code/SU2/files/3426257/An.introduction.to.AMR.pdf)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/743:203,reduce,reduce,203,https://su2code.github.io,https://github.com/su2code/SU2/issues/743,4,"['Adapt', 'reduce']","['Adaptive', 'reduce']"
Energy Efficiency,"**Is your feature request related to a problem? Please describe.**; In my application the heat flux over various surfaces is an important figure of merit of a specific design. Being able to monitor the average (or total) heat flux over different surfaces during runtime would be a good metric for judging convergence and quality of the design. Currently (as of 7.3.0) this does not seem to be possible. *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*; In my mesh I have defined various markers which indicate the surfaces of interest, where I would like the average heat-flux to evaluate over time. As suggested by the DryRun info I've indicated the surfaces with the MARKER_MONITORING specifier in the config file:. `MARKER_MONITORING = (NS_WALL_RESONATORTIP, NS_WALL_RESONATOR3, NS_WALL_RESONATOR2)`. However, the history and screen output shows only the heat flux aggregated over all surfaces. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. I would like the values of the HEAT group to behave just like those of the FLOW_COEFF group, where the heat flux is indicated on a per-surface basis. This would allow me to track the development of the heat fluxes with good time resolution, without having to write an excessive amount of surface files. The output in the solution history could be similar to that of other output groups, i. e.:; `""Avg_HeatFlux(SURF1)"",""Avg_HeatFlux(SURF2)"",...`. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*; Regularly exporting the entire surface data to discrete files and analyzing them during post-processing is a possible work-around, but leads to an excessive amount of files. **Additional context**; *Add any other context or screenshots about the feature request here.*; My cases are highly transient and require quite some timesteps until a quasi-stationary limit cycle ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1531:190,monitor,monitor,190,https://su2code.github.io,https://github.com/su2code/SU2/issues/1531,1,['monitor'],['monitor']
Energy Efficiency,"**Is your feature request related to a problem? Please describe.**; In my transient cases I would like to average the flow-field over many time-iterations, in order to filter out highly dynamic effects. For me the volumentric time-averages and rms values have significant value. However, I have observed, that once averaging is enabled, the solver performance gradually decreases up to a point, where time-iterations are orders of magnitudes slower than without averaging. This does not seem to be a bug but rather inherent to the way averaging is implemented. I suspect, that the averaging occurs over all timesteps and thus a complete history of all the values is required. This may gradually increase memory consumption and effort for calculating averages. I suspect this to happen around here, but I may be wrong. https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/tools/CWindowingTools.cpp#L69-L76. I assume, that this may be a necessity for the higher-order windows, but seems to be overkill for a rectangular window, where the new time-average can be computed from the previous time-average, the number of iterations and the new values. Nevertheless, also the rectangular window seems to save the full value history:. https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/tools/CWindowingTools.cpp#L94-L100. **Describe the solution you'd like**; Being able to calculate (at least) non-windowed time-averages without a gradual drop in performance would be a real asset for me. This may be possible by choosing a different averaging method. If this cannot be done due to the data structure used, a dry-run message warning the user about this may be helpful. . **Describe alternatives you've considered**; The same effect can be achieved by running simulations without time-averaging but with regular volumetric outputs and calculating time-averages as a post-processing step. However, the associated data over",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545:711,consumption,consumption,711,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545,1,['consumption'],['consumption']
Energy Efficiency,"**Is your feature request related to a problem? Please describe.**; There is the option to specify an inlet profile for subsonic flows, but not supersonic flows. This feature would help reduce domain sizes and prevent divergence for no-slip walls at the inlet. **Describe the solution you'd like**; A supersonic inlet profile specification method as similar as possible to the incompressible inlet profile method would be preferable, as that method is very straightforward. Thank you!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1650:186,reduce,reduce,186,https://su2code.github.io,https://github.com/su2code/SU2/issues/1650,1,['reduce'],['reduce']
Energy Efficiency,"**Issue description**. Hi all, I am trying to run a rather large mesh computation with SU2. The mesh counts 170M cells. I managed to run it with the native SU2 mesh format with 480 cores but the preprocessing step took 90 minutes with a huge load on the file system impacting all the other users of the cluster. To reduce the load, I was thinking about using the CGNS mesh file format. However the preprocessing step fills all the RAM memory available and the job fails. All the setup being identical. . By reducing the number of cells, I am able to run with the CGNS file format. Is it a common behavior with the CGNS file format?. **Hardware and software :**; - OS: Linux Red Hat ELS 6.5; - Nodes: Intel Xeon Ivy bridge; - C++ compiler and version: intel/2018.0.1; - MPI implementation and version: intelmpi/2018.0.1; - SU2 Version: v7.2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1378:315,reduce,reduce,315,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378,1,['reduce'],['reduce']
Energy Efficiency,"**Observed behaviour**; Thread sanitizer tests in the CI pipeline fail across PRs, e.g. #2158, with errors along the lines; ```; FATAL: ThreadSanitizer: unexpected memory mapping 0x7d81770ae000-0x7d8177500000; ```. **Background and possible causes**. There is some incompatibility between sanitizers and high degrees of address space layout randomization (https://github.com/google/sanitizers/issues/1716), it seems to be triggered by a combination of too recent kernel and/or too old LLVM and affects also github runners (https://github.com/actions/runner-images/issues/9491). **Possible fixes**. From what I understand in https://github.com/actions/runner-images/issues/9491 the corresponding parameters will be adapted in the runner, but it seems that there is also a workaround at the level of the workflow (https://github.com/openvswitch/ovs/commit/fa0dfa18d5344c82bc8387b4f79f4257a59d6f58).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2241:714,adapt,adapted,714,https://su2code.github.io,https://github.com/su2code/SU2/issues/2241,1,['adapt'],['adapted']
Energy Efficiency,", propellerUpperSurface, propellerLowerSurface, propellerRightTip, propellerLeftTip ); %; % Marker of the far field (NONE = no marker); %; % Read inlet profile from a file (YES, NO) default: NO; %SPECIFIED_INLET_PROFILE= YES; %; % File specifying inlet profile; INLET_TYPE= TOTAL_CONDITIONS; MARKER_INLET = (inlet, 288.15, 101325, 0.0, 0.0, 0.0 ); MARKER_FAR= (farfield); MARKER_OUTLET = ( outlet, 101325 ); %; % Marker of the surface which is going to be plotted or designed; MARKER_PLOTTING= ( propellerUpperSurface, propellerLowerSurface, propellerRightTip, propellerLeftTip ); %; % Marker of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( propellerUpperSurface, propellerLowerSurface, propellerRightTip, propellerLeftTip ). % ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%; %; % Numerical method for spatial gradients (GREEN_GAUSS, LEAST_SQUARES, ; % WEIGHTED_LEAST_SQUARES); NUM_METHOD_GRAD= GREEN_GAUSS; %; % Courant-Friedrichs-Lewy condition of the finest grid; CFL_NUMBER= 1; %; % Adaptive CFL number (NO, YES); CFL_ADAPT= NO; %; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT_PARAM= ( 0.1, 2.0, 15, 1e6 ); %; % Runge-Kutta alpha coefficients; RK_ALPHA_COEFF= ( 0.66667, 0.66667, 1.000000 ); %; % Number of total iterations; ITER= 99999. % ------------------------ LINEAR SOLVER DEFINITION ---------------------------%; %; % Linear solver for implicit formulations (BCGSTAB, FGMRES); LINEAR_SOLVER= FGMRES; %; % Preconditioner of the Krylov linear solver (JACOBI, LINELET, LU_SGS); LINEAR_SOLVER_PREC= ILU; %; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10. % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:6171,Adapt,Adaptive,6171,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,2,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Energy Efficiency,---------------------------------------------+; | Ref. Viscosity| 1.43345e-05| 1| N.s/m^2| 1.43345e-05|; | Sutherland Temp.| 228.71| 1| K| 228.71|; | Sutherland Const.| 110.4| 1| K| 110.4|; +------------------------------------------------------------------------------+; | Prandtl (Lam.)| -| -| -| 0.72|; | Prandtl (Turb.)| -| -| -| 0.9|; +------------------------------------------------------------------------------+; | Gas Constant| 287.058| 1| N.m/kg.K| 287.058|; | Spec. Heat Ratio| -| -| -| 1.4|; +------------------------------------------------------------------------------+; -- Initial and free-stream conditions:; +------------------------------------------------------------------------------+; | Name| Dim. value| Ref. value| Unit|Non-dim. value|; +------------------------------------------------------------------------------+; | Static Pressure| 41342.4| 1| Pa| 41342.4|; | Density| 0.499813| 1| kg/m^3| 0.499813|; | Temperature| 288.15| 1| K| 288.15|; | Total Energy| 236805| 1| m^2/s^2| 236805|; | Velocity-X| 244.973| 1| m/s| 244.973|; | Velocity-Y| 0| 1| m/s| 0|; | Velocity-Z| 4.48986| 1| m/s| 4.48986|; | Velocity Magnitude| 245.014| 1| m/s| 245.014|; +------------------------------------------------------------------------------+; | Viscosity| 1.7248e-05| 1| N.s/m^2| 1.7248e-05|; | Conductivity| -| 1| W/m^2.K| -|; | Turb. Kin. Energy| 225.119| 1| m^2/s^2| 225.119|; | Spec. Dissipation| 652349| 1| 1/s| 652349|; +------------------------------------------------------------------------------+; | Mach Number| -| -| -| 0.72|; | Reynolds Number| -| -| -| 7.1e+06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model). ----------------- Integration and Numerics Preprocessing ----------------; Integration Preprocessing.; Numerics Preprocessing. ---------------------- Python Interface Preprocessing ---------------------; Setting customized ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:7830,Energy,Energy,7830,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['Energy'],['Energy']
Energy Efficiency,"----------------------------------------------------------+; | Gas Constant| 287.058| 1| N.m/kg.K| 287.058|; | Spec. Heat Ratio| -| -| -| 1.4|; +------------------------------------------------------------------------------+; -- Initial and free-stream conditions:; +------------------------------------------------------------------------------+; | Name| Dim. value| Ref. value| Unit|Non-dim. value|; +------------------------------------------------------------------------------+; | Static Pressure| 41342.4| 1| Pa| 41342.4|; | Density| 0.499813| 1| kg/m^3| 0.499813|; | Temperature| 288.15| 1| K| 288.15|; | Total Energy| 236805| 1| m^2/s^2| 236805|; | Velocity-X| 244.973| 1| m/s| 244.973|; | Velocity-Y| 0| 1| m/s| 0|; | Velocity-Z| 4.48986| 1| m/s| 4.48986|; | Velocity Magnitude| 245.014| 1| m/s| 245.014|; +------------------------------------------------------------------------------+; | Viscosity| 1.7248e-05| 1| N.s/m^2| 1.7248e-05|; | Conductivity| -| 1| W/m^2.K| -|; | Turb. Kin. Energy| 225.119| 1| m^2/s^2| 225.119|; | Spec. Dissipation| 652349| 1| 1/s| 652349|; +------------------------------------------------------------------------------+; | Mach Number| -| -| -| 0.72|; | Reynolds Number| -| -| -| 7.1e+06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model). ----------------- Integration and Numerics Preprocessing ----------------; Integration Preprocessing.; Numerics Preprocessing. ---------------------- Python Interface Preprocessing ---------------------; Setting customized boundary conditions for zone 0. ```; ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:8207,Energy,Energy,8207,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['Energy'],['Energy']
Energy Efficiency,-| 0.9|; +--------------------------------------------------------------------------+; | Gas Constant| 287.058| 287.058| N.m/kg.K| 1|; | Spec. Heat Ratio| -| -| -| 1.4|; +--------------------------------------------------------------------------+; -- Free-stream conditions:; +--------------------------------------------------------------------------+; | Name| Dim. value| Ref. value| Unit|Non-dim. value|; +--------------------------------------------------------------------------+; | Static Pressure| 183127| 183127| Pa| 1|; | Density| 2.12649| 2.12649| kg/m^3| 1|; | Temperature| 300| 300| K| 1|; | Total Energy| 216650| 86117.4| m^2/s^2| 2.51575|; | Velocity-X| 51.2923| 293.458| m/s| 0.174786|; | Velocity-Y| 9.04422| 293.458| m/s| 0.0308195|; |Velocity Magnitude| 52.0836| 293.458| m/s| 0.177482|; +--------------------------------------------------------------------------+; | Viscosity| 1.84592e-05| 624.034| N.s/m^2| 2.95804e-08|; | Conductivity| -| 179134| W/m^2.K| -|; | Turb. Kin. Energy| 10.1726| 86117.4| m^2/s^2| 0.000118125|; | Spec. Dissipation| 117188| 293.458| 1/s| 399.335|; +--------------------------------------------------------------------------+; | Mach Number| -| -| -| 0.15|; | Reynolds Number| -| -| -| 6e+06|; +--------------------------------------------------------------------------+. Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; Initialize Jacobian structure (Navier-Stokes). MG level: 1.; Initialize Jacobian structure (Navier-Stokes). MG level: 2.; Initialize Jacobian structure (Navier-Stokes). MG level: 3. ----------------- Integration and Numerics Preprocessing ----------------; Integration Preprocessing.; Numerics Preprocessing. ---------------------- Python Interface Preprocessing ---------------------; Setting customized boundary conditions for zone 0. -------------------------- Output Preprocessing ---------------------------; Zone 1: Euler/Navier-Stokes/RANS output structure.; History fi,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:8225,Energy,Energy,8225,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['Energy'],['Energy']
Energy Efficiency,". Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousand. Ultra fine RANS meshes can still slow things down (MG could help there), but otherwise, speedups of an order of magnitude (or more) are possible for most problems. Experiment yourselves.. sometimes you can get even more performance, sometimes less, case depending. I could use help testing this one with your cases, since I think almost all regression tests will change. As a start, I have run all of the NASA TMR 2D bump-in-channel cases. Everything looks good with that (see figures). I have also checked that the inviscid and laminar MMS give 2nd-order accuracy properly. ![bump_cd_gridconv](https://user-images.githubusercontent.com/4896083/64910870-09f36b00-d6d0-11e9-9e1c-553fd09b42c8.png); ![bump_cf_0p63_gridconv](https://user-images.githu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:2719,adapt,adaptive,2719,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['adapt'],['adaptive']
Energy Efficiency,"..654ba3dfc207e25c31da9c09860224ad4044a610), which was the original branch merged in #724. . Unfortunately, given that during this time both #753 and #774 were merged, the tests are failing now. Particularly, the disc_adj_fsi case runs into a segfault in `CDiscAdjSolver::ExtractAdjoint_CrossTerm_Geometry`, when trying to execute ; `geometry->node[iPoint]->GetAdjointCoord(Solution_Geometry);`. . I believe this is related to the changes to the index based recording introduced in #774, as the code was running before into the same problem in `CDiscAdjSolver::ExtractAdjoint_CrossTerm`, and now goes beyond this point having changed the Get routine into `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution);`. Currently, there is no `GetAdjointCoord_intIndexBased` or similar available, and its implementation requires some constructs for the indices. Therefore, I would like to ask for support from @oleburghardt and @pcarruscag to make this work with their changes. ## Related Work; #724 involuntarily removed the discrete adjoint FSI cases from the regression tests.; Branch [fix_discadjfsi](https://github.com/su2code/SU2/tree/fix_discadjfsi) successfully recovers the functionality removed.; #774 introduced relevant changes to the adjoint solver that are making.; #753 was merged and, although I tried to adapt to it, I can't guarantee it's working correctly. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803:1726,adapt,adapt,1726,https://su2code.github.io,https://github.com/su2code/SU2/pull/803,1,['adapt'],['adapt']
Energy Efficiency,"0.27 and the Cd is negative. Here follows a summary of what I have done. I have used several (multiblock structured) meshes:; - Gmsh (1M cells), SU2 and CGNS format; - ICEM (10M cells), CGNS format. At the preprocessing stage when computing the projection area of the EBW in the z-plane, I noticed that the meshes generated by Gmsh gave a wrong projection (~30 m2 instead of ~40 m2!).; I increased the height of the first cell in the boundary layer (which was set to match y+ ~ 1) and the problem disappeared when y+ got close to 30. Of course, this mesh is not usable without wall functions...; However, it does not seem to be the only problem since:; - the ICEM mesh does not converge to the expected value of Cl; - a colleague ran both (Gmsh and ICEM) meshes with identical settings on the commercial solver CFD++ and got the expected results (Cl = [0.4;0.5]). I also tried to tune these different numerical parameters, without success:; - ROE (2nd order with Vankatakrishnan/Vankatakrishnan-Wang limiter) and JST numerical schemes; - Green-Gauss or Weighted Least Square for gradients; - LU_SGS and ILU linear solver preconditionners. To make sure that SU2 was correctly compiled, I also:; - ran those simulations on SU2 v6.0.0 and v4.3.0, both compiled on Linux. I got the same results in both cases; - ran the Onera M6 test case provided with SU2; - created the same mesh that I used for the EBW with my Gmsh script but around the Onera M6 (I just changed the height of the first cell which is smaller for the M6 than for my wing). I recovered the expected results. Finally, I also ran the case with the Euler equations, on the EBW meshed with Gmsh, and recovered the expected results. In summary, I have tried several meshes from different software, with different numerical parameters on different SU2 versions, but always got bad results when solving RANS equations.; Particularly, the Gmsh mesh preprocessing on SU2 gave a bad z-projection of the EBW.; However, the same meshes gave converge",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533:1434,Green,Green-Gauss,1434,https://su2code.github.io,https://github.com/su2code/SU2/issues/533,1,['Green'],['Green-Gauss']
Energy Efficiency,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:2811,Reduce,Reduced,2811,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,4,"['Adapt', 'Reduce', 'adapt']","['Adaptive', 'Reduced', 'adapted']"
Energy Efficiency,"42deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation class that is set up for adaptation of hexahedra. The [AIAA paper from 2013](https://arc.aiaa.org/doi/abs/10.2514/6.2013-287) even dedicates a whole paragraph to explaining the hexahedral grid adaptation. I understand that a pure hex grid can be a poor case for adaptive grid refinement, but I would like to try the grid adaptivity on a hybrid mesh (with hexes and tets). Is there some reason that grid adaptivity for hexahedra is ""turned off""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/487:1485,adapt,adaptation,1485,https://su2code.github.io,https://github.com/su2code/SU2/issues/487,7,['adapt'],"['adaptation', 'adaptive', 'adaptivity']"
Energy Efficiency,"59208-effb0643-a903-48d4-9ef2-3b46162ad5f8.png). From [Running cases with CFD of NASA TMR](https://turbmodels.larc.nasa.gov/noteonrunning.html) : ""In the equation above, the![image](https://user-images.githubusercontent.com/50565314/148731540-ace2cac5-4168-48d8-9125-c053806ba463.png) term is **sometimes ignored for non-supersonic speed flows**, and the second term in parentheses is identically zero for incompressible flows."" And, from [SST Turbulence model of NASA TMR](https://turbmodels.larc.nasa.gov/sst.html) : ""**When the ![image](https://user-images.githubusercontent.com/50565314/148762159-e2b08305-e205-4ffd-9ec1-e9de19cda42d.png) term is ignored in ![image](https://user-images.githubusercontent.com/50565314/148762216-7e565ca3-856d-4c18-8e16-c9ad780452b8.png) in the momentum and energy equations** and the production term is approximated by ![image](https://user-images.githubusercontent.com/50565314/148762331-d102ea3b-b5fe-42d3-aa83-ffa0f18e3104.png), a modified naming convention should be employed : **SSTm**"". In the SU2 source code( line 142 in [SU2_CFD/src/numerics/flow/flow_diffusion.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/numerics/flow/flow_diffusion.cpp)), The turbulence kinetic energy of the stress tensor is always calculated as 0. I don't know who, someone comments as ; ""// TODO why ignore turb_ke?""; This comment existed until SU2 v.7.1.0 to SU2 v.7.2.1(I'm not sure the same about the bellow SU2 v710). I guess the SST model of SU2 is 'SST' not 'SSTm'. Then, it should be used ![image](https://user-images.githubusercontent.com/50565314/148767053-79a012e3-1061-46b9-b432-359b7b04969f.png) in the stress tensor of the momentum and energy equations. The code always ignores the turbulence kinetic energy to compute the stress tensor for the momentum and energy equation.; Is it under maintenance? . Extra question) Someone working to implement for other kinds of SST(like SST-V, SST-Vm, SST-2003, SST-2003m, ... )? . Thank you for reading. ; </div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1551:4912,energy,energy,4912,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551,4,['energy'],['energy']
Energy Efficiency,"88-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034422-5a7fb987-208c-4da6-8282-5c912e671dbc.png). SA+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034460-7719f3ce-6674-4281-83fd-82ce064c452a.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. . ## Related Work; Work is related to the PR #1751. It extends it to SA turbulence model and includes cross-flow effects (LM2015) and turbulence index computations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810:2440,efficient,efficient,2440,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810,1,['efficient'],['efficient']
Energy Efficiency,": ffff9ded72916460 R15: ffff9dec7fa9b980; [3042206.619653] FS: 00002b8f7179d840(0000) GS:ffff9e0320040000(0000) knlGS:0000000000000000; [3042206.628899] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033; [3042206.635520] CR2: 0000000000000040 CR3: 0000001691b12000 CR4: 00000000001607e0; [3042206.643699] Call Trace:; [3042206.646631] [<ffffffffb1b46d07>] __audit_inode+0x1d7/0x3f0; [3042206.653063] [<ffffffffb1c6d44b>] do_last+0xd7b/0x1380; [3042206.659009] [<ffffffffb21b6bb0>] ? __mutex_unlock_slowpath+0x70/0xa0; [3042206.666409] [<ffffffffb1c6db1d>] path_openat+0xcd/0x5a0; [3042206.672546] [<ffffffffb1c6f4dd>] do_filp_open+0x4d/0xc0; [3042206.678683] [<ffffffffb1c7dd47>] ? __alloc_fd+0x47/0x180; [3042206.684917] [<ffffffffb1c5aba4>] do_sys_open+0x124/0x220; [3042206.691151] [<ffffffffb1c5acbe>] SyS_open+0x1e/0x30; [3042206.696899] [<ffffffffb21c539a>] system_call_fastpath+0x25/0x2a; [3042206.703812] Code: 00 00 55 48 89 e5 41 55 49 89 f5 48 8d 77 3c 41 54 41 89 cc 53 48 89 fb 48 83 ec 20 65 48 8b 04 25 28 00 00 00 48 89 45 e0 31 c0 <48> 8b 42 40 48 89 47 20 48 8b 42 28 8b 40 10 89 47 28 0f b7 02; [3042206.725757] RIP [<ffffffffb1b3fd8e>] audit_copy_inode+0x2e/0xd0; [3042206.732681] RSP <ffff9df884f7fc20>; [3042206.736776] CR2: 0000000000000040; [3042206.743748] ---[ end trace de1d7ae247551ab1 ]---; [3042206.749109] Kernel panic - not syncing: Fatal exception; [3042207.109891] Kernel Offset: 0x30a00000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff); ; ; It seems that this may be due to temporary locking files being created and deleted quickly in the process of the parallel write, e.g., files like restart_flow.dat.locktest.13. ; ; The errors happen frequently, but for a given dataset may happen after a different number of iterations in replicate runs. Reducing the amount of data written to disk, for example by turning off the writing of restart files or increasing the output write interval greatly reduces the frequency of the crashes.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2184:4303,reduce,reduces,4303,https://su2code.github.io,https://github.com/su2code/SU2/issues/2184,1,['reduce'],['reduces']
Energy Efficiency,"; 3.) Removal of AUSMPW+ scheme; ; ## Related Work; This work is a follow-up and a cleaner version of the work in the branch **feature_NEMO_AUSMPLUSM**. I will delete both branches after merge. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary. ### Benchmark. I have conducted a comparison between the AUSM and AUSM+M for a 2D axisymmetric non-equilibrium flow over a cylinder with a 0.1 meter diameter and a freestream of M=24, P = 10.23 N and T = 224.5 K. ![image](https://user-images.githubusercontent.com/29612207/192250118-eb074187-3002-468a-8406-b01047c790bd.png); The left image represents the converged 2nd order solution using AUSM+M and the right image using the standard AUSM scheme. The new AUSM+M scheme enables to get rid of the pressure oscillations near the stagnation area. ![image](https://user-images.githubusercontent.com/29612207/192250632-85b64454-c54c-4815-8664-f72fc17d705d.png); Temperature at the stagnation line (solid line is AUSM+M and dashed line is AUSM). ![image](https://user-images.githubusercontent.com/29612207/192250763-ee3b96db-b42f-4ebe-a256-bcb9043ecb24.png); ![image](https://user-images.githubusercontent.com/29612207/192250910-2fae95b2-eea9-4b78-96d3-0f80bb02486e.png); Pressure at the stagnation line and close-up at the stagnation point (solid line is AUSM+M and dashed line is AUSM)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773:1356,meter,meter,1356,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773,1,['meter'],['meter']
Energy Efficiency,"A new feature of monitoring pressure (or any parameter) values on some specified arbitrary points given by users in case of unsteady simulation. This feature is required for our requirement. I'd implemented this feature for a older one and using a 3rd party library called ANN (Approximate Nearest Neighbor). I wanna know whether implementation using such library can be merged with master version? AFAIK it's not practiced. As Harichand, my colleague said a data structure is already available for tree search which can be implemented. Please tell me how this can be implemented so it clears the eligibility of merge. ; Thanks; Soumen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466:17,monitor,monitoring,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/466,1,['monitor'],['monitoring']
Energy Efficiency,"A spark initialization was not possible with CFL adaptation, as the CFL number would increase too far before the spark initiates the combustion. This led to immediate flashback or blow-off. An additional parameter in the CFL adaptation defines the iteration, at which the CFL adaption should start. This allows the combustion to stabilize before the CFL number increases. Before the initial iterations has not started, the CFL number does not get adapted in either direction.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2362:49,adapt,adaptation,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/2362,4,['adapt'],"['adaptation', 'adapted', 'adaption']"
Energy Efficiency,Adapt new periodic bc for turbo-vertex,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/666:0,Adapt,Adapt,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/666,1,['Adapt'],['Adapt']
Energy Efficiency,"Adaption of the interpolation method NearestNeighbor to turbomachinery applications when rotating frame is used. ## Proposed Changes; *If the flow is solved in a rotating frame, the grid is not actutally rotating. But the interpolation for a sliding interface should be done with an actually rotated boundary. The proposed changes add the function of rotating grid points on the boundary of a zone solved in rotating frame before the interpolation is executed. Currently, this is only implemented in CNearestneighbor class, other interpolation method should be changed as well in the near future.*. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ yes ] I am submitting my contribution to the develop branch.; - [ yes ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ yes ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173:0,Adapt,Adaption,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173,1,['Adapt'],['Adaption']
Energy Efficiency,Adaptive CFL condition (apart from currently available fixed/ramp),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/94:0,Adapt,Adaptive,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/94,1,['Adapt'],['Adaptive']
Energy Efficiency,Adaptive Edge Color Group Size,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2167:0,Adapt,Adaptive,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2167,1,['Adapt'],['Adaptive']
Energy Efficiency,Adaptive Mesh Refinement,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/743:0,Adapt,Adaptive,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/743,1,['Adapt'],['Adaptive']
Energy Efficiency,"Add x, y, and z force coefficients to the history output for each monitored marker",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/67:66,monitor,monitored,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/67,1,['monitor'],['monitored']
Energy Efficiency,"After removing the local surface element area from the calculation, it results in viewing a map of change in the objective (e.g. drag) per 1 square meter w/ a 1 meter deflection at all nodes (for SI units). Makes it easier to see where the geometry is most sensitive.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/123:148,meter,meter,148,https://su2code.github.io,https://github.com/su2code/SU2/issues/123,2,['meter'],['meter']
Energy Efficiency,Allocate linear system for volumetric deformation in class constructor.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200:0,Allocate,Allocate,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/200,1,['Allocate'],['Allocate']
Energy Efficiency,"Allows weighted sum of objectives to be evaluated with the discrete adjoint. (Previously available only with continuous adjoint); A test case is added for this functionality in serial_regression_AD.py. Also includes:; related clean-up and standardization, such as making sure that a redundancy check inside python functions does the appropriate thing when multiple objectives are used (previously would duplicate some analyses during optimization). ; treating surface heatflux per-surface (making this more similar to how surface forces are treated) so that if multiple surfaces are included only the one specified as being monitored will be used in the objective function. ; removal of some unused variables that turned up during compiler checks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312:624,monitor,monitored,624,https://su2code.github.io,https://github.com/su2code/SU2/pull/312,1,['monitor'],['monitored']
Energy Efficiency,Another charge against pointer to pointer,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1312:8,charge,charge,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/1312,1,['charge'],['charge']
Energy Efficiency,"Another important topic from the meeting was the need to restructure the files on the main repository, to reduce their sizes and improve both readability and compilation times. Of course, any file movement will affect the developers with ongoing branches (see #582) so one suggestion is to restructure one file at a time, maybe once every month or so, to reduce the burden to everybody. I have a number of files in my radar that are priorities:; - driver_structure.cpp (I already have a branch ongoing on this, as some of you know); - iteration_structure.cpp; - config_structure.cpp; - geometry_structure.cpp; because of their length and the mixture of class structures. There is also a need to improve the includes throughout the code. . I would like to collect your thoughts.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583:106,reduce,reduce,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/583,2,['reduce'],['reduce']
Energy Efficiency,"As discussed in the last dev meeting, this deprecates the centered scheme for weakly coupled heat transfer, because it had a bug in the speed of sound, and because this made it much easier to adapt the rest of the heat solver to the scalar framework. Bonus:; - Add SLOPE_LIMITER_HEAT option.; - OpenMP of the heat solver.; - Correct issues with Inlet and Outlet boundaries and gain farfield (not implemented before) for free.; - Regression for weakly coupled heat equation (primal was not covered before).; - PyCustom markers for heat solver. ToDo:; - Bounded scalar mode.; - Docs.; - Fix sensitivity wrt inlet velocity.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1892:192,adapt,adapt,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/1892,1,['adapt'],['adapt']
Energy Efficiency,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/492:33,adapt,adaptation,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/492,7,['adapt'],"['adapt', 'adaptation', 'adaptivity']"
Energy Efficiency,Axisymmetric viscous source term bug in energy equation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1365:40,energy,energy,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/1365,1,['energy'],['energy']
Energy Efficiency,Build SU2 and run regressions on self hosted aarch64 runner scheduled,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619:60,schedul,scheduled,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619,1,['schedul'],['scheduled']
Energy Efficiency,Build on self hosted aarch64 runner scheduled 2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1659:36,schedul,scheduled,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/1659,1,['schedul'],['scheduled']
Energy Efficiency,Changed time-averaging algorithm to reduce performance impact.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1548:36,reduce,reduce,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/1548,1,['reduce'],['reduce']
Energy Efficiency,Cleanup adaptation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1153:8,adapt,adaptation,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153,1,['adapt'],['adaptation']
Energy Efficiency,Collection of improvements to reduce the computational cost of the cte. CL mode.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/455:30,reduce,reduce,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/455,1,['reduce'],['reduce']
Energy Efficiency,"Current within the fluid_model.hpp defines the CFluidModel class with varibles however, the variables have incorrect commenting for the briefs with majority of the second half being repeated. From this it's difficult to determine what the variables actually are a part of as the nomenclature of them is a little ambiguous. Could this be sorted?. `class CFluidModel {. protected:; su2double StaticEnergy, /*!< \brief Internal Energy. */; Entropy, /*!< \brief Entropy. */; Density, /*!< \brief Density. */; Pressure, /*!< \brief Pressure. */; SoundSpeed2, /*!< \brief SpeedSound. */; Temperature, /*!< \brief Temperature. */; dPdrho_e, /*!< \brief DpDd_e. */; dPde_rho, /*!< \brief DpDe_d. */; dTdrho_e, /*!< \brief DTDd_e. */; dTde_rho, /*!< \brief DTDe_d. */; Cp, /*!< \brief Specific Heat Capacity at constant pressure. */; Mu, /*!< \brief Specific Heat Capacity at constant pressure. */; dmudrho_T, /*!< \brief Specific Heat Capacity at constant pressure. */; dmudT_rho, /*!< \brief Specific Heat Capacity at constant pressure. */; Kt, /*!< \brief Specific Heat Capacity at constant pressure. */; dktdrho_T, /*!< \brief Specific Heat Capacity at constant pressure. */; dktdT_rho; /*!< \brief Specific Heat Capacity at constant pressure. */`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/414:425,Energy,Energy,425,https://su2code.github.io,https://github.com/su2code/SU2/issues/414,1,['Energy'],['Energy']
Energy Efficiency,"Dear SU2 developers,. This PR is a long effort to add Hybrid RANS/LES capabilities, specially the Delayed Detached Eddy Simulation with Grey area mitigation and low dissipation schemes proper to unsteady flows. Summary of the contribution:. - Delayed DES:; - Standard SGS; - Vorticity SGS; - Shear Layer Adapted SGS. - Several low dissipation functions:; - DDES FD; - Ducros' shock sensor; - NTS adaptive. - Variants of SA turbulence model:; - Compressibility correction; - Edwards and Chandra; - QCR 2000 (Quadratic constitutive relation). - Low dissipation schemes:; - Low dissipation Roe.; - Low Mach Roe.; - Simple low dissipation AUSM (SLAU and SLAU2). I added only a small regression test for 2D DDES, travis can not handle even the smallest 3D test case that I have. Suggestions are welcome. Best,. Eduardo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/490:304,Adapt,Adapted,304,https://su2code.github.io,https://github.com/su2code/SU2/pull/490,3,"['Adapt', 'adapt', 'sensor']","['Adapted', 'adaptive', 'sensor']"
Energy Efficiency,"Dear all,. I simulated Sym_plane_testcases from #657 ; When I simulate axisymmetric probem (AXISYMMETRIC =YES), I found odd value at symmetric axis. This problem doesn't appear when I turn off AXISYMMETRIC option. ![Cp_comparison](https://user-images.githubusercontent.com/74228020/133757118-b17e8772-9919-4cb1-b1f2-8cf18e4a48ac.png); ========================================================================; ========================================================================; .; . ![Density_comparison](https://user-images.githubusercontent.com/74228020/133757136-63ae13a2-7c3d-478f-9a81-7aaf001c6dd2.png); ========================================================================; ========================================================================; .; . ![Mach_comparison](https://user-images.githubusercontent.com/74228020/133757154-9ed10855-3070-4210-b5b5-e2e3f2fad273.png); ========================================================================; ========================================================================; .; . ![Temp_comparison](https://user-images.githubusercontent.com/74228020/133757157-18646978-20e6-49e7-a44f-ac45151b3901.png). It seems that temperature, Mach, and momentum have no problem, but density, pressure, and energy are strange at the symmetric axis...; From #657 , I think it is flux related problem. I attached version 7 configure file I used.; [Sym_BC_test.zip](https://github.com/su2code/SU2/files/7184390/Sym_BC_test.zip). I'm also trying to simulate my axisymmetric problem and this problem appears too in my case.; ![Base_Axis](https://user-images.githubusercontent.com/74228020/133761583-b3ea8fb4-876a-422c-a957-4a0ce1cc9783.png); Symmetric BC is x-axis. How I fix this problem? Could anyone help me?. Thank you. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - SU2 Version: v7.1.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373:1256,energy,energy,1256,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373,1,['energy'],['energy']
Energy Efficiency,"Dear all,. I was having some memory issues when running FSI problems using the code in my branch. In particular, when running unsteady F-S simulations (which also subiterate internally on each time step) a big amount of memory was being used, and kept increasing as the simulation moved on. I found out that new spaces in memory were being allocated every time I was updating the mesh using the volumetric movement structure, this is, every subiteration. This lead to a very big amount of memory being used. In my particular case, this problem may be solved by initializing the LinSysSol, LinSysRes and StiffMatrix in the constructor of the CVolumetricMovement class, as opposed to doing so in the function SetVolume_Deformation(). . I changed this into the branch feature_FSI_FEA, and then committed and pushed the changes. Nevertheless, I considered that these changes may affect some of your work, so instead of carrying the modification along with all the other changes in my branch, I think it is better to create a pull request now and make sure it doesn't affect negatively anybody else's work. Cheers,. Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200:340,allocate,allocated,340,https://su2code.github.io,https://github.com/su2code/SU2/pull/200,1,['allocate'],['allocated']
Energy Efficiency,"Dear all,. In my opinion, there is a bug in axisymmetric viscous source term of energy equation. ![AxiSymm_3](https://user-images.githubusercontent.com/74228020/131637195-699fc230-e499-4b32-80a4-d309fa6adb01.png); From the equation D-55 of reference in PR#1192 , the energy equation should be ; ```; ...; +v*TWO3*(2*PrimVar_Grad_i[2][1]-PrimVar_Grad_i[1][0]-v*yinv)); ...; ```. below is current code in `void CSourceAxisymmetric_Flow::ResidualDiffusion()` ; ```; residual[3] -= Volume*(yinv*(total_viscosity_i*(u*(PrimVar_Grad_i[2][0]+PrimVar_Grad_i[1][1]); +v*TWO3*(2*PrimVar_Grad_i[1][1]-PrimVar_Grad_i[1][0]; -v*yinv+U_i[0]*turb_ke_i)); +total_conductivity_i*PrimVar_Grad_i[0][1]); -TWO3*(AuxVar_Grad_i[1][1]+AuxVar_Grad_i[2][0]));; ```. I appreciate if someone let me know correct thing if I miss something.; Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1365:80,energy,energy,80,https://su2code.github.io,https://github.com/su2code/SU2/issues/1365,2,['energy'],['energy']
Energy Efficiency,"Dear reader, . Let me give a little bit background first:. When a massflow is prescribed for periodic flow (`KIND_STREAMWISE_PERIODIC= MASSFLOW`), then a pressure drop is iterated(/adapted in each iteration) to fulfill that massflow requirement. In the Volume Source term only this pressure drop is used. The initial value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Mass",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:181,adapt,adapted,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['adapt'],['adapted']
Energy Efficiency,Define Monitored Shape Area,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/788:7,Monitor,Monitored,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/788,1,['Monitor'],['Monitored']
Energy Efficiency,Enable per-surface heatflux monitoring in history,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1531:28,monitor,monitoring,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/1531,1,['monitor'],['monitoring']
Energy Efficiency,Energy balance,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/800:0,Energy,Energy,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/800,1,['Energy'],['Energy']
Energy Efficiency,Extending CFL adapt to include species transport,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2298:14,adapt,adapt,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/2298,1,['adapt'],['adapt']
Energy Efficiency,Feature CFL adaptation initial iteration,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2362:12,adapt,adaptation,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/2362,1,['adapt'],['adaptation']
Energy Efficiency,Feature libROM for reduced order modelling,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1310:19,reduce,reduced,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310,1,['reduce'],['reduced']
Energy Efficiency,Fix CFL Turbulence reduction option for adaptive cfl,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295:40,adapt,adaptive,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295,1,['adapt'],['adaptive']
Energy Efficiency,Fix incorrect adaptive CFL reporting,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/233:14,adapt,adaptive,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/233,1,['adapt'],['adaptive']
Energy Efficiency,Fixed bug in green gauss gradient computations for periodic boundaries,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/496:13,green,green,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/496,1,['green'],['green']
Energy Efficiency,Fixed possible infinite loop in mesh adaptation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/492:37,adapt,adaptation,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/492,1,['adapt'],['adaptation']
Energy Efficiency,Fixes to turbo monitor,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2320:15,monitor,monitor,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/2320,1,['monitor'],['monitor']
Energy Efficiency,"For example, take an average of the surface element size for the markers being monitored.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/100:79,monitor,monitored,79,https://su2code.github.io,https://github.com/su2code/SU2/issues/100,1,['monitor'],['monitored']
Energy Efficiency,"For simulations with **two or more bodies** defined within a mesh, it is difficult to define their corresponding areas. For instance:. `REF_AREA= 0`. Automatically determines the 'wetted' area of the two shapes 'shell1' and 'shell2' to be plotted or monitored, when we define: . ```; % Marker(s) of the surface to be plotted or designed; MARKER_PLOTTING= ( shell1, shell2 ); %; % Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( shell1, shell2 ); ```. **The problem I am having is, how do I manually define the cross-sectional area for both of these shapes, shell1, and shell2.** At the moment I am solely relying on `REF_AREA=0` to determine the area. . For my case this is especially relevant for determining proper drag coefficients.; Thanks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/788:250,monitor,monitored,250,https://su2code.github.io,https://github.com/su2code/SU2/issues/788,1,['monitor'],['monitored']
Energy Efficiency,"G from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:1646,adapt,adapts,1646,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,1,['adapt'],['adapts']
Energy Efficiency,"Got this question when running a shocktube problem. Used Euler explicit time stepping method and a fixed time step. In addition, I non-dimensionalized the variables. By cheking the solution, the solution is marching by the specified physical time. It is supposed to use the non-dimensional time step, right? If so, then a bug report is submmitted. . if (time_steping) {; # ifdef HAVE_MPI. ```; su2double rbuf_time, sbuf_time;; sbuf_time = Global_Delta_Time;; SU2_MPI::Reduce(&sbuf_time, &rbuf_time, 1, MPI_DOUBLE, MPI_MIN, MASTER_NODE, MPI_COMM_WORLD);; SU2_MPI::Bcast(&rbuf_time, 1, MPI_DOUBLE, MASTER_NODE, MPI_COMM_WORLD);; Global_Delta_Time = rbuf_time;; ```; # endif. ```; for (iPoint = 0; iPoint < nPointDomain; iPoint++){. /*--- Sets the regular CFL equal to the unsteady CFL ---*/; config->SetCFL(iMesh,config->GetUnst_CFL());. /*--- If the unsteady CFL is set to zero, it uses the defined unsteady time step, otherwise; it computes the time step based on the unsteady CFL ---*/; if (config->GetCFL(iMesh) == 0.0){; node[iPoint]->SetDelta_Time(config->GetDelta_UnstTime()); //Here should we use GetDelta_UnstTimeND?; } else {; node[iPoint]->SetDelta_Time(Global_Delta_Time);; }; }; ```. }",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/320:468,Reduce,Reduce,468,https://su2code.github.io,https://github.com/su2code/SU2/issues/320,1,['Reduce'],['Reduce']
Energy Efficiency,"Having spent some time on implementation details of linear algebra topics, and a bit of time on small algorithmic improvements to a few numerics classes, I would now like to focus on another performance bottleneck we have. One that always seemed quite daunting to tackle (to me) due to the amount of changes it would require, but recently I had a silly idea to reduce the invasiveness of the ""procedure"". Discontiguous data structures are absolute performance killers for low order FVM.; *(skip this paragraph if this is obvious)*; What data structures? All the small ones the solver needs to ""visit"" to compute residuals.; Why? Mostly because they destroy locality. The useful data stored by consecutive nodes is very far apart. Modern CPU's try to hide the latency of accessing main memory (RAM) by caching frequently used areas of that memory, this effort is very easily undermined by accessing memory at random or predictably but at very large strides.; Let me give you some numbers, for CNSVariable in 2D the average distance between the primitives at consecutive nodes is 200 doubles or 1600 bytes. ""What?! is the compiler dumb?"" No, virtual methods take up quite a bit of space `sizeof(CNSVariable)` is 424 bytes, before it allocates any data.; And that can only get worse as more functionality is added to the code. This is one of those ""well known"" things at least in a qualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:361,reduce,reduce,361,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['reduce'],['reduce']
Energy Efficiency,"Hello SU2 Community! . I am simulating flow over a 6-blade propeller and modeling 1/6th of the domain with an assumption that it is axisymmetric. I meshed the computational domain generating an unstructured grid using ANSYS Meshing with a targetted y+<1 and simulated the case using a pressure-based (SIMPLE) solver with S-A turbulence model in Fluent. It is a steady-state simulation and used a frozen rotor approach. Fluent converged after the reduction of continuity residuals by four orders of magnitude. For simulating the domain in SU2, I had converted the mesh into CGNS format, simulated with similar settings using SU2's RANS Solver (S-A) with rotating domain and periodic boundary conditions. The simulation converges as the residuals drop by two orders of magnitude and monitors stabilize after 30k iterations. . On checking the contours, the SU2 predicts relatively high y+ values, especially near the junction of propeller blade root and spinner, where the values go up to y+~250, while it is around y+=1-2 in the rest of the domain. Whereas, Fluent predicts the y+<1 throughout for the same mesh. The values of forces and moment are off by two orders, on comparing it with the Fluent and experimental results. But, flow-field and contours of pressure distribution look similar for both SU2 and Fluent. I'm wondering what might have led to the difference in the results. I have refined the mesh, but it only reduces y+ by a small number. I have attached the config file and would like some inputs. Thanks in advance. [Prop_config.txt](https://github.com/su2code/SU2/files/5857368/Prop_config.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1175:781,monitor,monitors,781,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175,2,"['monitor', 'reduce']","['monitors', 'reduces']"
Energy Efficiency,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948:933,Adapt,Adaptive,933,https://su2code.github.io,https://github.com/su2code/SU2/issues/948,1,['Adapt'],['Adaptive']
Energy Efficiency,"Hello!. I am new to SU2 and I'm having trouble running the incompressible turbulent RANS NACA0012 test case on SU2 in Windows.; I have downloaded the binary excecutables SU2 v7.3.0 and my simulation seems to stop after 250 iterations with the error:. _Error in""bool CFileWriter::OpenMPIFile(std::__cxx11::string)"":; Unable to open file restart_flow.dat_. At first I thought that perhaps my MPI I/O was causing this error to occur, however this error also appears when I run the case in serial.; I have had a look at the SU2 documentation and on this forum and so far I haven't been able to find a similar error happening for anyone else. I am not sure how to go about fixing this issue so any help is appreciated. I have attatched the configuration file and screenshots from Windows Powershell to this post and the mesh I am using is n0012_897-257.su2.; Let me know if I need to clarify any further details. Thank you!. **Desktop (please complete the following information):**; - OS: Windows 10.0.19043; - C++ compiler and version: g++ MinGW-W64 8.1.0; - MPI implementation and version: Microsoft MPI v10.1.2 ; - SU2 Version: v 7.3.0 'Blackbird'; [turb_NACA0012_sa.txt](https://github.com/su2code/SU2/files/8005251/turb_NACA0012_sa.txt); ![SU2_error_1](https://user-images.githubusercontent.com/99037921/152580001-7c7670fd-b5ca-4667-a4f5-16350cb67378.png); ![SU2_error_2](https://user-images.githubusercontent.com/99037921/152580035-fe0d1954-2044-4767-a4f8-47effb1d1082.png); ![SU2_error_3](https://user-images.githubusercontent.com/99037921/152580030-60da648d-4d96-451c-8449-e17b4a04e01d.png); ![SU2_error_4](https://user-images.githubusercontent.com/99037921/152580021-abb070b1-9d94-4649-a265-c9ad35a678d3.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1537:783,Power,Powershell,783,https://su2code.github.io,https://github.com/su2code/SU2/issues/1537,1,['Power'],['Powershell']
Energy Efficiency,"Hello, I'm Minsul. I am struggling to compile SU2-feature_adap branch. My purpose for using the branch is mesh adaptation. But the problem is that whenever I command ./meson.py build,. It shows the error message: meson.build:1:0: ERROR: Value ""c++11"" for combo option is not one of the choices. Possible choices are: ""none"", ""c++98"", ""c++03"", ""gnu++98"", ""gnu++03"". So I tried to edit meson.build file. not c++11 but c++03 or c++98. But I get to know that It is necessary of c++11 to compile SU2_CFD. Is there any one else who can help me solve this problem?. Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2033:111,adapt,adaptation,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/2033,1,['adapt'],['adaptation']
Energy Efficiency,"Hey everyone, . We (@bmunguia and I) ran the discrete adjoint on the ONERAM6 wing mesh with ~500, 000 elements and noticed the following memory usage:. MG_LEVEL | DIRECT | DISCRETE_ADJOINT; -| ------------ | -------------; 0| 1.3GB | 16GB; 2| 1.5GB | 33GB. Is this increase in memory consumption expected? . I ran the computation on the develop branch. The mesh is in TestCases/cont_adj_rans/oneram6/ . Cheers, ; Jayant",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/594:284,consumption,consumption,284,https://su2code.github.io,https://github.com/su2code/SU2/issues/594,1,['consumption'],['consumption']
Energy Efficiency,"Hi all,. I have implemented the Delayed Detached Eddy Simulation (DDES) in SU2. Also, I added 2 of the newest sub-grid scales (SGS) in order to mitigate the so-called ""grey area"": Vorticity based SGS (Deck et al. 2012) and Shear-layer adapted SGS (Shur et at. 2015). This option is available as ""HYBRID RANS/LES= SA_DDES, SA_ZDES OR SA_EDDES"". In order to lower the dissipation of the Roe scheme in LES areas, 3 different numerical blending are available: FD (Using the DDES' F_dt function), NTS (Travin et al. 2002 numerical blending) and NTS_DUCROS (the NTS + Ducros' Shock Sensor). Option: ""ROE_LOW_DISSIPATION= FD"". Lastly, 3 SA's turbulence model variants were added: Edward and Chandra Modification (SA_E), Mixing layer Compressibility Correction (SA_COMP) and both together (SA_E_COMP). I would like to hear some comments about the implementation. Regards,. Eduardo. Please see the attached pdf showing some detailed implementation and preliminary results.; [Molina_DDESinSU2.pdf](https://github.com/su2code/SU2/files/602029/Molina_DDESinSU2.pdf)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/333:235,adapt,adapted,235,https://su2code.github.io,https://github.com/su2code/SU2/pull/333,2,"['Sensor', 'adapt']","['Sensor', 'adapted']"
Energy Efficiency,"Hi all,. When I try using the mesh_adaptation.py feature with the SUPERSONIC_SHOCK option on the inviscid wedge tutorial to capture the shock, the mesh is changed incorrectly. The original and ""adapted"" meshes are:; ![adapted_quad_grid](https://user-images.githubusercontent.com/18233420/47829974-e80f2500-dd57-11e8-8318-e84ea38336ad.png); ![original_quad_grid](https://user-images.githubusercontent.com/18233420/47829975-e80f2500-dd57-11e8-941c-d552839b12f1.png). The same random element divisions also occur if I use a mesh composed of triangles:; ![original_triangle_grid](https://user-images.githubusercontent.com/18233420/47829998-01b06c80-dd58-11e8-8553-5de26b8313ca.png); ![adapted_triangle_grid](https://user-images.githubusercontent.com/18233420/47829997-01b06c80-dd58-11e8-9f1a-1f33a820292e.png). I am not sure if this is related, but when I run the KIND_ADAPT= GRAD_FLOW option to adapt based on the density gradient (as opposed to using SUPERSONIC_SHOCK), I receive the following output from SU2 from both cases along with no adaptation (even though the grid is composed of quads or triangles):; --------------------- Start numerical grid adaptation -------------------; WARNING: Tried to find 4455 cells suitable for adaptation, but only found 0; The following cell types are currently adaptable: ; + triangles; + quadrilaterals; + tetrahedrons; Your grid may have too high a percentage of other types.; Number of elements to adapt: 0. I attached the configuration file (just the inviscid tutorial config file with the added mesh adaptation parameters at the bottom) and the mesh used (just the inviscid wedge tutorial mesh). [Config_file_and_mesh.zip](https://github.com/su2code/SU2/files/2537063/Config_file_and_mesh.zip). Thanks for any help,; Alex",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606:194,adapt,adapted,194,https://su2code.github.io,https://github.com/su2code/SU2/issues/606,8,['adapt'],"['adapt', 'adaptable', 'adaptation', 'adapted']"
Energy Efficiency,"Hi all,. lately I was fixing restarts. Making sure the adjoint also has a correct primal restart is somewhat annoying due to the way the residuals are printed to screen. I want to change that to look like a normal screen output of all residuals. Here the old variant on top and the new below (field names need to be adapted to usual screen output); ![image](https://user-images.githubusercontent.com/31306376/133253618-e20b6be0-fd29-4c03-96b5-a70f84f06523.png). The code as of today only changes this for single zone and does not use the usual output routines (and is a bit hacky). I want to add multizone and use the output routines instead of this handwritten PrintDirectResidual routine. I'll look into both. Let me know if there are reasons against this or any other comments. ## Related Work; The printing tool box of Tim. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1371:316,adapt,adapted,316,https://su2code.github.io,https://github.com/su2code/SU2/pull/1371,1,['adapt'],['adapted']
Energy Efficiency,"Hi everyone,. I recently joined the SU2 community and I was wandering if probe feature (to monitor time-history of unsteady flow at chosen location) is available for the latest release of SU2. There was some discussion in 2017 & 2019 (in the issue #466) about exactly this feature but I couldn't find any updates nor confirmations of this being available. Thanks in advance!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1797:91,monitor,monitor,91,https://su2code.github.io,https://github.com/su2code/SU2/issues/1797,1,['monitor'],['monitor']
Energy Efficiency,"Hi everyone. I have used both the early version of SU2 with pyAMG (python2) and the latest SU2-feature_adap branch with python3. We have even ported its mesh adaptation implementation to the GAMMA mesh format due to geometry topology issues. ; ; However, there are two adapt options in the python implementation (ADAP_BACK, ADAP_SOURCE) and l could not still figure out how to use it because l don't know what kind of data file l should provide. For ADAP_BACK I have tried to use mesh files similar to the original volume mesh file with edges/corners in binary format (meshb) and it generally fails on complex geometries (with no ADAP_BACK option, it works nicely). Therefore, l am not sure whether l am providing the correct data file. This data file has to be only surface file with high order elements or just a volume mesh? . ADAP_SOURCE is completely mistery to me. Not much explanation inside the python code. I should also say that l don't understand the following command either. config_amg['options'] = config_amg['options'] + ' -inv-back'. Can someone please explain these plainly. I have also looked and feature_adapt Test files folder but unfortunately these options are closed and its data files are missing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2119:158,adapt,adaptation,158,https://su2code.github.io,https://github.com/su2code/SU2/issues/2119,2,['adapt'],"['adapt', 'adaptation']"
Energy Efficiency,"Hi guys,; this is to merge in the sliding mesh approach as proposed in the PhD thesis; ""Models and simulation of non-ideal fluid flows in unconventional turbomachinery: Toward highly efficient next-generation green power systems"". This request mostly includes additions to the interpolator and to the transfer classes.; The config option string to identify zone interface markers was changed from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE.; When the domain involve more than one interface, boundaries sharing the same interface should be listed as pairs in the config string, the order of the pairs doesn't matter.; Currently the code works in parallel and it is able to treat a random number of fluid zones.; Periodic support is still missing though I am planning to work on it in a future push.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/389:183,efficient,efficient,183,https://su2code.github.io,https://github.com/su2code/SU2/pull/389,3,"['efficient', 'green', 'power']","['efficient', 'green', 'power']"
Energy Efficiency,"Hi, . this PR adds streamwise periodic flow (incl energy eq) for the incompressible solver. For a more detailed information please see the [website additions](https://github.com/su2code/su2code.github.io/pull/53) including a tutorial and theory section. ~half of the lines is .cfg's as those CHT setups require a bit more real estate. So the actual code is not too long. Here a squash merge could be done as it merged develop quite a few times and has a bunch of 'small fix' commits. But to my knowledge that is not really necessary as. I am ready to pass on the red lantern to someone else 🐌 . ## Related Work; This work builds directly on #652 of @economon. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/773:50,energy,energy,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/773,1,['energy'],['energy']
Energy Efficiency,"Hi,. Possibility to give the Heatflux over a boundary in [W] instead of [W/m^2]. This was already possible in the HeatSolver but now also in Inc and Comp flow solvers.; Prescribing a fixed Watt is especially useful in optimization scenarios with Temperature OF where otherwise the optimizer can exploit that a smaller boundary almost certainly yields smaller Temperatures. The necessary SurfaceAreas are computed and stored in CGeometry instances which is computed once at program start by a call from the Driver. I also added NEMO for this feature. There is currently no Testcase which uses `INTEGRATED_HEATFLUX= YES` so one might want to change that :grimacing: :shushing_face: . For the HeatSolver this was originally introduced at some point by @oleburghardt . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1530:189,Watt,Watt,189,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530,1,['Watt'],['Watt']
Energy Efficiency,"Hi,. first of all thanks for your continuing effort in developing a very powerful CFD software. I noticed a mistake in the implementation of a part of the screen output in ""confing_structure.cpp"" in SU2-7.0.0. In the ""Physical Case Definition"" there are no cases for""Kind_Solver"" as ""INC_EULER"", ""INC_NAVIER_STOKES"" or ""INC_RANS"" and therefore there is no screen output stating which equations are going to be used in the computation. This leaves uncertainty on whether or not the set of equations chosen in the config file is actually implemented. For example in my case I would like to use SA_DDES with INC_RANS but I don't know if this combination is not implemented or just not visible in the screen output due to the mistake I mentioned before (looking at the source code it seems like it is implemented but I may missing something and fixing the screen output would help non expert users). Thanks for your time.; With Best Regards.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/846:73,power,powerful,73,https://su2code.github.io,https://github.com/su2code/SU2/issues/846,1,['power'],['powerful']
Energy Efficiency,"Hi,; I would like to optimize 3D isolated helicopter rotor blade to get optimum twist for uniform blade loading with the available power and overall helicopter weight constraints. the helicopter is 2-bladed, but i will simulate only one with periodic BCs.; Kindly help me how can I do this using SU2 on windows platform?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/343:131,power,power,131,https://su2code.github.io,https://github.com/su2code/SU2/issues/343,1,['power'],['power']
Energy Efficiency,"Hi; Might be a specific problem: Meson and Ninja work well when your system; is connected to the web network. ; However, importing the software to a disconnected network, that also lacks python3, ; make them unavailable. Would you think that it can be possible to conserve the previously configure procedure as an additional installation script? less efficient but always working...; Trying to use the configure from older versions works, but then Make aborts missing; some modules, like CHeatSolverFVM.cpp. Thanks,; Eran",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910:351,efficient,efficient,351,https://su2code.github.io,https://github.com/su2code/SU2/issues/910,1,['efficient'],['efficient']
Energy Efficiency,"I am trying to include Joule heating as a source term.; Although the source term for Joule heating is defined in numerics_structure.hpp, unlike other source terms (like Wind Gust), it is not allocated in definition_structure.cpp. Also its option is not present in either the config_structure.cpp file or the config_template.cfg file.; Is any modification of code required?. Thanks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/230:23,Joule,Joule,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/230,3,"['Joule', 'allocate']","['Joule', 'allocated']"
Energy Efficiency,"I am trying to run a big case with approximately 60 million mesh size. I am running it on multiple nodes, each having 8 processors. Problem is that I am able to make use of only 4 cores out of 8 available on each node for this size of problem and rest cores will be idle. ; If I try to run it on more cores, it fails during start and throws a message something like -- error while converting array I4 -I5 for CGNS ..........; But while checking the memory usage during solution time with 4 core per node usage (24 GB memory for each node and around 60 such nodes), it shows only 30-35% memory usage for each node.; May be something need to be improve during start up phase while reading CGNS and converting to SU2 data structure, parmetis phase etc.; This will enable efficient usage of resources for this size problem . For smaller size problems, I am able to use all the cores on each node.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/291:768,efficient,efficient,768,https://su2code.github.io,https://github.com/su2code/SU2/issues/291,1,['efficient'],['efficient']
Energy Efficiency,"I am trying to simulate a 2.5D airfoil set-up (though the example I show has a cylinder currently). I am trying to reduce the cell count by having the inlet and outlet relatively close to the airfoil (3 and 5 chords respectively). To prevent reflections I'm trying the Riemann BC. The rest of the patches of the box are periodic in such a way that the upper and lower, and front and back patches are communicated. I get what seems to be a strange even-odd decoupling at the inlet (see screen grab attached). I thought it would be related to https://github.com/su2code/SU2/issues/1090, but changing the front and back periodics to symmetry does not fix it, so I assume it must be a problem with the Riemann. I attach 2 cfg files (one with a steady state with symmetry planes, used to get the initial solution for the unsteadyc, but it also develops the same instability if I set them periodic ) and the gmsh geo file that generates the mesh. [su2bug.zip](https://github.com/su2code/SU2/files/14342916/su2bug.zip). System info:; - OS: Windows 10, Ubuntu wsl2; - C++ compiler and version: g++ (GCC) 9.4.0; - MPI implementation and version: OpenMPI 4.0.3, but I'm running serial; - SU2 Version: 8.0.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2218:115,reduce,reduce,115,https://su2code.github.io,https://github.com/su2code/SU2/issues/2218,1,['reduce'],['reduce']
Energy Efficiency,"I am wondering what it would take to adapt SU2 to model the flow of (thermally/calorically) non-ideal gases where cp, gamma, etc. vary with the state and for which the relations R = Cp - Cv, H = Cp * T, etc. are not valid. . Do all the computations of flux jacobians etc. formulated in terms of gamma already rely on the ideal gas (or polytropic) assumption? . Is this sort of thing considered unimportant since SU2 is mainly intended for aerodynamics or would it be too demanding for the solver to converge reliably?. To give a ""simple"" example where this would be useful: A converging-diverging nozzle expanding the refrigerant r134a from around 24 bar to 3 bar. Only if gamma is set to the throat value the choked flow rate will be fairly correctly predicted but the outlet temperature will then be very far below the isentropic 1D result with a real EoS. This seems to have consequences not only for the temperature field but also for the performance certainly of more complex devices.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1065:37,adapt,adapt,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065,1,['adapt'],['adapt']
Energy Efficiency,"I do not know if it exists already and /or if it is planned at all. In the case it does not exist it would be good to have output information on global energy balances at hand. This specifically applies to CHT multizone computations, but not only. **Describe the solution you'd like**; The energy balance should take care about delta enthalpy between inlet(s) and outlet(s). That can be compared to the heat transferred across the wall(s). So in a steady simulation with one inlet, one outlet and a wall the balance global balance should be zero. When working e.g. on a heat exchanger designs could also be compared with respect to their performance (e.g. NTU numbers or similar). This could be specifically interesting for multizone examples. Further that should work for steady, unsteady, open/closed domains and also consider technical work (as in the case of turbomachinery). ; Essentially it is an output request that should reflect the first law of thermodynamics (including open, transient systems and technical work).; It would help in engineering assessment, convergence control and be a check when new features are implemented. **Example**. Integrated Inlet Power [W] = 3.0050E+05; Integrated Outlet Power [W] = 2.5441E+05; Integrated Wall Heat Loss [W] = 5.4138E+03; Global Energy Balance [W] = 4.0676E+04 (could be internal energy or error); Mean Temperature Based HTC [W/m2K] = 8.5339E+02; Near-Wall Temperature Based HTC [W/m2K] = 7.7598E+02; Number of Transfer Units-NTU [-] = 1.8859E+01; Thermal Residence Time [s] = 8.0691E-03; Thermal Relaxation Time [s] = 4.2786E-04. **and/or**. 	LHS = dQtot + dHtot + Ptot;; 	RHS = dU/dt + dE/dt;; 	err_energy = LHS - RHS;; 	xcol("""", ""dHtot"", ""W"", dHtot);; 	xcol("""", ""dQtot"", ""W"", dQtot);; 	xcol("""", ""dWtot"", ""W"", Ptot);; 	xcol("""", ""LHS"", ""W"", LHS);; 	xcol("""", ""RHS"", ""W"", RHS);; 	xcol("""", ""E-imbalance"", ""W"", err_energy);; 	xcol("""", ""E-imbalance-relative"", ""%"", 100.0 * err_energy / energy_ref);; 	xwrite(""energy_balance.txt"");",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/800:152,energy,energy,152,https://su2code.github.io,https://github.com/su2code/SU2/issues/800,6,"['Energy', 'Power', 'energy']","['Energy', 'Power', 'energy']"
Energy Efficiency,"I have mainly implemented the Preaccumulation approach for the discrete adjoint solver. This drastically reduces the memory requirements. However, this requires some additional statements in the code itself. A lot of them are in the numerics_direct_mean.cpp and numerics_direct_turbulent.cpp. I hope that they will not create to much confusion. If the code is compiled with double, all of the AD::... statements are simply expanded to nothing. ~~To improve readibilty I used variadic templates to declare inputs/outputs of the preaccumulation sections. Due to this, C++11 support is now also required for the normal version of the code!~~ (Removed variadic templates for now). I will add more information about this technique to the developer wiki soon. Other important thing: I removed ADOLC support for now. I could not guarantee that it is still working.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/220:105,reduce,reduces,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/220,1,['reduce'],['reduces']
Energy Efficiency,"I noticed that there is a 'Grid Adaptation Strategy' section in the v7 .cfg files but I'm not entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143:32,Adapt,Adaptation,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143,2,"['Adapt', 'adapt']","['Adaptation', 'adaptation']"
Energy Efficiency,"I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon, I've decided to move the discussion here to get additional input. ## What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. + You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; + You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; + You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their document",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:637,power,power,637,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['power'],['power']
Energy Efficiency,"I recently downloaded and compiled the feature_adap branch of SU2. . After installing I attempted to run an adaptation case with pyamg. However my code errors out with, . 'File ""C:\bin\SU2\amginria\interface.py"", line 136, in call_pyamg; mesh_new = pyamg.adapt_mesh(mesh, remesh_options); AttributeError: module 'pyamg' has no attribute 'adapt_mesh''. Does the newest version of pyamg no longer have this method? If so, what is the fix?. Thanks; Daniel",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1380:108,adapt,adaptation,108,https://su2code.github.io,https://github.com/su2code/SU2/issues/1380,1,['adapt'],['adaptation']
Energy Efficiency,"I reduced the number of iterations for some of the regression tests. They need ~ 45 min now. This should at least temporarily help. Along with that I found one or two bugs ... Nevertheless, all of this shouldn't affect a lot of people, so I hope we can merge this in asap, to avoid any more travis runs to fail :)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/480:2,reduce,reduced,2,https://su2code.github.io,https://github.com/su2code/SU2/pull/480,1,['reduce'],['reduced']
Energy Efficiency,"I want to discuss some important issues I have encountered while running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:821,reduce,reduce,821,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,1,['reduce'],['reduce']
Energy Efficiency,"I was trying to run a discrete adjoint with the Cauchy Convergence criteria. But it wasn't terminating when it should have. . After doing some digging through the code, I came across a comment in CDiscAdjFluidIteration::Iterate where it says that only residual convergence criterion is possible. . It would be super helpful to add this as a comment in the config_template itself so that people aren't trying to use the Cauchy convergence with the discrete adjoint. But on another note, is there a reason that the Cauchy convergence is not implemented for the Discrete adjoint? The code required for it is present in CIntergration::Convergence_Monitoring, but just the right input (su2double monitor) needs to be set when calling the Convergence_Monitoring function. . I can implement this, but wanted to check to see if there was a reason why Sens_Mach or Sens_AoA weren't already being used as Cauchy criterion. . Cheers ; Jayant",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/627:691,monitor,monitor,691,https://su2code.github.io,https://github.com/su2code/SU2/issues/627,1,['monitor'],['monitor']
Energy Efficiency,"I've encountered a bug where SU2 will get stuck in an infinite loop. I've been trying out the grid adaptation code recently. Tets, rectangles, and triangles all worked fine, but hexahedra threw the code into an infinite loop. Basically, the code is missing the proper code for hexahedra in the `CGridAdaptation::SetSensorElem` function. I've attached the [offending lines 3640-3653](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/487:99,adapt,adaptation,99,https://su2code.github.io,https://github.com/su2code/SU2/issues/487,3,"['Sensor', 'adapt']","['Sensor', 'adaptation', 'adapted']"
Energy Efficiency,"I've noticed while using Valgrind that some of the recent pull requests have introduced a few memory issues. Here's a summary of the changes in this PR: . + Sets default for `ilu_fill_in` to 0 to prevent uninitialized value bugs on destruction of `CSysMatrix`; + Adds deallocation of some turbomachinery variables; + Adds NULL initialization and deallocation of some of the new markers. I also found a memory issue in a weird corner case with `RefOriginMoment_X`, `_Y`, and `_Z`. If the reference origin is defined exactly once, but no surfaces are marked for monitoring, then `RefOriginMoment_X` (and `_Y` and `_Z`) is set as an empty array. I think that's a bug. That bug creates problems in `CConfig::SetOutput`, (line 4284) where SU2 tries to print out the reference origin.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/507:560,monitor,monitoring,560,https://su2code.github.io,https://github.com/su2code/SU2/pull/507,1,['monitor'],['monitoring']
Energy Efficiency,Infinite Loop When Running Grid Adaptivity on Hexahderons,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/487:32,Adapt,Adaptivity,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/487,1,['Adapt'],['Adaptivity']
Energy Efficiency,Just compiled today and it seems like the options `CFL_ADAPT` and `CFL_ADAPT_PARAM` have been deprecated? . Running the 2D inviscid cylinder and the euler channel flow example both throw an error. ```; CFL_ADAPT: invalid option name. Check current SU2 options in config_template.cfg.; CFL_ADAPT_PARAM: invalid option name. Check current SU2 options in config_template.cfg.; ```. Commenting these lines out lets the test cases run but I'm not sure what the default behavior is (are these running with adaptive CFL if we don't pass that parameter at all?),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152:500,adapt,adaptive,500,https://su2code.github.io,https://github.com/su2code/SU2/issues/152,1,['adapt'],['adaptive']
Energy Efficiency,Mesh Adaptation and missing SU2_MSH in v7.0.8,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143:5,Adapt,Adaptation,5,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143,1,['Adapt'],['Adaptation']
Energy Efficiency,"Modified the Tecplot binary output to use the latest TecIO library and to write Tecplot szplt (SZL) files instead of Tecplot plt files. Tecplot szplt files are smaller than plt files and are utilized more efficiently in Tecplot. For large files visualization within Tecplot can be much faster and use far less memory with szplt files. To make this change work correctly, the TecplotBinary DomainMesh and DomainSolution files were modified to write a single mixed-element zone instead of separate zones for each element type. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558:205,efficient,efficiently,205,https://su2code.github.io,https://github.com/su2code/SU2/pull/558,1,['efficient'],['efficiently']
Energy Efficiency,Monitoring Pressure values on some specified points,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466:0,Monitor,Monitoring,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/466,1,['Monitor'],['Monitoring']
Energy Efficiency,Option for Joule Heating not in configuration file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/230:11,Joule,Joule,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/230,1,['Joule'],['Joule']
Energy Efficiency,Reduce discrete adjoint memory usage ~25%,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1159:0,Reduce,Reduce,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1159,1,['Reduce'],['Reduce']
Energy Efficiency,"Reduce flow solver triplication (comp, incomp, nemo)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1177:0,Reduce,Reduce,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1177,1,['Reduce'],['Reduce']
Energy Efficiency,Reduce memory footprint FEA problems,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/663:0,Reduce,Reduce,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/663,1,['Reduce'],['Reduce']
Energy Efficiency,Reduce public interface of drivers,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1996:0,Reduce,Reduce,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1996,1,['Reduce'],['Reduce']
Energy Efficiency,"SU2 is a fantastic library, but the build process is really painful to get static linking within another C++ program. CMake is a standard for building C++ projects and would be extremely helpful. Ideally Python wouldn't be necessary to build SU2 or link it with another project. In our use case we need to link the library so that we can efficiently multithread workflows, keep data in memory, and make analysis as efficient as possible. I realize this is a significant request, but a build process with CMake could be so much simpler and would make your codebase much more accessible to the C++ community. Thanks so much for all your excellent work!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1711:338,efficient,efficiently,338,https://su2code.github.io,https://github.com/su2code/SU2/issues/1711,2,['efficient'],"['efficient', 'efficiently']"
Energy Efficiency,SU2/TestCases/TestCase.py uses `platform.processor()` which returns `i386` on an Intel Core i7 MacBookPro running mac OS 11.7. This just differentiates between Power PC vs Intel processors and not necessarily between 32-bit and 64-bit architectures. This causes all the tests in the test suite to be skipped even though the machine is 64-bit. . `platform.machine()` returns `x86_64` allowing the tests to run from the TestCase.py script. . Python documentation (3.12.0) also notes that many platforms do not provide the information for `platform.processor()` or simply return the same value as for `platform.machine()`. Suggestion is to replace `platform.processor()` with `platform.machine()`.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2159:160,Power,Power,160,https://su2code.github.io,https://github.com/su2code/SU2/issues/2159,1,['Power'],['Power']
Energy Efficiency,"S_ResonatorTip_Wall); %%%%%%%%%%%%%% FFD PARAMETERS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; FFD_TOLERANCE = 1E-10; FFD_ITERATIONS = 20; FFD_CONTINUITY=USER_INPUT; % DV_PARAM = ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp ); DV_PARAM = \; (BOX, 2, 0, 0, 0.0, 1.0, 0.0); \; (BOX, 3, 0, 0, 0.0, 1.0, 0.0); \; (BOX, 4, 0, 0, 0.0, 1.0, 0.0); \; (BOX, 2, 1, 0, 0.0, 1.0, 0.0); \; (BOX, 3, 1, 0, 0.0, 1.0, 0.0); \; (BOX, 4, 1, 0, 0.0, 1.0, 0.0); % NOTE: left-most 2 points omitted, to make them fixed; % Value of the shape deformation; % first row: lower row y-direction; % second row: upper row y-direction; DV_VALUE= 0.00005, 0.0001, 0.005, \; 0.00005, 0.0001, 0.005; % ------------------------ GRID DEFORMATION PARAMETERS ------------------------%; % Linear solver or smoother for implicit formulations (FGMRES, RESTARTED_FGMRES, BCGSTAB); DEFORM_LINEAR_SOLVER= FGMRES; DEFORM_LINEAR_SOLVER_PREC= ILU; % Number of smoothing iterations for mesh deformation; DEFORM_LINEAR_SOLVER_ITER= 500; % Number of nonlinear deformation iterations (surface deformation increments); DEFORM_NONLINEAR_ITER= 1; % Minimum residual criteria for the linear solver convergence of grid deformation; DEFORM_LINEAR_SOLVER_ERROR= 1E-14; % Print the residuals during mesh deformation to the console (YES, NO); DEFORM_CONSOLE_OUTPUT= YES; % Deformation coefficient (linear elasticity limits from -1.0 to 0.5, a larger; % value is also possible); DEFORM_COEFF = 0.0; % Type of element stiffness imposed for FEA mesh deformation (INVERSE_VOLUME,; % WALL_DISTANCE, CONSTANT_STIFFNESS); DEFORM_STIFFNESS_TYPE= WALL_DISTANCE; % Deform the grid only close to the surface. It is possible to specify how much; % of the volumetric grid is going to be deformed in meters or inches (1E6 by default); DEFORM_LIMIT = 1E6; ```. **Desktop (please complete the following information):**; - OS: SLES15; - C++ compiler and version: intel compiler, 2021.4.0; - MPI implementation and version: intel-mpi 2019; - SU2 Version: current master branch",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1879:4341,meter,meters,4341,https://su2code.github.io,https://github.com/su2code/SU2/issues/1879,1,['meter'],['meters']
Energy Efficiency,Supersonic Wedge Mesh Adaptation Issue,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606:22,Adapt,Adaptation,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/606,1,['Adapt'],['Adaptation']
Energy Efficiency,Temporarily reduce regression test runtime,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/480:12,reduce,reduce,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/480,1,['reduce'],['reduce']
Energy Efficiency,Temporarily remove mass diffusion from surface energy balance,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1400:47,energy,energy,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/1400,1,['energy'],['energy']
Energy Efficiency,The COption classes should delete what they allocate,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1579:44,allocate,allocate,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/1579,1,['allocate'],['allocate']
Energy Efficiency,"The equations previously did not match the paper by Travin et al, and; are corrected in this commit. ## Proposed Changes; The hybrid upwind/central blending introduced for DES has the option to use the blending by Travin _et al._ (2002). It's referred to as the ""NTS adaptive"" blending or the ""NTS"" blending for short, and was labeled as a ""low dissipation function"". But the what's implemented in the code doesn't match the paper, and it doesn't even make sense. You can compare the code to the paper by Travin _et al.__ at: https://doi.org/10.1007/0-306-48383-1_16 or the related AIAA presentation at: https://arc.aiaa.org/doi/pdf/10.2514/6.2001-879. There's multiple issues that I believe are present:. + There's an extra square root in the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532:267,adapt,adaptive,267,https://su2code.github.io,https://github.com/su2code/SU2/pull/532,1,['adapt'],['adaptive']
Energy Efficiency,"The inlet interpolation capability that I introduced #815 is working as expected with one or few cores. For a case that I have, if I go beyond 5 cores (mpirun -n 6) the output Interpolated File has a lesser number of lines printed. There should be 5517 lines but going beyond 5 reduces them to ~3000 lines (Each line representing a node at the inlet). My best guess is that the interpolation is happening correctly but during the cout for the interpolated file, something goes wrong. I tried rank==MASTER_NODE before calling the PrintInletInterpolatedData() but that didn't resolve the issue. Is this only a cout issue? How can this be resolved?. Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/944:278,reduce,reduces,278,https://su2code.github.io,https://github.com/su2code/SU2/issues/944,1,['reduce'],['reduces']
Energy Efficiency,"The objective of this pull request is to clarify the name of some parameters. I found that:; 1. LIMITER_COEFF was confusing because: A) it is a parameters linked only to the Venkat's limiter B) Venkat's original and Wang's version use the same parameter but with different value! (0.5 vs. 0.05); 2. I found AD_COEFF_FLOW very confusing too: A) You can think that AD stands for Automatic Differentiation B) AD is too convoluted... it is just JST!; 3. REF_ELEM_LENGTH is mainly linked to Venkat's limiter... and a constant value is recommended (0.1 or 5.0 depending on the units). In the method REF_ELEM_LENGTH is multiplied by LIMITER_COEFF... so why two parameters to define a single constant (EPS)?... too many options for the user... The current config file to define the limiters or the pressure sensor is as follow:. % ----------- SLOPE LIMITER AND DISSIPATION SENSOR DEFINITION -----------------%; %; % Coefficient for the Venkat's limiter (upwind scheme). A larger values decrease; % the extent of limiting, values approaching zero cause; % lower-order approximation to the solution (0.05 by default); VENKAT_LIMITER_COEFF= 0.05; %; % 1st, 2nd and 4th order artificial dissipation coefficients for; % the JST ( 0.15, 0.5, 0.02 by default ); JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ); %; % Coefficient for the adjoint sharp edges limiter (3.0 by default).; ADJ_SHARP_LIMITER_COEFF= 3.0; %; % 1st, 2nd, and 4th order artificial dissipation coefficients for; % the adjoint JST method ( 0.15, 0.5, 0.02 by default ); ADJ_JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ). This config file is much more clear for people that are not familiar with SU2. Best,; Jonathan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/451:799,sensor,sensor,799,https://su2code.github.io,https://github.com/su2code/SU2/pull/451,2,"['SENSOR', 'sensor']","['SENSOR', 'sensor']"
Energy Efficiency,"They may be too high. This is certainly the case whether one runs in a dimensional or non-dimensional mode. It may be sufficiently low for one mode but marginally low for the second mode. Therefore, we suggest clipping the solution relative to the TKE and Omega freestream values such that:. TKE_LowerLimit = C_k * TKE_infinity; Omega _LowerLimit = C_w * Omega_infinity. Where C_k and C_w are constants. . The control over these constants is given to the user, However based on our 20 years of experience with the k-w models, Omega will not drop below 1E-3 * Omega_infinity (converged solution). However, in the process of convergence, it may reach lower values. Therefore, a value of . C_w = 1E-6. is reasonable. The solution of TKE is not very sensitive to C_K (assume it is sufficiently low). We recommended:. C_K = 1E-20. setting these as default values. . ## Related Work; Results of the change on convergence of VFE2 test case are presented. Two configurations of CFL adaptation were tested on both the original and modified lower limit code, ; 1. CFL_ADAPT_PARAM= ( 0.99, 1.005, 5.0, 50.0, 0.0001 ) named max CFL 50 ; 2. CFL_ADAPT_PARAM= ( 0.99, 1.05, 5.0, 200.0, 0.0001 ) named max CFL 200. ![rms Rho](https://github.com/su2code/SU2/assets/139676851/6481464c-6da3-4565-8415-d19d9ea211ab). ![rms k](https://github.com/su2code/SU2/assets/139676851/e1582ea2-f77e-4814-9eda-dd41c006aabf). we point out that beyond the change in maximum CFL, also the acceleration rate is changed. . Beyond adding robustness allowing the the use of a CFL of 200 which diverges under the original limit , the modified limit allows for better convergence of the flow and turbulence residuals for CFL of 50. Plots of the Lift and drag Coefficients are added here showing that results are not affected by the new limit, and additionally convergence is slightly quicker for the lift coefficient even with a CFL of 50 . . ![CL](https://github.com/su2code/SU2/assets/139676851/61adc0af-9449-41e8-aac7-e985ca3c9bdb); ![CD]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323:1416,adapt,adaptation,1416,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323,1,['adapt'],['adaptation']
Energy Efficiency,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/514:245,energy,energy,245,https://su2code.github.io,https://github.com/su2code/SU2/pull/514,2,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,This commit fixes an issue causing incorrect reporting of the specified; adaptive CFL behavior. Thanks for your consideration!,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/233:73,adapt,adaptive,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/233,1,['adapt'],['adaptive']
Energy Efficiency,"This implementation allows the definition of cartesian, cylindrical and spherical FFD boxes. The gradient evaluation itself has been also revisited to reduce the required time by skipping the surface deformation process when the variable is has been fixed by the user.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/330:151,reduce,reduce,151,https://su2code.github.io,https://github.com/su2code/SU2/pull/330,1,['reduce'],['reduce']
Energy Efficiency,"This is a relatively small code change, but the change in options will effect the config files for everyone currently using optimization, and for anyone who has an OPT_OBJECTIVE defined in their config file. . The reasoning behind deprecating this option:; -Compressing the OPT_OBJECTIVE and OBJECTIVE_FUNCTION options into a single specification will reduce potential confusion about the behavior of these options. ; -Using the new OBJECTIVE_WEIGHT option to specify not only the scaling but also the sign clarifies the behavior of the optimizer - previously, the sign of the objective function was automatically flipped behind the scenes, now this is controlled by the user.; - This change facilitates planned further modifications to allow multiple objectives. . Please feel free to comment both on the code changes themselves as well as on the new config option format",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241:352,reduce,reduce,352,https://su2code.github.io,https://github.com/su2code/SU2/pull/241,1,['reduce'],['reduce']
Energy Efficiency,"This pull request contains a bunch of clean up within the parallel mesh readers and partitioning routines. It should reduce memory usage quite a bit during preprocessing, and several important leaks have been fixed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/263:117,reduce,reduce,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/263,1,['reduce'],['reduce']
Energy Efficiency,"This pull request contains two important things:; 1. Major reductions in memory usage during grid partitioning for parallel calculations (reduced by half in some unofficial tests).; 2. Improvements to how the information needed by ParMETIS for the partitioning is prepared. At a minimum, there is some storage benefit, and in some cases, especially for mixed element meshes, slightly higher quality partitions may be obtained. The second point means that some of the parallel regression tests may break due to changes in the partitions. I have already taken care of most of these, but I'll wait for Travis CI to report any other necessary changes.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/236:138,reduce,reduced,138,https://su2code.github.io,https://github.com/su2code/SU2/pull/236,1,['reduce'],['reduced']
Energy Efficiency,"This pull request enlarges the capability of SU2 to simulate internal flows in turbomachinery. The flow solver is now capable of performing 3D steady multi-zone simulations via a 3D Non-Reflecting Mixing Plane. The implementation is based on the work done by Saxer and Giles (available at https://doi.org/10.2514/3.23618). To adapt the implementation of Saxer and Giles to an unstructured vertex-based solver such as SU2, a new data structure, called **_CTurboVertex_**, was created for the inflow and outflow boundaries. The **_CTurboVertex_** class is a child of the class **_CVertex_**; thus, it maintains all the standard vertex properties. However, more than a standard vertex, the turboVertex posses:. 1. the possibility of accessing the inflow and outflow boundaries on a span-wise manner (to impose different values of the mixing-plane condition along the blade-height) and on a pitch-wise ordered manner (to compute the Spatial Fourier Transformation of the outgoing characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.da",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:326,adapt,adapt,326,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,1,['adapt'],['adapt']
Energy Efficiency,"This pull request extends the fluid interface to viscous and turbulent calculations (SA and SST). * One note:; nVar is still passed in driver_structure.cpp:2509 but is not used. I left it, for the moment, to reduce potential conflicts but it can be removed in a future PR.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/382:208,reduce,reduce,208,https://su2code.github.io,https://github.com/su2code/SU2/pull/382,1,['reduce'],['reduce']
Energy Efficiency,"This pull request features some improvements regarding the FFD. To be more precise:; - It is now possible to allow the FFD control points to move in an arbitrary direction. This is automatically enabled if the direction of movement in the design variable definition is set to (0.0,0.0,0.0). The set_ffd_design_var.py is updated accordingly (you can now specify the direction, default is 0.0). At the moment this is only possible for the discrete adjoint. But it could also be extended to the cont. adjoint.; - Along with this goes a refactoring of SU2_DOT to reduce code copy. Especially for the optimization of turbine blades and everything else that is not an airfoil this might be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/239:559,reduce,reduce,559,https://su2code.github.io,https://github.com/su2code/SU2/pull/239,1,['reduce'],['reduce']
Energy Efficiency,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298:1536,adapt,adapted,1536,https://su2code.github.io,https://github.com/su2code/SU2/pull/298,1,['adapt'],['adapted']
Energy Efficiency,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295:808,monitor,monitor,808,https://su2code.github.io,https://github.com/su2code/SU2/pull/295,1,['monitor'],['monitor']
Energy Efficiency,"This will provide a lot of power and flexibility. For example, if doing local development, only the tests that failed last could be run with `pytest --lf`. To make the tests compatible, they can be wrapped into functions with a `test_` prefix, then called from the command line with, e.g.,. pytest TestCases/serial_regression_AD.py. To select and run only one test:. pytest TestCases/serial_regression_AD.py::test_discadj_multi_py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/462:27,power,power,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/462,1,['power'],['power']
Energy Efficiency,Turbulent Kinetic Energy(TKE) on energy equation in SST model.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851:18,Energy,Energy,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851,2,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,Update adaptive CFL,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036:7,adapt,adaptive,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036,1,['adapt'],['adaptive']
Energy Efficiency,"We have used SU2 and SU2-NEMO to predict the heat flux for various shapes in a high-speed flow. Something we have observed is that SU2 requires an extremely small first cell spacing to get an accurate and grid-independent prediction for heat flux. For example, this first cell space is often 1E-9 to 1E-10 m with SU2; whereas with other codes it is a micrometer. The latter is in line with the general rule of thumb of setting the first cell height so that the first cell Reynold's number is between 0.1 and 1.0. Discussing with @jtneedels and @WallyMaier, we think it may have to do with how the temperature gradient is calculated in CNSSolver.cpp:. /*--- Compute the normal gradient in temperature using Twall ---*/. ` su2double dTdn = -(There - Twall)/dist_ij;`. /*--- Apply a weak boundary condition for the energy equation.; Compute the residual due to the prescribed heat flux. ---*/. ` su2double Res_Conv = 0.0;; su2double Res_Visc = thermal_conductivity * dTdn * Area;`. which may result in a first-order approximation for the temperature gradient causing this requirement for an extremely small cell size to recover the true gradient. I would be interested to see if calculating this gradient similar to CFVMFlowSolverBase.ini. For example,; ` for (iDim = 0; iDim < nDim; iDim++) {; Grad_Temp[iDim] = nodes->GetGradient_Primitive(iPoint, prim_idx.Temperature(), iDim);; }`. `su2double dTdn = -GeometryToolbox::DotProduct(nDim, Grad_Temp, UnitNormal);`. I tried checking this but quickly found out, I am not familiar enough with the code structure to implement.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2347:812,energy,energy,812,https://su2code.github.io,https://github.com/su2code/SU2/issues/2347,1,['energy'],['energy']
Energy Efficiency,"When monitoring the forces on a large number of markers, the output won’t fit in the buffer(s), and this causes memory issues: the code either hangs, has a buffer overflow, or segfaults depending on the compiler, etc. As a temporary fix, the monitoring_coeff[] buffer has been increased, but this should be remedied asap.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/66:5,monitor,monitoring,5,https://su2code.github.io,https://github.com/su2code/SU2/issues/66,1,['monitor'],['monitoring']
Energy Efficiency,"While `SU2_CFD` has been made to use binary restart files by default, the `SU2_MSH` code has not been updated to be compatible with binary restarts. If a grid adaptation strategy requires a solution (as in `GRAD_FLOW`), then `SU2_MSH` tries to read from the restart file. This is handled by `CGridAdaptation::GetFlowSolution`. If you look into the code, you'll notice that it's still set up for ASCII restart files. There's no check for binary restarts, and no ability to load a binary restart. The code tries to read the binary file as an ASCII file without complaint. A brief check on my part confirmed that ASCII restart files work with `SU2_MSH`, but binary restart files do not. This bug results in errors that are not caught by the program, as seen in Issue #606.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/610:159,adapt,adaptation,159,https://su2code.github.io,https://github.com/su2code/SU2/issues/610,1,['adapt'],['adaptation']
Energy Efficiency,"While doing some simulations with the version 6.2.0, I found a strange behaviour on the pressure field.; The test case is a naca0012 at AoA=0°, M=0.7, Re=9e6.; When running with SST turbulence model, the pressure field in the ""boundary layer region"" is not constant. Using SA turbulence model, this behaviour is not shown. It looks like the tubulent kinetic energy field affect the computation of pressure field, leading to a non zero gradient pressure at wall, as shown in the attached figures:. In the figures it can be seen a comparison between the in-house solver of the Italian Aerospace Research Center (CIRA), where SST model is implemented, and SU2 using both available turbulence models, SST and SA. The isolines represent the pressure field and the contour is the TKE field obtained with SU2 with SST. In particular, solid red line is CIRA solver, the solid black line is SU2-SST, and dashed black line is SU2-SA. Near the LE where TKE is 0, the isolines are similar and 0 pressure gradient at the wall is obtained with both turbulence models. When TKE starts to grow, the pressure computed with SU2-SST shows a non constant behaviour and at the wall has non 0 gradient. Furthermore, in the wake region the defect is more evident. Leading edge detail:; ![cp_tke_detail_Le](https://user-images.githubusercontent.com/36844965/66407922-53448b00-e9ee-11e9-877d-88ace3a222fb.png). Detail at 30% of the chord length:; ![cp_tke_detail_1](https://user-images.githubusercontent.com/36844965/66407921-53448b00-e9ee-11e9-8a22-87106066984b.png). Wake region detail:; ![cp_tke_detail_wake](https://user-images.githubusercontent.com/36844965/66407920-53448b00-e9ee-11e9-92ad-b770e0ac5743.png). Has anyone found previously this behaviour? Could it depend on the set up that I have used? . I attach the grid and configurations files.; [grid_and_conf_files.zip](https://github.com/su2code/SU2/files/3703135/grid_and_conf_files.zip). Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797:358,energy,energy,358,https://su2code.github.io,https://github.com/su2code/SU2/issues/797,1,['energy'],['energy']
Energy Efficiency,"Would it be possible to add a 3D example of RANS, SST model with wind tunnel (6 walls) and an obstacle to simulate wind flow?. Ultimately I'd like to see how to retrieve resulting pressures on a surface from the model, after providing inlet flow. I've tried adapting Multiphysics FSI 2D model with no luck, too many possible input issues on my end, and the SU2_CFD executable reports no errors when loading config, just finishes with no output or results. Meshes I've tried were generated from GMSH (tets for wind tunnel volume and tri for obstacle as a planar surface). I'm a new user so please excuse my lack of knowledge using SU2. An example would be great help! Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2261:258,adapt,adapting,258,https://su2code.github.io,https://github.com/su2code/SU2/issues/2261,1,['adapt'],['adapting']
Energy Efficiency,"You've got two options:. 1. Use the cfg option `WRT_BINARY_RESTART= NO` to dump the restart file(s) in human-readable ASCII.; 2. Use the cfg option `OUTPUT_FORMAT= TECPLOT` or `OUTPUT_FORMAT=PARAVIEW` with SU2_SOL to export the solution to an ASCII-formatted tecplot or paraview file. If you're not familiar with SU2_SOL, then check out [the documentation](https://su2code.github.io/docs/Post-processing/). You can find those cfg options in `config_template.cfg` in the root SU2 source code directory. In the end, using the tecplot or paraview option may be your best bet. Trying to manually parse the text files smells like an [XY Problem](https://en.wikipedia.org/wiki/XY_problem). Tecplot and Paraview both have scripting capabilities that make post-processing very efficient. Does that answer your question? Do you have any follow-up concerns?. _Originally posted by @clarkpede in https://github.com/su2code/SU2/issues/787#issuecomment-528435629_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1034:769,efficient,efficient,769,https://su2code.github.io,https://github.com/su2code/SU2/issues/1034,1,['efficient'],['efficient']
Energy Efficiency,[Feature / Option] Vorticity Confinement (VC) technique to reduce numerical diffusion,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1854:59,reduce,reduce,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/1854,1,['reduce'],['reduce']
Energy Efficiency,"[case728.txt](https://github.com/su2code/SU2/files/4793965/case728.txt). I am running a shape optimization of a single blade row stator with an FFD box of degree (5 , 11, 2). The max deformation is of the order 1E-5. The change in mesh visually is very minimal but after SU2 deforms the mesh it generates negative volumes and a negative Jacobian. It is also happening if I use only one DV in the optimization. As a result my DSN_002 DIRECT results are all diverging. In the image, the red box is the deformed box and the green one is the undeformed box. You can also see the blade. The number of nodes are just shy of 1 million in the whole volume mesh. ![untitled](https://user-images.githubusercontent.com/46273732/84716054-2747b500-af40-11ea-9877-3f229a8957ce.png). SU2 mesh stats for DSN001:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 52.4241| 89.9962|; | CV Face Area Aspect Ratio| 1.02662| 2123.48|; | CV Sub-Volume Ratio| 1.00007| 3.63253|; +--------------------------------------------------------------+. SU2_mesh stats for DSN002:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| -42.6863| 89.9963|; | CV Face Area Aspect Ratio| 1.02903| 31868.8|; | CV Sub-Volume Ratio| 1.00034| 40627.1|; +--------------------------------------------------------------+. From Tecplot I can calculate that the cell volumes and the Jacobian is also negative for DSN002 for some cells. I believe if I reduce my OPT_RELAX_FACTOR I can have deformations of the O(-6) but isn't this already too small. Are there any parameters I can change in the config file to av",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1026:521,green,green,521,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026,1,['green'],['green']
Energy Efficiency,"aafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridI",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:6078,monitor,monitoring,6078,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['monitor'],['monitoring']
Energy Efficiency,"ach number flat plate case. The flow condition is below. Temperature (K) | Unit Re (1/m) | Mach | Pressure | Wall Temperature(K); -- | -- | -- | -- | --; 800 | 4.9×10^6 | 6.1 | 12100 | 300. After calculation, I check the flow field, including the boundary. But, the inlet boundary is not the same flow conditions I imposed. ; Here is the comparison of other models using the same flow conditions. . ![image](https://user-images.githubusercontent.com/50565314/208847631-a3ced0ab-7a70-45ee-b67e-41314b2ddfb1.png). ![image](https://user-images.githubusercontent.com/50565314/208847743-6f08eb96-ea5e-4ac5-a50a-0d980f33c547.png). So, I tried to find the cause. . When deriving the RANS equation from the energy equation, the turbulent kinetic energy(TKE) is derived from the kinetic energy of Total Energy(E) as shown below.; ![image](https://user-images.githubusercontent.com/50565314/208849564-da4f1b0a-ff2f-4732-911a-b1ed2a4ca1c8.png). In the boundary condition and initialization part, k is considered depending on whether or not the SST model is used for Total Energy. In CEulerSolver.cpp ; `bool tkeNeeded = (turbulent && config->GetKind_Turb_Model() == TURB_MODEL::SST);`; `if (tkeNeeded) { Energy_FreeStream += Tke_FreeStream; }; config->SetEnergy_FreeStream(Energy_FreeStream);`; `if (tkeNeeded) Energy_FreeStreamND += Tke_FreeStreamND;`. But In the flux calculation part, when calculating the speed of sound(a), using the total enthalpy(H). But, in this part consider only the kinetic energy. . Expressed mathematically ; ![image](https://user-images.githubusercontent.com/50565314/208861650-92b8cad6-5a1f-4742-952b-30d0187ae28b.png). but in the SU2 code using below. ![image](https://user-images.githubusercontent.com/50565314/208861902-ff614d53-d07e-4237-a04d-73a49ad5a55c.png). The speed of sound always has a slightly high value because TKE is not subtracted. See ""roe.cpp"" line 119 ~ 149. ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel);` ; This line might be changed roughly like : ;",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851:1160,Energy,Energy,1160,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851,1,['Energy'],['Energy']
Energy Efficiency,"at using GitHub, so I'm sorry for this situation. My remote repository(forked) is not synchronized with v7.40, and I don't know what the problem is. So, I will delete the forked repository and fork it again to PR with the same name and content. Fortunately, the LM model updated to v7.40 obtained the same residuals and results as the previous v7.3.1. ## Current State . Code is well running and, validation is almost done. V&V cases: T3A, T3A-, NLF. Flow conditions are the reference from: https://doi.org/10.2514/6.2022-3679. The grids of T3A and NLF cases are provided by [TMW](https://transitionmodeling.larc.nasa.gov/workshop_i/)(Transition Model Workshop). And I made the grid of T3A- myself. To validate the LM model, the simulation results of SU2 are compared with the results of Fluent19.0 with a similar numerical setting. Here is the numerical scheme : . <html xmlns:m=""http://schemas.microsoft.com/office/2004/12/omml""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=PowerPoint.Slide>; <meta name=Generator content=""Microsoft PowerPoint 15"">. <!--tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; td; 	{padding-top:1.0px;; 	padding-right:1.0px;; 	padding-left:1.0px;; 	mso-ignore:padding;; 	color:windowtext;; 	font-size:18.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Arial;; 	mso-generic-font-family:auto;; 	mso-font-charset:0;; 	text-align:general;; 	vertical-align:bottom;; 	border:none;; 	mso-background-source:auto;; 	mso-pattern:auto;}; .oa1; 	{border:1.0pt solid black;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; .oa2; 	{border:1.0pt solid black;; 	text-align:center;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; -->. </head>. <body>; <!--StartFragment-->.   | Fluent | SU2; -- | -- | --; Flux | Roe-FDS | L2ROE; Gradient | Least Squares Cell Based | WEIGHTED",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751:1293,Power,PowerPoint,1293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751,1,['Power'],['PowerPoint']
Energy Efficiency,"ations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % psf = lbf/ft^2, Density = slug/ft^3, ; % Speed = ft/s, Equiv. Area = ft^2 ); SYSTEM_MEASUREMENTS= US. % -------------------- COMPRESSIBLE FREE-STREAM DEFINITION --------------------%; %; % Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.7; %; % Angle of attack (degrees, only for compressible flows); AOA= 3.6; %; % Side-slip angle (degrees, only for compressible flows); SIDESLIP_ANGLE= 1.0; %; % Free-stream temperature (518.67 R by default); FREESTREAM_TEMPERATURE= 559.67; %; % Reynolds number (non-dimensional, based on the free-stream valu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:1786,meter,meters,1786,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['meter'],['meters']
Energy Efficiency,"be the bug**. If I set EQUIV_AREA to YES and prepare necessary near-field boundary marker in version 6.2.0, nearfield_flow.dat and Equivalent_Area.dat are output but not in version 7.0.0 anymore. I did some investigation in the code. nearfield_flow.dat and Equivalent_Area.dat seem to be output by the code below in output_structure_legacy.cpp.; `void COutputLegacy::SpecialOutput_SonicBoom`. It is called out in `void COutputLegacy::SetConvHistory_Body` in output_structure_legacy.cpp. It is then called out in the following lines in CDriver.cpp but none of them seems to be for sonicboom case, which I think is the cause for this bug.; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(NULL, geometry_container, solver_container, config_container,`. In version 6.2.0, `bool CDriver::Monitor(unsigned long ExtIter)` in driver_structure.cpp had `output->SetConvHistory_Body` and I think this was eventually calling out `SpecialOutput_SonicBoom`. I think this function has been accidentally removed by the change below but I'm not sure how to fix it.; https://github.com/su2code/SU2/pull/724 . It would be great if sonicboom case is included in the regression test of test cases. ""biparabolic"" uses this feature but does not seem to be included in the regression test. This test case does not converge at least on my computer though. **To Reproduce**. [v7_sonicboom.zip](https://github.com/su2code/SU2/files/3968025/v7_sonicboom.zip); NACA64206_sonicboom_v6.cfg is a config file for version 6.; NACA64206_sonicboom_v7.cfg is a config file for version 7.; The mesh file is common for both cases. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.04.3 LTS); - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: v6.2.0 and v7",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/841:991,Monitor,Monitor,991,https://su2code.github.io,https://github.com/su2code/SU2/issues/841,1,['Monitor'],['Monitor']
Energy Efficiency,"calZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routines when I feel comfortable about them.; 1. The **discrete adjoint version** of all this wo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505:1125,adapt,adaption,1125,https://su2code.github.io,https://github.com/su2code/SU2/pull/505,1,['adapt'],['adaption']
Energy Efficiency,"ced0ab-7a70-45ee-b67e-41314b2ddfb1.png). ![image](https://user-images.githubusercontent.com/50565314/208847743-6f08eb96-ea5e-4ac5-a50a-0d980f33c547.png). So, I tried to find the cause. . When deriving the RANS equation from the energy equation, the turbulent kinetic energy(TKE) is derived from the kinetic energy of Total Energy(E) as shown below.; ![image](https://user-images.githubusercontent.com/50565314/208849564-da4f1b0a-ff2f-4732-911a-b1ed2a4ca1c8.png). In the boundary condition and initialization part, k is considered depending on whether or not the SST model is used for Total Energy. In CEulerSolver.cpp ; `bool tkeNeeded = (turbulent && config->GetKind_Turb_Model() == TURB_MODEL::SST);`; `if (tkeNeeded) { Energy_FreeStream += Tke_FreeStream; }; config->SetEnergy_FreeStream(Energy_FreeStream);`; `if (tkeNeeded) Energy_FreeStreamND += Tke_FreeStreamND;`. But In the flux calculation part, when calculating the speed of sound(a), using the total enthalpy(H). But, in this part consider only the kinetic energy. . Expressed mathematically ; ![image](https://user-images.githubusercontent.com/50565314/208861650-92b8cad6-5a1f-4742-952b-30d0187ae28b.png). but in the SU2 code using below. ![image](https://user-images.githubusercontent.com/50565314/208861902-ff614d53-d07e-4237-a04d-73a49ad5a55c.png). The speed of sound always has a slightly high value because TKE is not subtracted. See ""roe.cpp"" line 119 ~ 149. ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel);` ; This line might be changed roughly like : ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel-k);` . There seem to be two possible ways to this problem.; 1. Subtract TKE when the speed of sound calculation; 2. Store e(static energy) or k in primitive variables; 3. ; I'm not sure which is clear and easy. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ ] Consulting the build instructions (https://su2code.github.io/docs_v7/Bu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851:1589,energy,energy,1589,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851,1,['energy'],['energy']
Energy Efficiency,"circle of radius 1 (adiabatic wall), and a ""boundary-layer-like"" structure around a circle of radius (approximately) 4. Having this ""boundary-layer-like"" structure does not make sense here, but in our project we later want to change the area `1<=radius<=4` to a ""porous material"" zone and this would introduce a boundary layer there. Both the [attached](https://seafile.rlp.net/d/bb0fbb16eb414263b642/) `issue_complicated.zip`, `issue_simplified.zip` contain subdirectories `singlezone`, `multizone`. I observed the problem best for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In the singlezone setup, the whole mesh has been exported to `singlezone.su2`. The `singlezone.cfg` is `TestCases/rans/naca0012/turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed f",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:2152,adapt,adapted,2152,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['adapt'],['adapted']
Energy Efficiency,"d, enabling the computation of steady solutions of the Navier-Stokes equations in globally unstable configurations. Steady-state is achieved by damping the unstable temporal frequencies with addition of a dissipative relaxation term proportional to the high-frequency content of the velocity fluctuations. [1]. _boostconv_: An iterative algorithm, inspired by Krylov-subspace methods, which is able to compute unstable steady states and/or accelerate the convergence to stable configurations. This algorithm is based on the minimization of the residual norm at each iteration step with a projection basis updated at each iteration rather than at periodic restarts like in the classical GMRES method. The algorithm is able to stabilize any dynamical system without increasing the computational time of the original numerical procedure used to solve the governing equations. _Moreover, it can be easily inserted into a pre-existing relaxation (integration) procedure with a call to a single black-box subroutine_. [2]. **Additional context**; I would be happy to collaborate on implementation of said algorithms in SU2 but I do not have much experience with C++ (I mostly use Fortran) and I am not too familiar with SU2 source code so it would be great to work with someone more experienced in those areas. Figure from [2] outlining performance of SFD and boostconv on a cylinder:; <img width=""882"" alt=""Screenshot 2023-05-02 at 22 23 19"" src=""https://user-images.githubusercontent.com/67333831/235789512-63bc5e29-6d09-478f-a9e5-9931b5673bd0.png"">. **Bibliography**; [1] Åkervik, E., Brandt, L., Henningson, D.S., Hœpffner, J., Marxen, O. and Schlatter, P., 2006. Steady solutions of the Navier-Stokes equations by selective frequency damping. Physics of fluids, 18(6), p.068102.; [2] Citro, V., Luchini, P., Giannetti, F. and Auteri, F., 2017. Efficient stabilization and acceleration of numerical simulation of fluid flows by residual recombination. Journal of Computational Physics, 344, pp.234-246.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022:3065,Efficient,Efficient,3065,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022,1,['Efficient'],['Efficient']
Energy Efficiency,"e essentially independent of the rest of the code. . Below you find an example output of the current preprocessing:. ```. ---------------------- Space Numerical Integration ----------------------; Jameson-Schmidt-Turkel scheme (2nd order in space) for the flow inviscid terms.; JST viscous coefficients (2nd & 4th): 0.5, 0.02.; The method includes a grid stretching correction (p = 0.3).; Scalar upwind solver for the turbulence model.; First order integration in space.; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 999999999 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot binary (.plt).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; +--------------------------------",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:1623,adapt,adaptation,1623,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['adapt'],['adaptation']
Energy Efficiency,"e fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routines when I feel comfortable about them.; 1. The **discrete adjoint version** of all this works fine. I will add it, too, if you like these additions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505:1987,energy,energy,1987,https://su2code.github.io,https://github.com/su2code/SU2/pull/505,1,['energy'],['energy']
Energy Efficiency,"e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the program (compare 1st number 6 and 2nd number number 10).; The first waits at an `Allgather` and the 2nd at an `Allreduce`. . I am somewhat certain that the problem is this code bit which the second (the furhter back) backtrace points to. CSysVector.hpp -> `ScalarType dot` function l. 317; ```c++; /*--- Update shared variable with ""our"" partial sum. ---*/; atomicAdd(sum, dotRes);; SU2_MPI::Barrier(SU2_MPI::GetComm()); //added by tobi; #ifdef HAVE_MPI; /*--- Reduce across all mpi ranks, only master thread communicates.; * The nElm condition is to allow vectors to also be used locally. ---*/; std::cout << ""Rank: "" << SU2_MPI::GetRank() << "", nElm != nElmDomain="" << (nElm != nElmDomain) << std::endl; //added by tobi; if (nElm != nElmDomain) {; SU2_OMP_BARRIER; SU2_OMP_MASTER {; sum = dotRes;; const auto mpi_type = (sizeof(ScalarType) < sizeof(double)) ? MPI_FLOAT : MPI_DOUBLE;; SelectMPIWrapper<ScalarType>::W::Allreduce(&sum, &dotRes, 1, mpi_type, MPI_SUM, SU2_MPI::GetComm());; }; }; #endif; /*--- Make view of result consistent across threads. ---*/; SU2_OMP_BARRIER. return dotRes;; }; ```; The Problem is the `Allreduce` in the `if (nElm != nElmDomain) {` which leads to a freeze if not all ranks get the same result for that boolean.; The eagle eye prob already spotted the cout-Debugging in there. I also added a mpi barrier and the screen output i get is ; ```; ... only nElm != nElmDomain=1 above, which prob belong to",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:8721,Reduce,Reduce,8721,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['Reduce'],['Reduce']
Energy Efficiency,"ed for each CV for this process.; - Modified realizability checks to avoid negative density/pressure/temperature at the nodes and also during 2nd-order reconstruction at cell faces.; - CV face states for 2nd-order MUSCL are now optionally reconstructed with a separate gradient method (unweighted least squares recommended), which is very important for robustness. Gradients for viscous terms and sources are still computed via GG or WLS for accuracy reasons.; - SA model was being clipped unnecessarily. This clipping has been removed. Here is my recommendation on how to run all of your 2nd-order cases going forward:. ### Euler / Laminar N-S; Turn off the limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:1929,adapt,adaption,1929,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['adapt'],['adaption']
Energy Efficiency,"ed. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + Will lack some of the more advances features of mature unit-testing frameworks. #### Boost Test. + Can be header only, statically linked, or dynamically linked; + If statically or dynamically linked, then Boost is not very lightweight; + Easy to add if you're already using Boost. #### Google Test. + Most common unit-testing framework; + Can be easily combined with Google's powerful GMock mocking library; + Compiling and linking can be somewhat painful. #### Catch2. + Used by FEniCS; + Makes unit tests easily readable with lots of syntactic sugar.; + Has a very simple syntax; + Is header-only; + ~~Requires C++11 compilation~~ Requires C++11 for full feature set, but offers a C++03 branch; + Not as feature rich as Google Test or Boost Test. ## Questions. + How do developers feel about adding unit tests to SU2?; + If a unit-testing framework were added to SU2, would you actually use it?; + Do developers have a preference (or experience with) any of the unit testing frameworks?; + Should unit tests be expected when submitting PRs?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:4058,power,powerful,4058,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['power'],['powerful']
Energy Efficiency,"gh I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multizone setup. - **General structure of the drivers**: Maybe there are relevant differences between `CSinglezoneDriver` and `CMultizoneDriver`, I don't know.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:5005,Green,Green-,5005,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['Green'],['Green-']
Energy Efficiency,"going characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade with respect to certain performance parameters (ENTROPY_GENERATION, TOTAL_PRESSURE_LOSS, KINETIC_ENERGY_LOSS, ecc.). However, the optimization script only works for 2D blades since the FFD and the mesh deformation routines need still to be adapted to handle 3D blades (especially for problem on the deformation of the hub and shroud surfaces).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:2035,monitor,monitoring,2035,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,2,"['adapt', 'monitor']","['adapted', 'monitoring']"
Energy Efficiency,"h adds a native CHT functionality to SU2. Main contents are:. 1. A new driver (CMultiPhysicalZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505:1017,adapt,adaption,1017,https://su2code.github.io,https://github.com/su2code/SU2/pull/505,1,['adapt'],['adaption']
Energy Efficiency,"he implementation of the symmetry plane is incomplete. We follow here the book of Blazek, _Computational Fluid Dynamics: Principles and Applications_ . According to Blazek, (chapter 8.6) 4 conditions have to be met on a symmetry plane:. 1. No flux across the boundary; 2. $\overline n \cdot \nabla \phi = 0$ (gradient of scalars are zero); 3. $\overline n \cdot \nabla (\overline U \cdot \overline t) = 0$ (gradient of tangential velocity normal to boundary); 4. $\overline t \cdot \nabla (\overline U \cdot \overline n) = 0$ (gradient of normal velocity along the boundary). Points 2-4 all deal with gradients and can be dealt with in the gradient computation, i.e. Green-Gauss or Least Squares. According to Blazek, 2 approaches can be followed. ""One possibility is to construct the missing half of the control volume by mirroring the grid on the boundary. The fluxes and gradients are then evaluated like in the interior using reflected flow variables."" This approach can be implemented in an easy way when computing the Green-Gauss gradients. In SU2, routines are already in place that deal with GG gradients on boundaries. Here, we just have to identify the symmetry planes and mirror the flux through the faces. ; Blazek continues: ""The second methodology computes the fluxes for the halved control volume (but not accross the boundary). The components of **the residual normal to the symmetry plane** are then zeroed out. It is also necessary to correct normal vectors of those faces of the control volume, which touch the boundary. The modification consists of removing all components of the face vector, which are normal to the symmetry plane. The gradients also have to be corrected according to Eq. (8.40) [points 2,3,4 above]"". 1. Modify Green-Gauss and Least-Squares gradient computation for symmetry planes; -> This seems to work fine; 2. Fix normal components of edges connected to symmetry plane; -> This seems to work fine; 3. Fix residual components of velocity on the symmetry plane",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194:1046,Green,Green-Gauss,1046,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194,1,['Green'],['Green-Gauss']
Energy Efficiency,"he limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousand. Ultra fine RANS meshes can still slow things down (MG could help there), but otherwise, speedups of an order of magnitude (or more) are possible for most problems. Experiment yourselves.. sometimes you can get even more performance, sometimes less, case depending. I could use help testing this one with your cases, since I think almost all regression tests will change. As a start, I have run all of the NASA TMR 2D bump-in-channel cases. Everything looks good with that (see figures). I have also checked that the inviscid and laminar MMS give 2nd-order accuracy ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:2636,adapt,adaption,2636,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['adapt'],['adaption']
Energy Efficiency,"here a full ""solver"" status, and uses the FEA Elasticity classes as its basis. The pseudo-linear elastic solver now always refers to the initial, undeformed geometrical discretization, therefore ensuring that the problem remains traceable to the original mesh, and that when volumes are computed to deform the mesh, the initial quality of the elements is observed. . With this framework, the wall distances only need to be computed once for distance-based stiffness, and the stiffness matrix is now symmetric after applying BCs so conjugate gradient can be used to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @ta",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:1273,adapt,adapt,1273,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['adapt'],['adapt']
Energy Efficiency,"ialization part, k is considered depending on whether or not the SST model is used for Total Energy. In CEulerSolver.cpp ; `bool tkeNeeded = (turbulent && config->GetKind_Turb_Model() == TURB_MODEL::SST);`; `if (tkeNeeded) { Energy_FreeStream += Tke_FreeStream; }; config->SetEnergy_FreeStream(Energy_FreeStream);`; `if (tkeNeeded) Energy_FreeStreamND += Tke_FreeStreamND;`. But In the flux calculation part, when calculating the speed of sound(a), using the total enthalpy(H). But, in this part consider only the kinetic energy. . Expressed mathematically ; ![image](https://user-images.githubusercontent.com/50565314/208861650-92b8cad6-5a1f-4742-952b-30d0187ae28b.png). but in the SU2 code using below. ![image](https://user-images.githubusercontent.com/50565314/208861902-ff614d53-d07e-4237-a04d-73a49ad5a55c.png). The speed of sound always has a slightly high value because TKE is not subtracted. See ""roe.cpp"" line 119 ~ 149. ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel);` ; This line might be changed roughly like : ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel-k);` . There seem to be two possible ways to this problem.; 1. Subtract TKE when the speed of sound calculation; 2. Store e(static energy) or k in primitive variables; 3. ; I'm not sure which is clear and easy. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ ] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [ ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ ] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v7.4.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851:2284,energy,energy,2284,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851,1,['energy'],['energy']
Energy Efficiency,"il now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528:1381,adapt,adapted,1381,https://su2code.github.io,https://github.com/su2code/SU2/pull/528,1,['adapt'],['adapted']
Energy Efficiency,"imizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859E-11; Optimization terminated successfully. (Exit mode 0); Current function value: 1.07807522; Iterations: 1; Function evaluations: 1; Gradient evaluations: 1. And no further designs are generated. What makes SLSQP to 'converge'?. **I am using branch** [turbo_output_opt](https://github.com/su2code/SU2/compare/develop...turbo_output_opt) (updated to latest develop). Thanks in advance. Config file: [case728.txt](https://github.com/su2code/SU2/files/4606913/case728.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:1746,reduce,reduced,1746,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,1,['reduce'],['reduced']
Energy Efficiency,"is **no initialization of Omega_Ref in slover_direct_mean.cpp for incompressible flow**. . ``` C++; /*--- Incompressible non dimensionalization ---*/. else {. /*--- Reference length = 1 (by default); Reference density = liquid density or freestream; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. E",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/193:4208,meter,meters,4208,https://su2code.github.io,https://github.com/su2code/SU2/issues/193,1,['meter'],['meters']
Energy Efficiency,"ithub.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6728,Reduce,Reduced,6728,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Reduce'],['Reduced']
Energy Efficiency,"ized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/380",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:1705,reduce,reduce,1705,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['reduce'],['reduce']
Energy Efficiency,"lease</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4032,reduce,reduces,4032,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['reduce'],['reduces']
Energy Efficiency,m. value| Ref. value| Unit|Non-dim. value|; +--------------------------------------------------------------------------+; | Ref. Viscosity| 1.716e-05| 624.034| N.s/m^2| 2.74985e-08|; | Sutherland Temp.| 273.15| 300| K| 0.9105|; | Sutherland Const.| 110.4| 300| K| 0.368|; +--------------------------------------------------------------------------+; | Prandtl (Lam.)| -| -| -| 0.72|; | Prandtl (Turb.)| -| -| -| 0.9|; +--------------------------------------------------------------------------+; | Gas Constant| 287.058| 287.058| N.m/kg.K| 1|; | Spec. Heat Ratio| -| -| -| 1.4|; +--------------------------------------------------------------------------+; -- Free-stream conditions:; +--------------------------------------------------------------------------+; | Name| Dim. value| Ref. value| Unit|Non-dim. value|; +--------------------------------------------------------------------------+; | Static Pressure| 183127| 183127| Pa| 1|; | Density| 2.12649| 2.12649| kg/m^3| 1|; | Temperature| 300| 300| K| 1|; | Total Energy| 216650| 86117.4| m^2/s^2| 2.51575|; | Velocity-X| 51.2923| 293.458| m/s| 0.174786|; | Velocity-Y| 9.04422| 293.458| m/s| 0.0308195|; |Velocity Magnitude| 52.0836| 293.458| m/s| 0.177482|; +--------------------------------------------------------------------------+; | Viscosity| 1.84592e-05| 624.034| N.s/m^2| 2.95804e-08|; | Conductivity| -| 179134| W/m^2.K| -|; | Turb. Kin. Energy| 10.1726| 86117.4| m^2/s^2| 0.000118125|; | Spec. Dissipation| 117188| 293.458| 1/s| 399.335|; +--------------------------------------------------------------------------+; | Mach Number| -| -| -| 0.15|; | Reynolds Number| -| -| -| 6e+06|; +--------------------------------------------------------------------------+. Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; Initialize Jacobian structure (Navier-Stokes). MG level: 1.; Initialize Jacobian structure (Navier-Stokes). MG level: 2.; Initialize Jacobian structure (Navier-Stokes).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:7840,Energy,Energy,7840,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['Energy'],['Energy']
Energy Efficiency,"modelling of propellers. ## Proposed Changes. The present work is on modifications to the actuator disk model. Variable load actuator disk (VLAD) [Saetta, 2020] uses the given blade loading (which is fixed for the entire duration of the simulation) to impose axial and tangential jumps at the interface. Propeller loading depends on many different parameters and is affected by the surrounding structures and angle of attack (AoA). A method that updates the blade loading at run time is required to take care of the interactions and installation effects. . In the present approach, the Blade Element Method (BEM) is used to calculate the pressure jump and swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtual event. Veldhuis L (2005) Propeller-wing aerodynamic interface,; Ph.D. the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:1023,power,power,1023,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['power'],['power']
Energy Efficiency,"ns for (D)DES and URANS"" we implemented the windowing regularizers proposed in the work of Krakos et al. ""Sensitivity analysis of limit cycle oscillations"" and adapted it to the AD framework of SU2. ; We call the feature in the following ""windowing"". ; Windowing can be applied if one takes the (windowed) time average of a periodic function, i.e. in the case of an instationary flow field that exhibits periodic behaviour. ; - We changed the functionality of the output-field-prefix TAVG and D_TAVG from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers wil",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:1202,monitor,monitoring,1202,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,1,['monitor'],['monitoring']
Energy Efficiency,"nterface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special via a boolean vector and know how to access via a hash table (for example). **Alternatives**; We could make the storage continuous by using a memory pool i.e. allocate outside the class and give the class a pointer to its memory location. This is still not truly contiguous as the pointers the class holds are variables themselves and so they would still be separated (albeit by a smaller huge distance), thus the amount of overhead would still influence performance. Right, that is enough writing... please let me know what you think.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:7766,allocate,allocate,7766,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['allocate'],['allocate']
Energy Efficiency,"o identify the symmetry planes and mirror the flux through the faces. ; Blazek continues: ""The second methodology computes the fluxes for the halved control volume (but not accross the boundary). The components of **the residual normal to the symmetry plane** are then zeroed out. It is also necessary to correct normal vectors of those faces of the control volume, which touch the boundary. The modification consists of removing all components of the face vector, which are normal to the symmetry plane. The gradients also have to be corrected according to Eq. (8.40) [points 2,3,4 above]"". 1. Modify Green-Gauss and Least-Squares gradient computation for symmetry planes; -> This seems to work fine; 2. Fix normal components of edges connected to symmetry plane; -> This seems to work fine; 3. Fix residual components of velocity on the symmetry plane; -> This seems to work fine; 4. Multiple symmetry planes, including Euler walls; -> This seems to work fine; 6. multigrid; -> Works fine now that we use the agglomeration as in the paper of Diskin.; 7. grid movement; 8. -> Works fine with the new fix to the residuals (energy update). ## Related Work; #1168 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194:2293,energy,energy,2293,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194,1,['energy'],['energy']
Energy Efficiency,"om/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:5178,Reduce,Reduced,5178,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Reduce'],['Reduced']
Energy Efficiency,"ons-op-text'>. <sup>Originally posted by **ChristianBauerEng** February 8, 2022</sup>; Hi All!. I'm currently running transient, 2D axisymmetric simulations of an oscillating resonator. For now I'm still in the validation and testing phase, but the results look promising!. However, I've noticed that solver performance (as in Time/Iteration) seems to degrade over runtime, so I wanted to measure that by including `WALL_TIME` in screen and history output. I still have trouble understanding the outputs, though. The screen output looks like this:. > +-------------------------------------; > | Time_Iter| Inner_Iter| Time(sec); > +-------------------------------------; > | 45330| 0| 6.3412e+02; > | 45330| 5| 1.0572e+02; > | 45330| 10| 5.7680e+01; > +-------------------------------------; > | Time_Iter| Inner_Iter| Time(sec); > +-------------------------------------; > | 45340| 0| 6.3783e+02; > | 45340| 5| 1.0633e+02; > | 45340| 9| 6.3815e+01. The Time(sec) values of the 0th inner iteration seems to monotonically increase and represent the accumulated wall clock time since simulation start I assume. But what do the `Time(sec)` values for the inner iterations mean?. ~~In the history output, the `Time(sec)` field looks different, as can be seen in the upper part of this figure:~~. In the history file, actually the last Time(sec) value of each time-iteration is printed, which also tends to increase, but not monotonically. Additionally, it seems to get reset to 0 each time output is written:. ![grafik](https://user-images.githubusercontent.com/42602495/153232596-f815ff83-b0e8-49b8-9ee3-2bb1f176e2df.png). ~~What does this value in the history output actually mean? Is it time/iteration? I've noticed a performance degradation over time, but not to this extent (I've monitored the actual runtime only sporadically, though).; If the performance degradation is in fact so severe, what could be the cause?~~. I'd really be happy if one of the veterans could chip in their ideas here!</div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1542:3290,monitor,monitored,3290,https://su2code.github.io,https://github.com/su2code/SU2/issues/1542,1,['monitor'],['monitored']
Energy Efficiency,"rapper class for Inria's direct sparse solver [PaStiX](http://pastix.gforge.inria.fr/files/README-txt.html).; Why this solver? Because it is open source, has active development in advanced features like GPU support and compression techniques to reduce memory footprint, and from my experience it is really robust. ## Implementation; As this feature benefits mostly the FSI people (@rsanfer, @cvencro, and me) I tried to keep it as standalone as possible.; The core implementation is in separate files and nothing needs to change in CSysMatrix for this to work. ## Usage; Available factorizations:; - LDLT; - LU; - ILU(k). The ILU is different from the one we have in that it is computed for the entire matrix and not just for the local matrices (i.e. it considers halos), it is not very fast though.; The three factorizations can be used as preconditioners via options PASTIX_ILU, PASTIX_LU, and PASTIX_LDLT. And the first two as solvers via options PASTIX_LU and PASTIX_LDLT (in which case you should use a preconditioner type that does not cause CSysMatrix to allocate extra memory (LU_SGS).; The reason LDLT and LU can also be used as preconditioners is that it is possible to set a factorization frequency (via PASTIX_FACTORIZATION_FREQUENCY) so that the factorizations are only computed every N iterations or only on the first call (frequency set to 0), this is very useful for non linear elasticity.; The fill-in for the ILU is set via PASTIX_FILL_LEVEL, I did not reuse the option we have again to keep CSysMatrix from allocating any more than it needs to.; By default the solvers run silently, but more verbosity can be set via PASTIX_VERBOSITY_LEVEL (0 : silent, 1 : only during major operations, 2 : 1 + on every solve). ## Compilation; _TODO_; This needs linking with another library (Scotch) and with BLAS, I will explain this in detail.; Question: For v7 are we moving exclusively to meson?. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771:1702,allocate,allocate,1702,https://su2code.github.io,https://github.com/su2code/SU2/pull/771,1,['allocate'],['allocate']
Energy Efficiency,"recently (in develop) scale/rotate/translate were changed to do volume deformations (aka, all at once and not requiring a linear elasticity solve to get the updated volume mesh). This branch includes changes to allow scaling, translating, or rotating only a surface w/in the volume. If all markers are included in the deformation, it returns to the all-at-once volume deformation. . Hypothetically this should allow multi-body movements (as in, rotating a control surface) while maintaining the more efficient volume deformation for operations like scaling the mesh.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187:500,efficient,efficient,500,https://su2code.github.io,https://github.com/su2code/SU2/pull/187,1,['efficient'],['efficient']
Energy Efficiency,"res method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping factor for the residual restriction: 0.75.; Damping factor for the correction prolongation: 0.75.; No CFL adaptation.; +-------------------------------------------+; | MG Level| Presmooth|PostSmooth|CorrectSmo|; +-------------------------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; Courant-Friedrichs-Lewy number: 10; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 99999.; Reduce the density residual 10 orders of magnitude.; The minimum bound for the density residual is 10^(-12).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 10000 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot ASCII (.dat).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; Far-field boundary marker(s): farfield.; Constant heat flux wall boundary marker(s): airfoil. ---------------------- Read Grid File Information -----------------------; Two dimensional problem.; 14576 points.; 2 surface markers.; +------------------------------------+; | Index| Marker| Elements|; +------------------------------------+; | 0| airfoil|",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:3829,Reduce,Reduce,3829,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['Reduce'],['Reduce']
Energy Efficiency,"s my issue. . While I can retrieve a correct y+ near the blade, I have trouble to get a y+ lower than 65 near the walls. At y+ = 65, SU2 runs and converges to some results. For y+ < 65, SU2 raises a segmentation fault at this location: ; ![segfault](https://user-images.githubusercontent.com/24920252/140756620-db3ed08f-05cd-4811-b037-642a221ea501.png); Here are the results of the gdb analysis. It seems that the seg faut comes from the Giles BC part of the initialisation of the turbo data containers. Especially those lines (CEulerSolver.cpp line 435-436). `CkInflow[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(INFLOW)+1) = complex<su2double>(0.0,0.0);`. `CkOutflow1[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(OUTFLOW)+1) = complex<su2double>(0.0,0.0);`. but I don't understand why. ![issue](https://user-images.githubusercontent.com/24920252/140783485-0d856d2a-7353-468f-aeab-c78b742d8582.png). The first thing I checked was to reduce the number of elements in my domain but the problem remains the same (so no memory issue).; Then I checked if it was not an issue from . - : a too small size of my first element. I scaled my domain by a factor of 1000 and the issue is the same (can't go below y+ = 65);; - : trouble with the expansion ratio of the boundary layer;; - :the number of procs (tried with 2 - 6 -15 and the issue is the same). I don't have idea anymore and that is why I'm coming to you. . *Please provide a config file and mesh for a minimal example that recreates the problem.*. Here is a link to the .geo file (line 28 is to get a y+ of 1. You can uncomment line 29 for y+=65), the .cfg and two .su2 meshes to directly launch the case. . https://mseduculiegebe-my.sharepoint.com/:u:/g/personal/amaury_bilocq_uliege_be/EaUIIj1J_-BBktcLu8F9kosBsRjtOduWrrtENbW_bnx1ow?e=F47adW. Thank you already for your help!. Amaury. **Desktop (please complete the following information):**; - OS: Linux - Ubuntu 21.04; - C++ compiler and version: g++ (GCC) 10.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1429:2039,reduce,reduce,2039,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429,1,['reduce'],['reduce']
Energy Efficiency,"s stress tensor AND from the production term. Currently we do the former (because it was found beneficial here #797) but not the latter, which leaves the implementation in some kind of limbo state. ### Discussed in https://github.com/su2code/SU2/discussions/1483. <div type='discussions-op-text'>. <sup>Originally posted by **sun5k** January 10, 2022</sup>; Question about Menter's SST model on SU2. Hello! This post is my first Q&A for SU2; happy new Year everyone.; I have two questions about the SST model for the SU2. The abbreviation is referred from the [SST Turbulence model of NASA TMR](https://turbmodels.larc.nasa.gov/sst.html), [Compressible RANS of NASA TMR](https://turbmodels.larc.nasa.gov/sst.html) , and [Running cases with CFD of NASA TMR](https://turbmodels.larc.nasa.gov/noteonrunning.html). . Briefly ; 1. In SU2, The production term of the SST model uses incompressible assumptions. Is there some special reason? . 2. Always ignore the turbulence kinetic energy to compute the stress tensor for the momentum and energy equation, is it a bug?. Here is the detail!. 1. . The Boussinesq relation of RANS is . ![image](https://user-images.githubusercontent.com/50565314/148731113-5d141cd0-bea0-4bc4-8f2a-e40932645844.png). Form [Running cases with CFD of NASA TMR](https://turbmodels.larc.nasa.gov/noteonrunning.html): ""In the equation above, the![image](https://user-images.githubusercontent.com/50565314/148731540-ace2cac5-4168-48d8-9125-c053806ba463.png) term is sometimes ignored for non-supersonic speed flows, and the **second term in parentheses is identically zero for incompressible flows**."". The production term of SST model is :. ![image](https://user-images.githubusercontent.com/50565314/148771167-b96d6d8f-b638-4efd-a6a3-6731ddb4f4a0.png). Rewrite the first term of the above equation :. ![image](https://user-images.githubusercontent.com/50565314/148731731-23cdd717-28d1-453c-a867-77c99494f86f.png). ![image](https://user-images.githubusercontent.com/50565314/14877146",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1551:1096,energy,energy,1096,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551,2,['energy'],['energy']
Energy Efficiency,"simulation, it may make a noticeable difference. Q.2). The stress tensor in RANS simulation is following : . ![image](https://user-images.githubusercontent.com/50565314/148759208-effb0643-a903-48d4-9ef2-3b46162ad5f8.png). From [Running cases with CFD of NASA TMR](https://turbmodels.larc.nasa.gov/noteonrunning.html) : ""In the equation above, the![image](https://user-images.githubusercontent.com/50565314/148731540-ace2cac5-4168-48d8-9125-c053806ba463.png) term is **sometimes ignored for non-supersonic speed flows**, and the second term in parentheses is identically zero for incompressible flows."" And, from [SST Turbulence model of NASA TMR](https://turbmodels.larc.nasa.gov/sst.html) : ""**When the ![image](https://user-images.githubusercontent.com/50565314/148762159-e2b08305-e205-4ffd-9ec1-e9de19cda42d.png) term is ignored in ![image](https://user-images.githubusercontent.com/50565314/148762216-7e565ca3-856d-4c18-8e16-c9ad780452b8.png) in the momentum and energy equations** and the production term is approximated by ![image](https://user-images.githubusercontent.com/50565314/148762331-d102ea3b-b5fe-42d3-aa83-ffa0f18e3104.png), a modified naming convention should be employed : **SSTm**"". In the SU2 source code( line 142 in [SU2_CFD/src/numerics/flow/flow_diffusion.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/numerics/flow/flow_diffusion.cpp)), The turbulence kinetic energy of the stress tensor is always calculated as 0. I don't know who, someone comments as ; ""// TODO why ignore turb_ke?""; This comment existed until SU2 v.7.1.0 to SU2 v.7.2.1(I'm not sure the same about the bellow SU2 v710). I guess the SST model of SU2 is 'SST' not 'SSTm'. Then, it should be used ![image](https://user-images.githubusercontent.com/50565314/148767053-79a012e3-1061-46b9-b432-359b7b04969f.png) in the stress tensor of the momentum and energy equations. The code always ignores the turbulence kinetic energy to compute the stress tensor for the momentum and energy equation.; Is ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1551:4479,energy,energy,4479,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551,1,['energy'],['energy']
Energy Efficiency,"sity/pressure/temperature at the nodes and also during 2nd-order reconstruction at cell faces.; - CV face states for 2nd-order MUSCL are now optionally reconstructed with a separate gradient method (unweighted least squares recommended), which is very important for robustness. Gradients for viscous terms and sources are still computed via GG or WLS for accuracy reasons.; - SA model was being clipped unnecessarily. This clipping has been removed. Here is my recommendation on how to run all of your 2nd-order cases going forward:. ### Euler / Laminar N-S; Turn off the limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:1969,adapt,adaptive,1969,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['adapt'],['adaptive']
Energy Efficiency,"slower than in direct mode.; To address this issue I want to template the required classes such that we have the option (but not be obligated) to have CSysMatrices of passivedoubles in the discrete adjoint.; Moreover, I want to do some refactoring to make CSysSolve a proper class instead of an aggregate of functions. Currently we instantiate a CSysSolve whenever we need to solve a system, I think it would be beneficial to keep CSysSolve as a member of the classes that use it, so that for example, working memory used by Krylov methods is allocated only once. Note: I am aware that @talbring started some work on this (and more) in the *feature_template_linear_solver* branch, I tried to pick up were Tim left of but it was too much (a lot changes in one year). I really like the refactoring he was doing and will try to bring as much as possible into this, but I need to do it in smaller steps. Now this PR deals with some of the aforementioned refactoring, namely:; - CG, BCGSTAB, and GMRES have their working vectors and matrices as members of CSysSolve and allocate them only on the first call.; - CSysSolve is now a member of CSolver and CVolumetricMovement.; - BCGSTAB uses two fewer vectors than before and the ""p"" and ""v"" vectors are initialized to 0 instead of ""b"" (I think this was a small bug?).; - CSysSolve takes a ""mesh deformation"" flag at construction so that Solve can be called by CSolver and by CElasticityMovement, before the latter decided what Krylov method to call in place, kind of duplicating what is done by Solve. I did not do the same for CVolumetricMovement because there the differentiation is handled differently. This also allowed SetExternalSolve_Mesh to be merged with SetExternalSolve.; - Now when CSysSolve sets the external solve it passes itself (*this*) so that CSysSolve_b re-uses it in the reverse path instead of instantiating a CSysSolve every time.; - Part of CSysSolve_b::Solve_b was moved to CSysSolve::Solve_b to allow CSysSolve_b::Solve_g to be drop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650:1626,allocate,allocate,1626,https://su2code.github.io,https://github.com/su2code/SU2/pull/650,1,['allocate'],['allocate']
Energy Efficiency,"t entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version: GCC 8.22; - MPI implementation and version: Intel (Open MPI) 3.0.0; - SU2 Version: v7.0.8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143:1758,adapt,adaptation,1758,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143,1,['adapt'],['adaptation']
Energy Efficiency,"te the grid movement during the time domain simulation via the python interface; Involved parameters: ; GRID_MOVEMENT= ROTATING_FRAME; TRANSLATION_RATE= u v w ; ROTATION_RATE= p q r~~; - update the surface mesh deformation during the time domain simulation via the python interface ; Involved parameters: ; DEFORM_MESH= YES; MARKER_DEFORM_MESH= ( list of markers ). Summing up, I will need to combine the grid velocities due to aircraft movement, elasticity and gust. Currently, this is not possible in SU2. ; I split the work into the following steps. Here is what is working / not working:; - [x] gust with 3D meshes --> plausibility check with rectangular, 3 meter wing at 2° + long gust equivalent to 2° = approx doubling of the lift coefficient; - [x] ~~gust + moving grid --> plausibility check by comparison with farfield onflow condition from above~~; - [x] ~~new python interface for grid movement update --> plausibility check with a) sudden jump in heave velocity w, b) sinusoidal velocity w at different frequencies to observe influence of unsteady aerodynamics (phase shift and reduction of resulting lift)~~; - [x] mesh deformation via python interface --> plausibility check with sinusoidal displacement z, scaled and shifted by 90° to correspond to velocity w from above, leads to same results; - [ ] ~~mesh deformation + moving grid --> differences with respect to farfield onflow condition / does NOT lead to same results as above. The grid velocities look right though, both on the temporary screen output and when plotting them by slicing through the volume results, but the amplitude of the lift coefficient is too small. I guess that the velocities are not set properly / mixed up / require a call to some update function or similar. **I'm stuck at this point. Does someone have any idea what I'm doing wrong?? I feel that I am missing an important step here...**~~; - [ ] ~~final test: mesh deformation + moving grid + gust~~; - [x] final test: mesh deformation + gust. Apart fr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:1865,meter,meter,1865,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,1,['meter'],['meter']
Energy Efficiency,"the far-field flow. This approach has been already implemented with the `KIND_TURB_MODEL= SST_SUST` option.; ![kk_sst_copr_sust_TKE](https://user-images.githubusercontent.com/72806890/111278024-60c96000-8639-11eb-8b1b-f4e95a3f97ab.png); - *Floor values*, which is equivalent to set the `lowerlimit` to the far-field values in the upstream region of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubusercontent.com/72806890/111278050-68890480-8639-11eb-9065-adac2e8cba15.png). The SA model does not suffer from a decaying turbulence variable, but the proposed changes are also functional there. [1] Philippe R. Spalart and Christopher L. Rumsey, Effective Inflow Conditions for Turbulence Models in Aerodynamic Calculations, https://arc.aiaa.org/doi/pdf/10.2514/1.29373. ## Related Work; ?. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236:1780,energy,energy,1780,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236,1,['energy'],['energy']
Energy Efficiency,"thout low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping factor for the residual restriction: 0.75.; Damping factor for the correction prolongation: 0.75.; No CFL adaptation.; +-------------------------------------------+; | MG Level| Presmooth|PostSmooth|CorrectSmo|; +-------------------------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; Courant-Friedrichs-Lewy number: 10; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 99999.; Reduce the density residual 10 orders of magnitude.; The minimum bound for the density residual is 10^(-12).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 10000 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot ASCII (.dat).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow varia",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:3362,adapt,adaptation,3362,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['adapt'],['adaptation']
Energy Efficiency,"tion test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195149921-6e85c1c7-2fc8-47e9-b935-246081ea17fd.png). SA+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195152304-e81c92f3-35da-4c50-9cd8-e5528c644cde.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. More comments to the code will be added in the following days. Especially to the declaration of some functions. I know that it is not the most good-looking code right now but I preferred uploading it now such that others can use it even if it is not really clean. . ## Related Work; Work is related to the PR #1751. It extends it to SA turbulence model and includes cross-flow effects (LM2015) and turbulence index computations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/do",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:3306,efficient,efficient,3306,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['efficient'],['efficient']
Energy Efficiency,"tion[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(), node[p1]->GetSecondary());; ...; ```; and now we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because on",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:5168,allocate,allocate,5168,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['allocate'],['allocate']
Energy Efficiency,"tps://github.com/su2code/SU2/files/4793965/case728.txt). I am running a shape optimization of a single blade row stator with an FFD box of degree (5 , 11, 2). The max deformation is of the order 1E-5. The change in mesh visually is very minimal but after SU2 deforms the mesh it generates negative volumes and a negative Jacobian. It is also happening if I use only one DV in the optimization. As a result my DSN_002 DIRECT results are all diverging. In the image, the red box is the deformed box and the green one is the undeformed box. You can also see the blade. The number of nodes are just shy of 1 million in the whole volume mesh. ![untitled](https://user-images.githubusercontent.com/46273732/84716054-2747b500-af40-11ea-9877-3f229a8957ce.png). SU2 mesh stats for DSN001:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 52.4241| 89.9962|; | CV Face Area Aspect Ratio| 1.02662| 2123.48|; | CV Sub-Volume Ratio| 1.00007| 3.63253|; +--------------------------------------------------------------+. SU2_mesh stats for DSN002:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| -42.6863| 89.9963|; | CV Face Area Aspect Ratio| 1.02903| 31868.8|; | CV Sub-Volume Ratio| 1.00034| 40627.1|; +--------------------------------------------------------------+. From Tecplot I can calculate that the cell volumes and the Jacobian is also negative for DSN002 for some cells. I believe if I reduce my OPT_RELAX_FACTOR I can have deformations of the O(-6) but isn't this already too small. Are there any parameters I can change in the config file to avoid this issue?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1026:1841,reduce,reduce,1841,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026,1,['reduce'],['reduce']
Energy Efficiency,"us on another performance bottleneck we have. One that always seemed quite daunting to tackle (to me) due to the amount of changes it would require, but recently I had a silly idea to reduce the invasiveness of the ""procedure"". Discontiguous data structures are absolute performance killers for low order FVM.; *(skip this paragraph if this is obvious)*; What data structures? All the small ones the solver needs to ""visit"" to compute residuals.; Why? Mostly because they destroy locality. The useful data stored by consecutive nodes is very far apart. Modern CPU's try to hide the latency of accessing main memory (RAM) by caching frequently used areas of that memory, this effort is very easily undermined by accessing memory at random or predictably but at very large strides.; Let me give you some numbers, for CNSVariable in 2D the average distance between the primitives at consecutive nodes is 200 doubles or 1600 bytes. ""What?! is the compiler dumb?"" No, virtual methods take up quite a bit of space `sizeof(CNSVariable)` is 424 bytes, before it allocates any data.; And that can only get worse as more functionality is added to the code. This is one of those ""well known"" things at least in a qualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhead); {; primary = new double [nVar+overhead];; for(int i=0; i<nVar; ++i) primary[i] = 1.0;; }; ```; All this does is give access to some primary variables held by the base clas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:1231,allocate,allocates,1231,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['allocate'],['allocates']
Energy Efficiency,"y remote repository(forked) is not synchronized with v7.40, and I don't know what the problem is. So, I will delete the forked repository and fork it again to PR with the same name and content. Fortunately, the LM model updated to v7.40 obtained the same residuals and results as the previous v7.3.1. ## Current State . Code is well running and, validation is almost done. V&V cases: T3A, T3A-, NLF. Flow conditions are the reference from: https://doi.org/10.2514/6.2022-3679. The grids of T3A and NLF cases are provided by [TMW](https://transitionmodeling.larc.nasa.gov/workshop_i/)(Transition Model Workshop). And I made the grid of T3A- myself. To validate the LM model, the simulation results of SU2 are compared with the results of Fluent19.0 with a similar numerical setting. Here is the numerical scheme : . <html xmlns:m=""http://schemas.microsoft.com/office/2004/12/omml""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=PowerPoint.Slide>; <meta name=Generator content=""Microsoft PowerPoint 15"">. <!--tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; td; 	{padding-top:1.0px;; 	padding-right:1.0px;; 	padding-left:1.0px;; 	mso-ignore:padding;; 	color:windowtext;; 	font-size:18.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Arial;; 	mso-generic-font-family:auto;; 	mso-font-charset:0;; 	text-align:general;; 	vertical-align:bottom;; 	border:none;; 	mso-background-source:auto;; 	mso-pattern:auto;}; .oa1; 	{border:1.0pt solid black;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; .oa2; 	{border:1.0pt solid black;; 	text-align:center;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; -->. </head>. <body>; <!--StartFragment-->.   | Fluent | SU2; -- | -- | --; Flux | Roe-FDS | L2ROE; Gradient | Least Squares Cell Based | WEIGHTED_LEAST_SQUARES; Spatial Discretization Flow | Third",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751:1352,Power,PowerPoint,1352,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751,1,['Power'],['PowerPoint']
Energy Efficiency,"~~Convergence history is non deterministic when running the RANS solver with SA model using OMP-only parallelism. When fixing the min RMS residual, the computation stops at a different iteration each time I run the solver.~~. ~~That does not happen with the EULER or NAVIER_STOKES solvers.~~. Convergence history is non deterministic when using the NEWTON_KRYLOV solver using OMP-only parallelism. When fixing the min RMS residual, the computation stops at a different iteration each time I run the solver.; That happens with the EULER or NAVIER_STOKES and RANS solvers. I am using a common setup for each case i.e. ROE+MUSCL convective fluxes, WLSQ for viscous gradients, LSQ for MUSCL gradients. Tried also switching ON and OFF the CFL adaptation and limiters, different linear solvers, and precision (single/double) of the linear solver but that doesn't change the outcome of the test (RANS conv history remains non deterministic while EULER and NS have always the same convergence history). I compiled in release (-O3), with OMP support and exported the mtune/march variables to enable SIMD types. ~~I'll be looking in the SA/Scalar solver for some uninitialized vars. Any other idea?~~. I'll be looking in the CNewtonIntegration files for some uninitialized vars/thread safety issue. Any other idea? . **Bug report checklist**; - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.4 LTS); - C++ compiler and version: g++ (GCC) 7.5.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 8.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2259:738,adapt,adaptation,738,https://su2code.github.io,https://github.com/su2code/SU2/issues/2259,1,['adapt'],['adaptation']
Integrability," (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; ... and two other processes waiting at ; <details>; <summary>that place</summary>. ```; #0 0x00002aaac3d45500 in hmca_bcol_basesmuma_reduce_intra_fanin_progress (); from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf587798 in _coll_ml_allreduce (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf33038d in mca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:3564,integrat,integration,3564,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability," /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf587798 in _coll_ml_allreduce (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf33038d in mca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5357,integrat,integration,5357,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability," 0.15.; Angle of attack (AoA): 10 deg, and angle of sideslip (AoS): 0 deg.; Reynolds number: 6e+06. Reference length 1.; No restart solution, use the values at infinity (freestream).; Non-Dimensional simulation (P=1.0, Rho=1.0, T=1.0 at the farfield).; The reference area is 1 m^2.; The semi-span will be computed using the max y(3D) value.; The reference length is 1 m.; Reference origin for moment evaluation is (0.25, 0, 0).; Surface(s) where the force coefficients are evaluated: airfoil. Surface(s) plotted in the output file: airfoil.; Input mesh file name: n0012_225-65.su2. ---------------------- Space Numerical Integration ----------------------; Roe (with entropy fix = 0.001) solver for the flow inviscid terms.; Standard Roe without low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping factor for the residual restriction: 0.75.; Damping factor for the correction prolongation: 0.75.; No CFL adaptation.; +-------------------------------------------+; | MG Level| Presmooth|PostSmooth|CorrectSmo|; +-------------------------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; Co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:2611,integrat,integration,2611,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['integrat'],['integration']
Integrability," 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping factor for the residual restriction: 0.75.; Damping factor for the correction prolongation: 0.75.; No CFL adaptation.; +-------------------------------------------+; | MG Level| Presmooth|PostSmooth|CorrectSmo|; +-------------------------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; Courant-Friedrichs-Lewy number: 10; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 99999.; Reduce the density residual 10 orders of magnitude.; The minimum bound for the density residual is 10^(-12).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 10000 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot ASCII (.dat).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; Far-field boundary marker(s): farfield.; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:3678,integrat,integration,3678,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['integrat'],['integration']
Integrability," </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:6879,depend,dependabot,6879,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,22,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability," </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </block",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5889,depend,dependabot,5889,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability," <h2>v2.2.0</h2>; <ul>; <li>Support for artifact retention</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Add Third Party License Information</li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Use updated version of the <code>@action/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect case insensitive file uploads</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Fix for certain symlinks not correctly being identified as directories before starting uploads</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Support for uploading artifacts with multiple paths</li>; <li>Support for using exclude paths</li>; <li>Updates to dependencies</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/3cea5372237819ed00197afe530f5a7ea3e805c8""><code>3cea537</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/327"">#327</a> from actions/robherley/artifact-1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/849aa7758a428ee22be38de371b49c8bd57c4b9d""><code>849aa77</code></a> nvm use 12 &amp; npm run release</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/4d3986961d0423ba9a593efb490a2960eb65f43b""><code>4d39869</code></a> recompile with correct ncc version</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2e0d362ec5cf81e334dda822c49c96dcd4b7df2c""><code>2e0d362</code></a> bump <code>@​actions/artifact</code> to 1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/09a5d6a283da3e7c9f3253a5d4cdab2347712a66""><code>09a5d6a</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/320"">#320</a> from actions/dependabot/npm_and_yarn/ansi-regex-4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/189315d9106f43a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:2649,depend,dependabot,2649,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependabot']
Integrability," <ul>; <li><a href=""https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac""><code>3df4ab1</code></a> Release 4.0.0 (<a href=""https://redirect.github.com/actions/checkout/issues/1447"">#1447</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:10672,depend,dependency-name,10672,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['depend'],['dependency-name']
Integrability," Note: if you make any changes to this PR yourself, they will take precedence over the rebase. ---. [//]: # (dependabot-end). Bumps [actions/upload-release-asset](https://github.com/actions/upload-release-asset) from 1.0.1 to 1.0.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-release-asset/releases"">actions/upload-release-asset's releases</a>.</em></p>; <blockquote>; <h2>Automate sliding major version number</h2>; <p>This is a minor update to make the current release have the latest code from master, and additionally allows for a new automation workflow to execute to automate the sliding of the major (v1, v2, v3, etc) version numbers for ease of referencing</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1754:1144,depend,dependabot,1144,https://su2code.github.io,https://github.com/su2code/SU2/pull/1754,1,['depend'],['dependabot']
Integrability," PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:3446,wrap,wrapper,3446,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['wrap'],['wrapper']
Integrability," a table can be helpful for readability, but we can make these changes as we go. Note: the convergence output is not affected yet!. The class is added in a folder called ""Common/toolboxes"". My intention is that in the future we will add there more small helper tools/classes, which are essentially independent of the rest of the code. . Below you find an example output of the current preprocessing:. ```. ---------------------- Space Numerical Integration ----------------------; Jameson-Schmidt-Turkel scheme (2nd order in space) for the flow inviscid terms.; JST viscous coefficients (2nd & 4th): 0.5, 0.02.; The method includes a grid stretching correction (p = 0.3).; Scalar upwind solver for the turbulence model.; First order integration in space.; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 999999999 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot binary (.plt).; Convergence history file name: history.; F",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:1319,Integrat,Integration,1319,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['Integrat'],['Integration']
Integrability," and boostconv algorithm as proposed by [2]. _SFD_: A method, enabling the computation of steady solutions of the Navier-Stokes equations in globally unstable configurations. Steady-state is achieved by damping the unstable temporal frequencies with addition of a dissipative relaxation term proportional to the high-frequency content of the velocity fluctuations. [1]. _boostconv_: An iterative algorithm, inspired by Krylov-subspace methods, which is able to compute unstable steady states and/or accelerate the convergence to stable configurations. This algorithm is based on the minimization of the residual norm at each iteration step with a projection basis updated at each iteration rather than at periodic restarts like in the classical GMRES method. The algorithm is able to stabilize any dynamical system without increasing the computational time of the original numerical procedure used to solve the governing equations. _Moreover, it can be easily inserted into a pre-existing relaxation (integration) procedure with a call to a single black-box subroutine_. [2]. **Additional context**; I would be happy to collaborate on implementation of said algorithms in SU2 but I do not have much experience with C++ (I mostly use Fortran) and I am not too familiar with SU2 source code so it would be great to work with someone more experienced in those areas. Figure from [2] outlining performance of SFD and boostconv on a cylinder:; <img width=""882"" alt=""Screenshot 2023-05-02 at 22 23 19"" src=""https://user-images.githubusercontent.com/67333831/235789512-63bc5e29-6d09-478f-a9e5-9931b5673bd0.png"">. **Bibliography**; [1] Åkervik, E., Brandt, L., Henningson, D.S., Hœpffner, J., Marxen, O. and Schlatter, P., 2006. Steady solutions of the Navier-Stokes equations by selective frequency damping. Physics of fluids, 18(6), p.068102.; [2] Citro, V., Luchini, P., Giannetti, F. and Auteri, F., 2017. Efficient stabilization and acceleration of numerical simulation of fluid flows by residual recombi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022:2164,integrat,integration,2164,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022,1,['integrat'],['integration']
Integrability," coupled via the python interface, while SU2 shall provide the aerodynamic side, as a higher fidelity alternative to panel methods such as VLM & DLM. . Update, 13.04.2023: The combination of grid velocities from the moving + deforming grid turned out to be more complicated as expected (at least for me) and the moving grid is not fully implemented for unsteady simulations (according to Pedro, some source terms are missing). The new approach uses a farfield onflow condition at alpha=0.0 and translates and rotates the whole aircraft in the elastic mesh for the rigid body + structural dynamic reaction. This is more laborious on my side (transformation of the surface, the deformation vector and the forces about the Euler angles) but simplifies the work on the SU2 side:. - extend the gust to 3D meshes (current implementation only for 2D meshes); - ~~update the grid movement during the time domain simulation via the python interface; Involved parameters: ; GRID_MOVEMENT= ROTATING_FRAME; TRANSLATION_RATE= u v w ; ROTATION_RATE= p q r~~; - update the surface mesh deformation during the time domain simulation via the python interface ; Involved parameters: ; DEFORM_MESH= YES; MARKER_DEFORM_MESH= ( list of markers ). Summing up, I will need to combine the grid velocities due to aircraft movement, elasticity and gust. Currently, this is not possible in SU2. ; I split the work into the following steps. Here is what is working / not working:; - [x] gust with 3D meshes --> plausibility check with rectangular, 3 meter wing at 2° + long gust equivalent to 2° = approx doubling of the lift coefficient; - [x] ~~gust + moving grid --> plausibility check by comparison with farfield onflow condition from above~~; - [x] ~~new python interface for grid movement update --> plausibility check with a) sudden jump in heave velocity w, b) sinusoidal velocity w at different frequencies to observe influence of unsteady aerodynamics (phase shift and reduction of resulting lift)~~; - [x] mesh deform",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:1273,interface,interface,1273,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,2,['interface'],['interface']
Integrability," is much better to maintain. Furthermore it has a great documentation. Finally, meson has no dependencies apart from python and we can easily ship it (as a submodule) since it needs no installation/compilation. . ### What is ninja ?; ninja is a replacement for make and is used to execute the compiler and to resolve dependencies. Meson uses ninja as the default backend. So instead of using configure + make, we use meson + ninja. As with meson, we can ship it as a submodule. It needs a compilation, but again it has no dependencies apart from python. ### How to use ?; The correct meson and ninja versions are added as git submodules. So in case you don't have meson and ninja installed (there should be packages available for all major distros), compile ninja using:. ```; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; and run meson using; ```; meson.py build --prefix=$PWD -Denable-pywrapper=true -Denable-autodiff=true; ```; to ocnfigure SU2 with the python wrapper and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Additional notes; - Meson requires python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and cr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:1730,wrap,wrapper,1730,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['wrap'],['wrapper']
Integrability," know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motiva",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2061,wrap,wrapper,2061,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['wrap'],['wrapper']
Integrability," machine cluster (16 cores each) to run CFD problems on. The cluster is connected together with 1G ethernet. On SU2 v6.2 and earlier, when I ran a problem on multiple machines the time per iteration would improve up until i hit a limit where presumably network overhead exceeded the benefit of adding another machine (The limit for my set up was something like 0.5 s/iteration. . I just tried SU2 v7 on this same cluster and consistently the time per iteration gets worse when I add a second machine and double the process count. I've tried this on smaller problems (~1Mill cells) but I've also tried it on larger ones (~27Million cells). On the larger problem, one machine with 16 processes ran at 34s/iteration and 2 machines with 32 processes also ran at 34s/iteration. For that problem size, I would expect a near 2x improvement in iteration time when doubling processes. Other than this, the apples to apples comparison between SU2 v6 and v7 is otherwise very impressive where iteration times have come down even for higher CFL's. I did compile SU2 from source. I tried to compile it the same way for both v6.2 and v7 though with the different build system its a little bit harder to be certain that its all exactly the same. Given that v7 performs fine going up to 16 processes on one machine, I don't think that its a compilation issue, but admittedly I don't know all the intricacies of mpi. . Since its just multi machine that's an issue, I wonder if there's something about v7 that make it more bandwidth/latency dependent that would go away with a faster network. Or is this just a regression do to (compiler version, mpi version, a network misconfiguration...)?. Anyway I know this a bit rambling, but any help would be appreciated. I'm happy to test anything on my setup this if anyone has any ideas. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 7.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894:1778,depend,dependent,1778,https://su2code.github.io,https://github.com/su2code/SU2/issues/894,1,['depend'],['dependent']
Integrability, mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005af5f8 CFileWriter::OpenMPIFile() ???:0; 5 0x00000000005c38d3 CSU2BinaryFileWriter::Write_Data() ???:0; 6 0x0000000000523dd7 COutput::WriteToFile() ???:0; 7 0x0000000000525173 COutput::SetResult_Files() ???:0; 8 0x00000000004bf924 CFluidIteration::Solve() ???:0; 9 0x00000000004a64c2 CSinglezoneDriver::StartSolver() ???:0; 10 0x0000000000451b2a main() ???:0; 11 0x0000000000023873 __libc_start_main() ???:0; 12 0x000000000046852e _start() ???:0; #=================================; [gen2node1:232297] *** Process received signal ***; [gen2node1:232297] Signal: Segmentation fault (11); [gen2node1:232297] Signal code: (-6); [gen2node1:232297] Failing at address: 0x3e900038b69; [gen2node1:232297] [ 0] /lib64/libpthread.so.0(+0x12dc0)[0x7f5a45076dc0]; [gen2node1:232297] [ 1] /opt/hpcx/ompi/lib/libmpi.so.40(ompi_file_close+0x11)[0x7f5a46fcb8b1]; [gen2node1:232297] [ 2] /opt/hpcx/ompi/lib/libmpi.so.40(PMPI_File_close+0x16)[0x7f5a46fef056]; [gen2node1:232297] [ 3] /usr/local/bin/SU2_CFD[0x5af5f8]; [gen2node1:232297] [ 4] /usr/local/bin/SU2_CFD[0x5c38d3]; [gen2node1:232297] [ 5] /usr/local/bin/SU2_CFD[0x523dd7]; [gen2node1:232297] [ 6] /usr/local/bin/SU2_CFD[0x525173]; [gen2node1:232297] [ 7] /usr/local/bin/SU2_CFD[0x4bf924]; [gen2node1:232297] [ 8] /usr/local/bin/SU2_CFD[0x4a64c2]; [gen2node1:232297] [ 9] /usr/local/bin/SU2_CFD[0x451b2a]; [gen2node1:232297] [10] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7f5a462b7873]; [gen2node1:232297] [11] /usr/local/bin/SU2_CFD[0x46852e]; [gen2node1:232297] *** End of error message ***,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971:4099,message,message,4099,https://su2code.github.io,https://github.com/su2code/SU2/issues/971,1,['message'],['message']
Integrability," newline after the match token in error comments (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/55"">#55</a>)</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/e33092117bdd8c435e9b654d53726c6936f19518""><code>e330921</code></a> Only use a single comment when the action fails (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/53"">#53</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/mheap/github-action-required-labels/compare/v3...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:5911,Depend,Dependabot,5911,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,2,['Depend'],['Dependabot']
Integrability," not entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version: GCC 8.22; - MPI implementation and version: Intel (Open MPI) 3.0.0; - SU2 Version: v7.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143:1056,message,message,1056,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143,1,['message'],['message']
Integrability," raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac""><code>3df4ab1</code></a> Release 4.0.0 (<a href=""https://redirect.github.com/actions/checkout/issues/1447"">#1447</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot canc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:10573,Depend,Dependabot,10573,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,4,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability," rms[Rho]| rms[nu]| CL| CD|; +----------------------------------------------------------------+; | 0| -5.507608| -6.134199| 0.484414| 0.030848|; | 1| -4.574136| -6.098123| 0.484453| 0.030598|; [...]; | 10| -5.466734| -4.908028| 0.484509| 0.029445|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /mnt/cfddata/WLiao/CRJ700_su2/CRJ700_inch_roe_TEST/,; Command = mpirun -np 2 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '139'; [gen2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); [gen2node1:232297:0:232297] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005af5f8 CFileWriter::OpenMPIFile() ???:0; 5 0x00000000005c38d3 CSU2BinaryFileWriter::Write_Data() ???:0; 6 0x0000000000523dd7 COutput::WriteToFile() ???:0; 7 0x0000000000525173 COutput::SetResult_Files() ???:0; 8 0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971:1739,message,message,1739,https://su2code.github.io,https://github.com/su2code/SU2/issues/971,1,['message'],['message']
Integrability," that the Prism and Pyramid shape elements used for mesh deformation had some issues, namely:; - The Prism (6 nodes) element had incorrect integration points, and perhaps due to some inconsistency between the ordering of the nodes and the shape function it had ""negative"" stiffness (deform opposite to force). The latter issue was remedied by using negative weights... I tried permuting the integration points but that did not help.; - The Pyramid (5 nodes) had inconsistent integration points and shape functions, it was using pyramid points but degenerate hex functions, this made the element some 20 times more flexible than it should be, pyramid shape functions are used now. My main reason to look into this was to support all element types in the structural solver both for linear and nonlinear analysis, in principle that should be working now, but I still have tests to run. I took the opportunity to refactor the CElement family of classes, now the derived classes only deal with the shape specifics:; - Integration/extrapolation points, shape function and derivatives, are computed and stored at construction.; - Area/Volume computation in undeformed (reference) or deformed (current) coordinates. Generic actions like allocating data and computing gradients are done by the base class. For the latter I included one method for 2D and another for 3D, they only differ in the inversion of the Jacobian but being specialized nDim can be ""hardcoded"" which should allow for more compile time optimization. I expect some regressions to fail, and I will still run more tests to verify the revised elements. I will post those results and add a regression. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681:1086,Integrat,Integration,1086,https://su2code.github.io,https://github.com/su2code/SU2/pull/681,1,['Integrat'],['Integration']
Integrability," to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @talbring ; - I already started adding the mesh solver, numerics and transfer functions in separate files as discussed in #583 and already started in #725. For clarity and ease of merging, only new classes are split so far, but I will probably start splitting other structures soon in PRs to come. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:1616,wrap,wrapper,1616,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,3,"['integrat', 'interface', 'wrap']","['integrate', 'interfaces', 'wrapper']"
Integrability," update_grad; self.g = grad_wrapped(self.x); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 380, in obj_df; grad = su2grad(this_obj,grad_method,config,state); File ""/usr/local/bin/SU2/eval/gradients.py"", line 96, in gradient; grads = adjoint( func_name, config, state ); File ""/usr/local/bin/SU2/eval/gradients.py"", line 294, in adjoint; info = su2run.adjoint(konfig); File ""/usr/local/bin/SU2/run/adjoint.py"", line 79, in adjoint; SU2_CFD(konfig); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2/SU2-7.0.4/test1/DESIGNS/DSN_001/ADJOINT_DRAG/,; Command = /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD config_CFD_AD.cfg; SU2 process returned error '127'; /bin/sh: 1: /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD: not found; ```; So I tried to build AD under the instruction. I copied the exact same thing and pasted to the command. The error is:. ```; Checking the status of submodules; =====================================================================; Found an old or unspecified version of CoDiPack in externals/codi.; Use -u to reset module.; ```; However, when I try to update/reinstall the codi, I failed in the extraction process. The error is:; ```; Checking the status of submodules; =====================================================================. git ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:2559,interface,interface,2559,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['interface'],['interface']
Integrability," view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:8703,depend,dependabot,8703,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability," view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:16586,depend,dependabot,16586,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,""">#2163</a> from github/mergeback/v3.24.5-to-main-47b3d888</li>; <li><a href=""https://github.com/github/codeql-action/commit/6dab9f2356bef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15384,depend,dependency-name,15384,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['depend'],['dependency-name']
Integrability,"# Describe the bug. **Issue**; The memory usage of SU2_CFD continuously grows over time and is most noticeable when writing out files at high frequency. This caught my attention when cluster jobs with higher output frequency were consistently exceeding memory limits after a certain amount of time, leading to the job being killed. The same configuration with a lower output frequency can run significantly more iterations without exceeding limits. I may be missing something, but it seems like there is a potential memory leak dependent on the output frequency, which I've documented in this report. **Expected**; Memory usage remains steady over time and does not significantly change with output frequency. **Local tests**; I was able to reproduce the issue locally on a workstation using the [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012), whereby all 2200 time iterations are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:528,depend,dependent,528,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['depend'],['dependent']
Integrability,"## Motivation; Fundamental bottlenecks exist for industrial adoption of high-fidelity physics codes with fully coupled discrete adjoint sensitivity analysis. These bottlenecks include a lack of flexibility, modularity, and robustness of the computational tools, as well as the potential startup development costs needed to implement and verify the MDAO features. The purpose of this work is to facilitate the coupling of SU2 with external structural codes (e.g. NASTRAN, TACS, Airbus structural suite Lagrange) for gradient-based aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the deve",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:978,wrap,wrapped,978,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['wrap'],['wrapped']
Integrability,"## Proposed Changes. - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1T + n2T^2 +n3T^3 + n4T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS). - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent. ## Related Work. - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1717:103,depend,dependant,103,https://su2code.github.io,https://github.com/su2code/SU2/pull/1717,1,['depend'],['dependant']
Integrability,"## Proposed Changes. . ## Related Work. related to Tutorial for composition-dependent model #113 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1886:76,depend,dependent,76,https://su2code.github.io,https://github.com/su2code/SU2/pull/1886,1,['depend'],['dependent']
Integrability,"## Proposed Changes. . 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better.; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader.; 4. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to #1263 and #1265 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1268:204,rout,routine,204,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268,1,['rout'],['routine']
Integrability,"## Proposed Changes. 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better. ; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader. ; 3. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to issue #1265 and #1263. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1267:202,rout,routine,202,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267,1,['rout'],['routine']
Integrability,"## Proposed Changes. Current situation: The translation velocities and rotation rates of a moving frame (activated with GRID_MOVEMENT= ROTATING_FRAME) can only be set in the config file using parameters TRANSLATION_RATE and ROTATION_RATE. During a trim analysis of a free-flying aircraft, these parameters are modified until an equilibrium is achieved. Problem: A change of these parameters requires a new initialization of the solver, which can be time-consuming depending on the mesh size. Proposed solution: A python interface is implemented that allows to change the parameters on-the-fly. The grid velocities are updated before a new iteration. . ## Related Work; This is an extension to pull request #1621. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024:464,depend,depending,464,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024,2,"['depend', 'interface']","['depending', 'interface']"
Integrability,"## Proposed Changes. SU2 writes an inlet profile for you when none is present and `SPECIFIED_INLET_PROFILE= YES` . When there are multiple inlets, and when using mpi, the routine fails because the total number of inlet profiles `maxProfiles` was not the total number of inlet profiles but only the maximum number of inlet profiles encountered in a rank. Some other info was also not communicated like column names and column values. This fixes the issue. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Reported here:; https://www.cfd-online.com/Forums/su2/248779-inlet-profile-su2-fluid-mixture.html; And connected to PR #1786 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1999:171,rout,routine,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/1999,1,['rout'],['routine']
Integrability,"## Proposed Changes. SU2 writes an inlet profile for you when none is present and `SPECIFIED_INLET_PROFILE= YES` . When there are multiple inlets, and when using mpi, the routine fails because the total number of inlet profiles `maxProfiles` was not the total number of inlet profiles but only the maximum number of inlet profiles encountered in a rank. This fixes the issue. . [At the moment the code does not crash anymore but still only one profile is being written]. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Reported here:; https://www.cfd-online.com/Forums/su2/248779-inlet-profile-su2-fluid-mixture.html; And connected to PR #1786 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1997:171,rout,routine,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/1997,1,['rout'],['routine']
Integrability,"## Proposed Changes. Some method names make no sense like `GetNodeDomain` the user/coder has to look explanation and it is also not clear `Get the halo flag of a mesh node.` give no information and also provides no information, whether true indicates halo node or domain node. Python wrapper functions are almost complete in the camel case just a few of them in the snake case. Now all of them are in camel case, consistently. Similarly in the codebase, even inside same class some functions are the snake and others are in the camel case. In terms of the SU2 style guide, it is okay but pretty annoying for a developer. I am changing method names to at least provide some consistency inside the classes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1981:284,wrap,wrapper,284,https://su2code.github.io,https://github.com/su2code/SU2/pull/1981,1,['wrap'],['wrapper']
Integrability,"## Proposed Changes. The python wrapper instantiates drivers directly. To ensure that SU2 is initialized properly, also if used from python, some initialization code is already placed in the driver constructor. This PR moves additional initialization code to the driver constructor. ## Related Work; This came up during #1903. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966:32,wrap,wrapper,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966,1,['wrap'],['wrapper']
Integrability,"## Proposed Changes. This PR enforces the continuity of velocity explicitly at the fluid structure interface for each time step. The velocity was previously recalculated for the fluid nodes based on displacement history of the nodes. This is still needed for fluid only problems with deforming meshes. However, for FSI problems, the velocity at the interface can be transferred from the structural solution and propagated to the fluid nodes similarly to the displacement which ensures exact agreement at the interface at each time-step. This change has been validated using a typical FSI benchmark of square cylinder with a flexible cantilever beam, which gives good agreement in peak tip displacement and Strouhal number.; . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174:99,interface,interface,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174,3,['interface'],['interface']
Integrability,"## Proposed Changes. This PR is intended to put some functionality back that was involuntarily removed in #724. . Test cases for discrete adjoint FSI are now re-enabled with split files. They [correctly pass](https://travis-ci.org/su2code/SU2/builds/597983817) the travis tests [when the branch is based in feature_input_output](https://github.com/su2code/SU2/compare/feature_input_output...654ba3dfc207e25c31da9c09860224ad4044a610), which was the original branch merged in #724. . Unfortunately, given that during this time both #753 and #774 were merged, the tests are failing now. Particularly, the disc_adj_fsi case runs into a segfault in `CDiscAdjSolver::ExtractAdjoint_CrossTerm_Geometry`, when trying to execute ; `geometry->node[iPoint]->GetAdjointCoord(Solution_Geometry);`. . I believe this is related to the changes to the index based recording introduced in #774, as the code was running before into the same problem in `CDiscAdjSolver::ExtractAdjoint_CrossTerm`, and now goes beyond this point having changed the Get routine into `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution);`. Currently, there is no `GetAdjointCoord_intIndexBased` or similar available, and its implementation requires some constructs for the indices. Therefore, I would like to ask for support from @oleburghardt and @pcarruscag to make this work with their changes. ## Related Work; #724 involuntarily removed the discrete adjoint FSI cases from the regression tests.; Branch [fix_discadjfsi](https://github.com/su2code/SU2/tree/fix_discadjfsi) successfully recovers the functionality removed.; #774 introduced relevant changes to the adjoint solver that are making.; #753 was merged and, although I tried to adapt to it, I can't guarantee it's working correctly. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803:1031,rout,routine,1031,https://su2code.github.io,https://github.com/su2code/SU2/pull/803,1,['rout'],['routine']
Integrability,"## Proposed Changes. This PR, created together with @TobiKattmann , makes the necessary changes to obtain time-accurate discrete adjoint gradients for unsteady problems with grid movement. Main changes are for the handling of grid velocities of previous time steps. Regression test case to follow. ## Related Work; depends on #767 unsteady incompressible + ALE. Then a tested discrete adjoint for unsteady incompressible flow can be merged with this. ; Edit @TobiKattmann: PR767 is merged so I remove the dependent label. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766:315,depend,depends,315,https://su2code.github.io,https://github.com/su2code/SU2/pull/766,2,['depend'],"['dependent', 'depends']"
Integrability,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:214,wrap,wrapper,214,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,6,"['integrat', 'interface', 'wrap']","['integration', 'interface', 'wrapper']"
Integrability,"## Proposed Changes. This is a further effort in automating as much as we can in our development process. It enables the release drafter action (https://github.com/toolmantim/release-drafter) which will automatically keep an release draft with a changelog up to date as soon as there is a push to develop. . The change log entries are categorized depending on the labels `feature`, `fix`, `chore` for new features, bug fixes and maintenance. If you don't want your PR listed, add the label `no_changelog`.; So remember to always add a label to your PR (maybe we will automate that soon)!. Here is the most current draft (https://github.com/su2code/SU2/releases). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813:347,depend,depending,347,https://su2code.github.io,https://github.com/su2code/SU2/pull/813,1,['depend'],['depending']
Integrability,"## Proposed Changes. This is a quick draft for a module framework. Note that this is a draft and this is just to get some ideas and comments whether something like that would be useful. ### Motivation. Right now we have a lot of routines scattered throughout the code that essentially functionally belong together as they perform the same overall task. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/982:229,rout,routines,229,https://su2code.github.io,https://github.com/su2code/SU2/pull/982,4,['rout'],['routines']
Integrability,"## Proposed Changes. This is a very small fix for periodic boundary conditions. In the MatchPeriodic routine, there is a check to make sure we never map to the same point when finding periodic pairs. However, if a node lies on the axis of rotation it has to map on to itself. The checks in the MatchPeriodic routine does not allow for this possibility and this node would end up getting mapped to the nearest neighbor which will lead to wrong results. . This PR introduces a small modification to the MatchPeriodic routine that will allow nodes on the axis to map onto themselves. . ## Related Work. As a test, consider the dummy geometry below. The domain is periodic about the Z-axis. I added a wall BC in the middle of the domain and the flow is supposed to separate at that point. This case is not very realistic but the main idea was to have periodic boundaries with points on the axis of rotation. The domain and the boundary conditions are similar to what we typically have when solving turbine blades. I wasn't sure if I can share the geometry, so I made this dummy test case. This case diverges with the develop branch. The image is from an intermediate result using the fix.; ![sample_test_case_fix](https://user-images.githubusercontent.com/28007882/70721921-b4425500-1cf6-11ea-829c-7d91ca8bb1ef.jpeg). A quick way to verify if the nodes are matched properly is to check the velocity on the nodes that lie on the axis of rotation. Due to the periodicity constraint, the velocities must be aligned with the axis (here the Z-axis) which can be seen here as well. ![vel](https://user-images.githubusercontent.com/28007882/70722647-eef8bd00-1cf7-11ea-9b25-971f9718e151.jpeg). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/840:101,rout,routine,101,https://su2code.github.io,https://github.com/su2code/SU2/pull/840,3,['rout'],['routine']
Integrability,"## Proposed Changes. This is an attempt to add some unit testing for the geometry structure that checks all routines necessary to construct it. I know that I stretch the term ""unit test"" a little bit here, but because of the structure of the code, its not possible to implement small, independent tests ... but this is the closest we can get to a real unit testing framework I think. With this approach it is not possible to run tests in a random order for example, but at least the order in one translation unit is fixed by default anyway.; ; I added a basic, reusable setup which is based on the box mesh reader that can be included in other tests. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1012:108,rout,routines,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/1012,1,['rout'],['routines']
Integrability,"## Proposed Changes. This is, for now, a brief note on @joshkellyjak 's and my WIP on a discrete adjoint functionality for multizone (multi-stage, multi-row) turbomachinery cases. We intend to realize everything through the native multizone discrete adjoint solver, though some turbo-specific problems need to be resolved. This will, probably, involve further additions/corrections/cleanups around the mixing plane interface so that it is recorded properly. The current recording seems to still be not fully correct. ## Related Work. None, so far.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2317:415,interface,interface,415,https://su2code.github.io,https://github.com/su2code/SU2/pull/2317,1,['interface'],['interface']
Integrability,"## Proposed Changes. This pull request is two related changes:. 1. While ""fixing"" the NTS central/upwind blending function in PR #532, I accidentally introduced a bug. Some steps in the calculation were repeated twice. The main purpose of this pull request is to remedy the bug.; 2. I moved the calculation of the maximum cell width to the `CPhysicalGeometry` class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver.; . ## Related Work. This is a subset of the changes originally proposed in PR #552. The discussion and validation there still apply here. This pull request is not a new set of changes, but rather a smaller portion of PR #552. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/577:473,depend,dependent,473,https://su2code.github.io,https://github.com/su2code/SU2/pull/577,1,['depend'],['dependent']
Integrability,"## Proposed Changes. To satisfy the code standard in SU2. Refactorization of method names in Output family class methods to CamelCase. . Will follow up with other class families. Depends on #1985, can be merged after. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1987:179,Depend,Depends,179,https://su2code.github.io,https://github.com/su2code/SU2/pull/1987,1,['Depend'],['Depends']
Integrability,"## Proposed Changes. While ""fixing"" the NTS central/upwind blending function in PR #532, I accidentally introduced a bug. The main purpose of this pull request is to remedy the bug. There's also three other related efforts:. 1. I moved the calculation of the maximum cell width to the `CPhysicalGeometry` class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver.; 2. I also changed the FD blending function to be consistent with both published literature and the NTS blending. Before, `Roe_Dissipation = 0` meant an upwind scheme for the FD blending function but a central scheme for the NTS blending function, and vice versa for `Roe_Dissipation = 1`. By switching the FD blending function, the code is more consistent and cleaner.; 3. I proceeded with a basic verification of the implementation. I'll follow up later with another comment listing the verification details. ## Related Work. Previous PR: #532 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552:418,depend,dependent,418,https://su2code.github.io,https://github.com/su2code/SU2/pull/552,1,['depend'],['dependent']
Integrability,"## Proposed Changes. build-su2-cross should extend from build-su2 Docker image to use the same GCC version. . Failed build: https://github.com/su2code/SU2/runs/7125551739?check_suite_focus=true. The PR is draft because it depends on the build of https://github.com/su2code/Docker-Builds/pull/7. ## Related Work. https://github.com/su2code/SU2/pull/1619 - Updates Ubuntu to 20.04 and GCC from 7.x to 9.x. . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1693:222,depend,depends,222,https://su2code.github.io,https://github.com/su2code/SU2/pull/1693,1,['depend'],['depends']
Integrability,"## Proposed Changes; * Fix `mpi4py` include directories when it is installed in python user directory.; * Fix `mkl` dependency when it is installed outside a master directory such as when installing from Ubuntu PPA.; . ## Related Work; Fixes #823. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/826:116,depend,dependency,116,https://su2code.github.io,https://github.com/su2code/SU2/pull/826,2,['depend'],['dependency']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. - add frequency for each filename in OUTPUT_FILES: ; ` OUTPUT_WRT_FREQ= 10, 100, 50`. - for dual timestepping, write only the restart files twice (for timestep n and n-1) and not the visualisation files.; - history output accepts fields; - marker_inlet does not need normalized vectors (removed the error message). ```diff; - DONE; The suggestion was to just extend the OUTPUT_WRT_FREQ instead of introducing a new keyword VOLUME_OUTPUT_FREQUENCIES. . ```. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1495 ; #1539 ; #1493 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552:397,message,message,397,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552,1,['message'],['message']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. Using the python interface to modify the config file, it may happen that the temporary config file is accessed at once by multiple SU2 runs, leading to io conflicts. Thus, the name of the temporary file should not be hard-coded. This bugfix simply adds a '_tmp' to the original config file name. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1576:109,interface,interface,109,https://su2code.github.io,https://github.com/su2code/SU2/pull/1576,1,['interface'],['interface']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; 1. arrays in gettriangle need to be size 2 instead of 3; 2. error message that checks species clipping only checks if the keyword is present, not if clipping is on; 3. added setblock_zero ""per-species"" to CSysVector (added here to reduce the mega-PR for the flamelet model); 4. fix speling eror. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1761:158,message,message,158,https://su2code.github.io,https://github.com/su2code/SU2/pull/1761,1,['message'],['message']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adapting and fixing mixing density model when species transport equations are being solved.; The species dependent properties will be added in 3 PRs:; 1/3 : mixture density model (this PR); 2/3 : mixture viscosity + heat capacity; 3/3 : mixture mass diffusivity + thermal conductivity. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Mark Heimgartner implemented the MIXTURE_FLUID model during his master thesis at Bosch. In this pull request, we aim to adapt his implementation to the latest version of develop branch, fixing some implementations that we think were causing numerical issues in his original implementation. EDIT: Here, the mixture density will be implemented, based on the ideal gas law (computing mixture molecular weights). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1620:199,depend,dependent,199,https://su2code.github.io,https://github.com/su2code/SU2/pull/1620,1,['depend'],['dependent']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adds ParaView binary output (legacy format) in both serial and parallel with MPI IO. Activate by setting OUTPUT_FORMAT= PARAVIEW_BINARY. Binary VTK files are now written when running SU2_CFD in parallel, so SU2_SOL is not required to get these files. ~~ParaView binary requires writing data in big endian. A header from the public domain that helps with the portability of endian conversion routines has been added and documented in externals/endian/.~~. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562:485,rout,routines,485,https://su2code.github.io,https://github.com/su2code/SU2/pull/562,1,['rout'],['routines']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adds an interface to SU2_DOT_AD for volume -> surface sensitivity projection. New option to write out sensitivities at each surface vertex to a generic ASCII file for use with an external parameterization. Includes some minor code clean up and fixes some compiler warnings. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/625:102,interface,interface,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/625,1,['interface'],['interface']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Separates all classes related to the fluid properties and moves them to a new folder. Also cleans up and refactors some of the classes. For example, the viscosity and conductivity classes are now pure abstract classes (interfaces). I have moved them to a folder named thermophysical/, which makes sense given the current contents (equations of state and transport properties), but once we add chemistry and more advanced models, I am not sure this will make sense. @CatarinaGarbacz, since you are going to be working this area, is there a name you would prefer?. p.s. in a future pass, there is room for improvement in the current CFluidModel class. I think it is best practice not to use the type of implementation inheritance found there. Instead, the EoS classes could be given a dedicated interface class and moved inside the CFluidModel class (just like the viscosity and conductivity classes). Then, the CFluidModel class can simply be a composition of those classes (with no data members) and serve back their data to the client. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1010:313,interface,interfaces,313,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010,2,['interface'],"['interface', 'interfaces']"
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR changes the convergence criteria for mesh deformation with SU2_DEF. The existing tolerance is related to the smallest cell in the grid, but this results in a criteria that depends on the grid scale and can be hard to tune. Instead, we switch to a standard relative residual reduction criteria for the linear solver during deformation, which brings it in line with other solvers. The change will break existing config files with 'DEFORM_TOL_FACTOR', so a clear error message has been added informing users of the change. Changes to the su2code.github.io repo for the tutorial configs need to be merged simultaneously. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/623:274,depend,depends,274,https://su2code.github.io,https://github.com/su2code/SU2/pull/623,2,"['depend', 'message']","['depends', 'message']"
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains a new routine to compute 3 mesh quality metrics (similar to what you may find in commercial codes): orthogonality angle, cell aspect ratio, and cell volume ratio. It replaces an old routine that was not being used. Note that this is for the **dual control volumes of the finite volume solver** (not the primal elements), so the values are vertex-based. The min & max of the 3 metrics are reported to the console during preprocessing, and if you would like the fields to be written to the viz. files, you can use . ```; WRT_MESH_QUALITY= YES; ```. For now, it is just for sanity checks. In the future, we can use this as an optimization objective/constraint, for automatically improving grids (r-adaptation), or as part of advanced limiters/numerical methods. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778:117,rout,routine,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/778,2,['rout'],['routine']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains the following:; - A new fluid model for incompressible ideal gas with variable Cp via polynomial fit as Cp(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 where the user specifies b coefficients.; - Polynomial viscosity model (incompressible only) with Mu(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - Polynomial laminar thermal conductivity model (incompressible only) with Kt(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - New option for TURBULENT_CONDUCTIVITY_MODEL, which is CONSTANT_PRANDTL_TURB by default, but gives flexibility for more options in the future. This was not exposed before, which can be dangerous, depending on the choice of laminar conductivity model. Now, any of the laminar models can still include the effect of turbulence on heat transfer with a constant turbulent Prandtl number, or it can be deactivated.; - A few fixes for FFD parameterization, including ParaView output and handling of symmetry planes. The polynomial models have only been added to the incompressible solver to start. However, one could activate them in the compressible solver(s) too, since they are in the shared fluid/transport model classes. A cylinder test case has been added for the polynomial fluid models. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/624:766,depend,depending,766,https://su2code.github.io,https://github.com/su2code/SU2/pull/624,1,['depend'],['depending']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR integrates the DG-FEM solver in the develop branch. Although still under development this solver is now in a state where other people can start to contribute, if desired. Furthermore, additional functionalities in terms of searching and interpolating are present in the DG solver that can also be used for the FV solver. Especially a true wall distance search instead of a point search to the nearest node on the wall would be possible. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/565:102,integrat,integrates,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/565,1,['integrat'],['integrates']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is one for v7 and needs some testing. This PR contains a complete refactoring of the point-to-point MPI infrastructure and an entirely new implementation of the periodic BC for the FV solvers. For the MPI refactoring:; - All calls are abstracted to parent classes (geometry, solver, matrix), meaning we will remove all Set_MPI_* routines.; - Point-to-point comms are all non-blocking calls that have been separated into InitiateComms() & CompleteComms(), so that, in theory, they can be overlapped with computation where possible. It would also be possible now to group the comms into larger messages easily. These optimizations are a next step (not for this PR).; - Persistent communication schedules and memory are used throughout the calculation.; - Results are the same, this is just a refactoring to improve performance, scalability, etc. while making the code much simpler and separating the periodic part. For the periodic BC:; - No longer need a preprocessing with SU2_MSH - use the original grid and just call SU2_CFD.; - Adjacent periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than P",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:428,rout,routines,428,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,2,"['message', 'rout']","['messages', 'routines']"
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This PR introduces a tabulated chemistry approach. The focus for this PR is on laminar and premixed flames in the incompressible framework, but it is generalizable to non-premixed and partially premixed flames, turbulent flames and compressible flames. ; In this approach, 2 transport equations are solved for progress variable and total enthalpy. The lookup table retrieves quantities (temperature, density, viscosity, diffusivity, source terms, etc) as a function of these independent control variables. 2 additional independent transport equations are solved for the species NO and CO. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## Nijso Checklist; - [ ] Replace bloated initialization (burnt and unburnt region) with python wrapper; - [ ] Check Conjugate Heat Transfer; - [ ] Check adjoint optimization workflow; - [x] Check axisymmetric setup; - [x] Check diffusivity; - [x] Check primal restart; - [x] Check adjoint restart; - [x] Adjoint comparison with FD. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826:925,wrap,wrapper,925,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826,1,['wrap'],['wrapper']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This is a small update of the lookup table routines to prepare for the implementation of the flamelet model. A bug was fixed and the header file definition changed (keywords in sentences are capitalized). Some small textual changes were made. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; related to the upcoming PR for feature_new_flamelet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1792:135,rout,routines,135,https://su2code.github.io,https://github.com/su2code/SU2/pull/1792,1,['rout'],['routines']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; when using an inlet profile, and the inlet profile does not exist, SU2 will write a profile for you. When you do this when using mpi, this sometimes fails, depending on the number of ranks. This PR fixes the issue. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1767 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1786:248,depend,depending,248,https://su2code.github.io,https://github.com/su2code/SU2/pull/1786,1,['depend'],['depending']
Integrability,"## Proposed Changes; - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1T + n2T^2 +n3T^3 + n4T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS). - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent. ## Related Work; - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1718:103,depend,dependant,103,https://su2code.github.io,https://github.com/su2code/SU2/pull/1718,1,['depend'],['dependant']
Integrability,"## Proposed Changes; - Fixes the adjoint residual computation for multizone cases (which was wrong on first inner iterations due to cross term extraction).; - Fixes (hopefully for good) discadj FEA solutions when INCREMENTAL_LOAD=YES (left over from #933); - Add relaxation to CDiscAdjSolver via option RELAXATION_FACTOR_ADJOINT, that replaces the old RELAXATION_FACTOR_ADJFLOW . I found this to be necessary for adjoint FSI problems, the adjoint of the interpolation matrix (and therefore the cross terms) are not smooth which makes convergence more difficult. In version 6 this was achievable via the old options RELAXATION_FACTOR_FLOW/TURB.; - Adds OpenMP directives to the CFL adaptation routine (a ""todo"" from #861), restricts the Min/Max/Avg CFL calculation to the fine grid (which will change the output but not the solution). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/950:692,rout,routine,692,https://su2code.github.io,https://github.com/su2code/SU2/pull/950,1,['rout'],['routine']
Integrability,"## Proposed Changes; 1 - Generalize the conservative interpolation approach for the following interpolation schemes:; NEAREST_NEIGHBOR, ISOPARAMETRIC, and RADIAL_BASIS_FUNCTION; The therefore redundant CONSISTCONSERVE option can be recovered with:; KIND_INTERPOLATION= ISOPARAMETRIC; CONSERVATIVE_INTERPOLATION= YES; If you guys think the conservative option also makes sense for the WEIGHTED_AVERAGE (sliding mesh) scheme I will put that in too (I am not familiar so left it alone). 2 - In CTransfer_FlowTraction, if not matching mesh and not conservative interpolation:; Compute the donor variables as stresses instead of forces;; Integrate the target variables on the structural side before transferring them. 3 - Removed a bit of code duplication in transfer_physics.cpp while I was there. I have yet to test this for the FSI adjoint but for the direct problem it looks ok. ## Related Work; #596 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597:633,Integrat,Integrate,633,https://su2code.github.io,https://github.com/su2code/SU2/pull/597,1,['Integrat'],['Integrate']
Integrability,"## Proposed Changes; ; The visc_numerics' coordinates were often set to the coordinates; of the boundary vertex and its closest normal neighbour. Setting; them to the boundary vertex and the reflection of the closest; normal neighbour at the vertex is more systematic however.; Normally this should not change much, because the boundary numerics; do not apply gradient correction, so they only depend on the; distance between Coord_i, Coord_j. ## Related Work; #1185 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1189:394,depend,depend,394,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189,1,['depend'],['depend']
Integrability,"## Proposed Changes; @patelha57 @aa-g @Nicola-Fonzi @bigfooted ; I'm proposing this as the way to interact with volume fields via the python wrapper.; We create a matrix view (does not copy data) into the coordinates, solution, primitives, etc. which then allows point-wise or row-wise access to the data (read or write). We can extend it to also expose derivative information.; For example:; ```python; coords = driver.Coordinates(); print(coords(iPoint, 1)) # read a value; coords.Set(iPoint, (x, y, z)) # write a row; coords.Set(iPoint, 0, coords.Get(iPoint, 0)) # set a value and different way of reading a value. solversIndices = driver.GetSolverIndices() # maps solver names to our solver integers, similar to what we do with markers; solution = driver.Solution(solverIndices[""C.FLOW""]) # same object type as coords. primitiveIndices = driver.GetPrimitiveIndices() # maps primitive names to their indices.; temperatureIndex = primitiveIndices[""TEMPERATURE""]; primitives = driver.Primitives(); print(primitives(iPoint, temperatureIndex)); ```. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1938:141,wrap,wrapper,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/1938,1,['wrap'],['wrapper']
Integrability,"## Proposed Changes; A draft PR for creating self-registering classes with a factory.; The class (CEulerSolver implemented) that wants to register to a factory (CSolverFactory implemented) should:; - Inherit from DBMember template class (new, only handles automatic-registration).; - Provide a ""GetName()"" member method which returns the registered name as a string.; - Provide a ""CreateMethod()"" member with specific signature. This function should handle the full-creation of the object (For CEulerSolver, it makes a pointer and runs Preprocessing on it). The factory class must provide a Register() method that accepts the to-be registered class's name and a pointer to its creation method with the specific signature mentioned above. These design constraints are all enforced in DBMember but no checks where made for now. Instead of meddling with member functions of CSolverFactory, I chose to create the test solver (EULER) directly in CDriver. ### Results so far; 1. Solver gets instantiated successfully, the solver preprocessing phase passes with no problems; 2. When the program gets to integration preprocessing, it fails with out_of_range exception. But that's to be expected as no solver metadata is tracked for the newly created solver yet :). Again, testing on the ""Inviscid bump in a channel"" case. ## Related Work; This PR extends the work on #1058 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1062:1096,integrat,integration,1096,https://su2code.github.io,https://github.com/su2code/SU2/pull/1062,1,['integrat'],['integration']
Integrability,"## Proposed Changes; Add the Kenway-Martins separation sensor for buffet-onset detection (see [doi.org/10.2514/1.J055172](https://doi.org/10.2514/1.J055172) for details). Config options include:. 1. BUFFET_MONITORING= YES will compute; a. The sensor value (between 0 and 1) on NS marker vertices, stored in CNSSolver as Buffet_Sensor; b. The integral of the sensor values normalized by reference area (percent of reference area over which separation occurs), stored in CNSSolver as Buffet_Metric (per-surface) and Total_Buffet_Metric; 2. BUFFET_K and BUFFET_LAMBDA specify the sharpness and offset of the Heaviside function used to compute the nodal sensor value; 3. Objective function option BUFFET, which uses the integrated metric as a cost function; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/614:716,integrat,integrated,716,https://su2code.github.io,https://github.com/su2code/SU2/pull/614,1,['integrat'],['integrated']
Integrability,"## Proposed Changes; Add the `Wtime` function to the MPI wrapper (to avoid `#ifdefs`). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/943:57,wrap,wrapper,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/943,1,['wrap'],['wrapper']
Integrability,"## Proposed Changes; Added CMake build support for SU2. With this, many popular IDEs will be able to use SU2 as a project with minimal setup. CMake also enables to add dependencies more easily since most libraries have CMake support. `vcpkg` is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use `preconfigure.py` anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is `${CMAKE_PREFIX_PATH}/bin`. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile `pySU2ad` with `Nothing known about namespace 'medi'` in `Common/include/mpi_structure.hpp:57` without `-includeall` SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing `using namespace` declarations and either importing used symbols explicitly with `using` or prepending namespace name, `clang-tidy` warns against them and it makes the code clearer. SU2 CMake options are:; * Build modules:; * `SU2_BUILD_CFD`: `ON|OFF`; * `SU2_BUILD_DEF`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_DOT`: `ON|OFF`, disabled when building with Codi forward; * `SU2_BUILD_GEO`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_MSH`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_PY_WRAPPER`: `ON|OFF`, disabled when building with Codi forward; * `SU2_BUILD_SOL`: `ON|OFF`, disabled when building with Codi; * Enable modules:; * `SU2_ENABLE_CGNS`: ; * `SU2_CGNS_CPPFLAGS`: flags to pas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814:168,depend,dependencies,168,https://su2code.github.io,https://github.com/su2code/SU2/pull/814,1,['depend'],['dependencies']
Integrability,"## Proposed Changes; Added a dry run mode (can be enabled by adding -d as flag to the SU2_CFD binary). If this mode is enabled, all of the expensive geometrical preprocessing steps are skipped and no solver is started, but all other steps during the driver construction are executed. This is great to check whether the setup is sane and the physical settings are correct without having to wait until the mesh is read and the partitioning is done. For the implementation I created a dummy geometry class with zero elements and points and a dummy driver which does essentially nothing. Initially I thought it would be more work, but apparently it almost worked out of the box. I also added a table output during the solver preprocessing for the DG solver. Furthermore I moved parts of the Input_Preprocessing() routine dealing with the geometry to the Geometrical_Preprocessing() routine where it should belong. The changes in SU2_CFD.cpp look more complicated then they are. Just hide white space changes. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/734:809,rout,routine,809,https://su2code.github.io,https://github.com/su2code/SU2/pull/734,2,['rout'],['routine']
Integrability,"## Proposed Changes; Added files; - README which explains the files and why they are there; - cfg files which contain notes how to be changed for primal/findiff and serious adjoint run; - findiff.py FADO script for finite differences; - postprocess.py to compare the gradients of DA and FD (only screen output); - gmsh .geo file with which the mesh was created. parallel_reg_AD will fail until the [Testcases PR 63](https://github.com/su2code/TestCases/pull/63) is merged. ## Related Work; Depends on #1260 and contains all of those changes (i.e. best reviewed after that is merged .. or just look at the last commit :) ). Meant to be merged shortly after but before #1284 to have an additional safeguarded case. . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1288:490,Depend,Depends,490,https://su2code.github.io,https://github.com/su2code/SU2/pull/1288,1,['Depend'],['Depends']
Integrability,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1014:615,integrat,integration,615,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014,1,['integrat'],['integration']
Integrability,"## Proposed Changes; Addition and cleanup of isothermal catalytic wall boundary, integration with rest of code. Code optimization of catalytic wall routines, removal of array allocations. Submitting this draft PR primarily to get comments on approach, style, not looking to PR into develop quite yet. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1417:81,integrat,integration,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/1417,2,"['integrat', 'rout']","['integration', 'routines']"
Integrability,"## Proposed Changes; Allow for conjugate heat transfer between solid domains and the modeling of contact resistance. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] Configuration option for contact resistance at interfaces.; - [x] Communicate contact resistance values between config and CInterface.; - [x] Test grid independence of contact resistance model.; - [x] Test case with both solid-solid and solid-fluid.; - [x] Add test case to regression tests.; - [x] Update documentation.; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152:446,interface,interfaces,446,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152,1,['interface'],['interfaces']
Integrability,"## Proposed Changes; Another snapshot from #824.; All major routines of CFEASolver (and by association CMeshSolver) now use OpenMP directives.; Parallelization is at the level of each individual routine, i.e. threads are ""started"" locally.; This required avoiding the use of small auxiliary array member variables, as that is not thread safe (multiple threads cannot write to the same location) In doing that I ended up doing some cleanup and so I thought it would be better to move the files, strip spaces, etc., it should make the review easier actually.; I will document to the major changes below. ## Related Work; #824 #789 ; Depends on #834 and #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843:60,rout,routines,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/843,3,"['Depend', 'rout']","['Depends', 'routine', 'routines']"
Integrability,"## Proposed Changes; As proposed in #685, this introduces the [meson](https://mesonbuild.com/index.html) and ninja build system to eventually replace autotools and make. A [lot of bigger projects](https://mesonbuild.com/Users.html) already use that system (e.g. GNOME, systemd ...) or are transitioning. Compared to autotools and make, building the code should be faster, especially if you build with more cores, as all objects files are build truly in parallel (with make only objects of the same target are build in parallel). Another advantage is that meson has multiplatform support for linux, mac and windows. . ### Why not cmake ?; Meson files are much easier to read and in general it is much better to maintain. Furthermore it has a great documentation. Finally, meson has no dependencies apart from python and we can easily ship it (as a submodule) since it needs no installation/compilation. . ### What is ninja ?; ninja is a replacement for make and is used to execute the compiler and to resolve dependencies. Meson uses ninja as the default backend. So instead of using configure + make, we use meson + ninja. As with meson, we can ship it as a submodule. It needs a compilation, but again it has no dependencies apart from python. ### How to use ?; The correct meson and ninja versions are added as git submodules. So in case you don't have meson and ninja installed (there should be packages available for all major distros), compile ninja using:. ```; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; and run meson using; ```; meson.py build --prefix=$PWD -Denable-pywrapper=true -Denable-autodiff=true; ```; to ocnfigure SU2 with the python wrapper and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can config",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:784,depend,dependencies,784,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,2,['depend'],['dependencies']
Integrability,"## Proposed Changes; Collection of improvements to fix SU2 bugs:; - Inconsistency between NO_DEFORMATION (index 24) and NONE (index = 0). I have updated and sorted the numbering of the design variables and set NO_DEFORMATION to index 0 (for consistency with the rest of the code).; - SU2_GEO was not working properly for 2D cases and the wing slicing routine was extremely expensive for the AD.; - VISUALIZE_DEFORMATION was very expensive and not useful, I have divided VISUALIZE_DEFORMATION between surface VISUALIZE_SURFACE_DEF and volume VISUALIZE_VOLUME_DEF.; - The actuator disk was not working properly when a pressure ratio (total pressures) was prescribed (the restart was not working either).; - The FFD twist design variable was not working properly. ## Related Work; This commit resolves the issues (bugs) described above without adding any extra capabilities to the software. It should be approved as soon as possible because some of the changes directly impact most of the the user's community. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/563:351,rout,routine,351,https://su2code.github.io,https://github.com/su2code/SU2/pull/563,1,['rout'],['routine']
Integrability,"## Proposed Changes; Compute Green-Gauss gradients and limiters via a point-loop (like we do for Least Squares), in the limit this allows one thread per point of parallelization. Parallel regions are started inside the functions and again only the master thread calls MPI routines. Move these routines out of CSolver and make them general to reduce code duplication (compressible/incompressible, solution/primitives), and to improve test-ability (if key areas of the code depend less on large objects we can more easily treat them as units). Introduce a way to create different limiters by defining small details like the limiter function (and its associated constants), or any geometry-based modification. I don't seem to have ""hard"" failures in the regressions but I need to run tests, especially for periodic cases as I had to change the ""communication model"" for the min / max computed for limiters.; I will start documenting anyway. ## Related Work; #789 #824 ; Depends on #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/834:272,rout,routines,272,https://su2code.github.io,https://github.com/su2code/SU2/pull/834,4,"['Depend', 'depend', 'rout']","['Depends', 'depend', 'routines']"
Integrability,"## Proposed Changes; Dear all, in this PR there are few modification related to the new fsi interface in python, namely:; * A different treatment for imposed motions. This is actually a first step towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148:92,interface,interface,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148,2,['interface'],['interface']
Integrability,"## Proposed Changes; Dear all,. Here are some updates for the python fsi interface. Namely:. - Better use of mpi4py, using always numpy array (more computationally efficient); - Fix of the restarted coupled simulation; - Automatic use of default values, in case of wrong inputs; - Introduction of a sort of dry run, which actually prints out the mapped modes and the normals of the aerodynamic surface mesh. This is yet another step towards the automatic creation of ROM from aerodynamic response; - Fix of small bugs. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1357:73,interface,interface,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357,1,['interface'],['interface']
Integrability,"## Proposed Changes; Enable time integration by the explicit Euler scheme for e.g. turbulence solvers, by implementing ``CScalarSolver<>::ExplicitEuler_Iteration``. ## Related Work; This fixes #1432 with respect to explicit Euler. I need the feature for further investigation of #1414. ``CScalarSolver`` was introduced in #1330. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1435:33,integrat,integration,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435,1,['integrat'],['integration']
Integrability,"## Proposed Changes; Extend the MPI+Threads framework to CEulerSolver, CNSSolver and the CTurb***Solver(s).; I can finally start showing what this effort is about in pictures, this is how the relatively small benchmark case from #716 scales on Imperial's cluster:; ![image](https://user-images.githubusercontent.com/38071223/73931463-410d2780-48d0-11ea-855e-8dc87be153f1.png); **C** is for cores, **R** for MPI ranks, and **T** for OpenMP threads per rank. It may not look like much close to the ideal scaling but on 192 cores there are only 2.7k cells per core, and at different level of ""hybridisation"" this is what you get:; ![image](https://user-images.githubusercontent.com/38071223/73931985-3bfca800-48d1-11ea-8676-acef927a1ab5.png). As mentioned in #789 this behaviour is due to the worse quality / quantity of coarse grids that can be generated as the domain is decomposed further and further. **EDIT**; This is **finished for now**, apart from the odd routine that I will document below (and all the boundary conditions) every method called in `SingleGrid_Iteration` and `MultiGrid_Iteration` (including prolongations, smoothings and whatnot) is hybrid parallel.; Threads are started in those functions which means that for a RANS case we enter parallel regions only twice per iteration, this should give minimal overhead, I will update the scalability results once they converge (statistically :) ). I will document the changes by ""themes"" below. ## Related Work; Another snapshot of #824. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/861:961,rout,routine,961,https://su2code.github.io,https://github.com/su2code/SU2/pull/861,1,['rout'],['routine']
Integrability,"## Proposed Changes; Following up on #583 this is a restructuring of the fiels related to the driver. In addition I rearranged preprocessing routines in the driver constructor. I added arguments to the calls to make it more clear what the dependencies are and what is allocated. Furthermore I merged all loops over zones and instances into a single loop. This should make it much more readable. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/736:141,rout,routines,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/736,2,"['depend', 'rout']","['dependencies', 'routines']"
Integrability,"## Proposed Changes; Hello to everyone,; I would like to propose a slight change in the Actuator Disk with Variable Load function. The change consists in re-writing the computation of the axial, radial and tangential force coefficients by developing the advance ratio term. In this way it is possible to eliminate the explicit dependence with the free-stream velocity.; Thanks to this change, it is possible to simulate the hover condition (free-stream velocity equal to zero) since we eliminated the free-stream velocity from the denominator.; ; In addition, we do not need the input of the advance ratio J, but the RPM of the propeller. This is a draft PR since a validation is needed and will be provided soon. Regards,; Ettore.; TAARG, University of Naples Federico II. ## Related Work; #1027 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1648:327,depend,dependence,327,https://su2code.github.io,https://github.com/su2code/SU2/pull/1648,1,['depend'],['dependence']
Integrability,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332:78,depend,dependent,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332,1,['depend'],['dependent']
Integrability,"## Proposed Changes; Hi all,; ; a wrong index (iZone vs iInst) caused the SU2_SOL module to segfault if nZone > nInst. The geometry container is called with the wrong index in the `CBaseLineSolver::LoadRestart` routine. In SU2_SOL.cpp `&geometry_container[iZone][INST_0]` to `geometry_container[iZone]` are interchangeable, I just thought the 2nd formulation is used more often throughout the code. I cannot guarante though that it now runs for multiple instances, but as far as I know there is no such testcase. Testcase: The PR does not come with a Testcase which would catch the error in the future. In testcases started with parallel_computation.py the SU2_SOL module is called and fails for multizone cases (e.g. Jones_rst.cfg which I tested on) but if the residuals fit the case passes. That circumstance is not tackled in this PR but I heard that this is a know issue. I briefly chatted with @rsanfer about that and I offer my help if this is approached. . Additionally I fixed an error message to contain the correct config-option and added a --disable-tecio option to the preconfigure.py script as it is convenient for me as I build on compute nodes which cannot access the necessary X11 libraries and I couldn't get it to work with tecio enabled :( . If there are comments or requests for changing s.th. let me know. . Best Regards, Tobi. ## Related Work; Please see issue https://github.com/su2code/SU2/issues/568 for more information. There the error is described more detailed there. ## PR Checklist. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/572:211,rout,routine,211,https://su2code.github.io,https://github.com/su2code/SU2/pull/572,2,"['message', 'rout']","['message', 'routine']"
Integrability,"## Proposed Changes; Hi, I noticed that the mesh quality metrics are not available in the current output structure, so here they are. ; I removed WRT_MESH_QUALITY and just check&set in the configs postprocessing routine.; Compressible, Incompressible, Heat and Mesh Output are added here as the FEM solvers dont have the dual grid as stated in the original PR. . **Bonus issue:** I noticed that Coordinates are not written in the Volume Output for the cases I tested (also the Quickstart) but haven't really figured out why yet. Doesn't matter whether VOLUME_OUTPUT is set with COORDINATES or not at all. I will look into this again but if you have a hint that would be appreciated💐 **Edit:** of course they are written implicitly otherwise on couldn't open a visu file but what do we have the volume output field COORDINATES for then? Maybe I am just blind, but this is not really part of this PR anyway. Cheers, Tobi. ## Related Work; Initial implementation #778 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1104:212,rout,routine,212,https://su2code.github.io,https://github.com/su2code/SU2/pull/1104,1,['rout'],['routine']
Integrability,"## Proposed Changes; I changed the wall distance computation so that it correctly incorporates also viscous walls in other zones. I am not 100% happy where it is implemented, but I have not found a better place for this computation. Furthermore this splits the nice indepedent preprocessing routines in the driver constructor. Nevertheless, I think it should be fine. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/924:291,rout,routines,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/924,1,['rout'],['routines']
Integrability,"## Proposed Changes; I have found it useful to be able to adaptively change deltaT using the Python wrapper -- this PR implements that functionality. Instead of `CDriver::GetUnsteadyTimeStep` returning `CConfig::GetTime_Step`, it was updated to return the actual dimensional timestep used in iterations. A new `CDriver::SetUnsteadyTimeStep` function was implemented that updates both `Delta_UnstTimeND` and `Delta_UnstTime` in `CConfig`. A new setter function for `Delta_UnstTime` had to be implemented to do this as well. A quick grep showed me that the only usage of `CConfig::GetTime_Step` appears to be in SU2_SOL, initialization, and outputting in the NonDimTable. However, I did see one usage of it here, which appears to be called every iteration:. https://github.com/su2code/SU2/blob/2c9fbb6cfc0f9dfbb4a1f6afb9cf5004c33b1c25/SU2_CFD/src/integration/CFEM_DG_Integration.cpp#L75. I can update that line if necessary to instead call `CConfig::GetDelta_UnstTime`. I don't _believe_ that there are any additional issues that may be arisen beyond this. ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190:100,wrap,wrapper,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190,2,"['integrat', 'wrap']","['integration', 'wrapper']"
Integrability,"## Proposed Changes; I made this in micro steps and the commit messages are fairly detailed, so here I will give only the highlights. Every change is mathematically equivalent.; I claim performance improvements based on the type of cases I run (steady RANS implicit, elasticity), results may vary, so please give this a try. **Cleanup**; - Iterative smoothers (Jacobi, ILU, etc.) are now implemented in CSysSolve as one generic method with the same interface as the Krylov solvers.; - Dead code was removed from CSysMatrix (as requested in #653).; - Duplicated code, mostly dealing with block-block/vector multiplication, was merged.; - Row/column elimination tasks implemented in CSysMatrix (as requested in #658).; - Linelet uses fewer working variables.; - Make a lot of methods private (the diff of matrix_structure.hpp is not going to be pretty...). **Performance**; - Inlined small methods.; - No calls to ""Get/SetBlock"" when the block location is already known (helps ILU and LU_SGS).; - Block inversion done in one go instead of multiple Gaussian eliminations (which used to require repeated upper matrix transformations) (helps Jacobi, Linelet, and ILU).; - Inverted ILU diagonal blocks are stored during ""build"" for use in ""compute"". **Bugs**; - Linelet preconditioner was not working for multiple wall markers. **ToDo**; - I will try to make the MKL optimizations work for the discrete adjoint (I say try because it may require too much creativity with the templates...).; - Get some benchmarks (I don't want you to just take my word for it). ## Related Work; #650, #653, #658. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700:63,message,messages,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/700,2,"['interface', 'message']","['interface', 'messages']"
Integrability,"## Proposed Changes; I overlooked something in #951, in that PR I made possible defining many-to-many multi-physics interfaces, i.e. one marker can receive some variables from zone A (e.g. temperature) and others from zone B (e.g. displacements). The problem is that unless the case is very very trivial, this does not work because currently the target geometry can only store donor information (interpolation coefficients and donor point indices) for one donor.; So many-to-many only works if everything matches, interpolation method, point indices, etc. The proposed solution is to move the donor information out of CVertex and into the CInterpolator object, which has a one-to-one relation with the interfaces, hopefully this will make the interfaces generic enough. ## Related Work; #951 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1061:116,interface,interfaces,116,https://su2code.github.io,https://github.com/su2code/SU2/pull/1061,3,['interface'],['interfaces']
Integrability,## Proposed Changes; I started having some issues with the meshes written by SU2_DEF over night (due to some change in the cluster file system) so I cleaned up a couple of the file writers to hopefully make them more robust.; I think what we were doing (all ranks opening the file at the same time and flushing it after each write) was a bit iffy because of implementation dependent buffering aspects. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1071:373,depend,dependent,373,https://su2code.github.io,https://github.com/su2code/SU2/pull/1071,1,['depend'],['dependent']
Integrability,"## Proposed Changes; I would like to be able to calculate a gust encounter of a free-flying, elastic aircraft. The rigid body reaction (in terms of velocities u, v, w and rotation rates p, q, r) as well as the elastic structural dynamic reaction (displacement of all surface nodes of the CFD mesh) are calculated by our own aeroelastic solver, coupled via the python interface, while SU2 shall provide the aerodynamic side, as a higher fidelity alternative to panel methods such as VLM & DLM. . Update, 13.04.2023: The combination of grid velocities from the moving + deforming grid turned out to be more complicated as expected (at least for me) and the moving grid is not fully implemented for unsteady simulations (according to Pedro, some source terms are missing). The new approach uses a farfield onflow condition at alpha=0.0 and translates and rotates the whole aircraft in the elastic mesh for the rigid body + structural dynamic reaction. This is more laborious on my side (transformation of the surface, the deformation vector and the forces about the Euler angles) but simplifies the work on the SU2 side:. - extend the gust to 3D meshes (current implementation only for 2D meshes); - ~~update the grid movement during the time domain simulation via the python interface; Involved parameters: ; GRID_MOVEMENT= ROTATING_FRAME; TRANSLATION_RATE= u v w ; ROTATION_RATE= p q r~~; - update the surface mesh deformation during the time domain simulation via the python interface ; Involved parameters: ; DEFORM_MESH= YES; MARKER_DEFORM_MESH= ( list of markers ). Summing up, I will need to combine the grid velocities due to aircraft movement, elasticity and gust. Currently, this is not possible in SU2. ; I split the work into the following steps. Here is what is working / not working:; - [x] gust with 3D meshes --> plausibility check with rectangular, 3 meter wing at 2° + long gust equivalent to 2° = approx doubling of the lift coefficient; - [x] ~~gust + moving grid --> plausibility che",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:367,interface,interface,367,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,1,['interface'],['interface']
Integrability,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/933:321,rout,routines,321,https://su2code.github.io,https://github.com/su2code/SU2/pull/933,2,"['integrat', 'rout']","['integration', 'routines']"
Integrability,"## Proposed Changes; Improvements and general cleanup / restructuring of CInterpolator and co. consisting of:; #### New features:; - Control of the RBF interpolation matrix sparsity via option `RADIAL_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:569,interface,interface,569,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['interface'],['interface']
Integrability,"## Proposed Changes; In a joint collaboration with @rsanfer we discovered that the Prism and Pyramid shape elements used for mesh deformation had some issues, namely:; - The Prism (6 nodes) element had incorrect integration points, and perhaps due to some inconsistency between the ordering of the nodes and the shape function it had ""negative"" stiffness (deform opposite to force). The latter issue was remedied by using negative weights... I tried permuting the integration points but that did not help.; - The Pyramid (5 nodes) had inconsistent integration points and shape functions, it was using pyramid points but degenerate hex functions, this made the element some 20 times more flexible than it should be, pyramid shape functions are used now. My main reason to look into this was to support all element types in the structural solver both for linear and nonlinear analysis, in principle that should be working now, but I still have tests to run. I took the opportunity to refactor the CElement family of classes, now the derived classes only deal with the shape specifics:; - Integration/extrapolation points, shape function and derivatives, are computed and stored at construction.; - Area/Volume computation in undeformed (reference) or deformed (current) coordinates. Generic actions like allocating data and computing gradients are done by the base class. For the latter I included one method for 2D and another for 3D, they only differ in the inversion of the Jacobian but being specialized nDim can be ""hardcoded"" which should allow for more compile time optimization. I expect some regressions to fail, and I will still run more tests to verify the revised elements. I will post those results and add a regression. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consiste",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681:212,integrat,integration,212,https://su2code.github.io,https://github.com/su2code/SU2/pull/681,3,['integrat'],['integration']
Integrability,"## Proposed Changes; In order to structure the construction of the solvers a little bit and to remove the dependency of the driver on the solver, I created a static solver factory class. There are routines to create individual instances as well as the whole container. It should be much easier now to see what position in the containers are actually allocated for the different solvers. The `createSolver` routine is a generic one that simply calls `new`. The others have some additional checks or calls for the construction. The idea here was to remove any `if` statements in the `createSolverContainer` routine to ease readability. . If everybody agrees, we could use a similar structure for other classes as well. Let me know what you think. Note from TobiKattmann: This PR depends on #861 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/881:106,depend,dependency,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/881,5,"['depend', 'rout']","['dependency', 'depends', 'routine', 'routines']"
Integrability,"## Proposed Changes; In some cases we use relative frame for rotor zone to perform URANS, e.g., in aeroelasticity analysis, we want the grid movement comes only from blade deformation. The problem is that the sliding plane in SU2 works only for absolute frame. In relative frame, the grid is not rotating, so the interpolation at sliding interface is not changed as time step is marching. The proposed changes rotate the sliding interface in accordance with physical time steps to perform interpolation. This function is activated only for relative frame. The grid itself is not rotating.; Currently, this is only implemented in CNearestneighbor class, other interpolation method should be changed as well in the near future. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2311:338,interface,interface,338,https://su2code.github.io,https://github.com/su2code/SU2/pull/2311,2,['interface'],['interface']
Integrability,"## Proposed Changes; Initialize the omp_partitions vector with the number of points, skip the for loop if the last partition has been calculated. A light-weight checker is added also to verify the partition vector, promote a warning or error message if necessary.; . ## Related Work; Fix #1667 Potential crash for the OpenMP multi-thread running. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1678:242,message,message,242,https://su2code.github.io,https://github.com/su2code/SU2/pull/1678,1,['message'],['message']
Integrability,"## Proposed Changes; JST with scalar dissipation over predicts drag in friction-dominated problems, the version with matrix dissipation is better. ## Related Work; Depends on #1022. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1056:164,Depend,Depends,164,https://su2code.github.io,https://github.com/su2code/SU2/pull/1056,1,['Depend'],['Depends']
Integrability,"## Proposed Changes; Let NdFlattener use a wrapped [MPI_Allgatherv](https://www.mpich.org/static/docs/v3.2/www3/MPI_Allgatherv.html) function which checks the number of participating MPI ranks. If there is only one, perform a simple copy operation instead. I hope that this fixes #1893, which I believe to be the result of a bug in MPICH. In my Ubuntu MPICH container, the `[NdFlattener]` test succeeds with these changes. . ## Related Work; #1893 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1897:43,wrap,wrapped,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/1897,1,['wrap'],['wrapped']
Integrability,"## Proposed Changes; Make CEdge a class of arrays, instead of using it as an array of classes.; Ended up having to add some const-correctness to CNumerics too.; Forgot to turn off ""auto blank space stripping"" so a few files will show more changes than this actually introduces. ## Related Work; Needed for #789 (to eventually support the SIMD part).; Similar changes to #753.; Fixes a bug in the SST fluid-fluid interface. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/959:412,interface,interface,412,https://su2code.github.io,https://github.com/su2code/SU2/pull/959,1,['interface'],['interface']
Integrability,"## Proposed Changes; Move more routines to the FVM flow solver base class.; At the risk of sounding like a broken record, one function means:; One test, one optimization, one debug, one fix.; Implementing new features by copy-paste-modify is like eating your legs to get to the end of a marathon, it ain't gonna work in the long run xD; Cut, Paste, Abstract, Survive. ## Related Work; #1044. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1177:31,rout,routines,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/1177,1,['rout'],['routines']
Integrability,"## Proposed Changes; On a user-specified upstream half-plane, fix the values of turbulence quantities to their far-field values, instead of integrating the turbulence model equations. In the far-field flow, the production terms of SST for K and omega are zero, while destruction still takes place. Thus the turbulence quantities typically decay on their way from the far-field boundary to the airfoil, until they reach the `lowerlimit`. See for instance this turbulence kinetic energy plot on the NACA0012 mesh:; ![kk_sst_copr_TKE](https://user-images.githubusercontent.com/72806890/111277953-4f805380-8639-11eb-8d34-466e612aac4e.png). This has been presented in [1] together with two solution approaches:; - *Sustaining terms*, which are additional source terms compensating the destruction terms in the far-field flow. This approach has been already implemented with the `KIND_TURB_MODEL= SST_SUST` option.; ![kk_sst_copr_sust_TKE](https://user-images.githubusercontent.com/72806890/111278024-60c96000-8639-11eb-8b1b-f4e95a3f97ab.png); - *Floor values*, which is equivalent to set the `lowerlimit` to the far-field values in the upstream region of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubuserco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236:140,integrat,integrating,140,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236,1,['integrat'],['integrating']
Integrability,"## Proposed Changes; Radial Basis Function interpolation for zone to zone transfer without matching meshes.; Main purpose is to use it with the FSI solvers, direct and adjoint. . ## Related Work; Also:; Adds under-relaxation to the adjoint FSI solver to facilitate convergence of strongly coupled problems.; Fixes missing turbulence solver dependencies.; Adds fluid node sensitivities to the output (before they were not set). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555:340,depend,dependencies,340,https://su2code.github.io,https://github.com/su2code/SU2/pull/555,1,['depend'],['dependencies']
Integrability,"## Proposed Changes; Remove `CSolver::Convective_Residual`, as it does nothing and no derived class overrides it. There is one call in `CIntegration.cpp`, which I would like to replace by an error message. . Note that in the present version, usage of `numerics[CONV_TERM]` would not be thread-safe, it should be `numerics[CONV_TERM + omp_get_thread_num()*MAX_TERMS]` (see also #1214). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1222:197,message,message,197,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222,1,['message'],['message']
Integrability,"## Proposed Changes; Replace references to the global MPI communicator `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` where appropriate. This prevents deadlocking in cases where SU2 is given an MPI communicator other than `MPI_COMM_WORLD`, for example when creating an instance of `CDriver` through the Python interface. ## Related Work; Issue #1179 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1180:306,interface,interface,306,https://su2code.github.io,https://github.com/su2code/SU2/pull/1180,1,['interface'],['interface']
Integrability,"## Proposed Changes; Sorry for the separate PR... we are working to include more solid solvers that can be used with the interface. This PR introduces few modifications that are required to include other solvers. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1363:121,interface,interface,121,https://su2code.github.io,https://github.com/su2code/SU2/pull/1363,1,['interface'],['interface']
Integrability,"## Proposed Changes; Split `geometry_structure.cpp/hpp` in one file per class, strip spaces, replace tabs, move inlines to .hpp, etc. This depends on #790, the only open PR affected by this is #773, @TobiKattmann I think it should be an easy merge since you only added new code. ## Related Work; #583. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/825:139,depend,depends,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/825,1,['depend'],['depends']
Integrability,"## Proposed Changes; The PR changes the current limiter routine with the NEMO solver from a conservative variable limiter scheme to limiting on the basis of the primitive variables. This also updates some routines within SU2-NEMO to look/behave/take advantage of the standard SU2 implementations. I also tried tried to remove any other compiler errors. ## Related Work; This was first done with the AUSM scheme by @fmpmorgado. ; This is working towards functional implicit and dual-time capabilities in SU2-NEMO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1139:56,rout,routine,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139,2,['rout'],"['routine', 'routines']"
Integrability,"## Proposed Changes; The ```CLookUpTable``` class allows for the fast interpolation of unstructured 2D data. It was found that the query time of this class scaled significantly with the number of output variables, indicating inefficiencies in the query process.; ; These inefficiencies came from string comparison routines in the ```GetIndexOfVar``` function of the ```CLookUpTable``` class. By implementing overloaded instances of the look-up functions which retrieve data from data indices directly, the query time efficiency scaling was significantly improved. . Also reduced duplicate code within the ```CLookUpTable``` class. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214:314,rout,routines,314,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214,1,['rout'],['routines']
Integrability,"## Proposed Changes; The conjugate heat variables were not communicated properly between the flow and flamelet solver, resulting in the interface temperature between the fluid and solid to be always maintained at 300 kelvin for flamelet simulations. The changes mainly regard the recognition of the inclusion of energy for flamelet problems for the CHT methods, while in the flamelet solver, the conjugate variables are obtained from the flow solver instead of the flamelet solver itself. ; . ## Related Work; Related work includes the pull requests regarding the flamelet solver, as well as the related regression tests. The latter were obtained with this bug included, so the solution files have to be updated and the residual values in the regression tests have to be updated. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2067:136,interface,interface,136,https://su2code.github.io,https://github.com/su2code/SU2/pull/2067,1,['interface'],['interface']
Integrability,"## Proposed Changes; The current PR serves two purposes. First, it extends the sliding interface capabilities for multi-zone fluid-fluid interfaces to incompressible flows. Until now, these features were only available for compressible flows. For example, take the following case of a viscous flow enclosed by diathermal walls and discretized using two different zones with a permeable, non-matching interface:. ![testcase](https://user-images.githubusercontent.com/8706821/51894668-b6cee100-23a8-11e9-8ee8-4b3d846417b2.png); ![discretization](https://user-images.githubusercontent.com/8706821/51894939-5e4c1380-23a9-11e9-8acb-8ac04d555e2b.png). With the current SU2 implementation, the solution diverges due to the lack of interface boundary conditions. After only 10 iterations, the contours of velocity are:. ![former](https://user-images.githubusercontent.com/8706821/51894620-99017c00-23a8-11e9-938a-d8b0e38fa141.png). With this PR, the problem can be successfully solved with a multizone solution process. The contours of velocity and temperature are now:. ![velocity](https://user-images.githubusercontent.com/8706821/51894679-bdf5ef00-23a8-11e9-9466-d360fdc42733.png); ![temperature](https://user-images.githubusercontent.com/8706821/51894683-bfbfb280-23a8-11e9-8ffe-1901b33677bf.png). and also for unsteady problems. ![unsteady](https://user-images.githubusercontent.com/8706821/51894695-c4846680-23a8-11e9-87f5-35041d71fee4.gif). For the latter case I haven’t yet rotated the inner circle, because there are some missing features for dynamic meshes in the incompressible solver. The previous test case for steady-state flows has been added. One for unsteady flows will be enabled once the new output is in place, as the current output structure makes the regression scripts fail. The previous, however, opened a can of worms, as there were some physics based calls in the parent transfer structure (e.g. `GetnSlidingStates()`, `SetSlidingState()` and `SetnSlidingStates()`) that made the inc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638:87,interface,interface,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/638,4,['interface'],"['interface', 'interfaces']"
Integrability,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/908:175,Depend,Depending,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/908,1,['Depend'],['Depending']
Integrability,"## Proposed Changes; There were some merge issues in the previous pull request that were causing lots of issues in #2209. Hopefully this is resolved here. . Update to the interface initialisation to enable both mixing plane and sliding interfaces within the same turbomachinery simulation. Addition of mass flow outlet to Giles BC. ## Related Work. This issue solves a problem reported by a number of users, when simulating radial turbomachinery cases a second-order accurate solution cannot be achieved in some cases when using mixing plane interfaces. This is due to circumfrential averaging in regions where the flow exhibits large circumfrential nonuniformity and/or interspace gaps between adjacent blade-rows/zones small. This issue has been reported by @LorenzoFabris, in a presentation at the SU2 Conference 2022 ""Performance Analysis and Shape Optimization of a Radial Compressor with the Open-Source Software SU2"" and by myself. Mass flow outlet included in the PR as requested by users. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2349:171,interface,interface,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/2349,3,['interface'],"['interface', 'interfaces']"
Integrability,"## Proposed Changes; These changes integrate MKL into SU2 linear algebra operations. The changes are guarded by a HAVE_MKL preprocessor flag, and require MKL 2019 Beta or newer, as they use the most recent features designed to optimize small matrix operations. Observe 18% performance improvement on Broadwell systems and 24% performance improvement on Skylake systems. Additionally, change adds call to memcpy in Gauss Elimination since overlapping source/dest would break functionality at a higher level, and memcpy improves performance. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary. -- Not necessary, existing tests cover functionality when HAVE_MKL flag is in place.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/542:35,integrat,integrate,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/542,1,['integrat'],['integrate']
Integrability,"## Proposed Changes; This PR breaks up the following files:; 1. grid_movement_structure; 2. adt_structure. It also gets rid of grid_adaptation_structure and the entire SU2_MSH module. These files have not be updated in a long time are are deprecated. None of the new work in mesh adaptation by @bmunguia uses any of these routines. . ## Related Work; #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1035:322,rout,routines,322,https://su2code.github.io,https://github.com/su2code/SU2/pull/1035,1,['rout'],['routines']
Integrability,"## Proposed Changes; This PR cleans up some functions in NEMO. removing some unused code, adding comments, etc.; I plan to do some more cleanup for the PR, but this should impact the functioning of the code at all. Future work will:; 1.) Update boundary conditions to a working state (Supersonic Inlet, inlet, etc.); 2.) Make use of CharacPrimVar() for further code integration; 3.) Remove dependency of conserved variables in numerical schemes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1488:366,integrat,integration,366,https://su2code.github.io,https://github.com/su2code/SU2/pull/1488,2,"['depend', 'integrat']","['dependency', 'integration']"
Integrability,"## Proposed Changes; This PR goes in line with the driver reorganisation started in #585. At this time, it is the single-zone adjoint driver that is introduced, which inherits from the primal single-zone driver class. Problem properties are set at time of driver instantiation, and routines are mostly opaque to the physics (not yet completely as some further work is required in input/output). The functions are exposed to python so in a later PR the adjoint can also be used with the AD mode enabled. Some old driver classes are already removed. ## Related Work; - Further work by @oleburghardt to follow on the multizone adjoint driver.; - Some features awaiting the input/output restructuring PR by @talbring. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/671:282,rout,routines,282,https://su2code.github.io,https://github.com/su2code/SU2/pull/671,1,['rout'],['routines']
Integrability,"## Proposed Changes; This PR implements a combustion model for laminar premixed flames in low Mach number flows. The implementation is based on a flamelet progress variable approach - i.e., the combustion chemistry is parameterized with scalar quantities for which scalar transport equations are solved. The scalars are then used to look up scalar source terms, transport -, and thermodynamic quantities from a lookup table. The lookup table is compiled from one-dimensional flame simulations using more expensive chemistry models - typically finite rate mechanisms. In this implementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223:936,depend,dependent,936,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223,1,['depend'],['dependent']
Integrability,"## Proposed Changes; This PR integrates pyBeam, a non-linear open source beam solver, into the SU2 infrastructure as a subproject, and adds support for coupled FSI simulations using SU2's flow solver and pyBeam's structural solver. Tutorials on how to use the implementation will come soon. At this point, only minor changes to the compilation and the python scripts are required. The impact to the core of the code is minor. I will be away for a few days, but please go ahead and have a look/comment/find room for improvement in the meantime :) I will reply to your comments as soon as I'm back to office. I also added a couple of test cases, but I haven't yet found the best way to hook them to our regression test system. I'll definitely look into it before the PR is merged, but due to personal time constraints, it'd be great if this could be integrated for 7.0.3. ## Related Work; This work is the result of a collaboration with @RoccoBombardieri and @crauno from the University Carlos III Madrid. . Please refer to a recent [paper at EUROGEN 2019](https://www.researchgate.net/publication/335972259_Towards_an_open-source_framework_for_aero-structural_design_and_optimization_within_the_SU2_suite) with regards to this work. Full reference will be provided here upon publication in an Springer ECCOMAS book series. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/902:29,integrat,integrates,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/902,2,['integrat'],"['integrated', 'integrates']"
Integrability,"## Proposed Changes; This PR introduces surface deformation routines in CMeshSolver and enables discrete adjoint calculations for deforming mesh problems. Gradient verification for a pitching airfoil using a deforming mesh is good compared against rigid motion for the same pitching airfoil:. ![image](https://user-images.githubusercontent.com/33747655/70388845-407b1200-19af-11ea-9bf0-e016547197b5.png). ## Related Work; Contains PR #919 which cleaned up legacy FSI and deformation methods ; Builds on work previously discussed in PR #766 ; Includes fix for issue #860 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/833:60,rout,routines,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/833,1,['rout'],['routines']
Integrability,"## Proposed Changes; This PR introduces the discrete adjoint counterpart for the multizone driver. It also comes with some heat solver-related additions for the new input/output structure as CHT (conjugate heat transfer) cases are the primary application so far. The new driver adapts many of the well-known routines for registering variables, recording, initializing and extracting adjoints. The main difference is the handling of multiple zones. . The adjoint (fixed point-) iteration approach in `CDiscAdjMultizoneDriver` is to initialize them per-zone in an outer loop and to extract adjoints with respect to _dependent variables from all zones_, thereby inherently capturing the cross dependencies.; Multiple successive evaluations of adjoints with respect to the same zone (equivalent to inner iterations in the multizone driver) are possible.; ; In order not to have to re-record a tape in the (outer) zone-loop as it can be quite costly, this branch includes some new functionalities in the underlying AD-structure which make it possible to record a ""full"" tape that holds all derivative information and that can be accessed flexibly for different input and output variables across zones.; This also overcomes the restriction that adjoints have to be evaluated in the same order as their variables had been registered.; ; This is the first version of the driver and my intention is to continue contributing to it in terms of both performance and coverage of different kinds of physical couplings in SU2. ## PR Checklist; A regression test for a heated cylinder array with conjugate heat transfer is added to `TestCases/coupled_cht/disc_adj_incomp_2d`. The very same case is used in a tutorial showcasing the new driver and CHT sensitivity analysis, see [Heated cylinders test case](https://github.com/su2code/su2code.github.io/pull/14). I'll check carefully for compiler warnings during test phase. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774:308,rout,routines,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/774,2,"['depend', 'rout']","['dependencies', 'routines']"
Integrability,"## Proposed Changes; This PR restructures the CTransfer parent and child classes following discussions in #583 and #725. Given that I already started it in #760, I just went ahead and moved all the remaining classes. It should be compared to `feature_elastic_mesh_solver`. ## Related Work; Depends on #760 and should be merged afterwards. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/769:290,Depend,Depends,290,https://su2code.github.io,https://github.com/su2code/SU2/pull/769,1,['Depend'],['Depends']
Integrability,"## Proposed Changes; This PR updates codi and medi to the newest version. For externally differentiated functions and preaccumulation it now uses the interfaces provided by codi. . ## Related Work; This fixes #659. . PRs #650 and #653 should be merged in before (I will deal with this next week). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/660:150,interface,interfaces,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/660,1,['interface'],['interfaces']
Integrability,"## Proposed Changes; This PR updates some of the NEMO viscous routines to be more inline with the overall SU2 structure. Hopefully paving the way for an easier merge with turbulence solvers in the future. ## Related Work; This is coming with an effort to update and optimize NEMO, like in #1343. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1347:62,rout,routines,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/1347,1,['rout'],['routines']
Integrability,"## Proposed Changes; This PR will help address issues seen in SU2 when symmetry planes are applied. These include pressure oscillations at sym plane & solid wall interfaces (i.e. blunt bodies). It will also change the implementation of the sym plane in SU2-NEMO to that used by the rest of the code, the template function in CFVMFlowSolverBase.inl.; . ## Related Work; This PR will largely utilize the work done in #1168 by Fabio Morgado. It is in addition to #657. It will address several open issues #1625 and #1125. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1635:162,interface,interfaces,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/1635,1,['interface'],['interfaces']
Integrability,"## Proposed Changes; This a initial merge to begin incorporating some modification to the sliding mesh interface which we are planning to improve in the next future. ## Related Work; Mostly performance improvements in the creation of the super mesh for the Weighted Average sliding mesh approach.; ADT is now used to initialize the supermesh construction. Some portions of the code were re-implemented using a smarter algorithm which reduces the code length. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2334:103,interface,interface,103,https://su2code.github.io,https://github.com/su2code/SU2/pull/2334,1,['interface'],['interface']
Integrability,"## Proposed Changes; This a initial merge to begin incorporating some modification to the sliding mesh interface which we are planning to improve in the next future. . ## Related Work; Mostly performance improvements in the creation of the super mesh for the Weighted Average sliding mesh approach.; ADT is now used to initialize the supermesh construction. Some portions of the code were re-implemented using a smarter algorithm which reduces the code length. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2332:103,interface,interface,103,https://su2code.github.io,https://github.com/su2code/SU2/pull/2332,1,['interface'],['interface']
Integrability,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1348:652,integrat,integration,652,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348,1,['integrat'],['integration']
Integrability,"## Proposed Changes; This implemented the proposed preprocessing output already detailed in #591. I added a table output class for structuring screen output. As a first step I used it for the preprocessing output, but it will eventually be also used in the new output structure that follows soon. I am pretty sure there are more places where a table can be helpful for readability, but we can make these changes as we go. Note: the convergence output is not affected yet!. The class is added in a folder called ""Common/toolboxes"". My intention is that in the future we will add there more small helper tools/classes, which are essentially independent of the rest of the code. . Below you find an example output of the current preprocessing:. ```. ---------------------- Space Numerical Integration ----------------------; Jameson-Schmidt-Turkel scheme (2nd order in space) for the flow inviscid terms.; JST viscous coefficients (2nd & 4th): 0.5, 0.02.; The method includes a grid stretching correction (p = 0.3).; Scalar upwind solver for the turbulence model.; First order integration in space.; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:786,Integrat,Integration,786,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['Integrat'],['Integration']
Integrability,"## Proposed Changes; This is a ""don't pay for what you don't use"" optimization.; I've disabled implicit time integration during the computation of the MG forcing term. I've also refactored CMultiGridQueue, it had a bad scaling problem because to remove a point from the queue we were doing a linear search followed by vector::erase, both being O(N) operations.; I've put together a queue-type class that allows fast (amortized O(1)) ""seek-and-destroy"" of arbitrary items. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/963:109,integrat,integration,109,https://su2code.github.io,https://github.com/su2code/SU2/pull/963,1,['integrat'],['integration']
Integrability,"## Proposed Changes; This is a slight modification to the computation of face normals. Previously, the inputs to SetCoord_CG were swapped depending on whether iPoint < jPoint, but this can result in an inconsistent direction for the normals of each sub-face associated with edge i/j (i.e. for each element connected to edge i/j). This logic is replaced by dotting the sub-face normals with the edge vector from i to j (or j to i if iPoint > jPoint), and flipping the normal if the product is negative. This fix might be needed for the surface elements too, but I was less sure of what's going on in SetBoundControlVolume(). ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1054:138,depend,depending,138,https://su2code.github.io,https://github.com/su2code/SU2/pull/1054,1,['depend'],['depending']
Integrability,"## Proposed Changes; This is a solver I have been working on for some time.; The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2.; Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One Shot optimization context.; The new solver constructs the necessary operator and solves it using the finite elements features in SU2. It also includes the possibility to take the mesh parameterization into account and smooth the sensitivities w.r.t. the design parameters. I will update this draft and the comments, but I wanted to share this first version. I would be happy if anyone wants to comment on it. The draft needs some steps to be done, including:; - clean up the comments and make them consistent with SU2 style; - remove the dependency on Eigen. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1439:1022,depend,dependency,1022,https://su2code.github.io,https://github.com/su2code/SU2/pull/1439,1,['depend'],['dependency']
Integrability,"## Proposed Changes; This is a tiny PR to add a conditional operator in CFlowOutput.cpp to avoid calling to GetNodes() function if the solver is a FEM/DG solver. In one of the early commits (34b0464e898dd167d8a865f47aa630019a5978ac), a call to GetNodes() was added in `CFlowOutput::SetAnalyzeSurface` which calls the function `GetNodes()`. ```const auto flow_nodes = solver[FLOW_SOL]->GetNodes();```. There is an assertion in `GetNodes()` that further mandates the `CVariable` `base_nodes` to be set properly. However, in the FEM/DG solver, the `base_nodes` is defaulted to `nullptr` and we have workarounds in the FEM/DG sovler that does not require a call to `GetNodes()` in other parts of the code (we use elements instead of nodes, so the concept of nodes is not really well-defined in the FEM/DG solver). . At the moment, the develop branch will fail at this line if anyone attempts to use the FEM/DG solver. . E.g., Taking the `hom_euler/NACA0012_5thOrder` test case in the repo gives the following error message:; ```SU2_CFD: ../SU2_CFD/src/output/../../include/solvers/CSolver.hpp:230: const CVariable* CSolver::GetNodes() const: Assertion `base_nodes!=nullptr && ""CSolver::base_nodes was not set properly, see brief for CSolver::SetBaseClassPointerToNodes()""' failed.``` at the pre-processing stage before any computation is done. Hence, a conditional operator is added to avoid this call for DG solvers. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; @vdweide and I are working on a new version of the DG solver that needs this workaround anyway. This is just added for now in case anyone else wants to work on the current version of DG solver available. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1772:1011,message,message,1011,https://su2code.github.io,https://github.com/su2code/SU2/pull/1772,1,['message'],['message']
Integrability,"## Proposed Changes; This is an update of the feature_Wall_Functions. In fact, it is only a minor contribution to the original implementation by @economon based on the article ""Wall Function Boundary Conditions Including Heat Transfer and Compressibility""; ; ## Related Work; The original implementation was 99% done but, it was not working because of ; - two typos on the original article (eq. 11 and eq. 16). ; - not accounting for a negative nu_tilde (very small value... but, negative). ; - not setting tau_wall to -1 on all the BC but non-slip ones. Apart from those changes, a Newton method has been introduced to compute nu_tilde (it would be important to do the same with the tau_wall computation... it will be done -time depending-), some minor renaming of the functions has been introduced as well as the use of MARKER_WALL_FUNCTIONS (implemented after the original implementation). ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/530:730,depend,depending,730,https://su2code.github.io,https://github.com/su2code/SU2/pull/530,1,['depend'],['depending']
Integrability,"## Proposed Changes; This is one I have been trying to solve for a while and now found a solution that is not a hack.; Under some circumstances that I do not understand (very case dependent) one of the cross terms (structure w.r.t. fluid) creates spurious values, e.g.:; ![image](https://user-images.githubusercontent.com/38071223/48981547-af503a80-f0ce-11e8-9875-1b9a2d5fd50d.png); The fix I found is to change the recording strategy, instead of making 3 recordings of the structural iteration (one for each set of input variables) this is merged into a single recording.; So from this:; ![image](https://user-images.githubusercontent.com/38071223/48981607-aad85180-f0cf-11e8-9740-dd6f51f249c3.png); To this:; ![image](https://user-images.githubusercontent.com/38071223/48981615-bc215e00-f0cf-11e8-8dd1-c2ae00b3a973.png); So far this has fixed the issue for a range of cases, large to small.; [Here](https://github.com/su2code/SU2/files/2613239/spurious_values.zip) you can see the difference between running the case in the example picture with and without the fix.; . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615:180,depend,dependent,180,https://su2code.github.io,https://github.com/su2code/SU2/pull/615,1,['depend'],['dependent']
Integrability,"## Proposed Changes; This is the first part of a series of PRs which completely refactor the output (and parts of the input). In this one I introduce the sub-config file feature for multizone/multiphysics problems. More information on how it works can be found here:. https://su2code.github.io/docs/Multizone. Note that the automatic deduction of the correct interface type is *not* working at the moment. So the `MARKER_FLUID_INTERFACE` or `MARKER_CHT_INTERFACE` still has to be there at the moment ... Furthermore this changes the way grid movement is specified in the config files. Examples can be found also using the link above or by simply looking at the `sliding_interface` test cases. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/715:359,interface,interface,359,https://su2code.github.io,https://github.com/su2code/SU2/pull/715,1,['interface'],['interface']
Integrability,"## Proposed Changes; This is the initial PR for a long overdue refactorization of the mesh deformation routines. The mesh deformation acquires here a full ""solver"" status, and uses the FEA Elasticity classes as its basis. The pseudo-linear elastic solver now always refers to the initial, undeformed geometrical discretization, therefore ensuring that the problem remains traceable to the original mesh, and that when volumes are computed to deform the mesh, the initial quality of the elements is observed. . With this framework, the wall distances only need to be computed once for distance-based stiffness, and the stiffness matrix is now symmetric after applying BCs so conjugate gradient can be used to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:103,rout,routines,103,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['rout'],['routines']
Integrability,"## Proposed Changes; This makes the routines InitiateComms and CompleteComms (and periodic counterparts) safe to call in parallel, until now they had to be guarded inside SU2_OMP_MASTER sections.; The calls to MPI are still only made by the master thread (funneled communication) but the buffers are packed and unpacked by all threads.; I also made a slight change which seems to make communications more efficient, we were always communicating the entire buffer, which is sized for the maximum number of variables per point, because the data was packed like this:; `o o o o _ _ _ _ o o o o _ ...` (count = 4, maxCount = 8);; I changed it to:; `o o o o o o o o ... _ _ _ _ ...`; Which allows only part of the buffer to be communicated.; (The maximum size `nPrimVarGrad*nDim*2` is actually quite large compared to the median `nVar`). In the process I also had to make a few more CGeometry routines thread safe. ## Related Work; #789; Resolves #1011. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1009:36,rout,routines,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009,2,['rout'],['routines']
Integrability,"## Proposed Changes; This pull request is the first of a series of improvements I plan to do in the code, which aim to improve the code readibility and remove some bottlenecks in terms of abstraction, particularly regarding the input/output. At this time, I have removed some inconsistencies in the definition of the Zone structure, by incorporating the concept of “Instances” to the code. Until now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers wil",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528:516,interface,interface,516,https://su2code.github.io,https://github.com/su2code/SU2/pull/528,1,['interface'],['interface']
Integrability,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300:97,rout,routines,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300,4,"['depend', 'integrat', 'rout']","['depending', 'integrated', 'integration', 'routines']"
Integrability,"## Proposed Changes; This removes some leftovers from when we deprecated the mesh adaptation.; I had a look at the ""adap"" branches and it seems that the new interface has completely new scripts and these are not needed, @bmunguia correct me if I am wrong. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1153:157,interface,interface,157,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153,1,['interface'],['interface']
Integrability,"## Proposed Changes; This small PR modifies the error handling, such that the error message is also written when the call to the error handler is not collective. The function CBaseMPIWrapper::Error is not so small anymore, so it may be an idea to move it to the .cpp file instead of inlining it.; ; ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574:84,message,message,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/574,1,['message'],['message']
Integrability,"## Proposed Changes; Throw error for LM, print message that BC is the 2020 version. ## Related Work; #1132; #1130. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1157:47,message,message,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/1157,1,['message'],['message']
Integrability,"## Proposed Changes; Trying to make the python vertex tractions and vertex traction adjoints independent of a specific marker to allow #1174 to go forward without side effects on how FSI is done via the python wrapper at the moment. ## Related Work; #1174 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1197:210,wrap,wrapper,210,https://su2code.github.io,https://github.com/su2code/SU2/pull/1197,1,['wrap'],['wrapper']
Integrability,"## Proposed Changes; Update to the interface initialisation to enable both mixing plane and sliding interfaces within the same turbomachinery simulation. Addition of mass flow outlet to Giles BC. ## Related Work; This issue solves a problem reported by a number of users, when simulating radial turbomachinery cases a second-order accurate solution cannot be achieved in some cases when using mixing plane interfaces. This is due to circumfrential averaging in regions where the flow exhibits large circumfrential nonuniformity and/or interspace gaps between adjacent blade-rows/zones small. This issue has been reported by @LorenzoFabris, in a presentation at the SU2 Conference 2022 ""Performance Analysis and Shape Optimization of a Radial Compressor with the Open-Source Software SU2"" and by myself. Mass flow outlet included in the PR as requested by users. TBC:; -Update APU Turbocharger test case and regression test to include this feature, add diffuser and converge 2nd order. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2209:35,interface,interface,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/2209,3,['interface'],"['interface', 'interfaces']"
Integrability,"## Proposed Changes; Use of pre-accumulation in the structural solver numerics to provide order of magnitude reduction in the adjoint structural solver memory footprint. Using the fact that only the RHS of linear systems is differentiated, we can use pre-accumulation on the nodal stress residual computed in CFEAElasticity::Compute_Tangent_Matrix and CFEAElasticity::Compute_NodalStress_Term.; The implementation accounts for material properties and nodal coordinates, the latter are not strictly required at the moment but this future proofs the implementation for structural shape derivatives. . The above routines where chosen because ""everything"" happens inside them: computation of element gradients, constitutive terms, stress tensors, etc. So it is where the technique would be most effective. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/592:609,rout,routines,609,https://su2code.github.io,https://github.com/su2code/SU2/pull/592,1,['rout'],['routines']
Integrability,"## Proposed Changes; We need to do something about these 20k lines of legacy.; ATM it is a little hard to see what might need to be ported so I'm trying to remove unused chunks to hopefully make the task easier.; @vdweide it looks like all the legacy output FEM routines are not needed, it that right?. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1115:262,rout,routines,262,https://su2code.github.io,https://github.com/su2code/SU2/pull/1115,1,['rout'],['routines']
Integrability,"## Proposed Changes; We propose to integrate the latest functionalities of the DG solver into the develop branch. The most important one is the parallel binary output functionality for paraview and tecplot, which is needed for the branch feature_input_output. ## Related Work; This PR is needed to complete the overhaul in the output classes (work of @talbring and @rsanfer) in the feature_input_output branch. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/676:35,integrat,integrate,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/676,1,['integrat'],['integrate']
Integrability,"## Proposed Changes; With steady computations, the pywrapper call to `SU2Driver.Run()` will run it for the number of iterations in the config file. The first change this PR makes is that a call to `SU2Driver.Preprocess(nIter)` will overwrite the number of inner iterations when the case is not time dependent. We can now do `SU2Driver.Run()` for a single iteration by setting `SU2Driver.Preprocess(1)`. A call to `SU2Driver.Monitor(Iter)` will check the stopping criteria, including the maximum number of iterations. When you have set this to 1 using `SU2Driver.Preprocess(1)`, a call to `SU2Driver.Monitor(0)` will still stop the calculations because we are checking if (iter+1)>=nIter. The second change is that we now check if (iter >= nIter). I also change this behavior for time dependent problems to make this behavior consistent. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960:299,depend,dependent,299,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960,2,['depend'],['dependent']
Integrability,"## Proposed Changes; change limiter to enum class. . Note: For some reason this fixes a problem for the species transport, where the discrete adjoint solver would stop in computelimiters.hpp with the message ""unknown limiter type"". This only happens when a computation is run over more than one node (more than one core is OK though). This is because in CSolver::SetSolution_Limiter, GetKind_SlopeLimit() does not return a valid value for an existing slope limiter. Kind_SlopeLimit is set in CConfig::SetKind_ConvNumScheme, called in CConfig::SetGlobalParam, but this looks OK to me. . I did just notice that in CConfig:: line 3454 we check for MUSCL_Flow, MUSCL_Turb and MUSCL_AdjFlow and MUSCL_AdjTurb, but not for MUSCL_Species or MUSCL_Adj_Species(does not even exist). It looks like there is still something missing here. I do not know why the error ""unknown limiter type"" occured and why it is now fixed by only changing to enum class. ## Related Work; continuing effort to change all enums to enum class. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1550:200,message,message,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/1550,1,['message'],['message']
Integrability,"## Proposed changes. Dear all,. I am very new to collaboration on a open source project, but I have been working on an update for the FSI computation in python that I think may be useful also for other researcher. Would you mind giving me a feedback about the modifications?. In few words, I have updated the python interface for fluid structure interaction to the new version of SU2, including the new driver, the new mesh deformation methods and few other modifications in the python scripts. It works with python3. As far as the C++ code is concerned, I only added the possibility to separate the symmetry boundary conditions for the fluid solver from the ones of the mesh solver. There is an explanation of this modification in the ReadMe file in SU2_PY/FSI_tools, together with an example of application. . The interface is still general and new structural solvers can be coupled by adding it to the fsi_computation.py file. With the present pull request I only include one structural solver, which provides a coupling with the commercial code Nastran. I added ReadMe files to explain in detail all the modifications and also the keywords to be used in the config files. Finally, there is also a complete test case where the flutter of a flat plate is studied. I am looking forward for your comments. Nicola. ## PR checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124:316,interface,interface,316,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124,2,['interface'],['interface']
Integrability,"## Pull request description; The idea of this pull request is to provide a new code structure to implement the turbulence models in SU2. In the new approach, ""all"" variations/correction from a turbulence model should be compatible with each other and the user can use them simultaneously. Most of these variations/corrections only affect to the source terms, thus it forms the main contribution to this pull request. ## Short history summary; Originally the idea behind such an approach is given by @clarkpede in [here](https://github.com/su2code/SU2/issues/992#issuecomment-652446915).; The code implementation was suggested by @pcarruscag in [here](https://github.com/su2code/SU2/pull/1066#discussion_r470975915).; For the user interface, this is being or was discussed in [here](https://github.com/su2code/SU2/issues/1364#issue-981474153). Some time ago, I made a PR #1066 to correct the SA model in SU2. Further I had the intention to implement the above presented approach to the SA for that pull request. However since the the presented approach can also be applied to the [SST](https://github.com/su2code/SU2/discussions/1403#discussion-3625259) or any turbulence model, I decided to create a new pull request. _Please note that this is a very draft pull request, it is not meant to work at all._. ## Documentation; Down below I will explain the ""theory"" behind it as well as the code structure that I will try to follow, just in case someone wants to replicate it for the SST. Regarding the user interface, I did not work on that yet. I will address it at the end. ### Theory; The Spalart-Allamaras correction/variation models to be implemented in SU2 are listed below. One can find a detailed description for example in [NASA TMR website](https://turbmodels.larc.nasa.gov/spalart.html).; - Spalart-Allmaras standard; - Spalart-Allmaras negative; - Spalart-Allmaras **yes** ft2 term; - Spalart-Allmaras mixing layer compressibility correction; - Spalart-Allmaras Edwards modification; - Spalar",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1411:730,interface,interface,730,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411,2,['interface'],['interface']
Integrability,"## Scope; Elasticity problems can be quite demanding linear solver wise as your typical case will have very few Dirichlet boundaries.; Common iterative methods can only go so far, and pseudo time strategies to improve conditioning do not work as well as for fluid problems due to the elliptic nature of the equations.; Scalability is also an issue since most preconditioners get weaker as the problem gets partitioned.; Direct sparse solvers handle these problems just fine, so life is good again, until you run out of RAM that is (which only ever happens in 3D). Time complexity is about O(N^2) and storage O(N^1.5). ## Proposed Changes; Wrapper class for Inria's direct sparse solver [PaStiX](http://pastix.gforge.inria.fr/files/README-txt.html).; Why this solver? Because it is open source, has active development in advanced features like GPU support and compression techniques to reduce memory footprint, and from my experience it is really robust. ## Implementation; As this feature benefits mostly the FSI people (@rsanfer, @cvencro, and me) I tried to keep it as standalone as possible.; The core implementation is in separate files and nothing needs to change in CSysMatrix for this to work. ## Usage; Available factorizations:; - LDLT; - LU; - ILU(k). The ILU is different from the one we have in that it is computed for the entire matrix and not just for the local matrices (i.e. it considers halos), it is not very fast though.; The three factorizations can be used as preconditioners via options PASTIX_ILU, PASTIX_LU, and PASTIX_LDLT. And the first two as solvers via options PASTIX_LU and PASTIX_LDLT (in which case you should use a preconditioner type that does not cause CSysMatrix to allocate extra memory (LU_SGS).; The reason LDLT and LU can also be used as preconditioners is that it is possible to set a factorization frequency (via PASTIX_FACTORIZATION_FREQUENCY) so that the factorizations are only computed every N iterations or only on the first call (frequency set to 0), th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771:639,Wrap,Wrapper,639,https://su2code.github.io,https://github.com/su2code/SU2/pull/771,1,['Wrap'],['Wrapper']
Integrability,"## Steps to reproduce the underlying issue. Compile SU2 with Clang and `-fsanitize=address` (and possibly `-fno-omit-frame-pointer`), and run the testcases as usual. AddressSanitizer warnings appear in the output (if any). So far, only the tests in serial_regression.py have been analyzed. ## Proposed Changes. Depending on the context of the memory leak, ; - add `delete` / `delete[]` statement; - turn `new`-allocated arrays into `std::vector`s, or; - for one bug caused by a `delete` to a base class pointer, make its destructor `virtual`. . ## Related Work. #2211 and #2213 have been detected in the same way, but I'm not sure how to properly fix them. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [not necessary] I have added a test case that demonstrates my contribution, if necessary.; - [not necessary] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2212:311,Depend,Depending,311,https://su2code.github.io,https://github.com/su2code/SU2/pull/2212,1,['Depend'],['Depending']
Integrability,"## Summary; The fluid should freely pass a fluid interface between RANS zones. However, in some unsteady 2D simulations, I encountered the interface generating unexpected flow solutions which is observed through the increased eddy viscosity and unphysical velocity as the inner zone rotates with respect to the stationary outer zone. I have tried using; - a finer mesh with more cells on the zone interface,; - the incompressible and compressible RANS solvers, ; - smaller time steps and more pseudo-time iterations,; - different interface interpolation methods (NEAREST_NEIGHBOR and WEIGHTED_AVERAGE),; - different convective numerical methods (upwind/central and with and without MUSCL_FLOW). however the problem persisted. ## Setup. ### Mesh; <img width=""600"" alt=""Screenshot 2024-03-30 at 10 28 21"" src=""https://github.com/su2code/SU2/assets/81166192/6e5a8fcf-fd72-41ed-a5cf-b2a477a55b0a"">. _File_: ; [vawt_ami.su2](https://github.com/su2code/SU2/files/14811551/vawt_ami.txt). ### Configuration files; _su2Config.cfg_:; ```; SOLVER= INC_RANS; KIND_TURB_MODEL= SST; MATH_PROBLEM= DIRECT; CONFIG_LIST= (zone_sta.cfg, zone_rot.cfg). INNER_ITER= 1; OUTER_ITER= 20; TIME_ITER= 3160. TIME_DOMAIN= YES; TIME_MARCHING= DUAL_TIME_STEPPING-2ND_ORDER; TIME_STEP = 0.000593412; MAX_TIME= 50.0. INC_DENSITY_INIT= 1.225; INC_VELOCITY_INIT= ( 10.0, 0.0, 0.0 ); INC_TEMPERATURE_INIT= 288.15; INC_INLET_TYPE= VELOCITY_INLET; INC_OUTLET_TYPE= PRESSURE_OUTLET. REF_ORIGIN_MOMENT_X = 0.00; REF_ORIGIN_MOMENT_Y = 0.00; REF_ORIGIN_MOMENT_Z = 0.00; REF_LENGTH= 0.85; REF_AREA= 1.7. VISCOSITY_MODEL= CONSTANT_VISCOSITY; MU_CONSTANT= 1.8375E-5. MARKER_ZONE_INTERFACE= ( AMI1, AMI2 ); MARKER_FLUID_INTERFACE= ( AMI1, AMI2 ); KIND_INTERPOLATION= NEAREST_NEIGHBOR. NUM_METHOD_GRAD= WEIGHTED_LEAST_SQUARES; CFL_NUMBER= 20.0; MAX_DELTA_TIME= 1E6. SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; MUSCL_TURB= NO; SLOPE_LIMITER_TURB= VENKATAKRISHNAN; VENKAT_LIMITER_COEFF= 0.05; REF_SHARP_EDGES = 3.0; SENS_REMOVE_SHARP = NO; LIMITER_ITER= 9",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255:49,interface,interface,49,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255,4,['interface'],['interface']
Integrability,"### Discussed in https://github.com/su2code/SU2/discussions/1456. <div type='discussions-op-text'>. <sup>Originally posted by **CipollinoDuck** November 30, 2021</sup>; Hello everyone,. I ask here because I cannot find any solution elsewhere. I am attempting an **Adjoint Optimization problem** with viscous solver (**RANS/NAVIER_STOKES**) using the **shape_optimization.py** script but I can't complete it because I receive the following message:. `Error in ""void CSolver::Read_SU2_Restart_Binary(CGeometry*, const CConfig*, std::__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver doe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1458:439,message,message,439,https://su2code.github.io,https://github.com/su2code/SU2/issues/1458,2,['message'],['message']
Integrability,"(GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -I/home/FDa/FDa045/programs/intel/2020_update4/mkl/include -I../externals/codi/include -I../externals/medi/include -I../externals/medi/s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:1600,Depend,Dependency,1600,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,1,['Depend'],['Dependency']
Integrability,") then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1258:1515,message,message,1515,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258,1,['message'],['message']
Integrability,"**Describe the bug**. I have suceeded build SU2 when `-Denable-pywrapper=false`. Then, I want to install SU2 by python wrapper build. But the bug is reported:. ```; FAILED: SU2_PY/pySU2/_pysu2.dll.p/pySU2.cxx; ""D:\Program Files\swigwin-4.0.2\swig.EXE"" ""-DHAVE_CGNS"" ""-DNDEBUG"" ""-DHAVE_MPI"" ""-DHAVE_METIS"" ""-DHAVE_PARMETIS"" ""-DHAVE_TECIO"" ""-DTECIOMPI"" ""-c++"" ""-python"" ""-I"" ""-outdir"" ""C:/Users/ZHQ/Desktop/SU2/build/SU2_PY/pySU2"" ""-o"" ""./SU2_PY/pySU2/_pysu2.dll.p/pySU2.cxx"" ""../SU2_PY/pySU2/pySU2.i""; ..\SU2_PY\pySU2\pySU2.i(58) : Error: Unable to find 'mpi4py\mpi4py.i'; [2/10] Linking static target externals/cgns/hdf5/libsu2hdf5.a; ninja: build stopped: subcommand failed.; ```. **To Reproduce**; Firstly, I install the `mpi4py` in a conda environment. And I am sure I have install `mpi4py`:. ```; (SU2) C:\Users\ZHQ>python; Python 3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)] :: Anaconda, Inc. on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from mpi4py import MPI; >>> MPI; <module 'mpi4py.MPI' from 'D:\\Anaconda\\envs\\SU2\\lib\\site-packages\\mpi4py\\MPI.cp37-win_amd64.pyd'>; >>>; ```; But the `python ./meson.py build` find another python environment:; ```; Program python3 found: YES (C:\Users\ZHQ\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\python.exe); ```; I have find a similar issure (https://github.com/su2code/SU2/issues/722). This issue suggestion that we need to modify the `Makefile`. However, since I build SU2 in Win10, I have no `Makefile`. Then, I find the `build/build.ninja` specified the location of `python.exe`. So I modify the `python.exe` location in `build.ninja` by:; 1. modify all `C:\Users\ZHQ\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\python.exe` to `D:\Anaconda\envs\SU2\python.exe`. ; 2. modify all `C$:/Users/ZHQ/AppData/Local/Microsoft/WindowsApps/PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0/python.exe` to ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1575:119,wrap,wrapper,119,https://su2code.github.io,https://github.com/su2code/SU2/issues/1575,1,['wrap'],['wrapper']
Integrability,"**Describe the bug**. When compiling SU2 7.1.1 Blackbird from the Develop Branch with Pastix support, the build fails at Common/src/libSU2CommonAD.a.p/wall_model.cpp.o with a c++ error saying unrecognized command-line-option '-fexceptions;-pthread'. Here is a snip from the error message: ; ![image](https://user-images.githubusercontent.com/24353606/128623331-461f0ded-4b4d-4ece-83e8-b2eb40e9129d.png). **To Reproduce**; Basically I download the develop branch from SU2 7.1.1,; extract it and configure using:; ![image](https://user-images.githubusercontent.com/24353606/128623382-55f4bc2e-e971-4b1d-81bf-626fc9ae484d.png). **Desktop (please complete the following information):**; - OS: Fedora 34; - C++ compiler and version: g++ (GCC) 11.2.1; - MPI implementation and version: OpenMPI-4.1.1; - SU2 Version: 7.1.1-Develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1349:280,message,message,280,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349,1,['message'],['message']
Integrability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. I am running a WMLES channel flow test case with grid size 102 x 31 x 52 = 164424 nodes. When running the problem on a large number of cores, e.g. 128 cores, SU2 fails during the preprocessing step. Running valgrind gives the error; ![image](https://user-images.githubusercontent.com/41386609/97629439-580a2180-19eb-11eb-9e9f-023fc96c05aa.png); which for my version corresponds to this line; ![image](https://user-images.githubusercontent.com/41386609/97629473-66f0d400-19eb-11eb-89c8-9b677c720240.png); It seems that theres a mismatch on the receiver end. The problem disappears if I use smaller number of cores, e.g. 64, and everything will look normal (solution converges and SU2 exit normally). The actual number of MPI cores that triggers the bug seems to be problem dependent. I also ran a couple of finer grids but started to see the bug with 64 cores. For these finer mesh, reducing to a smaller number like 48 cores makes the problem disappear again. Similar problem has been observed by @clarkpede and mentioned in pecos-hybrid/su2#53 but he was using an older version of SU2 (v6.2.0). I should mention another common thing is that we are both using periodic boundary conditions. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [wmles_chan_re5200.zip](https://github.com/su2code/SU2/files/5461150/wmles_chan_re5200.zip); (Reminder: This has to be ran with very large number of cores though. I see the problem with 128 cores). **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.6.1810; - C++ compiler and version: gcc/6.3.0 ; - MPI implementation and version: openmpi/3.1.2; - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1099:957,depend,dependent,957,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099,1,['depend'],['dependent']
Integrability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Python wrapper hangs on Set_MPI_ActDisk in CEulerSolver.cpp line 1091 ""SU2_MPI::Barrier(MPI_COMM_WORLD);""; If the SU2_CFD is called without python wrapper, it runs ok. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Go to the test case solver, choose the propeller one and run the following script. mpirun -np 2 python launch_su2.py --parallel -f propeller.cfg; [launch_su2.py.txt](https://github.com/su2code/SU2/files/5762218/launch_su2.py.txt). There is no issue when SU2_CFD is called directly:; mpirun -np 2 SU2_CFD propeller.cfg. **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ (GCC) 9.3.0]; - MPI implementation and version: [OpenMPI 4.0.5]; - SU2 Version: [develop]; - Python Version: 3.6.12; - MPI4Py Version: 3.0.3. In order to fully reproduce the error one can try running the following commands under Anaconda Python Manager, although the same error appears using the default ubuntu python3 and openmpi compilers :; ->conda create -n su2code python=3.6; ->conda activate su2code; ->conda install -c conda-forge c-compiler compilers cxx-compiler openmpi swig mpi4py numpy scipy. Install SU2 with the following script:. #!/bin/bash; export CC=/path/anaconda3/envs/su2code/bin/mpicc; export CXX=/path/anaconda3/envs/su2code/bin/mpicxx; export CXXFLAGS=${CXXFLAGS}:""-lmpi""; rm -rf SU2/build; rm -rf SU2_exec_dev/bin; cd SU2; ./meson.py build -Denable-pywrapper=true -Dcustom-mpi=true --prefix=/path/SU2_exec_dev; ./ninja -C build install",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1150:192,wrap,wrapper,192,https://su2code.github.io,https://github.com/su2code/SU2/issues/1150,2,['wrap'],['wrapper']
Integrability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; For axisymmetric flows where the outflow is aligned with the symmetry axis (horizontal axisymmetry, vertical outlet), the computed outlet area of the circular outlet can be off by 10%.; This is due (I think) to the fact that the node normals are used for the computation of the edge size and integrated area and mass flux. This computation is performed e.g. in CIncEulerSolver::GetOutlet_Properties. An approach where the marker edges are used instead to compute the edge sizes leads to the correct area and mass flux computations. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - SU2 Version: current develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1710:477,integrat,integrated,477,https://su2code.github.io,https://github.com/su2code/SU2/issues/1710,1,['integrat'],['integrated']
Integrability,"**Describe the bug**; A compiler warning brought me to this routine.; The logic to check for convexity of 3D elements seems flawed, I left two comments in the code in #1167 (it will be in develop soon enough) of what seems odd about it.; I think this routine was introduced in #1076, and it seems the intention is to check the volume of the tet associated with each corner of an element, a similar method is used in CPhysicalGeometry::Check_IntElem_Orientation. I am not planning to fix this myself :)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1171:60,rout,routine,60,https://su2code.github.io,https://github.com/su2code/SU2/issues/1171,2,['rout'],['routine']
Integrability,"**Describe the bug**; Building SU2 with building options -Denable-pywrapper and -Dwith-mpi, The meson error occured.; Please let me know if anyone knows what to do. The part of meson-log.txt is below:. > Message: Boost sources found.; Program swig found: YES (/usr/bin/swig); Running command: /---/---/---/work/SU2/venv/bin/python3 -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include. > --- stderr ---. > Message: Using mpi4py from /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include; Pkg-config binary for 1 is cached.; Determining dependency 'python-3.7m' with pkg-config executable '/usr/bin/pkg-config'; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --modversion python-3.7m` -> 0; 3.7; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --cflags python-3.7m` -> 0; -I/data/home/yamazaki/soft/Python-3.7.9/build/include/python3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; WARNING: extract_all_objects called without setting recursive; keyword argument. Meson currently defaults to; non-recursive to maintain backward compatibility but; the def",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1672:204,Message,Message,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/1672,3,"['Message', 'depend']","['Message', 'dependency']"
Integrability,"**Describe the bug**; Compile MPI Version error on Windows. I can build successfully by run ` py .\meson.py build` ant `ninja.exe build install` , but it can't compile with ` py .\meson.py build -Dwith-mpi=enabled`. the error message :; ```; Version: 0.61.1; Source dir: F:\suflow\code\Su-FVMu-Solver; Build dir: F:\suflow\code\Su-FVMu-Solver\build; Build type: native build; Project name: SU2; Project version: 7.5.1 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\zeng\AppData\Local\Programs\Python\Python37\python.exe); WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.platlibdir"" option.; WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.purelibdir"" option.; Found pkg-config: C:\Program Files\mingw-w64\bin\pkg-config.EXE (0.26); mpicc found: NO; Run-time dependency MPI for c found: YES; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig, config-tool and system). meson.build:61:2: ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system. A full log can be found at F:\suflow\code\Su-FVMu-Solver\build\meson-logs\meson-log.txt; ```. meson-log.txt: ; [meson-log.txt](https://github.com/su2code/SU2/files/12427739/meson-log.txt). **Bug report checklist**. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Windows/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:226,message,message,226,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,1,['message'],['message']
Integrability,**Describe the bug**; During the build of the latest develop version I get the following warning message; SHA-1 tag stored in index does not match SHA tag stored in this script. **To Reproduce**; Just run the meson script. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: GCC 8.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 7.0.7,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1100:97,message,message,97,https://su2code.github.io,https://github.com/su2code/SU2/issues/1100,1,['message'],['message']
Integrability,"**Describe the bug**; Error at link time when compiling SU2 without mpi (""-Dwith-mpi=disabled"") with debug flags (""--buildtype=debug""). This problem does not seem to occur when compiling with release (""--buildtype=release""). Error message:; ```; /usr/bin/ld: Common/src/libSU2Common.a(interface_interpolation_CMirror.cpp.o): in function `CMirror::SetTransferCoeff(CConfig const* const*)':; /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:173: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:174: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:175: undefined reference to `MPI_STATUS_IGNORE'; ```; I noticed that this method does not use any MPI preprocessor flags (i.e. this function does not make use of #ifdef HAVE_MPI); however, it's not obvious to me why switching the build type to release would solve the problem. . **To Reproduce**; Configure with meson:; ""./meson.py build --reconfigure --buildtype=debug -Dwith-mpi=disabled""; Build with ninja:; ./ninja -C build install. **Desktop (please complete the following information):**; - OS: Arch Linux 5.6.3-arch1-1; - C++ compiler and version: gcc (Arch Linux 9.3.0-1) 9.3.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: SU2 v. 7.0.3, branch: develop, commit: c093a62a2b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/956:231,message,message,231,https://su2code.github.io,https://github.com/su2code/SU2/issues/956,1,['message'],['message']
Integrability,"**Describe the bug**; Hi,all.; I encountered a failure when I was running a unit test. **To Reproduce**; Here are my reproduction steps; ```; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1331:249,message,message,249,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331,1,['message'],['message']
Integrability,"**Describe the bug**; I noticed I was converging to quite different solutions when MUSCL is on v. off for a much larger case I am doing using SU2 with SST-2003m, so I created a smaller 2D case to test out why this may be occurring. Below is a screenshot of one of the meshes, where the pinkish line indicates a value for an interface that I plot heat fluxes from. I have generated several meshes with increasing level of refinement from A to D. ![image](https://github.com/su2code/SU2/assets/116454159/4d04287e-b111-45b5-96dd-6b9cc5f18217). It appears that there may be either a misunderstanding on my part with the implementation of SST-V2003m w/ MUSCL, or that a bug exists in SU2 for it. I got very unusual and different results when using MUSCL vs. not. To further look into this, I also completed additional simulations using `KIND_TURB_MODEL=SA`, which got me much more reasonable-looking results. Please see the plots below:. ![image](https://github.com/su2code/SU2/assets/116454159/e5d80bbd-9bc2-4f3c-a6e2-bb5dfc43336b); ![image](https://github.com/su2code/SU2/assets/116454159/3804bdf1-7f99-4584-9683-cfbfd7dfa916). Lastly, here is the config file:; [config.txt](https://github.com/su2code/SU2/files/12155765/M6_LowRe.txt). Note that the ""MUSCL=ON"" in the plots indicate the solution for both `MUSCL_FLOW=YES` and `MUSCL_TURB=YES`. That is the only difference between config files. Also, I tried using `MARKER_RIEMANN`, `MARKER_OUTLET`, and `MARKER_SUPERSONIC_OUTLET` on the outlets with no success on fixing this discrepancy, so I believe it is not related to the boundary conditions. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2088:324,interface,interface,324,https://su2code.github.io,https://github.com/su2code/SU2/issues/2088,1,['interface'],['interface']
Integrability,"**Describe the bug**; If you follow the Quickstart tutorial, you get one warning (""The adjoint solver should use a non-dimensional flow solution"") and this error when running the CONTINUOUS_ADJOINT pass:. ```; SU2_CFD inv_NACA0012.cfg; WARNING: The adjoint solver should use a non-dimensional flow solution. Error in ""void CConfig::SetPostprocessing(unsigned short, unsigned short, unsigned short)"": ; -------------------------------------------------------------------------; CFL adaption only available for finite-volume fluid solvers.; Please select CFL_ADAPT = NO.; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; ```. **To Reproduce**; *Just follow the steps in the tutorial, one by one, and when you get to step 3 in the CONTINUOUS_ADJOINT run, you get the error.*. **Desktop (please complete the following information):**; - SU2 Version: [e.g., v7.0.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/887:924,depend,depending,924,https://su2code.github.io,https://github.com/su2code/SU2/issues/887,1,['depend'],['depending']
Integrability,"**Describe the bug**; In a RANS computation of a 2.5D section of a wing, the periodic plane exhibits oscillations of pressure in the boundary layer. The issue is only present on the periodic face, not in the volume. Using a CFL of 1 helps but the instability does not disappear. A CFL of 10 leads to a crash of the computation with multiple spots like on the screenshot. Would it be linked to issue #1090 ?. ![pres_per_face](https://user-images.githubusercontent.com/91184648/145236024-fc713cbd-66d8-40b3-9036-7c1925f10229.png); ![pres_cut](https://user-images.githubusercontent.com/91184648/145236048-a91ca27a-c1c9-4d6c-9639-8b34ea5de307.png). Here is the config file:; [hl_3d_landing.txt](https://github.com/su2code/SU2/files/7677092/hl_3d_landing.txt). **Hardware and software:**; - OS: Linux Red Hat ELS 6.5; - Nodes: Intel Xeon Ivy bridge; - C++ compiler and version: intel/2018.0.1; - MPI implementation and version: intelmpi/2018.0.1; - SU2 Version: v7.2.1. Thank you for looking at this issue and for any help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1467:837,bridg,bridge,837,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467,1,['bridg'],['bridge']
Integrability,"**Describe the bug**; In my transient, compressible simulation the achievable residuals strongly depend on the type of boundary condition that is specified for a wall:. MARKER_ISOTHERMAL / MARKER_HEATFLUX (h=0):; rms_density < 1e-8; rms_energy < 1e-3. MARKER_HEATTRANSFER; rms_density > 1e-5; rms_energy > 1e-1. Here the development of the overall residuals can be seen. (other residuals look similar).; ![grafik](https://user-images.githubusercontent.com/42602495/210543380-b231a0a1-6ccf-49cd-94aa-b84ffa901815.png). The temperature development along one of the walls can be seen here and is what I'd expect.; ![grafik](https://user-images.githubusercontent.com/42602495/210544363-b4302822-91fe-411a-958c-e603fddec227.png). A more detailed analysis of local residuals shows, that the energy residuals are the largest directly at the convective wall:; ![grafik](https://user-images.githubusercontent.com/42602495/210545535-70fca515-c2e0-45ed-bed8-1fd54dab0a11.png). I've tried various numerical schemes, limiters, linear solvers and gradient reconstruction methods, but none of these settings seem to improve convergence with convective BCs. I am not sure if this is an actual bug or simply a limitation due to the way the convective BC is implemented. So far the solution looks realistic, but since my case is very sensitive to cumulative heat losses this may possibly have an influence on the final outcome. **Case summary**. - Solver: RANS, transient; - Domain: 2D Axisymmetric; - Convection: SLAU2, NTS_DUCROS; - Gradients: GREEN_GAUSS; - Turbulence: SST V2003m, Sustaining; - Slope Limiter: Venkat_Wang; - Time: 2nd Order. Full setup, mesh and outputs can be found [here](https://tumde-my.sharepoint.com/:u:/g/personal/bauer_christian_tum_de/EVbBCu8i8b9FuXNl4QyC0icB3mnnd2Ac3dRFAlRI-HrVSg?e=7nA0Vt). **Desktop (please complete the following information):**; - OS: SLES 15.1; - C++ compiler and version: Intel 2021.4; - MPI implementation and version: intelMPI 2019; - SU2 Version: current master ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872:97,depend,depend,97,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872,1,['depend'],['depend']
Integrability,"**Describe the bug**; It looks like compilation depends on being able to reach the coolprop library, even when it is not used:; https://www.cfd-online.com/Forums/su2-installation/246859-coolprop-link-7-5-0-doesnt-work.html. I already noticed when compiling (in linux, not windows as the cfd-online post) that I always see some coolprop message. I guess some coolprop actions need to be inside some 'if coolprop' condition, depending on the presence of the coolprop compiler option (-Denable-coolprop). Besides that, it looks like the auto-fetch of coolprop in windows does not work, at least for the cfd-online user.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1868:48,depend,depends,48,https://su2code.github.io,https://github.com/su2code/SU2/issues/1868,3,"['depend', 'message']","['depending', 'depends', 'message']"
Integrability,"**Describe the bug**; It looks like we do not actually need to prescribe unit normal vectors for MARKER_INLET, because it is normalized in the code, e.g. in BC_Inlet. When a 2D inlet is at a 45 degree angle, the normal vector of the inlet can be given as [1.0, 1.0] in the config file. However, when you want to generate and use an inlet profile for this, you will get an error message . ```; ERROR: Found these values in columns 4 - 5; [1.000000e+00, 1.000000e+00]; These values should be components of a unit vector for direction,; but their magnitude is: 1.414214e+00; ```; I suggest to accept non-normalized vectors as input. This simply means that we remove this check for inlet profiles and update the description for the inlet boundary condition: **accepts surface normal vector** instead of **accepts surface unit normal vector**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1495:378,message,message,378,https://su2code.github.io,https://github.com/su2code/SU2/issues/1495,1,['message'],['message']
Integrability,"**Describe the bug**; Python cannot import pysu2 module with error message: . ```; import pysu2; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/.../feature_pysu2_fsi_adjoint/SU2_PY/pySU2/pysu2.py"", line 17, in <module>; import _pysu2; ModuleNotFoundError: No module named '_pysu2'; ```. This issue seems to be persistent for different OSX machines under standard build when enabling python wrapper. Tried to build wrapper through swig manually and yet this problem persists. . **Desktop (please complete the following information):**; - OS: Mac OSX 12.3; - C++ compiler and version: apple clang 13.1.6; - MPI implementation and version: mpich 4.0.1; - SU2 Version: 7.3; - Python Version: 3.9.7; - SWIG Version: 4.0.2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1606:67,message,message,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/1606,3,"['message', 'wrap']","['message', 'wrapper']"
Integrability,"**Describe the bug**; SWIG fails with; ```Nothing known about namespace 'medi'``` from; https://github.com/su2code/SU2/blob/9446c8bc207574bde8fe0bfac285070d467bab4f/Common/include/mpi_structure.hpp#L57; See https://github.com/swig/swig/issues/1068. Using `-includeall` is not an option since the wrapper takes far too long to generate, I cancelled it after waiting for 15 minutes. **To Reproduce**; Build SU2 with python wrapper, MPI and autodiff. **Desktop (please complete the following information):**; - OS: any; - C++ compiler and version: any; - MPI implementation and version: any; - SU2 Version: any with python AD wrapper enabled",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/819:296,wrap,wrapper,296,https://su2code.github.io,https://github.com/su2code/SU2/issues/819,3,['wrap'],['wrapper']
Integrability,"**Describe the bug**; The rotating frame grid velocities are not set properly if used in 2-D. This is due to the error in SetRotationalVelocity routine in CGeomtery class (Cgeometry.cpp line 3881). The loop counter to find the Omega only goes upto nDim and in 2-D any rotation about the Z-axis is not considered. . **To Reproduce**; https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade is an example of a test case using rotating frame simulations in 2-D. Some of the turbomachinery options did not work for me, so I changed the turbomachinery markers to simple inlet and outlet just to get something running in this [config file.](https://github.com/su2code/SU2/files/4158761/centrifugal_blade.txt). The fix is fairly straightforward to change the loop counter to 3 in line 3891, but I wasn't sure if it is appropriate to make a PR for just this. Is it possible to add it into one of the existing ones?. Regards,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/860:144,rout,routine,144,https://su2code.github.io,https://github.com/su2code/SU2/issues/860,1,['rout'],['routine']
Integrability,"**Describe the bug**; There is a build error on 'develop' with the the Python wrapper enabled from recent code changes. The error points back to [line 3925 in CGeometry.cpp ](https://github.com/su2code/SU2/blob/develop/Common/src/geometry/CGeometry.cpp#L3925). ```; [1087/1090] Linking target SU2_DOT/src/SU2_DOT_AD; FAILED: SU2_DOT/src/SU2_DOT_AD ; c++ -o SU2_DOT/src/SU2_DOT_AD SU2_DOT/src/SU2_DOT_AD.p/SU2_DOT.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-rpath,/usr/lib/openmpi/lib -Wl,-rpath-link,/usr/lib/openmpi/lib -Wl,--start-group externals/cgns/libcgns.a externals/cgns/hdf5/libsu2hdf5.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2CommonAD.a SU2_CFD/src/libSU2core_AD.a /usr/lib/x86_64-linux-gnu/libz.so -lm -ldl -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags /usr/lib/openmpi/lib/libmpi.so -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags /usr/lib/openmpi/lib/libmpi_cxx.so -Wl,--end-group -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags; Common/src/libSU2CommonAD.a.p/geometry_CGeometry.cpp.o: In function `CGeometry::GetLineletInfo(CConfig const*) const':; /home/patelh/Packages/develop/build/../Common/src/geometry/CGeometry.cpp:3925: undefined reference to `CGeometry::CLineletInfo::ALPHA_ISOTROPIC'; collect2: error: ld return",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1873:78,wrap,wrapper,78,https://su2code.github.io,https://github.com/su2code/SU2/issues/1873,1,['wrap'],['wrapper']
Integrability,"**Describe the bug**; There is a possible bug in the GetP_Matrix routines in the CNumerics class.; After looking into the computations, I think it only gets called in the AUSM schemes for approximate Jacobians, it seems some terms different then the P matrix computation in Roe solver/generalized routine. . When doing invP*P, has a large off-diagonal terms. Im making a note of it here, but will work on verifying/and fixing",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1276:65,rout,routines,65,https://su2code.github.io,https://github.com/su2code/SU2/issues/1276,2,['rout'],"['routine', 'routines']"
Integrability,"**Describe the bug**; When compiling the master branch or v7.1.1 of SU2, as described in the [Quick compilation guide](https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#quick-compilation-guide) with gcc version 11.1.0, the ninja command fails, saying that `'numeric_limits' is not a member of 'std'`. **Likely reason**; There were [header dependency changes in GCC 11](https://www.gnu.org/software/gcc/gcc-11/porting_to.html#header-dep-changes). Probably because of this, the header `<limits>` is not (recursively) `#include`d from the file. Common/include/geometry/primal_grid/CPrimalGrid.hpp. any more. Thus `std::numeric_limits` has not been declared when it is used in line 243. **Solution**; `#include <limits>` in `CPrimalGrid.hpp`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1293:346,depend,dependency,346,https://su2code.github.io,https://github.com/su2code/SU2/issues/1293,1,['depend'],['dependency']
Integrability,"**Describe the bug**; When creating a CDriver instance, for example through the Python wrapper, with an MPI communicator which is defined only on a subset of the processes on which the MPI library was initialised, SU2 will deadlock. This seems to be because most of the MPI communication and synchronisation operations in SU2 explicitly refer to the global `MPI_COMM_WORLD`. The issue arose when attempting to control several Euler/RANS SU2 `CSinglezoneDriver` and `CDiscAdjSinglezoneDriver` instances in parallel (i.e. simultaneously) within a larger optimisation code, which provides each analysis with a subset of the ranks in its own MPI communicator. Naively replacing _all_ references to `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` throughout the code (except where it is defined, and where it is used to initialise the MPI wrapper in the SU2_XXX.cpp files) prevents the deadlock and results in the desired behaviour. However, I imagine that this ""fix"" may well cause all sorts of issues outside of my own, limited use case. **To Reproduce**; The issue can be reproduced with any SU2_CFD configuration file and mesh, run in parallel using the Python wrapper as follows: ; ```; from mpi4py import MPI; import pysu2 # or pysu2ad. filename = 'example.cfg'; zones = 1. rank = MPI.COMM_WORLD.Get_rank(); size = MPI.COMM_WORLD.Get_size(). group = MPI.COMM_WORLD.group.Excl([0]) # exclude the first rank; comm = MPI.COMM_WORLD.Create_group(group). if comm: # is False only on the excluded rank; print(""Running SU2 on global rank {} of {} ... "".format(rank, size)). # create SU2 instance -- will hang during Geometry preprocessing; instance = pysu2.CSinglezoneDriver(filename, zones, comm). else:; print(""Doing nothing on global rank {} of {} ... "".format(rank, size)). ```. **Desktop (please complete the following information):**; - OS: Redhat 7.7; - C++ compiler and version: g++ (GCC) 4.8.5; - MPI implementation and version: MPICH 3.2.1; - SU2 Version: 7.0.2 ""Blackbird"" (looks to be reproducible on",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1179:87,wrap,wrapper,87,https://su2code.github.io,https://github.com/su2code/SU2/issues/1179,2,['wrap'],['wrapper']
Integrability,"**Describe the bug**; When running any dry run in the form; `SU2_CFD -d <configname>.cfg`; an integer divide by zero (`Floating point exception: integer divide by zero`) happens. A backtrace pointed me towards `roundUpDiv (numerator=0, denominator=0)` in `omp_structure.hpp` +104 and further up `computeStaticChunkSize (totalWork=0, numThreads=1, maxChunkSize=4096)`. I guess one might check somewhere along the line whether there is even work to do, i.e. wrap the `*.Initialize(nPoint,...)` in `C<Inc>EulerSolver` etc in `if (nPoint != 0)` conditionals (that got the Quickstart working again for me). But maybe there is a better more elegant solution without too much overhead. I would like @pcarruscag to take a look as the omp stuff is involved :). **To Reproduce**; Every dryrun I tried, using Quickstart should be enough to understand the problem. **Desktop (please complete the following information):**; - OS: Red Hat Enterprise Linux 7.6; - C++ compiler and version: GCC 4.8.5; - MPI implementation and version: openMPI 3.1.2; - SU2 Version: latest develop, but this probably affects 7.0.1 as well, i.e. hotfix time 🕙",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/857:456,wrap,wrap,456,https://su2code.github.io,https://github.com/su2code/SU2/issues/857,1,['wrap'],['wrap']
Integrability,"**Describe the bug**; When running under valgrind I get the following error message from valgrind for the develop version. ==46590== Invalid read of size 1; ==46590== at 0x8C9CA5: CConfig::SetConfig_Parsing(std::istream&) (CConfig.cpp:2836); ==46590== by 0x8C9A6E: CConfig::SetConfig_Parsing(char*) (CConfig.cpp:2797); ==46590== by 0x8A98F1: CConfig::CConfig(char*, unsigned short) (CConfig.cpp:205); ==46590== by 0x1BD2FA: main (SU2_CFD.cpp:99); ==46590== Address 0x5eae8ef is 1 bytes before a block of size 161 alloc'd. **To Reproduce**; Take e.g. the config file of rae2822 rans test case and run under valgrind. To avoid a lot of MPI warnings, create the sequential executable. **Desktop (please complete the following information):**; - Operating system: Ubuntu 18.04; - C++ compiler and version: g++ (GCC) 8.4.0; - MPI implementation and version: sequential; - SU2 Version: 7.0.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1040:76,message,message,76,https://su2code.github.io,https://github.com/su2code/SU2/issues/1040,1,['message'],['message']
Integrability,"**Describe the bug**; When using species transport in a problem using the fluid-fluid interface there is no information on species being transmitted across the interface. In addition if you use the MARKER_ANALYZE in the cfg file the code bombs on startup as follows:. Error in ""virtual void CMultizoneOutput::SetMultizoneHistoryOutputFields( const COutput* const*, const CConfig* const*)"":; -------------------------------------------------------------------------; Per Surface output group unknown: SPECIES_COEFF_SURF; ------------------------------ Error Exit ------------------------------. **Desktop (please complete the following information):**; - Ubuntu 18.04.5 on WSLV2 on Windows 10; -gcc version 7.5.0; - Openmpi 2.1.1; - SU2 Version: 7.4.0. [MZ.zip](https://github.com/su2code/SU2/files/9993823/MZ.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1818:86,interface,interface,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/1818,2,['interface'],['interface']
Integrability,"**Describe the bug**; While doing shape optimization for drag minimization with the Euler solver, I received a negative drag for the optimized geometry. This seemed strange to me, so I investigated it and realized, that the CD in SU2 seems to be computed incorrectly in some cases. . During the investigation, I computed the drag force in Paraview based on the SU2 flow result and compared it to the drag force computed by SU2 both for the initial and the final optimization geometry. The results did not match, which is not what I would have expected. . In SU2, I compute the drag force by multiplying CD with the non-dimensional factor written to the forces_breakdown file. For Paraview, I wrote a script which does the following to compute the drag force:; - Load surface flow solution for the wing surface; - Compute surface normals; - Compute Drag = -Pressure*(Normals_X * cos(AoA/180 * 3.1415) + Normals_Z * sin(AoA/180 * 3.1415)); - Integrate this over the whole wing surface to get the total drag force. You can also find this Paraview script attached.; I validated the Paraview script for multiple simple testcases, for which SU2 and Paraview gave me exactly the same drag force. When I applied it to the initial optimization geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific cr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:940,Integrat,Integrate,940,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['Integrat'],['Integrate']
Integrability,"**Description**. The Coupled RHT-CFD Adjoint test in the serial_regression_AD.py is designed to compare the calculated gradient file with a reference.; Yet the routine run_filediff() is never called for this test, only the routine run_test(). I tried to modify the reference file 'of_grad_cd.csv.ref' and checked it on my local machine. The output still shows that the test has passed, even though the calculated gradient file and the reference file are different. **To Reproduce**; Change the reference values in the file 'of_grad_cd.csv.ref' and run serial_regression.py. This might be a bug in this test. Can you check if the test fails in the automated tests if a wrong reference gradient file is used?. **Desktop (please complete the following information):**. OS: Linux - Fedora; C++ compiler and version: g++ (GCC) 11.2.1; MPI implementation and version: Open MPI; SU2 Version: 7.2.1. Thanks and Best Regards,; Thomas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1431:160,rout,routine,160,https://su2code.github.io,https://github.com/su2code/SU2/issues/1431,2,['rout'],['routine']
Integrability,"**Is your feature request related to a problem? Please describe.**. I've noticed, that the flow solutions of SU2 have changed shortly before launch of version 7.0.0. In detail, I've computed an unsteady flow field around an airfoil with high angle of attack and its design sensitivities. Whereas the sensitivities computed with the old version exhibited periodic behaviour, the sensitivities computed with the new version explode and show somehow chaotic behaviour. ; Above sensitivities where computed using the `direct_differentiation.py` script. ; Naturally an adjoint sensitivity computation with the newer version fails to converge. In the older version, adjoint and direct sensitivities match. . By older version, I mean before commit https://github.com/su2code/SU2/commit/56ee75 ,; and by newer version, I mean after commit https://github.com/su2code/SU2/commit/714d7e9 . Somewhere between these two commits, the unit tests for (unsteady) flows have been adjusted, so I think this is where the change happened. . **Describe the solution you'd like**. Is it possible to provide an option to switch to the old behavior of SU2 in the sense of this flow computation?; What was the reason for this change, so to say?. I think @BeckettZhou and @talbring might be interested in this. . ** Files to reproduce the issue**. I've attached two .zip files. One contains the an example of the older code and one contains the example of the newer code. You can see that both .cfg files are identical. To emphasize the issue, compare the time dependent DRAG and D_DRAG of both history.csv files, that are provided. [01_older.zip](https://github.com/su2code/SU2/files/4493235/01_older.zip); [02_newer.zip](https://github.com/su2code/SU2/files/4493236/02_newer.zip). Kind regards,; Steffen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/940:1534,depend,dependent,1534,https://su2code.github.io,https://github.com/su2code/SU2/issues/940,1,['depend'],['dependent']
Integrability,"**Is your feature request related to a problem? Please describe.**; When building the AD version of SU2 with the Intel compiler a lot of warnings are given. Most of these warnings are of the type. warning #2196: routine is both ""inline"" and ""noinline"". The files where the warnings come from are; externals/codi/include/codi/tapes/modules/tapeBaseModule.hpp; externals/codi/include/codi/tapes/chunkVector.hpp; externals/codi/include/codi/tools/data/jacobian.hpp. The total number of warnings is roughly 3000, so any other information is very difficult to pick up. **Describe the solution you'd like**; Remove either the inline or noline, if possible. **Describe alternatives you've considered**; We can ignore the warning, if you think it is not a relevant one. However, I cannot judge that. **Additional context**; I can provide more information, e.g. the entire log file of the build process.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1087:212,rout,routine,212,https://su2code.github.io,https://github.com/su2code/SU2/issues/1087,1,['rout'],['routine']
Integrability,"**Is your feature request related to a problem? Please describe.**; When installing software on a high performance computing cluster, we typically want to reuse existing dependencies. SU2 seems to download a *lot* of things which we already have: autotools, catch2, cgns, metis, ninja, parmetis, ... . It will very likely *not* compile those correctly for our system. . **Describe the solution you'd like**; Give a flag to disable all download and fail when dependencies are not found. Give corresponding flags to point to the dependencies' folders, and use those. . **Describe alternatives you've considered**; Reverse engineering SU2's meson/ninja build to patch it to use existing dependencies.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086:170,depend,dependencies,170,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086,4,['depend'],['dependencies']
Integrability,"**Issue description**. Hi all, I am trying to run a rather large mesh computation with SU2. The mesh counts 170M cells. I managed to run it with the native SU2 mesh format with 480 cores but the preprocessing step took 90 minutes with a huge load on the file system impacting all the other users of the cluster. To reduce the load, I was thinking about using the CGNS mesh file format. However the preprocessing step fills all the RAM memory available and the job fails. All the setup being identical. . By reducing the number of cells, I am able to run with the CGNS file format. Is it a common behavior with the CGNS file format?. **Hardware and software :**; - OS: Linux Red Hat ELS 6.5; - Nodes: Intel Xeon Ivy bridge; - C++ compiler and version: intel/2018.0.1; - MPI implementation and version: intelmpi/2018.0.1; - SU2 Version: v7.2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1378:715,bridg,bridge,715,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378,1,['bridg'],['bridge']
Integrability,"*; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/FDa/FDa045/programs/SU2/SU2-7.2.1 -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/home/FDa/FDa045/programs/intel/2020_update4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/in",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:1232,depend,dependency,1232,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,1,['depend'],['dependency']
Integrability,", ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; ... and two other processes waiting at ; <details>; <summary>that place</summary>. ```; #0 ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:3225,integrat,integration,3225,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,", filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:3652,interface,interface,3652,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,2,['interface'],['interface']
Integrability,"- Adding multipoint design capability based on the Stability Functions python script example. I can add an example in test cases (if you are interested).; - Adding some consistency in CL, CD, CSF vs. Clift, CDrag, CSidyForce in the python scripts.; - Detecting a bug in fluid interface and updating custom obj. function capability",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/406:276,interface,interface,276,https://su2code.github.io,https://github.com/su2code/SU2/pull/406,1,['interface'],['interface']
Integrability,"----------------- Space Numerical Integration ----------------------; Jameson-Schmidt-Turkel scheme (2nd order in space) for the flow inviscid terms.; JST viscous coefficients (2nd & 4th): 0.5, 0.02.; The method includes a grid stretching correction (p = 0.3).; Scalar upwind solver for the turbulence model.; First order integration in space.; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 999999999 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot binary (.plt).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; +-----------------------------------------+; | Marker Type| Marker Name|; +-----------------------------------------+; | Far-field| Tria-2-Bndry|; | | Tria-4-B",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:1762,integrat,integration,1762,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['integrat'],['integration']
Integrability,"-----------. Simulation Run using the Single-zone Driver; +----------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[nu]| CL| CD|; +----------------------------------------------------------------+; | 0| -5.507608| -6.134199| 0.484414| 0.030848|; | 1| -4.574136| -6.098123| 0.484453| 0.030598|; [...]; | 10| -5.466734| -4.908028| 0.484509| 0.029445|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /mnt/cfddata/WLiao/CRJ700_su2/CRJ700_inch_roe_TEST/,; Command = mpirun -np 2 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '139'; [gen2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); [gen2node1:232297:0:232297] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005af5f8 CFileWriter::OpenMPIFile() ???:0; 5 0x00000000005c38d3 CSU2BinaryF",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971:1682,interface,interface,1682,https://su2code.github.io,https://github.com/su2code/SU2/issues/971,1,['interface'],['interface']
Integrability,"-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 380, in obj_df; grad = su2grad(this_obj,grad_method,config,state); File ""/usr/local/bin/SU2/eval/gradients.py"", line 96, in gradient; grads = adjoint( func_name, config, state ); File ""/usr/local/bin/SU2/eval/gradients.py"", line 294, in adjoint; info = su2run.adjoint(konfig); File ""/usr/local/bin/SU2/run/adjoint.py"", line 79, in adjoint; SU2_CFD(konfig); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2/SU2-7.0.4/test1/DESIGNS/DSN_001/ADJOINT_DRAG/,; Command = /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD config_CFD_AD.cfg; SU2 process returned error '127'; /bin/sh: 1: /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD: not found; ```; So I tried to build AD under the instruction. I copied the exact same thing and pasted to the command. The error is:. ```; Checking the status of submodules; =====================================================================; Found an old or unspecified version of CoDiPack in externals/codi.; Use -u to reset module.; ```; However, when I try to update/reinstall the codi, I failed in the extraction process. The error is:; ```; Checking the status of submodules; =====================================================================. git command failed (either git is not installed or this is not a git repository). Using fa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:2649,interface,interface,2649,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['interface'],['interface']
Integrability,"-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9547,depend,dependabot-automerge-start,9547,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@depend",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2385,depend,dependency-name,2385,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['depend'],['dependency-name']
Integrability,"...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:11234,Depend,Dependabot,11234,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,18,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,".1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:5518,Depend,Dependabot,5518,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,17,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,".24.3 - 15 Feb 2024</h2>; <ul>; <li>Fix an issue where the CodeQL Action would fail to load a configuration specified by the <code>config</code> input to the <code>init</code> Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2147"">#2147</a></li>; </ul>; <h2>3.24.2 - 15 Feb 2024</h2>; <ul>; <li>Enable improved multi-threaded performance on larger runners for GitHub Enterprise Server users. This feature is already available to GitHub.com users. <a href=""https://redirect.github.com/github/codeql-action/pull/2141"">#2141</a></li>; </ul>; <h2>3.24.1 - 13 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.2. <a href=""https://redirect.github.com/github/codeql-action/pull/2124"">#2124</a></li>; <li>The CodeQL action no longer fails if it can't write to the telemetry api endpoint. <a href=""https://redirect.github.com/github/codeql-action/pull/2121"">#2121</a></li>; </ul>; <h2>3.24.0 - 02 Feb 2024</h2>; <ul>; <li>CodeQL Python analysis will no longer install dependencies on GitHub Enterprise Server, as is already the case for GitHub.com. See <a href=""https://github.com/github/codeql-action/blob/main/#3230---08-jan-2024"">release notes for 3.23.0</a> for more details. <a href=""https://redirect.github.com/github/codeql-action/pull/2106"">#2106</a></li>; </ul>; <h2>3.23.2 - 26 Jan 2024</h2>; <ul>; <li>On Linux, the maximum possible value for the <code>--threads</code> option now respects the CPU count as specified in <code>cgroup</code> files to more accurately reflect the number of available cores when running in containers. <a href=""https://redirect.github.com/github/codeql-action/pull/2083"">#2083</a></li>; <li>Update default CodeQL bundle version to 2.16.1. <a href=""https://redirect.github.com/github/codeql-action/pull/2096"">#2096</a></li>; </ul>; <h2>3.23.1 - 17 Jan 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.0. <a href=""https://redirect.github.com/github/codeql-action/pull/2073"">#2073</a></li>; <li>Change the retenti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:11463,depend,dependencies,11463,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['depend'],['dependencies']
Integrability,".dependabot.com/actions/upload-artifact/issues/320"">#320</a> from actions/dependabot/npm_and_yarn/ansi-regex-4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/189315d9106f43a2a8eb60836608bb96b1f69d77""><code>189315d</code></a> Bump ansi-regex from 4.1.0 to 4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d159c2d80bf32e77611286e4d71bfe6d15208d88""><code>d159c2d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/297"">#297</a> from actions/dependabot/npm_and_yarn/ajv-6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/c26a7ba4b5dbaecea906fec3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Depen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:4467,depend,dependabot,4467,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependabot']
Integrability,"//github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4088,depend,dependabot,4088,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"//github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (depe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:1846,depend,dependabot,1846,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['depend'],['dependabot']
Integrability,"//github.com/actions/setup-python/commit/f6cc428f535856f9c23558d01765a42a4d6cf758""><code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=""https://redirect.github.com/actions/setup-python/issues/724"">#724</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060""><code>5f2af21</code></a> Add GraalPy support (<a href=""https://redirect.github.com/actions/setup-python/issues/694"">#694</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/setup-python/compare/v4...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:7735,Depend,Dependabot,7735,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['Depend'],['Dependabot']
Integrability,"/SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:6763,integrat,integration,6763,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"/actions/download-artifact/commit/f71c0e3da3bb6b4fcc53196b9ac75ee981db5bc6""><code>f71c0e3</code></a> Revert &quot;licensed&quot;</li>; <li><a href=""https://github.com/actions/download-artifact/commit/7c63dfde29f42bb9cb0f61b67e54c91106a6586e""><code>7c63dfd</code></a> licensed</li>; <li><a href=""https://github.com/actions/download-artifact/commit/67d37cd34678091933f0a88cd1bb026171ea20d2""><code>67d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:4857,depend,dependency-name,4857,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['depend'],['dependency-name']
Integrability,"/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:10320,depend,dependabot-automerge-start,10320,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"/download-artifact/commit/67d37cd34678091933f0a88cd1bb026171ea20d2""><code>67d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:5242,depend,dependabot,5242,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['depend'],['dependabot']
Integrability,"/github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2635,Depend,Dependabot,2635,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['Depend'],['Dependabot']
Integrability,"/github.com/mheap/github-action-required-labels/commit/65d195bf4a9b738e8f2a9c540d0cc182bb80df72""><code>65d195b</code></a> Add <code>labels</code> output which will contain all the matching/intersecting labels i...</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/5384b5bb3bf2c6b1c100a2a5821e1ddac8c38cae""><code>5384b5b</code></a> Add newline after the match token in error comments (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/55"">#55</a>)</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/e33092117bdd8c435e9b654d53726c6936f19518""><code>e330921</code></a> Only use a single comment when the action fails (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/53"">#53</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/mheap/github-action-required-labels/compare/v3...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:5563,Depend,Dependabot,5563,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,4,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:10477,Depend,Dependabot,10477,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9315,depend,dependabot-security-updates,9315,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot-security-updates']
Integrability,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:2844,interface,interfaces,2844,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,4,"['depend', 'interface', 'wrap']","['dependent', 'interfaces', 'wrapper']"
Integrability,"067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:11167,Depend,Dependabot,11167,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Depend'],['Dependabot']
Integrability,"06821/51894695-c4846680-23a8-11e9-87f5-35041d71fee4.gif). For the latter case I haven’t yet rotated the inner circle, because there are some missing features for dynamic meshes in the incompressible solver. The previous test case for steady-state flows has been added. One for unsteady flows will be enabled once the new output is in place, as the current output structure makes the regression scripts fail. The previous, however, opened a can of worms, as there were some physics based calls in the parent transfer structure (e.g. `GetnSlidingStates()`, `SetSlidingState()` and `SetnSlidingStates()`) that made the incompressible CHT cases run into problems. . So I’ve also taken the chance to move some initialization and some calls to the specific physics-based transfer structures, making use of the polymorphism of the transfer code. This way the parent class remains opaque to the physics. At the same time, I cleaned up some long-time unused routines, made the Broadcast_Data the default for zone interfaces, and removed the MATCHING_MESH option as it is just a particular case of Nearest Neighbour. ## Related Work. - Complements the sliding interface feature by @LaSerpe in #389 by adding the corresponding functions to the incompressible flow solver. - Removes MATCHING_MESH option as discussed with @pcarruscag in #597. - Removes some compilation warnings due to unused variables. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638:2331,rout,routines,2331,https://su2code.github.io,https://github.com/su2code/SU2/pull/638,3,"['interface', 'rout']","['interface', 'interfaces', 'routines']"
Integrability,"098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9637,Depend,Dependabot,9637,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Depend'],['Dependabot']
Integrability,"1.	While running in parallel a Fluid Structure Interaction case in SU2 for square cylinder with beam using the following command: **/usr/local/bin/parallel_computation.py -f config.cfg -n 12**; I am getting the following error: ; //; ('Unexpected error: ', <type 'exceptions.KeyError'>); Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 71, in parallel_computation; config = SU2.io.Config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 93, in __init__; self.read(filename); File ""/usr/local/bin/SU2/io/config.py"", line 142, in read; konfig = read_config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 784, in read_config; Mesh_Filename = data_dict['MESH_FILENAME']; KeyError: 'MESH_FILENAME'; //. 2.	It is running fine in serial using the command : *SU2_CFD config.cfg** . I have also tried with mpirun. ; 3.	Execution command: **mpirun -n 12 /usr/local/bin/SU2_CFD config.cfg** . the simulation is running but I guess parallel execution is not done properly because it is showing the following error: . [DESKTOP-8N08ELC:00100] 11 more processes have sent help message help-btl-vader.txt / cma-permission-denied; [DESKTOP-8N08ELC:00100] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. Kindly let me know how to resolve the issue. . OS : ubuntu 18.04 ; C++ version : GCC 7.3.0; MPI implementation and version : mpirun (Open MPI) 2.1.1; SU2 version: 7.6.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1094:1280,message,message,1280,https://su2code.github.io,https://github.com/su2code/SU2/issues/1094,2,['message'],"['message', 'messages']"
Integrability,"106</a></li>; </ul>; <h2>3.23.2 - 26 Jan 2024</h2>; <ul>; <li>On Linux, the maximum possible value for the <code>--threads</code> option now respects the CPU count as specified in <code>cgroup</code> files to more accurately reflect the number of available cores when running in containers. <a href=""https://redirect.github.com/github/codeql-action/pull/2083"">#2083</a></li>; <li>Update default CodeQL bundle version to 2.16.1. <a href=""https://redirect.github.com/github/codeql-action/pull/2096"">#2096</a></li>; </ul>; <h2>3.23.1 - 17 Jan 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.0. <a href=""https://redirect.github.com/github/codeql-action/pull/2073"">#2073</a></li>; <li>Change the retention period for uploaded debug artifacts to 7 days. Previously, this was whatever the repository default was. <a href=""https://redirect.github.com/github/codeql-action/pull/2079"">#2079</a></li>; </ul>; <h2>3.23.0 - 08 Jan 2024</h2>; <ul>; <li>We are rolling out a feature in January 2024 that will disable Python dependency installation by default for all users. This improves the speed of analysis while having only a very minor impact on results. You can override this behavior by setting <code>CODEQL_ACTION_DISABLE_PYTHON_DEPENDENCY_INSTALLATION=false</code> in your workflow, however we plan to remove this ability in future versions of the CodeQL Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2031"">#2031</a></li>; <li>The CodeQL Action now requires CodeQL version 2.11.6 or later. For more information, see <a href=""https://github.com/github/codeql-action/blob/main/#2227---16-nov-2023"">the corresponding changelog entry for CodeQL Action version 2.22.7</a>. <a href=""https://redirect.github.com/github/codeql-action/pull/2009"">#2009</a></li>; </ul>; <h2>3.22.12 - 22 Dec 2023</h2>; <ul>; <li>Update default CodeQL bundle version to 2.15.5. <a href=""https://redirect.github.com/github/codeql-action/pull/2047"">#2047</a></li>; </ul>; <h2>3.22.11 - 13 Dec 2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:12773,depend,dependency,12773,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['depend'],['dependency']
Integrability,2649| 2.12649| kg/m^3| 1|; | Temperature| 300| 300| K| 1|; | Total Energy| 216650| 86117.4| m^2/s^2| 2.51575|; | Velocity-X| 51.2923| 293.458| m/s| 0.174786|; | Velocity-Y| 9.04422| 293.458| m/s| 0.0308195|; |Velocity Magnitude| 52.0836| 293.458| m/s| 0.177482|; +--------------------------------------------------------------------------+; | Viscosity| 1.84592e-05| 624.034| N.s/m^2| 2.95804e-08|; | Conductivity| -| 179134| W/m^2.K| -|; | Turb. Kin. Energy| 10.1726| 86117.4| m^2/s^2| 0.000118125|; | Spec. Dissipation| 117188| 293.458| 1/s| 399.335|; +--------------------------------------------------------------------------+; | Mach Number| -| -| -| 0.15|; | Reynolds Number| -| -| -| 6e+06|; +--------------------------------------------------------------------------+. Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; Initialize Jacobian structure (Navier-Stokes). MG level: 1.; Initialize Jacobian structure (Navier-Stokes). MG level: 2.; Initialize Jacobian structure (Navier-Stokes). MG level: 3. ----------------- Integration and Numerics Preprocessing ----------------; Integration Preprocessing.; Numerics Preprocessing. ---------------------- Python Interface Preprocessing ---------------------; Setting customized boundary conditions for zone 0. -------------------------- Output Preprocessing ---------------------------; Zone 1: Euler/Navier-Stokes/RANS output structure.; History filename: history.dat. ------------------------------ Begin Solver -----------------------------; +----------------------------------------------------------------+; | Ext_Iter| Res[Rho]| Res[RhoU]| Res[RhoV]| Res[RhoE]|; +----------------------------------------------------------------+; | 0| -4.165003| -14.735159| -14.709795| -3.618985|; | 1| -4.436685| -4.791378| -4.176224| -3.887401|; | 2| -4.772585| -5.044913| -4.741431| -4.226021|; | 3| -4.865861| -4.936267| -4.736063| -4.319940|; | 4| -4.908893| -4.837536| -4.707111| -4.363705|. ```,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:8854,Integrat,Integration,8854,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,3,"['Integrat', 'Interface']","['Integration', 'Interface']"
Integrability,"2d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9918,depend,dependency-name,9918,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['depend'],['dependency-name']
Integrability,2nd try at fixing hdf5 + python wrapper problems,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1634:32,wrap,wrapper,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/1634,1,['wrap'],['wrapper']
Integrability,"3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15950,Depend,Dependabot,15950,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,33425]; [ system:14031] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7fa4e9b36b8b]; [ system:14031] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7fa4ea6a369d]; [ system:14031] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7fa4ea6a1846]; [ system:14031] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7fa4ea6a1873]; [ system:14031] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7fa4ea6a196e]; [ system:14031] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14031] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14031] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14031] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14031] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7fa4e9b1e76d]; [ system:14031] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14031] **\* End of error message ***; [ system:14029] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f749670169d]; [ system:14029] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f74966ff846]; [ system:14029] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f74966ff873]; [ system:14029] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f74966ff96e]; [ system:14029] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14029] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14029] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14029] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14029] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f7495b7c76d]; [ system:14029] [12] /usr/local/bin/SU2_CFD() [0x459049]; ## [ system:14029] **\* End of error message **,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:5627,message,message,5627,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['message'],['message']
Integrability,3rd try at fixing hdf5 + python wrapper problems,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1636:32,wrap,wrapper,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/1636,1,['wrap'],['wrapper']
Integrability,"4494](url):. > The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback.; > ; > Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; > ; > ```; > #!/usr/bin/env python; > ```; > ; > uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?; > ; > If it didn't build/install, you could go into extensions/AMGIO/su2io and run; > ; > ```; > python3 setup.py build_ext && python3 setup.py install; > ```; > ; > If it did build/install, try the command; > ; > ```; > python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; > ```. After doing `python3 setup.py build_ext && python3 setup.py install`, I encountered the following error:. > ```; > (temp_su5) takashi279@turing1:/dfs/user/takashi279/plasma/design/multiscale_adap3/SU2/externals/AMGIO/su2io$ python3 setup.py build_ext && python3 setup.py install; > running build_ext; > running install; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/install.py:37: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.; > setuptools.SetuptoolsDeprecationWarning,; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/easy_install.py:147: EasyInstallDeprecationWarning: easy_install command is deprecated. Use build and pip and other standards-based tools.; > EasyInstallDeprecationWarning,; > running bdist_egg; > error: Invalid distribution name or version syntax: -amgio-2.1.1; > ```. Am I missing any dependencies? I previously compiled SU2 feature_adap branch without issues, and have already installed pyAMG. My python version is 3.7.12.; Any help would be really appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1699:2805,depend,dependencies,2805,https://su2code.github.io,https://github.com/su2code/SU2/issues/1699,1,['depend'],['dependencies']
Integrability,"457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 107, in merge_solution; SU2_SOL( config ); File ""/usr/local/bin/SU2/run/interface.py"", line 207, in SOL; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 270, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2-7.3.0/xxxx/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -n 4 /home/xxx/SU2-7.3.0/SU2/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '139'; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 1 with PID 0 on node LAPTOP-DDQOFLU8 exited on signal 11 (Segmentation fault).; --------------------------------------------------------------------------; ```. The parallel computing for the case of SU2_CFD only can work well.; but I cannot find what the error '139' refers to. I will be very appreciated if I could get some feedback on this issue. Thank you!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:4962,message,message,4962,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['message'],['message']
Integrability,"5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:8067,Depend,Dependabot,8067,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9372,Depend,Dependabot,9372,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Depend'],['Dependabot']
Integrability,"5</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9819,Depend,Dependabot,9819,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7fb93c13c7b3]; [super:1134138] [15] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x47216e]; [super:1134138] *** End of error message ***; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 38 with PID 0 on node super exited on signal 6 (Aborted).; --------------------------------------------------------------------------; ```. Sometimes it hangs to the `UCX ERROR` lines straight after `Building the graph adjacency structure.` in Geometry Preprocessing and other times, it seems to run fine for the first batch of iterations until it hits the first solution file writing iteration (as set by `OUTPUT_WRT_FREQ`) show in the above output snip. Do you have any hints on how to debug this or what might be causing this? Thanks. **To Reproduce**; I've attached the mesh and config file in [this link](http",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156:2675,message,message,2675,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156,1,['message'],['message']
Integrability,"6150b47d41011c034b762053acaf6f""><code>6dd49bf</code></a> licensed only artifact</li>; <li><a href=""https://github.com/actions/download-artifact/commit/f71c0e3da3bb6b4fcc53196b9ac75ee981db5bc6""><code>f71c0e3</code></a> Revert &quot;licensed&quot;</li>; <li><a href=""https://github.com/actions/download-artifact/commit/7c63dfde29f42bb9cb0f61b67e54c91106a6586e""><code>7c63dfd</code></a> licensed</li>; <li><a href=""https://github.com/actions/download-artifact/commit/67d37cd34678091933f0a88cd1bb026171ea20d2""><code>67d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@depend",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:4758,Depend,Dependabot,4758,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"6e""><code>7c63dfd</code></a> licensed</li>; <li><a href=""https://github.com/actions/download-artifact/commit/67d37cd34678091933f0a88cd1bb026171ea20d2""><code>67d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:5096,Depend,Dependabot,5096,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['Depend'],['Dependabot']
Integrability,"7); Listing './FSI/io'...; Compiling './FSI/io/FSI_config.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the next set of similar error messages appears. This patch fix such `TabError`, `SyntaxError` (for `raise` and `print` functions), replace some indent tabs with spaces (generally with 8 spaces) before comments, remove trailing spaces where needed. Please fix this small issue as resulting patch to fix it for distributive build script is rather huge (~ 100 Kb). Many changes are in `SU2_PY/FSI/FSIInterface.py` and the `Split` mode of github change preview is more suitable to compare and to recheck the correctness of new indentation (or via Meld application). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/983:2026,message,messages,2026,https://su2code.github.io,https://github.com/su2code/SU2/pull/983,1,['message'],['messages']
Integrability,"7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15764,depend,dependabot,15764,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['depend'],['dependabot']
Integrability,"7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2781,depend,dependabot,2781,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['depend'],['dependabot']
Integrability,7d15425]; [ system:14030] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f13a7d18b8b]; [ system:14030] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f13a888569d]; [ system:14030] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f13a8883846]; [ system:14030] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f13a8883873]; [ system:14030] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f13a888396e]; [ system:14030] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14030] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14030] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14030] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14030] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f13a7d0076d]; [ system:14030] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14030] **\* End of error message ***; [ system:14031] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7fa4e9ecccb0]; [ system:14031] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7fa4e9b33425]; [ system:14031] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7fa4e9b36b8b]; [ system:14031] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7fa4ea6a369d]; [ system:14031] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7fa4ea6a1846]; [ system:14031] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7fa4ea6a1873]; [ system:14031] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7fa4ea6a196e]; [ system:14031] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14031] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14031] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:140,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:4418,message,message,4418,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['message'],['message']
Integrability,"7d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:5271,depend,dependabot-automerge-start,5271,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"88a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9046,Depend,Dependabot,9046,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"9236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2578,depend,dependabot-security-updates,2578,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['depend'],['dependabot-security-updates']
Integrability,"986961d0423ba9a593efb490a2960eb65f43b""><code>4d39869</code></a> recompile with correct ncc version</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2e0d362ec5cf81e334dda822c49c96dcd4b7df2c""><code>2e0d362</code></a> bump <code>@​actions/artifact</code> to 1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/09a5d6a283da3e7c9f3253a5d4cdab2347712a66""><code>09a5d6a</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/320"">#320</a> from actions/dependabot/npm_and_yarn/ansi-regex-4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/189315d9106f43a2a8eb60836608bb96b1f69d77""><code>189315d</code></a> Bump ansi-regex from 4.1.0 to 4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d159c2d80bf32e77611286e4d71bfe6d15208d88""><code>d159c2d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/297"">#297</a> from actions/dependabot/npm_and_yarn/ajv-6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/c26a7ba4b5dbaecea906fec3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:4004,depend,dependabot,4004,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependabot']
Integrability,": actions/checkout@v4; - uses: actions/setup-python@v4 ; with:; python-version: 'graalpy-22.3' ; - run: python my_script.py; </code></pre>; <p>Besides, the release contains such changes as:</p>; <ul>; <li>Trim python version when reading from file by <a href=""https://github.com/FerranPares""><code>@​FerranPares</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/628"">actions/setup-python#628</a></li>; <li>Use non-deprecated versions in examples by <a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/724"">actions/setup-python#724</a></li>; <li>Change deprecation comment to past tense by <a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/723"">actions/setup-python#723</a></li>; <li>Bump <code>@​babel/traverse</code> from 7.9.0 to 7.23.2 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/743"">actions/setup-python#743</a></li>; <li>advanced-usage.md: Encourage the use actions/checkout@v4 by <a href=""https://github.com/cclauss""><code>@​cclauss</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/729"">actions/setup-python#729</a></li>; <li>Examples now use checkout@v4 by <a href=""https://github.com/simonw""><code>@​simonw</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/738"">actions/setup-python#738</a></li>; <li>Update actions/checkout to v4 by <a href=""https://github.com/dmitry-shibanov""><code>@​dmitry-shibanov</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/761"">actions/setup-python#761</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/FerranPares""><code>@​FerranPares</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/628"">actions/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:1989,depend,dependabot,1989,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,2,['depend'],['dependabot']
Integrability,"://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:5186,Depend,Dependabot,5186,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['Depend'],['Dependabot']
Integrability,:14031] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7fa4ea6a369d]; [ system:14031] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7fa4ea6a1846]; [ system:14031] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7fa4ea6a1873]; [ system:14031] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7fa4ea6a196e]; [ system:14031] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14031] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14031] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14031] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14031] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7fa4e9b1e76d]; [ system:14031] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14031] **\* End of error message ***; [ system:14029] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f749670169d]; [ system:14029] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f74966ff846]; [ system:14029] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f74966ff873]; [ system:14029] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f74966ff96e]; [ system:14029] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14029] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14029] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14029] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14029] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f7495b7c76d]; [ system:14029] [12] /usr/local/bin/SU2_CFD() [0x459049]; ## [ system:14029] **\* End of error message ***; ## mpirun noticed that process rank 2 with PID 14030 on node system exited on signal 6 (Aborted).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:6584,message,message,6584,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['message'],['message']
Integrability,"; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3111,depend,dependabot,3111,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Change",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3617,depend,dependabot,3617,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:6064,depend,dependabot,6064,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:6243,Depend,Dependabot,6243,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,18,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"<a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1554,depend,dependabot,1554,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"<code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8498,depend,dependabot,8498,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"<code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=""https://redirect.github.com/actions/setup-python/issues/724"">#724</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060""><code>5f2af21</code></a> Add GraalPy support (<a href=""https://redirect.github.com/actions/setup-python/issues/694"">#694</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/setup-python/compare/v4...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:7881,depend,dependabot,7881,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['depend'],['dependabot']
Integrability,"<h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3246,depend,dependabot,3246,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"<li><a href=""https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060""><code>5f2af21</code></a> Add GraalPy support (<a href=""https://redirect.github.com/actions/setup-python/issues/694"">#694</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/setup-python/compare/v4...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:8000,Depend,Dependabot,8000,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['Depend'],['Dependabot']
Integrability,"=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:7231,integrat,integration,7231,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/297"">#297</a> from actions/dependabot/npm_and_yarn/ajv-6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/c26a7ba4b5dbaecea906fec3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependab",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:4850,Depend,Dependabot,4850,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,">; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/FerranPares""><code>@​FerranPares</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/628"">actions/setup-python#628</a></li>; <li><a href=""https://github.com/timfel""><code>@​timfel</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/694"">actions/setup-python#694</a></li>; <li><a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/724"">actions/setup-python#724</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4...v4.8.0"">https://github.com/actions/setup-python/compare/v4...v4.8.0</a></p>; <h2>v4.7.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump word-wrap from 1.2.3 to 1.2.4 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/702"">actions/setup-python#702</a></li>; <li>Add range validation for toml files by <a href=""https://github.com/dmitry-shibanov""><code>@​dmitry-shibanov</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/726"">actions/setup-python#726</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4...v4.7.1"">https://github.com/actions/setup-python/compare/v4...v4.7.1</a></p>; <h2>v4.7.0</h2>; <p>In scope of this release, the support for reading python version from pyproject.toml was added (<a href=""https://redirect.github.com/actions/setup-python/pull/669"">actions/setup-python#669</a>).</p>; <pre lang=""yaml""><code> - name: Setup Python; uses: actions/setup-python@v4; &lt;/tr&gt;&lt;/table&gt; ; </code></pre>; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:3762,depend,dependabot,3762,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,2,['depend'],['dependabot']
Integrability,">; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added rel",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7132,depend,dependabot,7132,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/320"">#320</a> from actions/dependabot/npm_and_yarn/ansi-regex-4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/189315d9106f43a2a8eb60836608bb96b1f69d77""><code>189315d</code></a> Bump ansi-regex from 4.1.0 to 4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d159c2d80bf32e77611286e4d71bfe6d15208d88""><code>d159c2d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/297"">#297</a> from actions/dependabot/npm_and_yarn/ajv-6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/c26a7ba4b5dbaecea906fec3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (d",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:4394,depend,dependabot,4394,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependabot']
Integrability,"><a href=""https://github.com/actions/download-artifact/commit/7c63dfde29f42bb9cb0f61b67e54c91106a6586e""><code>7c63dfd</code></a> licensed</li>; <li><a href=""https://github.com/actions/download-artifact/commit/67d37cd34678091933f0a88cd1bb026171ea20d2""><code>67d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:5039,depend,dependabot-security-updates,5039,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['depend'],['dependabot-security-updates']
Integrability,"><code>905ae4a</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2163"">#2163</a> from github/mergeback/v3.24.5-to-main-47b3d888</li>; <li><a href=""https://github.com/github/codeql-action/commit/6dab9f2356bef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15285,Depend,Dependabot,15285,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:7045,integrat,integration,7045,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"ADME.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:10410,Depend,Dependabot,10410,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Depend'],['Dependabot']
Integrability,"APPER`: `ON|OFF`, disabled when building with Codi forward; * `SU2_BUILD_SOL`: `ON|OFF`, disabled when building with Codi; * Enable modules:; * `SU2_ENABLE_CGNS`: ; * `SU2_CGNS_CPPFLAGS`: flags to pass when compiling CGNS; * `SU2_ENABLE_CODI`: `no|forward|reverse`; * `SU2_CODI_CPPFLAGS`: flags to pass to SU2 modules when compiling with Codi; * `SU2_ENABLE_METIS`: `ON|OFF`; * `SU2_METIS_CPPFLAGS`: flags to pass when compiling Metis; * `SU2_ENABLE_MKL`: `ON|OFF`; * `SU2_ENABLE_MPI`: `ON|OFF`; * `SU2_ENABLE_MUTATIONPP`: `ON|OFF`; * `SU2_ENABLE_PARMETIS`: `ON|OFF`, only available when `SU2_ENABLE_MPI` is `ON`; * `SU2_PARMETIS_CPPFLAGS`: flags to pass when compiling Parmetis; * `SU2_ENABLE_TECIO`: `ON|OFF`; * `SU2_TECIO_CPPFLAGS`: flags to pass when compiling Tecio and TecioMPI; * `SU2_TECIOMPI_CPPFLAGS`: flags to pass when compiling TecioMPI, requires `SU2_ENABLE_MPI`. There is an additional variable that is recognized by CMake scripts - `DEBUG`, turning it `ON` enables additional `STATUS` messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except `pySU2ad` wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. I have based the CMake scripts on autotools scripts so there's no Pastix/Blas options yet. [FindBLAS](https://cmake.org/cmake/help/latest/module/FindBLAS.html), [FindPastix](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindPastix.cmake), [FindScotch](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindScotch.cmake). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814:2802,message,messages,2802,https://su2code.github.io,https://github.com/su2code/SU2/pull/814,1,['message'],['messages']
Integrability,Access solution and primitives **at markers** via python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1949:57,wrap,wrapper,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1949,1,['wrap'],['wrapper']
Integrability,Access solution and primitives via python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1938:42,wrap,wrapper,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1938,1,['wrap'],['wrapper']
Integrability,"Adaption of the interpolation method NearestNeighbor to turbomachinery applications when rotating frame is used. ## Proposed Changes; *If the flow is solved in a rotating frame, the grid is not actutally rotating. But the interpolation for a sliding interface should be done with an actually rotated boundary. The proposed changes add the function of rotating grid points on the boundary of a zone solved in rotating frame before the interpolation is executed. Currently, this is only implemented in CNearestneighbor class, other interpolation method should be changed as well in the near future.*. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ yes ] I am submitting my contribution to the develop branch.; - [ yes ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ yes ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173:250,interface,interface,250,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173,1,['interface'],['interface']
Integrability,"Add <code>labels</code> output which will contain all the matching/intersecting labels i...</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/5384b5bb3bf2c6b1c100a2a5821e1ddac8c38cae""><code>5384b5b</code></a> Add newline after the match token in error comments (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/55"">#55</a>)</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/e33092117bdd8c435e9b654d53726c6936f19518""><code>e330921</code></a> Only use a single comment when the action fails (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/53"">#53</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/mheap/github-action-required-labels/compare/v3...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:5662,depend,dependency-name,5662,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,2,['depend'],['dependency-name']
Integrability,Add CGNS source to repo and integrate with autoconf/automake for automatic inclusion in build.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/105:28,integrat,integrate,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/105,1,['integrat'],['integrate']
Integrability,Add Python interface for setting AoA and AoS for compressible flow simulations.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2045:11,interface,interface,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/2045,1,['interface'],['interface']
Integrability,Add an option to meson for extra dependencies (to fix mpich and lapack issues),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1102:33,depend,dependencies,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102,1,['depend'],['dependencies']
Integrability,Add python interface for setting AoA and AoS,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2045:11,interface,interface,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/2045,1,['interface'],['interface']
Integrability,Add the Wtime function to the MPI wrapper (to avoid #ifdefs),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/943:34,wrap,wrapper,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/943,1,['wrap'],['wrapper']
Integrability,"Adding Custom, time-dependent MACH_NUMBER",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1835:20,depend,dependent,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/1835,1,['depend'],['dependent']
Integrability,Adds the classical fourth-order Runge-Kutta time integration scheme to the finite volume flow solver.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/376:49,integrat,integration,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/376,1,['integrat'],['integration']
Integrability,"All the TestCases seem broken when I try to run SU2 4.1 compiled from source. When I run the serial_regression.py and parallel_regression.py scripts, I get error messages like . There is no geometry file (GetnZone))!. and mesh files like mesh_ONERAM6_turb_hexa_43008.su2 appear to be missing. When I copy one of these from a 4.0 sample directory (where everything worked) and rerun the test case manually by typing something like. mpirun -n 2 /mit/su2_v4.1/bin/SU2_CFD config_CFD.cfg. it works. Something seems to be missing that generates the mesh files but I'm no SU2 expert, I just install it for the real users. Thanks for any help. ```; Alex; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/222:162,message,messages,162,https://su2code.github.io,https://github.com/su2code/SU2/issues/222,1,['message'],['messages']
Integrability,"All: I have temporarily disabled the regressions for the TestCases repository (the main SU2 repository regressions are still active). The time limit for that repository is only 50 min., as opposed to the 70 min. that we received for the SU2 repo by special request, so it fails essentially every time due to exceeding the limit. Rather than maintain a separate repository in Travis CI for the TestCases repo, I propose that we implement a way to trigger the main repository regression tests with a change to the TestCases repo. This type of dependent build of downstream repos seems possible by using something like the following:. https://github.com/mernst/plume-lib/blob/master/bin/trigger-travis.sh. What do folks think? Anyone interested in helping with this?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/459:541,depend,dependent,541,https://su2code.github.io,https://github.com/su2code/SU2/issues/459,1,['depend'],['dependent']
Integrability,Allow selecting the zone used by the python wrapper (for multizone drivers),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2019:44,wrap,wrapper,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/2019,1,['wrap'],['wrapper']
Integrability,"As described in Issue #431, using `SU2_MSH` for periodic mesh construction can be buggy due to its sorting of nodes. Under certain conditions, nodes can be duplicated and/or missing from the output *.su2 file. This pull request implements a more robust sorting process, where the sorting occurs in the following steps:. 1. Send/receive nodes are explicitly identified; 2. The sorted list is created without any send/receive nodes.; 3. The receive and then send nodes are added to the sorted list. Here's a few comments about the pull request:; + Since this routine is only run once, I felt the usability of std::vector outweighed the computational efficiency of raw arrays.; + I had to create two lists, NewSort and ReverseSort, instead of the original one list (NewSort). That's because two different mappings between node numbers need to occur. In the old code, where the list was sorted by switching elements, the two mappings _should_ have been identical. Since the improved method does not use switching, two lists are necessary.; + There's a lot of memory leaks/uninitialized values when checking this pull request with Valgrind. I checked them, and this pull request doesn't create any _new_ memory issues. Apparently both `SU2_CFD` and `SU2_MSH` have memory issues. #### Verification; Since none of the existing regression tests run `SU2_MSH`, I created a separate case to verify both the bug and the fix. It's a simple 3x3 cube that's periodic in the z-direction. I've attached the files below. Here's the steps:. 1. Run `SU2_MSH MSH.cfg`; 2. Run `SU2_CFD per_CFD_dev.cfg`. Using the existing develop branch, the verification case runs into a segfault when writing the output. This pull request allows the verification case to complete successfully. You can also check the original test case from Issue #431 to verify the bug fix. If any of you know of additional verification tests I could run, then please let me know. Test case: [cube.tar.gz](https://github.com/su2code/SU2/files/1639835/c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/500:557,rout,routine,557,https://su2code.github.io,https://github.com/su2code/SU2/pull/500,1,['rout'],['routine']
Integrability,"As identified by @LaSerpe during conversation in pull request https://github.com/su2code/SU2/pull/312, there is a bug in the develop branch somewhere during the merge of the solution for the parallel fsi2d test case, which may be related to recent changes in SU2_SOL. . Error output can be seen in: https://travis-ci.org/su2code/SU2/jobs/165118367. Fix should include the addition or modification of a regression test case to catch similar errors in the future. My suggestion for where to start: go back in the builds until you get to one that does not have this error, and check out what the difference in the SU2_SOL routines are there.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/313:619,rout,routines,619,https://su2code.github.io,https://github.com/su2code/SU2/issues/313,1,['rout'],['routines']
Integrability,"As mentioned in #975 ; This routine was averaging the solution at nodes i and j but it was updating the residuals at those nodes with the un-averaged solution.; https://github.com/su2code/SU2/blob/626be8fd3fcc63c4f2c5aaeb1d93fdcbd0734f56/SU2_CFD/src/solvers/CSolver.cpp#L2732; Upon fixing it one of the turbomachinery cases started diverging, so I kept the suspicious implementation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1005:28,rout,routine,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/1005,1,['rout'],['routine']
Integrability,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/492:44,rout,routine,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/492,1,['rout'],['routine']
Integrability,"Based on the feature_pyWrapper branch :. -new SU2_API folder with :; *include for header files (.h/.hpp); *src for source files (.cpp); *obj for lib and Makefile; *_SU2_API for the Pyhon wrapper and the SWIG conf file. -new FSI folder in the SU2_PY folder + new LaunchFSIComputation.py file. -The compilation should run fine (./configure + options --> make --> make install) but only if the Tec IO support is disabled, otherwise there are some missing references that I have not fixed yet. -You have to compile manually the _SU2_API folder with the Makefile + change the SU2_DIR variable in the Makefile before this compilation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/217:187,wrap,wrapper,187,https://su2code.github.io,https://github.com/su2code/SU2/pull/217,1,['wrap'],['wrapper']
Integrability,Better error message for number of boundary condition mismatch,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/15:13,message,message,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/15,1,['message'],['message']
Integrability,Blocking download of dependencies,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086:21,depend,dependencies,21,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086,1,['depend'],['dependencies']
Integrability,"Branch: `master` or `develop` (in this exampe); `swig`: either 3.0.12 or 4.0.0 (more warnings, master branch, in this example); `mpicxx`, a wrapper to `g++` (Ubuntu 8.1.0-9ubuntu1) 8.1.0; `mpi4py`: either 2.0.0 or 3.0.1a0 (master branch). Steps to reproduce (compile SU2 in `$SU2_HOME` first):. `cd $SU2_HOME/SU2_PY/pySU2`. `swig -Wall -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu/python2.7 -outdir ./ -o SU2_APIPYTHON_wrap.cxx -c++ -python pySU2.i`. `../../Common/include/mpi_structure.hpp:417: Warning 202: Could not evaluate expression 'defined(__GNUC__) || (defined(__ICC) && (__ICC >= 600))'`; `../../Common/include/mpi_structure.hpp:417: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:423: Warning 202: Could not evaluate expression 'defined(__STDC_VERSION__) && (__STDC_VERSION__ >= 199901)'`; `../../Common/include/mpi_structure.hpp:423: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:425: Warning 202: Could not evaluate expression 'defined(__cplusplus) && (__cplusplus >= 201103)'`; `../../Common/include/mpi_structure.hpp:425: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:317: Warning 325: Nested struct not currently supported (Status ignored)`. `mpicxx -DHAVE_HDF5 -I/usr/include/hdf5/openmpi -DHAVE_SZIP -I/usr/include -DHAVE_ZLIB -I/usr/include -DHAVE_MPI -DHAVE_MUTATIONPP -I/usr/include/mutation++ -DHAVE_JSONCPP -I/usr/include/jsoncpp -I/usr/include/python2.7 -D_FORTIFY_SOURCE=2 -fPIC -O3 -I../../externals/metis/include -I../../externals/parmetis/include -I../../externals/tecio/include -I../../externals/cgns -I../../externals/cgns/adf -I../../Common/include -I../../SU2_CFD/include -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu/python2.7 -c SU2_APIPYTHON_wrap.cxx -o SU2_APIPYTHON_wrap.o # $CXX $pySU2_CC_FLAGS $PY_INCLUDE -c $SWIG_WRAP_REAL.cxx -o $SWIG_WRAP_REAL.o`.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/551:140,wrap,wrapper,140,https://su2code.github.io,https://github.com/su2code/SU2/issues/551,1,['wrap'],['wrapper']
Integrability,Bug in config.py prevents asserts from providing correct error message,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/141:63,message,message,63,https://su2code.github.io,https://github.com/su2code/SU2/issues/141,1,['message'],['message']
Integrability,Build error on 'develop' branch with Python wrapper enabled,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1873:44,wrap,wrapper,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/1873,1,['wrap'],['wrapper']
Integrability,"Bumps [actions/cache](https://github.com/actions/cache) from 1 to 3.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v3.0.0</h2>; <ul>; <li>; <p>This change adds a minimum runner version(node12 -&gt; node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via <a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:846,depend,dependencies,846,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependencies']
Integrability,"Bumps [actions/setup-python](https://github.com/actions/setup-python) from 4 to 5.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/setup-python/releases"">actions/setup-python's releases</a>.</em></p>; <blockquote>; <h2>v5.0.0</h2>; <h2>What's Changed</h2>; <p>In scope of this release, we update node version runtime from node16 to node20 (<a href=""https://redirect.github.com/actions/setup-python/pull/772"">actions/setup-python#772</a>). Besides, we update dependencies to the latest versions.</p>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0"">https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0</a></p>; <h2>v4.8.0</h2>; <h2>What's Changed</h2>; <p>In scope of this release we added support for GraalPy (<a href=""https://redirect.github.com/actions/setup-python/pull/694"">actions/setup-python#694</a>). You can use this snippet to set up GraalPy:</p>; <pre lang=""yaml""><code>steps:; - uses: actions/checkout@v4; - uses: actions/setup-python@v4 ; with:; python-version: 'graalpy-22.3' ; - run: python my_script.py; </code></pre>; <p>Besides, the release contains such changes as:</p>; <ul>; <li>Trim python version when reading from file by <a href=""https://github.com/FerranPares""><code>@​FerranPares</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/628"">actions/setup-python#628</a></li>; <li>Use non-deprecated versions in examples by <a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/724"">actions/setup-python#724</a></li>; <li>Change deprecation comment to past tense by <a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/723"">actions/setup-python#723</a></li>; <li>Bump <code>@​babel/traverse</code> from 7.9.0 to 7.23.2 by <a href=""https://github.com/dependabot"">",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:512,depend,dependencies,512,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['depend'],['dependencies']
Integrability,"Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 1 to 3.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-artifact/releases"">actions/upload-artifact's releases</a>.</em></p>; <blockquote>; <h2>v3.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update default runtime to node16 (<a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/293"">#293</a>)</li>; <li>Update package-lock.json file version to 2 (<a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/302"">#302</a>)</li>; </ul>; <h3>Breaking Changes</h3>; <p>With the update to Node 16, all scripts will now be run with Node 16 rather than Node 12.</p>; <h2>v2.3.1</h2>; <p>Fix for empty fails on Windows failing on upload <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/281"">#281</a></p>; <h2>v2.3.0 Upload Artifact</h2>; <ul>; <li>Optimizations for faster uploads of larger files that are already compressed</li>; <li>Significantly improved logging when there are chunked uploads</li>; <li>Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files</li>; <li>Various other small bugfixes &amp; optimizations</li>; </ul>; <h2>v2.2.4</h2>; <ul>; <li>Retry on HTTP 500 responses from the service</li>; </ul>; <h2>v2.2.3</h2>; <ul>; <li>Fixes for proxy related issues</li>; </ul>; <h2>v2.2.2</h2>; <ul>; <li>Improved retryability and error handling</li>; </ul>; <h2>v2.2.1</h2>; <ul>; <li>Update used actions/core package to the latest version</li>; </ul>; <h2>v2.2.0</h2>; <ul>; <li>Support for artifact retention</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Add Third Party License Information</li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Use updated version of the <code>@action/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect cas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:400,depend,dependabot,400,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,3,['depend'],['dependabot']
Integrability,"Bumps [actions/upload-release-asset](https://github.com/actions/upload-release-asset) from 1.0.1 to 1.0.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-release-asset/releases"">actions/upload-release-asset's releases</a>.</em></p>; <blockquote>; <h2>Automate sliding major version number</h2>; <p>This is a minor update to make the current release have the latest code from master, and additionally allows for a new automation workflow to execute to automate the sliding of the major (v1, v2, v3, etc) version numbers for ease of referencing</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-relea",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:869,depend,dependabot,869,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,2,['depend'],['dependabot']
Integrability,"CGNS file older than 4.0 release have a high ram memory usage. ## Proposed Changes. Add a small message to help users understand that SU2 is eating their RAM with old CGNS files.; ; ## Related Work. See: #1378 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1479:96,message,message,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/1479,1,['message'],['message']
Integrability,Change the wording in the error message if CGNS file doesn't exist in the current directory to make it more clear.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/62:32,message,message,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/62,2,['message'],['message']
Integrability,"Classes associated with spatial discretization are all instantiated once during initialization [see: Numerics_Preprocessing in definition_structure.cpp] whereas classes associated with time integration are instantiated and deleted over and over in solver_container[a][b][c]->ImplicitEuler_Iteration(). Similarly, each time a preconditioner is invoked, a new class is instantiated. I think the code will be easier to read and understand if space and time are treated similarly. The CSysSolve class can also be instantiated for each solver during Numerics_Preprocessing() using the new keyword. A caveat of this change is that it might be necessary to assure that the matrix/vector data in the CSysSolve class is cleared prior to each iteration. This is the cost of not creating and deleting the data structure at each step.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/82:190,integrat,integration,190,https://su2code.github.io,https://github.com/su2code/SU2/issues/82,1,['integrat'],['integration']
Integrability,"Cleanup python wrapper, replace legacy python FSI",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1197:15,wrap,wrapper,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1197,1,['wrap'],['wrapper']
Integrability,"Collection of improvements in the upwind with limiter methods. - Elimination of the option GetViscous_Limiter_Flow and GetViscous_Limiter_Turb and related subroutines. It is not useful, and it doesn’t make too much sense to me.; - Renaming VAN_ALBADA to VAN_ALBADA_EDGE to distinguish between multidimensional stencils and edge based stencils.; - Adding VENKATAKRISHNAN_WANG limiter in which the Epsilon is computed using flow solution. It is very difficulty to be successful with the original version of the Venkat’s limiter... the calibration is too case dependent.; - Adding NO_LIMITER as a new option.; - Adding AD stuff to the BARTH_JESPERSEN... same code that in VENKATAKRISHNAN; - Updated screen output. Best,; Vivaan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/438:557,depend,dependent,557,https://su2code.github.io,https://github.com/su2code/SU2/pull/438,2,['depend'],['dependent']
Integrability,"Compile ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:15,Depend,Dependency,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,1,['Depend'],['Dependency']
Integrability,Composition-dependent density model for variable density incompressible flow,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1620:12,depend,dependent,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/1620,1,['depend'],['dependent']
Integrability,Composition-dependent heat capacities and mass diffusivity models for incompresible flows,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1762:12,depend,dependent,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/1762,1,['depend'],['dependent']
Integrability,Composition-dependent viscosity and thermal conductivity models for incompresible flows,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1690:12,depend,dependent,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/1690,1,['depend'],['dependent']
Integrability,Consistent calculation of dissipation terms for the Roe scheme for both explicit and implicit time integration. The previous explicit implementation was unstable with the high-order DG solver.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/299:99,integrat,integration,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/299,1,['integrat'],['integration']
Integrability,Consistent python wrapper function names,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1978:18,wrap,wrapper,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1978,1,['wrap'],['wrapper']
Integrability,Correct generator dependence for hdf5.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1515:18,depend,dependence,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1515,1,['depend'],['dependence']
Integrability,"Currently in the top-level main() routine, there are a number of multiple-indexed data structures, such as:. ```; solver_container[iZone][iMesh][iEqn]->DoSomething();; numerics_container[iZone][iMesh][iEqn][iTerm]->DoSomethingElse();; ```. Instead of this, I suggest using classes to encapsulate each level of indexing. At the top level, calling a routine from CNumerics could look like:. ```; zone_container[iZone]->integration_container[iEqn]->solver_container[iMesh]->numerics_container[iTerm]->DoSomethingElse();; ```. This looks much more complicated from the top level, but we rarely call routines from CNumerics at the top level. We call them from inside the CSolver classes. Indeed, it makes no sense for there to be a CNumerics instance that is not associated with a specific instance of CSolver. So, currently we have routines such as:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container, CNumerics *numerics,; CConfig *config, unsigned short iMesh) {; ...; numerics->ComputeResidual();; ...; }; ```. Under the proposed scheme, we can remove the CNumerics input to this routine, as the numerics_container array is itself a member of the CSolver, so the same code becomes:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container,; CConfig *config, unsigned short iMesh) {; ...; numerics_container[iUpwind]->ComputeResidual();; ...; }; ```. Currently, the instances of CVariable are already encapsulated in this way inside of CSolver. The proposed reorganization demotes numerics_container from the top-level array to a member of CSolver. Similarly, solver_container itself is encapsulated in CIntegration. Organizing the data structures in this way makes more clear the hierarchy of classes as they are used.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/83:34,rout,routine,34,https://su2code.github.io,https://github.com/su2code/SU2/issues/83,5,['rout'],"['routine', 'routines']"
Integrability,"Currently we transfer forces from the fluid side to the structural side, this is fine for matching meshes and for non-matching (interpolated) if the conservative approach is used (i.e. transpose the displacement interpolation matrix to transfer the loads). For non-matching and the consistent approach (i.e. use the same interpolation scheme both ways) this creates ""extra force"", to avoid that, stress needs to be transferred instead of force and integrated on the structural side.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/596:448,integrat,integrated,448,https://su2code.github.io,https://github.com/su2code/SU2/issues/596,1,['integrat'],['integrated']
Integrability,Custom Python wrapper marker BC values appropriately nondimensionalized,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2078:14,wrap,wrapper,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/2078,1,['wrap'],['wrapper']
Integrability,Custom inlets via python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2296:25,wrap,wrapper,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/2296,1,['wrap'],['wrapper']
Integrability,"Dear Team SU2,. I would like to inform you that, while post processing the results of a 3-zone sliding interface 3D simulation with Tecplot, it is noticed that output file of one of the zone (The outermost zone, within which remaining two zones are present) is showing 80% of data as ~x.xxxe-317 and 10% as nan. Whereas the run went very very smoothly with very good fall in residue in all the blocks without any non-physical points. Hence I am suspecting that there is some problem in post processing (SU2_SOL) it self. Please let me know how to solve this issue. Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417:103,interface,interface,103,https://su2code.github.io,https://github.com/su2code/SU2/issues/417,1,['interface'],['interface']
Integrability,"Dear Team SU2,. I've downloaded and compiled the latest developing version of SU2 with DDES feature.; However, since I need to read the solution file in the non-binary format for further process. I both set NO at WRT_BINARY_RESTART and READ_BINARY_RESTART option.; However, when I open the non-binary restart file, say by excel, some solution values are merged into the wrong column or just missing. And now these mislocated data make the non-binary solution file cannot be used for restart simulation ( a Diverged warning message will pop up ).; Also based on the observation, these kinds of data writing error appeared in every 9 or 10 point id in general, for example, the first error shows in pointID # 9, then # 18...so on. The example error file is attached. Could you please advise me if there is any quick fix for this issue. Or is there any converter inside the SU2 that I can run the simulation in binary first then convert them later?. Thank you very much. Sincerely,; Yu-Kai Weng. [restart_flow_nb_00000.zip](https://github.com/su2code/SU2/files/1493197/restart_flow_nb_00000.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/474:523,message,message,523,https://su2code.github.io,https://github.com/su2code/SU2/issues/474,1,['message'],['message']
Integrability,"Dear Team SU2:. Apologize for the re-post this issue since I accidentally closed the last one. I've downloaded and compiled the latest developing version of SU2 with DDES feature.; However, since I need to read the solution file in the non-binary format for further process. I both set NO at WRT_BINARY_RESTART and READ_BINARY_RESTART option.; However, when I open the non-binary restart file, say by excel, some solution values are merged into the wrong column or just missing. And now these mislocated data make the non-binary solution file cannot be used for restart simulation ( a Diverged warning message will pop up ).; Also based on the observation, these kinds of data writing error appeared in every 9 or 10 point id in general, for example, the first error shows in pointID # 9, then # 18...so on. The example error file is attached. Could you please advise me if there is any quick fix for this issue. Or is there any converter inside the SU2 that I can run the simulation in binary first then convert them later?. I put some sample original non-binary file which has mislocated or missing data, and cannot be read as restart file in google drive [here](https://drive.google.com/drive/u/1/folders/1kmAqTV-HyHH6y2o1zxPVLEJ5pU2LRebl) and another bad written non-binary file is attached.; [badfile.zip](https://github.com/su2code/SU2/files/1504155/badfile.zip). Sincerely,; Yu-Kai Weng",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/477:602,message,message,602,https://su2code.github.io,https://github.com/su2code/SU2/issues/477,1,['message'],['message']
