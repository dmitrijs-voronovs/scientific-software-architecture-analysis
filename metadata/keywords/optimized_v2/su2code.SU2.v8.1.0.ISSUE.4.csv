quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,Correct progress reporting in Pointwise plugin,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/72:40,plugin,plugin,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/72,1,['plugin'],['plugin']
Modifiability,Could it be possible to alter configure system to allow different lapacke as your user wanted here:; https://github.com/xianyi/OpenBLAS/issues/1383; Also since we talk about linking statically tens of megabytes of blobs into final module - could the (user-specified) LAPACK library (optionally or by default) get imported dynamically?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/481:30,config,configure,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/481,1,['config'],['configure']
Modifiability,Coupling of SU2 and CoolProp,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782:0,Coupling,Coupling,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782,1,['Coupling'],['Coupling']
Modifiability,"Current within the fluid_model.hpp defines the CFluidModel class with varibles however, the variables have incorrect commenting for the briefs with majority of the second half being repeated. From this it's difficult to determine what the variables actually are a part of as the nomenclature of them is a little ambiguous. Could this be sorted?. `class CFluidModel {. protected:; su2double StaticEnergy, /*!< \brief Internal Energy. */; Entropy, /*!< \brief Entropy. */; Density, /*!< \brief Density. */; Pressure, /*!< \brief Pressure. */; SoundSpeed2, /*!< \brief SpeedSound. */; Temperature, /*!< \brief Temperature. */; dPdrho_e, /*!< \brief DpDd_e. */; dPde_rho, /*!< \brief DpDe_d. */; dTdrho_e, /*!< \brief DTDd_e. */; dTde_rho, /*!< \brief DTDe_d. */; Cp, /*!< \brief Specific Heat Capacity at constant pressure. */; Mu, /*!< \brief Specific Heat Capacity at constant pressure. */; dmudrho_T, /*!< \brief Specific Heat Capacity at constant pressure. */; dmudT_rho, /*!< \brief Specific Heat Capacity at constant pressure. */; Kt, /*!< \brief Specific Heat Capacity at constant pressure. */; dktdrho_T, /*!< \brief Specific Heat Capacity at constant pressure. */; dktdT_rho; /*!< \brief Specific Heat Capacity at constant pressure. */`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/414:92,variab,variables,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/414,2,['variab'],['variables']
Modifiability,"Currently each variation/correction model has its unique name identification in SU2. In order to simultaneously combine multiple correction models to a given turbulence model I suggest the following:; - The config file option KIND_TURB_MODEL should specify only which turbulence model to use, i.e. SA or SST.; - Introduce an additional config file field TURB_MODEL_CORRECTIONS to indicate all variations/corrections to be considered. . Here an example,; % Specify turbulent model (NONE, SA, SST); KIND_TURB_MODEL= SA; % Turbulence model corrections (NONE, SA-EDW, SA-NOFT2, SA-COMP, SA-NEG, SA-QCR2000, SST-SUST); TURB_MODEL_CORRECTIONS= SA-EDW, SA-NEG. What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1066#issuecomment-906376697:207,config,config,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/1066#issuecomment-906376697,2,['config'],['config']
Modifiability,"Currently in the top-level main() routine, there are a number of multiple-indexed data structures, such as:. ```; solver_container[iZone][iMesh][iEqn]->DoSomething();; numerics_container[iZone][iMesh][iEqn][iTerm]->DoSomethingElse();; ```. Instead of this, I suggest using classes to encapsulate each level of indexing. At the top level, calling a routine from CNumerics could look like:. ```; zone_container[iZone]->integration_container[iEqn]->solver_container[iMesh]->numerics_container[iTerm]->DoSomethingElse();; ```. This looks much more complicated from the top level, but we rarely call routines from CNumerics at the top level. We call them from inside the CSolver classes. Indeed, it makes no sense for there to be a CNumerics instance that is not associated with a specific instance of CSolver. So, currently we have routines such as:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container, CNumerics *numerics,; CConfig *config, unsigned short iMesh) {; ...; numerics->ComputeResidual();; ...; }; ```. Under the proposed scheme, we can remove the CNumerics input to this routine, as the numerics_container array is itself a member of the CSolver, so the same code becomes:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container,; CConfig *config, unsigned short iMesh) {; ...; numerics_container[iUpwind]->ComputeResidual();; ...; }; ```. Currently, the instances of CVariable are already encapsulated in this way inside of CSolver. The proposed reorganization demotes numerics_container from the top-level array to a member of CSolver. Similarly, solver_container itself is encapsulated in CIntegration. Organizing the data structures in this way makes more clear the hierarchy of classes as they are used.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/83:967,config,config,967,https://su2code.github.io,https://github.com/su2code/SU2/issues/83,2,['config'],['config']
Modifiability,"Currently, the source term assumes that the axisymmetric behavior is about the x-axis in a 2D problem (uses the y-coordinate in the implementation). For clarity, we should add a disclaimer in the config file description/comment or print this information during preprocessing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/48:196,config,config,196,https://su2code.github.io,https://github.com/su2code/SU2/issues/48,1,['config'],['config']
Modifiability,"Currently, the variable name headings are comma delimited and the values are tab delimited. It would be nice if this were consistent.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/4:15,variab,variable,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/4,1,['variab'],['variable']
Modifiability,"D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8083,config,config-lite-,8083,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config-lite-']
Modifiability,DV_MARKER should work with a list of different surfaces for each design variable (like DV_PARAM),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/111:72,variab,variable,72,https://su2code.github.io,https://github.com/su2code/SU2/issues/111,1,['variab'],['variable']
Modifiability,Dear @EduardoMolina . can you try to generate the periodic mesh with the fortran code attached. After compiling the code you can run it as ./su2perio.exe < config_file.cfg ; The config file is the same you are using for the SU2_MSH. Let me know if it works. ; [su2_perio.tar.gz](https://github.com/su2code/SU2/files/1177849/su2_perio.tar.gz). regards. sv,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/416#issuecomment-318160225:178,config,config,178,https://su2code.github.io,https://github.com/su2code/SU2/issues/416#issuecomment-318160225,1,['config'],['config']
Modifiability,"Dear Developers, . I have been trying to run the ""Constrained shape design of a transonic inviscid wing at a cte. CL"" tutorial but am having issues in installing SU2 properly. I realize that the SU2 tools necessary for this tutorial are not included with the binary executables and I have been working on properly configuring and building SU2 to have the necessary tools and to run in parallel by following the compilation guide. Unfortunately, I have yet to install a working parallel version to run this tutorial. A solution to avoiding some of these installation issues would be to set up this environment within a singularity container. I found a singularity container definition for an old version of SU2 in #738 and modified the su2.def file to read:. Bootstrap: docker; From: ubuntu:19.04; ; %post; apt-get -y update; apt-get -y install python3 git build-essential autoconf python-dev libopenmpi3 openmpi-common; git clone --depth=1 https://github.com/su2code/SU2; cd SU2; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true --prefix=$PWD; ./ninja -C build install; ; %runscript; exec /SU2/bin/$1 $2 . This code raises the following error after running . FATAL: Unable to build from su2.def: while parsing definition: su2.def: invalid selection(s) specified:. I understand this is an issue stemming from singularity and how I defined the definition file, but I was wondering if there was any supported singularity container for running SU2 that supports AD and parallel computing?. Best",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1626:314,config,configuring,314,https://su2code.github.io,https://github.com/su2code/SU2/issues/1626,1,['config'],['configuring']
Modifiability,"Dear Dr Albring,. I just followed the procedures and included the files to create a test case to SU2_CFD_AD [a coarse mesh, a TargetCp.dat and a config file for an Arina nozzle. The coarse mesh is a 2000 triangles one; which is enough to give us an idea of the shockwave location and the geometry modifications. The next mesh I have would be an ~85000 elements which gives us a good information on the 27th function call]. ; I had some segmentation faults during long jobs: Is there some recommended tuning I can do on OS/HW or SU2 in order to minimize them?. With kind regards,. Jairo. > On Dec 7, 2018, at 09:45, Jairo Paes Cavalcante Filho <jairo.pcfilho@gmail.com> wrote:; > ; > Hello Dr. Albring,; > ; > Yes! Sorry for the delay due some internal presentations and events here.; > I just finished a small model and successfully tested it on openSUSE. I expect to upload it today.; > ; > With kind regards,; > ; > Jairo; > ; >> On Dec 7, 2018, at 06:35, Tim Albring <notifications@github.com <mailto:notifications@github.com>> wrote:; >> ; >> Hi Jairo,; >> ; >> what is the status here ? Is it possible to provide a simpler (smaller) case ?; >> ; >> —; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-445175541>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180u4PogeqhPW9rrfY4mW705IYKjvhks5u2jZpgaJpZM4X34F2>.; >> ; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-445429636:145,config,config,145,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-445429636,2,['config'],['config']
Modifiability,"Dear Dr. Economon, . I just uploaded the mentioned files. I hope everything may be ok now. With kind regards,. Jairo. > On Jan 21, 2019, at 22:31, Thomas D. Economon <notifications@github.com> wrote:; > ; > @jaspe55 <https://github.com/jaspe55> : I have just cleaned up a couple of things and can confirm that your mesh file is there. However, we are missing the converged solution file (solution_flow.dat) and the target Cp file for inverse design.; > ; > Similar to the process for the mesh, can you please upload the solution file to the TestCases repo and the target Cp file to the SU2 code repo (alongside the config file)? Once the files are present, we can update the regression values in the serial_regression_AD.py and parallel_regression_AD.py files, and this PR will be ready to merge.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-456240798>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180tLXcO2Ht3-J3rmwCWlPKQutyTiUks5vFmoEgaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-456794388:615,config,config,615,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-456794388,1,['config'],['config']
Modifiability,"Dear Dr. Economon,. I just finished the run on AD with the files you have adjusted and it did; converge. I also have successfully run some simple inverse design tests; with a limit on the number of cycles.; Thank you very much for your guidance and help. With kind regards,. Jairo. On Wed, Jan 30, 2019 at 2:13 PM Thomas D. Economon <notifications@github.com>; wrote:. > *@economon* approved this pull request.; >; > LGMT. Thanks @jaspe55 <https://github.com/jaspe55>; >; > Just one request: I have adjusted the number of iterations for the; > regression test and updated the residual values in the python script. I; > also had to move around some files. Can you please run the case (to; > convergence) and verify that the results are what you expect? Note that the; > config file and target Cp are in the code repository and the mesh and; > solution file are in the testcases repository. If everything looks ok, then; > this is ready to be merged.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/600#pullrequestreview-198200089>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Ac180hqzVnSUPCnSBkQrTPfIv0kIltygks5vIdKrgaJpZM4X34F2>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-459568514:769,config,config,769,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-459568514,2,['config'],['config']
Modifiability,"Dear Edwin,. Thanks for your quick response. I thoroughly verified my config file, AoA option was given only once. I am not getting any clue about this error. In-fact, I made only two modifications to the config file, which I have sent to Dr. Giuilo, yesterday. Those two are: 1. MARKER_ZONE_INTERFACE option from MARKER_FSI_INTERFACE 2. SST Turbulence model from SA. Then I arrived at new config file for the today downloaded code from develop branch. Hence I suspected minor mistake in any one of newly updated files to develop branch. Thanks & Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-318056745:70,config,config,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-318056745,3,['config'],['config']
Modifiability,"Dear Giuilo,. Congratulations! I would like to thank you for your patience in downloading and running the case. I have downloaded & installed the develop branch code afresh and tried to run the case with SST turbulence model, but unfortunately I got an error stating, ""AOA: option appears twice"", while reading the config file it self. I think it is due to little mistake with any of newly updated files. Please look into this matter once. . I am sorry for troubling you many times. Thanks & Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-318045988:315,config,config,315,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-318045988,1,['config'],['config']
Modifiability,"Dear Giuilo,. Thank you so much for your quick response. Here are answers for your questions:; 1. Restart files are in Binary format.; 2. I am running this simulation in parallel mode on 160 cores.; 3. Paraview output file(.vtk) is also having all the issues, what I faced with Tecplot file. I am very much ready to provide you the config & grid files, but grid file is approx. 394MB. Shall I send through drop box?. Thanks & Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-317359930:332,config,config,332,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-317359930,1,['config'],['config']
Modifiability,"Dear Heather,; I am analyzing a propeller of an UAV. I have static thrust measurements such that when I used Euler results I got 3.5 lbf thrust as compared to the measured 6 lbs. My next step was to perform an NS equation with SA turb model. I got 7 times over predicted results such that the mesh has a Y+ of less than 1. Then I thought of doing an SST but was not long enough that it gave me error with divergence. I have been setting up my SST case as per the tutorial example of NACA0012. However, I do not happen to see any entry with regards to eddy frequency etc. (usually required by SST) in the config file. Any guidance will be great.; Thanks; Jehan; From: Heather Kline notifications@github.com; To: su2code/SU2 SU2@noreply.github.com ; Sent: Tuesday, May 12, 2015 11:43 AM; Subject: [SU2] Feature deallocation (#174). Bringing this branch up to date with current develop branch. ; Various deallocation changes; Some regression tests fail but all run. (previously was not the case); You can view, comment on, or merge this pull request online at:;   https://github.com/su2code/SU2/pull/174; Commit Summary; - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working versi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:604,config,config,604,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['config'],['config']
Modifiability,"Dear Jyothi,. Just a couple of questions before start looking into this: can you please check/confirm that the restart files (the ones that are post-processed by the SU2_SOL) do not show any of such issues?; I am assuming you are running your simulation in parallel, can you also check if those wrong values are written in the tecplot output also if you run your computation serially (so that SU2_SOL is not needed)?; Last one, what about the paraview output? Is that one ok?. It would be great if you could provide the config file and the grid, so that I can reproduce the very same behaviour. Cheers,; Giuilo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-317345934:520,config,config,520,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-317345934,1,['config'],['config']
Modifiability,"Dear Jyothi,; regarding the error with the option AOA given twice. the problem is related to the fact that in your config file you are giving the option with the ""o"" lower case. If you update the option from ; ""AoA"" --> ""AOA"" it will work. regards. Salvo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-318158198:115,config,config,115,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-318158198,1,['config'],['config']
Modifiability,"Dear Jyothi,; thanks, I managed to download all files correctly.; I noticed that in your config file you are using the MARKER_FSI_INTERFACE option, which is actually outdated (currently it should read MARKER_ZONE_INTERFACE), so I am assuming that you are not running the latest version of the develop branch.; First, I would suggest you to update SU2 on your local server, as the issue might have been solved in one of the latest updates.; Indeed, I was able to run the test case and the output files look good using the latest version. By the way, I had troubles using the SA turbulence model (a segmentation fault which I have to investigate further, but the case run just fine using the SST model). Let me know if you still get the ""nan"" issue in the output files using the latest version of the develop branch. cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-317780215:89,config,config,89,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-317780215,1,['config'],['config']
Modifiability,"Dear SU2 Team Members,. Greetings! We are very happy to inform you that we are exploring the aerodynamic shape optimization script of SU2 R 5.0.0 (Raven) with different configurations. And we would also like to seek your assistance in connection with the following two issues:. 1. We are not getting any clue on restarting procedure of the optimization process from previously finished cycles. 2. Is there any way for exporting the intermediate / final optimized geometry as 3D CAD model. Thanking you in advance. Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/489:169,config,configurations,169,https://su2code.github.io,https://github.com/su2code/SU2/issues/489,1,['config'],['configurations']
Modifiability,"Dear SU2 Team Members,. Greetings! We are very happy to inform you that we are exploring the aerodynamic shape optimization script of SU2 R 5.0.0 (Raven) with different configurations. And we would also like to seek your assistance in connection with the following two issues:. We are not getting any clue on restarting procedure of the optimization process from previously finished cycles. Is there any way for exporting the intermediate / final optimized geometry as 3D CAD model. Thanking you in advance. Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/489#issuecomment-355968201:169,config,configurations,169,https://su2code.github.io,https://github.com/su2code/SU2/issues/489#issuecomment-355968201,1,['config'],['configurations']
Modifiability,"Dear SU2 Team Members,. I've been trying to optimize bluff bodies geometries with the shape_optimization script, but I wasn't able to restart any optimization with restart files from previous simulations. This causes too much computational time to be expended to reach a periodic condition of the flow (starting from freestream). Is it possible to implement this kind of restart for unsteady flow optimization? I've looked for answers at the forúm, doing test simulations and at the tutorial's commentary section, but this feature seems to not exist. During my tests, I found out that the script doesn't recognize restart files with dual-time step indexes. When the script doesn't find a restart file, it starts from freestream condition, setting the config file inside the first direct simulation folder with the command ""RESTART_SOL=NO"". This problem can be bypassed by making a copy of one restart file and renaming it without its index. Then the script runs until it reaches other index problems with the output files. This also can be solved by renaming files while the script goes, but it still crashes at the end of the first design cycle.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/909:751,config,config,751,https://su2code.github.io,https://github.com/su2code/SU2/issues/909,1,['config'],['config']
Modifiability,"Dear SU2 developers,. I'm trying to set up a FFD box however, after having run the SU2_DEF command, I noticed that no FFD_SURFACE_POINTS are crated in the mesh_out.su2 file. I tried this successfully with SU2 v7 but repeating the same procedure with SU2 v5 lead to the problem. What can be the cause of such a problem? Is the procedure to create the FFD box the same between SU2 v7 and v5?. I tested the following .cfg file with the mesh mesh_NACA0012_inv.su2 and it's not working. ```; % ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%; %; % Kind of deformation (NO_DEFORMATION, TRANSLATION, ROTATION, SCALE,; % FFD_SETTING, FFD_NACELLE; % FFD_CONTROL_POINT, FFD_CAMBER, FFD_THICKNESS, FFD_TWIST; % FFD_CONTROL_POINT_2D, FFD_CAMBER_2D, FFD_THICKNESS_2D, FFD_TWIST_2D,; % HICKS_HENNE, SURFACE_BUMP); DV_KIND= FFD_SETTING; % ; % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= ( airfoil ); %; % Parameters of the shape deformation; DV_PARAM= ( MAIN_BOX, 3.0, 4.0, 0.0, 0.0); %; % Value of the shape deformation; DV_VALUE= 0.0; %; %; % ------------------------ GRID DEFORMATION PARAMETERS ------------------------%; DEFORM_LINEAR_ITER= 250; %; %; % -------------------- FREE-FORM DEFORMATION PARAMETERS -----------------------%; %; % Tolerance of the Free-Form Deformation point inversion; FFD_TOLERANCE= 1E-10; %; % Maximum number of iterations in the Free-Form Deformation point inversion; FFD_ITERATIONS= 500; %; % FFD box definition: 3D case (FFD_BoxTag, X1, Y1, Z1, X2, Y2, Z2, X3, Y3, Z3, X4, Y4, Z4,; % X5, Y5, Z5, X6, Y6, Z6, X7, Y7, Z7, X8, Y8, Z8); % 2D case (FFD_BoxTag, X1, Y1, 0.0, X2, Y2, 0.0, X3, Y3, 0.0, X4, Y4, 0.0,; % 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0); FFD_DEFINITION= (MAIN_BOX,-0.1, 0.2, 0, 1.1, 0.2, 0, 1.1, -0.2, 0, -0.1, -0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0); %; % FFD box degree: 3D case (x_degree, y_degree, z_degree); % 2D case (x_degree, y_degree, 0); FFD_DEGREE= ( 6 , 1, 0 ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1250:520,VARIAB,VARIABLE,520,https://su2code.github.io,https://github.com/su2code/SU2/issues/1250,1,['VARIAB'],['VARIABLE']
Modifiability,"Dear SU2 developers,. This PR is a long effort to add Hybrid RANS/LES capabilities, specially the Delayed Detached Eddy Simulation with Grey area mitigation and low dissipation schemes proper to unsteady flows. Summary of the contribution:. - Delayed DES:; - Standard SGS; - Vorticity SGS; - Shear Layer Adapted SGS. - Several low dissipation functions:; - DDES FD; - Ducros' shock sensor; - NTS adaptive. - Variants of SA turbulence model:; - Compressibility correction; - Edwards and Chandra; - QCR 2000 (Quadratic constitutive relation). - Low dissipation schemes:; - Low dissipation Roe.; - Low Mach Roe.; - Simple low dissipation AUSM (SLAU and SLAU2). I added only a small regression test for 2D DDES, travis can not handle even the smallest 3D test case that I have. Suggestions are welcome. Best,. Eduardo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/490:304,Adapt,Adapted,304,https://su2code.github.io,https://github.com/su2code/SU2/pull/490,2,"['Adapt', 'adapt']","['Adapted', 'adaptive']"
Modifiability,"Dear Salvo,. Thanks a lot. I appreciate your observation in tracing out the cause of ""lower case o"" used in my config file. My AoA problem is solved. Just I replaced AoA with AOA, then the run took-off. But in earlier versions AoA option was working and never used AOA upto now. This is the first time I am using AOA in my config file. Anyway thanks once again. Regrads,; Jyothi Kumar Puttam.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-318276357:111,config,config,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-318276357,2,['config'],['config']
Modifiability,"Dear WenyinWei,; presently SU2 is interfaced with the INRIA AMG library for mesh adaptation. You can find all the necessary details and examples at https://pyamg.saclay.inria.fr. There are efforts going on in Stanford to connect it to goal-oriented adaptation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/743#issuecomment-514651250:81,adapt,adaptation,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/743#issuecomment-514651250,2,['adapt'],['adaptation']
Modifiability,"Dear all, ; I have added a pdf file here that includes some test case results obtained with our BC transition model. These zero pressure gradient and variable pressure gradient flat plate test cases are very popular for model validation. I have also included Eppler E387 airfoil results. I would appreciate if you have any 3-D test case and share it with me.; Looking forward to hear your feedback. ; Sincerely,; Samet. [BC_model_TestCaseResults.pdf](https://github.com/su2code/SU2/files/562425/BC_model_TestCaseResults.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257360833:150,variab,variable,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257360833,2,['variab'],['variable']
Modifiability,"Dear all,. I simulated Sym_plane_testcases from #657 ; When I simulate axisymmetric probem (AXISYMMETRIC =YES), I found odd value at symmetric axis. This problem doesn't appear when I turn off AXISYMMETRIC option. ![Cp_comparison](https://user-images.githubusercontent.com/74228020/133757118-b17e8772-9919-4cb1-b1f2-8cf18e4a48ac.png); ========================================================================; ========================================================================; .; . ![Density_comparison](https://user-images.githubusercontent.com/74228020/133757136-63ae13a2-7c3d-478f-9a81-7aaf001c6dd2.png); ========================================================================; ========================================================================; .; . ![Mach_comparison](https://user-images.githubusercontent.com/74228020/133757154-9ed10855-3070-4210-b5b5-e2e3f2fad273.png); ========================================================================; ========================================================================; .; . ![Temp_comparison](https://user-images.githubusercontent.com/74228020/133757157-18646978-20e6-49e7-a44f-ac45151b3901.png). It seems that temperature, Mach, and momentum have no problem, but density, pressure, and energy are strange at the symmetric axis...; From #657 , I think it is flux related problem. I attached version 7 configure file I used.; [Sym_BC_test.zip](https://github.com/su2code/SU2/files/7184390/Sym_BC_test.zip). I'm also trying to simulate my axisymmetric problem and this problem appears too in my case.; ![Base_Axis](https://user-images.githubusercontent.com/74228020/133761583-b3ea8fb4-876a-422c-a957-4a0ce1cc9783.png); Symmetric BC is x-axis. How I fix this problem? Could anyone help me?. Thank you. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - SU2 Version: v7.1.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373:1370,config,configure,1370,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373,1,['config'],['configure']
Modifiability,"Dear all,. as many of you know, we have been working for quite a while in the development of the FSI solver within SU2. So far, we have been using a separate branch; however, this branch has grown quite big (almost 200 commits!) and it's probably time to merge it with the develop branch. This way, other folks can start using the new code infrastructure for multi-physics problems, while reducing the hassle for everyone in future pull requests from our side. . This pull request includes, among others:; 1. Multi-physics support and improvements: ; - CTransfer structure with MPI support for parallel multi-zone simulations.; - CTransfer subclasses for physical definition of multi-physics interaction variables.; - CInterpolator structure with support for interpolation algorithms.; 2. A FEM structural solver aiming to deal with geometrical and material nonlinearities.; 3. A BGS driver structure for FSI problems.; 4. General bug fixes and improvements for unsteady problems with dynamic meshes.; 5. New configuration options required for the different kinds of problems tackled. If all the tests pass, I will add some regression tests, once the mesh files and solution files have been added to the TestCases repository. Please note that this version of the code is still under development, and we are currently working on further improvements in the efficiency and the capabilities of the solver. We intend to include these further developments by the time of the next release of the code. . Cheers,. Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/234:704,variab,variables,704,https://su2code.github.io,https://github.com/su2code/SU2/pull/234,2,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"Dear all,; SU2 now prints N restart file for each of the zone, of course if a multizone flow problem is run. If in the config file we specify something like this. % Output file restart flow; RESTART_FLOW_FILENAME= restart_flow.dat. It will automatically create nZone restart file:; ""restart_flow_0.dat "" ""restart_flow_1.dat"" .... ""restart_flow_N.dat"". Nothing changed also for the input restart file. We can still specify a single solution file . % Restart flow input file; SOLUTION_FLOW_FILENAME= restart_flow.dat. and it automatically crate the numbered file using the root = restart_flow. cheers. sv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/194:119,config,config,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/194,1,['config'],['config']
Modifiability,"Dear all,; Thank you very much for your comments!; I agree with you, transferring the velocity is definitely the best solution in the long run. However, as Pedro mentioned, there is also the case when a certain imposed deformation is set, without solving any structural system. This is the case of a forced motion. In the python script configuration files it is required to set the marker_fluid_load as this is the only way to make SU2 compute the tractions at that marker. Maybe, a solution to both needs, can be to make SU2 compute the tractions anyway for the wall boundary. . In this way, if you have the velocity at the interface, you can define this interface as also marker_fluid_load, the FSI bool will be true and the new BC_velocity will be used. If you do not have the velocity at the interface, you will avoid marker_fluid_load and SU2 will not fail trying to use bc_velocity. This will also give me more time to develop, from the python side, the required modifications to use the new interface. Please let me know your comments",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778585840:336,config,configuration,336,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778585840,1,['config'],['configuration']
Modifiability,"Dear all,; This pull request is to add the gamma_BC variable (the intermittency function of B-C transition model) to the output file for visualization purposes, so that the user can see the laminar and turbulent regions of the flow.; This does not work as is now, and needs to be corrected. Tim is already helping me on this, and I am trying to figure everything out according to his comments. Any additional advice/help is appreciated. Hope this would be ready for the next release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/419:52,variab,variable,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/419,1,['variab'],['variable']
Modifiability,"Dear developers,; I am trying to install SU2 in docker ubuntu 18.04 container so that I can easily share with partner. But I failed to compile the code with following errors:; ```; (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx; checking build system type... x86_64-pc-linux-gnu; checking host system type... x86_64-pc-linux-gnu; checking target system type... x86_64-pc-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /bin/mkdir -p; checking for gawk... no; checking for mawk... mawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking whether make supports nested variables... (cached) yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... no; configure: error: in `/home/SU2':; configure: error: C++ compiler cannot create executables; See `config.log' for more details; ```; I am sure that I have installed gcc/g++ successfully. You can see; ```; (base) root@a5502ebdff64:/home# gcc --version; gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0; Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```; ```; (base) root@a5502ebdff64:/home# g++ -o hello hello.cc; (base) root@a5502ebdff64:/home# ./hello ; Hello, World!; ```; I have uploaded the `config.log` file. Could you give me some suggestions, please?; [config.log](https://github.com/su2code/SU2/files/3418183/config.log)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738:219,config,configure,219,https://su2code.github.io,https://github.com/su2code/SU2/issues/738,9,"['config', 'variab']","['config', 'configure', 'variables']"
Modifiability,"Dear developers,; I am trying to install SU2 v6.2.0 on Ubuntu 16.04 following the [instruction](https://su2code.github.io/docs/Python-Wrapper-Build/) you provided. But it failed with errors. I have installed Swig and mpi4py as you suggested. The command I used:; ```; ./configure --prefix=/home/lab/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx --enable-PY_WRAPPER; ```; The SU2_RUN and SU2_HOME environment variables displayed at the conclusion of configure. When I run `make -j 24`, the error showed up:; ```; make[2]: Entering directory '/home/lab/SU2/SU2_PY/pySU2'; swig -DHAVE_MPI -Wall -I/home/lab/anaconda3/include/python3.7m -I/home/lab/anaconda3/include/python3.7m -I/home/lab/.local/lib/python2.7/site-packages/mpi4py/include -I/home/lab/anaconda3/lib/python3.7/site-packages/mpi4py/include -I/Library/Python/2.7/site-packages/mpi4py/include -outdir ./ -o SU2_APIPYTHON_wrap.cxx -c++ -python /home/lab/SU2/SU2_PY/pySU2/pySU2.i ; /home/lab/SU2/SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; Makefile:532: recipe for target 'SU2_APIPYTHON_wrap.cxx' failed; make[2]: *** [SU2_APIPYTHON_wrap.cxx] Error 1; make[2]: Leaving directory '/home/lab/SU2/SU2_PY/pySU2'; Makefile:525: recipe for target 'all' failed; make[1]: *** [all] Error 2; make[1]: Leaving directory '/home/lab/SU2/SU2_PY/pySU2'; Makefile:441: recipe for target 'all-recursive' failed; make: *** [all-recursive] Error 1; ```. Best.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722:270,config,configure,270,https://su2code.github.io,https://github.com/su2code/SU2/issues/722,3,"['config', 'variab']","['configure', 'variables']"
Modifiability,"Dear reader, . Let me give a little bit background first:. When a massflow is prescribed for periodic flow (`KIND_STREAMWISE_PERIODIC= MASSFLOW`), then a pressure drop is iterated(/adapted in each iteration) to fulfill that massflow requirement. In the Volume Source term only this pressure drop is used. The initial value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Mass",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:181,adapt,adapted,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['adapt'],['adapted']
Modifiability,"Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; ```; solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; }; ```; Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/918#issuecomment-603929367:204,adapt,adaptive,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603929367,4,"['Adapt', 'adapt', 'config']","['AdaptCFLNumber', 'adaptive', 'config']"
Modifiability,"Describe the bug; I use SU2-v6.2.0 to optimize a wing. But it seems the SU2_DEF does not change the mesh in accord with the surface sensitivity. Is there something wrong with my configuration file? ; The surface sensitivity I got is here:; ![ed8f67ba4ad091367ee775b7e40408c](https://user-images.githubusercontent.com/55584189/95045704-2c11be00-0715-11eb-97a4-307f2dd0623d.png). The deformation is here:; ![45c257b8f11f820fa5be17e276ae65e](https://user-images.githubusercontent.com/55584189/95045842-6f6c2c80-0715-11eb-80ce-5ad26339217b.png). My configure is here:; [wing_op-200929.cfg.txt](https://github.com/su2code/SU2/files/5325585/wing_op-200929.cfg.txt). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1083:178,config,configuration,178,https://su2code.github.io,https://github.com/su2code/SU2/issues/1083,3,['config'],"['config', 'configuration', 'configure']"
Modifiability,"Do you have openmpi installed? Also, did you rebuild using the `meson setup --wipe build` command or `meson configure build <flags>` followed by the wipe command? If you just reran the ninja command then perhaps that could be the reason. I faced this issue first when I installed SU2 with openmpi and then used the mpich executable. So you might want to look into that. About the pywrapper issue, is your python version >= 3.7? What is the error that you are facing?. Edit: I forgot to mention, I ran the parallel script using both the command that you mentioned, it works just fine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721555309:108,config,configure,108,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721555309,1,['config'],['configure']
Modifiability,"Do you have pkg-config installed? It uses pkg-config to look for the dependencies it required. You can check if you have pkg-config with `which pkg-config`. If you don't have it, you can install on your ubuntu through. `sudo apt-get install pkg-config`. If it still doesn't work, or if you already have pkg-config installed, the python3.pc needs to be found by the pkg-config. Usually done by setting a `PKG_CONFIG_PATH` environment variable that points to the relevant python3.pc file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/903#issuecomment-595955473:16,config,config,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595955473,8,"['config', 'variab']","['config', 'variable']"
Modifiability,"Do you mean I need to add this in the flow config file? I tried that, it didn't work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1287#issuecomment-843267186:43,config,config,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-843267186,1,['config'],['config']
Modifiability,"Documenting the plan discussed in our developers call this morning here:; * Put header and sources together ; * Remove separation between Common/, SU2_CFD/, etc.; * Each major folder becomes a library (geometry/, solvers/, etc.); * Keep some subdirectories in major folders (e.g., solvers/flow/); * Set up include paths in the meson build system to make #include statements clean in the source; * Will prob require removing automake as part of this, which can’t build these libraries in parallel. Still need to finish separating files first. Tasks:; * @talbring - iteration classes; * @jayantmukho - grid adaptation, ADT structure, grid movement; * @pcarruscag - AD structure, folders for fem_\* ; * @economon - fluid model. Somewhat related:; * Run a test to see how many formatting-related conflicts result from running clang-format on and then diffing two fairly different branches (@pcarruscag). Please add anything else I am missing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-631567733:605,adapt,adaptation,605,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-631567733,1,['adapt'],['adaptation']
Modifiability,Don't modify the configs to add default options. Just the template is enough,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2362#issuecomment-2405204259:17,config,configs,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/2362#issuecomment-2405204259,1,['config'],['configs']
Modifiability,Done. These options are all now exposed to the user in the configuration file directly (v3.2.9).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/107#issuecomment-102170781:59,config,configuration,59,https://su2code.github.io,https://github.com/su2code/SU2/issues/107#issuecomment-102170781,1,['config'],['configuration']
Modifiability,Doxygen groups can be used to create a separate page which will display anything specified by a \ingroup command. I think this would be a good way to keep our documentation updated about the available config file options and their syntax.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/122:201,config,config,201,https://su2code.github.io,https://github.com/su2code/SU2/issues/122,1,['config'],['config']
Modifiability,"Dr. Albring, our model do not require any other config option for now. If needed in the future, I would definitely ask you some help. Thank you for your reviews. Please let me know if any other things need to be fixed.; Samet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257394392:48,config,config,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257394392,1,['config'],['config']
Modifiability,"Dr. Albring,; I have one more issue.; The gamma_BC is a variable in my model that is computed in every cell, and its value is in between 0 and 1 (so that it controls production term on/off in that cell). I would like to write gamma_BC variable to a tecplot output file in order to see the laminar and turbulent regions. However, as a beginner level C++ user, I really couldn't figure out how the output routines work. Would you please help me on this? Is it a complicated work?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257569540:56,variab,variable,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257569540,2,['variab'],['variable']
Modifiability,"Dr. Economon,. I have tried to add Schubauer-Klebanoff natural transition case for regression tests as you requested.; In my forked code under develop branch, I have the .cfg file in ""Schubauer_Klebanoff"" folder under ""TestCases/transition"" folder, so the config file directory should be correctly set. However, about a month ago, Dr. Albring moved grid.su2 file somewhere else that I could not locate now, so I am not sure how the regression test code will locate the grid file :) Just in case, I am attaching the grid file that I used for regression test. . Should there be any problem, please let me know.; [grid.zip](https://github.com/su2code/SU2/files/633737/grid.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-265131364:256,config,config,256,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-265131364,1,['config'],['config']
Modifiability,"Dry run errors, i.e. SU2_CFD -d <configname>.cfg",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/857:33,config,configname,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/857,1,['config'],['configname']
Modifiability,"During the change to the multizone config, the values in the history files for the turbomachinery cases are not being written anymore for the develop branch. The files are created as well as the header, but no values are written during every WRT_CON_FREQ iteration. Is there a marker that I need to add? I checked it with the APU_turbocharger testcase, nothing is written there as well.. - SU2 Version: [current develop branch @ commit 27f3875 ]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/746:35,config,config,35,https://su2code.github.io,https://github.com/su2code/SU2/issues/746,1,['config'],['config']
Modifiability,"EOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16036,config,config,16036,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,"ERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: che",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:9899,config,configure,9899,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,6,['config'],['configure']
Modifiability,"Edwin,. I think it is a good idea to be able to have some level of control over the application of the wall functions on a marker-by-marker basis: as you say, it would be fairly common to have a wing marker where integration to the wall makes sense and a fuselage marker where wall functions (or even an inviscid BC) is the right thing to do. So let’s indeed do something like what Tom suggests (in the spirit of MARKER_MONITORING) so that one can control which markers get wall functions applied. If a list of markers is not specified in the config file, the default behavior should be that all no-slip walls get wall function BCs. If a list of markers is specified, then those and only those markers listed get wall function Bfs (with the others getting integration to the wall treatment). Now, what you point out in the second half of your message is the ultimate in flexibility: not only specifying wall functions in a subset of the no-slip wall markers, but also allowing for different kinds of wall functions to be used in those markers. I imagine that this would be a seldom used capability…but someone out there might have the need. I guess it does not seem to me that the coding of the most flexible logic is that much more complicated, so we may as well do that. If you guys think it is too complicated, the advertised options in the config file can allow some simpler behavior. My two cents,. Juan. On Sep 5, 2017, at 9:58 PM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Juan,. I think that having the flexibility to apply wall functions on only a subset of the viscous wall boundaries would be useful. E.g., if you are interested in a wing, you can apply integration to the wall there, but apply wall functions on the fuselage. My preference would be to have a dedicated BC type for that, i.e. Tom's second suggestion. Apart from this, we can have the different wall model types as a single input parameter, i.e. you apply the same wall model ty",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327377108:543,config,config,543,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327377108,2,['config'],['config']
Modifiability,Else after return is fine but I don't like the others.; Isolate declarations is not addressing the true problem. Variables should be declared when needed and made const if possible.; We cannot use auto for the return type of operations with su2double,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1989#issuecomment-1491794539:113,Variab,Variables,113,https://su2code.github.io,https://github.com/su2code/SU2/pull/1989#issuecomment-1491794539,1,['Variab'],['Variables']
Modifiability,Enhance regressions,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/253:0,Enhance,Enhance,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/253,2,['Enhance'],['Enhance']
Modifiability,Enhancement fixed cl,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/779:0,Enhance,Enhancement,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/779,1,['Enhance'],['Enhancement']
Modifiability,Enhancement for multipoint optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781:0,Enhance,Enhancement,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/781,1,['Enhance'],['Enhancement']
Modifiability,Enhancements for the fixed CL mode,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780:0,Enhance,Enhancements,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/780,1,['Enhance'],['Enhancements']
Modifiability,"Eran,. I don't see the problem. The only thing you have to do before calling the configure script is to invoke autoreconf (which is included in all repos of any distribution). At the moment we have to do that most of the time anyway due to compatibility problems.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-423805426:81,config,configure,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-423805426,1,['config'],['configure']
Modifiability,"Ettore,. Thanks for submitting this. I thought you gave an excellent presentation at the SU2 Conference and the much better actuator disk model you and your colleagues have put together will surely be useful to many people. Thanks for participating and being a member of the SU2 Community. Please stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed….maybe next year?). Best wishes,. Juan. > On Jun 18, 2020, at 1:27 AM, SaettaE <notifications@github.com> wrote:; > ; > Proposed Changes; > ; > Addition of a new actuator disk model with a variable load and swirl distributions along disk radius.; > ; > Contributors:; > Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; > EttoreSaetta, lorenzorusso07, rtogna.; > ; > Related Work; > ; > Introduction of new options in the config. file.; > Introduction of an additional input file that contains the propeller data.; > Introduction of additional c++ functions.; > Addition of code lines to existing functions preserving the original actuator disk model.; > ; > PR Checklist; > ; > [X ] I am submitting my contribution to the develop branch.; > My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; > [ X] My contribution is commented and consistent with SU2 style.; > I have added a test case that demonstrates my contribution, if necessary.; > I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/1027 <https://github.com/su2code/SU2/pull/1027>; > Commit Summary; > ; > Update config_template.cfg; > File Changes; > ; > M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5); > Patch Links:; > ; > https://github.com/su2code/SU2/pull/1027.patch <https://githu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454:586,variab,variable,586,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454,2,"['config', 'variab']","['config', 'variable']"
Modifiability,Example was not running due to AssertionError: Config file has multiple specifications of CFL_ADAPT_PARAM; Duplicated entry of CFL_ADAPT_PARAM removed,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/391:47,Config,Config,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/391,1,['Config'],['Config']
Modifiability,Expand the Rotation DV variable,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/121:23,variab,variable,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/121,1,['variab'],['variable']
Modifiability,"Expose design variable bounds, max optimizer iterations, and optimization tolerance to the user in shape_optimization.py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/107:14,variab,variable,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/107,1,['variab'],['variable']
Modifiability,Extend custom python BC to include Euler/NS and turbulence variables.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/503:0,Extend,Extend,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/503,2,"['Extend', 'variab']","['Extend', 'variables']"
Modifiability,Extending CFL adapt to include species transport,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2298:0,Extend,Extending,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2298,2,"['Extend', 'adapt']","['Extending', 'adapt']"
Modifiability,"FFD has had major improvements, including options in the config for controlling the set up. See also #213 #239 #330",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/116#issuecomment-360062909:57,config,config,57,https://su2code.github.io,https://github.com/su2code/SU2/issues/116#issuecomment-360062909,1,['config'],['config']
Modifiability,FIx a bug which influenced the convergence behavior when using multigrid and SST by allowing the turbulent solution vector to propagate into the coarser grids (during multigrid) at each iteration. In addition this fix includes an update in the variable names for the parallel output.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/372:244,variab,variable,244,https://su2code.github.io,https://github.com/su2code/SU2/pull/372,1,['variab'],['variable']
Modifiability,"FYI, just so I can keep debugging the RANS adaptation in feature_adap_sst, I've merged it into [feature_adap](https://github.com/su2code/SU2/tree/feature_adap). You should use feature_adap instead from here on out since feature_adap_sst will be pretty volatile. I'll modify my comment above in case anybody references this thread.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619421429:43,adapt,adaptation,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619421429,1,['adapt'],['adaptation']
Modifiability,"F_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:15982,config,config,15982,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,Feature CFL adaptation initial iteration,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2362:12,adapt,adaptation,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/2362,1,['adapt'],['adaptation']
Modifiability,Feature actuator disk with variable load,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027:27,variab,variable,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027,1,['variab'],['variable']
Modifiability,"Feature: Blade element momentum (BEM) method for variable load actuator disk modelling of propellers. ## Proposed Changes. The present work is on modifications to the actuator disk model. Variable load actuator disk (VLAD) [Saetta, 2020] uses the given blade loading (which is fixed for the entire duration of the simulation) to impose axial and tangential jumps at the interface. Propeller loading depends on many different parameters and is affected by the surrounding structures and angle of attack (AoA). A method that updates the blade loading at run time is required to take care of the interactions and installation effects. . In the present approach, the Blade Element Method (BEM) is used to calculate the pressure jump and swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:49,variab,variable,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,2,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:163,adapt,adaption,163,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720,4,"['Adapt', 'adapt', 'config']","['Adaptive', 'adaption', 'configuration']"
Modifiability,"First off, I love the changes. A cleanup of COuput and greater output flexibility were much needed. So let me see if I understand this code. Say that I, as a developer, want to add a new variable to the volume output. For example, I want the production of turbulent kinetic energy from the SST model during a compressible simulation. As a user, I can always add new outputs by adding new field names to the config file. But production isn't one of the (currently) available config-file options. So I would have to code it. First, I would obviously make sure that the production is properly stored in the turbulence variable class, with an accessor like `GetTurbProduction()`. Second, in `CFlowCompOutput::LoadVolumeData`, I would add to the appropriate place:. ```cpp; SetVolumeOutputValue(""PRODUCTION"", iPoint, Node_Turb->GetTurbProduction());; ```. Third, I would add `PRODUCTION` as a cfg input by adding the following line to `CFlowCompOutput::SetVolumeOutputFields`:. ```cpp; AddVolumeOutput(""PRODUCTION"", ""Turb_Production"", ""PRIMITVE""); ```. I could also split off production into its own output group by changing `PRIMITVE` to any other name. This name does not have to be registered anywhere else. In other words, I can change `PRIMITVE` to `SST_NUMERICS` and the only other place I need to put `SST_NUMERICS` is my cfg file. Finally, I could add either of the two following lines to my cfg file:; ```; VOLUME_OUTPUT= (COORDINATES, SOLUTION, PRODUCTION) ; VOLUME_OUTPUT= (COORDINATES, SOLUTION, SST_NUMERICS); ``` . Is this example correct? If not, what am I misunderstanding? What am I missing?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-514031723:187,variab,variable,187,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-514031723,4,"['config', 'variab']","['config', 'config-file', 'variable']"
Modifiability,Fix CFL Turbulence reduction option for adaptive cfl,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295:40,adapt,adaptive,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295,1,['adapt'],['adaptive']
Modifiability,Fix COptionEnumList bug. The previous parsing script set all of the DVKind variables to the first one. This commit changes it.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/154:75,variab,variables,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/154,1,['variab'],['variables']
Modifiability,Fix CST parameterization method,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2124:8,parameteriz,parameterization,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/2124,1,['parameteriz'],['parameterization']
Modifiability,Fix WALL_TIME for unsteady + some variable index cleanup,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1544:34,variab,variable,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/1544,1,['variab'],['variable']
Modifiability,Fix adjoint for streamwise periodic massflow + General handling of adjoints of additional solution variables,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:99,variab,variables,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['variab'],['variables']
Modifiability,Fix bug in SA-neg diffusion term (and generalize indices of flow variables for use by scalar solvers and numerics),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1392:65,variab,variables,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/1392,1,['variab'],['variables']
Modifiability,Fix configure,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586:4,config,configure,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/586,1,['config'],['configure']
Modifiability,Fix dissipation in transition model and update inlet profile (initial profile from config),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1268:83,config,config,83,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268,1,['config'],['config']
Modifiability,Fix driver/config restructure bug,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/751:11,config,config,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/751,1,['config'],['config']
Modifiability,Fix incorrect adaptive CFL reporting,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/233:14,adapt,adaptive,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/233,1,['adapt'],['adaptive']
Modifiability,Fix loop variable privatization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2350:9,variab,variable,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/2350,1,['variab'],['variable']
Modifiability,Fix wallfunction variable computation on mpi rank edges,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1791:17,variab,variable,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/1791,1,['variab'],['variable']
Modifiability,Fixed possible infinite loop in mesh adaptation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/492:37,adapt,adaptation,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/492,1,['adapt'],['adaptation']
Modifiability,"Fixed up the alignment issues, but I really think it is time that we move to an auto-formatter as a project (clang-format or another tool). It is not sustainable in a large project such as this to manually manage it. We can do it as a pre-commit hook, which is a bit harsh as it forces everyone to install the formatter and could cause issues at commit time for folks, or we could also do it as a GitHub action perhaps. For instance, ninja can already do this for us as a one liner: install clang-format, drop a .clang-format file into the root SU2/ directory, configure a build, cd into build folder and ```$ ninja clang-format``` = entire project auto-formatted into a style of our choosing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/969#issuecomment-625329082:561,config,configure,561,https://su2code.github.io,https://github.com/su2code/SU2/pull/969#issuecomment-625329082,1,['config'],['configure']
Modifiability,Fixing Design Variable Indices to be consistent,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/757:14,Variab,Variable,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/757,1,['Variab'],['Variable']
Modifiability,"Folks,. Any idea why the CodeFactor fails here? I just replaced the name of a variable in 4 lines. Also restarting the check for CodeFactor does not seem to work. Thanks,; Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1016#issuecomment-639018734:78,variab,variable,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/1016#issuecomment-639018734,1,['variab'],['variable']
Modifiability,"Folks,. Just a general remark. Some of the doxygen comments of the functions and variables are not consistent, because these are simply copied. There are examples in the code where several functions have exactly the same comments and those comments do not make any sense whatsoever. So could everybody also pay attention to the comments before a pull request is made? You do not only write this code for yourself but also for other people and wrong comments can be extremely confusing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/544:81,variab,variables,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/544,1,['variab'],['variables']
Modifiability,"Food for thought: According to his most recent AIAA talk, Spalart himself has tried to keep the model variants ""modular."" Some of the variants are compatible with each other. For example, you can add a ""rotation-curvature correction"" and a ""compressiblity correction"". The NASA TMR catalogue reflects this design by stating ""These corrections can be applied individually or together in combination with the General Model."". A simple `SA_QCR` or `SA_COMP` naming scheme doesn't match the underlying design. On the user-facing side, separate config options might be better for some of the variations. On the code side, bit flags (Issue #770) might be a good way to gather all the model variants together into a single config option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/992#issuecomment-652446915:540,config,config,540,https://su2code.github.io,https://github.com/su2code/SU2/issues/992#issuecomment-652446915,4,['config'],['config']
Modifiability,"For SU2_DOT_AD the mesh deformation is differentiated manually, this is easy to do because it is a linear operation and the stiffness matrix does not depend on the design variables. You can read more about this kind of manual differentiation (forward and reverse) here: https://people.maths.ox.ac.uk/gilesm/files/NA-08-01.pdf. 1. If there is a better way please get involved in the optimization overall discussion. 2. Your interpretation of the sensitivities is correct. For clarity the FD mode of SU2_DOT is for use with the continuous adjoint only, for which the sensitivities at the surface already include the projection. 3. Not entirely sure if I understood. I think the interpretation of the boundary displacement sensitivities depends on how you initialize the adjoints. Formally what you should get is the product of the Jacobian transpose with the vector of adjoints you initialize. Those surface sensitivities are different from the ones in the file because they include the volume projection, whereas the ones in the file do not (they are the sensitivity wrt the surface nodes, but not considering that moving surface nodes also moves interior nodes).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1017#issuecomment-639520678:171,variab,variables,171,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-639520678,1,['variab'],['variables']
Modifiability,For future questions on configuration settings you will get a faster response on our forum at http://www.cfd-online.com/Forums/su2/. ; The location of metis can be set with the configuration flags described in the installation instructions at; https://github.com/su2code/SU2/wiki/Build-from-Source,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/40#issuecomment-70964739:24,config,configuration,24,https://su2code.github.io,https://github.com/su2code/SU2/issues/40#issuecomment-70964739,2,['config'],['configuration']
Modifiability,"For next release, I think we have no choice but to just update the current template. In the future, we should go to a self-describing set of config options (add descriptive strings to each option in config_structure.cpp) so that we can automatically write a consistent config template. Better yet, the same strings can be used for an interactive help mode using the command line parser that @talbring has added. These things would go a long way to help users with the config - which is one of our major pain points.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/772#issuecomment-524917823:141,config,config,141,https://su2code.github.io,https://github.com/su2code/SU2/issues/772#issuecomment-524917823,3,['config'],['config']
Modifiability,"For updating the build, I would recommend the following: after adding the headers and sources in the correct directories, modify only configure.ac to do the correct checks for the tecio option, m4/tecio.m4 to configure the compilation of tecio, and externals/tecio/Makefile.am to make sure the proper headers/files are being included in the build. . Then, as a final step, run the ./bootstrap script in the root directory of SU2/, which will build and run autoreconf with an older, standard version of the autotools that we ship for portability. This will update the makefiles throughout the build for you, and from there, you can run configure - make - install. Just let me know if you're still having trouble.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-414578307:134,config,configure,134,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-414578307,4,"['config', 'portab']","['configure', 'portability']"
Modifiability,"From the SU2 paper, talking about ""guiding principles"":. <img width=""574"" alt=""Screen Shot 2019-10-09 at 3 26 46 PM"" src=""https://user-images.githubusercontent.com/19416354/66525312-edb5d480-eaa9-11e9-9c0f-158b3941b407.png"">. I particularly like. > Full documentation, including a comprehensive set of tutorials. (""including"" implying that the tutorials are a subset of the documentation), and . > expose the full set of options [...] to the practitioner. This conflicts with our ""operating principle"", laid out on the tutorials page:. > Rather than writing a long manual on all available (and constantly evolving) configuration options available in SU2[...]. The Guide to V7 is a good start, but I think at the bare minimum (since I agree that full documentation would be a huge task, though one that's apparently promised on a paper we link on our homepage), we should provide more information about the existing options beyond forcing the user to scroll through config_template.cfg or dig through the tutorials.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/775#issuecomment-540239931:615,config,configuration,615,https://su2code.github.io,https://github.com/su2code/SU2/issues/775#issuecomment-540239931,2,['config'],['configuration']
Modifiability,"G from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:1623,config,configuration,1623,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,2,"['adapt', 'config']","['adapts', 'configuration']"
Modifiability,"GCC doesn’t necessarily come with g++. Does which g++ show anything? If not, try: sudo apt-get install g++. Dave. From: thw1021 [mailto:notifications@github.com]; Sent: Monday, July 22, 2019 8:38 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: [su2code/SU2] C++ compiler cannot create executables (#738). Dear developers,; I am trying to install SU2 in docker ubuntu 18.04 container so that I can easily share with partner. But I failed to compile the code with following errors:. (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx. checking build system type... x86_64-pc-linux-gnu. checking host system type... x86_64-pc-linux-gnu. checking target system type... x86_64-pc-linux-gnu. checking for a BSD-compatible install... /usr/bin/install -c. checking whether build environment is sane... yes. checking for a thread-safe mkdir -p... /bin/mkdir -p. checking for gawk... no. checking for mawk... mawk. checking whether make sets $(MAKE)... yes. checking whether make supports nested variables... yes. checking whether make supports nested variables... (cached) yes. checking for style of include used by make... GNU. checking whether the C++ compiler works... no. configure: error: in `/home/SU2':. configure: error: C++ compiler cannot create executables. See `config.log' for more details. I am sure that I have installed gcc/g++ successfully. You can see. (base) root@a5502ebdff64:/home# gcc --version. gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0. Copyright (C) 2017 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. (base) root@a5502ebdff64:/home# g++ -o hello hello.cc. (base) root@a5502ebdff64:/home# ./hello. Hello, World!. I have uploaded the config.log file. Could you give me some suggestions, p",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847308:574,config,configure,574,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847308,1,['config'],['configure']
Modifiability,"GE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conft",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:9991,config,configure,9991,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability,"Generated .su2 mesh using Gmsh with same number of elements and nodes as .cgns mesh have on ""su2code.github.io/Inviscid_Wedge/"" repository and used same configuration file from the repository but results are different on using .su2 mesh from Gmsh and the one downloaded from repository. . Its weird that both the mesh are exactly same and same cfg file but different shock resolutions (repository mesh give smoother result). Please check attached Mach contour generated using Paraview.; ![MachContour](https://user-images.githubusercontent.com/59632055/75407996-ce83ea80-5957-11ea-8b7c-9c1a731d7a84.png); [mesh_and_config_files.zip](https://github.com/su2code/SU2/files/4259257/mesh_and_config_files.zip). **Desktop (please complete the following information):**; - OS: Windows 7; - MPI implementation and version: MicrosoftMPI v10.1; - SU2 Version: v7.0.0 (binary executable)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/890:153,config,configuration,153,https://su2code.github.io,https://github.com/su2code/SU2/issues/890,1,['config'],['configuration']
Modifiability,"Good catch! yep! I implemented an interesting/important change: Before, WALL_DISTANCE was computed using only the surfaces that you have identified as moving surfaces... as you can imagine that only works when you have a very simple problem (maybe an airfoil) but... if you have a problem with more Navier-Stokes markers together and you are moving only one of them the method doesn't work (e.g. wing-fuselage). For that reason I reimplemented WALL_DISTANCE which now is computed from all the solid surfaces and I also created DEF_WALL_DISTANCE that computes the distance from the surfaces that we are moving (as before). Frankly, I haven't found a situation in which DEF_WALL_DISTANCE outperforms the new solid WALL_DISTANCE... And, my suggestion is to eliminate DEF_WALL_DISTANCE in the future. For the time being I have added DEFORM_STIFFNESS_TYPE= DEF_WALL_DISTANCE to the config files to see if that solves the problem. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/412#issuecomment-318673304:877,config,config,877,https://su2code.github.io,https://github.com/su2code/SU2/pull/412#issuecomment-318673304,2,['config'],['config']
Modifiability,"Good evening everybody.; I apoligize in advance for the banality of my question, but I am facing some problematics I did not expect.; I am currently trying to run some symulations on NASA Rotor67 using the Body Force Model (implemented in the GIT branch feature_turbo_bodyforce) but my issues are connected with boundary conditions in general.; I am imposing total conditions at the inlet (Pt = 101325 [Pa], Tt = 288.15 [K]) and static pressure at the outlet (P = 12600 [Pa]). The symulation is then run up to convergece (RMS < 1e-8).; The fact is that when I postprocess the data I find:; - Both the BC are not respected, especially the outlet one;; - The flow shows regular behaviour in the straight outlet section until it develops an unreasoable bubble of high P and T near the ; outlet hub.; These isues are further enhanced as I refine the grid more and more. Even though this is just very short semplification of the problem at hand, I would like to know wheter this issue can be related to my the model I am using or rather to some wrong settings. I have been told that the RMS instability at the outlet hub is not unusual in SU2. How can I hardly enforce my BC? I do not understand why I get an inlet different from what I set. Moreover is there any way to impose a mass flow outlet condition? ; Thanks for the attention.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1498:821,enhance,enhanced,821,https://su2code.github.io,https://github.com/su2code/SU2/issues/1498,1,['enhance'],['enhanced']
Modifiability,"Good point about making the eigen-functions static. That makes it a lot more accessible in other parts of the code. Will include that in the changes along with the option name changes. . I like the idea about the static allocation, but I foresee a problem that you actually mention. If I convert the variables to be statically defined, I would have to make the eigen-functions accept statically defined arrays. Since most arrays in SU2 are dynamically allocated, this would cause some compatibility issues. . In general, I see the value in making a math library associated with matrix operations. Maybe you could pitch the idea in an issue and get feedback on it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-433963723:300,variab,variables,300,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-433963723,2,['variab'],['variables']
Modifiability,"Got it, by navigation you mean from cpp to hpp then?; I agree with you but I would suggest having those extra subdirs in solver and co.; ```; SU2/; solvers/; meson.build; CSolver.hpp; CSolver.cpp; flow/; solver_\*.cpp; solver_\*.hpp; turbulence/; ```; For me what makes navigation a bit cumbersome is scrolling past all the variables to get to the ones of a particular solver for example, the hpp/cpp I don't mind so much they are 2 clicks away in the IDE I use.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-630925996:324,variab,variables,324,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-630925996,1,['variab'],['variables']
Modifiability,"Got my first glasses half a year into Fortran… and never looked back. From: Pedro Gomes <notifications@github.com>; Sent: 28 January 2021 11:13; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] Structural stress penalty function for optimization, fix some CConfig problems (#1176). @pcarruscag commented on this pull request. ________________________________. In Common/src/grid_movement/CSurfaceMovement.cpp<https://github.com/su2code/SU2/pull/1176#discussion_r566010726>:. > - Omega = (config->GetRotation_Rate(3)/config->GetOmega_Ref());. + Omega = config->GetRotation_Rate(2)/config->GetOmega_Ref();. As blind an any programmer, we should have XYZ enums. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/1176#discussion_r566010726>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AATH4JKAAEAXKNHHCUGOQT3S4FBB7ANCNFSM4WOZ6DBA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1176#issuecomment-769213365:556,config,config,556,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176#issuecomment-769213365,4,['config'],['config']
Modifiability,"Got this question when running a shocktube problem. Used Euler explicit time stepping method and a fixed time step. In addition, I non-dimensionalized the variables. By cheking the solution, the solution is marching by the specified physical time. It is supposed to use the non-dimensional time step, right? If so, then a bug report is submmitted. . if (time_steping) {; # ifdef HAVE_MPI. ```; su2double rbuf_time, sbuf_time;; sbuf_time = Global_Delta_Time;; SU2_MPI::Reduce(&sbuf_time, &rbuf_time, 1, MPI_DOUBLE, MPI_MIN, MASTER_NODE, MPI_COMM_WORLD);; SU2_MPI::Bcast(&rbuf_time, 1, MPI_DOUBLE, MASTER_NODE, MPI_COMM_WORLD);; Global_Delta_Time = rbuf_time;; ```; # endif. ```; for (iPoint = 0; iPoint < nPointDomain; iPoint++){. /*--- Sets the regular CFL equal to the unsteady CFL ---*/; config->SetCFL(iMesh,config->GetUnst_CFL());. /*--- If the unsteady CFL is set to zero, it uses the defined unsteady time step, otherwise; it computes the time step based on the unsteady CFL ---*/; if (config->GetCFL(iMesh) == 0.0){; node[iPoint]->SetDelta_Time(config->GetDelta_UnstTime()); //Here should we use GetDelta_UnstTimeND?; } else {; node[iPoint]->SetDelta_Time(Global_Delta_Time);; }; }; ```. }",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/320:155,variab,variables,155,https://su2code.github.io,https://github.com/su2code/SU2/issues/320,5,"['config', 'variab']","['config', 'variables']"
Modifiability,"Great! Thanks @economon for the link. I have 2 main questions after reading through those changes:. 1. Would the custom objective function below need to modified for a velocity init/pressure outlet instead of a mass flow outlet?. `Total_Custom_ObjFunc = pow((config->GetSurface_MassFlow(0)/config->GetSurface_MassFlow(1) - 0.046),2.0)`. 2. This question needs a bit of context. A summary of the issues I see in the deformed mesh:. a. ~1.04M (out of ~4.2M) elements are missing:; <img width=""713"" alt=""Screen Shot 2020-03-18 at 10 39 32 AM"" src=""https://user-images.githubusercontent.com/62301101/77670983-ed749d00-6f54-11ea-86ee-6a49c0003f84.png"">; b. Sequences of elements interleaved at irregular intervals:; <img width=""714"" alt=""Screen Shot 2020-03-18 at 10 40 10 AM"" src=""https://user-images.githubusercontent.com/62301101/77671352-7ee40f00-6f55-11ea-91b8-ed13178139db.png"">; c. The NPOIN= declaration is missing, and points also interleaved at irregular intervals:; <img width=""884"" alt=""Screen Shot 2020-03-18 at 10 37 14 AM"" src=""https://user-images.githubusercontent.com/62301101/77671853-29f4c880-6f56-11ea-9061-046d690ab42f.png"">. To me it almost seems as if different processes are trying to write to the file at the same time and overwriting each other. Could this be caused by my using the DRAG objective function with my hardcoded initial velocity values? If so, could a custom objective function solve this problem?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/912#issuecomment-604543256:259,config,config,259,https://su2code.github.io,https://github.com/su2code/SU2/issues/912#issuecomment-604543256,2,['config'],['config']
Modifiability,"Guys, we really want to merge this in soon to go on with the output/input refactorization. Someone else has some comments ? Otherwise, we need some approvals :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528#issuecomment-396174581:74,refactor,refactorization,74,https://su2code.github.io,https://github.com/su2code/SU2/pull/528#issuecomment-396174581,1,['refactor'],['refactorization']
Modifiability,"H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. ------------------------------------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:15769,extend,extended,15769,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,"['config', 'extend']","['config', 'extended']"
Modifiability,"Heather, thanks for your response.; I do agree that it is preferable to avoid an exhaustive list of defaults. However, currently SU2 runs double booking: For the C++ code, defaults are set in SetRunTime_Options (part of config_structures.cpp) and for the Python scripts, a partial list of defaults is defined in config.py. If we can automatically sync between the c++ and python codes, it will make developers life much easier. ; I suggest creating a single ASCII file that contains all the defaults values. This file can be read both by the c++ code and by the Python scripts, before overwitting parameters, reading from the case cfg file. ; Such a file can be part of the distribution. Whenever a new parameter is defined in SetRunTime_Options, its default value should be written in the defaults' file. Actually, we can prepare a rendering script that would read through SetRunTime_Options and prepares the defaults in the ASCII file, synced with the c++, for the Python. What do you think?; Best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-377178756:312,config,config,312,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-377178756,1,['config'],['config']
Modifiability,"Hello @aditya12398 ,. I was able to recreate your problem with pywrapper enabled on my machine, and I believe I may have found the issue. There was a change with Python 3.8's configure utility. The change is noted here:. https://docs.python.org/dev/whatsnew/3.8.html#debug-build-uses-the-same-abi-as-release-build. This affected the meson build system, as noted here:. https://github.com/mesonbuild/meson/issues/5629. I believe I have solved the problem by adding two lines to the main `meson.build` file in the SU2 root directory. If you can, please checkout branch ""fix_python_3.8"", and see if that solves the Python wrapper compilation problem. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631167702:175,config,configure,175,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631167702,1,['config'],['configure']
Modifiability,"Hello @aditya12398 ,. The fifth line of the file you attached shows a call to `c++`, rather than `mpicxx`, which could cause those undefined references. Basically, the linker is not seeing your mpi libraries. I believe that, in order to use the `-Dcustom-mpi=true` flag, you may need to define your compiler environment variables (such as `$CC`, `$CXX`, `$LD`, `$MPICXX`, etc). Having both OpenMPI and MPICH installed on your system is complicating things, I think. Without some manual configuration of your system's environment, it may not be clear to meson/ninja which mpi implementation should be used. You may need to do some digging around on the internet to see how to properly resolve which MPI implementation gets used for different applications. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634825410:320,variab,variables,320,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634825410,4,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"Hello @kohyun, to navigate to the mesh and config file you can just use the Terminal App and `cd` to your directory with mesh/config.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/994#issuecomment-631607647:43,config,config,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/994#issuecomment-631607647,2,['config'],['config']
Modifiability,"Hello @pcarruscag, what do you mean by portable name? Do you mean a variable on Linux to determine the user name? If so, then it is `$USER`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/979#issuecomment-626970877:39,portab,portable,39,https://su2code.github.io,https://github.com/su2code/SU2/issues/979#issuecomment-626970877,2,"['portab', 'variab']","['portable', 'variable']"
Modifiability,"Hello @pcarruscag,. I've been following the conversation about #1124 and the possible conflicts with this PR. I wanted to say that, with respect to this specific PR I kept working on a different branch lately (**feature_pyBeam_ShapeDesignV2**) which, is currently the most advanced version of the project. How to conciliate? Shall we pull from feature_pyBeam_ShapeDesignV2 directly here? . One issue of that version is that I had to introduce some changes into the CFD solver to extend to FSI the fixed Cl design feature. I thought the mods where general but that actually broke something within SU2 CFD AD. . Best,; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/902#issuecomment-743400230:479,extend,extend,479,https://su2code.github.io,https://github.com/su2code/SU2/pull/902#issuecomment-743400230,1,['extend'],['extend']
Modifiability,"Hello Dr. Economon,; I have been busy for some time, and just had chance to submit my transition model here on GitHub. Before starting the NREL case, I decided to check the caradonna_tung test case to see how to set grid movement configurations etc.. Although I have successfully run the case with euler equations, I could not do so with the navier-stokes equations as the case stopped running with error ""Convective scheme not implemented (turbulent)"". This is why I could not solve the NREL test case. If I am missing something, would you please help me on the issue?. Samet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257389300:230,config,configurations,230,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257389300,1,['config'],['configurations']
Modifiability,"Hello Pedro, thanks for your quick reply! ; More than the differentiation of the mesh deformation problem I was referring to what SU2_DOT does in the specific, at least in terms of workflow.; In fact, reading your answer I realise that maybe I'm misunderstanding the process done by SU2_DOT.; I thought that, in case of Disc. Adjoint, SU2 solver was already providing the _total_ sensitivity of the objective function with respect to the boundary grid nodes displacements. This already includes the contribution of the mesh deformation. given this, I thought that SU2_DOT was simply projecting such sensitivities on the FFD box point displacements chosen as design variables. But I cannot understand then why the need to include the mesh deformation problem within SU2_DOT.; Can you let me know about that please?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1017#issuecomment-640071772:665,variab,variables,665,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-640071772,2,['variab'],['variables']
Modifiability,"Hello Pedro,. No problem at all. I just got stuck on a few issues in the PB solver and other things so I wasn't able to focus on this PR in a while. But yeah, I am indeed stuck on how to update the map in MPI. What I have done so far is kept the Global roughness array in config class for the BC_* routines and created an unordered map in physical geometry class which will be used in the SetWallDistance routine instead of the config call. I haven't used maps in C++ at all, so it is taking a while. I will try a few more things and if I can't fix it I will ask on slack or in the meeting next time. Cheers,; Akshay",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-653064740:272,config,config,272,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653064740,2,['config'],['config']
Modifiability,"Hello Pedro,. Unfortunately, I will not be able to attend in the developer meeting tomorrow. However, I will try to shed some light on the PR internals.; 1.	I added ‘**rapidjson**’ subfolder into the externals which is actually a set of files from ; https://github.com/Tencent/rapidjson/tree/master/include/rapidjson catalog.; These header files are the essence of the ‘**rapidjson**’ library, which makes working with _json_ files much easier. I guess the rapidjson’s headers make up more than 1/3 of the total code size within PR.; 2.	The **CPengRobinsonCoolPropAncillaries.hpp** file contains char array ‘**_all_cubics_extended_JSON_binary_**’ that is the binary representation of all the fluid ‘json’ files extracted from **CoolProp** sources and translated into single compiled variable. Such a solution lets keep all raw data of the fluids in a single place without necessity to work with file system. The definition of ‘**_all_cubics_extended_JSON_binary_**’ variable consists of 11.7k lines of codes. ; 3.	The key files of the PR are the **CPengRobinsonCoolProp.hpp** and **CPengRobinsonCoolProp.cpp** (about 1.7k lines of code in sum). All the source codes of the fluid model are contained exclusively in these files and there are no calls to external libraries inside except **rapidjson** library (in constructor of the class). If you have any other questions, just let me know. ; Sincerely and best wishes. P.S. I faced with the issue while running LGTM code analysis (compile errors). Honestly, I need some time to fix it because I am working on Windows (**mingw-w64** and **Visual Studio**) and I haven’t encountered similar errors. This is my fault and I promise to check my sources on Linux before pushing the commits.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1402#issuecomment-941017233:783,variab,variable,783,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402#issuecomment-941017233,2,['variab'],['variable']
Modifiability,"Hello SU2 Community! . I am simulating flow over a 6-blade propeller and modeling 1/6th of the domain with an assumption that it is axisymmetric. I meshed the computational domain generating an unstructured grid using ANSYS Meshing with a targetted y+<1 and simulated the case using a pressure-based (SIMPLE) solver with S-A turbulence model in Fluent. It is a steady-state simulation and used a frozen rotor approach. Fluent converged after the reduction of continuity residuals by four orders of magnitude. For simulating the domain in SU2, I had converted the mesh into CGNS format, simulated with similar settings using SU2's RANS Solver (S-A) with rotating domain and periodic boundary conditions. The simulation converges as the residuals drop by two orders of magnitude and monitors stabilize after 30k iterations. . On checking the contours, the SU2 predicts relatively high y+ values, especially near the junction of propeller blade root and spinner, where the values go up to y+~250, while it is around y+=1-2 in the rest of the domain. Whereas, Fluent predicts the y+<1 throughout for the same mesh. The values of forces and moment are off by two orders, on comparing it with the Fluent and experimental results. But, flow-field and contours of pressure distribution look similar for both SU2 and Fluent. I'm wondering what might have led to the difference in the results. I have refined the mesh, but it only reduces y+ by a small number. I have attached the config file and would like some inputs. Thanks in advance. [Prop_config.txt](https://github.com/su2code/SU2/files/5857368/Prop_config.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1175:1471,config,config,1471,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175,1,['config'],['config']
Modifiability,"Hello SU2 community,. I'm currently interested in the theoretical background used in SU2_DOT (both in the FD or AD option). Is it available somewhere? The use I'm interested in is the propagation of the sensitivity of the selected objective function with respect to the boundary grid displacements to the FFD control point displacements. Moreover I have two specific questions:. 1) If, for design optimisation, design variables are the FFD control points, once performed the point inversion (which is usually done only at the beginning of the optimization process), the relation between surface grid nodes and FFD control points is fixed and analytically given by the Bernstein polynomials, once provided the parametric coordinates. Why, then, the need to perform the chain rule with Finite Differences or AD?. 2) SU2_DOT uses, to perform the chain rule, surface adjoint solution(in case of FD) or the volume adjoint solution (in case of AD). These values are provided in output by the SU2_CFD adjoint solver. If printing the solution in CSV format I can read, among others, values such `""Sensitivity_x"",""Sensitivity_y"",""Sensitivity_z"",""Surface_Sensitivity""` on every grid point. Now, these values, trying to give a look inside the code, are addressed as, respectively, sensitivities in x/y/z/normal directions. Are these values the sensitivity of the selected objective function with respect to the grid node displacement?. 3) In file `python_wrapper_structure.cpp` function; `vector<passivedouble> CDriver::GetMeshDisp_Sensitivity(unsigned short iMarker, unsigned long iVertex)` ; also provides boundary displacement sensitivities of the objective function, with the call:; `Disp_Sens[0] = solver->GetNodes()->GetBoundDisp_Sens(iPoint, 0);`. These values are, in effect the sensitivity of the objective function with respect to the grid node displacements as some Finite Difference tests confirmed. Anyway such values are different by the values mentioned above in question 2. Is that correct? Am I ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1017:418,variab,variables,418,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017,1,['variab'],['variables']
Modifiability,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1019:1327,config,config,1327,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019,2,['config'],['config']
Modifiability,"Hello SU2 developers,. I am reopening this topic because I am studying a case of jet impingement on a wall with a time-varying flow at the inlet. I have used compressible RANS and TOTAL_CONDITIONS as inlet BC. Specifically, I have set a time-varying stagnation pressure at inlet. To do this, I used the Python script mentioned in the previous messages, modifying some commands to suit my problem. I should mention that I do not use Python frequently, so there are likely some errors. Indeed, I checked the documentation and noticed that the command I used to vary the pressure at the inlet (SetMarkerCustomPtotal) is not listed. However, when I run the simulation, it seems to work quite well. Unfortunately, when examining the pressure field, it appears that the time-varying boundary conditions are applied on the walls with no-slip conditions (represented by the MARKER_ISOTHERMAL command) and not at the inlet as I want. Could you please tell me what changes I need to make in the Python script to correctly set up the problem? For completeness, I am attaching the script I modified, the configuration file, and a video of the pressure field.; [2D_jet_val_unsteady_5.zip](https://github.com/user-attachments/files/15524970/2D_jet_val_unsteady_5.zip). Thank you in advance for your help. Best Regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1079#issuecomment-2143793953:1092,config,configuration,1092,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2143793953,1,['config'],['configuration']
Modifiability,"Hello Tobi,. Thanks for your quick reply! I'll address you doubts as follows. > I used this mesh <Testcases>/control_surface/mesh_ONERAM6_inv.su2 and the boundary marker names are a bit different in the mesh, compared to your provided config (WING vs LOWER_SIDE, UPPER_SIDE, TIP + SYMMETRY vs SYMMETRY_FACE). . Yeah, the mesh you are mentioning is the same. I simply united the TIP, LOWER_SIDE and UPPER_SIDE under the marker tag WING. > The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh; In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔. I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings.; [Summary_steady_6_0_1.txt](https://github.com/su2code/SU2/files/3906039/Summary_steady_6_0_1.txt); [Summary_steady_6_2_0.txt](https://github.com/su2code/SU2/files/3906010/Summary_steady_6_2_0.txt). Regarding the unsteady case, I'm aware that this test may have little physics behind (especially if comparing the first timesteps) but I wanted to investigate the reason :). Results are too different and I think these might be one of the reasons behind some discrepancies I'm encountering in my FSI framework. ; My framework for FSI features a restart from a steady solution at t=0 and an unsteady simulation with imposed boundary of the wing marker. The discrepancies in that case are huge and are clearly wrong. I went back to the root and found this weird behaviour comparing the two versions so I thought this might be one cause. > Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0.. Yep you are right, the version is definitely 6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-559850074:235,config,config,235,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559850074,4,"['config', 'extend']","['config', 'extend']"
Modifiability,"Hello Tom,. Thanks for responding. I have been trying to recreate the problem on smaller meshes, but so far, no luck. However, I am seeing a problem that may be _related_ on a smaller mesh. This is occurring with the latest commit (c093a62a2b) of develop:. When compiled with mpi and buildtype of either release or debug, when attempting to restart a DDES, I am getting the following:. 1) Compiled in release mode: segmentation faults following ""initialize jacobian structure (SA model)""; 2) Compiled in debug mode: ; ```; | Total Time| 1| 1| s| 1|; | Time Step| 1.25e-06| 1| s| 1.25e-06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; SU2_CFD_MPI_DEBUG: ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp:294: const Scalar_t& container_helpers::AccessorImpl<Index_t, Scalar_t, StorageType::ColumnMajor, AlignSize, 0, 1>::operator()(Index_t) const [with Index_t = long unsigned int; Scalar_t = double; long unsigned int AlignSize = 64]: Assertion `i>=0 && i<m_rows' failed.; ```; This problem appears on a relatively small (~7 million cell) mesh of the same geometry as the larger one I mentioned in my initial post. Running the simulation in serial mode runs successfully and does not produce any errors. I have put the RANS result, mesh, and DDES configure file and restart files on a shared folder:. https://drive.google.com/open?id=1IDpK_0xYktI-lbG-ozre9Sf_3ksC7xtt. Any/all help is greatly appreciated. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-620295725:1423,config,configure,1423,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-620295725,1,['config'],['configure']
Modifiability,"Hello Wally, do you know anyone has a TestCase config of HEAT_EQUATION_FVM? I have not found such one in the TestCases folder.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/783#issuecomment-526993716:47,config,config,47,https://su2code.github.io,https://github.com/su2code/SU2/issues/783#issuecomment-526993716,1,['config'],['config']
Modifiability,"Hello community,. In the solver_direct_mean.cpp file there is a small but important bug about the calculation of momentum forces. I aware the situation while solving RANS nozzle flow and calculating corresponding thrust value from exit via momentum forces input only. The resulting values are completely unmatched with the experiments. It seems the problem about uninitialized values in Momentum_Forces method. When the following code segment (coppied from pressure forces method) applied problem is solved. /*-- Variables initialization ---*/; ; AllBound_CD_Mnt = 0.0; AllBound_CL_Mnt = 0.0; AllBound_CSF_Mnt = 0.0;; AllBound_CMx_Mnt = 0.0; AllBound_CMy_Mnt = 0.0; AllBound_CMz_Mnt = 0.0;; AllBound_CoPx_Mnt = 0.0; AllBound_CoPy_Mnt = 0.0; AllBound_CoPz_Mnt = 0.0;; AllBound_CFx_Mnt = 0.0; AllBound_CFy_Mnt = 0.0; AllBound_CFz_Mnt = 0.0;; AllBound_CT_Mnt = 0.0; AllBound_CQ_Mnt = 0.0; AllBound_CMerit_Mnt = 0.0;; AllBound_CEff_Mnt = 0.0;. - Linux (Ubuntu 16.4); - g++ (GCC) 5.4; - Serial, AD support; - SU2 Version v6.2.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/802:513,Variab,Variables,513,https://su2code.github.io,https://github.com/su2code/SU2/issues/802,1,['Variab'],['Variables']
Modifiability,"Hello everybody:; I would like to have more informations about the correct usage of discrete Adjoint when the fluid domain contains two different zones.; I tried to run a discrete Adjoint simulation using the test case ""Axial_stage_2D"" (inside the turbomachinery sub-directory); the cfg file has been modified in order to allow the adjoint calculation, Hick-Henne bumps have been set on both surfaces of the blades but when I tried to run the simulation there have been several problems:; - firstly, SU2_DEF in stand-alone mode seems to disregard the second part of the mesh (the rotor);; - when I tried to apply a deformation just on the statoric part, the DEF module placed Hicks-Henne bumps on the surface but in positions which were incoherent with the ones specified into the configuration file.; - I used the Python script but even in that case, the effective bump position was different from the expected one.; - Using the Python script discrete_adjoint.py with nzones =2 (specified through the -z 2 flag), two different history-files (history_direct_0.dat, history_direct_1.dat) are sistematically generated by the CFD module (one for each zone) but when the next module (CFD_AD) is called, it tries to find a single history file named ""history_direct.dat"", which does not exist, and consequently displays an error and stops. A similar thing happens when running finite_difference.py. Is there a documentation that I can use to correctly set a multi-zone Adjoint? Does a similar note exist for the correct setting of bump placement?; Thanks a lot!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/630:781,config,configuration,781,https://su2code.github.io,https://github.com/su2code/SU2/issues/630,1,['config'],['configuration']
Modifiability,"Hello everyone,. I am starting to work on adding inlet file interpolation capabilities in SU2. I currently have a spanwise PT and TT distribution (r vs PT or TT) for an inlet boundary for a Stator (periodic, turbomachinery case). I want to carry out a spanwise interpolation at the inlet vertices. I can write a program to read an inlet file for a new format (r vs PT or TT). Then I want to 1D interpolate this data against the radii of all the vertices on the inlet face. The best way is to generate a **piecewise 1D interpolation function** that can return the value of the interpolated data at that radius. I have done this before in python using 'interp1D'. I have found the following library for C++ that does have this capability:. http://people.math.sc.edu/Burkardt/cpp_src/pwl_interp_1d/pwl_interp_1d.html. which will require _'The PWL_INTERP_1D test code needs the R8LIB and TEST_INTERP libraries._'. I hope these libraries will be integrated with SU2 without any issue. However, it would be better if I can use some of the built-in interpolation capabilities in SU2 like what I found in 'interpolation_structure.cpp'. I also look forward to extending this capability for 2D interpolation(that is, in r and theta). It would be very helpful if someone who has worked with interpolation before can point to a function that is capable of generating a piecewise interpolation function that could work for my case or can pitch in any idea related to this. Thanks!. @vdweide @clarkpede @economon @juanjosealonso @sravya91 @bmunguia @jayantmukho",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/791:1151,extend,extending,1151,https://su2code.github.io,https://github.com/su2code/SU2/issues/791,1,['extend'],['extending']
Modifiability,"Hello everyone,. I encountered an error in the writing of a CGNS file when no nodes are associated to a given rank. It usually happens when small grids are employed and the simulation is performed on more than one core. have uploaded at the following link the mesh and the config used to reproduce the error. https://polimi365-my.sharepoint.com/:f:/g/personal/10507725_polimi_it/Ekl88a3uOKhMu4uCLRy3tHIBNNo6_3oMTNiZq97NB6ztDw?e=Hu8pqe. Notice that, if only one heatflux marker is selected to print the results onto, then it does not work when 2 or more cores are used. On the other hand, if both of the heatflux markers are used then it works in parallel. To solve this issue I just added a check on the number of local points in the function CCGNSFileWriter::WriteField. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2178:273,config,config,273,https://su2code.github.io,https://github.com/su2code/SU2/pull/2178,1,['config'],['config']
Modifiability,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948:328,config,configure,328,https://su2code.github.io,https://github.com/su2code/SU2/issues/948,4,"['Adapt', 'config', 'variab']","['Adaptive', 'config', 'configure', 'variable']"
Modifiability,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:128,adapt,adaptation,128,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809,9,"['Adapt', 'adapt']","['Adaptation', 'adaptation']"
Modifiability,"Hello guys, I have a proposal to make some numerical tests automatically compared with standard analytical results, requiring the deviation of specific physical variables to be in an allowable range. So that such numerical result bias error could be detected in time accurately after every time the numerical algorithm changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-514969680:161,variab,variables,161,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-514969680,1,['variab'],['variables']
Modifiability,"Hello guys,; I run the shape_optimization.py to optimize a wing. I want to minimize the drag function. But the drag function increased. And I have not found any setting in the configuration that clearly define the optimization goal is minimize or muximize the objective function. I only found two setting, 'OPT_OBJECTIVE= DRAG * SCALE' and 'OPT_CONSTRAINT= (STATION1_THICKNESS > 0.077) *SCALE' , ralating to optimization objective. Does it default to minimize drag and muxmize lift? ; Can anybody know that?; the second question is about the scale of OPT_OBJECTIVE and OPT_CONSTRAINT. Does the SLSQP change the constrainted question into unconstrainted with the two scale when solve the optimization question. If so, can anyone tell me the transformed function.; Thanks. - SU2 Version: [ v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1103:176,config,configuration,176,https://su2code.github.io,https://github.com/su2code/SU2/issues/1103,1,['config'],['configuration']
Modifiability,"Hello team,. I have done following changes,; - I have created Dockerfiles for Ubuntu and CentOS and included a Readme file for people to understand how to create and setup binaries to be used, based on this pull request [#169](https://github.com/su2code/SU2/pull/169) as per Heather's recommendation; - I also created a configuration file generator to aid people to quickly create a .cfg file and use them. It is a simple HTML page without anything to be installed. For more details, please read the README.md file checked in @ SU2_IDE/Configuration-gen location. Let me know if you have any questions. Krishna",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172:320,config,configuration,320,https://su2code.github.io,https://github.com/su2code/SU2/pull/172,2,"['Config', 'config']","['Configuration-gen', 'configuration']"
Modifiability,"Hello! I was using the python script ""shape_optimization"". I wanted to; leave out some design variables to ensure they will not be modified (i.e.; fixing the extremities of a nozzle, for example), but apparently it was not; working when trying that. On Thu, May 16, 2024 at 6:59 PM Nijso ***@***.***> wrote:. > Hi, @jaspe55 <https://github.com/jaspe55> Sorry that it took so long to; > get back to you on this topic, but what is the exact command that you are; > using, do you use one of the python scripts?; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/2265#issuecomment-2116274865>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUR4CHGFULNFYLVZUELZCUT5VAVCNFSM6AAAAABGHNGHR2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCMJWGI3TIOBWGU>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265#issuecomment-2116341103:94,variab,variables,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265#issuecomment-2116341103,1,['variab'],['variables']
Modifiability,"Hello!. I am new to SU2 and I'm having trouble running the incompressible turbulent RANS NACA0012 test case on SU2 in Windows.; I have downloaded the binary excecutables SU2 v7.3.0 and my simulation seems to stop after 250 iterations with the error:. _Error in""bool CFileWriter::OpenMPIFile(std::__cxx11::string)"":; Unable to open file restart_flow.dat_. At first I thought that perhaps my MPI I/O was causing this error to occur, however this error also appears when I run the case in serial.; I have had a look at the SU2 documentation and on this forum and so far I haven't been able to find a similar error happening for anyone else. I am not sure how to go about fixing this issue so any help is appreciated. I have attatched the configuration file and screenshots from Windows Powershell to this post and the mesh I am using is n0012_897-257.su2.; Let me know if I need to clarify any further details. Thank you!. **Desktop (please complete the following information):**; - OS: Windows 10.0.19043; - C++ compiler and version: g++ MinGW-W64 8.1.0; - MPI implementation and version: Microsoft MPI v10.1.2 ; - SU2 Version: v 7.3.0 'Blackbird'; [turb_NACA0012_sa.txt](https://github.com/su2code/SU2/files/8005251/turb_NACA0012_sa.txt); ![SU2_error_1](https://user-images.githubusercontent.com/99037921/152580001-7c7670fd-b5ca-4667-a4f5-16350cb67378.png); ![SU2_error_2](https://user-images.githubusercontent.com/99037921/152580035-fe0d1954-2044-4767-a4f8-47effb1d1082.png); ![SU2_error_3](https://user-images.githubusercontent.com/99037921/152580030-60da648d-4d96-451c-8449-e17b4a04e01d.png); ![SU2_error_4](https://user-images.githubusercontent.com/99037921/152580021-abb070b1-9d94-4649-a265-c9ad35a678d3.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1537:735,config,configuration,735,https://su2code.github.io,https://github.com/su2code/SU2/issues/1537,1,['config'],['configuration']
Modifiability,"Hello!; Thanks for your help. Writing the line:; OUTPUT_FILES= RESTART_ASCII. enabled the simulation to run past 250 iterations and after 4500 or so iterations, I was able to yield the correct values for Cl and Cd.; However, an issue still persists. The file restart_flow.csv doesn't seem to appear in the directory. I have amended the config file to have the lines:. OUTPUT_WRT_FREQ = 10; OUTPUT_FILES=(RESTART_ASCII). at the very end. However, after 10 iterations, a csv file isn't created.; I am not sure how to go about fixing this issue so any help is appreciated.; I have attatched the amended configuration file and a screenshot from Windows Powershell.; [turb_NACA0012_sa.txt](https://github.com/su2code/SU2/files/8008885/turb_NACA0012_sa.txt). Thank you; ![SU2_](https://user-images.githubusercontent.com/99037921/152658358-bdf3c06c-d3a6-4343-aa14-d5d7c7374cb9.png); !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1537#issuecomment-1030696289:336,config,config,336,https://su2code.github.io,https://github.com/su2code/SU2/issues/1537#issuecomment-1030696289,2,['config'],"['config', 'configuration']"
Modifiability,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1037:417,config,config,417,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037,2,['config'],"['config', 'configure']"
Modifiability,"Hello, . all the residuals in the adjoint.dat file written after running a continuous adjoint simulation ( with the option WRT_RESIDUALS= YES) are zero. . Here are the config file and mesh for the QuickStart example which also has this problem; [files.zip](https://github.com/su2code/SU2/files/1495681/files.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/475:168,config,config,168,https://su2code.github.io,https://github.com/su2code/SU2/issues/475,1,['config'],['config']
Modifiability,"Hello, . when using the option INV_DESIGN_CP = YES, COutput::SetCp_InverseDesign is called to set the pressure difference. There is no problem with the allocations of values when running in serial but some problems arise when running in parallel. I haven't debugged it completely but it seems that the storage of the values of iMarker and iVertex in Point2Vertex gets mixed up by the parallel run. This in turn affects the reading of the TargetCp file (and can be checked by running the simulation in serial and in parallel, they should give different results for the Cp_diff in the history file). Also, if the inverse_design_pressure is defined on a boundary (e.g. a wing) but there are other boundaries of the same kind in the domain (e.g. some walls) these are also considered when computing the pressure difference (with a target pressure equal to 0.0) thus affecting the final value of the objective function. I believe this last problem could be solved by placing something like if (config->GetMarker_All_Designing(iMarker) ) == 1) at appropriate locations in the routine. . However, I am having troubles troubleshooting the first problem.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/486:989,config,config,989,https://su2code.github.io,https://github.com/su2code/SU2/issues/486,1,['config'],['config']
Modifiability,"Hello, ; I did not fix this issue. I just found possible source of it. You can use case attached to this message to reproduce the issue. Run: python path_to_su2/finite_differences.py -f turb_SA_RAE2822.cfg -n 12; or; python path_to_su2/discrete_adjoint.py -f turb_SA_RAE2822.cfg -n 12. It ends with error message: . Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM.; ------------------------------ Error Exit -------------------------------_. The config file created prior to call the solver constains DV_VALUE = 0.0 instead of six values as in original cfg file. The reason for this (probable one) is described in my original post. . I'm not experienced with SU2 coding and handling of codes on GitHub, so I would like to ask someone to fix this issue. . Thank you,; Jan. [RAE_Test.zip](https://github.com/su2code/SU2/files/11199780/RAE_Test.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2005#issuecomment-1503154876:614,config,config,614,https://su2code.github.io,https://github.com/su2code/SU2/issues/2005#issuecomment-1503154876,1,['config'],['config']
Modifiability,"Hello, ; You are right, this pr cannot solve the problem but just make the solution look reasonable.; For some complicated case, it is hard to converge, not like in the simple cases.; I have read the relevant code and book, and I think maybe a good way is to rewrite the bc code and move the nonzero normal components limitation to where the flux are calculated. Or we can store the flux of the points on the sym bc, and in CFVMFlowSolverBase<V, R>::BC_Sym_Plane we just use the stored flux without recalculation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2174#issuecomment-1868453319:259,rewrite,rewrite,259,https://su2code.github.io,https://github.com/su2code/SU2/pull/2174#issuecomment-1868453319,2,['rewrite'],['rewrite']
Modifiability,"Hello, @pcarruscag . Thank you for help. I try the examples and they run well. By the way, SU2 v6.2.0 doesn't have the option 'USE_ACCURATE_FLUX_JACOBIANS'. I'm not practised enough to know what it is for. Here is my config.; [cavity.zip](https://github.com/su2code/SU2/files/3525060/cavity.zip); It still diverges on lid-driven cavity flow case, at even a rather low CFL number, like 0.01. However, when I simulate laminar boundary layer case with 0.1 incoming mach number, it is OK, converging very slowly. Regards; Cao J. Z.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/761#issuecomment-523415869:217,config,config,217,https://su2code.github.io,https://github.com/su2code/SU2/issues/761#issuecomment-523415869,1,['config'],['config']
Modifiability,"Hello, I am new to SU2 and trying to install it on cluster locally. I am facing issue in compilation and installation step. I used following command to build:; `./meson.py -Dwith-mpi=enabled -Dcustom-mpi=true -Dextra-deps=mpich -Denable-cgns=false --prefix=$HOME/SU2/SU2-Install build`. After which I tried to compile and install:; `./ninja -C build install`. However I am getting an error:; `ninja: Entering directory build; [1/463] Compiling C object externals/metis/libmetis.a.p/GKlib_htable.c.o; FAILED: externals/metis/libmetis.a.p/GKlib_htable.c.o ; cc -Iexternals/metis/libmetis.a.p -Iexternals/metis -I../externals/metis -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -std=c99 -O3 -fPIC -D_FILE_OFFSET_BITS=64 -DNDEBUG -DNDEBUG2 -DHAVE_GETLINE -DUSE_GKREGEX -Wno-implicit-function-declaration -Wno-unused-result -Wno-unused-parameter -Wno-unused-variable -Wno-unused-but-set-variable -Wno-unknown-pragmas -Wno-sign-compare -Wno-clobbered -Wno-empty-body -Wno-unused-label -Wno-misleading-indentation -Wno-maybe-uninitialized -Wno-pedantic -Wno-error=absolute-value -MD -MQ externals/metis/libmetis.a.p/GKlib_htable.c.o -MF externals/metis/libmetis.a.p/GKlib_htable.c.o.d -o externals/metis/libmetis.a.p/GKlib_htable.c.o -c ../externals/metis/GKlib/htable.c; cc1: error: -Werror=absolute-value: no option -Wabsolute-value; cc1: warning: unrecognized command line option ""-Wno-misleading-indentation"" [enabled by default]`. I am unable to understand if its an issue with GCC compiler of the HPC cluster or something else. Would be a great help if someone can guide me on this. Thanks in advance!. **Cluster Information**; - OS: [CentOS Linux 7]; - C++ compiler and version: [g++ (GCC) 13.2.0] (Loaded as module); - MPI implementation and version: [mpich 4.1.2] (Loaded as module); - SU2 Version: [8.0.0 ""Harrier""]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2182:893,variab,variable,893,https://su2code.github.io,https://github.com/su2code/SU2/issues/2182,2,['variab'],['variable']
Modifiability,"Hello, I am new to SU2. I cloned the git repository and wanted to build it from source (on Debian GNU/Linux).; I noticed that the 'meson.py' script downloads a bunch of external dependencies, including Meson and Ninja (as documented in <https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/>). I wanted to use the system-wide versions of Meson and Ninja that I have installed on my Debian box, hence I had to modify the 'meson.build' file, in order to drop the following lines:. if meson.version() != '0.61.1'; error('SU2 must be configured with the extended Meson script (./meson.py) in the SU2 root directory.'); endif. And then I had to manually download the relevant external dependencies.; After that, I issued:. $ meson setup -D_configuration-options_ build; $ ninja -C build install. The build was successful, but using system-wide Meson and Ninja could be made easier. I think that the 'meson.py' script could have an option to avoid downloading Meson and Ninja and to avoid the automatic invocation of the downloaded Meson. Moreover, the 'meson.build' file should not exit unsuccessfully on the basis of meson.version(), or, at least, should check that meson.version() is equal to or later than a given minimum version.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945:533,config,configured,533,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945,2,"['config', 'extend']","['configured', 'extended']"
Modifiability,"Hello, I want to plot streamline in ParaView ,but I found no Velocity variable ，Can I output the velocity field or how plot streamline without Velocity in ParaView?. thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1473:70,variab,variable,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/1473,1,['variab'],['variable']
Modifiability,"Hello, I'm Minsul. I am struggling to compile SU2-feature_adap branch. My purpose for using the branch is mesh adaptation. But the problem is that whenever I command ./meson.py build,. It shows the error message: meson.build:1:0: ERROR: Value ""c++11"" for combo option is not one of the choices. Possible choices are: ""none"", ""c++98"", ""c++03"", ""gnu++98"", ""gnu++03"". So I tried to edit meson.build file. not c++11 but c++03 or c++98. But I get to know that It is necessary of c++11 to compile SU2_CFD. Is there any one else who can help me solve this problem?. Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2033:111,adapt,adaptation,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/2033,1,['adapt'],['adaptation']
Modifiability,"Hello,. I am trying to compile SU2 on the central HPC facility at Sheffield University. I am running into problems with SU2 trying to link against HDF5 or ZLIB when I would rather it did not. When I try and not build against HDF5 I use the following script:; https://gist.github.com/385ee9c8589fd9146ade. and get this output:; https://gist.github.com/8fb4ab586ea12d9c28b2. which can basically be summed up as it is configured to not build with HDF5 (it says this in the configure output), but then errors because it can not link against the HDF5 lib. If I try and build SU2 against the version of HDF5 we have compiled on the cluster it will then error because that library was not built with ZLIB support. Am I doing something wrong to disable linking against HDF5 or will I have to recompile HDF5 with ZLIB?. Thanks. rcgsheffield/iceberg_software#159",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/219:415,config,configured,415,https://su2code.github.io,https://github.com/su2code/SU2/issues/219,2,['config'],"['configure', 'configured']"
Modifiability,"Hello,. I detected a bug trying to launch the routine fsi_computation.py. As it is, the code doesn't work and crashes with an error saying that in FSIInterface.py the function call (setSolidInterfaceLoads):. **SolidSolver.applyload(iVertex, Fx, Fy, Fz, time)**. only requires 5 input arguments (not 6). A deeper investigation showed that in PitchPlungeAirfoilStructuralTester.py the function is so defined:. **def applyload(self, iPoint, fx, fy, fz):**. so, no _time_ variable allowed or requested. After applying this correction the code works. . Hope this can be of any help. Best,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/449:468,variab,variable,468,https://su2code.github.io,https://github.com/su2code/SU2/issues/449,1,['variab'],['variable']
Modifiability,"Hello,. I have a hyperthreaded 6-core machine (12 processors available) but I have the following issue when I try to specify `parallel_computation.py -n 12`. ; ```; tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ parallel_computation.py -n 12 -f turb_ONERAM6.cfg ; Traceback (most recent call last):; File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 116, in <module>; main(); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 67, in main; options.compute ); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 94, in parallel_computation; info = SU2.run.CFD(config) ; File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 122, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 302, in run_command; raise exception(message); SU2.EvaluationFailure: Path = /opt/su2/SU2/TestCases/rans/oneram6/,; Command = mpirun -n 12 /opt/su2/SU2v6.0.0/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '1'; --------------------------------------------------------------------------; There are not enough slots available in the system to satisfy the 12 slots; that were requested by the application:; /opt/su2/SU2v6.0.0/bin/SU2_CFD. Either request fewer slots for your application, or make more slots available; for use.; --------------------------------------------------------------------------; ```; It works if `-n 6` is used instead but then only half of the availalbe processes are being used. I'm not sure if this is a bug with parallel_computation.py (or just a ""feature"" which has not yet been implemented) but using SU2 6.0.0, not all my processing threads can be used when using OpenMPI 3.0.0. I think this is due to the fact that it's not possible to pass `--use-hwthread-cpus` to `mpirun` as is mentioned on the StackOverflow page, [here](https://stackoverflow.com/questions/48835603/unable-to-use-all-cores-with-mpirun). As a workaround, have tried; `tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ mpirun --use-hwthread-cpus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526:587,config,config,587,https://su2code.github.io,https://github.com/su2code/SU2/issues/526,1,['config'],['config']
Modifiability,"Hello,. I have been using SU2 NEMO to run cases for steady, inviscid, hypersonic flow around blunt objects. Previously I have been able to successfully run cases using SU2 version 7.1.1. However, I have been running into residual stalling with the newer versions (7.4.1 and 7.5.1). Recently, I tried two different meshes which worked for me before (TestCases/euler/bluntbody/blunt_91.su2 and a RAM C-II mesh I previously used). I also tried updating the confguration file to match selections in TestCases/nonequilibrium/invwedge_ausm.cfg but I still face this issue. I have attached the relevant files here. Please let me know if this is a solver issue or if I need to change any selections in the configuration file. ; [residual_stalling.zip](https://github.com/su2code/SU2/files/11425983/residual_stalling.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2026:698,config,configuration,698,https://su2code.github.io,https://github.com/su2code/SU2/issues/2026,1,['config'],['configuration']
Modifiability,"Hello,. I just tried to run the sliding_interface/channel_2D case, which has 3 zones (0,1,2) in the grid file. The configuration file I used is same as in TestCase, and the only thing I changed is the OUTPUT_FORMAT set to TECPLOT format. The solution output file for zone 1 is not corrected, and a lot of terms in flow_1_*.dat file are 2.502053e-316. Anyone has idea about this issue?. Thanks!. ![bug](https://user-images.githubusercontent.com/20882368/27462920-abbe023e-57f6-11e7-9842-b15b864d79d8.png); ![bug1](https://user-images.githubusercontent.com/20882368/27462924-affcbde0-57f6-11e7-8fa5-8400a5ba6f40.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/402:115,config,configuration,115,https://su2code.github.io,https://github.com/su2code/SU2/issues/402,1,['config'],['configuration']
Modifiability,"Hello,. I the same issue with v4.1.0 as in #28, which has been closed but does not contain helpful information. The cgns headers and libs (v3.2.1) are correctly detected by `configure`. Here is the output of make V=1:. ```; Making all in externals; make[1]: Entering directory `/home/antodech/SU2-4.1.0/externals'; make[2]: Entering directory `/home/antodech/SU2-4.1.0/externals'; make[2]: Nothing to be done for `all-am'.; make[2]: Leaving directory `/home/antodech/SU2-4.1.0/externals'; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/externals'; Making all in Common/lib; make[1]: Entering directory `/home/antodech/SU2-4.1.0/Common/lib'; g++ -DPACKAGE_NAME=\""SU2\"" -DPACKAGE_TARNAME=\""SU2\"" -DPACKAGE_VERSION=\""4.1.0\"" -DPACKAGE_STRING=\""SU2\ 4.1.0\"" -DPACKAGE_BUGREPORT=\""su2code-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""https://github.com/su2code\"" -DPACKAGE=\""SU2\"" -DVERSION=\""4.1.0\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DSIZEOF_SHORT_INT=2 -DSIZEOF_INT=4 -DSIZEOF_UNSIGNED_INT=4 -DSIZEOF_LONG_INT=8 -DSIZEOF_FLOAT=4 -DSIZEOF_DOUBLE=8 -DSIZEOF_VOID_P=8 -I. -DHAVE_CGNS -I/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include -g -O2 -MT libSU2_a-geometry_structure.o -MD -MP -MF .deps/libSU2_a-geometry_structure.Tpo -c -o libSU2_a-geometry_structure.o `test -f '../src/geometry_structure.cpp' || echo './'`../src/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; .",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250:174,config,configure,174,https://su2code.github.io,https://github.com/su2code/SU2/issues/250,1,['config'],['configure']
Modifiability,"Hello,. I'm experiencing an unclear error trying to launch the fsi_computation.py of the **SU2 develop branch**. From the command line, launching:. `mpirun -np XX fsi_computation.py -f FSICoupler_config.cfg --parallel`. with XX number of process (I tried both with 1 and more), I get the error:; > ERROR : You are trying to initialize MPI with a serial build of the wrapper. Please, remove the --parallel option that is incompatible with a serial build. I'm sure my wrapper has been built in parallel, as I used the configure options suggested in ; [https://su2code.github.io/docs/Python-Wrapper-Build/](url); Plus, I'm doing exactly the same as done using the old branch **feature_pyWrapper** which, according to my old issue:; [https://github.com/su2code/SU2/issues/449#issuecomment-333879558](url); should have been merged to the develop branch.; Is this a code problem or I'm doing something wrong? (Am I referring to the correct branch?). Thanks in advance for the suggestions. EDIT: more in details the exception raised is . > ('A TypeError occured in pysu2.CSingleZoneDriver : ', TypeError('__init__() takes exactly 6 arguments (5 given)',))",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/531:516,config,configure,516,https://su2code.github.io,https://github.com/su2code/SU2/issues/531,1,['config'],['configure']
Modifiability,"Hello,. I'm posting this issue based on the discussion on CFD Online [here](https://www.cfd-online.com/Forums/su2/235889-error-executing-deformation-multiple-ffd-control-point.html#post803932). The original query goes like this- . I'm trying to perform the mesh deformation of Onera M6 mesh with SU2_DEF using multiple FFD control points. The same mesh has been used in the current case as used in the SU2's tutorial of [Onera M6](https://su2code.github.io/tutorials/Inviscid_3D_Constrained_ONERAM6/). The configuration file used in the simulation is attached below- ; [Adjoint_ONERAM6.txt](https://github.com/su2code/SU2/files/6489000/Adjoint_ONERAM6.txt). On executing SU2_DEF, .su2 format of mesh is generated which is used as an input for the simulation. But on executing discrete_adjoint.py, I get the following error-. Error in ""void CConfig::SetConfig_Parsing(std::istream&)"":; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM. ------------------------------ Error Exit -------------------------------. From the looks of the error and my configuration file, I do have an equal number of arguments in the DV_VALUE as well as DV_KIND or DV_PARAM. Thanks! . Desktop:; - OS: Linux (CentOS); - C++ compiler and version: -; - MPI implementation and version: OpenMPI 1.8.8; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1289:506,config,configuration,506,https://su2code.github.io,https://github.com/su2code/SU2/issues/1289,2,['config'],['configuration']
Modifiability,"Hello,. May I ask which version of the code do you use and on which branch ? In fact, this bug (and it was not the only one) was already fixed a few days ago on the branch feature_pyWrapper. You may pull those new changes just to be sure to have a clean version. Otherwise, I would not trust the results. The reason why the FSI Python tool (note the distinction with the SU2 Python wrapper, which is maintained and up-to-date) accumulates some bugs is that, normally, it is not really maintained anymore in prevision of a new coupling framework. I recently introduced some fixes to make it work again (I mean the coupling SU2 + pitch-plunge structural solver) in the meantime, but you may want to double-check each result you get. Best,. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/449#issuecomment-333879558:526,coupling,coupling,526,https://su2code.github.io,https://github.com/su2code/SU2/issues/449#issuecomment-333879558,2,['coupling'],['coupling']
Modifiability,"Hello,. So, to clarify, there were two issues:. 1) With the old commit (382e82f), we were seeing the assertion failure at line 1881 of numerics_structure.cpp, but only with the very large mesh (180 million cells). 2) With the newer commit (c093a62), we were seeing the assertion failure at line 294 of C2DContainer.hpp, which was occurring even with smaller meshes (7 million cells). The solution to (2) appears to be to change `geometry->node[iPoint]->GetnNeighbor()` to `geometry->node[iPoint]->GetnPoint()` at line 3759 of CEulerSolver.cpp, in the `CEulerSolver::SetUpwind_Ducros_Sensor()` method. I made this change locally, and attempted to run on our large mesh. Issue (2) seems to be fixed, but we still run into issue (1). I have now gone through the read restart routines, and have found a potential issue:. For reference, the restart file for our large mesh with averaging data included consists of:; 39 fields * 75,107,967 points = 2,929,210,713 variable values (which is larger than `INT_MAX`). Beginning at line 3931 of CSolver.cpp, in method `CSolver::Read_SU2_Restart_Binary(...)`, we have the following:. ```; int *blocklen = new int[geometry->GetnPointDomain()];; int *displace = new int[geometry->GetnPointDomain()];; int counter = 0;; for (iPoint_Global = 0; iPoint_Global < geometry->GetGlobal_nPointDomain(); iPoint_Global++ ) {; if (geometry->GetGlobal_to_Local_Point(iPoint_Global) > -1) {; blocklen[counter] = nFields;; displace[counter] = iPoint_Global*nFields;; counter++;; }; }; MPI_Type_indexed(geometry->GetnPointDomain(), blocklen, displace, MPI_DOUBLE, &filetype);; ```; The problem here is that for our case, where `iPoint_Global` can get up to 75,107,967 and `nFields` = 39, the value assigned to `displace[counter]` in the loop can over-run `INT_MAX`. This would result in potential garbage / incorrect displace values being passed to `MPI_Type_indexed(...)`. Unfortunately, simply changing `displace` to a `long int *` won't work, as the expected argument type for `",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-622026420:957,variab,variable,957,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622026420,2,['variab'],['variable']
Modifiability,"Hello,. There is a stray allocation in the Integration_Postprocessing routine in line 1804 in the develop branch. Currently reads:. if (template_solver) integration[val_iInst][TEMPLATE_SOL] = new CSingleGridIntegration(config);. instead of delete. Is this resolved in a more recent PR?. Cheers,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/792:219,config,config,219,https://su2code.github.io,https://github.com/su2code/SU2/issues/792,1,['config'],['config']
Modifiability,"Hello,. in SU2 v7.5.1 is probably a bug. Python scripts using ""config,py"", as it is in case of discrete_adjoint.py, replace the DV_VALUE by default value = 0. It cases stop of solution due to inconsistency between DV_VALUE and DV_PARAM....; It seems that this issue is connected with part of code in ""config.py"":. line 658:; #hack - twl; _if 'DV_VALUE_NEW' not in data_dict:; data_dict['DV_VALUE_NEW'] = [0]; if 'DV_VALUE_OLD' not in data_dict:; data_dict['DV_VALUE_OLD'] = [0]_. line 1075: ; _# HACK - twlif ; 'DV_VALUE_NEW' in config:; config.DV_VALUE = config.DV_VALUE_NEW. Could you please fix it. Thank you in advance. Best regards,. Jan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2005:63,config,config,63,https://su2code.github.io,https://github.com/su2code/SU2/issues/2005,5,['config'],['config']
Modifiability,"Hello,; As a simple user, when I forget to save the last history before continuing a simulation I am very frustrated, because it is lost forever... Since the new history file erases the previous one.; Also, making these history backups is not very practical...; I would very prefer an option in the config file like: ""when RESTART_SOL= YES append to the history or not?"".; I think it would not be difficult to set another variable like: ""max_it must be counted from the beginning or from the last launch?"".; I agree it makes it a bit more complex, but not too much I think :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/99#issuecomment-103369490:299,config,config,299,https://su2code.github.io,https://github.com/su2code/SU2/issues/99#issuecomment-103369490,4,"['config', 'variab']","['config', 'variable']"
Modifiability,"Hello,; I'm using SU2 for DOE sampling right now. My current process is to change the values of the relevant variables in FFD, then use the `SU2_DEF` module to deform the mesh, it will output the mesh. Then I use `SU2_CFD` read mesh to calculate. My question is, is it possible to deform the mesh without exporting the mesh (keep it in the computer memory) and then use `SU2_CFD` directly to perform the calculation, eliminating the need to export and read the mesh. Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2254:109,variab,variables,109,https://su2code.github.io,https://github.com/su2code/SU2/issues/2254,1,['variab'],['variables']
Modifiability,"Hello,; Sorry for a very very late comment, but if I did not get it wrong, it seems like the turbulence intensity value specified in the config file is now multiplied by 100 in the turb_sources.cpp at line 143 after this commit. . Generally, the users tend to use the percent value (because nearly every paper on the subject talk in percentages) for turbulence intensitirs, so for example, if the experimental conditions say 3% for the turbulence intensity, the option in the config file should be 3.0. But now with this 100* modification, the users must enter 0.03, is that correct? . If it is correct, then transition test case/tutorial config files should be updated as well. Because the transition onset correlations (Menter or Abu-Ghannam) uses the percent value. . All in all, however, I suggest that we should remove the factor of 100, so the value in the config file is in percentages directly, as it was before. . Regards,; Samet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1267#issuecomment-971340179:137,config,config,137,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267#issuecomment-971340179,4,['config'],['config']
Modifiability,"Hello,; When using the rotating reference frame option with incompressible flow the code blows up immediately. There appears to be two issues - ; 1. Omega_ref is not initialized in the SetNondimensionalization subroutine in solver_direct_mean_inc.cpp. In the compressible version, it is defined as Velocity_ref/Length_ref whereas no definition exists in the incompressible one.; 2. Since all the definitions of gas constants have been removed from the incompressible routines, using Mach_motion to normalize forces and moments makes them all undefined. . While both the fixes are easy, it might still lead to issues when free stream velocity is zero as Omega_ref is used to normalize grid velocities in SetRotationalVelocity. ; Is it possible to implement a new config option to compute Omega_ref differently and also use it to normalize forces?. Cheers,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/468:762,config,config,762,https://su2code.github.io,https://github.com/su2code/SU2/issues/468,1,['config'],['config']
Modifiability,"Hello,; You need to use the appropriate environment variables, here is for example how I build one of my branches:; export CXXFLAGS=""-Wno-deprecated-declarations -O3 -march=corei7-avx -I/rds/general/user/me/home/pastix/install -I/rds/general/user/me/home/Eigen335""; export CPPFLAGS=""-DHAVE_PASTIX -DHAVE_LAPACK -DEIGEN_NO_DEBUG -DEIGEN_DONT_PARALLELIZE""; export LDFLAGS=""-L/rds/general/user/me/home/pastix/install -L/rds/general/user/me/home/scotch/lib -L/apps/intel/2017.6/mkl/lib/intel64/""; export LIBS=""-lpastix -lscotch -lptscotch -lptscotcherr -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread -lm -ldl""; Regards,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/662#issuecomment-478389641:52,variab,variables,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/662#issuecomment-478389641,1,['variab'],['variables']
Modifiability,"Hello,; is there any reply? What I understood from the original post, the DV value for FFD_TWIST is not straighforward. ; Why it is not taken in degrees? The comment says: _/--- The angle of rotation is computed based on a characteristic length of the wing, otherwise it is difficult to compare with other length based design variables. ---/; It could be easily done in reversed sense. Is there anything what I miss?; Nevermind, the config file comment could be done in better way, to help user understand the design variable setting. . Jan",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/693#issuecomment-1519645066:326,variab,variables,326,https://su2code.github.io,https://github.com/su2code/SU2/issues/693#issuecomment-1519645066,3,"['config', 'variab']","['config', 'variable', 'variables']"
Modifiability,"Hello. I have been trying to work with test case ""Caradonna_tung"". I have obtained the latest config file and mesh file i believe. Hovewer, when i run the solver, it gives value ""zero"" for everything and seemingly converged after only 10 iterations. I believe i could not initialize the solver. Can anyone help me with it ? Thank you. [caradonna_tung.zip](https://github.com/su2code/SU2/files/4664054/caradonna_tung.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997:94,config,config,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/997,1,['config'],['config']
Modifiability,"Hello. I use SU2_6.2.0. I wonder why we use the gradient of the primitive variables, but not conserved one? When simulating compressible fluid, is conserved value better?. Thank you. Cao J. Z.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/820:74,variab,variables,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/820,1,['variab'],['variables']
Modifiability,"Hello. There are some problems when I want to output heatflux as result. There are some corresponding codes in function 'void COutput::MergeSolution' from file 'output_structure.cpp'. But why they don't seem to work? I'm clueless about it. Here are my configure file, mesh file and results. Thank you. [configure and mesh.zip](https://github.com/su2code/SU2/files/3762201/configure.and.mesh.zip); [result.zip](https://github.com/su2code/SU2/files/3762206/result.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805:252,config,configure,252,https://su2code.github.io,https://github.com/su2code/SU2/issues/805,3,['config'],['configure']
Modifiability,"Hello; I tried a few things, even after setting the environment variables, like mentioned in the previous comment, SU2 build failed with the same long error. I installed MPICH in a custom path and set the variables like so:; ```; export CC='/usr/bin/gcc'; export CXX='/usr/bin/g++'; export MPICC='/usr/local/mpich-3.3.2/bin/mpicc'; export MPICXX='/usr/local/mpich-3.3.2/bin/mpicxx'; export LD_FLAGS='-L/usr/local/mpich-3.3.2/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/usr/local/mpich-3.3.2/include'; export C_FLAGS='-I/usr/local/mpich-3.3.2/include'; export PKG_CONFIG_PATH='/usr/local/mpich-3.3.2/lib/pkgconfig'; ```; The following two lines are absent from my meson output:; ```; Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-640396480:64,variab,variables,64,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-640396480,2,['variab'],['variables']
Modifiability,"Hello; My apologies that this hasn't been answered yet. ; For future problems you may get a faster response on the forum at: ; cfd-online.com/Forums/su2/. It seems like it may have been configuration issue when installing SU2 for parallel, and if that isn't the issue, it is possible that someone on the forum has had a similar problem and been able to solve it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23#issuecomment-105084462:186,config,configuration,186,https://su2code.github.io,https://github.com/su2code/SU2/issues/23#issuecomment-105084462,1,['config'],['configuration']
Modifiability,"Here a fluid-only case that somewhat quickly converges. Contains the mesh, 1 cfg for primal and adjoint and a little bash-script where the path to the SU2 binaries has to be adapted to fit your system. The idea was to first run primal and adjoint with vanilla develop and then the same with the new code. I left the log-files of my run in there as well for a quick look . If there is something else I can do let me know. . [new-per-bc-test.tar.gz](https://github.com/su2code/SU2/files/8408958/new-per-bc-test.tar.gz)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585#issuecomment-1087404188:174,adapt,adapted,174,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585#issuecomment-1087404188,1,['adapt'],['adapted']
Modifiability,"Here's a follow-up pull request for fixing some lingering memory problems in SU2 v6.0.0. This is the same as PR #507, except I fixed the problem that was making the regression tests fail. For redundancy, I'll repeat a little of PR #507. Here's a summary of the changes in this PR: . + Sets default for `ilu_fill_in` to 0 to prevent uninitialized value bugs on destruction of `CSysMatrix`; + Adds deallocation of some turbomachinery variables; + Adds NULL initialization and deallocation of some of the new markers. There's also a few other memory issues in v6.0.0 I haven't fixed:. + `RefOriginMoment_X`, `_Y`, and `_Z` can be zero-length arrays in corner cases, and yet the program still tries to read from them.; + `Periodic_Center`, `Periodic_Rotation`, and `Periodic_Translate` are sometimes leaked at the end of the program.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/510:432,variab,variables,432,https://su2code.github.io,https://github.com/su2code/SU2/pull/510,1,['variab'],['variables']
Modifiability,"Hey ! I recently encountered this issue as well. It seems that on some systems, the `libz` is available both as a static `.a` and dynamic `.so` library. It seems, in some cases, that the former is not compiled with the `-fPIC` flag by default. Unfortunately, the HDF5 code packaged with SU2 seems to prefer linking to the former when it is available, leading to errors when compiling the Python API (this flag is required for Python extensions). . The following worked for me: in _externals/cgns/hdf5/meson.build_, line 28 (and presumably 29, if the same issue exists for `szip`), you can change the `static: true` argument to `static: false`. When (re)configuring, `meson` should now pick up the shared library instead. . Please let me know if this worked for you also !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568#issuecomment-1083104460:653,config,configuring,653,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568#issuecomment-1083104460,1,['config'],['configuring']
Modifiability,"Hey @pcarruscag !. Thanks for the suggestions. . 1) That's a good point. I will change the option names to be more specific. . 2) Not a 100% certain what you mean by this. To be clear, instead of allocating memory using the keyword new (MeanReynoldsStress = new su2double* [3];), I should be declaring them statically (su2double MeanReynoldsStress[3][3])? I was following the variable declaration norms I saw in the code. But I guess those were usually for allocations to nDim. Is that what you are suggesting?. 3) I have generalized the Eigen-value functions to n order matrices now. But I think I am going to keep them in the numerics class. Since it seems like that is where they would be most useful. Would you suggest otherwise?. Cheers,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-433784029:376,variab,variable,376,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-433784029,2,['variab'],['variable']
Modifiability,"Hey Akshay,; I found out the other day that this: `unordered_map<pair<int,int>, su2double>` does not work without extra tricks, and the alternative `map<pair<int,int>, su2double>` may not be very efficient, so if you have it out of the config in some matrix format it is probably better.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-653157902:236,config,config,236,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653157902,1,['config'],['config']
Modifiability,"Hey Rocco,. > And both versions are/were on the develop branches -> what exactly do you refer to here: config-files, code, mesh. The code tags 6.0.1 and 6.2.0 refer to specific master-commits of the code. So I want to know what is exactly of the develop branch, can't be the code if you understand the tags as I do. Maybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handle",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-562621057:103,config,config-files,103,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057,4,"['config', 'rewrite']","['config-files', 'rewrites']"
Modifiability,"Hey Tim, Sorry I couldn't try this while it was still in PR mode, but I just tried it on my ubuntu 16.04 and after some poking around, it worked! Compilation from scratch was very rapid. . Just a quick thing, the documentation didn't quite work for me but that is probably because my default python is 2.7. Which meant that I had to execute it as:. `python3 meson.py ...`. When I did that, I got this error: ; ```; Message: Looking for mpi4py in /usr/lib/python3/dist-packages; Run-time dependency python3 found: NO (tried pkgconfig). SU2_PY/pySU2/meson.build:29:0: ERROR: Dependency ""python3"" not found, tried pkgconfig; ```; This was not fixed by installing mpi4py the way it is suggested in the draft documentation. Stack overflow came to the rescue and I had to run . `sudo apt-get install python3-mpi4py`. After this the installation worked perfectly. I am not sure if this is an anomaly and that it won't happen in properly configured workstations. I also am not a 100% sure about why this worked (I am a linux noob). So I will leave it to your discretion whether this is something you want to add to the documentation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-525114027:930,config,configured,930,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-525114027,1,['config'],['configured']
Modifiability,"Hey Tobi, I have tried and succeeded in testing the HEAT_EQUATION_FVM example. One more thing to mention, to run the configSolide.cfg alone, another line needs to be edited. . ```; %EXTRA_HEAT_ZONE_OUTPUT = 2-->; EXTRA_HEAT_ZONE_OUTPUT = 1; ```. And one can directly delete all things concerning iZone=1 in the mesh file and rename iZone=2 to be iZone=1. ![2019-09-04 15-56-09 的屏幕截图](https://user-images.githubusercontent.com/33152225/64236361-d163cc80-cf2c-11e9-9971-2d4e2c01955c.png). Except for that, is anyone familiar with the error: SU2 diverge? Every time when I want to add unsteady options to make an animation, the error tells me the solution diverges. ```; ------------------------------ Begin Solver -----------------------------. Error in ""void CSysSolve::ModGramSchmidt(int, std::vector<std::vector<double> >&, std::vector<CSysVector>&)"": ; -------------------------------------------------------------------------; SU2 has diverged.; ------------------------------ Error Exit -------------------------------; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/783#issuecomment-527789690:117,config,configSolide,117,https://su2code.github.io,https://github.com/su2code/SU2/issues/783#issuecomment-527789690,1,['config'],['configSolide']
Modifiability,"Hey Tom,. this was fast ! Thanks for the first step in making the output structure more efficient and flexible. So far it looks good. I'll test it for the adjoint soon. @LaSerpe I think for the beginning these things will be hard-coded. But defining this in the config file is definitely a feature we should discuss.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-259400331:102,flexible,flexible,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-259400331,2,"['config', 'flexible']","['config', 'flexible']"
Modifiability,"Hey at all. I have a problem with the discrete_adjoint-Phytonsript. The problem is, that my cases needs a lot of RAM(Over 500GB for CFD_AD and MG). But it is impossible to start the script on our HPC an the machine where I can start the script is low memoried.; With smaller cases it was possible to start discrete_adjoint.py with EXT_ITER=1 to creat all config files, modifying some options and send them separately to the HPC. But as I said with the big files the CFD_AD part takes to much memory. So the last *cfg-files aren't created because the files are just created directly before the calculation. For me especially the config_DOT_AD script is importend. I come to mind to two options; 1. Changing the creation sequence of the *.cfg files from ""before calculation"" to all *.cfg-files at once directly after starting the script; 1. Please tell me how I can creat the *.cfg-files ""manually"". Especially the config_DOT_AD script. Thank you",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/279:355,config,config,355,https://su2code.github.io,https://github.com/su2code/SU2/issues/279,1,['config'],['config']
Modifiability,"Hey everyone! Just posting the results from one of the NASA TMR verification test cases I have been running: [the DSMA661](https://turbmodels.larc.nasa.gov/airfoilwakeverif500c.html). Using Least Squares (LSQ) for the gradient reconstruction does affect the results and can be seen from this force convergence plot. Using the same gradient reconstruction (GG) gives more accurate results. The two SU2 runs were done using identical linear solver parameters. The only difference is that for the GG+LSQ case, I specified : `NUM_METHOD_GRAD_RECON= LEAST_SQUARES` and for the GG case, I had to reduce the max CFL down to ~20 for it to get stable. . ![cfl_adap_force_convergence_dsma661_SA](https://user-images.githubusercontent.com/30271435/68785755-7ec12380-05f3-11ea-89e3-4b93edeb9d64.png). But due to the much lower maximum CFL, the GG run takes 40-50x longer to reach the same level of convergence. I'm not sure what else can be done to make adaptive CFL better for the GG or WLSQ cases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-553494652:942,adapt,adaptive,942,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-553494652,1,['adapt'],['adaptive']
Modifiability,"Hey everyone, . Following the discussions at the SU2 Developers meeting this week, I wanted to start a conversation about compiling a comprehensive set of V&V cases for SU2 that can showcase it's performance in comparison to other solvers. . I think the the [NASA TMR website](https://turbmodels.larc.nasa.gov/index.html) is a good model to base it on. The idea would be to present the V&V case, provide working configuration and mesh files, and provide results comparing performance to other solvers and to higher fidelity data (when available). This allows people to see the performance of SU2 and replicate it, if need be. . The first step would be compiling a list of cases that should be covered. The [SU2 2014 SciTech paper](https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf) would be a good starting point as it already had a couple of validation cases. This list can be bolstered with some of the NASA TMR cases, and with grid convergence studies. I would like to propose an initial list that the community can talk through and make changes as we see fit. I am mostly only familiar with canonical CFD flows that are used in these cases. But it would be great to have other cases, such as Turbo-machinary or FSI cases, that show the full breadth of SU2's abilities. This is by no means an exhaustive list:. 1. Zero Gradient Flat Plate; 2. 2D and 3D Bump in Channel; 3. Asymmetric Diffuser; 4. Backward facing step; 5. Unsteady Square cylinder; 6. NACA0012; 7. NACA4412 Trailing Edge Seperation; 8. Joukowski Airfoil; 9. 30P30N High Lift airfoil; 10. ONERAM6 Wing; 11. NASA CRM; 12. Subsonic and Supersonic Jets. It would be ideal for these test cases to have either high-fidelity data (wind tunnel tests, or LES/DNS data), and/or published results of other solvers so that comparisons can be made. . I also want to point out the difference between this and the TestCases repository. The TestCases repo is used in regression tests to ensure that parts of the code don't break when cha",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581:412,config,configuration,412,https://su2code.github.io,https://github.com/su2code/SU2/issues/581,1,['config'],['configuration']
Modifiability,"Hey everyone,. I have been taking a deep dive into the shape optimization features in SU2 and have resurfaced with some observations, suggestions, and questions. First, the bug:; Even though the config_template, and option structure have changed the numbering of the DEFINITION_DV (for example, FFD_CONTROL_POINT went from being 7 to 11), this has not been reflected in the SU2_PY/SU2/io/tools.py, or any of the tutorials. Therefore, there is a mismatch in what the C++ code uses, and what the python code uses. This is an easy problem to fix and is being fixed in the branch fix_set_ffd_script. Next, I want to have a discussion about the shape optimization options and scalings. Currently there are the following options in the config template to control scaling:. ```; % Optimization objective function with scaling factor, separated by semicolons.; % To include quadratic penalty function: use OPT_CONSTRAINT option syntax within the OPT_OBJECTIVE list.; % ex= Objective * Scale; OPT_OBJECTIVE= DRAG * 10; % Optimization constraint functions with pushing factors (affects its value, not the gradient in the python scripts), separated by semicolons; % ex= (Objective = Value ) * Scale, use '>','<','='; OPT_CONSTRAINT= ( LIFT > 0.328188 ) * 0.001; ( MOMENT_Z > 0.034068 ) * 0.001; ( AIRFOIL_THICKNESS > 0.11 ) * 0.001; %; % Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts); % In general, a norm of the gradient ~1E-6 is desired.; OPT_GRADIENT_FACTOR= 1E-6; %; % Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF); % In general, surface deformations of 0.01'' or 0.0001m are desirable; OPT_RELAX_FACTOR= 1E3; %; % Optimization bound (bounds the line search in SU2_DEF); OPT_LINE_SEARCH_BOUND= 0.1; %; % Upper bound for each design variable (bound in the python optimizer); OPT_BOUND_UPPER= 1E10; %; % Lower bound for each design variable (bound in the python optimizer); OPT_BOUND_LOWER= -1E10; %",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:730,config,config,730,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['config'],['config']
Modifiability,"Hey guys... I just want to clarify, as there seems to be three issues being discussed:. Issue 1) SOLVED - This was related to a crash in the the `CEulerSolver::SetUpwind_Ducros_Sensor()` - This can be fixed by changing a call from GetnNeighbor() to GetnPoints() (see my comments on April 30). I don't believe this ended up being related to the overrun in the restart file (Issue 2). Issue 2) SOLVED - This was a crash when starting with very large meshes, caused by an integer overrun in `CSolver::Read_SU2_Restart_Binary()`. This issue is solved by converting the displacement variable to MPI_Aint and using `MPI_Type_create_hindexed()`, instead of `MPI_Type_indexed()`. Issue 3) This is another issue I've been seeing with large simulations: the paraview .vtu files output by SU2 are unable to be read in by Paraview. The error in Paraview is . ""ERROR: In /local/paraview/VTK/IO/XML/vtkXMLDataReader.cxx, line 400; vtkXMLUnstructuredGridReader (0x55b6b838a330): Cannot read point data array ""Density"" from PointData in piece 0. The data array in the element may be too short."". This is the error Edwin is referring to today. I am changing the type of totalByteSize to a long, and will test to see if that solves the issue. Note that the solution to Issues 1 and 2 are *not* yet in the develop branch. I will create a pull request (should be by end of the day today) when I have verified that the solutions work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-625381735:578,variab,variable,578,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-625381735,1,['variab'],['variable']
Modifiability,"Hey.; I have been performing simulations and validating results using SU2. I have successfully carried out 2D cases. However, I am having a hard time while doing 3D cases. ; Can anyone share an example of a 3D case config file dealing with Euler and Navier-Stokes equation?; Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/523:215,config,config,215,https://su2code.github.io,https://github.com/su2code/SU2/issues/523,1,['config'],['config']
Modifiability,"Hi -. I'm at the AIAA meeting this week and downloaded SU2 after listening to few talks. I noticed you guys optionally link to tecio, the templet binary API, when it is available. . I'm the project manager of the libMesh finite element library, a general purpose C++ finite element library (http://libmesh.sourceforge.net). I also work at NASA/JSC in the Aerosciences & CFD group, hence the potential interest in SU2. In libMesh, we build a number of optional software dependencies from source - Metis, ParMetis, tecio, etc… We find this much preferable to requiring (simple) dependencies to be preinstalled by the user. This pull request adds the source files for tecio, along with automake integration, so that the Tecplot dependencies can be satisfied internally to SU2. The Tecplot tecio source is distributed openly at http://www.tecplot.com/downloads/tecio-library, so there are no issues with redistribution. Some notes on the implementation:; 1. It includes all the tecio sources,; 2. It includes the configure.ac & Makefile.am changes required. Specifically, I did _not_ update the Makefile.in or configure scripts you have checked in to your master, as my autotools are quite newer and doing so would result in unnecessary diffs. So I ask - do you guys have a requirement on the version of autotools you are using, since you are checking in derived files?. See relevant discussion here http://stackoverflow.com/questions/4873065/autotools-and-version-control. If you like this approach, I'll follow up with a similar implementation for building Metis from source as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/21:1009,config,configure,1009,https://su2code.github.io,https://github.com/su2code/SU2/pull/21,2,['config'],['configure']
Modifiability,"Hi @Eduardo-Carvalho ,. your request is now merged into the develop branch and you can test/use it if you like. It will be in one of the next releases, if no further issues occur.; Handling is intuitive: Just set your restart iteration in the config file as you would do normally and activate the restart solution option. Furthermore, place your restart file (two in the case of 2nd order time integration) in the same directory as the config file of your test case. Then you are set up and can run the scripts as normal. ; For more details, I refer to pull request #964. . Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/909#issuecomment-630289600:243,config,config,243,https://su2code.github.io,https://github.com/su2code/SU2/issues/909#issuecomment-630289600,4,['config'],['config']
Modifiability,"Hi @Nicola-Fonzi,. I'm not 100% sure of the reasons behind the GetFSI_Simulation criteria. I'd imagine that the nMarker_Fluid_Load might have been included there to make sure that a problem is treated as FSI only if there is transfer of load from the fluid to the structural domain, even if both zones existed independently in the config. But since the GetFSI_Simulation check is set up as an ""or"" rather than ""and"", as long as one of them is satisfied, the logic will be true for an FSI simulation, which might be sufficient for your application?. For the velocity transfer, I agree with Rafa that it would be better if you could also transfer the velocity from the external structural solver. If an external structural solver is used for dynamic analysis, it probably can output the structural velocities as well as the structural displacements? I left the methods for the recalculation of the grid velocity using finite differences in the code to support fluid-only problems with dynamic grid motion, I wouldn't suggest this as the method for FSI problems. For primal analysis, results from both methods agree with FSI benchmark cases but if you are interested in adjoint analysis at any point, transferring the velocity information from the structural domain directly to the fluid domain gives a significant simplification and improvement to the gradients.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778368854:331,config,config,331,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778368854,2,['config'],['config']
Modifiability,Hi @TobiKattmann . I am OK if we clearly explain the changes in the config template as my main concern is with the users side.; Thanks!. Eduardo,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513959331:68,config,config,68,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513959331,2,['config'],['config']
Modifiability,"Hi @TobiKattmann sorry, I must have missed your message somehow! Thanks for the input, maybe when the mesh adaptation strategy has matured a little more (or is better documented), it can be a bit more easily used. This is also in response to @fredericodpc Right now, I don't know if it is a bug or I'm just unsure of how to correctly use it, but I also have not been able to get the mesh to respect the wing surface. I've also not heard from the branch author either, so I don't know if this is being maintained publically anymore. =( It's a shame because it looked really promising for optimising the cost/accuracy of supersonic solutions!. Ideally, I think one should be able to pass in a representation of the actual surface (either through an stl surface or as a very fine mesh), which should be used as a reference surface. As a minimum, we should be able to set a maximum surface mesh turning angle or some other surface-local control.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-846386250:107,adapt,adaptation,107,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-846386250,1,['adapt'],['adaptation']
Modifiability,"Hi @WallyMaier ! Could you please remove the unused variables in NEMO's ausm.hpp, ausmplusup2.hpp, lax.hpp and NEMO_diffusion.hpp files ? They were introduced in a previous PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1139#issuecomment-751794519:52,variab,variables,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139#issuecomment-751794519,1,['variab'],['variables']
Modifiability,"Hi @WenyinWei : if they have some time, I think that @WallyMaier and @MarcoFossati could fill you in on their approach with the TNE2 branch and NEMO (the idea is for those branches to be merged). @MarcoFossati and one of his students have been coupling Mutation++ to SU2 and have been making nice progress. For the work you cite some time ago in our group at Stanford, Maxwell's equations were solved directly in SU2 (well perhaps just a subset, Gauss's law, if I remember correctly). That work should still be in the git history back in v1.0 or v2.0, I think. Should be able to find it with some searching.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/741#issuecomment-515552244:244,coupling,coupling,244,https://su2code.github.io,https://github.com/su2code/SU2/issues/741#issuecomment-515552244,1,['coupling'],['coupling']
Modifiability,"Hi @WenyinWei, ; using (on Linux) `grep -r HEAT_EQUATION_FVM .` in the `<SU2_root>/Testcases` folder will point you to `./coupled_cht/incompressible/configSolid.cfg:15:SOLVER= HEAT_EQUATION_FVM`. It is a CHT Testcase (i.e. coupled fluid and solid) but by changing `MARKER_CHT_INTERFACE ` in configSolid.cfg to `MARKER_ISOTHERMAL=(PINSD, 350)` for example you should be able to run the configSolid.cfg alone. ; Hope that helps, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/783#issuecomment-527331047:149,config,configSolid,149,https://su2code.github.io,https://github.com/su2code/SU2/issues/783#issuecomment-527331047,3,['config'],['configSolid']
Modifiability,"Hi @amirkb91,; It sounds like you have done things the right way, so if the variables are not being reset after they are registered my next guess is that they are not being considered for pre-accumulation. Try running the code without pre-accumulation (there is a config option, no need to recompile) and see if that makes a difference.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-491813704:76,variab,variables,76,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-491813704,2,"['config', 'variab']","['config', 'variables']"
Modifiability,"Hi @antares190,. Glad to see that things seem to be starting to work for you. We (Brian) are trying to improve this capability in the solver and any experiences / suggestions / help will be welcome. With that said, this seems like an interesting result. Would you mind submitting it (or other pictures that you like better) so the SU2 Foundation can use it to show this capability to others in the future? The link where you can do this is here<http://su2foundation.org/su2-promotional-material/?utm_source=hs_email&utm_medium=email&utm_content=76584389&_hsenc=p2ANqtz-9fEq2awKk2vd155cCcN_N4mWBCZK-rJ-TqNsZhqSJs-VWn-w7q-H6w8sdiA3LyuOTqlK4eqZhFFstKi-LQFyyGqYPdkwYc9JsNdB1yyd7pqMwTFzA&_hsmi=76584389>. Thanks a lot,. Juan. On Apr 29, 2020, at 1:38 PM, antares190 <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. [Comparison]<https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png>; [ComparisonMesh]<https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/948#issuecomment-621450497>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRCGLBHJCB3FS4JSSV3RPCF5RANCNFSM4MQACOXA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-621483859:1058,adapt,adaption,1058,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621483859,2,['adapt'],['adaption']
Modifiability,"Hi @bmunguia ,; I was in the same situation as @MiracAydin1, so thanks for the hint. Nevertheless I'm having some problems. I followed your instructions to install the branch:. 1. downloaded the [feature_adapt_sst](https://github.com/su2code/SU2/tree/feature_adap_sst) branch.; 2. Used meson to configure the build; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true`; 3. Added the environment variables to the .bashrc; 4. ninja build.; `./ninja -C build install`. The build didn't show any errors, only few warnings during meson ( `gcc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C`). When I try to run the mesh_adaption (or even run simply the solver through parallel_computation.py):. `$SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6`. It immediately shows an error (without even showing the SU2 splash screen) :; `Traceback (most recent call last):`; ` File ""/usr/local/bin/mesh_adaptation_amg.py"", line 38, in <module>`; ` import SU2`; ` File ""/usr/local/bin/SU2/__init__.py"", line 14, in <module>`; ` from SU2 import amginria`; ` File ""/usr/local/bin/SU2/amginria/__init__.py"", line 4, in <module>`; ` from .interface import *`; ` File ""/usr/local/bin/SU2/amginria/interface.py"", line 41, in <module>`; ` import _amgio as amgio`; `ImportError: No module named _amgio`. Am I missing any dependencies? ; Please note that I previously compiled SU2 master branch without issues, and have already installed mpich, numpy, scipy.; Any help would be really appreciated.; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619332650:295,config,configure,295,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619332650,4,"['config', 'variab']","['configure', 'variables']"
Modifiability,"Hi @cesss ,. you can use the option `-Dcustom-mpi=true`. This will tell meson to not look for MPI (but still set all preprocessor flags) so that you can provide all necessary linker/compiler flags manually using environment variables. Let me know if it works for you.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/867#issuecomment-583985541:224,variab,variables,224,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-583985541,1,['variab'],['variables']
Modifiability,"Hi @clarkpede I still have the same issue after using the advice you suggested above for having binary to NO. Please find attaches files for your review. I am still seeing same error like @alexfangman . Can you please help?; WARNING: Tried to find 14980 cells suitable for adaptation, but only found 0; The following cell types are currently adaptable: ; + triangles; + quadrilaterals; + tetrahedrons; Your grid may have too high a percentage of other types.; Number of elements to adapt: 0; Homothetic grid adaptation",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504564218:273,adapt,adaptation,273,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504564218,4,['adapt'],"['adapt', 'adaptable', 'adaptation']"
Modifiability,"Hi @cvencro , I think it would be good to add that Testcase to the regression tests to 'guard' the code. ; I actually wanted to do that real quick but it guess that with `SINGLEZONE_DRIVER` one cannot access `TIME_ITER`, only `EXT_ITER` with the` .test_iter` variable of the python Testcase class. Not sure if that is addressed in #724 , maybe @rsanfer or @talbring can give a quick info as this is probably affecting all unsteady regression tests. . Concerning the Testcase repo: You can simply open a PR for the develop branch of the Testcase repo, and refer to the corresponding PR here (and vice versa). As far as I know the Testcase repo is not protected, i.e. you can merge without any check. And as it is just one added mesh and no other change you could do it right now from my point of view. Another point: What about the rotating_frame for incompressible flow? If it is untested I would like an error catch in place that this feature can't be used out of the box.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-527167827:259,variab,variable,259,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-527167827,2,['variab'],['variable']
Modifiability,"Hi @economon ,. I tested a couple of cases - laminar flow over a cylinder and turbulent flat plate and the convergence is greatly enhanced. I have attached a plot of convergence history for the flat plate case. I didn't have much luck with the laminar backward facing step case though. The residuals tends to oscillate around -5.5. I was planning to run the NACA 0012 test case soon. Do you have any cases specifically that you wanted to test? I can run some of them soon.; ![Convergence](https://user-images.githubusercontent.com/28007882/65721666-b9eeae00-e0aa-11e9-97c6-727d743e923b.png). Cheers,; Akshay",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-535683971:130,enhance,enhanced,130,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-535683971,1,['enhance'],['enhanced']
Modifiability,"Hi @msahinae00,. The branch [feature_adap_flux](https://github.com/su2code/SU2/tree/feature_adap_flux) has the fixed wall distance computations (the branch itself isn't up to date with v7, but I merged in develop way after the wall distance was fixed). However, RANS adaptation is still under development. While I've gotten decent looking meshes, e.g.:; ![vortex](https://user-images.githubusercontent.com/19416354/73195095-1c4fcd80-40e2-11ea-9590-4fbc4baf279d.png); ![Screen Shot 2019-11-04 at 1 36 27 PM](https://user-images.githubusercontent.com/19416354/73195106-2245ae80-40e2-11ea-8e24-38ec76d4cfb4.png); I still haven't properly verified the code. Cheers,; Brian",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-578842312:267,adapt,adaptation,267,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-578842312,1,['adapt'],['adaptation']
Modifiability,"Hi @pcarruscag ,; You probably mean `airfoil_fsi_rbf` from serial_regression (?); I get the written on screen:. Boundary marker leading_edge is NOT a single straight.; Boundary marker 0.0 is a single straight.; Boundary marker pressure_side is NOT a single straight.; Boundary marker 0.0 is a single straight.; Boundary marker suction_side is NOT a single straight.; Boundary marker 0.0 is a single straight. The diff of my local branch with (origin/)develop is empty, so can you double check for me if you are using the latest develop or fix_SlipWall branch?. For the 0.0 markers: In the configFlow.cfg you have ; `MARKER_EULER= ( leading_edge, 0.0, pressure_side, 0.0, suction_side, 0.0)`; I dont understand why there are zeros as nothing has to be prescribed on the Euler Wall. So the 0.0 is interpreted as a marker tag. Removing the 0.0 does not change anything for me in Residuals as well. In the mesh there are also no boundaries defined which are called `0.0` :) . Does that help or am I on the wrong track?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-537204246:589,config,configFlow,589,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-537204246,1,['config'],['configFlow']
Modifiability,"Hi @pcarruscag, just a small follow-up to my comment in the code section concerning the new adjoint implementation that might also help here (either by using it directly or just for getting some ideas). What I would like to change is in fact not the `CDiscAdjSolver` (which I find is very good) - but I'd like to propose some changes for the *interface* to the AD tool. And some subsequent stuff.; It will allow for a more direct control of derivatives which is favourable in case one deals with multiple zones, multiple sets of conservative variables, geometry coordinates in case of FSI, and so on. And of course in terms of performance as one needs only one tape that one can keep during all iterations, regardless of what their variables might be. In case you are interested, take a look at the implementation in [su2code:sc_develop](https://github.com/su2code/SU2/tree/sc_develop). I'll open the PR as soon as @talbring opened his one for his great rework on input/ouput. As for this PR, let me wait a second if we can clear up the issue concerning the registration and I'll leave a small review afterwards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615#issuecomment-457582842:542,variab,variables,542,https://su2code.github.io,https://github.com/su2code/SU2/pull/615#issuecomment-457582842,4,['variab'],['variables']
Modifiability,"Hi @pcarruscag, thanks for the quick response. . There are still several possible memory reductions on the FEA solver by moving stuff to the vertices. Even though over-allocating would probably be fine for the structural solver as problems remain relatively small, I am replicating this structure for the mesh solver on the fluid side, and in there we should be careful not to add tons of doubles that are only necessary at the boundaries to the whole variable structure. I might also need a similar thing in the flow solver, e.g., to store boundary loads for the adjoint solver. I believe that relying on some ordering would be quite complex and require a lot of reworking of the code, everything in the solvers links directly to the point index, which gets renumbered at the beginning. So forcing the vertex nodes to go on to the initial positions doesn't seem like an easy one. And, as you say, maybe if we flag the nodes (as boundary or interior) we end up pretty much at the starting point. Possibly, the best alternative would be to replicate the structure in CGeometry in CSolver, therefore adding some CVertexVariable parent class and child for the different solvers. There are other boundary magnitudes that could be interesting to store as well. It would require some work, but given that there is a direct correspondence iMarker+iVertex -> iPoint, I would expect that to be the least invasive approach.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-508090169:452,variab,variable,452,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-508090169,1,['variab'],['variable']
Modifiability,"Hi @pcarruscag,; I apologize for giving a poor suggestion (older version). The custom-mpi mode with all environment variables defined did not seem to work for me, as you can see from my comments on 29th of May and 8th of June.; Does the legacy build system mean using automake/make etc?. Also, I tried changing the dependency from mpi to mpich as you suggested. I changed the lines to: ; ```; mpi_dep = [dependency('mpich', language: 'c', required : get_option('with-mpi')),; dependency('mpich', language: 'cpp', required : get_option('with-mpi'))]; ```; and I got this error.; ```; meson.build:37:2: ERROR: mpich dependency does not accept ""language"" keyword argument; ```; So I removed the language part and reran the command to get the following, you can see it identifies mpich as a dependency:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=false -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu famil",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:116,variab,variables,116,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['variab'],['variables']
Modifiability,"Hi @pcarruscag,; You are right, it shares a lot of code with previous PR. Here constants does not change. Differences are as follows - . 1- It has different pressure flux definition (new expression); 2 - Here sum of squares of velocity components were needed for left and right state; 3- removed few variables and added few.; 4- Also left and right state split Mach numbers are Mach number polynomials only (for programming purpose) without pressure terms. Previously SLAU and SLAU2 scheme have already been implemented in the code separately. I mean some of these sucessive schemes share a lot of common formulation but differ with some expressions, constants etc. ; So it may be fine to keep them separate. . I will see your advice and further look into similar variation implementation in the code (sorry if I missed out some simple point you mentioned). . Thanks ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-446730390:300,variab,variables,300,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-446730390,2,['variab'],['variables']
Modifiability,"Hi @pcarruscag,; thank you very much for the insight and the well thought proposed solution. I wasn't aware that there was such a loss in performance, it seems clear that something needs to be done. The only question I have is regarding the following comment . > There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I'm using this feature more and more, I was planning to extend it in the structural solver to remove the `if fsi` statements, and I also used it in the rework of the mesh solver, as defining variables at the interface only reduces greatly the memory footprint (sort of like the node-vertex structures in geometry). You mention there are options to keep this versatility, how difficult do you think would be to implement them?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-507998889:394,variab,variables,394,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-507998889,6,"['extend', 'variab']","['extend', 'variables']"
Modifiability,"Hi @pcarruscag,; thanks so much for all your effort in adapting the PR. As usual, great improvements to the feature from your review. Sorry for the radio silence, as I told you I was away due to unforeseen personal circumstances and I'm only back to office today.; Hopefully it's all ready now, I think this feature is ready to go into the next release. If there are no further comments I'll merge it later today.; Best,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/872#issuecomment-591881962:55,adapt,adapting,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/872#issuecomment-591881962,1,['adapt'],['adapting']
Modifiability,"Hi @rois1995 . For now, I'm ignoring all TKE in Total Energy in personal research. I don't remember the details clearly. ; The problem was that the enthalpy added TKE was stored in the primitive variables. ; When I tried to fix it, the problem was when the enthalpy added TKE was stored in the primitive variables. For the Roe scheme in convective flux calculations (not sure about other flux scheme), the Roe speed of sound is calculated using enthalpy. But as I mentioned above, the stored enthalpy is higher than other simulation because of TKE. I thought it make a problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-2245163889:195,variab,variables,195,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-2245163889,4,['variab'],['variables']
Modifiability,"Hi @rois1995. The LM model code under the development clearly has some problems. I've not finished yet all validation cases for commonly used. So, I can't help with the E387 profile problem. but, I think I can give some helpful comments. . Check the numerical scheme which you used. like Roe and L2Roe, AUSM and SLAU. In my case, I didn't think to use the low dissipation scheme because I thought the code was wrong. I upload the configure file for the T3A flat plate case, which I used.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1111261534:430,config,configure,430,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1111261534,2,['config'],['configure']
Modifiability,"Hi @rsanfer and @TobiKattmann , I agree with the more generalised solution for rigid and deforming meshes too and this is excellent timing of #760 to combine the new approach. ; I have FSI cases I can use, but thought it would be a good stepping stone to use fluid-only case to begin with to avoid the coupling terms for this verification. Using dynamic surface movement definitions for the single-zone pitching airfoil test which has previously been used for rigid motion, the primal solutions and gradients from finite differences for both are very similar as expected. Therefore this should be a good reference to check the discrete adjoints for deforming mesh when the adaptations for grid velocities are made using #760.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766#issuecomment-524565760:302,coupling,coupling,302,https://su2code.github.io,https://github.com/su2code/SU2/pull/766#issuecomment-524565760,2,"['adapt', 'coupling']","['adaptations', 'coupling']"
Modifiability,"Hi @rsanfer,; I was afraid you were going to say that...; On the subject of memory savings, and taking the specific case of CFEAVariable, the class is 304 bytes before it allocates data, once data is allocated for a plain nonlinear 3D problem the effective size is 704 bytes, looking at the constructors, for such a problem we allocate 22 doubles or 176 bytes. So effectively 75% of the memory (equivalent to 66 doubles) is wasted.; It is important to note that this ""efficiency"" figure does not get much better even when this class allocates all it members (for which one needs fsi + adjoint + unsteady). This happens because operator `new []` needs to store the size of the allocation together with the data for when `delete []` is called so you get ""pointer + size + data"" rounded to a multiple of 16B because of the default alignment.; Therefore my opinion is that we can ""over allocate"" and still save memory, unless you need massive amounts of data for the boundary points(?)... But looking at CFEABoundVariable I don't think that is the case.; If we want to be optimum in terms of performance and memory usage, we would need to mimic the CGeometry strategy in CSolver.; If we do not want to mimic that structure we need to either be able to rely on some ordering of the special cases, e.g. boundary variables stored first, so that at runtime:; ```; double* Get(int iNode) {; if (iNode < nBoundary); return &special[iNode];; else; return &normal[iNode-nBoundary];; }; ```; If we cannot rely on some order we would need to tag nodes ""special"" or ""normal"" and then use some form of map for special cases... All this would cost a lot of indirection.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-508082019:1306,variab,variables,1306,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-508082019,1,['variab'],['variables']
Modifiability,"Hi @rsanfer,; I've updated those booleans.; The results of that verification are [these](https://github.com/su2code/SU2/files/2612501/FFD_verification.pdf), which I had linked to in #597.; I do not think the case will run without this PR, in any case [here](https://github.com/su2code/SU2/files/2792370/results.zip) are the config/mesh and solution files.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615#issuecomment-457242410:324,config,config,324,https://su2code.github.io,https://github.com/su2code/SU2/pull/615#issuecomment-457242410,1,['config'],['config']
Modifiability,"Hi @rsanfer,; Regarding patterns, larger cases are more likely to have the issue than small ones, I did not test boundary conditions.; I have not tested the forward mode because it differentiates linear solvers and in the past I have found that to be very limiting so I'd rather not go there. The most detailed verification we have is that present by @cvencro at scitech (finite differences). @cvencro do you have any before/after cases where this problem showed?; On the recording of variables, I like the FEM_VARIABLES as a convergence monitor. But for larger sets of variables, e.g. grid nodes, topology, a ""post processing"" recording step makes sense, that increase in memory footprint is why I have not created a PR for FSI shape derivatives yet. I talked about this briefly with @oleburghardt during the annual meeting and the new adjoint driver should have hooks for this type of post processing.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615#issuecomment-455994325:485,variab,variables,485,https://su2code.github.io,https://github.com/su2code/SU2/pull/615#issuecomment-455994325,2,['variab'],['variables']
Modifiability,"Hi @sun5k ,. I am also working on the implementation of this transition model within SU2. . In order to verify the code, I am running simulations on the E387 profile (taken from DOI:10.1177/0954406217743537) and on the Flat Plate test cases (taken from DOI: 10.2514/1.42362). . While for the E387 profile the results are similar (although not really convincing yet), for the flat plate (NASA 2DZP) the transition occurs right at the leading edge. Could you please share the config files that you have used?. I also noted a couple of inaccuracies within your implementation (by inspection of the ""Files changed"" section), maybe we can have a talk to discuss about it. Thank you in advance.; Best regards,; Andrea",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1105521136:474,config,config,474,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1105521136,1,['config'],['config']
Modifiability,"Hi @sun5k, could you please add also the configuration files to reproduce these results? I would try to run these simulations too with my implementation of the transition model. Thank you in advance!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1198118715:41,config,configuration,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1198118715,1,['config'],['configuration']
Modifiability,"Hi @sun5k,. I think that the restart of the solution is missing. Since for CTransLMSolver you have inherited the functions from CTurbSolver class, the restart is only applied to the turbulent solver. I solved this problem by creating another class called CTransSolver which is a copy of the CTurbSolver class but with a modified LoadRestart function. I guess that the function in the CTurbSolver class can be modified to take into account the transition solver. It depends if we want to divide the transition from the turbulence solver or not.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1111256246:99,inherit,inherited,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1111256246,1,['inherit'],['inherited']
Modifiability,"Hi @themrdjj,; Thank you for the feedback, there was already a similar report in #796 (which incidentally went stale and was closed), I will try to do something about it, or if you would like to contribute code to the project I can point you to right place to add an error message. Meanwhile my best advice is to not start a config from scratch until you know SU2 very well (and even then...) look for a test case that uses similar features and go from there.; The minimal config is the one in Quickstart, the template is more of a catalog :) I don't think we'll ever have a unified minimal config, SU2 does many things, some mutually exclusive.; Convective options are reasonably well documented here: https://su2code.github.io/docs_v7/Convective-Schemes/; The output messages before ""Begin Solver"" can be helpful (although in this particular case you would need to know what to expect). Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/842#issuecomment-566642727:325,config,config,325,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-566642727,6,['config'],['config']
Modifiability,"Hi @timjim333 ,. Exactly (concerning your first question). . For the %s : In your initial post you stated that `mpirun --use-hwthread-cpus -np 12 SU2_CFD turb_ONERAM6.cfg` worked for you. So %s is simply the place-holder for the SU2 module together with the configure script. Which in your case would be `SU2_CFD turb_ONERAM6.cfg` . But `parallel_computation.py` will also call `SU2_SOL turb_ONERAM6.cfg` for you after the solver routine to create output files for visualization. ; If you take a look into the `interface.py` (as in my previous post) and the `parallel_computation.py` you'll find exactly how its done. Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526#issuecomment-395712721:258,config,configure,258,https://su2code.github.io,https://github.com/su2code/SU2/issues/526#issuecomment-395712721,2,['config'],['configure']
Modifiability,"Hi @timjim333 ,. you can try to set an environmental variable 'SU2_MPI_COMMAND' which contains your specific mpirun command. Take a look at /SU2_PY/SU2/run/interface.py (line 66) in the source code, that might help. There the command which is called by parallel_computation.py is build. For your case it should be:; export SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -np %i %s"". I hope that helps :) Regards,; Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526#issuecomment-383032449:53,variab,variable,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/526#issuecomment-383032449,1,['variab'],['variable']
Modifiability,"Hi @timjim333, any luck with the surface mesh deterioration issue? ; I've managed to successfully run the Onera M6 case, with a sufficiently refined volume mesh around the shock wave region, however the wing surface mesh does not follow this adaptation. Does anyone by any chance have a working .cfg file for the M6 case? I may be setting something up incorrectly.; Thanks a lot!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-846093123:242,adapt,adaptation,242,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-846093123,1,['adapt'],['adaptation']
Modifiability,"Hi All,. I’m a little bit confused with the python scripts and the design variable definition. It seems that to compute the number of design variable we use something like this:. ```; # number of design variables; dv_size = project.config['DEFINITION_DV']['SIZE']; n_dv = sum(dv_size); ```. I think that dv_size is new for me. Do you know what is the reason for this? Is it possible to put several design variable together in the output file and the python stuff will split the design variables?. Related with this, I have noticed several inconsistencies like:. We use:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; k = 0; for i, dv_scl in enumerate(dv_scales):; for j in range(dv_size[i]):; x0[k] = x0[k]/dv_scl;; k = k + 1; ```; or this:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; x0 = [ x0[i]/dv_scl for i,dv_scl in enumerate(dv_scales) ]; ```. Any clarification would be very appreciated. Thanks!; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/378:74,variab,variable,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/378,8,"['config', 'variab']","['config', 'variable', 'variables']"
Modifiability,"Hi Amir,; I just had a look and that is not going to work I'm afraid.; The numerics classes are not getting the value of the coefficients from the variable that you register as input, this happens because config returns cb1 by value, meaning that what you register as input is not CConfig::cb1_usrdef (seen by numerics) but CSolver::cb1_adj.; You can try registering CConfig::cb1_usrdef as input, making it a public variable would be the easiest thing. This is a hack and personally I don't like the idea of differentiating variables that belong to CConfig. I would add a cb1 member variable to numerics and a method to set it, this method would then be called after you register CSolver::cb1_adj as input to set CNumerics::cb1 = CSolver::cb1_adj and the numerics would no longer get values from the config by themselves in ComputeResidual.; I hope this makes sense but do have a look at the elasticity solver and try to mimic the strategy used there.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-492342990:147,variab,variable,147,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-492342990,6,"['config', 'variab']","['config', 'variable', 'variables']"
Modifiability,"Hi Brain. I have uploaded the branch but having problem to compile it. I use the following configuration. ./configure --prefix=/home/msahin/SU2 -enable-mpi -enable-metis --with-cxx=mpicxx --enable-PY_WRAPPER CXXFLAGS='-O3'. but having the following error message:. ... ; ...; CXX ../src/linear_algebra/libSU2_a-CPastixWrapper.o; AR libSU2.a; make[1]: Leaving directory `/home/msahin/SU2/Common/lib'; Making all in SU2_PY; make[1]: Entering directory `/home/msahin/SU2/SU2_PY'; make[1]: *** No rule to make target `SU2/amginria/_amgio.so', needed by `all-am'. Stop.; make[1]: Leaving directory `/home/msahin/SU2/SU2_PY'; make: *** [all-recursive] Error 1. Am l missing something in the configuration?. Mehmet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-579140612:91,config,configuration,91,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-579140612,3,['config'],"['configuration', 'configure']"
Modifiability,"Hi Brain. One quick question. I have noticed that you have set ADAP_NORM to 1 (Lp=1) in one example for Euler solution. I am using original PYAMG examples and changing "" remesh_options['Lp'] "" does not alter the adapted mesh. The log file always saying LP=2 . Are you using a different PYAMG version? . Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-650061484:212,adapt,adapted,212,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-650061484,1,['adapt'],['adapted']
Modifiability,"Hi Brian, ; I'm sorry for the late reply, I've been using the feature_adap branch in 2D and 3D with success in the last weeks, so thanks for the amazing work. . After your last commit I recompiled everything, moreover now I'm using `$SU2_RUN/SU2_DEF` before running `mesh_adaption_amg`, so to be sure that element orientation is as expected. The tool is working nice, once the smoothing, grad, adaption values are tuned, thank you very much!. After a bit of use may I add pair of feature request, that in my opinion would improve the overall (already remarkable) quality of the `feature_adap` .; **_Feature request:_**; 1. The possibility to have boundary layer elements (QUAD PENTA) with the mesh adaption would be very much appreciated. If not possible, wouldn't it be possible to force a frozen interface between boundary layer elements?; 2. Add a ""region of interest"" where the refinement takes place. Sometimes it is not required to have sharp shocks resolved far away from the body.; 3. Do you plan to merge this feature in the master branch?. **_Bugs (or at least unexpected behavior):_**; 1. When I use the restart option, even if there is a `restart_flow.dat`, in the base folder, apparently the `mesh_adaption_amg` does not create a link into the \adap\ini\ folder, and I've to manually copy it (quite fast), to effectively enable the restart option. **_Clarification_**; 1. `PYADAP_BACK` option is really interesting, but I don't get it completely: shall I mesh the complete flowfield with higher detail (refined mesh), does this option handle only the body surface (or only the volume inside the body of interest, not the flowfield)? Is there any plan to use geometric files such as step or iges, to have the proper curvatures defined?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-637328023:394,adapt,adaption,394,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-637328023,2,['adapt'],['adaption']
Modifiability,"Hi Catarina. Thanks for your help. Since there's a attachment file type limitation, I am attaching the files in a zip folder here. In the folder, the configuration files marked as '_old' are the ones that worked well before. 'invbb' refers to the blunt body case and 'invram' refers to the RAM C-II case. The mesh files are the same as before (blunt body is in .su2 format and ram c-ii in .cgns). . [residual_stalling.zip](https://github.com/su2code/SU2/files/11464580/residual_stalling.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2026#issuecomment-1545764913:150,config,configuration,150,https://su2code.github.io,https://github.com/su2code/SU2/issues/2026#issuecomment-1545764913,1,['config'],['configuration']
Modifiability,"Hi Daniel! Thanks again to you and Ben for working on this new feature... it is going to be a nice contribution to the code. The code looks good to me, but there is an issue with the automatic differentiation build. It is an easy fix though: please change your ""double"" declarations to ""su2double"" in the commits. We use ""su2double"" everywhere in the code so that it is straightforward to specialize the variable types at compile time, which is needed by the AD tool. Once the tests pass, we'll pull this in right away.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/214#issuecomment-164091519:404,variab,variable,404,https://su2code.github.io,https://github.com/su2code/SU2/pull/214#issuecomment-164091519,1,['variab'],['variable']
Modifiability,"Hi Daniel,. You can find the implementation of variable properties with cubic EoS in the master/develop version. If you need to compute the properties with more accurate thermo-physical models, e.g. multi-parameter, there are 2 main ways:. * By using the external library FluidProp (feature_fluidprop_final, yet outdated); * By means of look-up tables (feature_adjoint_lut). We are about to improve the look-up table method and will work on having this feature in the develop soon. Just let me know if you are interested and I will give you more details. Best,. Matteo. ——————————————————; Dr. ir. Matteo Pini, PhD; Assistant Professor; Propulsion & Power<http://www.pp.lr.tudelft.nl/>; Aerospace Engineering Faculty; Delft University of Technology. Kluyverweg 1; 2629 HS Delft; The Netherlands. Phone : +31 15 27 84794; Skype : matteo_pini1. From: banuti <notifications@github.com>; Reply-To: su2code/SU2 <reply@reply.github.com>; Date: Thursday, 24 October 2019 at 22:18; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] variable properties (transport and thermodynamic) for compressible flows with any eos (#794). Hi,. is that branch still active? It seems the last commit was more than two years ago. Best,; Daniel. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/794?email_source=notifications&email_token=ABTGC2MB627S4SOHCTMGOTTQQH7KFA5CNFSM4I2YNZ6KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOECGJUEI#issuecomment-546085393>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABTGC2JPU76ZE3WG5UUKBYDQQH7KFANCNFSM4I2YNZ6A>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/794#issuecomment-546316470:47,variab,variable,47,https://su2code.github.io,https://github.com/su2code/SU2/issues/794#issuecomment-546316470,2,['variab'],['variable']
Modifiability,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:379,config,config,379,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133,4,"['config', 'variab']","['config', 'variables']"
Modifiability,"Hi Eduardo,. both, 'symmetry plane' and 'symmetry as the slip wall' should work in the code (upon fixing this) and it should be made clear (e.g. in the config_template.cfg) what the BC is suitable for, independent of how it is named in the end. ; The simplest solution is probably the patch I provided together with a short note in the config_template (maybe even a reference to this issue), as both 'options' will work as expected (using the very same code). It will basically 'restore' the behaviour of MARKER_SYM of before the fix in #657. The downside is some more computational cost (in case of a plane) which has to be done for each vertex on the marker. I cant say to which extend this takes more time but I would guess it is not too costly. Depends on the case as well. I can do a little check with your case here. . That's it for the diplomatic part :) (Please take the following with a grain). For me a symmetry has to be a line or plane. To cite Jiri Blazek's book 'Computational Fluid Dynamics'(...) 3rd edition using a screenshot:. ![blazekbook](https://user-images.githubusercontent.com/31306376/61662377-9ab05a80-acce-11e9-85bf-5998db204d92.png). The chapter is called 'symmetry plane' which already is kinda biased. But there is no 'slip wall for viscous flow' mentioned to my knowledge. In another book (from Ferziger&Peric, which I only have in german) symmetry is only used in the context of symmetry planes as well. ; To me, symmetry BC's are also linked to visualization using mirroring. And mirroring (as the word is commonly meant) is only possible along planes and its little brother, the straight line. I can be wrong or it might be a question of research background. So how to proceed? Trial by combat might have some unpleasant aftermath for the winner so we might go the democratic way and do a poll :) . Cheers, ; Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513957018:681,extend,extend,681,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513957018,2,['extend'],['extend']
Modifiability,"Hi Eduardo,; The channel 2D and supersonic vortex shedding cases are failing due to small changes in residuals, the operations in Roe were re-ordered a bit, and these cases run for many iterations, I am guessing it is just due to numerical precision. But I will have a look before updating the residuals.; The rotating cylinders case is the infamous one that appears to be sensitive to minute, and seemingly insignificant, changes as reported in #700, at the reference residuals the case is actually diverged.; Finally there is an AD case using JST that also fails because it is a file diff and we output 15 significant digits to that file. The change is due to the refactoring of central schemes that required changing the order in which variables are registered for pre-accumulation.; I do appreciate you taking the time to review this PR, especially since you are ""first author"" of the low Mach Roe schemes and there are no regressions for them, nevertheless I tested them before and after and it seems I did not break anything.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-506526475:666,refactor,refactoring,666,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-506526475,2,"['refactor', 'variab']","['refactoring', 'variables']"
Modifiability,"Hi Everyone. I'm new to SU2.; Installed on my mac (Catalina) the parallel version 7.0.2.; Also installed MPICH. I am not using bash but rather tcsh (maybe there is a problem there...); Added the following lines to .tcshrc:; setenv SU2_RUN /Applications/SU2/bin; setenv PYTHONPATH $SU2_RUN. I have tried to run the onera3D tutorial case in parallel and got the following message:; % parallel_computation.py -f inv_ONERAM6.cfg -n 2; Traceback (most recent call last):; File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in <module>; main(); File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; options.compute ); File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; the_Command = build_command( the_Command, processes ); File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in build_command; raise RuntimeError('could not find an mpi interface'); RuntimeError: could not find an mpi interface. Ideas to what can I do?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/938:753,config,config,753,https://su2code.github.io,https://github.com/su2code/SU2/issues/938,1,['config'],['config']
Modifiability,"Hi Floris,. Can you clarify whether you are using the continuous or discrete adjoint?. One thing that I am noticing in your results above is the large difference in magnitude between the compressible and incompressible sensitivities on the surface, which could require very different scaling later when that info is sent to the optimizer... . I would recommend running the discrete adjoint to get sensitivities for lift/drag w.r.t. the same set of design variables for both the compressible and incompressible solvers and comparing the result (with a nearly incompressible flow so the conditions are basically the same). This way, you can remove the scaling for optimization that is part of the shape_optimization.py script and focus only on the gradient results first. You could use the discrete_adjoint.py script for this. Hope this helps,; Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-316295088:455,variab,variables,455,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-316295088,1,['variab'],['variables']
Modifiability,"Hi Francisco,. I dont know if you are referring to that, but we separated essentially the computation of the derivatives with respect to the conservative variables and with respect to the geometry (node coordinates). The latter is only needed when we write the solution files. So every ExtIter%Wrt_Frequency we have to do two recordings. Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/329#issuecomment-260112703:154,variab,variables,154,https://su2code.github.io,https://github.com/su2code/SU2/issues/329#issuecomment-260112703,1,['variab'],['variables']
Modifiability,"Hi Giulio,. thanks a lot for your contribution, it looks very nice. . I just saw your reply to my comment below, I really appreciate if you don't mind giving me a bit more time before merging in. I was working on different developments and have a couple of deadlines coming up so I am a bit behind myself in merging with develop. . I'll try to review this as soon as I can, though. A couple of comments after I skipped through quickly:; - I have seen that in some cases there are a lot of lines that are removed and added just because of changes in the indentation. See, e.g., CIsoparametric::Set_TransferCoeff(CConfig **config, in which I saw two large blocks that have not changes but the indentation goes from spaces to tabs. This has caused some issues in the past, would you mind to take a look at it?; - About the change of name from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE. Can we hold this discussion for the future so we can give it a second thought? I think it may be important to maintain the difference between interfaces with different physics and interfaces that connect the same physics.; - I had here written a question of to what extent is the change in the physical time step iteration affecting the driver and the iteration classes. I completely understand your logic for fluid-fluid problems of transferring information at pseudo-time steps, but as I said in FSI problems this would not be adequate. I also added steady-state FSI into a separate branch, so I will take a look at potential conflicts. Thanks again for this great contribution! I'll get into this and get back to you as soon as possible!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-256047684:621,config,config,621,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-256047684,1,['config'],['config']
Modifiability,"Hi Giulio,; Great news, thanks!; After looking at CSysMatrix more, one possibility would be to move dense matrix routines to a class that would replace/augment this CSymmetricMatrix and then CSysMatrix could use it for operations on its blocks (which are dense). But since this involves refactoring a core class of SU2 I agree more people should be involved in the discussion.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-407023516:287,refactor,refactoring,287,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-407023516,1,['refactor'],['refactoring']
Modifiability,"Hi Giulio,; Thank you for the feedback. I inherited some of this code from a previous student of my PhD supervisor and I thought the same when I saw the CSymmetricMatrix class. However, as I understand it, CSysMatrix implements a block sparse format and here we have a simpler dense format. Another big difference is that CSymmetricMatrix does not need to be used in parallel. But I agree that making these two classes related somehow would be better, so I am open to suggestions.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-406516746:42,inherit,inherited,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-406516746,2,['inherit'],['inherited']
Modifiability,"Hi Guilio,; I have downloaded and installed the develop branch version but I am still getting the same error. I am attaching the config file for your reference. I hope I am using the correct cfg file. Thanks and regards; Suman Vajjala; [twoprop.su2.gz](https://github.com/su2code/SU2/files/1067875/twoprop.su2.gz); [rot_prop_NN.cfg.gz](https://github.com/su2code/SU2/files/1067877/rot_prop_NN.cfg.gz)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/401#issuecomment-307756909:129,config,config,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/401#issuecomment-307756909,1,['config'],['config']
Modifiability,"Hi Heather,. Can you please tell me how to generate doxygen document for the latest version on my computer (step by step commands). Thanks and Regards; Amit. ---. From: Heather Kline notifications@github.com; Sent: Wednesday, May 25, 2016 4:25:08 PM; To: su2code/SU2; Subject: Re: [su2code/SU2] Detailing config_template.cfg with all parameters and more detailed descriptions (#277). The doxygen at that link is very out of date, we no longer update it.; I meant the doxygen at https://github.com/su2code/Documentation/tree/master/Doxygen; The file there will allow you to get the doxygen documentation for whichever version of the code you have on your computer, as it uses comments within the code to generate the documentation. The output where I clipped the above example is in >Modules > Description of the Configuration Options. In reading the .cpp you have to do some searching, as the options are stored in a map in another file (option_structure.hpp). But in terms of those maps, yes, they do have all the options. ## . You are receiving this because you are subscribed to this thread.; Reply to this email directly or view it on GitHubhttps://github.com/su2code/SU2/issues/277#issuecomment-221539456",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/277#issuecomment-221655424:812,Config,Configuration,812,https://su2code.github.io,https://github.com/su2code/SU2/issues/277#issuecomment-221655424,1,['Config'],['Configuration']
Modifiability,"Hi Heather,. I have submitted a problem with my SST case causing divergence. Will you have some time to respond to that. I will greatly appreciate. Thanks. Jehan. Sent from Yahoo Mail on Android. From:""Heather Kline"" notifications@github.com; Date:Mon, May 18, 2015 at 3:17 PM; Subject:Re: [SU2] Adaptive CFL condition (apart from currently available fixed/ramp) (#94). This has been implemented. —; Reply to this email directly or view it on GitHub.￼",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/94#issuecomment-103224627:296,Adapt,Adaptive,296,https://su2code.github.io,https://github.com/su2code/SU2/issues/94#issuecomment-103224627,1,['Adapt'],['Adaptive']
Modifiability,"Hi Heather,. This is a very interesting contribution. Just one question, Does multi objective include multi point optimization? Could you please give us an example of the particular application that you have in mind? . Thanks,; Francisco. > On Feb 9, 2016, at 11:24 AM, Heather Kline notifications@github.com wrote:; > ; > This pull request is intended to be the first of two (or more) pull requests implementing multi-objective functionality. I am separating it into multiple requests since some structural changes are made which could potentially effect things outside the regression tests, and I want to make it easier for code review.; > ; > In this pull request, the ability to run multiple objectives is added to the python tools and to the config options. Within the CFD and adjoint solvers, the only major change is in the data structure containing the objectives - it now can hold a list of objectives, but when the adjoint solver is run only one objective is included. Later pull requests are planned to include the ability to run a single adjoint solution for a sum of objectives defined on different markers.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/237 https://github.com/su2code/SU2/pull/237; > Commit Summary; > ; > config options updated to be compatible with multiple objectives - mdo not yet implemented; > python tools; > python adjusted for multiple objectives: will always run 1st objective only with continuous adjoint, but will run separate continuous adjoint evaluations within optimization; > continuous adjoint evaluates the requested objectives; > fixing some errors; > File Changes; > ; > M Common/include/config_structure.hpp https://github.com/su2code/SU2/pull/237/files#diff-0 (20); > M Common/include/config_structure.inl https://github.com/su2code/SU2/pull/237/files#diff-1 (6); > M Common/src/config_structure.cpp https://github.com/su2code/SU2/pull/237/files#diff-2 (90); > M SU2_PY/SU2/eval/d",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/237#issuecomment-182175757:747,config,config,747,https://su2code.github.io,https://github.com/su2code/SU2/pull/237#issuecomment-182175757,1,['config'],['config']
Modifiability,"Hi Heather,. the problem is this code section (eval/gradient.py):. `def gradient( func_name, method, config, state=None ): ; `; ...; ```; if (type(func_name)==list):; if (config.OPT_COMBINE_OBJECTIVE==""YES""):; config.OBJECTIVE_FUNCTION = ', '.join(func_name); func_name_string = 'COMBO'; else:; func_name = func_name[0]; config.OBJECTIVE_FUNCTION = func_name; else:; config.OPT_COMBINE_OBJECTIVE=""NO""; config.OBJECTIVE_FUNCTION = func_name; config.OBJECTIVE_WEIGHT = ""1.0""; ```. Here the `config.OBJECTIVE_FUNCTION` is set also for the geometric functions. This is probably why it only occurs in v4.3 ... Previously, in older versions, this value was not set or there was some other non-geometric function set when calling SU2_GEO. I think my solution is more like a workaround and we should find a more consistent way (like removing the geometrical things from the objective function list in option structure altogether).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/352#issuecomment-271182857:101,config,config,101,https://su2code.github.io,https://github.com/su2code/SU2/pull/352#issuecomment-271182857,8,['config'],['config']
Modifiability,"Hi Himakar,. If you are using python, you don't need to manually delete the connectivity table from the ASCII Tecplot as you can use numpy genfromtxt.(https://docs.scipy.org/doc/numpy/reference/generated/numpy.genfromtxt.html). Another option is to use the following restart_flow binary reader/writer that I wrote in Python. # ----------; def read_restart_bin(filename):. 	# Not efficient way; 	infile = open(filename, 'rb'); 	data = infile.read(); 	infile.close(). 	print ""Size of the file: "", len(data). # The first is a magic number that we can use to check for binary files (it is the hex; # representation for ""SU2"").; 	if (struct.unpack('i',data[:4])[0] != 535532):; 		print ""Magic number 535532 not found in the solution file %s"" %filename; 		sys.exit(); 		#try:; 		#	data_file = read_restart_ascii(filename); 		#	return data_file; 		#except:; 			# Exit; 		#	sys.exit(). 	# The second two values are number of variables and number of points (DoFs). ; 	nvar = struct.unpack('i',data[4:8])[0]; 	ndof = struct.unpack('i',data[8:12])[0]. 	# Read the variable names of the file. Note that we are adopting a; # fixed length of 33 for the string length to match with CGNS.; 	variables_names = []; 	for i in range(nvar):; 		aux = (struct.unpack('33s',data[20+(i)*33:20+(i+1)*33])[0]); 		for j in range(len(aux)):; 			if aux[j] == ""\x00"":; 				break; 		variables_names.append(aux[:j]). 	# Read data in one shoot; 	start = 20 + nvar*33; 	end = start+nvar*ndof*8; 	array = np.asfarray(struct.unpack('%dd'%(nvar*ndof),data[start:end])); 	array = array.reshape(ndof,nvar). 	# The last two values are for metadata: one int for ExtIter and 8 su2doubles.; 	# Metadata: 1 int for ExtIter and 8 doubles; 	#ncount = len(data) - nvar*ndof*8 - 4 - 64; 	ExtIter = struct.unpack('i',data[end:end+4])[0]; 	metadata = struct.unpack('8d',data[end+4:end+4+8*8]). 	# Create dictionary; 	data_file = {'names':variables_names,'data':array, 'ExtIter':ExtIter, 'MetaData':metadata}; 	return data_file. def read_restart_ascii(f",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528461173:917,variab,variables,917,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528461173,1,['variab'],['variables']
Modifiability,"Hi JSmith86,. I really appreciate your effort in cleaning up the changes. But it looks like as if there are still a lot of changes in other parts that are not related to the things you describe. Furthermore I really request you to split this up in multiple commits so that it is immediately clear what you did in each single one (this can be done quite simple with a proper diff tool like [meld](http://meldmerge.org/)). Let me emphasize that this is not to bother you in any way but rather to ease understanding and maintainability. I know from my own experience that this requires some additional work, but in the end it certainly pays off. . Thanks!; Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/412#issuecomment-315320576:517,maintainab,maintainability,517,https://su2code.github.io,https://github.com/su2code/SU2/pull/412#issuecomment-315320576,2,['maintainab'],['maintainability']
Modifiability,"Hi Jayant; Thanks for being so prompt and fast in handling this very important issue.; I’m currently in vacation at Scotland so I’ll be brief and just add few; comments:; a. As you wrote, validation is very different from test cases. Mesh,; configuration and solutions should be optimized for accuracy, experiment; reproduction and performance.; b. I think it is important to start the validation project, create a link; from the main SU2 web page to it, and than let it grow with the existing; mechanism of community contributions with approvals. Your list is very fine; for beginning. However I think we should strive to enrich it with 3D and; time dependent cases. I hope to be able to be in the loop and contribute to this important venue; Best; Eran; On Wed, Sep 19, 2018 at 8:26 PM Jayant Mukhopadhaya <; notifications@github.com> wrote:. > Hey everyone,; >; > Following the discussions at the SU2 Developers meeting this week, I; > wanted to start a conversation about compiling a comprehensive set of V&V; > cases for SU2 that can showcase it's performance in comparison to other; > solvers.; >; > I think the the NASA TMR website; > <https://turbmodels.larc.nasa.gov/index.html> is a good model to base it; > on. The idea would be to present the V&V case, provide working; > configuration and mesh files, and provide results comparing performance to; > other solvers and to higher fidelity data (when available). This allows; > people to see the performance of SU2 and replicate it, if need be.; >; > The first step would be compiling a list of cases that should be covered.; > The SU2 2014 SciTech paper; > <https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf> would be a; > good starting point as it already had a couple of validation cases. This; > list can be bolstered with some of the NASA TMR cases, and with grid; > convergence studies. I would like to propose an initial list that the; > community can talk through and make changes as we see fit. I am mostly only; > familia",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423070900:241,config,configuration,241,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423070900,1,['config'],['configuration']
Modifiability,"Hi Jyothi,. I tried your config file and I cannot reproduce this issue here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-318060333:25,config,config,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-318060333,1,['config'],['config']
Modifiability,"Hi Lorena,. Sorry for the delay getting back to you. You are right, and the TestCases repository is starting to be huge, mainly because of the stuff that GitHub generates to track the files. Easy to maintain/access alternatives are very welcome. Some releases ago, the grids were in another place (or lab server) and in Github we only had the config files, unfortunately we checked that for some users it was frustrating to download the config files and then go to another place to download the grids. From our practical point of view, the current setting is ideal to run the regression tests. But we are open to any change that benefits the SU2 users/developers community. . Now, it is very easy to download and modify the TestCases (keep in mind that the options in the config files change frequently) but, the price to pay is a large GitHub repository that it is difficult to download if you don’t have a good internet connection. Anyway, I think you are coming to Stanford in one week, it would be great to chat with you. We would love to have you and your group as a SU2 developer/user. Looking forward to meeting you and thanks for testing SU2. Best; Francisco. ## . Dr. Francisco Palacios; Engineering Research Associate at Stanford University; AIAA Senior Member, SIAM Member, and SU2 lead developer; Editorial Board Member for Scientific Report (Nature Publishing Group); Intel Parallel Computing Center. Personal webpage: http://adl.stanford.edu/people/fpalacios.html; SU2 webpage: http://su2.stanford.edu/. Department of Aeronautics and Astronautics; Durand Building. Room 357; Stanford University; Stanford CA 94305; United States. On Feb 3, 2015, at 1:32 PM, Lorena A. Barba notifications@github.com wrote:. > And why is your Test repo so large?; > Perhaps some data files would be happier living elsewhere?; > ; > I'm thinking that if your Tests load large mesh files, for example, these mesh files could be placed in a data repository (like Figshare, Data Dryad, Zenodo), and your confi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72909446:343,config,config,343,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72909446,3,['config'],['config']
Modifiability,"Hi Ole,. Thanks for pushing the fix. It seems that the CHT still may not be working as intended. I changed to the fix_compressible_CHT branch and recompiled SU2 and then ran the same config files as before. These are the resulting volume vtk outputs attached:; [vtk_out.zip](https://github.com/su2code/SU2/files/3956891/vtk_out.zip); It seems to me that the heat fluxes are getting sent from the fluid zone to the solid zone correctly, reducing the temperature of the solid, but the updated plate surface temperature may not be getting set back into the fluid zone. Please let me know if you think the results indicate something else. Jordan",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/838#issuecomment-565089754:183,config,config,183,https://su2code.github.io,https://github.com/su2code/SU2/issues/838#issuecomment-565089754,1,['config'],['config']
Modifiability,"Hi Pedro, ; The following two configs are for a sinus motion using an elastic mesh in combination with farfield or rotating frame. ; Previous results: Looking at the CL, there used to be a difference of about 10%.; Current Results: Good agreement with only a small difference. Side note: Although the Naca0009 is a symmetric airfoil, my mesh appears to be not perfectly symmetric, resulting in non-zero lift at alpha=0.0 deg. I didn't look into this any further as the mesh is only a quick test case and symmetry probably not important for our problem. . [NACA0009_elastic.zip](https://github.com/su2code/SU2/files/11123420/NACA0009_elastic.zip); [NACA0009.zip](https://github.com/su2code/SU2/files/11123471/NACA0009.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1492161895:30,config,configs,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1492161895,1,['config'],['configs']
Modifiability,"Hi Pedro, hi everyone,. Sorry for the closing/reopening. I am still new to Github and did a wrong manipulation. It is my fist issue ever... Here are some images of the solution every 100 iteration. The python code used to copy the flow file was not working properly and missed some of the iterations. Do not worry if some iterations are missing.; [images_100.zip](https://github.com/su2code/SU2/files/8938931/images_100.zip). Here is the config file:; [3200_config_Euler.txt](https://github.com/su2code/SU2/files/8938934/3200_config_Euler.txt). Here is the solution output. Mach number, surface, and chord were changed in or; [history.csv](https://github.com/su2code/SU2/files/8938936/history.csv). Here is the convergence plot; ![convergenceForGithub](https://user-images.githubusercontent.com/34791475/174560418-719a14b8-d426-48a3-aeba-3be6d4856327.png). Do not hesitate to ask for more information. When I have some time I will change the blade to post the mesh in order to replicate the issue. Modified blade mesh should come by the end of the week.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669#issuecomment-1160146503:438,config,config,438,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669#issuecomment-1160146503,1,['config'],['config']
Modifiability,"Hi Pedro, thanks for the probe extraction feature. I'll be looking into it when I get the chance. . I have also worked on this feature since the beginning of this year (for SU2 v7.5.0); on my version, you can set the probes in the .cfg files by directly describing the locations or by a .csv file (if you have many probes, for example). It will also create an output history file for each probe with your specified volume output variables and a probe_information.dat containing the location of the nearest node for that probe (since no interpolation is done). I initially did some workarounds to avoid OOM problems in finding the probe location since I used this in a 400M nodes mesh. I still need to clean up a little bit the additional implementation while keeping/improving the efficiency to avoid a big overhead time in the simulation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1909#issuecomment-1497344705:429,variab,variables,429,https://su2code.github.io,https://github.com/su2code/SU2/pull/1909#issuecomment-1497344705,1,['variab'],['variables']
Modifiability,"Hi Pedro,. I tried the other solution you suggested. I declared a new private variable inside the solver class, which I assigned as config->cb1_usrdef. I registered this as the AD input. I then set a method inside the solver class which returns this value when called.; In the Numerics class, instead of reading cb1 from Config as I used to, I read it from the Solver class, using the method mentioned above.; Now I couldn't create a Solver object inside numerics_structure.inl, since according to the compilation order the solver class is dependant on the numerics class (Solver_structure.hpp includes numerics_structure.hpp). So the compiler doesn't know about the solver class while inside the numerics.; To work around the compiler error, instead I included the solver header file inside the numerics src files (cpp). I then created the solver objects in the relevant numerics functions and called the method which returns the AD-registered cb1 variable.; This all compiles now, but the AD gradient is still returned as 0. Adding print statements to the functions inside the numerics src files revealed that they are getting a cb1 value of 0, which I assume it's because solver_adjoint_discrete.cpp is called after the numerics src files have read the value of cb1, which at that point would be 0.; Would you agree that it's probably best to update the numerics classes inside the adjoint iteration class for CDiscAdjSolver, similar to what's done inside CDiscAdjFEAIteration? Is this what you meant when you referred to the elasticity solver?. Thanks for your help,; Amir",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-494063905:78,variab,variable,78,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-494063905,4,"['Config', 'config', 'variab']","['Config', 'config', 'variable']"
Modifiability,"Hi Pedro,. Thank you for your reply. Apologies for my own late answer as well. I am trying to install now the SU2 6.2.0 Falcon. It is the one I particularly need for a program that calls this program for Aeroelastic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202:387,config,configure,387,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202,1,['config'],['configure']
Modifiability,"Hi Pedro,. Thanks for your reply. I tried without the pre-accumulation (PREACC= NO in config file) and still the returned derivative is 0.; In the existing code, when design variables such as Temp and Pressure are registered as AD inputs, their values are re-set using appropriate Set__() functions from the config and solver classes. I have also done the same thing with the SA coefficients, by passing the values onto functions defined inside the config class which set them to the same values that are read before they are registered as AD inputs. . Still unfortunately the output gradient is zero. Anything else that might be worth trying?. Thanks again,; Amir",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-491887764:86,config,config,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-491887764,4,"['config', 'variab']","['config', 'variables']"
Modifiability,"Hi Pedro,. Thanks, that makes a lot of sense actually. Out of curiosity I tried the hack you suggested. I set cb1_usrdef to a public variable in CConfig, and registered config->cb1_usrdef as the AD input (config is assigned as a pointer to CConfig already). In the numerics classes I also assigned cb1=config->cb1_usrdef, to ensure it's the same variable as the one registered as input in AD. This still yielded a gradient of zero.; I'm going to try your other solution. I agree it's a much better way of going about it. I'll let you know how it goes.; Thanks again,; Amir",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-493114732:133,variab,variable,133,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-493114732,5,"['config', 'variab']","['config', 'variable']"
Modifiability,"Hi Pedro,; Thanks. I already have done that, it's already declared as virtual inside the CSolver class.; The message does get printed. What's strange is that it prints cb1_adj=0., even though inside solver_adjoint_discrete.cpp, cb1_adj is assigned as cb1_adj = config->GetSA_cb1(); before being registered as an AD variable, and therefore is not 0.; Thanks; Amir",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-498383515:261,config,config,261,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-498383515,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"Hi Pedro,; thanks for cleaning up Joel's code and creating the pull request. The disc_adj_fsi testcase is failing, I believe because of the relaxation. Probably you need to update the value of the test_case config and set the relaxation to 1.0 to recover the previous test. ; About the symmetric matrix class: Joel's implementation was indeed intended to populate the matrix needed for the RBF; the CSysMatrix would not be able to accommodate some terms due to the sparsity. It's well explained in the comments. Also, his implementation was only single-core. I agree that it would be very interesting to have some methods such as the cholesky decomposition available, but I think they would require some reworking (at least for parallelization).; I think this is a very valuable contribution, so it would be good to get more people on board to push it forward.; Cheers,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-406847760:207,config,config,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-406847760,1,['config'],['config']
Modifiability,"Hi Rocco,; I used this mesh `<Testcases>/control_surface/mesh_ONERAM6_inv.su2` and the boundary marker names are a bit different in the mesh, compared to your provided config (WING vs LOWER_SIDE, UPPER_SIDE, TIP + SYMMETRY vs SYMMETRY_FACE). Can you shed some light on this?. Will the airfoil emit some vortex-shedding (or other unsteadiness) or will this converge in time to a steady-state solution? I am asking because I would like to see some longer running results until e.g. steady state, cylic shedding or maybe we'll see some chaotic behaviour in lift and drag. The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh . In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔 . Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0..; And `both versions are/were on the develop branches` -> what exactly do you refer to here: config-files, code, mesh. Cheers 🐌 ; Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-559756575:168,config,config,168,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559756575,3,"['config', 'extend']","['config', 'config-files', 'extend']"
Modifiability,"Hi Soumen,. As Tom said, the routines are all in place and I have been putting them; together for solution interpolation from one mesh to another for unsteady; simulation as post-processing step. So probing at a particular location for; unsteady solution can be also done with this framework. The probe search; implementation is in place for 2D configuration currently. It will be; extended to 3D and probably available in the main branch in the next 2; months.; The implementation so far is in feature_MeshInterpolation branch if you; want to take a look. Sravya. On Thu, Nov 2, 2017 at 10:09 PM, Thomas D. Economon <; notifications@github.com> wrote:. > Hi Soumen: yes, this is something that the developers are actively working; > on at the moment (in particular, @sravya91 <https://github.com/sravya91>; > has been taking the lead on this). It is true that most of the ingredients; > are already available in SU2 (fast searches, interpolation routines, etc.),; > but the trick is combining them all and making it general.; >; > Do you have any other requirements beyond simple probes? I am guessing we; > should have something available in the next few months, but it's not set; > yet.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/466#issuecomment-341623660>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AHenII5B0Xtb2U_hj2vbBesf5Oc51uvzks5syqAEgaJpZM4QPYh8>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466#issuecomment-342266341:345,config,configuration,345,https://su2code.github.io,https://github.com/su2code/SU2/issues/466#issuecomment-342266341,4,"['config', 'extend']","['configuration', 'extended']"
Modifiability,"Hi Steve,. I think that all your contributions are very interesting, so please feel free to create a pull request. Only one comment, please be sure that you pull to the develop branch (not the master). We only use the master branch for releasing the code. Thanks again!. Best; Francisco. On Jan 11, 2015, at 7:34 AM, Steven Endres notifications@github.com wrote:. > By the way, I have another set up updates for you guys to consider that are ; > beyond the scope of this pull request. Let me know if you are waiting on me ; > to close the pull request or if you can do that. ; > ; > I put the recommended changes for the structure of config.py file in a gist ; > https://gist.github.com/spendres/7bbe6eb60fac1f2f148a that separates the ; > low level config errors validation. I also created a few unit test cases to ; > allow a controlled build up of regex checks without risk of breaking ; > previous bug fixes. ; > ; > Let me know ; > ; > Steve ; > ; > On Sat, Jan 10, 2015 at 11:34 PM, Steven Endres spendres@gmail.com wrote: ; > ; > > thanks for the commands ; > > ; > > On Sat, Jan 10, 2015 at 11:54 AM, Trent Lukaczyk <notifications@github.com ; > > ; > > > wrote: ; > > > ; > > > so now the file is being committed as deleted... please roll back to this ; > > > commit ; > > > spendres@6cbddbe ; > > > https://github.com/spendres/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520 ; > > > ; > > > here are the commands you can use -- ; > > > Reset the index to the desired tree ; > > > ; > > > git reset 6cbddbe ; > > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520 ; > > > Move the branch pointer back to the previous HEAD ; > > > ; > > > git reset --soft HEAD@{1} ; > > > ; > > > git commit -m ""Revert to 6cbddbe ; > > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520 ; > > > "" ; > > > Update working copy to reflect the new commit ; > > > ; > > > git reset --hard ; > > > ; > > > — ; > > > Reply to this email directly or vie",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144#issuecomment-69612161:634,config,config,634,https://su2code.github.io,https://github.com/su2code/SU2/pull/144#issuecomment-69612161,2,['config'],['config']
Modifiability,"Hi Suman,; Regarding your config file: first you have to specify the turbulence model you would like to use (your config reads NONE right now), secondly you have to add the parameters for the computation of turbulent fluxes.; In this latter case I suggest you to have a look at one of the test cases in the ""rans"" folder.; This made your case working on my laptop, if you encounter any other issue don't hesitate to ask me. Cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/401#issuecomment-308375305:26,config,config,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/401#issuecomment-308375305,2,['config'],['config']
Modifiability,"Hi Tim,. Thanks!. I totally agree on the fact that Python-related functionalities could be in a separate file for code clarity. Anyway, considering only the C++ structure, those functionalities are still members of the CDriver (and all child classes). So if you are OK with the fact that having members of the same C++ class in different cpp files, I am OK too. . However, if you mean creating a new class for the Python wrapper (like CPyWrapper or whatever), and leave the CDriver ""clean"", this might be more tricky. Indeed, since the wrapper has to be a top-level class, it is better to have access to all the other main classes (config, geometry, solver, ...) and the CDriver was the perfect candidate (it instanciates all of them). So now if we create a new top-level class next to the CDriver, the direct link with all those classes is lost. Basically we will have to create accessors like CDriver::GetConfig(), CDriver::GetGeometry(), ... that will return the different containers to be used by the wrapper. Obviously this is possible but not in a short time, besides this might be a significant change in the top-level code structure. We could also think about exposing thoses CConfig, CGeometry, ... classes to Python in addition to just the driver, I already made some local tests and it worked great but this approach is less user-friendly. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-352045091:632,config,config,632,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-352045091,2,['config'],['config']
Modifiability,"Hi Tom,. The code is running with nice results. However, at low Mach numbers, the code is presenting poor convergence due to the wide disparity between the particle and acoustic wave speeds in the dual time stepping. During the last weeks, I studied some preconditioning formulations that can be added to SU2. Currently, we are only scaling the dissipation part improving accuracy not convergence at Low Mach number flows. . I found this interesting paper that presents the preconditioning formulation in conservative variables (minor changes in the code) for implicit solvers based on the classical Weiss and Smith formulation. A robust low speed preconditioning formulation for viscous flow … <https://www.google.com.br/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0ahUKEwjS8_vzre3QAhXIjJAKHatADsQQFggfMAA&url=http%3A%2F%2Fwww.sciencedirect.com%2Fscience%2Farticle%2Fpii%2FS0045793011000223&usg=AFQjCNG9Pc2UPSeqsdqHfVa0symixryb9w&sig2=2eqLmLoBa4t3XCMT_DWSrQ&bvm=bv.141320020,d.Y2I>; Preconditioning applied to variable and constant density flows - AIAA <https://www.google.com.br/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&sqi=2&ved=0ahUKEwjF65S3s-3QAhXFkZAKHfwbDlEQFggfMAA&url=http%3A%2F%2Farc.aiaa.org%2Fdoi%2Fpdf%2F10.2514%2F3.12946&usg=AFQjCNGpofvU3ntuYJaA6o_nAz8MOKubCg&sig2=YIumr88W2hKQK0AMzI3fAw&bvm=bv.141320020,d.Y2I>. I really would like some help to implement the above preconditioning implicit dual time-step formulation (Eq. 18 of the Weiss and Smith paper or section 4.3.3 of Colin et al.). Supposing I already have the preconditioning matrix, I just have to modify CEulerSolver::SetResidual_DualTime?. Thanks in advance. Eduardo . > On 5 Dec 2016, at 17:29, Thomas D. Economon <notifications@github.com> wrote:; > ; > Great! Thanks, Eduardo. Let's work now together in this branch to make sure that everything is integrated nicely. Just let me know what help you may need.; > ; > —; > You are receiving this because you modified the open/close state.; > Re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/333#issuecomment-266321042:518,variab,variables,518,https://su2code.github.io,https://github.com/su2code/SU2/pull/333#issuecomment-266321042,1,['variab'],['variables']
Modifiability,"Hi Tom,. Yes, we can temporarily strip off some of the excess variables, and we may just do that in the short-term to continue the simulation. In fact, I'm not sure the averaged variables are used (is the time-averaging continued from restart, or is it started from scratch at restart?). If the time-averaged variables from the restart aren't used, then another fix would be to change what is output in the restart file vs. what is output in the visualization files (vtu, szplt, etc). Regardless, in an earlier simulation, we were attempting to run a 450 million cell mesh, which would have probably caused the same overrun with just the conservatives, so I agree that we'll have to start planning on how to deal with this issue down the road when larger meshes become more commonplace. Not sure the best forum to discuss this kind of thing. Github? Slack? Email?. Hope you are well,. Paul. ________________________________; From: Thomas D. Economon <notifications@github.com>; Sent: Thursday, April 30, 2020 11:41 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Paul Stephen Urbanczyk <gomer@stanford.edu>; Author <author@noreply.github.com>; Subject: Re: [su2code/SU2] Failure to Restart on Large Meshes with Time-Averaged Data (#949). How about a quick fix like removing some fields from the output if possible (39 is a lot)? Are there some auxiliary variables apart from the conservatives and time averages that you don't need?. We'll have to look into the MPI issue with INT_MAX.. we will probably hit other snags like this throughout the code as we keep increasing mesh size. I bet there are some int vs. long issues hidden. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/949#issuecomment-622031229>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABU42SSQMUXG36DWEIWFNZ3RPHA6ZANCNFSM4MQLQFFQ>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-622035489:62,variab,variables,62,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622035489,4,['variab'],['variables']
Modifiability,"Hi Tom,; I've consulted with our main TecIO developer, Dave Taflin, and the two of us are having a hard time finding the problem. There are a bunch of compile warnings in TecIO, but none of them look like they would cause the linker error. The actual error seems to be in the link of SU2, not the TecIO library. Could it be something I changed in the config stuff (configure.ac, m4/tecio.m4, or Makefile.am)?; Is it possible to get a more verbose error report for the linker?; Thanks!Scott Imlay; On Sunday, August 19, 2018, 2:44:12 PM PDT, Thomas D. Economon <notifications@github.com> wrote: ; ; ; It looks like our regression tests are failing during the compilation of TecIO on the Travis system (they use pretty standard Ubuntu builds). @ScottImlay: could you please take a look at the build errors when you have some time?. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-414463979:351,config,config,351,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-414463979,2,['config'],"['config', 'configure']"
Modifiability,"Hi Wally, ; I have run some axisymmetric cases earlier for pressure distribution (Cp) computation over typical payload fairing configuration (with older versions of SU2). Pressure distribution seemed to be fine with earlier runs (and also it matched well with other codes). ; Issue popped up while trying to compute heat flux for axisymmetric problems. I have seen folks and students running their cases with axisymmetric formulation. Now the issue has surfaced clearly, it need to be fixed asap.; How is solution of the case, you have been trying? . Best; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1063#issuecomment-699627809:127,config,configuration,127,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-699627809,2,['config'],['configuration']
Modifiability,"Hi again,. I am using the the Inviscid Bump in a Channel tutorial as a test case by changing the outlet boundary condition to Marker_Engine_Inflow. However, the boundary condition is still seems unstable even with very low damping values. It seems that the evaluation frequency of the marker's properties is tied to the screen write frequency through the following line:. bool Evaluate_BC = ((((config->GetInnerIter() % (config->GetScreen_Wrt_Freq(2)*40)) == 0)) || (config->GetInnerIter() == 1) || (config->GetDiscrete_Adjoint()));. which makes the minimum evaluation frequency 40. I believe 40 iteration seems to be too high, at least for this case. I have since added a new option to the code to control the evaluation frequency. I been experimenting with the evaluation frequency and the damping factor to get the marker to converge on the Mach Number on some of the cases. I will test this on larger case next week and i can get back to you on how those go as well. Finally, I am a bit of a novice and it is my first time ever using something like git. I have already created a fork of the master branch. Do i just make pull request to submit my changes or is there something else I should do?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2274#issuecomment-2102637760:395,config,config,395,https://su2code.github.io,https://github.com/su2code/SU2/issues/2274#issuecomment-2102637760,4,['config'],['config']
Modifiability,"Hi all! I am facing this issue when trying to do the ninja build.; I am trying to install SU2 on the remote server where I don't have root access. **Firstly, I cloned the latest repo (per Nov 3, 2021), and then run the following meson command.**; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/FDa/FDa045/programs/SU2/SU2-7.2.1 -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/home/FDa/FDa045/programs/intel/2020_update4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:995,config,config,995,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,2,['config'],['config']
Modifiability,"Hi all, . After the initial excitement of clearing all tabs and trailing whitespaces... I guess it is more reasonable to follow @pcarruscag proposal:; > What about running the solution you propose only on subfolders? i.e. on src/something/ . I now trimmed all `C*.cpp`, `C*.hpp` and `C*.inl` files in `SU2_CFD` which is equivalent to all restructured files in the Sub-folders. I added a basic script `replace-tabs-...sh ` in `externals/utils` which provides this functionality. I would enhance that script if this is the way to go.; The commit size now shrunk down to ~4k changed lines. Possible merge problems will be much smaller. . I found to have to no problem when merging the develop first -> clearing all tabs/whitespaces in the feature_branch with the provided script -> merge this develop_noWhitespaces using the `--strategy-option=ours` option. Merge conflicts will be purely due to tabs/whitespaces therefore one always wants the own code in case of conflict, as all conflicts with the develop related to other stuff were already resolved in the first merge. . Now that the commit is a lot smaller, there should be even less problems. Maybe some folks will have no problems at all. . After some back and forth in the commits I briefly chatted with @talbring to do a git rebase / squash to not have these huge commits in the history. Otherwise one could open a new & clean PR if we can agree on an approach here to keep the discussion in one place.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808#issuecomment-553412130:486,enhance,enhance,486,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-553412130,2,['enhance'],['enhance']
Modifiability,"Hi all, . I recently discovered the Gust simulation capabilities of SU2 for two-dimensional Euler flows. . I am trying to implement the additional terms necessary for extending the method to 3D Navier-Stokes flows. I am running into trouble when trying to implement the changes necessary to achieve this. For now, I have began working on the two functions responsible for the gust simulations:. 1. SU2/SU2_CFD/src/iteration_structure.cpp::CFluidIteration::SetWind_GustField; 2. SU2/SU2_CFD/src/numerics/flow/flow_sources.cpp::CSourceWindGust::ComputeResidual. From what I understand the extension to 3D should simply consist in modifying the function `SetWind_GustField` to impose a 3D grid-velocity instead of a 2D grid velocity, and adding the appropriate source terms in the function `CSourceWindGust` (these can even be set to zero, just to debug the code). . However, when I try to implement these changes, I get a segmentation fault that I cannot identify. . Does someone have an idea on how to implement this feature successfully ? . PS: I have attached the modifications I made to the two functions mentioned above here:; [SetWind_GustField.txt](https://github.com/su2code/SU2/files/6740388/SetWind_GustField.txt); [ComputeResidual.txt](https://github.com/su2code/SU2/files/6740389/ComputeResidual.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1319:167,extend,extending,167,https://su2code.github.io,https://github.com/su2code/SU2/issues/1319,1,['extend'],['extending']
Modifiability,"Hi all, . I will be opening a number of issues that were raised during the Developers Meeting for discussion, to get things started. One interesting open question is **how many of the branches available in the repo are still active.**. My suggestion is that we all work together in having a list of branches with a short description in order to have an idea of where we stand. I would propose that all of you go through your feature branches and collect the following information about them:. - Branch name; - A two line description on the goal of the branch; - Status of the branch:; - Under active development (we are adding a new feature here); - Complete feature, (not necessarily up-to-date with develop); - In such case, latest compatible release; - Mature feature (not necessarily complete); - Test feature, still under consideration; - Test feature, discontinued; - Old feature / unknown status; - Can the branch be deleted?. This information would be very valuable, as maybe some people would be interested in continuing old developments, some repetitive work would also be avoided, and collaboration between complementary branches would be enhanced. I'm happy to help in collecting this information and later cleaning up the repository. Please let me know of your thoughts, but I think we should get this started asap.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/582:1150,enhance,enhanced,1150,https://su2code.github.io,https://github.com/su2code/SU2/issues/582,1,['enhance'],['enhanced']
Modifiability,"Hi all, . This is a first pass at cleaning up some of the spacing and comments in the headers files of SU2. I also spent some time to make the code more readable, so this is purely a stylistic change. I'm sure to have missed a bunch. I know this will create alot of merge conflicts, so i figured I would get your opinions on this. ; My thoughts on this were to get it done now and never have to worry about it again. I only touched the header files as future refactoring will be happening. . Edit: It seems my attempt to remove tabs has caused some problems.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/818:459,refactor,refactoring,459,https://su2code.github.io,https://github.com/su2code/SU2/pull/818,1,['refactor'],['refactoring']
Modifiability,"Hi all, . this is the continuation of #1242 . Change of the `enum`'s in `option_structure.hpp` into `enum class`. This has the benefit of no implicit conversion to int and therefore increased safety with the enum type -> [c++ core guidelines](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#enum3-prefer-class-enums-over-plain-enums). If you want to sponsor a commit (which I highly recommend ;) ) then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1258:1012,variab,variable,1012,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258,1,['variab'],['variable']
Modifiability,"Hi all,. As I am stepping through DA cases with my debugger I am cleaning some things left and right. No major changes. - making local vars const when possible; - moving the `config->GetBool` directly to the conditional instead of making it a var and using it 1 time; - removing dead code; - adding some comments; - some typos fixed. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1257:175,config,config,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/1257,1,['config'],['config']
Modifiability,"Hi all,. I am trying to run SU2 (v. 5.0) on big endian platform but am unable to do so. I have tried using both .su2 and .cgns meshes, but the simulation pauses at:. _Calling ParMETIS...; Finished partitioning using ParMETIS (39838 edge cuts).; Communicating partition data and creating halo layers._. Is there any way to make the grid compatible for such platforms?. Thanks in advance,. - Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/371:292,layers,layers,292,https://su2code.github.io,https://github.com/su2code/SU2/issues/371,1,['layers'],['layers']
Modifiability,"Hi all,. I am trying to use the AD module in the discrete adjoint solver to calculate the sensitivity of the lift coefficient with respect to the closure coefficients of the SA turbulence model. I've created new variable names in the CConfig class for the SA closure coefficients and have modified the code so that it reads the values for the coefficients from the config file, instead of the given hard coded values. (I would need to change the values later on). Now I'm trying to get the sensitivity of my objective function (in this case Cl as specified in the config file) with respect to these closure coefficients. . I've modified the CDiscAdjSolver class in solver_structure.hpp and solver_structure.inl by adding new variables for the sensitivities I want to calculate, defining inline Get functions which return the sensitivity values, and defining virtual functions onto the CSolver class. I've modified solver_adjoint_discrete.cpp by adding new variables which read in the values of the closure coefficients from the config class and passing these variables onto AD::RegisterInput() _(these are done in the RegisterVariables routine)_, and then passing them onto SU2_TYPE::GetDerivative() to calculate the derivatives _(this is done in the ExtractAdjoint_Variables routine)_. I store the derivative values as new variables called Total_Sens_SA, similar to what's already done for Total_Sens_AoA, for example. The problem I have is that when I pass the variables onto SU2_TYPE::GetDerivative(), the output is returned as 0. As far as I see, I've followed the same steps that are done to get the other sensitivity values such as Total_Sens_AoA or Total_Sens_Mach, but I don't understand why the derivative is being returned as 0. Is there something I'm missing here? I assumed as long as I register the variables whose derivatives I want onto AD::RegisterInput() the rest should be taken care of inside the AD and codi modules and the derivatives should be calculated correctly?. Curiously, i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679:212,variab,variable,212,https://su2code.github.io,https://github.com/su2code/SU2/issues/679,4,"['config', 'variab']","['config', 'variable', 'variables']"
Modifiability,"Hi all,. I experimented a little bit with a different build system to replace automake/autotools. Although it works most of the time fine, it is cumbersome to work with. Especially when modifying the .am files and the configure.ac due to the complicated syntax. Furthermore it is relatively slow. One alternative would be cmake, however, the syntax is also not very comfortable and it has too many features which we actually don't need. . So I came across meson and ninja. It is lightweight and very easy to use (setting it up for SU2 took half a day, without any prior knowledge). Compilation time is faster because it builds all object files in parallel. Another advantage is that it is platform independent. Creating packages and binaries and also crafting releases is much simpler with this system (which we can exploit to automate the release process). It is also possible to embed our regression test framework into that process. . In case you want to try it out, checkout the branch **meson_build**. Everything needed is added as submodule (meson and ninja), so make sure to do a `git submodule update` to clone them. To configure and build use the following commands:. `externals/meson/meson.py build`; `./ninja -C build`. Please test it and give feedback. I have not tried it on windows or mac, so if you are using any of these OS, give it a try!. Note: automake and meson can co-exist together without any interference. So the old way of building SU2 still works in that branch.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685:218,config,configure,218,https://su2code.github.io,https://github.com/su2code/SU2/issues/685,2,['config'],['configure']
Modifiability,"Hi all,. I guess the difficulty is about calling Config->GetGamma() function in everywhere in code (solver, numerics etc.). I have to change Gamma according to temperature in every routine and be sure ideal gas equation is consistent between Temperature and Pressure. I get stuck in this point. I am open to any help. Thanks in advance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/731#issuecomment-525189226:49,Config,Config,49,https://su2code.github.io,https://github.com/su2code/SU2/issues/731#issuecomment-525189226,1,['Config'],['Config']
Modifiability,"Hi all,. I have downloaded SU2 and am testing this using Xcode. Because I am a newbie in Xcode, I can't run SU2 successfully.; When I build and run, I got the following message.; =============================================; configfile: File does not exist: inv_wedge_HLLC.cfg; Run with --help for more information.; Program ended with exit code: 105; =============================================. In my guess, I didn't designate correct path to cfg and mesh file.; But I don't know how to designate it. Sorry for wrong question, but it will be helpful for me to have the answer for this question. Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/994:226,config,configfile,226,https://su2code.github.io,https://github.com/su2code/SU2/issues/994,1,['config'],['configfile']
Modifiability,"Hi all,. I have implemented the Delayed Detached Eddy Simulation (DDES) in SU2. Also, I added 2 of the newest sub-grid scales (SGS) in order to mitigate the so-called ""grey area"": Vorticity based SGS (Deck et al. 2012) and Shear-layer adapted SGS (Shur et at. 2015). This option is available as ""HYBRID RANS/LES= SA_DDES, SA_ZDES OR SA_EDDES"". In order to lower the dissipation of the Roe scheme in LES areas, 3 different numerical blending are available: FD (Using the DDES' F_dt function), NTS (Travin et al. 2002 numerical blending) and NTS_DUCROS (the NTS + Ducros' Shock Sensor). Option: ""ROE_LOW_DISSIPATION= FD"". Lastly, 3 SA's turbulence model variants were added: Edward and Chandra Modification (SA_E), Mixing layer Compressibility Correction (SA_COMP) and both together (SA_E_COMP). I would like to hear some comments about the implementation. Regards,. Eduardo. Please see the attached pdf showing some detailed implementation and preliminary results.; [Molina_DDESinSU2.pdf](https://github.com/su2code/SU2/files/602029/Molina_DDESinSU2.pdf)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/333:235,adapt,adapted,235,https://su2code.github.io,https://github.com/su2code/SU2/pull/333,1,['adapt'],['adapted']
Modifiability,"Hi all,. I'm new to CFD and SU2. I'm trying to modify the c++ code to add a time-dependent mach in the compressible Euler equations (SU2 Solver: EULER) for a rocket head cone design. At about line 786 of the CEulerSolver.cpp, I want to have a slight numerical change in its mach, for example, a sine function. After I saw the example of the Adding Custom Source Terms to Euler Equations I modified the code like this:. ```; const auto dt = config->GetDelta_UnstTimeND();; su2double time = config->GetTime_Step() * dt;; su2double Alpha = config->GetAoA()*PI_NUMBER/180.0;; su2double Beta = config->GetAoS()*PI_NUMBER/180.0;; const su2double MachValue = config->GetMach();; su2double Mach = 2 * MachValue + 0.01 * sin(2 * PI_NUMBER * time);; ```. But during postprocessing I noticed that Mach becomes 2 * MachValue + 0 as the ""time"" could not be updated to the series of 0, 1, 2, 3, 4... So I'm wondering how I can build a mach that could change over time. I'm not sure what kind of syntax I should be using or how exactly to implement this mach term. . I am using SU2 7.3.1. Thank you so much!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1835:440,config,config,440,https://su2code.github.io,https://github.com/su2code/SU2/issues/1835,5,['config'],['config']
Modifiability,"Hi all,. It seems that in the CScalarSolver.inl, in the upwind residual line 209, we are reconstructing the flow variable again when the SCALAR_UPWIND scheme is used. . ![image](https://github.com/su2code/SU2/assets/98025159/fb52c574-0dc2-49e1-9d29-e18b31a91bf7). if we use MUSCL_FLOW=YES and the CONV_NUM_METHOD_SPECIES= SCALAR_UPWIND (also for turbulence models), the flow variables are reconstructed twice. . Please let me know if I am not understanding correctly this piece of code. Thank you so much in advance. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ ] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [ ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2297:113,variab,variable,113,https://su2code.github.io,https://github.com/su2code/SU2/issues/2297,2,['variab'],"['variable', 'variables']"
Modifiability,"Hi all,. Shouldn't the lines 82-99 in SU2_CFD/obj/Makefile.am say. ../include/variables/*.hpp. instead of . ../src/variable/*.hpp. Regards,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/737:78,variab,variables,78,https://su2code.github.io,https://github.com/su2code/SU2/issues/737,2,['variab'],"['variable', 'variables']"
Modifiability,"Hi all,. When I try using the mesh_adaptation.py feature with the SUPERSONIC_SHOCK option on the inviscid wedge tutorial to capture the shock, the mesh is changed incorrectly. The original and ""adapted"" meshes are:; ![adapted_quad_grid](https://user-images.githubusercontent.com/18233420/47829974-e80f2500-dd57-11e8-8318-e84ea38336ad.png); ![original_quad_grid](https://user-images.githubusercontent.com/18233420/47829975-e80f2500-dd57-11e8-941c-d552839b12f1.png). The same random element divisions also occur if I use a mesh composed of triangles:; ![original_triangle_grid](https://user-images.githubusercontent.com/18233420/47829998-01b06c80-dd58-11e8-8553-5de26b8313ca.png); ![adapted_triangle_grid](https://user-images.githubusercontent.com/18233420/47829997-01b06c80-dd58-11e8-9f1a-1f33a820292e.png). I am not sure if this is related, but when I run the KIND_ADAPT= GRAD_FLOW option to adapt based on the density gradient (as opposed to using SUPERSONIC_SHOCK), I receive the following output from SU2 from both cases along with no adaptation (even though the grid is composed of quads or triangles):; --------------------- Start numerical grid adaptation -------------------; WARNING: Tried to find 4455 cells suitable for adaptation, but only found 0; The following cell types are currently adaptable: ; + triangles; + quadrilaterals; + tetrahedrons; Your grid may have too high a percentage of other types.; Number of elements to adapt: 0. I attached the configuration file (just the inviscid tutorial config file with the added mesh adaptation parameters at the bottom) and the mesh used (just the inviscid wedge tutorial mesh). [Config_file_and_mesh.zip](https://github.com/su2code/SU2/files/2537063/Config_file_and_mesh.zip). Thanks for any help,; Alex",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606:194,adapt,adapted,194,https://su2code.github.io,https://github.com/su2code/SU2/issues/606,10,"['adapt', 'config']","['adapt', 'adaptable', 'adaptation', 'adapted', 'config', 'configuration']"
Modifiability,"Hi all,. When running `TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/configMaster.cfg` with 4 cores, SU2 freezes after printing `Simulation Run using the Multizone Driver` to screen. No more screen or file output (e.g. history), but `top` shows that the processes are not idling and the respective cores are at ~100% workload. . Call `mpirun -n 4 SU2_CFD configMaster.cfg` and tell me if it is the same for you. I tested on on our cluster and my private machine with the same result and it also happens every time. They seem to run forever ... I let both setups run for an hour (on 3 cores it takes a couple of min to complete) without any change in what i see = no output + cores at 100%. With any other number !=4 for cores the code runs. When was it introduced? Not very very recent ... already there when #773 was merged . **Now to the debugging efforts:**; Happens in debug and release mode. I changed quite a few options to see if sth interesting happens (no turb model, velocity inlet and pressure outlet, changed linear solvers and permutated values all over the place) but no change there. . As it is just 4 cores I went attached to all processes with ; ```; mpirun -n 4 xterm -e gdb --args SU2_CFD configMaster.cfg; ```; And the backtraces show that 2 processes are waiting at:; <details>; <summary>this place</summary>. ```; #0 0x00002aaac3d5ec40 in hmca_bcol_basesmuma_bcast_k_nomial_knownroot_progress; () from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf5ee590 in hmca_coll_ml_allgather (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf32f7e0 in mca_coll_hcoll_allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:88,config,configMaster,88,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,2,['config'],['configMaster']
Modifiability,"Hi all,. as with the restructuring of the output classes, we should find a common level of abstraction for all the different physical problems we might want to have. Right now there isn't even a unified way of specifying the kind of problem for each zone (what is fluid, what is solid etc) and the kind of coupling. This might also affect the actual implementation/restructuring since we somehow have to decide what driver we have to instantiate and so on. Hopefully we can gather all the people involved to have a discussion on that. Since we have a lot of people working in their branches on multizone problems we should tackle that better sooner than later. As Edwin already suggested, maybe it is a good idea to put some people in charge of organizing some of the bigger structural changes. Furthermore in case some people don't know, we have a slack channel for the dev team. I think that makes it easier to communicate, arrange meetings, discuss problems and ask questions. In case you need an invite, let me know, everybody who wants to contribute is welcome. Thanks for the discussion, I still think that communication is the key of success !. Tim. On Sep 13, 2017 10:30 AM, Edwin van der Weide <notifications@github.com> wrote:. Hi Tom,. Sounds like a plan then to have a look at CIntegration to see what we can do to generalize the time integration. I definitely want to help with this, but I don't think I am the appropriate person to take the lead, because I simply don't have a good overview of all the multi-physics options. Tom, are you willing to take the lead for this?. Furthermore, it is good to have other people involved as well, preferably with detailed knowledge of the different disciplines. Any volunteers?. Thanks,. Edwin. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-329096830>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AEtI5MkXdqhqP",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329146567:306,coupling,coupling,306,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329146567,2,['coupling'],['coupling']
Modifiability,"Hi all,. lately I was fixing restarts. Making sure the adjoint also has a correct primal restart is somewhat annoying due to the way the residuals are printed to screen. I want to change that to look like a normal screen output of all residuals. Here the old variant on top and the new below (field names need to be adapted to usual screen output); ![image](https://user-images.githubusercontent.com/31306376/133253618-e20b6be0-fd29-4c03-96b5-a70f84f06523.png). The code as of today only changes this for single zone and does not use the usual output routines (and is a bit hacky). I want to add multizone and use the output routines instead of this handwritten PrintDirectResidual routine. I'll look into both. Let me know if there are reasons against this or any other comments. ## Related Work; The printing tool box of Tim. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1371:316,adapt,adapted,316,https://su2code.github.io,https://github.com/su2code/SU2/pull/1371,1,['adapt'],['adapted']
Modifiability,"Hi all,; I'm experiencing some issues with travis lately, not only with time-outs (already discussed a few times), but also with this message:. _No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself._. _Check the details on how to adjust your build configuration on: https://docs.travis-ci.com/user/common-build-problems/#Build-times-out-because-no-output-was-received; The build has been terminated_. It appears to happen randomly, and I noticed that this happened as well to the latest develop build. Anyone that could give any input on this matter?. Thanks,; Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/524:326,config,configuration,326,https://su2code.github.io,https://github.com/su2code/SU2/issues/524,1,['config'],['configuration']
Modifiability,"Hi all,; i was having troubles with the navierstoke/flatplate regression test.; Using develop branch, on my local server sometimes I get different residuals due to a undefined behaviour during multi-grid construction. ; In particular the problem arises during the agglomeration process.; I pin-pointed this issue and it seems to be related to the fact that the variable ""Parent_CV"" is not set to an initial value. ; I solve this issue by setting it to 0 in the CPoint constructor (in dual_grid_structure.cpp). Could please anyone have a look into this to double-check it?; To reproduce this issue I just run the test case multiple times and once every while I got different values of CFL at the lowest MG level.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/314:361,variab,variable,361,https://su2code.github.io,https://github.com/su2code/SU2/issues/314,1,['variab'],['variable']
Modifiability,"Hi all,; really interesting topic going on here. As @pcarruscag just very well explained, and after quite some time working on the code, I can totally see the need for dense algebra. . I agree with @juanjosealonso and @erangit that maintaining the code portable and very easy to install should be a must. It has been a signature of SU2 since the beginning and we should continue on that line. I've had some problems before with codes that rely heavily on PETSc, so I wouldn't particularly be keen to go down that road. . **Eigen** would be really easy to integrate in SU2: they have a mirror on GitHub here: [Eigen Github repo](https://github.com/eigenteam/eigen-git-mirror) which could be easily added as a submodule in the same way as CoDiPack or MeDiPack. Given that they are only header files, there would be no need to compile any external library. And there is another very important point made by @vdweide and @pcarruscag: we need to ensure compatibility with the discrete adjoint functionality. One huge advantage of Eigen is that is fully templated: we recently differentiated a code that was heavy reliant on Eigen in an afternoon, and it worked great. While LAPACK is indeed a very mature library, I believe that it would require using external functions for every functionality, which would be a really big burden. @talbring @MaxSagebaum could add some more hints in this discussion. As an additional note, I would make sure that we keep everything open source.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459656519:253,portab,portable,253,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459656519,1,['portab'],['portable']
Modifiability,"Hi all,; this is a small pull request which includes:; - Updating the names of the structural classes to fit to general code standards.; - Removing functions no longer used.; - Some improvements in the output of FSI problems.; - Minor changes to structural-related config options. Thanks,; Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/522:265,config,config,265,https://su2code.github.io,https://github.com/su2code/SU2/pull/522,1,['config'],['config']
Modifiability,"Hi all. May I just add to Edwin comment: some of you have seen the tests that I; made with SUmb (structured mesh code) using the adaptive WF: Results using; the JST scheme were definitely off, while upwind +WF converged reasonably; to wall-resolved results. Naturally this conclusion is strongly coupled; with the specific discretization and implementation so it might not apply; to a SU2 implementation. I suggest to keep working on the Carlson; formulation (due to FUN3D-SU2 similarities mentioned above) and hopefully; extend it to adaptive WF as a second step.; I'll be happy to be on board of his effort.; Best regards,; Eran. On Fri, Jun 9, 2017 at 7:49 AM, Edwin van der Weide <; notifications@github.com> wrote:. > Juan, all,; >; > The adaptive wall function formulation as described in the paper of Medic; > et al. has two serious issues. First, the convergence stalls after three; > orders of magnitude or so and second it only works with an upwind; > discretization of the inviscid fluxes. For some reason JST type of schemes; > gave rather poor results. In order to have a reliable implementation, both; > issues need to be addressed. Unfortunately, we never did.; >; > Edwin; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/399#issuecomment-307294686>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/APKNmwNgNVmXDYW_tqtQzvpDvxGe4OeLks5sCM7ugaJpZM4NvG6w>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-307303905:129,adapt,adaptive,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-307303905,4,"['adapt', 'extend']","['adaptive', 'extend']"
Modifiability,"Hi all: . I'm running a time-dependent problem and need to screen output the current time and time step. I use ; ""SCREEN_OUTPUT = CUR_TIME, TIME_STEP"" .. command in the config file for the time discretization of ""TIME_DISCRE_FLOW= EULER_EXPLICIT"" for ""NAVIER_STOKES"" and ""NEMO"" solvers, and it prints out just **ZERO** for both solvers:; ....; | 6907| 0.0000e+00| 0.0000e+00|; | 6908| 0.0000e+00| 0.0000e+00|; | 6909| 0.0000e+00| 0.0000e+00|; | 6910| 0.0000e+00| 0.0000e+00|; | 6911| 0.0000e+00| 0.0000e+00|; | 6912| 0.0000e+00| 0.0000e+00|; | 6913| 0.0000e+00| 0.0000e+00|; ....; Any suggestion and help is greatly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1681:169,config,config,169,https://su2code.github.io,https://github.com/su2code/SU2/issues/1681,1,['config'],['config']
Modifiability,"Hi everybody,. First of all thank you so much for all the work you have done with this amazing software. I think there is a bug with the BC transition model in function CSourcePieceWise_TurbSA::ComputeResidual in path SU2_CFD/src/numerics/turbulent/. The initialization value of chi_2 is 50.0 instead of 5.0 as suggested in the original paper at https://journals.sagepub.com/doi/pdf/10.1177/0954406217743537. Moreover, the computation of the variable term2 seems dubious, also when referring to the original paper. . There is another bug related to the fact that gamma_bc is redefined within the above mentioned function. Thus when trying to output it by adding the option INTERMITTENCY to Volume_Output in .cfg file it results in a 0 value everywhere. Thank you so much in advance and keep up with the great work!. Best,; Andrea. **Desktop (please complete the following information):**; - OS: Ubuntu 20.04.2; - C++ compiler and version: gcc 9.3.0; - MPI implementation and version: 4.0.3; - SU2 Version: 7.1.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1196:442,variab,variable,442,https://su2code.github.io,https://github.com/su2code/SU2/issues/1196,1,['variab'],['variable']
Modifiability,"Hi everyone,. First of all, I want to thank you for this marvelous project you're running! Well done!; But I have some suggestions about the ""building"" and design philosophy of SU2. This (programming-related) ""feature request"" is all about making SU2 even more extendable. ## Is my feature request related to a problem?; Maybe! It's not pleasant when I'm forced to link libraries statically. I think it hinders the potential of the C++ language and makes compilation time unnecessarily longer. For example, in [SU2_CFD.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/SU2_CFD.cpp#L117) the program decides what to do with an if statement and **all drivers need to be linked at compile-time**. What if I want to write my own driver? I need to include my headers in ""SU2_CFD.hpp"" and rebuild the whole thing again!!!. ## The solution I would like; Why not use a [Factory With Self-Registering Classes](https://www.bfilipek.com/2018/02/factory-selfregister.html) instead. Ideally, the parent class (CDriver for example) would have; a static ::new() (or ::create() ) method which will create the appropriate type (child classes) based on **user input** (aka, from config file).; Of course, this way, the table of registered classes (drivers in my example) could be extended if the user requests to; dynamically load his own library (assuming that the library contains a child class that registers itself to the table). There is another vital related issue: Incorporating SU2 code in user-developed code is the main concern of this feature request but we also need a mechanism for getting references to all created objects. In the shared separate library, the user expects to; use already created CVariables, ... etc; how can he get those? An object database that keeps references to most involved objects is needed. **This roughly describes what I think is needed to be done. I'm willing to help and even lead the development of this feature if it gets enough approval**. ### Alternatives?; Can",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058:261,extend,extendable,261,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058,1,['extend'],['extendable']
Modifiability,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-737134105:42,adapt,adaptation,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105,17,"['Adapt', 'adapt', 'config']","['Adaptive', 'adaptation', 'adaptations', 'config']"
Modifiability,"Hi everyone,; I'm really interesting by the adaptitve mesh feature and i am wondering if the branch is still alive or if anyone have done any progress before starting to play with this branch; regards",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1224179553:44,adapt,adaptitve,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1224179553,1,['adapt'],['adaptitve']
Modifiability,"Hi everyone. I have used both the early version of SU2 with pyAMG (python2) and the latest SU2-feature_adap branch with python3. We have even ported its mesh adaptation implementation to the GAMMA mesh format due to geometry topology issues. ; ; However, there are two adapt options in the python implementation (ADAP_BACK, ADAP_SOURCE) and l could not still figure out how to use it because l don't know what kind of data file l should provide. For ADAP_BACK I have tried to use mesh files similar to the original volume mesh file with edges/corners in binary format (meshb) and it generally fails on complex geometries (with no ADAP_BACK option, it works nicely). Therefore, l am not sure whether l am providing the correct data file. This data file has to be only surface file with high order elements or just a volume mesh? . ADAP_SOURCE is completely mistery to me. Not much explanation inside the python code. I should also say that l don't understand the following command either. config_amg['options'] = config_amg['options'] + ' -inv-back'. Can someone please explain these plainly. I have also looked and feature_adapt Test files folder but unfortunately these options are closed and its data files are missing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2119:158,adapt,adaptation,158,https://su2code.github.io,https://github.com/su2code/SU2/issues/2119,2,['adapt'],"['adapt', 'adaptation']"
Modifiability,"Hi guys,. we used bootstrap to get the new autoconf tools and build the configure file. For compilation we use . 1) intel-studio-2019.5 2) mpi/intelmpi/2019.5.281 . There was a problem with an openmp flag which was not set (-qopenmp for intel). After fixing this we are getting this errors:. ```; ""../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""d"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^. ../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""MKL_DC_POTRF_CONVERT"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^; ```. compilation aborted for ../src/toolboxes/CSymmetricMatrix.cpp (code 2); make[1]: *** [../src/toolboxes/libSU2_a-CSymmetricMatrix.o] Error 2"". This part is an . #ifdef part of the codefile. After changing to HAS_LAPACK to HAS_LAPACK_WILL_NEVER_BE_FOUND_1234. the code continus compiling. . Maybe this is an intel specific problem, but it may be a problem for a some users. We don't know if the software work properly without the line 220 of CSymmetricMatrix.cpp. . Kind regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1088:72,config,configure,72,https://su2code.github.io,https://github.com/su2code/SU2/issues/1088,1,['config'],['configure']
Modifiability,"Hi guys,; this is to merge in the sliding mesh approach as proposed in the PhD thesis; ""Models and simulation of non-ideal fluid flows in unconventional turbomachinery: Toward highly efficient next-generation green power systems"". This request mostly includes additions to the interpolator and to the transfer classes.; The config option string to identify zone interface markers was changed from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE.; When the domain involve more than one interface, boundaries sharing the same interface should be listed as pairs in the config string, the order of the pairs doesn't matter.; Currently the code works in parallel and it is able to treat a random number of fluid zones.; Periodic support is still missing though I am planning to work on it in a future push.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/389:324,config,config,324,https://su2code.github.io,https://github.com/su2code/SU2/pull/389,2,['config'],['config']
Modifiability,"Hi the same issue is reported here: https://www.cfd-online.com/Forums/su2/240690-stable-solution-version-7-0-0-diverging-7-2-0-a.html; I think it is because of a bug we fixed that could cause the solution in some places to either freeze or be updated very slowly, seeing that the residuals in your 7.0.6 example don't drop, this is likely to be happening.; If you share the mesh you are using I can try suggesting better settings, to get to high CFL number you usually need CFL adaptation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1519#issuecomment-1019281442:478,adapt,adaptation,478,https://su2code.github.io,https://github.com/su2code/SU2/issues/1519#issuecomment-1019281442,1,['adapt'],['adaptation']
Modifiability,"Hi there,. I went ahead and created a dummy geometry, that is:; 1. I altered the planform so that the sweep, twist, dihedral, taper... are now different from the actual wing; 2. I replaced the airfoil by the NASA SC(2)-0712. The dummy wing has a double planform defined as:; - semi span = [5; 10]; - taper = [0.55; 0.35]; - dihedral angle = [5°; 2.5°]; - twist angle = [1°; 0°; -1°] (given for root, kink and tip airfoil sections); - sweep angle at LE = 25°; - Aspect ratio = 11.8; - semi area = 38. I defined the reference length as:; - reference (semi) area = 45; - reference chord = 3; - reference (semi) span = 15. The flight conditions remained unchanged:; - Mach number: 0.78; - Temperature = ~217 K; - Reynolds number: ~19 millions; - AoA = 0°. I created the exact same grid as before (same number of cells, same progression), ensuring my first cell was at y+<1. Things is, this time, SU2 did not have any trouble converging and computed the right z-projected area... I checked the results with another software and the pressure distribution (taken along the chord near the kink) match, see attached Figure. I am attaching the dummy configuration file (dum.txt) as well as the mesh (dum_mesh.txt) if it can be of interest to you. The mesh is a .geo gmsh file. To get the mesh, simply open with gmsh and click mesh 3D (or, from the console: gmsh dum_mesh.txt -3). At this point, I think that my problem might be related to the actual wing airfoil geometry, which is somehow not well pre-processed by SU2... I will continue investigating and keep you posted if I find a solution. Thank you for the time you took reading this issue.; ![cp](https://user-images.githubusercontent.com/39187559/40602255-3de183ae-6258-11e8-9aba-6c8d374dc34e.png); [dum.txt](https://github.com/su2code/SU2/files/2044072/dum.txt); [dum_mesh.txt](https://github.com/su2code/SU2/files/2044073/dum_mesh.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533#issuecomment-392442127:1140,config,configuration,1140,https://su2code.github.io,https://github.com/su2code/SU2/issues/533#issuecomment-392442127,2,['config'],['configuration']
Modifiability,"Hi!. I tried the [Quick Start] tutorial. [Quick Start]: <https://su2code.github.io/docs_v7/Quick-Start/>. I built SU2 from source (from commit 3f68501a7ccb107f05a44c2aa5747797541fb683 , branch 'develop').; I took files 'mesh_NACA0012_inv.su2' and 'inv_NACA0012.cfg' from the same commit. I managed to obtain a correct solution for the DIRECT problem (pressure field visualized with ParaView from 'flow.vtu' looks reasonably similar to the image shown in the tutorial).; Afterward, I changed the parameter MATH_PROBLEM from DIRECT to CONTINUOUS_ADJOINT in the configuration file and:. $ ln -s restart_flow.dat solution_flow.dat; $ SU2_CFD inv_adj_NACA0012.cfg. I obtained a correct adjoint solution (density adjoint field visualized with ParaView from 'adjoint.vtu' looks reasonably similar to the image shown in the tutorial). Finally, I wanted to also try the algorithmic differentiation, so I changed the parameter MATH_PROBLEM to DISCRETE_ADJOINT in the configuration file and:. $ SU2_CFD_AD inv_dadj_NACA0012.cfg. I failed to obtain a correct adjoint solution (I expected to see something really similar to what I got with the CONTINUOUS_ADJOINT method): the density adjoint field seems to have a completely different scale (instead of having values in the approximate range -200 ÷ +200, it has values in the range -0.264 ÷ +0.217 and the values not too close to zero are concentrated in an area near the farfield boundary, far from the airfoil). What's wrong?; Does anything else need to be changed in the configuration file?. **Bug report checklist**. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/). From the above mentioned commit, I built with:. $ ./preconfigure.py --no-medi --no-opdi --no-mpp --no-coolprop; $ export CXXFLAGS='-march=native -mtune=native -O3 -msse -mfpmath=sse'; $ meson setup -Dwith-mpi=disabled -Denable-cgns=true -Denable-tecio=false -Denable-autodiff=true -Denable-directdiff=true --prefix=${HOME}/local build; $ ninja",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1993:559,config,configuration,559,https://su2code.github.io,https://github.com/su2code/SU2/issues/1993,2,['config'],['configuration']
Modifiability,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/40:1144,config,config,1144,https://su2code.github.io,https://github.com/su2code/SU2/issues/40,2,['config'],['config']
Modifiability,"Hi, . I tried to install SU2-7.4.0 to Red-hat 10.5.0 as well; however, I have got the same errors as mentioned in the post above ; while running ""./ninja -C build essential"". I presume the issue is the same for both system configurations. Any advice would be appreciated.; ; Thanks,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2148#issuecomment-1763443205:223,config,configurations,223,https://su2code.github.io,https://github.com/su2code/SU2/issues/2148#issuecomment-1763443205,1,['config'],['configurations']
Modifiability,"Hi, . To begin with, thank you very much for your efforts and the tremendous work you put into improving the SST model!. It is very difficult for me to judge because I'm using a different time integration than the SU2, which may be critical in this regard. Moreover, my code is non-dimensional, so estimating the influence of the ""newBC"" and the ""lower limits"" is difficult for me. Can you tell the values of the ""lower limits"" relative to the freestream values? Please provide many details about the inputs in your config file (Linear solver, linear solver convergence, CFL, inviscid flux, etc')",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2334156700:516,config,config,516,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2334156700,1,['config'],['config']
Modifiability,"Hi, ; I'm worried about discontinuing the legacy build system. While on internet-connected machines the Meson-Ninja build is superior, I still didn't manage to apply it on clusters without such a connection. In my opinion should keep the configure-make-make install approach alive so that installation is possible for everyone, not just very efficient to part of the community ; Best, Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-734184730:238,config,configure-make-make,238,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-734184730,1,['config'],['configure-make-make']
Modifiability,"Hi, I have been running unsteady simulations lately and encountered the issues you mentioned. For the restart issue, it is possible to duplicate one restart file and use them both as pairs. As for the solution at each iteration issue, SU2_SOL doesn't seem to work properly for unsteady cases. However, you can use the the script below in order to get the Paraview or Tecplot output for each iteration using your config file.; ```; #!/usr/bin/python; import fileinput; import sys; import os. ni = 100; nf = 10000; dn = 100. for line in fileinput.input(inplace=True):; 	if line.startswith('UNSTEADY_SIMULATION'):; 		print('UNSTEADY_SIMULATION= NO'); 	else:; 		sys.stdout.write(line). for n in range(ni, nf+1, dn):; 	for line in fileinput.input(inplace=True):; 		if line.startswith('SOLUTION_FLOW_FILENAME'):; 			print('SOLUTION_FLOW_FILENAME= restart_flow_%05d.dat' % n); 		elif line.startswith('SURFACE_FLOW_FILENAME'):; 			print('SURFACE_FLOW_FILENAME= surface_flow_%05d' % n); 		else:; 			sys.stdout.write(line); 	os.system('SU2_SOL config_SOL.cfg'); ```. I use it by running the following on my terminal: python script.py config.cfg; Note that ni is the starting iteration, nf is the last iteration and dn is the interval. You can place this script where your config file is and run it as described. You may want to use a duplicate of your config file since the script will modify it for each iteration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/133#issuecomment-323660917:412,config,config,412,https://su2code.github.io,https://github.com/su2code/SU2/issues/133#issuecomment-323660917,4,['config'],['config']
Modifiability,"Hi, I want to build SU2 from source because I need python wrapper.; After I configured, I tried to type ""make"" to install it.; But I found an error:. ```; ......; CC libparmetis/libparmetis_a-serial.o; CC libparmetis/libparmetis_a-stat.o; CC libparmetis/libparmetis_a-timer.o; CC libparmetis/libparmetis_a-util.o; CC libparmetis/libparmetis_a-wave.o; CC libparmetis/libparmetis_a-weird.o; CC libparmetis/libparmetis_a-wspace.o; CC libparmetis/libparmetis_a-xyzpart.o; AR libparmetis.a; ar: `u' modifier ignored since `D' is the default (see `U'); make[2]: Leaving directory '/home/xxx/SU2-7.3.0/externals/parmetis'; Making all in cgns; make[2]: Entering directory '/home/xxx/SU2-7.3.0/externals/cgns'; CC libcgns_a-cgns_error.o; CC libcgns_a-cgns_internals.o; CC libcgns_a-cgns_io.o; CC libcgns_a-cgnslib.o; In file included from cgns_error.c:24:; cgnslib.h:49:10: fatal error: cgnstypes.h: No such file or directory; 49 | #include ""cgnstypes.h""; | ^~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:430: libcgns_a-cgns_error.o] Error 1; make[2]: *** Waiting for unfinished jobs....; In file included from cgns_io.c:43:; cgns_io.h:32:10: fatal error: cgnstypes.h: No such file or directory; 32 | #include ""cgnstypes.h""; | ^~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:458: libcgns_a-cgns_io.o] Error 1; cgns_internals.c:30:10: fatal error: cgnsconfig.h: No such file or directory; 30 | #include ""cgnsconfig.h""; | ^~~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:444: libcgns_a-cgns_internals.o] Error 1; In file included from cgnslib.c:51:; cgnslib.h:49:10: fatal error: cgnstypes.h: No such file or directory; 49 | #include ""cgnstypes.h""; | ^~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:472: libcgns_a-cgnslib.o] Error 1; make[2]: Leaving directory '/home/xxx/SU2-7.3.0/externals/cgns'; make[1]: *** [Makefile:398: all-recursive] Error 1; make[1]: Leaving directory '/home/xxx/SU2-7.3.0/externals'; make: *** [Makefile:440: all-recursive] ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1629:76,config,configured,76,https://su2code.github.io,https://github.com/su2code/SU2/issues/1629,1,['config'],['configured']
Modifiability,"Hi, I want to build SU2 from source using meson and ninja. After I enabled mpi and tried to install by typing ""./ninja -C build install"" an error occurs:. ```; ......; [14/1296] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Aint.c.o; FAILED: externals/cgns/hdf5/libsu2hdf5.a.p/H5Aint.c.o; cc -Iexternals/cgns/hdf5/libsu2hdf5.a.p -Iexternals/cgns/hdf5 -I../externals/cgns/hdf5 -fdiagnostics-color=always -g -fPIC -Wno-unused-result -Wno-unused-parameter -Wno-unused-variable -Wno-unused-but-set-variable -Wno-sign-compare -Wno-stringop-overflow -Wno-discarded-qualifiers -Wno-error=maybe-uninitialized -Wno-error=unused-function -Wno-error=unused-label -Wno-pedantic -D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE -D_LARGEFILE_SOURCE -D_POSIX_C_SOURCE=200809L -D_GNU_SOURCE -MD -MQ externals/cgns/hdf5/libsu2hdf5.a.p/H5Aint.c.o -MF externals/cgns/hdf5/libsu2hdf5.a.p/H5Aint.c.o.d -o externals/cgns/hdf5/libsu2hdf5.a.p/H5Aint.c.o -c ../externals/cgns/hdf5/H5Aint.c; In file included from ../externals/cgns/hdf5/H5private.h:27,; from ../externals/cgns/hdf5/H5Aint.c:35:; ../externals/cgns/hdf5/H5public.h:63:10: fatal error: mpi.h: No such file or directory; 63 | #include <mpi.h>; | ^~~~~~~; compilation terminated.; ninja: build stopped: subcommand failed.; ```; All the error output is due to this problem of missing mpi.h, but I can confirm that mpi.h is in that directory.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1691:475,variab,variable,475,https://su2code.github.io,https://github.com/su2code/SU2/issues/1691,2,['variab'],['variable']
Modifiability,"Hi, I've seen this with some (one) cgns file but not others (larger ones), for example I never had any issue with the finest HL-CRM reference grids on nodes with 128 cores.; I suspect this has something to do with how the files are generated, but I did not investigate further. I think the HL-CRM are made by Pointwise but I do not know the export settings used, do let us know if you find a solution.; Regarding the ASCII format, we have recently improved the mesh reader (in the develop branch), if you are generating the file yourself, and if you list the ""points"" before the ""elements"" in the file, it may be up to 4 times faster to read it.; Finally, the file systems used in the clusters of some very fine institutions are absolute trash (not saying this is your case, just making you aware of the fact), and they respond very badly to having many cores reading the same file. Especially for ASCII because here all cores read the entire file, and not just some sections.; If you run the hybrid parallel version of SU2 this will be less of a problem because fewer cores will be participating in file-IO (but all of them will still be used for computation).; https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#basic-configuration; https://su2foundation.org/wp-content/uploads/2020/06/Gomes.pdf; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1378#issuecomment-924779452:1226,config,configuration,1226,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378#issuecomment-924779452,1,['config'],['configuration']
Modifiability,"Hi, Komahan, ; I also noticed this error in fsi_computation.py. And this error was fixed by adding a periodic boundary condition. For example: ; Adding one line in parser part:; `parser.add_option(""--periodic"", dest=""periodic"", default=""False"", help=""Define whether the problem has periodic boundary conditions"", metavar=""PERIODIC""); `; And the Line 109 changes to; ` FluidSolver = pysu2.CFluidDriver(CFD_ConFile, 1, FSI_config['NDIM'], options.periodic, comm)`. However, when I want to run the basic fsi coupling of two-dimensional pitching-plunging NACA 0012 airfoil by using the 'TESTER' CSD Solver 'PitchPlungeAirfoilStructuralTester', another error occurs. If I run by typing:; `fsi_computation.py -f FSICoupler_config.cfg`; This gives the following error:; `***************************** Initializing fluid solver *****************************; ('A TypeError occured in pysu2.CSingleZoneDriver : ', TypeError(""in method 'new_CFluidDriver', argument 5 of type 'SU2_Comm'"",)); ERROR : You are trying to launch a computation without initializing MPI but the wrapper has been built in parallel. Please add the --parallel option in order to initialize MPI for the wrapper.; `. If I run in parallel by typing:; 'fsi_computation.py -f FSICoupler_config.cfg --parallel'; This works without error but the program stops at Mapping fluid-solid interfaces; `***************************** Mapping fluid-solid interfaces *****************************; Building interpolation matrices...; `. Here I upload the config files and the mesh, hope someone can notice those bugs and help to solve. Best!. [2d_coupled_fsi.zip](https://github.com/su2code/SU2/files/3790605/2d_coupled_fsi.zip); includes:; FSICoupler_config.cfg, NACA0012RANS_FullHexa.su2, StructuralTester_config.cfg, SU2_config.cfg",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/642#issuecomment-548054290:505,coupling,coupling,505,https://su2code.github.io,https://github.com/su2code/SU2/issues/642#issuecomment-548054290,2,"['config', 'coupling']","['config', 'coupling']"
Modifiability,"Hi, SU2 developers,. When I worked on a 2D vicsid laminar problem with a gird movement, SU2 goes wrong at the time when it computes the BC_HeatFlux_Wall. The condition of the moving wall is setted to be MARKER_HEATFLUX=(wall, 0.0). So I checked the code and found problems in the function CNSSolver::BC_HeatFlux_Wall. The problematic codes are here. ```; void CNSSolver::BC_HeatFlux_Wall(CGeometry *geometry, CSolver **solver_container, CNumerics *conv_numerics, CNumerics *visc_numerics, CConfig *config, unsigned short val_marker) {. ...; /*--- Implicit Jacobian contributions due to moving walls ---*/. if (implicit) {. /*--- Jacobian contribution related to the pressure term ---*/. GridVel2 = 0.0;; for (iDim = 0; iDim < nDim; iDim++); GridVel2 += GridVel[iDim]*GridVel[iDim];; for (iVar = 0; iVar < nVar; iVar++); for (jVar = 0; jVar < nVar; jVar++); Jacobian_i[iVar][jVar] = 0.0;; Jacobian_i[nDim+1][0] = 0.5*(Gamma-1.0)*GridVel2*ProjGridVel;; for (jDim = 0; jDim < nDim; jDim++); Jacobian_i[nDim+1][jDim+1] = -(Gamma-1.0)*GridVel[jDim]*ProjGridVel;; Jacobian_i[nDim+1][nDim+1] = (Gamma-1.0)*ProjGridVel;. /*--- Add the block to the Global Jacobian structure ---*/; ... ```. In 2D incompressible cases, the number of conservative variables is 3, so nVar = 3 and the size of Jacobian should be 3x3. The codes `Jacobian_i[nDim+1][0]` has memory acess error.; Obviously, the codes are for compressible problems. Can you fix the bug ? What's the right method to compute BC_HeatFlux for incompressoble cases with grid movment ?. Another small bug. In function COutput::SetSurfaceCSV_Flow. ```; Pressure = FlowSolver->node[iPoint]->GetPressure();; PressCoeff = FlowSolver->GetCPressure(iMarker, iVertex);; ```. Pressure is wrong for incompressible problems",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/247:498,config,config,498,https://su2code.github.io,https://github.com/su2code/SU2/issues/247,2,"['config', 'variab']","['config', 'variables']"
Modifiability,"Hi, can you share the testcase? At least the config so we can try to replicate the problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-623634949:45,config,config,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623634949,1,['config'],['config']
Modifiability,"Hi, good news! I made it run by changing the' if (config->GetMarker_All_KindBC(iMarker) != KIND_MARKER) continue;' to ' if (config->GetMarker_All_KindBC(iMarker) != KIND_MARKER || config->GetMarker_All_KindBC(iMarker) == SUPERSONIC_INLET) continue;' which is line 3590 in CSolver.cpp. See if this is the right answer. @pcarruscag @bigfooted",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327#issuecomment-2241607243:50,config,config,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327#issuecomment-2241607243,3,['config'],['config']
Modifiability,"Hi, hope you guys can take a look to see if I am on the right track.; Now the compelling error shows it appears that the compiler cannot find the variables **Inlet_Temperature, Inlet_Pressure and Inlet_Velocity.** This means that we need to declare and define these variables in the appropriate places in the class. Need I declare these variables in the CEulerSolver class and the CFVMFlowSolverBase class?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2326#issuecomment-2233869800:146,variab,variables,146,https://su2code.github.io,https://github.com/su2code/SU2/pull/2326#issuecomment-2233869800,3,['variab'],['variables']
Modifiability,"Hi, please post the commands you are running followed by the output of meson, with all the iterations I don't understand what is going on. Meson does not care about the variables MPICC and MPICXX, it cares about CC and CXX.; It then gets the include directories and linker arguments from the pkgconfig file for MPI. If you want to bypass pkgconfig you set CC=some/path/mpicc and CXX=some/path/mpicxx, and use -Dcustom-mpi=true when calling meson.; Depending on how they are configured it may work or it may give you undefined references, in which case you can try LIBS=""-lmpi"" LDFLAGS=""-lmpi"" before running meson (or something like that, I don't know much about environment variables). If the wrappers don't find mpi.h I would ask the administrator for instructions, then after they say it is your fault and don't solve the problem (my experience with that kind of people anyway) you can try the INCLUDE or INCLUDES variable (not sure) or directly use CXXFLAGS=""-I\some\path\mpi\include"". I've used 3 hpc systems and the recipe was never the same so... see if there is system-specific advice.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744658431:169,variab,variables,169,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744658431,4,"['config', 'variab']","['configured', 'variable', 'variables']"
Modifiability,"Hi, thank you all a lot for your help. Here is my derivation : ; [SourceAxi.pdf](https://github.com/su2code/SU2/files/5506823/SourceAxi.pdf). Mistakes have been corrected and it should be the same as your book now apart from the fact that I am neglecting the gradient of viscosity. To take it into account it needs to be evaluated and I suppose that is what those AuxVar variables are for (something like u *mu or u *mu/y I guess). This is new to me and unfortunately I do not have time to look into it atm (unless someone points me in the right direction and it's quickly done). @WallyMaier I believe that you had taken that into account already and I just came along and cut out your work. So I should close this PR and once you open a new one I can add the generalisation for the convection terms. Were you planning on implementing the k and omega sources as well? . What book is that btw?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-723641597:371,variab,variables,371,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-723641597,1,['variab'],['variables']
Modifiability,"Hi, thank you for your help. Could you please give more details about unnecessary files?. If you mean files related to cmake, I think they are generated automatically when CoolProp is compiled by cmake submodule in meson. I will try to compile without these files. If I succeed, I will remove them. PENG YAN, PhD student. Department of Aerospace Science & Technology. Politecnico di Milano; ________________________________; From: Nijso ***@***.***>; Sent: Wednesday, October 5, 2022 21:31; To: su2code/SU2 ***@***.***>; Cc: Peng Yan ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] [WIP]Coupling of SU2 and CoolProp (PR #1782). could you clean up unnecessary files first, please?. —; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/1782#issuecomment-1268867160>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ATJ4GKEET6UOH5CLSYXW5RLWBXJPVANCNFSM6AAAAAAQ53HAJY>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1268875761:601,Coupling,Coupling,601,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1268875761,1,['Coupling'],['Coupling']
Modifiability,"Hi, thanks for this interesting discussion. Just a reminder... there is a third place where the default values are stored! the config_template.cfg file. I have had similar problems to what @erangit is describing with the multiple definition of the default values in different places, in fact, sometimes is not clear what is the minimum number of parameters that you can use in a config file. I think that the ideal scenario would be to use the config_template.cfg file as the default value keeper and create subroutines in C++ and python that update the defaults with the existing information in that file. Remember that config_template.cfg is always required otherwise the user doesn't know that are the existing options. By the way... this discussion reminds me that we should update SetRunTime_Options(void). This is an incredible useful small subroutine to modify the software parameters during runtime. EXT_ITER is the only parameters currently accepted but in the near future we should add all or most of them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-381411950:379,config,config,379,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-381411950,2,['config'],['config']
Modifiability,"Hi, this is an SU2 user who want to use parallel_computation.py to simulate the QuickStart configuration file.; When I access the QuickStart folder and type “parallel_computation.py -f inv_NACA0012.cfg -n 4”, the parallel computation do not work but everything repeat 4 times. The same solution also appear 4 times and the speed become lower. ```; | 0| 1.1562e+00| -1.026860| 0.201330| 0.082117|; | 1| 1.0859e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1016e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1172e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1562e+00| -1.169122| 0.263458| 0.037718|; | 2| 1.0833e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1042e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1354e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1458e+00| -1.236203| 0.301817| 0.029207|; | 3| 1.0742e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1055e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1172e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1172e+00| -1.327201| 0.320840| 0.024965|; | 4| 1.0906e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.0844e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.1125e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.1187e+00| -1.419001| 0.329132| 0.023806|; | 5| 1.0859e+00| -1.513907| 0.332101| 0.023194|; ```. However, when I type this ""mpirun -np 4 SU2_CFD inv_NACA0012.cfg"" the parallel computing can work normally.; I am sure I installed mpich and enabled python wrapper.; How can I solve this problem of those repeatition?. Thank you very much!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1688:91,config,configuration,91,https://su2code.github.io,https://github.com/su2code/SU2/issues/1688,1,['config'],['configuration']
Modifiability,"Hi,. Can you please share the console output during the configure step? I'd like to see more information about the compilation set up, including libraries and flags. Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-200953042:56,config,configure,56,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-200953042,1,['config'],['configure']
Modifiability,"Hi,. Could someone help me with this post . https://www.cfd-online.com/Forums/su2/221007-su2-violates-lower-bound-ffd-design-variables.html#post745905",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/795:125,variab,variables,125,https://su2code.github.io,https://github.com/su2code/SU2/issues/795,1,['variab'],['variables']
Modifiability,"Hi,. I am running shape optimization on the HPC ARCC cluster we have here at U of Cincinnati. Running it normally through a shell script with sbatch commands gives the following error:. ```; The application appears to have been direct launched using ""srun"",; but OMPI was not built with SLURM's PMI support and therefore cannot; execute. There are several options for building PMI support under; SLURM, depending upon the SLURM version you are using:. version 16.05 or later: you can use SLURM's PMIx support. This; requires that you configure and build SLURM --with-pmix. Versions earlier than 16.05: you must use either SLURM's PMI-1 or; PMI-2 support. SLURM builds PMI-1 by default, or you can manually; install PMI-2. You must then build Open MPI using --with-pmi pointing; to the SLURM PMI library location. Please configure as appropriate and try again.; ```. Since this was using srun, I found a way to by-pass this issue by changing:; https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_PY/SU2/run/interface.py#L58. to; `mpi_Command = 'mpirun -n %i %s'`. which works fine (for single node). A better way would be:. `mpi_Command = 'mpirun %s'`. but then I get the following error:. ```; File ""/home/baigan/SU2/bin/SU2/run/interface.py"", line 277, in build_command; the_Command = mpi_Command % (processes,the_Command); TypeError: not all arguments converted during string formatting; ```. I see in interface.py that using srun was the way SU2 was expected to run on SLURM. But since it doesn't I am curious what is the way other people are running if they use SLURM. This PMIx support issue may be specific to the cluster I am using.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1032:534,config,configure,534,https://su2code.github.io,https://github.com/su2code/SU2/issues/1032,2,['config'],['configure']
Modifiability,"Hi,. I am trying to install SU v7.0.3 and I find a peculiar problem. I have set -Denable-autodiff = false & -Denable-directdiff = false during configuration creation using meson.py. However, the configuration still downloads CoDiPack and MediPack. Shouldn't the downloading be bypassed or is there something wrong with my understanding?. Thanks and regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/953:143,config,configuration,143,https://su2code.github.io,https://github.com/su2code/SU2/issues/953,2,['config'],['configuration']
Modifiability,"Hi,. I am trying to installSU2 in my machine. I am using python3 as suggested. When I am building the configuration using ./meson.py build I get the following error:. Traceback (most recent call last):; File ""./meson.py"", line 74, in <module>; build_ninja(); File ""./meson.py"", line 60, in build_ninja; subprocess.run([sys.path[0] + os.path.sep + 'ninja', '--version'], stdout=subprocess.PIPE); AttributeError: 'module' object has no attribute 'run'. What does this error indicate? Do I require a later version of python (>3.5)?. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/954:102,config,configuration,102,https://su2code.github.io,https://github.com/su2code/SU2/issues/954,1,['config'],['configuration']
Modifiability,"Hi,. I am trying to run SU2 on parallel, and MPI is installed and on path in system variables. I have also tried enforcing with meson with the commands said in the website, but the system does not take it either, as in it does not recognize meson commands also, when it is in system variables as well. ; When I installed SU2, it had shown the message of MPI not found. Is there any other way to make it work?. Thank you beforehand!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1233:84,variab,variables,84,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233,2,['variab'],['variables']
Modifiability,"Hi,. I downloaded su2-***.tgz file for ubuntu server. I uncompressed it. ; When I am using following command:-; ./configure --prefix=/root/downloads/su2-6.1.0; I get following error:-; -su: ./configure: No such file or directory. Need suggestion here. . Thanks,; Reena",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/549:114,config,configure,114,https://su2code.github.io,https://github.com/su2code/SU2/issues/549,2,['config'],['configure']
Modifiability,"Hi,. I have similar issues building SU2-7.0.6 with spack-compiled libraries and mason/ninja on CentOS7. I am using gcc-6.3.0, openmpi-3.1.4 and python-3.7.0. The configure/build commands I use are:; ```; ./meson.py build -Denable-pywrapper=true --prefix=$PREFIX ; ./ninja -j16 -C build install; ```. At the linking stage, I get the error:; ```; mpiCC -o SU2_MSH/src/SU2_MSH SU2_MSH/src/SU2_MSH.p/SU2_MSH.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags /apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib/libmpi.so -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags /apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib/libmpi_cxx.so -Wl,--end-group -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1037#issuecomment-681033828:162,config,configure,162,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037#issuecomment-681033828,1,['config'],['configure']
Modifiability,"Hi,. I observed similar restart issues for multigrid restarts when working with the discrete adjoint solver for Euler test cases.; Here, I created a reproducible setting with the NACA 0012 Euler case (mesh from the tutorials). **Describe the bug**; The primal solver works fine and for the restart there are no issues. ; However, after an adjoint restart, the residuals are completely different.; As a demonstration I run the discrete adjoint solver:; (1) 110 step and (2) 105 steps and restart for 5 steps. Residual output for the last 10 steps of (1):; | 100| -5.321370| -10.661410|; | 101| -5.351074| -10.692532|; | 102| -5.381256| -10.724276|; | 103| -5.411925| -10.756667|; | 104| -5.443087| -10.789731|; | 105| -5.474745| -10.823494|; | 106| -5.506899| -10.857980|; | 107| -5.539545| -10.893213|; | 108| -5.572670| -10.929211|; | 109| -5.606253| -10.965987|. Residual output for (2):; last 5 steps before restart; | 100| -5.321370| -10.661410|; | 101| -5.351074| -10.692532|; | 102| -5.381256| -10.724276|; | 103| -5.411925| -10.756667|; | 104| -5.443087| -10.789731|; 5 steps after restart; | 0| -2.958579| -8.264492|; | 1| -3.071182| -8.366287|; | 2| -3.165074| -8.453816|; | 3| -3.237963| -8.506268|; | 4| -3.293038| -8.552713|. When multigrid is turned of I could not observe a jump in residuals after the restart for this test case. **To Reproduce**; Use the NACA012 Euler mesh from the tutorial and the config file: [config.cfg.txt](https://github.com/su2code/SU2/files/8089442/config.cfg.txt); Converge the flow solver and then run the discrete adjoint for 105 steps and restart. **Desktop (please complete the following information):**; - OS: Linux, Fedora 34; - C++ compiler and version: gcc version 11.2.1; - MPI implementation and version: mpirun (Open MPI) 4.1.0; - SU2 Version: current develop",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1549#issuecomment-1043026024:1415,config,config,1415,https://su2code.github.io,https://github.com/su2code/SU2/issues/1549#issuecomment-1043026024,3,['config'],['config']
Modifiability,"Hi,. I think this could be a very interesting contribution in SU2. ; As you know the right section to add anything related with convergence in the config file is; % --------------------------- CONVERGENCE PARAMETERS --------------------------%. In that section you will see some parameters related with the Cauchy criteria (CAUCHY_ELEMS, CAUCHY_EPS, CAUCHY_FUNC_FLOW, or CAUCHY_FUNC_ADJFLOW) and others related with the Residual criteria (RESIDUAL_REDUCTION, RESIDUAL_MINVAL). My suggestion is to create the following parameter:; % Residual convergence criteria equation (RHO, RHO_VEL, RHO_ENERGY); RESIDUAL_FUNC_FLOW= RHO. In other words, why don't you create an equivalent to CAUCHY_FUNC_FLOW? (but for the residual convergence criteria). Please do not forget that since a couple of weeks the developers are using the branch ""develop"" and ""master"" is only for releases. So, the changes should be pushed to the ""develop"" branch not the ""master"" one. Thanks a lot for your contribution. Looking forward for an update in this useful new option. Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/87#issuecomment-57954164:147,config,config,147,https://su2code.github.io,https://github.com/su2code/SU2/pull/87#issuecomment-57954164,1,['config'],['config']
Modifiability,"Hi,. I'm trying to compare the gradient from Discrete Adjoints to Finite differences using SU2v6.2 for a RAE2822 airfoil (2D) with a sharp trailing edge. I'm using the Spalart Allmaras turbulence model. The flow is transonic. I've used FFD to parameterize the airfoil. However, I cannot get my discrete adjoint values to match my finite difference values. The directions of the gradients match, however, the magnitudes differ significantly. . I've posted my full question here. https://www.cfd-online.com/Forums/su2/198057-gradients-calculated-through-discrete-adjoint-near-zero.html",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/804:243,parameteriz,parameterize,243,https://su2code.github.io,https://github.com/su2code/SU2/issues/804,1,['parameteriz'],['parameterize']
Modifiability,"Hi,. I've been trying to build SU2 with its Python bindings, but have sadly been unable to link the targets `SU2_PY/pySU2/_pysu2.so` and `SU2_PY/pySU2/_pysu2ad.so`. I have attempted the compilation & linking from both the master branch, and the latest release with the same result. The steps I followed here were:. 1. Meson configuration:; ```bash; ./meson.py build -Denable-autodiff=true -Denable-pywrapper=true -Dwith-mpi=enabled --prefix=/local/temp/DifferentiableProgramming/SU2/python-build --optimization=3 --buildtype=release; ```. 2. Building with ninja:; ```bash; cd build && ninja; ```. 3. Getting an error at the linking stage (the full command is at the bottom of the issue):4. ; ```bash; /usr/bin/ld: /usr/lib/x86_64-linux-gnu/libz.a(zutil.o): warning: relocation against `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib/x86_64-linux-gnu/libz.a(deflate.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; ```; But looking at the linking command `-fPIC` is already used, so I am a little lost for advice here. . Does anyone have any intuition or suggestions what this could be due to?. **Desktop:**; - OS: Ubuntu 22.04; - C++ compiler and version: g++ 11.2.0; - MPI implementation and version: OpenMPI v4.1.4; - SU2 Version: master & v7.3.1. ### Full linking command. ```bash; Linking target SU2_PY/pySU2/_pysu2ad.so; FAILED: SU2_PY/pySU2/_pysu2ad.so ; g++ -o SU2_PY/pySU2/_pysu2ad.so SU2_PY/pySU2/_pysu2ad.so.p/meson-generated_pySU2ad.cxx.o SU2_CFD/src/libSU2core_AD.a.p/definition_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/python_wrapper_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CFluidModel.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CIdealGas.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CPengRobinson.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CVanDerWaalsGas.cpp.o SU2_CFD/src/libSU2core",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1707:324,config,configuration,324,https://su2code.github.io,https://github.com/su2code/SU2/issues/1707,1,['config'],['configuration']
Modifiability,"Hi,. Mmm… it is strange, it is working for me:; I have pulled from the develop branch to update feature_cleaning; $./bootstrap to be sure that the makefile.in files have been updated.; $./preconfigure.py --enable-autodiff --with-ad=CODI --enable-mpi -p'--with-cc=mpicc --with-cxx=mpicxx CXXFLAGS=""-O3”'; $make install; And everything seems ok. Tom, if you have a while, could you please checkout feature_cleaning and try to compile? Maybe my configuration is different from travis. Thanks,; Francisco. > On Oct 29, 2015, at 7:41 PM, Thomas D. Economon notifications@github.com wrote:; > ; > Francisco, when you have a moment, can you please check out the issue with Travis for this pull request? I think it is related to the autotools during the build...; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/pull/208#issuecomment-152395079.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208#issuecomment-152416417:442,config,configuration,442,https://su2code.github.io,https://github.com/su2code/SU2/pull/208#issuecomment-152416417,1,['config'],['configuration']
Modifiability,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:186,adapt,adaptation,186,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105,13,"['Adapt', 'adapt', 'config']","['Adaptation', 'adaptation', 'adapted', 'config']"
Modifiability,"Hi,. The structure of fsi_computation.py is completely different from the one of parallel_computation(_fsi).py, this one is just a script that, if I am right, will set for you the commands in order to launch SU2_CFD in parallel and SU2_SOL right after. It is based on system calls ( it is like calling mpirun -np xx SU2_CFD SU2conf.cfg and mpirun -np xx SU2_SOL SU2conf.cfg). The fsi_computation.py has to be considered as an executable, and thus has to be launched with the mpirun command for parallel run:. $ mpirun -np XX fsi_computation.py -f FSIConfig.cfg --parallel. You have to specify the FSI configuration file (see examples in TestCase) with -f, and the --parallel option is mandatory (only if SU2 has been built in parallel). XX is the number of procs. Hope this helps,. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/457#issuecomment-339026305:601,config,configuration,601,https://su2code.github.io,https://github.com/su2code/SU2/issues/457#issuecomment-339026305,1,['config'],['configuration']
Modifiability,"Hi,. The use of an Omega production limiter (about the cross-diffusion term) is correct for low-Reynolds-number (LRN) models (the approach described by Peng et al. is very naive; there are other more rigorous treatments). For high-Reynolds-number (HRN) models, the clipping should be zero, keeping the cross-diffusion term positive; thus, the current implementation is correct. Indeed, it is not exactly as it appears in Menter's original publication. The factor (1-F1) aimed to promise that the cross-diffusion term will be activated only outside the boundary layer, where it is positive (the cross-diffusion term switches its sign deep inside the boundary layer). This was also recognized by Peng et al. (first paragraph above Eq. 17). However, it may happen that the factor (1-F1)=1 where the cross-diffusion term is negative. Usually, it may happen at the wake, very near the airfoil trailing edge, where the upper and lower boundary layers merge. It is due to the imperfection of the F1 function. To summarize, the current implementation is correct, and it is perfect for HRN models.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2252659742:938,layers,layers,938,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2252659742,1,['layers'],['layers']
Modifiability,"Hi,. Unfortunately the logic is quite confuse but I think that part of the code is correct, SU2 just want to use an updated version of the limiter for the turbulence variables. ` if (config->GetSpatialOrder() == SECOND_ORDER_LIMITER) SetSolution_Limiter(geometry, config);; `; and for the flow variables. ` if (limiter_flow) solver_container[FLOW_SOL]->SetPrimitive_Limiter(geometry, config);; `. Another story is if that is really worth it and we should use the values from the previous iteration. Remember that we compute the turbulence variables after updating the flow variables... so... from the theoretical point of view it makes sense to have an updated value for the limiter. However this is not 100% accurate because we are using old gradients to compute the new limiter. Anyway, the spirit is to have a limiter computed using the latest flow variables value and we should probably check that the gradients have been also updated before computing limiters again for the turbulence equation. What I don't really like is Upwind_Residual. ` bool limiter = (config->GetSpatialOrder() == SECOND_ORDER_LIMITER);; `. in this case we are using only the info about limiters or not in the turbulence model... so if, for example, we are using JST for the mean flow equations then the limiter for the flow equations have never been computed and. ```; if (limiter) {; FlowPrimVar_i[iVar] = V_i[iVar] + Limiter_i[iVar]*Project_Grad_i;; FlowPrimVar_j[iVar] = V_j[iVar] + Limiter_j[iVar]*Project_Grad_j;; }. ``` . Is incorrect because Limiter_i has never been computed (if we are lucky maybe we are using a zero value by default... but we need to check). In other words, I think this require a deeper look. @jschuele, could you please think on this and submit a new pull request (I'll close this one). If you don't have time, please let me know and we really appreciate if you could add this situation as an Issue. We'll try to fix this problem as soon as possible. By the way the initial confusion was that ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/403#issuecomment-320490588:166,variab,variables,166,https://su2code.github.io,https://github.com/su2code/SU2/pull/403#issuecomment-320490588,8,"['config', 'variab']","['config', 'variables']"
Modifiability,"Hi,. We have just updated (30min ago) the master branch of the SU2 and TestCases repositories. Could you please try again?. If you are using the develop branch, please remember that you should use the develop branch for the SU2 and TestCases repositories. Otherwise the options don’t match. Pleas let us know if it is working for you now. Best,; Francisco. On Feb 3, 2015, at 12:27 PM, Gil Forsyth notifications@github.com wrote:. > Just compiled today and it seems like the options CFL_ADAPT and CFL_ADAPT_PARAM have been deprecated?; > ; > Running the 2D inviscid cylinder and the euler channel flow example both throw an error; > ; > CFL_ADAPT: invalid option name. Check current SU2 options in config_template.cfg.; > CFL_ADAPT_PARAM: invalid option name. Check current SU2 options in config_template.cfg.; > Commenting these lines out lets the test cases run but I'm not sure what the default behavior is (are these running with adaptive CFL if we don't pass that parameter at all?); > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72729435:934,adapt,adaptive,934,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72729435,1,['adapt'],['adaptive']
Modifiability,"Hi,. When restarted at e.g. Time-Iter 2 the first value would be divided by 3 (number of timesteps counting from zero).; So if your first value in that restarted sim is a 3, the running average would be 1. This is fixed with this commit by setting WINDOW_START_ITER = RESTART_ITER in the Config Postprocessing,; if the option is not set. If the option is set, but incorrectly, an error is raised. ## Related Work; Original implementation #836 ; Change in previous behavior introduced in #1548 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1601:288,Config,Config,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/1601,1,['Config'],['Config']
Modifiability,"Hi,. While working with Marker_Engine_Inflow, I have noticed that the boundary condition is not working as intended with the option ENGINE_INFLOW_TYPE= FAN_FACE_MACH. The solutions rapidly diverge when I use FAN_FACE_MACH, but they converge if I use FAN_FACE_PRESSURE and set the pressure to a reasonable value. Looking at the source code, I believe this cause by not reevaluating the marker's Mach Number. . Looking at the source code, I would suggest adding the following line of code to CEulerSolver.cpp after line 2932 which is where it seems to update other marker parameters. config->SetInflow_Mach(iMarker_Inlet, Inlet_Mach_Total[iMarker_Inlet]);",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2274:582,config,config,582,https://su2code.github.io,https://github.com/su2code/SU2/issues/2274,1,['config'],['config']
Modifiability,"Hi,. Yep, I changed that. I know that from the math point of view it doesn’t make a lot of sense but, from the practical point of view, it is useful. . There are some cases, in which computing gradients using finite differences is the only choice. And with the shape_optimization script it was not possible to control the step size for the finite differences. The option for step size was only in finite_differences.py. The step size is scaled with the reference length because from the practical point of view, I have found that the size of the aircraft, wing, airfoil, is important to determine a meaningful step size. e.g. should we use the same step for an aircraft with a MAC of ~150in than for an airfoil with a chord of 1in. Remember that most of the times we are using FD when the adjoint is not converging… so we have bad convergence of the direct problem (including some level of unsteadiness that we want to filter with the selection of the step size). In other words, with the right choice of the FD step size you can obtain, at least, an useful gradient… and that number is somehow linked to the size of the aircraft, wing, or airfoil. The best solution would be to add the step size to the finite_differences.py and also to the shape_optimization.py (creating a new option in the config file)… not a top priority, but I’ll do it soon. Best,; Francisco. > On Mar 1, 2017, at 3:25 PM, Thomas D. Economon <notifications@github.com> wrote:; > ; > Bumping this issue. This has come up several times now for different people/projects. Is there a reason to keep it based on the reference moment length, or can we revert to specifying this through the command line options?; > ; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/issues/367#issuecomment-283505108>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AEpkllp8PXmLDDQLJNq-2yRLBoDAfXE-ks5rhf5pgaJpZM4Lq5F->.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/367#issuecomment-284288637:1294,config,config,1294,https://su2code.github.io,https://github.com/su2code/SU2/issues/367#issuecomment-284288637,1,['config'],['config']
Modifiability,"Hi,. first of all thanks for your continuing effort in developing a very powerful CFD software. I noticed a mistake in the implementation of a part of the screen output in ""confing_structure.cpp"" in SU2-7.0.0. In the ""Physical Case Definition"" there are no cases for""Kind_Solver"" as ""INC_EULER"", ""INC_NAVIER_STOKES"" or ""INC_RANS"" and therefore there is no screen output stating which equations are going to be used in the computation. This leaves uncertainty on whether or not the set of equations chosen in the config file is actually implemented. For example in my case I would like to use SA_DDES with INC_RANS but I don't know if this combination is not implemented or just not visible in the screen output due to the mistake I mentioned before (looking at the source code it seems like it is implemented but I may missing something and fixing the screen output would help non expert users). Thanks for your time.; With Best Regards.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/846:512,config,config,512,https://su2code.github.io,https://github.com/su2code/SU2/issues/846,1,['config'],['config']
Modifiability,"Hi,. here is the contents of config.log:. ```; This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by SU2 configure 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ ./configure --prefix=/gshare/work/hpascalj/CodeSU2-master --with-CGNS-lib=/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib --with-CGNS-include=/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = master; uname -m = x86_64; uname -r = 2.6.32-279.el6.x86_64; uname -s = Linux; uname -v = #1 SMP Wed Jun 13 18:24:36 EDT 2012. /usr/bin/uname -p = unknown; /bin/uname -X = unknown. /bin/arch = x86_64; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = unknown; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /opt/xcat/bin; PATH: /opt/xcat/sbin; PATH: /opt/pbs/default/bin; PATH: /opt/pbs/tools/bin; PATH: /usr/lpp/mmfs/bin/; PATH: /gshare/soft/star-ccm+/STAR-View+9.02.007; PATH: /gshare/soft/star-ccm+/STAR-CCM+9.02.007/star/bin; PATH: /opt/xcat/bin; PATH: /opt/xcat/sbin; PATH: /usr/lib64/qt-3.3/bin; PATH: /opt/pbs/default/bin; PATH: /opt/pbs/tools/bin; PATH: /usr/lpp/mmfs/bin/; PATH: /usr/local/bin; PATH: /bin; PATH: /usr/bin; PATH: /usr/local/sbin; PATH: /usr/sbin; PATH: /sbin; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: .; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: . ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2465: checking build system type; configure:2479: result: x86_64-unknown-linux-gnu; configure:2499: checking host system type; configure:2512: result: x86_64-unknown-linux-gnu; configure:2532: checking target system type; configure:2545: result: x86_64-unknown-linux-gnu; configure:2587: checking for a BSD-compatible install; configure:2655: result: /usr/bin/install -c; configure:2666: checking whe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:29,config,config,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,10,['config'],"['config', 'configure']"
Modifiability,"Hi,. i tried to compile SU2 v7.0.1 on Windows 10.; For this i followed your despription in Docs/Build from Source/Build SU2 on Windows. I installed MS MPI and MS MPISDK 10.1.2, MinGW 8.1.0, pkg-config 0.26 - 1 and swigwin 4.0.1. The command for meson is:; python meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled --prefix=""D:\\Programs\\SU2 CFD\\SU2-7.0.1\\bin"". The result is the following:; git command not found. Using fall-back method to init submodules; The Meson build system; Version: 0.52.999; Source dir: D:\Programs\SU2 CFD\SU2-7.0.1; Build dir: D:\Programs\SU2 CFD\SU2-7.0.1\build; Build type: native build; Project name: SU2; Project version: 7.0.1; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: GNU ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: GNU ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Name\AppData\Local\Programs\Python\Python38\python.exe); Run-time dependency MPI for c found: YES; Run-time dependency MPI for cpp found: NO. meson.build:37:2: ERROR: Dependency ""mpi"" not found. Can you help me what is wrong here?; Which settings do you use to compile SU2 on Windows 10? Did you change any meson.build files?. Thank you very much. Kind Regards; KleineKampfzwergin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888:194,config,config,194,https://su2code.github.io,https://github.com/su2code/SU2/issues/888,1,['config'],['config']
Modifiability,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1450:408,Variab,Variable,408,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450,2,"['Config', 'Variab']","['Config', 'Variable']"
Modifiability,"Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1233#issuecomment-804498319:288,config,config,288,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-804498319,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"Hi,; I just had a few (very minor) comments.; Regarding the main contribution, everything makes sense to me and I didn't find any relevant issue.; This is a very nice contribution and the implementation is quite clear, we can go ahead and merge this in soon. Regarding the matrix stuff, perhaps we could start having a new, general, matrix class in Common and then extend it to parallel in future pushes.; It may not be ideal, but at least we'll get started.; I am just afraid that if we leave those potentially useful routines there, in the interpolator, we will soon forget about them (of course it doesn't have to be addressed in this PR but we should really discuss about this). ciao,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-407014370:365,extend,extend,365,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-407014370,2,['extend'],['extend']
Modifiability,"Hi,; I like this idea of self registering classes for our factories, although the instantiation logic is seldom as linear as converting a name to a type... Maybe you could refactor just one of our factories to give us a better idea of what it could look like?. This issue of ""modularizing"" pieces of the code is central to the refactoring of the optimization framework, which will require significant chunks of the code to be exposed to python, so by all means get involved in that (join #refactor_optimization on SU2 Slack and the developer meetings, Wednesdays at 4pm CET). Personally I think this flavour of extensibility is small fish compared to other structural problems we are currently addressing (duplication, code bloat, performance, robustness, etc.) and in my opinion addressing those issues will make it easier to extend the code in this manner, not harder.; Also from the pure C++ side I see no problem with having to modify the code... In so doing the new code is automatically under the same open source license, which to me is as good thing. A couple of practical considerations:; - About your examples, we want fewer drivers, not more. The methods of CVariable, CPoint, and co. need to be inline if the code is to have any semblance of performance.; - I think the majority of the code should still be statically linked, even if some parts of it can be extended by means of custom dynamic libraries, because that will just be less problematic for folks who build from source but are not developers. > The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). It is becoming a thing yes absolutely, although not at the very highest levels of abstraction. > Please, Please, we have to stop using raw pointers like that. It's being done... It takes time and not many people are comfortable doing this kind of refactoring (consider it an invitation :) ).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867:172,refactor,refactor,172,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867,5,"['extend', 'refactor']","['extend', 'extended', 'refactor', 'refactoring']"
Modifiability,"Hi,; I made the Cygwin build installation instruction example. I just checked my SU2_CFD.exe and it is 625MB as well. Nevertheless, I have no clue why this is the case and how to solve that. For reference I attach my config.log file. [config.log](https://github.com/su2code/SU2/files/3483335/config.log)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/754#issuecomment-519654913:217,config,config,217,https://su2code.github.io,https://github.com/su2code/SU2/issues/754#issuecomment-519654913,3,['config'],['config']
Modifiability,"Hi,; I've been recently been unsuccessful in running an inviscid supersonic case in SU2 using infinitely thin surfaces (baffles) and multiblock meshes created in Pointwise in 3D. I was wondering if these features are supported in SU2, as my results with a multiblock mesh so far don't seem to be correct? I've attached a screenshot of my results using a wing with a diamond airfoil, as well as my SU2 config file.; [GitHubQuestion.zip](https://github.com/su2code/SU2/files/6033830/GitHubQuestion.zip). Thanks,; Chinmay; ![image](https://user-images.githubusercontent.com/74565109/108957238-be6c1d00-7636-11eb-956a-c12ea515fc65.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1206:401,config,config,401,https://su2code.github.io,https://github.com/su2code/SU2/issues/1206,1,['config'],['config']
Modifiability,"Hi,; The standard definition of the turbulence intensity is u'/U, and we follow this definition: https://www.cfd-online.com/Wiki/Turbulence_intensity; The papers describing the transition model work with percentages, so we add a factor of 100 internally. The actual freestream value mentioned in the paper of Schubauer and Klebanoff is 0.03%, which would correspond to u'/U=0.0003 (which is also the value in Schubauer & Skramstad); So it looks to me that the value in the config file is too high.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1719#issuecomment-1191848821:473,config,config,473,https://su2code.github.io,https://github.com/su2code/SU2/issues/1719#issuecomment-1191848821,1,['config'],['config']
Modifiability,"Hi. I am using SU2-6.2.0 with PYAMG library to solve RANS equations. l have similar ascii write problem. For initial runs with SU2, i used binary format. Unfortunately, now PYAMG requires only ascii output and l have to sort it out. I compiled with SU2 with openmpi/1.8.8-gcc-4.8.5 using. ./configure --prefix=/truba/home/mesahin/LIB_ALL/SU2-6.2.0+PYAMG -enable-mpi -enable-metis --with-cxx=mpicxx --enable-PY_WRAPPER CXXFLOGS='O3'. Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/477#issuecomment-634412128:291,config,configure,291,https://su2code.github.io,https://github.com/su2code/SU2/issues/477#issuecomment-634412128,1,['config'],['configure']
Modifiability,"Hi. I have some questions about SU2 implementation of classical Runge-Kutta method . According to the wikipedia (https://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods), the formula is as follows; <img width=""430"" alt=""wiki_Runge-kutta"" src=""https://user-images.githubusercontent.com/31647163/88119795-07b54380-cbf4-11ea-8e21-1baeafbc5c6f.png"">. and the implementation in SU2 is:. ``` ; /*--- Hard-coded classical RK4 coefficients. Will be added to config. ---*/; const su2double RK_FuncCoeff[] = {1.0/6.0, 1.0/3.0, 1.0/3.0, 1.0/6.0};; const su2double RK_TimeCoeff[] = {0.5, 0.5, 1.0, 1.0};; ```. Here, I have no question about RK_FuncCoeff `{1.0/6.0, 1.0/3.0, 1.0/3.0, 1.0/6.0}`, however, the RK_TimeCoeff is ` {0.5, 0.5, 1.0, 1.0}`, Shouldn't It be `{1.0, 0.5, 0.5, 1.0} `from the formula?? Did I think something wrong?. Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1053:452,config,config,452,https://su2code.github.io,https://github.com/su2code/SU2/issues/1053,1,['config'],['config']
Modifiability,"Hi. I think there is a bug in the Farfield BC implementation in SU2 v5. ; It is in the file solver_direct_mean.cpp at line number 10446 in the function CEulerSolver::BC_Far_Field. Basically, the boundary state is computed and then the residual is obtained as ; conv_numerics->ComputeResidual(Residual, Jacobian_i, Jacobian_j, config). Could this be a bug?. Shouldn't it be ; conv_numerics->GetInviscidProjFlux(&V_infty[nDim+2], Velocity, &Pressure, &V_infty[nDim+3], Normal, Residual). . Regards; Suman Vajjala",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405:326,config,config,326,https://su2code.github.io,https://github.com/su2code/SU2/issues/405,1,['config'],['config']
Modifiability,"Hi. I'm not sure if this is the best place to post this but there appears to be a problem with the way arguments are handled in the preconfigure.py file within Raven. I am trying to install SU2 with AD support and following the install documentation online, I have the following bash command (I'm running Ubuntu 16.04):. `export CXXFLAGS=""-O3"" && python2.7 ./preconfigure.py --enable-autodiff --prefix=/opt/SU2/SU2v5.0.0 --enable-mpi --with-cc=/opt/openmpi/openmpi-3.0.0/bin/mpicc --with-cxx=/opt/openmpi/openmpi-3.0.0/bin/mpicxx --enable-PY_WRAPPER --with-HDF5-lib=/opt/hdf5/hdf5-1.10.1/lib --with-HDF5-include=/opt/hdf5/hdf5-1.10.1/include --with-ZLIB-lib=/opt/zlib/zlib-1.2.11/lib --with-ZLIB-include=/opt/zlib/zlib-1.2.11/include --with-SZIP-lib=/opt/szip/szip-2.1.1/lib -with-SZIP-include=/opt/szip/szip-2.1.1/include --with-LAPACK-lib=/usr/lib --with-LAPACK-include=/usr/include`. I tested the ordinary 'configure' version of the command first (without AD) and the install seems to work fine, but on trying the above preconfigure.py command, I get the error `configure: error: unrecognized option: '-w=--with-LAPACK-lib'`. Is there some mistake in the string handling of arguments? I've attached a text output an image of error. Please let me know what other information you may need. Regards, Tim. [preconfigure_erro.txt](https://github.com/su2code/SU2/files/1339638/preconfigure_erro.txt). ![preconfigure_error](https://user-images.githubusercontent.com/16842258/30951291-11d2af9a-a45d-11e7-9437-330d33ca2ef1.jpg)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/446:910,config,configure,910,https://su2code.github.io,https://github.com/su2code/SU2/issues/446,2,['config'],['configure']
Modifiability,"Hi. While attempting to run compressible N-S simulation using Peng-Robinsion EoS, I ran into a problem with non-physical solutions. Running SU2_CFD gives the following error multiple times and exits:. ------------------------------ Begin Solver -----------------------------; not physical solution found, h and s input -1.24974 -3.8387; ...; !!! Error: SU2 has diverged. Now exiting... !!! . The simulation which resulted in the error was run at around 313 K and 400 bar, which is in the critical region of the fluid I used (CO2). Repeating the simulation at lower pressures (less than about 100 bar) seems to work fine. In the critical region the EoS has only one real solution, so perhaps the problem is related to finding a root for the EoS in fluid_model_ppr.cpp. Has anyone else encountered the problem?. Relevant configuration options were:. FREESTREAM_PRESSURE= 399E+5; FREESTREAM_TEMPERATURE= 313; REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE. MARKER_RIEMANN= (inlet, TOTAL_CONDITIONS_PT, 400E+5, 313.15, 1.0, 0.0, 0.0); MARKER_NRBC= ( outlet, STATIC_PRESSURE, 395E+5, 0.0, 0.0, 0.0, 0.0). % ---- IDEAL GAS, POLYTROPIC, VAN DER WAALS AND PENG ROBINSON CONSTANTS -------%; FLUID_MODEL= PR_GAS; GAMMA_VALUE= 1.28; GAS_CONSTANT= 188.9221; CRITICAL_TEMPERATURE= 304.1282; CRITICAL_PRESSURE= 7377300; CRITICAL_DENSITY= 480.9911; ACENTRIC_FACTOR= 0.2239",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/398:819,config,configuration,819,https://su2code.github.io,https://github.com/su2code/SU2/issues/398,1,['config'],['configuration']
Modifiability,Hi: please use the SU2_DEF module (with DV_KIND= SURFACE_FILE) to create the new mesh first before running SU2_CFD. Try the attached config file and rename your new coordinates file to 'surface_positions.dat' ; [inv_goland.txt](https://github.com/su2code/SU2/files/2979714/inv_goland.txt),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/661#issuecomment-474048371:133,config,config,133,https://su2code.github.io,https://github.com/su2code/SU2/issues/661#issuecomment-474048371,1,['config'],['config']
Modifiability,"Hi; I also support external libraries usage (no need to repeat the many advantages as it is well described above) but I think we should be very wary of portability issues. For instance in SUMB, PETSc was used for the Krylov solvers and more. While indeed it worked well and in parallel mode, each new implementation was a nightmare. LAPACK/BLAS package, on the other hand, provides a much easier implementation experience. Certainly, this is not the only consideration but it should be taken into account. Currently, resulting from the significant contributions of the members of this developers group, SU2 implementation works like a charm. I think we should strive to conserve this feature, especially if we aim at attracting more users and developers into the community. Reading what I wrote, sounds to me a bit like the concept of the old conservative, trying to hold back the young diligent revolutionaries. I don't like to be in this spot, but still...; Best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459613905:152,portab,portability,152,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459613905,1,['portab'],['portability']
Modifiability,"Hi; Might be a specific problem: Meson and Ninja work well when your system; is connected to the web network. ; However, importing the software to a disconnected network, that also lacks python3, ; make them unavailable. Would you think that it can be possible to conserve the previously configure procedure as an additional installation script? less efficient but always working...; Trying to use the configure from older versions works, but then Make aborts missing; some modules, like CHeatSolverFVM.cpp. Thanks,; Eran",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910:288,config,configure,288,https://su2code.github.io,https://github.com/su2code/SU2/issues/910,2,['config'],['configure']
Modifiability,"Hmm.. you are right that the Cf results look a little different than the ones posted on the V&V page (for both SA and SST). Is there anything else different in the configuration for those cases from the set up for the cases on the V&V page? For the flat plate, I may have used unweighted LSQ for the posted V&V results.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-599241140:164,config,configuration,164,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-599241140,1,['config'],['configuration']
Modifiability,"Hmmm its complaining about Lapack functions but not about Blas functions....; Please post the contents of both openblas.pc files, there might be an issue with how openblas is configured.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631991063:175,config,configured,175,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631991063,1,['config'],['configured']
Modifiability,Hope this would make writing any variables to the solution file easy :),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-282979508:33,variab,variables,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-282979508,1,['variab'],['variables']
Modifiability,How about a quick fix like removing some fields from the output if possible (39 is a lot)? Are there some auxiliary variables apart from the conservatives and time averages that you don't need?. We'll have to look into the MPI issue with INT_MAX.. we will probably hit other snags like this throughout the code as we keep increasing mesh size. I bet there are some int vs. long issues hidden.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-622031229:116,variab,variables,116,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622031229,1,['variab'],['variables']
Modifiability,"I added it to the steady rigid case flow config file by; ```; VOLUME_OUTPUT= (GRID_VELOCITY, COORDINATES, SOLUTION, PRIMITIVE,VORTEX_IDENTIFICATION); ```; I get the following output; ```; Info: Ignoring the following volume output fields/groups:; GRID_VELOCITY; Volume output fields: COORDINATES, SOLUTION, PRIMITIVE, VORTEX_IDENTIFICATION; ```; I ignored this and copied the restart files to my FSI case and the case still diverged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1287#issuecomment-843276449:41,config,config,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-843276449,1,['config'],['config']
Modifiability,"I added the option AUTO_DIFF=YES/NO to use the AD based projection also for the cont. adjoint. If you use SU2_DOT_AD then it is enabled by default. So setting this config option is only required if you run the python scripts, since we need to determine somehow what binary should be called (SU2_DOT or SU2_DOT_AD).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/239#issuecomment-184609929:164,config,config,164,https://su2code.github.io,https://github.com/su2code/SU2/pull/239#issuecomment-184609929,1,['config'],['config']
Modifiability,"I added the tutorial cases to the regression tests. They only do **one** iteration, just to check that the config options are correct. Everything else should be covered by the other regression tests already.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-355153943:107,config,config,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-355153943,1,['config'],['config']
Modifiability,"I added this since we might have 3 directions per FFD control point. Instead of specifying them separately in DEFINITION_DV you can just set the direction of movement to (0,0,0) and it will expand to 2 or 3 variables in 2D or 3D, respectively.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/378#issuecomment-308403033:207,variab,variables,207,https://su2code.github.io,https://github.com/su2code/SU2/issues/378#issuecomment-308403033,1,['variab'],['variables']
Modifiability,"I agree with @pcarruscag , we should try to merge options. I have been thinking for quite some time that we should make the mesh deformation a full solver on its own and homogenise all the options and procedures, be able to define different boundary conditions, etc. It should be based on the linear elasticity but have it's own variable definition, so it's usable out of the box with the adjoint solver. I have a preliminary implementation in [`feature_mesh_solver` ](https://github.com/su2code/SU2/tree/feature_mesh_solver), but I would need some help with that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/623#issuecomment-456293206:329,variab,variable,329,https://su2code.github.io,https://github.com/su2code/SU2/pull/623#issuecomment-456293206,2,['variab'],['variable']
Modifiability,"I agree, but some do [pick up](https://github.com/su2code/SU2/commits/develop/TestCases/disc_adj_fsi/Airfoil_2d/config.cfg) those changes, just not all of them. Anyway, you'll notice I put an assert for the condition that was causing the problem instead of an ""mpi error"". That is inline with the philosophy that errors/exceptions are to deal with user errors and asserts to help debugging (they are ignored with -DNDEBUG). I can off-course change it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/751#issuecomment-518536145:112,config,config,112,https://su2code.github.io,https://github.com/su2code/SU2/pull/751#issuecomment-518536145,1,['config'],['config']
Modifiability,"I also agree that there should be an explicit option, and that it should; default to the current behavior, however it may be more intuitive for the; user to specify the actual step size- people who don't have Francisco's; extensive experience will not intuit that the finite difference step will; be 1/100 of the reference length, and may have difficulty figuring that out; without help. I suggest something like FD_STEP_SIZE, either way with; documentation explaining it.; -H. On Mar 6, 2017 5:26 PM, ""juanjosealonso"" <notifications@github.com> wrote:. > Agree with Francisco: the best solution is to have an input parameter that; > can be used to scale the FD step size. I would suggest FD_REFERENCE_LENGTH; > to be created (and possibly specified in the config file). If; > FD_REFERENCE_LENGTH is not specified, then it could default to; > REF_LENGTH_MOMENT.; >; > Best,; >; > Juan; >; > On Mar 5, 2017, at 6:35 PM, Francisco Palacios <notifications@github.com<; > mailto:notifications@github.com>> wrote:; >; > Hi,; >; > Yep, I changed that. I know that from the math point of view it doesn’t; > make a lot of sense but, from the practical point of view, it is useful.; >; > There are some cases, in which computing gradients using finite; > differences is the only choice. And with the shape_optimization script it; > was not possible to control the step size for the finite differences. The; > option for step size was only in finite_differences.py.; >; > The step size is scaled with the reference length because from the; > practical point of view, I have found that the size of the aircraft, wing,; > airfoil, is important to determine a meaningful step size. e.g. should we; > use the same step for an aircraft with a MAC of ~150in than for an airfoil; > with a chord of 1in.; >; > Remember that most of the times we are using FD when the adjoint is not; > converging… so we have bad convergence of the direct problem (including; > some level of unsteadiness that we want to filter with the ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/367#issuecomment-284314148:757,config,config,757,https://su2code.github.io,https://github.com/su2code/SU2/issues/367#issuecomment-284314148,2,['config'],['config']
Modifiability,"I also like the idea of renaming to ""SOLVER"" but I would also say to avoid as much churn as possible in the conditionals throughout the code... looks like a wash when reading through the PR changes (almost as many +'s as -'s). Unless the changes are going to make something much more flexible or clear, I would say just keep Kind_Regime and set it in config postprocessing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/756#issuecomment-520705829:284,flexible,flexible,284,https://su2code.github.io,https://github.com/su2code/SU2/pull/756#issuecomment-520705829,4,"['config', 'flexible']","['config', 'flexible']"
Modifiability,"I also made the von Karman constant a config option, together with the ""B"" constant. The von Karman constant is used in other places as well, but maybe its best to keep lets say all SA or SST coefficients as a complete set of coefficients and not have only one coefficient change value.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1204#issuecomment-801691188:38,config,config,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-801691188,1,['config'],['config']
Modifiability,"I also worked on refactoring (and checking) the stress tensors. So if there's any questions, feel free to ping me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1028#issuecomment-647037294:17,refactor,refactoring,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/1028#issuecomment-647037294,1,['refactor'],['refactoring']
Modifiability,"I am a little partial because I wrote it, but this https://github.com/su2code/FADO should do any kind of optimization you want.; Multiple operating points, manipulations of variables, running everything simultaneously... But I guess for something simple it is a little more work to setup.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1279#issuecomment-833754354:173,variab,variables,173,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-833754354,2,['variab'],['variables']
Modifiability,"I am a new developer so I might need some help. I have added some expressions based upon the discussion on cfdonline: http://www.cfd-online.com/Forums/su2/129165-add-source-terms-user-defined-boundary-condition-set-up-transient-simulation.html.; Based upon that discussion, I have allocated the already defined class in definition_structure.cpp:; numerics_container[iMGlevel][FLOW_SOL][SOURCE_FIRST_TERM] = new CSource_JouleHeating(nDim, nVar_Flow, config);. Also, I have referred to the implementation of source term of Wind Gust. To get started, I am trying to implement a Yes/No option to include Joule Heating in the configuration file. I have added the following statements:; config_structure.inl: inline bool CConfig::GetJoule_Heating(void) {return Joule_Heating}; config_structure.hpp: a flag: bool Joule_Heating and bool GetJoule_Heating(void); config_structure.cpp: addBoolOption(""JOULE_HEATING"", Joule_Heating, false). On compiling, I get an error stating that ""JOULE_HEATING"" is an invalid option name. Please let me know where I am going wrong.; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/230#issuecomment-172099950:449,config,config,449,https://su2code.github.io,https://github.com/su2code/SU2/issues/230#issuecomment-172099950,2,['config'],"['config', 'configuration']"
Modifiability,"I am adding regressions for all the convective numerical schemes in NEMO using the implicit solver. All cases run on an inviscid wedge at the moment, but I am happy to make a new folder in the regression. . ## Related Work; This will allow us to better track our changes and is the start of a more comprehensive set of regression tests for the Nemo solver coming in the future (boundary conditions, etc.) ; This directly relates to #1773 to eventually refactor the AUSM schemes. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1885:452,refactor,refactor,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/1885,1,['refactor'],['refactor']
Modifiability,"I am an SU2 user simulating config_incomp_turb_sa.cfg. I would like to define a UDF to simulate an airfoil vibration dynamics.; the original configuration feature is:; ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= (0.25 0.0 0.0); PITCHING_OMEGA= (0.0 0.0 14.91675); PITCHING_AMPL= (0.0 0.0 8.0); ```; The pitching amplitude is a fixed number. however, in my simulation task, i would like to build a UDF to show an increasing pitching amplitude, which depends on the value of the current timestep. I would like to know if there is a related testcase that shows how a UDF is written. Thank you very much.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1673:141,config,configuration,141,https://su2code.github.io,https://github.com/su2code/SU2/issues/1673,1,['config'],['configuration']
Modifiability,"I am currently testing an expression parser to define custom fields in the config file. For this I modified the handling of the curly brackets {}. They now declare a ""literal"" interpretation, which means everything inside is considered as one string and will not be split while strings are tokenized when reading the config file. . When you declare the output fields you can then use expressions involving all available fields, e.g. `SCREEN_OUTPUT= INNER_ITER, RMS_DENSITY, {sqrt(LIFT)/DRAG**2}`. At the moment only inline expression are possible. But I am considering also to use a file to define more complex functions. The goal is to make that framework more flexibel to that we can use it also to define custom integrals over markers, functions defined on the whole flow field, custom boundary conditions, inlet conditions and so on. . Important to note is that I already differentiated the parser, which means everything that is defined can be used also for the adjoint solver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913#issuecomment-602276632:75,config,config,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-602276632,2,['config'],['config']
Modifiability,I am fine with this request from a conceptual point of view. Once we complete the alignment with develop and the full integration with Mutation++ we might need to review the config structure according to the discussions we had sometime ago. I am attaching here a snapshot illustrating where we would like to head with it. We will need to review it especially considering the efficiency of the approach that uses Mutation++ but allow introducing a custom mechanism of reaction in CHEMKIN format.; ![config-01](https://user-images.githubusercontent.com/22177881/83354211-4561c280-a34f-11ea-9920-f6f066b72d14.png); ![config-02](https://user-images.githubusercontent.com/22177881/83354220-47c41c80-a34f-11ea-9022-b49f132abf88.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1010#issuecomment-636475242:174,config,config,174,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-636475242,3,['config'],"['config', 'config-']"
Modifiability,"I am having issues with grid partitioning for a large case I am trying to run in parallel. I have a 3D grid for a sharp cone with 86 million cells, and I suspect that I am running into a memory issue with ParMETIS. I get a series of errors of the form ""PARMETIS ERROR: Poor initial vertex distribution. Processor 384 has no vertices assigned to it!"" and then this message at the end of partitioning:. ""Finished partitioning using ParMETIS (0 edge cuts).; Communicating partition data and creating halo layers.; 0 interior elements including halo cells.; 0 vertices including ghost points."". Naturally, when the case tries to run, it then gives me a segfault. I have tried running the case with different numbers of processors (512, 864, 1024) and I have also tried leaving each node with 50% of its cores idle for more available memory in each node (maintaining the same overall number of active processors) but I still seem to get the same problem. Any suggestions?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/479:502,layers,layers,502,https://su2code.github.io,https://github.com/su2code/SU2/issues/479,1,['layers'],['layers']
Modifiability,"I am having some trouble in getting the Fixed CL mode to work properly with the new Output structure and SingleZoneDriver was wondering if anyone had some advice. . The way the fixed Cl mode works is that it first converges the solution to the target CL that is set in the config options. After that, it increases the `AOA` by 0.001 and runs for `ITER_DCL_DALPHA` iterations to determine the gradient `dCL_dAlpha`. This is essentially a finite differencing step to calculate gradients such as dCD_dCL so that it can be added to the objective function if the discrete adjoint is run in the fixed_cl mode. Currently, both the fixed cl convergence and the finite differencing occurs within the one call of `CFluidIteration::Solve` . This PR just changes how the fixed_CL mode converges to the `TARGET_CL` value and doesn't change anything about how the finite differencing step is performed. . My issue is to do with how to output the correct solution (the state before the finite differencing step) at the end of the simulation. Both the fixed cl convergence and the finite differencing occur within the one call of `CFluidIteration::Solve`. But the final solution output is controlled by the `CSinglezoneDriver::Output`. But by the time this is called the solution is at the state after the finite difference step has been taken and the CL is no longer matched. . The proper way to do it in this new output structure/SingleZoneDriver format would be to run the fixed CL mode to convergence using the SingleZoneDriver (including doing all the outputs from the `CSinglezoneDriver::Output` and then running the finite difference after that. But that wouldn't be possible without putting the if (fixed_cl) statement in either the SingleZoneDriver or in SU2_CFD, both of which are much higher level, and shouldn't have a problem specific if statement. The other way to do it would be to force the output structure to write the solution files before the finite differencing step (within the CFluidIteration) ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-539148332:273,config,config,273,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-539148332,1,['config'],['config']
Modifiability,"I am not entirely sure, but as far as I know SU2 has not been tested on cygwin. So if the setting of the SU2_RUN environment variable does not solve the problem, could you test it without python? You do this using the following command. mpirun -np <# of ranks> <path to SU2 bin directory>/SU2_CFD.exe inv_ONERAM6.cfg. It could be that instead of mpirun you must use mpiexec. That depends on your MPI implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/521#issuecomment-378164049:125,variab,variable,125,https://su2code.github.io,https://github.com/su2code/SU2/issues/521#issuecomment-378164049,1,['variab'],['variable']
Modifiability,"I am not so familiar with turbomachinery but it looks like all spanwisesection initialization is done in CPhysicalGeometry.cpp. I think it initializes in the function ComputeNSpan. This function is called in CDriver like this:; ```; geometry[iZone][INST_0][MESH_0]->ComputeNSpan(config[iZone], iZone, INFLOW, true);; geometry[iZone][INST_0][MESH_0]->ComputeNSpan(config[iZone], iZone, OUTFLOW, true);; ```; So you should get an initialized value for inflow and outflow.; Maybe you can check what is going on there and see if this function does what is expected.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2203#issuecomment-1899157368:279,config,config,279,https://su2code.github.io,https://github.com/su2code/SU2/issues/2203#issuecomment-1899157368,2,['config'],['config']
Modifiability,"I am not sure about why periodic boundaries are allowed to deform. It doesn't seem to be a good idea unless there is a way to deform its periodic pair in the same way. As for @auzbaig's question about why SLSQP converges in one step: There is a huge difference in the magnitude of the objective function, O(1) and the gradient O(-11). I am guessing the optimizer doesn't think it can reduce the function value any further since the gradient with respect to the DVs is so small. . To change the relative magnitudes of the objective and gradient, you need to change the DV scaling. This isn't intuitive and is one of the things we are hoping to address in #922 . Check out the `obj_df` function in `SU2_PY/SU2/eval/design.py` (line 386 in the develop branch). There you see how the gradient is scaled: . `grad[k] = grad[k] * sign * scale * global_factor / dv_scl` . Here `scale` is the objective function scaling factor, `global_factor` is what you specify for the `OPT_GRADIENT_FACTOR`, the `dv_scl` is the design variable scaling. . So if you wanted to bring the gradient norm to O(1), you'd have to specify a DV scaling of 1e-11. Usually a gradient norm of O(-6) is what seems to work best with SLSQP.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-628724163:1013,variab,variable,1013,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-628724163,2,['variab'],['variable']
Modifiability,"I am not sure whether this is the correct place to mention this, but when I build a parallel Windows version, I have to change a few things in order to make things work. I use the MinGW using the instructions given in http://www.math.ucla.edu/~wotaoyin/windows_coding.html. The changes in METIS and ParMETIS are minor and can be handled via an #ifdef. Not sure about the mkdir command in geometry_structure.cpp though, which I just commented in order to make it work. Below are what I had to change in the develop version. git diff Common/src/geometry_structure.cpp; diff --git a/Common/src/geometry_structure.cpp b/Common/src/geometry_structure.cpp; index 80eb3a272..fa0b7d144 100644; --- a/Common/src/geometry_structure.cpp; +++ b/Common/src/geometry_structure.cpp; @@ -11060,11 +11060,6 @@ void CPhysicalGeometry::SetTurboVertex(CConfig *config, unsigned short val_iZone; std::string sPath = ""TURBOMACHINERY"";; mode_t nMode = 0733; // UNIX style permissions; int nError = 0;; -#if defined(_WIN32); - nError = _mkdir(sPath.c_str()); // can be used on Windows; -#else; - nError = mkdir(sPath.c_str(),nMode); // can be used on non-Windows; -#endif; if (nError != 0) {; cout << ""TURBOMACHINERY folder creation failed."" <<endl;; }. git diff externals/metis/GKlib/gk_arch.h; diff --git a/externals/metis/GKlib/gk_arch.h b/externals/metis/GKlib/gk_arch.h; index 6735c4d7c..611b7dc87 100644; --- a/externals/metis/GKlib/gk_arch.h; +++ b/externals/metis/GKlib/gk_arch.h; @@ -41,7 +41,7 @@; #endif; #include <inttypes.h>; #include <sys/types.h>; - #include <sys/resource.h>; +//#include <sys/resource.h>; #include <sys/time.h>; #endif. git diff externals/metis/GKlib/gk_getopt.h; diff --git a/externals/metis/GKlib/gk_getopt.h b/externals/metis/GKlib/gk_getopt.h; index 4bb86115f..597c0802a 100644; --- a/externals/metis/GKlib/gk_getopt.h; +++ b/externals/metis/GKlib/gk_getopt.h; @@ -52,11 +52,11 @@ struct gk_option {. /* Function prototypes */; -extern int gk_getopt(int __argc, char **__argv, char *__sho",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/332#issuecomment-323265729:841,config,config,841,https://su2code.github.io,https://github.com/su2code/SU2/pull/332#issuecomment-323265729,1,['config'],['config']
Modifiability,"I am running an unsteady simulation where I have a marker with an imposed velocity and an object in the domain that moves according to some law. Think of a translating (or plunging) sphere in a cavity flow. The related options in my config file are:. SURFACE_MOVEMENT= (MOVING_WALL, DEFORMING); MARKER_MOVING= (TOP_WALL, SPHERE); SURFACE_TRANSLATION_RATE= (100 0 0, 0 1 0). With those options the MOVING_WALL conditions at the top wall is completely disregarded. Instead, it gets imposed correctly if I omit the deforming marker.; The reason can be traced back to the way the velocity is imposed in the heatflux (or isothermal) boundary condition, where the grid velocity is used to strongly impose that BC. Nothing wrong with that if either only one between MOVING_WALL or DEFORMING markers is used. In the first case the grid velocity is set in CGeometry::SetWallVelocity(), in the second case is computed via finite differencing in CGeometry::SetGridVelocity(). If both markers are present, the call to CGeometry::SetGridVelocity() overwrites the values set by CGeometry::SetWallVelocity() at the walls, and if a wall is not actually moving (like the top wall in a cavity problem) the value is set to zero. Now, fixing this should be relatively easy (I hardcoded some tests that look like they are working), but I want to ask what is the preferred way to fix this problem. We either call CGeometry::SetWallVelocity() after CGeometry::SetGridVelocity() at each time step, or explicitly treat the MOVING_WALL markers differently inside the no-slip boundary conditions. My preliminary implementation was along the lines of the latter option, but I wanted to ask before proceeding further. I will open a WIP pull request as soon as I finish up some tests.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2166:233,config,config,233,https://su2code.github.io,https://github.com/su2code/SU2/issues/2166,1,['config'],['config']
Modifiability,"I am trying to get polar using my own script. I don't want to produce a config file for each case as in the polar script. I have only 2 markers as in the NACA0012 case with a compressible solver. Normally even if there are some restrictions about AoA I expect that the flow angle should change but also did not observe any change in flow angle. The case is steady. My script is very simple:. ```python; #!/usr/bin/env python3; import sys. import numpy as np; import pysu2; import SU2; from mpi4py import MPI. def setup_mpi():; if ""mpi4py.MPI"" in sys.modules:; have_mpi = True; comm = MPI.COMM_WORLD; status = MPI.Status(); myid = comm.Get_rank(); else:; have_mpi = False; comm = None; status = None; myid = 0; return have_mpi, comm, status, myid. class SU2Interface:; def __init__(self, config_filename):; self.have_mpi, self.comm, self.status, self.myid = setup_mpi(); self.FluidSolver = pysu2.CSinglezoneDriver(config_filename, 1, self.comm); ; def setAoA(self,angle,marker):; if marker in self.FluidSolver.GetMarkerIndices().keys(): ; markerID = self.FluidSolver.GetMarkerIndices()[marker]; self.FluidSolver.SetInletAngle(0,angle); self.FluidSolver.BoundaryConditionsUpdate(); ; def runSolver(self):; self.comm.barrier(); # run solver; self.FluidSolver.Preprocess(0); self.FluidSolver.Run(); self.FluidSolver.Postprocess(); if self.myid == 0:; print(f"" AOA: {self.FluidSolver.GetOutputValue('AOA')}""); print(f"" LIFT : {self.FluidSolver.GetOutputValue('LIFT')}""); print(f"" DRAG : {self.FluidSolver.GetOutputValue('DRAG')}""); self.comm.barrier(); ; def finalize(self):; self.FluidSolver.Finalize(); . for angle in np.linspace(0,10,5):; cfd_interface = SU2Interface('NACA0012.cfg'); cfd_interface.setAoA(angle,'farfield'); cfd_interface.run_solver(); cfd_interface.finalize(); ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2027:72,config,config,72,https://su2code.github.io,https://github.com/su2code/SU2/issues/2027,1,['config'],['config']
Modifiability,"I am trying to get the Dynamic FSI tutorial to work and have rebuilt SU2 for the python wrapper, as well as install all dependencies, including mpi4py, petsc and petsc4py. I am getting the following error and the **_fsi_computation.py_** file is showing that the **_allMarkersID_** variable has no attribute for **_keys_**. I am running the case with Ubuntu 20.04 with openmpi and python 3.8. Can someone please let me know what is causing this issue/ bug?. Traceback (most recent call last):; File ""/usr/lib/python3.8/runpy.py"", line 194, in _run_module_as_main; return _run_code(code, main_globals, None,; File ""/usr/lib/python3.8/runpy.py"", line 87, in _run_code; exec(code, run_globals); File ""/usr/local/lib/python3.8/dist-packages/mpi4py/__main__.py"", line 7, in <module>; main(); File ""/usr/local/lib/python3.8/dist-packages/mpi4py/run.py"", line 198, in main; run_command_line(args); File ""/usr/local/lib/python3.8/dist-packages/mpi4py/run.py"", line 47, in run_command_line; run_path(sys.argv[0], run_name='__main__'); File ""/usr/lib/python3.8/runpy.py"", line 265, in run_path; return _run_module_code(code, init_globals, run_name,; File ""/usr/lib/python3.8/runpy.py"", line 97, in _run_module_code; _run_code(code, mod_globals, init_globals,; File ""/usr/lib/python3.8/runpy.py"", line 87, in _run_code; exec(code, run_globals); File ""/path/to/folder/SU2/SU2_PY/fsi_computation.py"", line 259, in <module>; main(); File ""/path/to/folder/SU2/SU2_PY/fsi_computation.py"", line 165, in main; FSIInterface.connect(FSI_config, FluidSolver, SolidSolver); File ""/path/to/folder/SU2/SU2_PY/FSI_tools/FSIInterface.py"", line 314, in connect; if allMovingMarkersTags[0] in allMarkersID.keys():; AttributeError: 'tuple' object has no attribute 'keys'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2129:282,variab,variable,282,https://su2code.github.io,https://github.com/su2code/SU2/issues/2129,1,['variab'],['variable']
Modifiability,"I am trying to install the newest version of SU2 on our computing cluster; previously I have been running SU2 v6.2. I have successfully installed swig:; ```; $ swig -version. SWIG Version 2.0.10. Compiled with g++ [x86_64-redhat-linux-gnu]. Configured options: +pcre; ```; When I installed mpi4py, I had to install it with the `--user` flag: `$ pip install mpi4py --user`. I then edited my bash file to include the new python path. I have since run into the following error when trying to run `./meson.py`. I am using Python 3.6.8. **Meson Output**; ```; $ python3 ./meson.py build; ninja executable not found. Building ...; bootstrapping ninja...; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlini",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1042:241,Config,Configured,241,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042,1,['Config'],['Configured']
Modifiability,"I am trying to run again the SWBLI V&V case on the SU2 page. However, as it is provided, it does not work with the SU2 standard boundary conditions. In particular, it always diverges due to NaN residuals in the X-Momentum equation. However, when I use the BCs from the NASA TMR page it works just fine (although only the v2003m model). . Here are the results of the computations performed. . Three configs are used:; 1 - With dimensionless limits $k_{lim} = 10^{-20}$ and $w_{lim} = 10^{-10}$.; 2 - Without dimensionless limiters.; 3 - With dimensionless limits $k_{lim} = 10^{-30}$ and $w_{lim} = 10^{-20}$. I am reporting the Skin Friction Coefficient on the lower wall against the Experimental results and the trend of the residual for $\rho$ during the simulations. Five different meshes have been considered. ![ComparisonNewBCsResiduals](https://github.com/user-attachments/assets/d84d7a23-e173-449a-9968-8d8d49b6000f). ![ComparisonNewBCsSFC](https://github.com/user-attachments/assets/243c55c6-e9c7-4335-b889-67244fa81e6b). The solutions are pretty much identical for the same mesh level, but the cases with the config 3 achieved convergence across all of the meshes. It is interesting how, on finer meshes, the use of dimensionless limits (config 1) actually had worst convergence than the one with std limits (config 2) (up until the finest mesh, where config 2 diverges). I am going to try to perform the simulations also with the non m variants of the SST model and the full production term. It may require some work since all of the occurrences of the ""ComputeStressTensor"" have to be changed. Ideally I think that it should be computed only once and then used that value for all of the other instances. I will focus only on the V2003 model for now as it is the only one that does not diverge.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2325316937:398,config,configs,398,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2325316937,5,['config'],"['config', 'configs']"
Modifiability,"I am trying to run an axi-symmetric case with a time stepping scheme (basically SOD's problem), which fails in CSourceAxisymmetric_Flow::ComputeResidual. The reason is that the boolean implicit is determined as follows. bool implicit = (config->GetKind_TimeIntScheme_Turb() == EULER_IMPLICIT). However, this must be config->GetKind_TimeIntScheme_Flow, right?. Furthermore, the small y-coordinate case will also fail, because there is no test whether an implicit computation takes place. I can correct this, if somebody can confirm this is indeed a bug. Edwin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/454:237,config,config,237,https://su2code.github.io,https://github.com/su2code/SU2/issues/454,2,['config'],['config']
Modifiability,"I am using SU2 V5. I have been using SU2 for less than 6 months now and the SU2_SOL command doesn't work in parallel for me, it gives a segmentation fault error. Otherwise, I managed to run it in serial as of yesterday but I have to change restart files names to solution file names and make sure the config file restart input matches the first iteration file name.; Secondly, by interval I meant solutions between one iteration and another. For instance, when I want Paraview output from between iterations 10000 and 20000 with steps of 500 iterations, how do I proceed? I think WRT_SOL_FREQ_DUALTIME only lets me define 500 as the step size. How do I input the starting and ending iterations for postprocessing?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/133#issuecomment-324236681:301,config,config,301,https://su2code.github.io,https://github.com/su2code/SU2/issues/133#issuecomment-324236681,1,['config'],['config']
Modifiability,"I am using SU2 v7.0.6 to do turbomachinery simulations. I am using a radial compressor. There are points in my flow field that show unexpected values of temperature and density, which also makes mach values at those points to be abnormal. There is a sudden change at the trailing edge in my geometry. These points are located right at the trailing edge of my blade and only at these points I see abnormal density and temperature values. I made sure that the velocity of the blade was correctly set. I am sharing a sectional close-up of the trailing edge of my blade with the mesh at that region being visible. . ![teTipMach](https://user-images.githubusercontent.com/66836581/127540972-80cf9914-d6e9-4c9a-af48-aa48478d2c09.png). I am using SST turbulence model. I have simulated a specific case without turbulence to see if it was the issue and the same behavior was present so, the turbulence model does not seem to induce this issue. I have shared my configuration file with numerical information redacted, only to show which markers and settings I am using. Currently I can't share my mesh file. [Configuration.txt](https://github.com/su2code/SU2/files/6902770/Configuration.txt). This issue is present when I am only using basic Roe scheme with MUSCL option turned off. If I turn on MUSCL option, the density and temperature values at these points become even more unnatural and diverge my simulation. - OS: [ Linux (Ubuntu 18.04.5)]; - C++ compiler and version: [g++ (GCC) 7.5.0]; - MPI implementation and version: [OpenMPI 2.1.1]; - SU2 Version: [v7.0.6]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1337:953,config,configuration,953,https://su2code.github.io,https://github.com/su2code/SU2/issues/1337,3,"['Config', 'config']","['Configuration', 'configuration']"
Modifiability,"I am using SU2 version 3.2.8. I have tried all the steady-state Euler and Navier-Stokes test cases and they worked fine. However, none of the demos for Rotating (NACA and CAradonna) are working. Both are diverging. I have decreased the Courant number from 4 to 2 and increased the number of implicit iterations. There is still divergence. In the cfg file, I removed all the variables related to the dynamic mesh motion nad put a freestream of 0.8. SU2 did not diverge. Is there a specific setting to put in the cfg file in order to get convergence for the Rotating test cases",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/167:374,variab,variables,374,https://su2code.github.io,https://github.com/su2code/SU2/issues/167,1,['variab'],['variables']
Modifiability,"I am wondering what it would take to adapt SU2 to model the flow of (thermally/calorically) non-ideal gases where cp, gamma, etc. vary with the state and for which the relations R = Cp - Cv, H = Cp * T, etc. are not valid. . Do all the computations of flux jacobians etc. formulated in terms of gamma already rely on the ideal gas (or polytropic) assumption? . Is this sort of thing considered unimportant since SU2 is mainly intended for aerodynamics or would it be too demanding for the solver to converge reliably?. To give a ""simple"" example where this would be useful: A converging-diverging nozzle expanding the refrigerant r134a from around 24 bar to 3 bar. Only if gamma is set to the throat value the choked flow rate will be fairly correctly predicted but the outlet temperature will then be very far below the isentropic 1D result with a real EoS. This seems to have consequences not only for the temperature field but also for the performance certainly of more complex devices.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1065:37,adapt,adapt,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065,1,['adapt'],['adapt']
Modifiability,"I attach my `pkgconfig` file for `ompi-cxx.pc` . Note the `Libs.private` line, which correctly states dependencies, but it seems to be ignored by the SU2 build system:. ```; # Copyright (c) 2010 Cisco Systems, Inc. All rights reserved.; # Copyright (c) 2016 IBM Corporation. All rights reserved.; #; Name: Open MPI; Description: Portable high-performance MPI implementation; Version: 4.0.2; URL: http://www.open-mpi.org/; #; prefix=/Users/cesss/OpenMPI/4.0.2; exec_prefix=${prefix}; includedir=${prefix}/include; libdir=${exec_prefix}/lib; pkgincludedir=${includedir}/openmpi; #; # Note that -lopen-pal and all the EXTRA_LIBS are only necessary when; # static linking (they're pulled in by libopen-rte.so's implicit; # dependencies), so only list these in Libs.private.; #; Libs: -L${libdir} -lmpi; Libs.private: -lopen-rte -lopen-pal -lm -lz ; #; Cflags: -I${includedir}; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/867#issuecomment-583904437:329,Portab,Portable,329,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-583904437,1,['Portab'],['Portable']
Modifiability,"I believe I have the solution. SU2 is downloading and installing a fixed version of meson, which is now outdated. I believe this is set by the `sha_version_meson` in the `init.py` file in the meson_scripts folder?. The update to meson that accounts for Python3.8 was made in December, which is after the release of the version SU2 is using. Can we update the meson version we are downloading and using with `./meson.py`? Is this as easy as just changing the `sha_version_meson` variable?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631593655:478,variab,variable,478,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631593655,1,['variab'],['variable']
Modifiability,"I believe the viscous components of a lot of bcs are commented out and can probably be removed at this point. I'm not even sure if they are formulated properly for NEMO problems. I think BC_Inlet can be removed. Or all the commented code can be removed with just an error message. Regarding the outlet boundaries, supersonic outlet does seem to be redundant. However, many validation cases use a supersonic outlet, regardless of boundary layers (ASWBLI), so it may be fine to keep.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1368248064:438,layers,layers,438,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1368248064,1,['layers'],['layers']
Modifiability,"I believe this happened because of the Metis version. I had something similar already, when I was using the 5.0.3 version, and changing to the 4.0.3 worked for me. . How can I make the auto-configure to use the the 4.0.3 source files instead of provided library which seems to be the 5.0.3, and build the suite to see whether it will work in parallel with cgns format mesh or not? I tried to edit the m4/metis.m to use the 4.0.3 precompiled header; however, it didn't worked. Any suggestions?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/40#issuecomment-50249870:190,config,configure,190,https://su2code.github.io,https://github.com/su2code/SU2/issues/40#issuecomment-50249870,1,['config'],['configure']
Modifiability,"I believe this is the section you're talking about:; https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/SU2_CFD/src/solvers/CNSSolver.cpp#L552-L559. Without understanding the structure of the Jacobian (and the overall solver) it's a bit hard for me to understand what's going on here. But if these contributions cause this issue than it should not occur when a Transfer_coefficient of 0.0 is specified, right? I tried that (by setting the BC in the config file accordingly), but the convergence issues remain.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1371206301:475,config,config,475,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1371206301,1,['config'],['config']
Modifiability,I believe this was fixed with the new config file parsing code.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/15#issuecomment-44468189:38,config,config,38,https://su2code.github.io,https://github.com/su2code/SU2/issues/15#issuecomment-44468189,1,['config'],['config']
Modifiability,"I build mine for parallel with OpenMP and then use the environment variable; OMP_NUM_THREADS. On Mon, 10 Feb 2020, 14:41 cesss, <notifications@github.com> wrote:. > *Is your feature request related to a problem? Please describe.*; > I'm going to build SU2 with PaStiX, which requires BLAS built in serial; > mode (not parallel). So, I must build OpenBLAS as sequential for PaStiX.; >; > However, SU2 also makes use of BLAS... but... what kind of build for; > OpenBLAS, sequential or parallel?; >; > It's not a subtle thing, because things can go wrong (or lose a lot of; > performance) if it's built in a way different to what SU2 expects.; >; > *Describe the solution you'd like*; > Just mention it in the build instructions where you mention that OpenBLAS; > can be used by SU2.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/869?email_source=notifications&email_token=AJCOXN5ODRHEGDIWPFF6YITRCFRS3A5CNFSM4KSPLSO2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IMIWASA>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN7HGYWRNCWPPNOLHKTRCFRS3ANCNFSM4KSPLSOQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/869#issuecomment-584254305:67,variab,variable,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/869#issuecomment-584254305,1,['variab'],['variable']
Modifiability,"I built it with OpenMPI v2.1.1 in combination with gnu compilers, version 7.0.1, and all debug flags enabled. Apart from a lot of warnings in ParMETIS and CGNS, I also get the following warnings. ../src/geometry_structure.cpp:16468:103: warning: variable ‘SemiSpan’ set but not used [-Wunused-but-set-variable]; su2double Angle, MinAngle, MaxAngle, dAngle, *Area, *MaxThickness, *ToC, *Chord, *LERadius, *Twist, SemiSpan;. ../src/output_structure.cpp:16249:46: warning: variable ‘Energy’ set but not used [-Wunused-but-set-variable]; Velocity[3], Velocity2, MassFlow, Density, Energy, Area, AxiFactor = 1.0, SoundSpeed, Vn, Weight = 1.0;. ../src/output_structure.cpp:16253:13: warning: unused variable ‘Gamma_Minus_One’ [-Wunused-variable]; su2double Gamma_Minus_One = Gamma - 1.0;. ../src/output_structure.cpp:16256:18: warning: unused variable ‘nVar’ [-Wunused-variable]; unsigned short nVar = solver->GetnVar();. However, these are from an earlier merge. I already took care of them in feature_hom, so I suppose it can wait until we merge that branch into develop. So it is good to go as far as I am concerned.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-354407661:246,variab,variable,246,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-354407661,8,['variab'],['variable']
Modifiability,"I came across this when I was working on a mesh generation program that generates an extruded boundary layer. I had checks in the program to make sure I was generating elements of positive volume and that they weren't self intersecting. While some of the elements were very badly skewed, I knew I didn't want the elements to be reoriented. However, SU2 reorients several of the prisms and tries to reorient some of the pyramids as well (which isn't a defined operation in SU2). . This is why in my particular case it was easier for me to just turn off the feature. . In general though, I think that the reorientation check could be a bit better. Currently for the prism element for example, it does a volume like calculation using the top and bottom triangles separately, and reorients if either one is negative. Obviously if only one of these calculations is negative, by reorienting, the other calculation would become negative. Similar things are done for pyramids and hexas. . A simple solution would be to change the ""or"" conditions in these calculations to ""and"", so that it is only reoriented if it fails all the checks. I think a better solution would be to decide on a volume calculation method for each element type, and then use that as a criteria. . If you'd prefer to just improve the reorientation checks instead of adding this configuration option, I could submit work on a pull request for that if you'd like.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/162#issuecomment-103679295:1342,config,configuration,1342,https://su2code.github.io,https://github.com/su2code/SU2/pull/162#issuecomment-103679295,2,['config'],['configuration']
Modifiability,"I can guarantee Medi works with MSMPI, my MinGW setup links with `C:/Windows/System32/msmpi.dll` and uses nearly identical MPI header. It most likely is MSVC issue, it often works differently to gcc/clang and has its own set of bugs. Still, the issue with meson is MinGW pkgconfig cannot find MSMPI because it's not in MinGW directly and there's no way of specifying the library location. So it looks like MinGW build with MPI is currently broken. Edit: I'm now getting different errors:; ```; 2>C:\Users\dauma\Documents\SU2\externals\medi\include\medi/adToolImplCommon.hpp(63,1): error C2182: 'Target of operator new()': illegal use of type 'void'; 2>C:\Users\dauma\Documents\SU2\externals\medi\include\medi/adToolImplCommon.hpp(62): message : while compiling class template member function 'void medi::ADToolImplCommon<CoDiPackTool<su2double>,false,false,CoDiType,double,double,int>::createIndexTypeBuffer(medi::ADToolInterface::IndexType *&,size_t) const'; 2> with; 2> [; 2> CoDiType=su2double; 2> ]; 2>C:\Users\dauma\Documents\SU2\externals\codi\include\codi/externals/codiMediPackTypes.hpp(140): message : see reference to class template instantiation 'medi::ADToolImplCommon<CoDiPackTool<su2double>,false,false,CoDiType,double,double,int>' being compiled; 2> with; 2> [; 2> CoDiType=su2double; 2> ]; ```; It's both a template parameter name and inherited typedef. Regex replace for `AdjoinType`, `PrimalType` and `IndexType` works.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-554043358:1351,inherit,inherited,1351,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-554043358,1,['inherit'],['inherited']
Modifiability,"I can report that we did find a couple of small issues with the y+, depending on the file format. Those have been fixed in a recent pull request, so now the current develop branch contains the updates. For ParaView, the variable labels have been reverted to the originals. Thank you again for opening this issue: it led directly to improvements in the code!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/283#issuecomment-226012861:220,variab,variable,220,https://su2code.github.io,https://github.com/su2code/SU2/issues/283#issuecomment-226012861,1,['variab'],['variable']
Modifiability,I can write the probe location for debugging purposes.; The probes have access to the same things as the custom outputs and they only output one scalar.; So if someone wants to probe the entire flow field they need to define one probe per variable.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1909#issuecomment-1418292228:239,variab,variable,239,https://su2code.github.io,https://github.com/su2code/SU2/pull/1909#issuecomment-1418292228,1,['variab'],['variable']
Modifiability,"I cannot answer whether something will work for your system, but I'll describe what the build system does.; The blas dependency is entirely handled by pkg-config, we ask for something called ""whats in front of -Dblas-name"" (the default is openblas) that something needs to provide blas+lapack functions.; pkg-config then looks for ""blas-name"".pc and gets all information regarding libraries from there... If those libraries give you blas+lapack it should work (if it does not its a bug).; Different OS will configure these packages in different ways (e.g. Ubuntu 16 is a bit different from 18), so I honestly cannot tell you what will work on a system I've not tried before.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632104708:155,config,config,155,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632104708,3,['config'],"['config', 'configure']"
Modifiability,"I certainly agree with using the most permanent/established reference for these values, and especially with consistent use within the code. . Since viscosity is notoriously difficult to measure accurately, I suspect that the variations are due to using different data sets. In short, it may be more important to be consistent within the code than to pick the 'right' constants - and a user who places more trust in NASA's numbers than White's can manually change the constants through the config file as necessary. Best,; Heather",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/301#issuecomment-241291419:489,config,config,489,https://su2code.github.io,https://github.com/su2code/SU2/issues/301#issuecomment-241291419,1,['config'],['config']
Modifiability,"I checked and I could not find a place in the code where this option is used explicitly. Since all the drivers split between primary recording for state variables and secondary recording for geometry variables for efficiency. My own use case was for research I did, where I needed to record a tape w.r.t. to both. Since this is not ready to become a pull request any time soon, I do not really need this option. If you suggest I can create a commit to remove the enum option for simplicity.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1492#issuecomment-1012241237:153,variab,variables,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492#issuecomment-1012241237,4,['variab'],['variables']
Modifiability,"I compressed the boost sources and added a call to extract it to configure.ac (its much easier than in the m4 scripts, since you can use shell commands). I also added a check whether the boost folder exists, so that it is only done the first time you call configure.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-431005389:65,config,configure,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-431005389,2,['config'],['configure']
Modifiability,"I copied the config files necessary for running the tutorial cases into their own folder. This should make it easier to modify or add tutorials, without having to worry about the regression tests. Furthermore, it is easier for the user to differentiate between tutorials and regression tests (which do not necessarily have to converge or to give physical solutions). I suggest to create a new repository for the mesh files of the tutorial cases next.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485:13,config,config,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/485,1,['config'],['config']
Modifiability,"I could but I do not think updating that branch will fix your problem. We have not found any mesh handling bugs recently.; Creating / modifying meshes manually can get tricky (at least in my experience).; Have you tried simpler problems? Try starting with a problem that is known to work (there is a long issue with success stories, do a search for mesh adaptation here on github). Then build up from it, e.g. take the same problem and use a finer grid, change the physics to what you need, use a grid for your problem (ideally change one thing at a time).; Also keep in mind that if that branch was finished work it would probably have been merged into develop by now...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-757123547:354,adapt,adaptation,354,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-757123547,2,['adapt'],['adaptation']
Modifiability,"I did a couple of changes to the discrete adjoint implementation. Despite the necessary changes in the iteration structure, the following things have been changed/added:; - It is now possible to compute Pressure, Mach and AoA sensitivities (similar to the continuous adjoint), along with this I modified the screen output.; - The computation of the geometry sensitivities is now split from the adjoint iteration itself (this saves a lot of memory and is much faster). However, this also means that geometry sensitivities are only updated just before the solution files are written.; - In some places in the code you may find the macro AD_BEGIN_PASSIVE and AD_END_PASSIVE. Everything in between is not recorded (called passive section). This is currently used for sections that are related to the construction of the flow Jacobian, since we assume that this Matrix does not depend on the flow solution, i.e. is constant. This is of course not true and leads to a very small error (~0.05% for a flow residual of 10^-4) in the sensitivities, but also increases performance a lot. Then there is a small change in solver_direct_mean.cpp:; - I moved the computation of the primitive variables in the Preprocessing routine into a separate routine (SetPrimitive_Variables). This way it is easier and there is less overhead when computing the coupling of the flow and turbulent variables needed in the discrete adjoint solver. And this is also beneficial for the maintenance and readability of the code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/201:1177,variab,variables,1177,https://su2code.github.io,https://github.com/su2code/SU2/pull/201,3,"['coupling', 'variab']","['coupling', 'variables']"
Modifiability,"I did run the viscous ONERA M6 case. The speed up with the default config was marginal (2-3%). I also tried with multigrid enabled, in which case the MKL version was 10% faster. Overall the bottlenecks for the rans case were different than the inviscid onera case. I'll look at what can be done here next.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/543#issuecomment-416955089:67,config,config,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/543#issuecomment-416955089,1,['config'],['config']
Modifiability,I don't have any geometric constraints (or definitions) hence SU2_GEO is not being called. You can look at the config file.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-626856238:111,config,config,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626856238,1,['config'],['config']
Modifiability,"I don't mind the ""pairs"" by themselves, it fits nicely with how the NdFlattener works, i.e. its efficient to split them and pass them down to lower layers.; The only slight problem is that ""first"" and ""second"" are not a super expressive interface, but I think that is ok for now.; If it ever becomes needed you can create some adapter to convert something with operator (i,j,....) into pairs of pairs behind the scenes, but for the current use that would not be an option anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-847329246:148,layers,layers,148,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847329246,2,"['adapt', 'layers']","['adapter', 'layers']"
Modifiability,"I don't think the fix is as simple as it seems.; Indeed looking back at how we developed the CGNS reader, It was originally meant to read multiple zone in a single file. But during development, someone decided to restrict the reader to only one zone per file (and I don't know if it was validated). So now we are seating in the middle. If we replace line 169 of CGNSFVMMeshReader :; <pre>; if ( nzones > 1 ) {; SU2_MPI::Error(string(""CGNS reader currently expects only 1 zone per CGNS file."") +; string(""Multizone problems can be run with separate CGNS files for each zone.""), CURRENT_FUNCTION);; }; </pre>; by; <pre>; if ( cgnsZone > nzones) {; cgnsZone = 1;; }; </pre>. we can easily support multiple zone in one file. To support one CGNS zone per file, I guess that user should provide either the index in the cgns file of the zone we want to read or even better its name and not rely on SU2 numbering of zones. I think that supporting multiple mesh zones in the same file at the same time as one zone per mesh file should be possible as long as enough information is provided by the user. In this case, I am wondering how the option MULTIZONE_MESH and MULTIZONE option are interacting in the related issue. When MULTIZONE_MESH is set to NO do we expect one mesh file per zone ?; And in this case we can force CGNS Reader to read only the first Zone. In a more generic way something like this should be possible:; MULTIZONE=YES; CONFIG_LIST= (zone_1.cfg, zone_2.cfg, zone_3.cfg); CGNSZONENAMES = (""FluidRotor"", ""Solid"", ""FluidStator"") # To let CGNS pick the right zone in the file and if it not found the first zone can be used (current SU2 behavior). CGNSZONENAMES could also be set in each config file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1566#issuecomment-1073204565:1695,config,config,1695,https://su2code.github.io,https://github.com/su2code/SU2/pull/1566#issuecomment-1073204565,2,['config'],['config']
Modifiability,"I don't think there is any good way to fix this (without completely changing how the config file is defined). Many of the options allow one or multiple entries, and colons are among the tokens used to split up the entries. If we don't use a token to split it, then we won't know how many BCs there are (for example).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/163#issuecomment-103241607:85,config,config,85,https://su2code.github.io,https://github.com/su2code/SU2/issues/163#issuecomment-103241607,1,['config'],['config']
Modifiability,"I don't think we can actually say that, or, at least, we can say that it is not the only factor affecting the convergence. The problem is that it is not consistent across the meshes: for sure, using dimensionless limits help, but changing their values has different effects for finer meshes. ![ComparisonNewBCsResiduals_EF0 2_Other](https://github.com/user-attachments/assets/c50ef5b6-3d96-4a24-96ff-3dfdf704f826). The effect on the residual of the turbulent variables is the same. The most problematic one is always the Omega equation where the residuals remain always large. ![ComparisonNewBCsResiduals_EF0 2_Other_TKE](https://github.com/user-attachments/assets/bdc5383d-37e1-4b1d-a8c2-a2f7edfccb67). ![ComparisonNewBCsResiduals_EF0 2_Other_Omega](https://github.com/user-attachments/assets/3d2b413c-57bc-4692-9b06-73c0065fff56). The problem is that Omega is too large with respect to all the other variables, especially near the wall (where the residuals remain high).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2337816304:459,variab,variables,459,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2337816304,2,['variab'],['variables']
Modifiability,"I encountered a similiar ""double free"" message as above when i am evaluating fixed CL RANS simulation.; I have tested three cases to see when does this error occur.; The first case is a RANS simulation for CRM wing. My configure file is opt_crm.txt in the attachment.; In this case, when I set FIXED_CL_MODE= YES, then in the end of the SU2_CFD execution, it will return messages below:. `Writing comma-separated values (CSV) surface files.; Merging coordinates in the Master node.; Merging solution in the Master node.; Writing SU2 native restart file.; Writing the forces breakdown file.; *** Error in `SU2_CFD': double free or corruption (!prev): 0x0000000007dc2aa0 ***; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7fbaa7b177e5]; /lib/x86_64-linux-gnu/libc.so.6(+0x7fe0a)[0x7fbaa7b1fe0a]; /lib/x86_64-linux-gnu/libc.so.6(cfree+0x4c)[0x7fbaa7b2398c]; SU2_CFD[0x8553d5]; SU2_CFD[0x855c59]; SU2_CFD[0x7583c2]; SU2_CFD[0x75ceb5]; SU2_CFD[0x40759c]; /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0)[0x7fbaa7ac0830]; SU2_CFD[0x735109]; ======= Memory map: ========; 00400000-00d07000 r-xp 00000000 08:28 1068882 /home/wanghao/software/SU2-5.0.0_me/bin/SU2_CFD; 00f06000-00f2d000 r--p 00906000 08:28 1068882 /home/wanghao/software/SU2-5.0.0_me/bin/SU2_CFD; ......`. But, if i turn off the FIXED_CL_MODE, this error won't occur.; Then i tried an invisid test case, this case is orriginally from the TestCases folder of SU2 (TestCases/euler/naca0012). In this case, SU2 works well for both FIXED_CL_MODE and FIXED_AOA_MODE.; Finally, i tried another tutorial case for NACA0012 (from /TestCases/rans/naca0012), then SU2 has the same problem in FIXED_CL_MODE as in the first case. Furthermore, I have noticed that this bug is related to the compilers. ; 1. Intel C++ 2013 + Mpich2-3.0.4, fixed Cl model works; System: RHEL 5.3; 2. Intel C++ 2017 + Mpich2-3.0.4, fixed Cl model fails; System: Ubuntu 16.04; 3. GCC6.1.0 + Mpich2-3.0.4, fixed Cl model fails; System: RHEL 5.3",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/383#issuecomment-306425408:219,config,configure,219,https://su2code.github.io,https://github.com/su2code/SU2/issues/383#issuecomment-306425408,1,['config'],['configure']
Modifiability,I experience the same problem. . * mpich-3.3.2 is installed under /opt using:; ```; ./configure CC=$cc CXX=$cxx FC=$fc --enable-shared --prefix=/opt/mpich-3.3.2; make; make install; ```. * Then su2 build is initiated with:; ```; ./meson.py build \; -Denable-autodiff=true \; -Denable-openblas=true \; -Dwith-mpi=auto; ./ninja -C build install; ```. I tried exporting stuff like:; ```; export MPICC=/opt/mpich-3.3.2/bin/mpicc ; export MPICXX=/opt/mpich-3.3.2/bin/mpicxx; export PKG_CONFIG_PATH=$OPENBLAS_LIB/pkgconfig:$MPI_LIB/pkgconfig; ```. Even though the paths are correct and binaries do exist none of that works. I always get:; ```; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); ```. OpenBLAS is found for instance:; ```; Using 'PKG_CONFIG_PATH' from environment with value: '/opt/OpenBLAS/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.6; ```. FYI,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721280907:86,config,configure,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721280907,3,['config'],"['config-tool', 'configure']"
Modifiability,"I experienced the issue you described and tried different strategies to mitigate it. ; The back mesh was promising, but after setting it up properly (yes, full mesh, only surfaces need to be refined, volume and boundaries may be kept coarse/high growth ratio), it doesn’t help much. I think this behavior is related to the inability of the adaptation to either keep a tbd element size along curvatures / have a max element size on the surface. ; I bet the nodes of the adapted grid are still on the surface but huge elements (indicating no particular gradient there) ultimately deteriorate the surface mesh quality. . As a way around to this I separated into different zones/groups the parts of the surface mesh I wanted to “freeze”, this approach works as the mesh adaptation always respect/keeps the original mesh edge position. The approach above obviously helps mitigating the issue, surface mesh quality is still highest in the initialization mesh. As this method only mitigates the problem, please share your experience! Any other indication/suggestion is very welcome!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-761773094:340,adapt,adaptation,340,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761773094,3,['adapt'],"['adaptation', 'adapted']"
Modifiability,I fixed this when I redid the config parsing.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/13#issuecomment-103676648:30,config,config,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/13#issuecomment-103676648,1,['config'],['config']
Modifiability,I forgot to mention that MPI-3 functionality is required for these changes. Can we assume that all practical MPI implementations support the MPI-3 standard or should we add a test in configure to check?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574#issuecomment-418477655:183,config,configure,183,https://su2code.github.io,https://github.com/su2code/SU2/pull/574#issuecomment-418477655,1,['config'],['configure']
Modifiability,"I found that BC_Sym_Plane do nothing for turb solvers. For scalar vars, the symmetry BC is different from the euler BC that only works on the normal gradient of the velocity. Maybe BC_Sym_Plane should take the form of CTransLMSolver::BC_HeatFlux_Wall, because the boundary conditions of the Langtry-Menter model is a symmetry condition. '''; inline void BC_Sym_Plane(CGeometry* geometry, CSolver** solver_container, CNumerics* conv_numerics,; CNumerics* visc_numerics, CConfig* config, unsigned short val_marker) override {; /*--- Convective and viscous fluxes across symmetry plane are equal to zero. ---*/; }; '''. '''; void CTransLMSolver::BC_HeatFlux_Wall(CGeometry *geometry, CSolver **solver_container, CNumerics *conv_numerics,; CNumerics *visc_numerics, CConfig *config, unsigned short val_marker) {; ...; }; '''",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2168:478,config,config,478,https://su2code.github.io,https://github.com/su2code/SU2/issues/2168,2,['config'],['config']
Modifiability,"I found the SWBLI config file. I noticed that it is the NK solver. I would test this case without the NK solver.; Moreover, I've noticed that the entropy fix is very low; how about raising it to 0.2 or using a different flux (JST, AUSMPLUSUP2)? It may sound irrelevant, but it is worth the try.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2334419307:18,config,config,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2334419307,1,['config'],['config']
Modifiability,"I get the following error from su2Deform when using python 3.7 and SU2 6.1.0:. ```; su2Deform( ""testing.cfg"", args.numberProc) # Run SU2 mesh deformation; File ""$SU2_RUN/mesh_deformation.py"", line 83, in mesh_deformation; info = SU2.run.DEF(config); File ""$SU2_RUN/SU2/run/interface.py"", line 158, in DEF; konfig.dump(tempname) ; File ""$SU2_RUN/SU2/io/config.py"", line 125, in dump; dump_config(filename,self); File ""$SU2_RUN/SU2/io/config.py"", line 961, in dump_config; write_config(filename,config) ; File ""$SU2_RUN/SU2/io/config.py"", line 775, in write_config; n_lists = len(new_value); TypeError: object of type 'map' has no len(); ```. Any help fixing this would be greatly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/620:241,config,config,241,https://su2code.github.io,https://github.com/su2code/SU2/issues/620,5,['config'],['config']
Modifiability,"I had a chat with @pcarruscag in the meantime. Summary of the recent changes:; - All the non-FEM classes derived from CPrimalGrid (CLine, CTriangle etc) declared the static members for the connectivity themselves. So they all had to override the virtual getter functions for the connectivity themselves, resulting in a lot of code duplication. -> Now we have an intermediate class `CPrimalGridWithConnectivity<Connectivity>` that overrides them once, accessing the static members of `Connectivity` = `CLineConnectivity`, `CTriangleConnectivity` etc.; - `type*` array -> `std::vector<type>`. As a special case for a fixed-size boolean array, `std::bitset`.; - removed unused variables and functions",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1352#issuecomment-903237756:674,variab,variables,674,https://su2code.github.io,https://github.com/su2code/SU2/pull/1352#issuecomment-903237756,1,['variab'],['variables']
Modifiability,"I had a look at CSurfaceMovement::SetFFDTwist in grid_movement_structure.cpp. It starts with geometry->SegmentIntersectsPlane where the segment is the axes/line of rotation and the plane is the jPlane of the control points we wish to move.; However, unless the axes is EXACTLY parallel to the plane then there is always an intersection point (though maybe far in the distance), so why would this check be done. Unless there is also a check on how far away the intersection point lies, but this is not done. Then there is this comment with theta calculation:; /*--- The angle of rotation is computed based on a characteristic length of the wing,; otherwise it is difficult to compare with other length based design variables. ---*/; su2double RefLength = config->GetRefLength();; su2double theta = atan(config->GetDV_Value(iDV)*Scale/RefLength);; Where theta is calculated with the atan of DV_Value, implicating that the DV_Value is a distance,.. though in my knowledge setting the twist of an airfoil in the wing (or in our case the twist of a jPlane in the FFD box) is always done with a rotation in degrees/radians.; What is the programmer trying to do here?. Then there is the calculation of the rotation itself, that is done with the intersection point of the rotation axes with the plane, and the normal vector of the control point in the plane. Thus indicating that this normal vector is used as the orientation of the rotation axes. Though the plane normal and the rotation axes direction ought not to be of the same orientation. Looking back in the code from SU2-4.3.0 SetFFDTwistAngle would do a better job I think, where theta = config->GetDV_Value(iDV)*PI_NUMBER/180.0 indeed using an angle of rotation as value. And also indeed using the set rotation axes to rotate the jPlane about.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/693:714,variab,variables,714,https://su2code.github.io,https://github.com/su2code/SU2/issues/693,4,"['config', 'variab']","['config', 'variables']"
Modifiability,I had a quick look at the merging process and it seems like quite a few files conflict. I'm not sure which files I can merge from develop and not accidentally break the feature_adap functionality. Can I more or less pull across most of these changes? I can give it a go if you can give me some pointers but I'm not well-versed in cpp! Thanks.; ```; Common/include/CConfig.hpp; Common/include/adt/CADTElemClass.hpp; Common/include/geometry/dual_grid/CEdge.hpp; Common/include/geometry/dual_grid/CPoint.hpp; Common/include/geometry/dual_grid/CVertex.hpp; Common/include/option_structure.hpp; Common/src/adt/CADTElemClass.cpp; Common/src/geometry/CPhysicalGeometry.cpp; Common/src/geometry/dual_grid/CPoint.cpp; SU2_CFD/include/output/COutputLegacy.hpp; SU2_CFD/include/solvers/CEulerSolver.hpp; SU2_CFD/include/solvers/CSolver.hpp; SU2_CFD/src/iteration_structure.cpp; SU2_CFD/src/numerics/flow/flow_diffusion.cpp; SU2_CFD/src/output/CFlowCompOutput.cpp; SU2_CFD/src/output/output_structure_legacy.cpp; SU2_CFD/src/solvers/CEulerSolver.cpp; SU2_CFD/src/solvers/CNSSolver.cpp; SU2_CFD/src/solvers/CSolver.cpp; SU2_CFD/src/solvers/CTurbSASolver.cpp; SU2_CFD/src/solvers/CTurbSSTSolver.cpp; SU2_CFD/src/solvers/CTurbSolver.cpp; SU2_CFD/src/variables/CEulerVariable.cpp; SU2_DOT/src/meson.build; SU2_IDE/Xcode/SU2_CFD.xcodeproj/project.pbxproj; SU2_PY/pySU2/pySU2.i; SU2_PY/pySU2/pySU2ad.i; meson_scripts/init.py; preconfigure.py; ```,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-755887085:1235,variab,variables,1235,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755887085,1,['variab'],['variables']
Modifiability,"I had raised the issue #1000 and followed the development when #1102 was proposed. I tried to install SU2 on my new PC with the proposed changes but the ninja built failed with [this long error](https://www.dropbox.com/s/mh3x98kcv8pifv7/ninjarun.log?dl=0). **To Reproduce:**; Run the meson script similar to the following command: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=true -Denable-pywrapper=true -Dextra-deps=lapack,mpich -Denable-pastix=false --prefix=/home/slimshady/UserPackages/su2-test/SU2_INSTALL`. **Desktop:**; - OS: Arch Linux: Kernel 5.10.4; - C++ compiler and version: gcc (GCC) 10.2.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: 7.0.8. I was able to install it by changing the meson.build file like so:; ```; # mpi_dep = [dependency('mpi', language: 'c', required : get_option('with-mpi')),; # dependency('mpi', language: 'cpp', required : get_option('with-mpi'))]; mpi_dep = [dependency('mpich', required : get_option('with-mpi')), #new-change; dependency('mpich', required : get_option('with-mpi'))] #new-change; ```; and then configuring without the custom-mpi flag. What could be the issue? Am I using the flags wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1151:1145,config,configuring,1145,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151,1,['config'],['configuring']
Modifiability,"I had the same issue, its depended on the way the mesh is partitioned. There is an error in the calculation of NSpan (they should be the same for the inlet and outlet) when the boundary is on two different cores (points are counted twice). I resolved it by making an extra entry in the config that specifies the number of spanwise sections. The testcases are meshed in such a way that the partitioning rarely lead to the outlet being partitioned across two cores, so the errors doesnt pop up there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/990#issuecomment-630646560:286,config,config,286,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630646560,1,['config'],['config']
Modifiability,"I hard coded the number of span-wise sections for my case as suggested in #990. By hard coding the number of span-wise sections I am able to get it to work on cores more than 6. For now this works for me. . I added the change in the file CPhysicalGeometry.cpp of version V711. if(marker_flag == OUTFLOW){; // Added by Ashvin MArch 4th 2021	; 	nSpanWiseSections[INFLOW - 1] = 137;; 	nSpanWiseSections[OUTFLOW - 1] = 137;; if(nSpanWiseSections[INFLOW -1] != nSpanWiseSections[OUTFLOW - 1]){; char buf[100];; SPRINTF(buf, ""nSpan inflow %u, nSpan outflow %u"", nSpanWiseSections[INFLOW], nSpanWiseSections[OUTFLOW]);; SU2_MPI::Error(string("" At the moment only turbomachinery with the same amount of span-wise section can be simulated\n"") + buf, CURRENT_FUNCTION);; }; else{; config->SetnSpanWiseSections(nSpanWiseSections[OUTFLOW -1]);; }; }. }. }",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1219#issuecomment-791034298:771,config,config,771,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219#issuecomment-791034298,1,['config'],['config']
Modifiability,"I have a couple of question and suggestions about things I noticed during moving the initialization.; 1. `SU2_DOT` did not call `omp_initialize()`, it does now after moving `omp_initialize()` to the driver constructor. Does it actually run any hybrid AD stuff?; 2. The number of OpenMP threads can be specified for `SU2_CFD` via the `-t` parameter, but for `SU2_DOT` and the python wrapper I saw no way to configure it. Making the number of threads a parameter of the driver constructors and calling `omp_set_num_threads` in the constructor of `CDriverBase` seems like a natural way to enable this for all flavours of SU2. Would that be a nice addition?; 3. I couldn't find any python wrapper tests among the parallel AD and hybrid AD tests. Could any of the serial AD python wrapper tests serve as a basis for a parallel AD or hybrid AD one?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1470026920:406,config,configure,406,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1470026920,1,['config'],['configure']
Modifiability,"I have a few updates. I found out that most of my FGMRES problems in this branch where related to the fact that I was using single precision for the linear system. You can see it in this graphs for the residuals of Rho. ![RMSRho_Mesh_3](https://github.com/user-attachments/assets/185b8195-e415-4dff-9332-cff573c069cc). The first two curves are in mixed-precision and they stop long before reaching the minimum residual required due to divergence of the linear solver. Moreover, it seems that the 2003 model here implemented (which, simply put, considers the full reynolds stress tensor for the computation of the production of k and always considers k in the stress tensor and in the thermodynamic variables) has faster convergence and increases the recirculating zone (maybe due to the reduction of turbulence kinetic energy) which is a feature that has also been seen in [DOI:10.1017/aer.2020.93]. . ![SFC_Mesh_3](https://github.com/user-attachments/assets/81a50021-6b58-4a84-9057-a18b5bab023c). There are some differences between the use of the TMR boundary conditions and the ones used before. The results improve with respect to the develop in the prediction of the SFC distribution, which has results completely off from the V&V page of SU2. ![SFC_Mesh_3_Old](https://github.com/user-attachments/assets/0f4d634b-df31-4f86-a324-d9f67947f1ff). ![RMSRho_Mesh_3_Old](https://github.com/user-attachments/assets/24d5c2f5-93fe-432f-82d9-c050a90f7339). I may keep on checking if the implementation of the v2003 model is correct or not by searching for other test cases (probably coming from DOI:10.1017/aer.2020.93).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2393433487:698,variab,variables,698,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2393433487,2,['variab'],['variables']
Modifiability,"I have a question regarding the failed test case:; `opt_multiobj1surf_py` using the config file `inv_wedge_ROE_multiobj_1surf`. ; In this config, is the option `RESTART_SOL=YES` neccessary? There is no `RESTART_ITER` specified. ; (Setting `RESTART_SOL=NO` fixes the failed test, however, I don't want to roam in other test cases without asking first ;) ). Edit: Fixed this issue without touching the test case. I got the point of this test case wrong :)...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/964#issuecomment-626120951:84,config,config,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-626120951,2,['config'],['config']
Modifiability,"I have a question: for each point in the mesh I am trying to compute the dot product between the velocity vector and the normal to the wall of the nearest point on the wall. How do I access such information? I've found that in the CPoint class I have the ClosestWall_Elem variable which stores the index of the closest element on a wall. However, when I try to assess the information with a number of cores greater than 2, it crashes. Moreover, to recover the normal of the element I perform a mean of the normals on the nodes of that element. Is there a structure that has the normals saved for each element of the primal grid? The part that I am referring to is from line 208 in CTransLMSolver.cpp .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1410785035:272,variab,variable,272,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1410785035,1,['variab'],['variable']
Modifiability,"I have added 1D interpolation capability in SU2. It will be helpful in running cases with inlet profiles with radial variation. Additionally, I have added two classes CAkimaInterpolation and CLinearInterpolation which can be used for other purposes and can be initialized very simply by using pointers to C1DInterpolation class. The following is the Inlet file format that you can give now:. radius, TT, PT, unit_Vr, unit_Vtheta, turb variables... OR; radius, TT, PT, alpha, phi, turb variables.. *alpha is the angle taken normal to the direction of flow (swirl angle), phi is the flow angle taken from the direction of flow (more details in the velocity triangle pdf attached). The solver can then interpolate the data two ways: 1D Linear Interpolation or 1D Akima Interpolation. I added three new options in .cfg file:; INLET_INTERPOLATION_FUNCTION = None, Linear_1D, Akima_1D; INLET_INTERPOLATION_TYPE = vr_vtheta, alpha_phi; PRINT_INLET_INTERPOLATED_DATA = yes/no (for those curious what is the exact interpolated data). Given the generality of the approach, I have taken this will work for 2D cases or cases with multiple inlets without any issue. I am attaching a sample test case with detailed examination of results shown below. I am also attaching my equations that I used. Note that I define theta counterclockwise positive from x-axis. [testcase.zip](https://github.com/su2code/SU2/files/4217420/testcase.zip). I changed the inlet file angle to degrees rather than radians for alpha,phi option. All the graphs below have been plotted with radians. I have included both radians and degrees inlet file in the testcase. From now on, the inlet angles have to be in degrees! I have plotted graphs to verify the conversion was successful but I am not posting the graphs here as it is already a lot of data. For further details on Vr Vtheta and alpha, phi definitions you can refer this document: ; [velocity_triangles.pdf](https://github.com/su2code/SU2/files/4219369/velocity_triangles.pdf). The",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815:435,variab,variables,435,https://su2code.github.io,https://github.com/su2code/SU2/pull/815,2,['variab'],['variables']
Modifiability,"I have added all existing config options to the config_template file. I do not know what these options do in many cases, but at least they are all visible to the users without immediately diving into the code. For some options, I do not know in which category they belong, so if you see some options that are misplaced, let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1934#issuecomment-1464368418:26,config,config,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1934#issuecomment-1464368418,1,['config'],['config']
Modifiability,"I have added built-in support for 2D rectangular (quad) and 3D box (hexa) meshes, so no mesh file is required. Works in serial and parallel - all partitioning is taken care of for you. For example, if you wanted to run a 65^3 Taylor Green Vortex problem on a triply-periodic box, you could use the following new config options:. ```; MESH_FORMAT= BOX; MESH_BOX_SIZE= 65 65 65; MESH_BOX_LENGTH = 6.283185307179586 6.283185307179586 6.283185307179586; MESH_BOX_OFFSET = 0.0 0.0 0.0; ```. The marker names are ""x_minus"" ""x_plus"" ""y_minus"" ""y_plus"" ""z_minus"" and ""z_plus"" by default.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-521559088:312,config,config,312,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-521559088,1,['config'],['config']
Modifiability,"I have an issue with the ""Constrained shape design of a transonic turbulent airfoil at a cte. CL"" tutorial that I have not been able to find a fix for elsewhere. I have been able to successfully run of the design tutorials such as the unconstrained airfoil and unsteady NACA0012 tutorials, but when I try to do the same for this one it throws the following outputs:. Error:; ![6_19_24_Error](https://github.com/su2code/SU2/assets/172069980/7276e89d-fe77-4141-8892-4e3db03164f4). Output:; ![6_19_24_Output](https://github.com/su2code/SU2/assets/172069980/51b109ff-a498-42f4-9c4f-931b7998b4f8). I am running the code using the given command: ; python shape_optimization.py -g DISCRETE_ADJOINT -o SLSQP -f turb_SA_RAE2822.cfg. This is the directory that all of the necessary files are in that were cloned from the SU2 Tutorials GitHub page:; ![6_19_24_Directory](https://github.com/su2code/SU2/assets/172069980/5b77f484-734c-46be-b78b-6b416a15fd6f). I am using the given config files and following the tutorial, and cannot find anything wrong but it will not run properly. I was wondering if there is anything I am doing wrong and if anyone could help me solve this issue. I am running this on a computer cluster, and have ran other tutorials in the same exact manner but this time it seems to not work. Please let me know if I can provide any more helpful information.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2307:968,config,config,968,https://su2code.github.io,https://github.com/su2code/SU2/issues/2307,1,['config'],['config']
Modifiability,"I have checked and validated the number of elements for DEFINITION_DV, DV_VALUE, DV_KIND and DV_PARAM.; if I keep DEFINITION_DV unchanged, but assign to DV_KIND, DV_PARAM and DV_VALUE just one entry I found no comply on parsing the config file, parallel_computation will work as expected, but shape_optimization ""successfully"" finishes showing a GNORN=0 for each of objective function I have tried! The workaround suggested by Pedro Gomes in the CFD on line site, has not worked.; I have a 2D model, which is my ""smaller"" dataset, and can provide the slurm config and SU2 config. The mesh file size is 31801880 bytes. If those are ok to you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:232,config,config,232,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,3,['config'],['config']
Modifiability,I have created CMake configuration files to build and install SU2.; I have tested the build and installation process on both the Linux and OS X platform.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/30:21,config,configuration,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/30,1,['config'],['configuration']
Modifiability,"I have done some comparison cases for Cp distribution with axisymmetric formulation with older versions, they were matching well with commercial codes (I must say for the specific configurations I simulated, it somehow matched). This issue came into light while trying to obtain heat flux with axisymmetric formulation.; I will also try to run this axisymmetric case with some other code and compare....",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1106#issuecomment-740795422:180,config,configurations,180,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-740795422,1,['config'],['configurations']
Modifiability,I have downloaded SU2v6.0 on website. How can I use the average option in config files ? SU2v6.0 only have one config file about DDES named ddes_flatplate.cfg without the average option,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/537:74,config,config,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/537,2,['config'],['config']
Modifiability,"I have enabled the writing of the individual surfaces using the ""PARAVIEW_MULTIBLOCK"" directive.; The folder was created on the wrong place because the path contained periods.; for a simulation run in /foo/bar/polar_M0.6/aoa0/config.cfg; the folder was created in /foo/bar/polar_M0/zone_0; I assume this is due to the foder name being generated by cutting the path at the first period to remove the .cfg from the name.; While I understand that chaging the name will fix the issue, a period is a legal character for a folder name. - OS: Centos 7.5; - C++ compiler and version: not sure; - MPI implementation and version: not sure; - SU2 Version: 7.5.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2074:226,config,config,226,https://su2code.github.io,https://github.com/su2code/SU2/issues/2074,1,['config'],['config']
Modifiability,"I have just made a quick test. Because --enable-PY_WRAPPER is not in the form of --key=value (like --prefix=PREFIX or --with-cc=mpicc), it is not automatically included in the argument_dict dictionary and thus not passed to the configure script. That is why a treated this option in the same way as the --enable-mpi option, just to be sure. Any advice on how should I treat this --enable-PY_WRAPPER option without changing the ./preconfigure.py ? Or do we just keep everything like it is ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298#issuecomment-240523627:228,config,configure,228,https://su2code.github.io,https://github.com/su2code/SU2/pull/298#issuecomment-240523627,1,['config'],['configure']
Modifiability,"I have no idea, that function is not a problem even with gcc 4.7.3, and I also use a similar version of mpich on some machines.; a) Clean the code directory, delete the whole thing and re-download the code just to be sure.; b) What OS are you on?; c) Run mpirun --version, mpicxx --version post the output here.; d) Run the configuration with meson, post the output here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620546862:324,config,configuration,324,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620546862,1,['config'],['configuration']
Modifiability,"I have recently been trying to run a series of 3D inverse design cases but have been struggling to get it to work properly. . To use the inverse design feature i have set; INV_DESIGN_CP= YES ; in the config file, this adds an output variable CP_diff to the history file. To test this variables i have been running a test with two wings:; NACA0012 wing (unit chord, span 4, no sweep or taper); NACA4410 wing (unit chord, span 4, no sweep or taper). Here there NACA0012 will act as the starting wing and the NACA4410 will be the target. My current process is:; Mesh NACA0012;; Deform mesh to NACA4410;; Run SU2;; Read in data from solution file and output wing surface to TargetCP.dat in format; ""Global_Index"", ""x_coord"", ""y_coord"", ""z_coord"", ""Pressure"", ""Pressure_Coefficient"", ""Mach_Number"";; Set mesh back to original NACA0012;; Run SU2; (This produces a solution with Cp_diff=3.4868); Deform mesh to NACA4410;; Run SU2; (This produces a solution with Cp_diff=0.4733). This final run should surely give Cp_diff=0?? I have checked the final pressure distributions and they are within 5e-8 of each other at all points. What equation is used to calculate Cp_diff?. What format should the TargetCp.dat file be in? I have based the format used here on the test case example, this is only a 2D case though. Any help would be much appreciated. I have included my config file and a TargetCp.dat file below. [inv_opt3D.cfg.txt](https://github.com/su2code/SU2/files/533463/inv_opt3D.cfg.txt); [TargetCp.dat.txt](https://github.com/su2code/SU2/files/533465/TargetCp.dat.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/321:200,config,config,200,https://su2code.github.io,https://github.com/su2code/SU2/issues/321,4,"['config', 'variab']","['config', 'variable', 'variables']"
Modifiability,"I have run some test to verify that the changes here also work ok for unsteady flows with dual time-stepping (even the CFL adaption seems to work pretty well for pseudo time). I also added some checks to make sure CFL adaption is disabled for TIME_STEPPING mode. @EduardoMolina @clarkpede @cvencro: if you have some time, can you please test this branch out with some of your unsteady cases to verify that everything is ok for you as well? Let me know if you see any issues",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-539278925:123,adapt,adaption,123,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-539278925,2,['adapt'],['adaption']
Modifiability,"I have seen that it is possible to specify the number of iterations in command line (shape_optimization.py)... but, I think it is clear to have both options (number of iterations and bounds - same for all the variables- ) in the config file.; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/49#issuecomment-54920484:209,variab,variables,209,https://su2code.github.io,https://github.com/su2code/SU2/issues/49#issuecomment-54920484,4,"['config', 'variab']","['config', 'variables']"
Modifiability,"I have tested the adjoint FSI solver, results from matching, conservative, and consistent interpolation all agree. I am attaching only the bare minimum [files](https://github.com/su2code/SU2/files/2475798/testing.zip): meshes, configs, histories and logs. As to avoid uploading large files, I can obviously share the solutions.; To me the original issue is fixed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597#issuecomment-429571819:227,config,configs,227,https://su2code.github.io,https://github.com/su2code/SU2/pull/597#issuecomment-429571819,1,['config'],['configs']
Modifiability,"I have used both weight +1 and -1 but the optimization direction appears to be independent of it. Another issue is that the OBJECTIVE_WEIGHT parameter is not printed correctly in the configs generated during optimization. Its always +1 (even if I set it as -1). Is the DV_VALUE the same as ""FINDIFF_STEP""? Or does its value happens to be the same?. And why is the DV_VALUE always the same during the optimization to 0.001? Shouldn't this depend on the case itself?. I have attached my config.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-626404968:183,config,configs,183,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626404968,2,['config'],"['config', 'configs']"
Modifiability,"I haven't explicitly checked if they match but for the rigid motion cases the grid velocity is calculated from the transformation matrices and then imposed to update the grid. Therefore if the grid velocities are back calculated from the grid using FD then I would expect them to be close but not exact. For a pitching airfoil case with FFD design variables, the average difference in gradients for an objective function of L/D was within 1% between discrete adjoint and finite differences. This is very similar for both imposed grid velocities in the adjoint preprocessing and with the FD calculation for the grid velocities. So I think the results are pretty reliable for the rigid motion cases using the updated grid velocities calculation. . The deforming grid on the other hand is a different story. I still haven't been able to complete an adjoint run without diverging. More exploring to be done there...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766#issuecomment-525715240:348,variab,variables,348,https://su2code.github.io,https://github.com/su2code/SU2/pull/766#issuecomment-525715240,1,['variab'],['variables']
Modifiability,"I ifdeffed the availability of MPI_Ibarrier for checking whether the error call is collective. If MPI_Ibarrier is not present, there is a delay in the writing of the error message of 1 second (to make sure that the buffers for the one-sided communication are updated). If MPI_Ibarrier should be used when available (this is the cleaner solution), an additional check in configure must be added.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574#issuecomment-418669548:370,config,configure,370,https://su2code.github.io,https://github.com/su2code/SU2/pull/574#issuecomment-418669548,1,['config'],['configure']
Modifiability,"I implemented most of the reviewers suggestions. The only suggestion I left unchanged is the upper-case consistency issue raised by Wally. Since it is an optional output and it depends on the controlling variable names the user provides, I think it would be more intuitive to keep the font case consistent between the names under `CONTROLLING_VARIABLE_NAMES` and the corresponding `RMS_` outputs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057#issuecomment-1643680580:204,variab,variable,204,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057#issuecomment-1643680580,2,['variab'],['variable']
Modifiability,I just pulled the master branch of SU2 and it worked fine with configuration file and mesh file. Which files did you use for your 3D simulation? You may download files from following links. Inviscid : https://github.com/su2code/su2code.github.io/tree/master/Inviscid_ONERAM6; Turbulent : https://github.com/su2code/su2code.github.io/tree/master/Turbulent_ONERAM6,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/523#issuecomment-381741128:63,config,configuration,63,https://su2code.github.io,https://github.com/su2code/SU2/issues/523#issuecomment-381741128,1,['config'],['configuration']
Modifiability,"I just pushed a new version of your inlet profile branch. I really like the solver class abstractions. I can tell you have a good grip on the classes and where data should live - nice job. Here are the changes I have made:; * everything is generalized in parallel for an arbitrary number of inlets in the file. The file format changed slightly.; * I moved around some routines and data to take more advantage of inheritance and encapsulation: it is now more like the restart routines where the reading and data live in the parent CSolver class, the specific load functions are found in the solvers (I overloaded SetInletAtVertex), and the template file is written by COutput. It is written such that any solver could eventually use it for any marker type by adding the appropriate SetInletAtVertex routine for solver-specific data (might need to rename for different marker types rather than inlet) and writing an appropriate template file writer in the output.; * for now, it is still requiring a essentially a matching profile point (nearest neighbor within a tight tolerance) by default, but you can have an arbitrary number of points in the file for each marker, and we can eventually add interpolation easily. We already have some of these routines.; * the turbulent solvers now all use the Inlet_TurbVars data structure even for uniform inlets. Can you please check this with Python?; * multigrid is now working. I put in a boundary face area-averaged restriction operator for the inlet profiles. Any decent approximation on the coarse levels should work ok. I left all of your original routines there, but deactivated them for the moment. Can you please give it a look and let me know what you think (and whether it is working for you)? Feedback most welcome. If we are happy with it, we can clean it up and submit a PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/467#issuecomment-371716916:412,inherit,inheritance,412,https://su2code.github.io,https://github.com/su2code/SU2/issues/467#issuecomment-371716916,1,['inherit'],['inheritance']
Modifiability,"I just tested the 3D adaptation on an ONERA M6 and it seems to be working fine for me. <img width=""790"" alt=""Screen Shot 2020-05-06 at 2 05 56 PM"" src=""https://user-images.githubusercontent.com/19416354/81228401-e0f75180-8fa2-11ea-98e2-c0e378566212.png"">. I just updated AMGIO to include surface/volume element orientation checks, not sure if that'll help with your issue. If the updated code doesn't fix things, can you upload your initial mesh, flow restart, and the flo.meshb and flo.solb files from adap/ini?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-624894422:21,adapt,adaptation,21,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-624894422,1,['adapt'],['adaptation']
Modifiability,"I just tried it and it failed. The error message is extremely long, I am attaching a [text file](https://github.com/su2code/SU2/files/4685129/su2_custom-mpi.log) for that. This was my meson command earlier: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL`. Then I did this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py configure build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:476,config,configure,476,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['config'],['configure']
Modifiability,"I know this is silly... but... Am I the only one who finds the lower case ""o"" in the AoA keyword (config file) a little bit disturbing?... I think we should use all capital letter for all the keyword and ; AoA should be ANGLE_OF_ATTACK or just AOA... unfortunately, this change will affect a couple of config files :-)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/323:98,config,config,98,https://su2code.github.io,https://github.com/su2code/SU2/issues/323,2,['config'],['config']
Modifiability,"I looked for ""UCX error"" and got e.g. this https://github.com/openucx/ucx/issues/4742; IDK but it looks like an MPI configuration problem...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-759610569:116,config,configuration,116,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-759610569,1,['config'],['configuration']
Modifiability,"I made a fully unstructured version of the mesh and it seems I can now pass the `Geometry Preprocessing` stage. I'm now having a different issue that I do not know if it is related. After 250 iterations, the simulation hangs, with the following output in the `/adap/ini/log.out`:. ```; | 249| -7.427827| 0.000000| 0.024016| 0.000401| 8.4160e+09|; | 250| -7.390279| 0.000000| 0.024016| 0.000401| 8.4160e+09|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609863350.417715] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=50) failed: Bad address; [1609863350.417771] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=25) failed: Connection reset by peer; [1609863350.418024] [super:1071838:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor; ```. UPDATE: Bizarrely, if I attempt to run the adaptation script again, it now fails earlier with the same UCX Connection reset error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 774736 grid points before partitioning.; 4416440 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 44930 boundary elements in index 1 (Marker = FARFIELD).; 177930 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [1609864445.066242] [super:1075233:0] sock.c:344 UCX ERROR recv(fd=98) failed: Connection reset by peer; [1609864445.066058] [super:1075147:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; ```; Is this a bug?. UPDATE: This seems to have gone away pulling a different version OpenMPI and recompiling.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754746706:1051,adapt,adaptation,1051,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754746706,1,['adapt'],['adaptation']
Modifiability,"I managed to implement the computation of grad(n*U)*n, but at the moment it is located into CTransLMSolver::PreProcessing. It seems to work with a structured mesh on a flat plate. Currently, I am testing with a 2D profile too. However, being into the PreProcessing of the transition solver, the normals are computed at each iteration, thus it is not computationally efficient if non-deforming meshes are used. I am looking into where to put it such that it is computed just if the mesh is updated (and at the first iteration of course). . Plus, I have added a whole lot of variables to the output, but they will be removed in the final version. They are just used as debug.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1443670288:573,variab,variables,573,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1443670288,1,['variab'],['variables']
Modifiability,I noticed that it is not possible to run an optimization of a case where you have FFD design variables and periodic boundaries defined. It seems like that SU2_DEF is not correctly writing out the periodic information to the new mesh file. I think the problem is that there are different routines responsible for writing the FDD information and the periodic information.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/210:93,variab,variables,93,https://su2code.github.io,https://github.com/su2code/SU2/issues/210,1,['variab'],['variables']
Modifiability,"I noticed that there is a 'Grid Adaptation Strategy' section in the v7 .cfg files but I'm not entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143:32,Adapt,Adaptation,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143,3,"['Adapt', 'adapt', 'config']","['Adaptation', 'adaptation', 'config']"
Modifiability,"I noticed there was a lot of duplicate code in the turbulent numerics files (`numerics_structure.hpp` and `numerics_direct_turbulent.cpp`). Since I'm working with new model equations for hybrid RANS/LES, I didn't want to add to the technical debt. So I decided to refactor the turbulence numerics using the [template design pattern](https://sourcemaking.com/design_patterns/template_method). Basically, I moved common behavior for the viscous and the upwinding residuals to respective base classes and then left the specifics of each model to derived classes. I did my best to not change any of the underlying behavior. The source residual calculations for SST and SA have little in common. I did not apply the template design pattern to them. I named the template classes `CUpwSca_Abstract` and `CAvgGrad_Abstract` because the `_Template` suffix was already taken. I also noticed that there were almost no difference between the old `CAvgGrad_` classes and the `CAvgGradCorrected_` classes. The gradient correction is such a small change that it's better to have a single class with a switch than two classes that are about 95% similar. So I added a boolean property and logical switching if correction is to be applied to the gradients. This boolean parameter is now a parameter for the constructor. Overall, these changes trim down a lot of duplicate code (40% of the lines in `numerics_direct_turbulent.cpp`). These changes could be extended to other areas (such as the transition model), but I left that to future pull requests.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/422:264,refactor,refactor,264,https://su2code.github.io,https://github.com/su2code/SU2/pull/422,2,"['extend', 'refactor']","['extended', 'refactor']"
Modifiability,"I opened a PR with the fix, you also have a problem in your config, the motion of the trailing edge is not consistent with the other surfaces (the amplitude has too many zeros)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2215#issuecomment-1951598929:60,config,config,60,https://su2code.github.io,https://github.com/su2code/SU2/issues/2215#issuecomment-1951598929,1,['config'],['config']
Modifiability,I ran your test case 4 times and could not reproduce the problem. The code rewrites the `restart_flow.dat` fine and there were no warnings. I even tried to run modify the `config.cfg` so we run with different number iterations; therer are still no errors. . I have SU2 v7.0.2 running on Manjaro x64 and mpiexec 4.0.2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/906#issuecomment-602097912:75,rewrite,rewrites,75,https://su2code.github.io,https://github.com/su2code/SU2/issues/906#issuecomment-602097912,2,"['config', 'rewrite']","['config', 'rewrites']"
Modifiability,"I recently downloaded and compiled the feature_adap branch of SU2. . After installing I attempted to run an adaptation case with pyamg. However my code errors out with, . 'File ""C:\bin\SU2\amginria\interface.py"", line 136, in call_pyamg; mesh_new = pyamg.adapt_mesh(mesh, remesh_options); AttributeError: module 'pyamg' has no attribute 'adapt_mesh''. Does the newest version of pyamg no longer have this method? If so, what is the fix?. Thanks; Daniel",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1380:108,adapt,adaptation,108,https://su2code.github.io,https://github.com/su2code/SU2/issues/1380,1,['adapt'],['adaptation']
Modifiability,I remember having the same problem when computing impinging jets flows on a hot surface in symmetric configurations. The maximum heat flux should be at the stagnation point of the jet (which is in the symmetry plane) but the simulation predicted the maximum at some distance from the symmetry. Mirroring the mesh and computing the full geometry led to the correct solution. ; I was using JST but didn't test with upwind schemes for comparison. I may do so if I have some time.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1125#issuecomment-782058918:101,config,configurations,101,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-782058918,1,['config'],['configurations']
Modifiability,"I run SU2_CFD.exe of Binary Executables, it shows:. Error in ""void CConfig::SetConfig_Parsing(char*)"":; -------------------------------------------------------------------------; The configuration file (.cfg) is missing!!. Another exe files fail to run ,too. This is true for both serial and parallel versions. What is the reason for this?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2288:183,config,configuration,183,https://su2code.github.io,https://github.com/su2code/SU2/issues/2288,1,['config'],['configuration']
Modifiability,"I run into the same issue in the last few days. Iooks to me that this behavior is related to the Parent_CV variable which is not initialized. I solved this issue by setting it to 0 in the CPoint constructor in dual_grid_structure.cpp. Could someone have a look into this and confirm this?. I opened a new issue earlier today, im closing it right now so we can keep working in this thread",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/276#issuecomment-252726716:107,variab,variable,107,https://su2code.github.io,https://github.com/su2code/SU2/issues/276#issuecomment-252726716,1,['variab'],['variable']
Modifiability,"I said this could be a _POSSIBLE_ bug. Shouldn't numerical flux (at farfield) be evaluated based on boundary variables calculated from the Riemann Invariants? Check the corresponding implementation for Euler_Wall and I think you'll understand why I thought it could be an issue! I think that is the standard implementation. Also when checking for subsonic/supersonic conditions i.e. |u.n+c| >= c or vice-versa you do not do it with freestream values. Please check lines 10368, 10378. . And I think this is my third interaction with the developers (I suppose you are one of the developers too). And let me guess......I havent opened any random file and a random line to report an issue. . Since you accuse me of randomly reporting issues which annoy you let me also tell you that there is a bug in your CUSP flux scheme implementation. Figure out what that is unless you also accuse me like the way you did. Hint: look at beta and Nu_c. This will be my last interaction with you. You've taught me how *your* open-source environment works. . @fpalacios Please take note of the following discussion.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-313582779:109,variab,variables,109,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-313582779,1,['variab'],['variables']
Modifiability,"I searched for `TWO3` in the project and this revealed two other locations. I adapted the one in `CSolver.cpp` in commit 64bd077. There is another one in `python_wrapper_structure.cpp`, lines 400-415. There I hesitate a bit because in the `incompressible` case, `div_vel` is manually set to zero. As long as the solver has not converged, this has an effect, right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-743033388:78,adapt,adapted,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-743033388,1,['adapt'],['adapted']
Modifiability,"I see thanks for sharing that.; The way I understand (or not) blocking v non-blocking communication, with the former there will be more communications in flight at a given moment since the code does not wait to receive before issuing the next message. Maybe this puts a lot of pressure on your network...; Maybe there are tuning parameters to improve network performance under these conditions (it could be worth having a look around CFD Online), or maybe your new hardware will not have any problem. As for software solutions.; If your usual application is compressible RANS/URANS you can try the new and experimental hybrid parallel mode we just introduced in 7.0.2. This will allow you to have one MPI process per node which will unfold in 16 threads each.; I cannot guarantee this will work flawlessly since I have not tested it for pure unstructured meshes (which seems to be your case) but for block-structured-ish meshes the results so far are very promising (#861).; To use this add option `-Dwith-omp=true` to meson, and then launch the code with `mpirun -n 4 --bind-to none SU2_CFD -t 16 config.cfg` (or something equivalent, the ""--bind-to none"" part is important).; Let me know if you get a cryptic error along the lines of ""coloring failed"". For pure MPI, @economon would it be viable to force per-message waits? and would that be roughly equivalent to the old communication mode? (this would be more work on our side @drewkett so if you could give option 1 a go it would be great).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593162200:1098,config,config,1098,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593162200,1,['config'],['config']
Modifiability,"I see, I hope that @bmunguia will have a chance to take a look! I tried to have a look through the past commits but I didn't manage to successfully merge all the functions. From what I can tell, these are the edited variables/functions:; ; CConfig Class; - WRT_SLICE; - GetBool_Compute_Metric; - GetWrt_Aniso_Sensor; - GetKind_Aniso_Sensor; - GetKind_Hessian_Method; - GetAdap_Norm; - GetAdap_Hmax; - GetAdap_Hmin; - GetAdap_ARmax; - GetAdap_Complexity. Cvertex (not sure if values should be initialised); - ~CVertex; - GetnDonorPoints; - SetDonorCoeff; - GetDonorCoeff; - SetInterpDonorPoint; - GetInterpDonorPoint; - SetInterpDonorProcessor; - GetInterpDonorProcessor; - Allocate_DonorInfo; - GetVarRot; - SetVarRot. Option_structure; - ENUM_ANISO_SENSOR; - MapType; - ENUM_OUTPUT; - MakePair(""INRIA"", INRIA); - MPI_QUANTIFIES enums. CPhysicalGeometry - probably AMG stuff?; - CPhysicalGeometry::LoadAdaptedMeshParallel_FVM; - CPhysicalGeometry::Check_IntElem_Orientation; - CPhysicalGeometry::Check_BoundElem_Orientation; 	; 	; Common/src/geometry/dual_grid/CPoint.cpp'; - Check this one!. COutputLegacy.hpp; - Import inria amg. output_structure_legacy.cpp'; - SpecialOutput - Inria methods?. Csolver; - CSolver::SetPositiveDefiniteHessian. meson.build; - Add 'output/filewriter/CInriaFileWriter.cpp',. Init.py - add amgio stuff; - Add sha_version_amg; - Add github_repo_amg. Preconfigure.py; - Add init_inria; - Add other inria flags",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-756056762:216,variab,variables,216,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-756056762,1,['variab'],['variables']
Modifiability,"I see, those warnings didn’t pop up with LLVM on Mac. Actually, in a next pass, each of those Set_MPI_* routines that carry the warnings will be deleted. I didn’t do it yet, because git was getting confused with the spacings again. None of those routines are active anywhere any longer, so even just removing that index variable is fine to get rid of the warning",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/699#issuecomment-498966410:320,variab,variable,320,https://su2code.github.io,https://github.com/su2code/SU2/pull/699#issuecomment-498966410,1,['variab'],['variable']
Modifiability,"I should have said I was already using that ""polytropic Peng-Robinson"" eos and I have read the publications related to it. It just takes gamma as an argument from the config. Also for many boundary conditions Cp is calculated as gamma/(gamma-1)*R which is only true for ideal gases. And I am curious about how gamma is used in CNumerics. Nevermind, thank you. For my cases I will try to update Gamma whenever the Temperature is calculated with the eos.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1065#issuecomment-671405067:167,config,config,167,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065#issuecomment-671405067,1,['config'],['config']
Modifiability,"I suspect this may have been related to some changes I made to allow; passing extra DVS to my multifidelity flowpath model. If that's the issue,; go ahead and take it out the offending code, if I decide to put it back in; I'll try to do it more cleanly. If it isn't urgent, I can look more into; this in a couple weeks. On Feb 22, 2017 7:14 AM, ""Francisco Palacios"" <notifications@github.com>; wrote:. Hi All,. I’m a little bit confused with the python scripts and the design variable; definition. It seems that to compute the number of design variable we use; something like this:. # number of design variables; dv_size = project.config['DEFINITION_DV']['SIZE']; n_dv = sum(dv_size). I think that dv_size is new for me. Do you know what is the reason for; this? Is it possible to put several design variable together in the output; file and the python stuff will split the design variables?. Related with this, I have noticed several inconsistencies like:. We use:. # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; k = 0; for i, dv_scl in enumerate(dv_scales):; for j in range(dv_size[i]):; x0[k] = x0[k]/dv_scl;; k = k + 1. or this:. # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; x0 = [ x0[i]/dv_scl for i,dv_scl in enumerate(dv_scales) ]. Any clarification would be very appreciated. Thanks!; Francisco. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub; <https://github.com/su2code/SU2/issues/378>, or mute the thread; <https://github.com/notifications/unsubscribe-auth/AE7akObYA4LCPNs05XhJdpZZYIjIV0Boks5reylmgaJpZM4MHrCJ>; .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/378#issuecomment-281462330:476,variab,variable,476,https://su2code.github.io,https://github.com/su2code/SU2/issues/378#issuecomment-281462330,8,"['config', 'variab']","['config', 'variable', 'variables']"
Modifiability,"I tend to agree w Eran on this topic. When it is working as it should, it is very convenient to have the makefiles already available in the repo. I switch between Mac, Ubuntu, and a red hat cluster without needing to update anything or call the bootstrap script. I rarely use it.. basically only when adding or removing files to the build. Also, it is good to minimize dependencies, as sometimes old machines or clusters have limited tool sets. But, clearly we should at a minimum fix the issue that some of you are finding with the autotools, which should just need an update. What systems are you having trouble with? It’s important that we don’t jump too far ahead for portability reasons (that’s why we have kept the old versions for so long). Do you have an idea of the minimum autotools you need for the failing systems? We could start by updating to that version and see if things stabilize.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-424210049:672,portab,portability,672,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-424210049,2,['portab'],['portability']
Modifiability,"I tested this on Ubuntu 18.04 and Centos 7.5. On Ubuntu both options work fine. However, on Centos only the most recent commit (i.e. running ./bootstrap) works. The commit ce9cd2b fails, because the system runs automake 1.13 and therefore it cannot find aclocal-1.15 when running configure. This can be solved by either changing am__api_version in configure to 1.13 (dirty) or running bootstrap. However, I don't know if either option is desired. BTW, this problem will also show up for the master branch, whatever option will be chosen, as for the master branch the configure and Makefile.in's will be in the distribution. In short, the option with bootstrap works fine on the operating systems I tested (and I assume on all Linux and Unix distributions). When configure is present in the distribution, you could run into problems if the system does not have the required version of autotools.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-427011685:280,config,configure,280,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-427011685,4,['config'],['configure']
Modifiability,"I think I have zoomed on the problem:; First I had to renstall m4 (a local problem); Then, In the AD part, there is a refernce to CHeatSolverFVM instead of CHeatSolver.; So, a patch, is to copy routines:; in SU2_CFD/src/solvers : cp CHeatSolver.cpp CHeatSolverFVM.cpp; in SU2_CFD/src/variables : cp CHeatVariable.cpp CHeatFVMVariable.cpp; After that make and make install work. This is a patch. The repair requires a match of the names of the CHeat routines to the actual files names. I didn't track where the list exists. Last but not important: configure.ac prints a header with Release 6.2.0 Falcon; instead of 7.02 Blackbird. This explaines the header that I have printed in previous message",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-600786911:284,variab,variables,284,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600786911,2,"['config', 'variab']","['configure', 'variables']"
Modifiability,"I think along with this, the testcases/tutorials cfgs will have outdated configs. If we have a new template, I can help with the update.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/772#issuecomment-524913164:73,config,configs,73,https://su2code.github.io,https://github.com/su2code/SU2/issues/772#issuecomment-524913164,1,['config'],['configs']
Modifiability,"I think combining options where possible would be great. Also, won’t the move to multiple config files for multizone avoid the linear solver tolerance issue you mention for FSI, as the elasticity config can again reuse Linear_Solver_Error once it is not simultaneously being used by the fluid? Therefore, the deform option can be solely for grid deformation either during shape design or for the mesh equations in FSI problems.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/623#issuecomment-444003331:90,config,config,90,https://su2code.github.io,https://github.com/su2code/SU2/pull/623#issuecomment-444003331,2,['config'],['config']
Modifiability,"I think its a good idea to separate the weight from the objective function. This makes it more clear and flexible. However, what bothers me a little bit is that the OBJECTIVE_FUNCTION option is now used for two things. Namely for the optimization and for the individual adjoint runs. Maybe it would be good to still have another option for specifying the obj. function for the adjoint run itself (with a completely different name, so that there won't be any confusions). . Maybe it's less of a problem then I think, though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-185126081:105,flexible,flexible,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-185126081,2,['flexible'],['flexible']
Modifiability,"I think one option would add yet one more config option and make it more difficult for the user, and the other would be to extend new features to all existing capabilities of the code. The idea behind the single and multi-zone drivers was precisely generalization. In my opinion it would be a no brainer to go for the second, but I'll leave it up to the community, but it depends also a lot on what timing we are moving in.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542210441:42,config,config,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542210441,2,"['config', 'extend']","['config', 'extend']"
Modifiability,"I think that defining these regions in separate files would be better. It would keep the mesh format intact and allow users to change the regions without regenerating the mesh.; We could also use the regions to define volumetric source terms.; 1) Config option to provide the file with regions; 2) Preprocess the regions in each mpi rank to define them as lists of local indices (based on the global indices that are owned by the rank).; 3) Extend the custom outputs to perform volume integrals and averages (not too different from the surface averages we already have), this would directly allow the volume averages to be used in optimizations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1894#issuecomment-1396263229:247,Config,Config,247,https://su2code.github.io,https://github.com/su2code/SU2/issues/1894#issuecomment-1396263229,2,"['Config', 'Extend']","['Config', 'Extend']"
Modifiability,"I think the sst-rewrite team did a pretty good job going over the equations for the restructuring, and this one went unnoticed because it happened outside of the turbulence modeling. We have to go through the equations anyway as part of the sst-v1994 bugfix PR...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784#issuecomment-1278091290:16,rewrite,rewrite,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784#issuecomment-1278091290,1,['rewrite'],['rewrite']
Modifiability,"I think the way the prefix is set up is fine. My suggestion is more about where things go under $prefix. For python scripts meant to be used as executables... I'd put these directly under `$prefix/bin`, e.g. on my system, `/usr/bin/foo.py` and be sure that foo.py has execute permission. Python modules meant to be imported ... I'd put these in <somewhere>/python3.x/site-packages or let pip decide where to put them. So `foo.py` could end up in two different places, I guess. Concrete example: I just installed and ended up with:; ```; /usr/bin/SU2_Nastran/; /usr/bin/SU2_Nastran/pysu2_nastran.py; /usr/bin/SU2_Nastran/__init__.py; ```; Instead, a better setup might be:. `/usr/bin/pysu2_nastran.py` (with mode 755). and. ```; /usr/lib64/python3.9/site-packages/SU2_Nastran/; /usr/lib64/python3.9/site-packages/SU2_Nastran/pysu2_nastran.py; /usr/lib64/python3.9/site-packages/SU2_Nastran/__init__.py; ```. Whereby /usr/lib64/python3.9/site-packages is right for my system, but other systems will have their own place to install modules. That's where I suspect pip might be helpful. Perhaps it could be figured out from sys.path, though not sure how portable that is. This is an easy fix for someone who understands the build/install process well (and that's not me). But if nobody steps forward after a week or three, I'll give it a try anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2075#issuecomment-1627815111:1150,portab,portable,1150,https://su2code.github.io,https://github.com/su2code/SU2/issues/2075#issuecomment-1627815111,1,['portab'],['portable']
Modifiability,"I think we are all in agreement then.. as @pcarruscag points out, we should always keep code duplication in mind and try to abstract when possible. But, let's do it gradually.. sometimes we need to balance this against keeping duplicate code if it helps reduce conflicts and allows for different parts of the code to evolve separately and in parallel by different developers. I think a good first step is what @talbring has in mind for the flow output.. exactly this type of mid-level flow output class will show up there I believe. We can see how well that goes and then port to the solver classes too. Will merge this in today so we can keep moving forward. Thanks all",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657#issuecomment-472547987:317,evolve,evolve,317,https://su2code.github.io,https://github.com/su2code/SU2/pull/657#issuecomment-472547987,1,['evolve'],['evolve']
Modifiability,"I think we're going to need to add a separate config option NEMO_SUPERSONIC_INLET since we need mass fracs and Tve, or is there a way to overload the existing option?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1372911265:46,config,config,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1372911265,1,['config'],['config']
Modifiability,"I tried to compile SU2 with:. ```; git clone https://github.com/su2code/SU2; cd SU2; ./configure; make -j$(nproc); ```. `Configure` ran without any issues, but `make` failed because it was looking for `automake-1.14` and `aclocal-1.14`. On my system I have version `1.11` installed. So I created two symlinks:. ```; sudo ln -s /usr/bin/automake /usr/local/bin/automake-1.14; sudo ln -s /usr/bin/aclocal /usr/local/bin/aclocal-1.14; ```. Ran make again, et voila, everything worked out fine. No issues. I would like to suggest to change the source of SU2 to **not** specifically require version 1.14 of `automake` and `aclocal`.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/27:87,config,configure,87,https://su2code.github.io,https://github.com/su2code/SU2/issues/27,2,"['Config', 'config']","['Configure', 'configure']"
Modifiability,I tried to fix the problem with FFD and periodic boundaries. Would be good if someone could have a look at this solution. PS: WRT_HALO still has to be enabled in the config file in order to work.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/211:166,config,config,166,https://su2code.github.io,https://github.com/su2code/SU2/pull/211,1,['config'],['config']
Modifiability,"I tried to give a non-zero Mach Number in config file and it succeed. I obtained a rotary solution. However, giving a non-zero Mach Number would mean it is not hover anymore. Is there anyway to initialize this problem without given any forward speed ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-632678700:42,config,config,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-632678700,1,['config'],['config']
Modifiability,"I tried using adaptive CFL as you suggested for v7.2.1 with settings below;. CFL_ADAPT_PARAM= ( 0.1, 2.0, 1.0, 1e10, 0.001 ). Even though it doesn't diverge it still needs more iterations to converge compared to v7.0.6 and result is pretty much the same with constant CFL 250. Also, with adaptive CFL residuals are changing but they are oscillating in an interval. . What I don't really understand is why using same settings would yield less accurate results in a newer version. Since these settings are working with v7.0.6 and are very common I don't think I need to alter them for a newer version to give the same results. Here is the code output for v7.2.1 with adaptive cfl enabled. [codeOutput_v721_CFLadapt.txt](https://github.com/su2code/SU2/files/7919208/codeOutput_v721_CFLadapt.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1519#issuecomment-1019351706:14,adapt,adaptive,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/1519#issuecomment-1019351706,3,['adapt'],['adaptive']
Modifiability,"I tried your suggestion. I ran the FSI case in 1st order for one time-step and then made two copies of the restart file. I then tried 2nd order restart from this and the case still diverged. The FSI flow config file had the following VOLUME_OUTPUT; ```; VOLUME_OUTPUT= (GRID_VELOCITY, COORDINATES, SOLUTION, PRIMITIVE,VORTEX_IDENTIFICATION); ```; I also tried to manually add columns ""Grid_Velocity_x"" and ""Grid_Velocity_y"" to the ASCII restart file of the rigid case. The case still diverged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1287#issuecomment-843801037:204,config,config,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-843801037,1,['config'],['config']
Modifiability,"I understand, but it helps to keep the code more approachable and portable. That being said, there may be some work proposed soon using templates in the linear solver classes, and it would be great to have your feedback then. We really appreciate your interest!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400#issuecomment-360075745:66,portab,portable,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/400#issuecomment-360075745,2,['portab'],['portable']
Modifiability,"I used SU2-3.0.0 'eagle' ; My metis version is 5.1.0. But when I compile Metis 64bit (set IDXTYPEWIDTH to 64) .There are some compile errors occured below:. ......; ......; ../src/geometry_structure.cpp(5371): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_SetDefaultOptions(options);; ^; ../src/geometry_structure.cpp(5373): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);; ......; ...... Same to metis, when I compile cgns with hdf5. There are also some errors. The library link may be had some mistake. But the most important error is that -- when I change --with-mpi=mpicxx to --with-mpi=mpiicpc . Build Configuration Summary:. ```; Source code location: /parastor/users/isc01/zy/temp/SU2-master-back; Install location: ; Version: 3.0.0 ""eagle""; Compiler: mpiicpc; Preprocessor flags: -O3; Compiler flags: -O3; Linker flags: ; CGNS support: no; MPI support: yes; Metis support: yes; TecIO support: no; Mutation++ support: no; Jsoncpp support: no. Build SU2_CFD: yes; Build SU2_DDC: yes; Build SU2_GPC: yes; Build SU2_MAC: yes; Build SU2_MDC: yes; Build SU2_PBC: yes; Build SU2_SOL: yes; Build SU2_GDC: yes; Build SU2_UMC: yes; ```. There are some errors below:. Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/lib",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/31:821,Config,Configuration,821,https://su2code.github.io,https://github.com/su2code/SU2/issues/31,1,['Config'],['Configuration']
Modifiability,"I used SU2_DEF to evaluate CRM wing grid deformation, but the quality of my structured mesh is pretty bad. My question is whether the FFD box settings could affect the grid deformation,for example the distance of FFD box from the wall. Another question is whether the strctured mesh doesn't fit SU2_DEF? ; Could anyone help with this ? thank you!; Here are my FFD boxes, configuration file and slice of my wing (red color is deformed grid, the black one is original grid); [screen output.txt](https://github.com/su2code/SU2/files/835550/screen.output.txt); [configuration.txt](https://github.com/su2code/SU2/files/835551/configuration.txt); ![comparison](https://cloud.githubusercontent.com/assets/23302629/23821092/b4b13030-0663-11e7-91b5-e63849c323ab.png); ![ffdbox1](https://cloud.githubusercontent.com/assets/23302629/23821093/b5400cf6-0663-11e7-9975-e59a144298e6.png); ![ffdbox2](https://cloud.githubusercontent.com/assets/23302629/23821094/b541fd22-0663-11e7-8423-46502ca059d0.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/384:371,config,configuration,371,https://su2code.github.io,https://github.com/su2code/SU2/issues/384,3,['config'],['configuration']
Modifiability,"I want to discuss some important issues I have encountered while running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:484,config,config,484,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,2,['config'],"['config', 'configs']"
Modifiability,"I was just giving this a try on a mac, and while the configure/unpack of boost seems to work fine, I get the following error:. teciosrc/auxdata.cpp:14:2239: error: cast from pointer to smaller type '___90' (aka 'int') loses information. This is with LLVM. @ScottImlay : anything obvious I am missing w.r.t. data types or the build steps for mac? Maybe there is something with 32 v 64 bit. Have others given this a try yet?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-431207236:53,config,configure,53,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-431207236,1,['config'],['configure']
Modifiability,"I was looking a bit more into this because of the issue with having to treat the structural solver differently in the Update function.; (I gotta say I feel lucky I never had to look into time domain stuff, because 3 nested iterations... not easy). Anyway, I think there is a problem here, the ""predicted displacement"" that is transferred to the fluid during outer iterations (the coupling iterations within each time iteration) is the one set in CFEASolver::SetAitken_Relaxation, which is part of the Corrector step at the end of the structural inner iterations (the ones within each outer iteration). The ""predicted velocity"" is not set in SetAitken_Relaxation thus the grid velocities are lagged by one time step, since they are only set to the current velocity of the structure at the end of the time step (in the Update methods). I have little trust in the predictor step, looking at it I thing only zero order has a chance of working and anything else will cause the fluid and structural sides to separate / overlap, I'll test the theory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-774712415:380,coupling,coupling,380,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774712415,1,['coupling'],['coupling']
Modifiability,"I was not able to reproduce this behavior. Below is the result I get when using the master branch for both the code and the test cases. . ![image](https://cloud.githubusercontent.com/assets/5167760/7709282/d36254b2-fe10-11e4-8827-f01ec46fbf0f.png). Note that since the config file provided uses a restart it depends on also having the provided restart files, which may have been produced with slightly different settings (ie, lower CFL number), and if you are not using the restart files you should check that the solution has converged. If you have further questions about the settings of SU2, checking convergence, etc please post them to the forum at:; cfd-online.com/Forums/su2/. You will find that in addition to a wider audience who can answer your questions, the answers may also already be posted from users who had similar problems.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/179#issuecomment-103602179:269,config,config,269,https://su2code.github.io,https://github.com/su2code/SU2/issues/179#issuecomment-103602179,1,['config'],['config']
Modifiability,"I was not suggesting a ""reversion"" Juan, just a compatibility mode. But from what Tom wrote it would not be trivial (nor worth doing since it is just speculation at this point). @drewkett you can try to get past the coloring issue with the config option `EDGE_COLORING_GROUP_SIZE= X`, try X=1 and if that fails X=1024,2048,4096,... (with large enough value the coloring will eventually work but the parallelism won't be great).; The algorithm is a bit primitive but it does work for the unstructured Onera M6 grid in the repo.; Indeed the preprocessing is not hybrid parallel yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593291846:240,config,config,240,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593291846,1,['config'],['config']
Modifiability,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-761751741:269,ADAPT,ADAPTATION,269,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741,11,"['ADAPT', 'adapt']","['ADAPTATION', 'adaptation', 'adaptations']"
Modifiability,"I will try it right now (sorry I got absorbed by 753). If I make it work I volunteer to update the docs with the procedure. Edit: Actually I cannot get even the basic version to work.; I tried a fresh clone of this branch and running ./meson.py build -Dwith-mpi=enabled -Denable-autodiff; The script stops when it tries to build ninja as it cannot find the associated configure.py script.; If I supply a binary for ninja it stops because the submodules are not initialized properly (maybe it's the git version the cluster uses ? 1.8.3.1).; If I init the submodules manually, meson.py stops because the submodule folders are not empty.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-519991805:368,config,configure,368,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-519991805,1,['config'],['configure']
Modifiability,"I wonder whether in the following code the arguments of `SetCoord` should be swapped. The code illustrates how the `visc_numerics` is initialized in `CEulerSolver::BC_Far_Field`:. iPoint = geometry->vertex[val_marker][iVertex]->GetNode();; Point_Normal = geometry->vertex[val_marker][iVertex]->GetNormal_Neighbor();. V_domain = nodes->GetPrimitive(iPoint);; V_infty = ... visc_numerics->SetCoord(geometry->nodes->GetCoord(iPoint),; geometry->nodes->GetCoord(Point_Normal));; visc_numerics->SetPrimitive(V_domain, V_infty);. So `iPoint` lies on the boundary. *`Point_Normal` is its normal neighbour in the interior of the domain, and not some ""dummy cell"" outside. But the primitive variables at `Point_Normal` are set to the outside values.*. As far as I can tell, the `CNumerics::Coord_j` member is only used in the child classes of `CAvgGrad_Base`, in order to compute. Edge_Vector[MAXNDIM] = {0.0}, /*!< \brief Vector from point i to point j. */. by. Edge_Vector[iDim] = Coord_j[iDim]-Coord_i[iDim];. which is then used to call `CorrectGradient`. It has the wrong sign if the above code is incorrect. (Apart from that, `Coord_j` is used to compute the distance in the NEMO viscous residuals.). Note that similar calls to `SetCoord` can be found at many places, e.g. in `CEulerSolver::BC_Riemann`, `CEulerSolver::BC_Giles`, their siblings in `CIncEulerSolver`. and `CTurbSASolver::BC_Inlet_Turbo`.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1185:682,variab,variables,682,https://su2code.github.io,https://github.com/su2code/SU2/issues/1185,1,['variab'],['variables']
Modifiability,"I would always suggest adding the corresponding pkg config path to the `PKG_CONFIG_PATH` variable and use the `dependency` method. This way you get the correct version, additional dependencies, the include path and necessary flags.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-520973327:52,config,config,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-520973327,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"I would give a cautious yes, cautious because Meson appears quite new, and probably still has some wrinkles to iron out. It’s definitely worth a try. Dave. From: Tim Albring [mailto:notifications@github.com]; Sent: Thursday, May 23, 2019 1:21 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Dave Taflin <d.taflin@tecplot.com>; Mention <mention@noreply.github.com>; Subject: Re: [su2code/SU2] Meson build system (#685). @economon<https://github.com/economon> Hm ok, that is strange. The one that it builds is the newest on github (v1.9). On linux meson finds ninja if it is in the root directory of the source code (which should be there after bootstrapping), apparently that is not the case on mac. Can you check whether it works when you add the source dir in your path variable? Like @davetaflin<https://github.com/davetaflin> also mentioned for windows, on mac you can also directly generated xcode files (by adding --backend=xcode to the meson call), then ninja is not required. But anyway, I will look for a solution to that problem. @davetaflin<https://github.com/davetaflin> Thanks for your impressions. I would say the documentation is decent. The important things are there, which helped me setting it up. But I guess that we can also ask the developers if we have some problems when adding more complex dependencies (however, we then also should ask ourselves whether we really want to add them in this case). But is the conclusion that you'd also prefer meson over automake ? :D. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/685?email_source=notifications&email_token=AADV2HBRMBCYV43557RMHRTPWZHYPA5CNFSM4HOUXHQKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODWBOI7I#issuecomment-495117437>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AADV2HB3AK7BY3OH5LY66R3PWZHYPANCNFSM4HOUXHQA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-495299585:773,variab,variable,773,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-495299585,1,['variab'],['variable']
Modifiability,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:1594,variab,variables,1594,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119,1,['variab'],['variables']
Modifiability,"I would love to change the branch, if I really knew how to. Should I create a new Pull Request?; I am in the process of rerunning my isothermal validation cases with the updated code. As soon as I can get a stable config+mesh, I will send them over to you for a regression test!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/71#issuecomment-56638023:214,config,config,214,https://su2code.github.io,https://github.com/su2code/SU2/pull/71#issuecomment-56638023,1,['config'],['config']
Modifiability,I'll adapt one of the existing Testcases to use this feature,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382#issuecomment-927306822:5,adapt,adapt,5,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927306822,1,['adapt'],['adapt']
Modifiability,"I'll do you one better. Here is a mesh and config file for the NREL Phase VI: http://stanford.edu/~economon/dropbox/nrel.tgz. It's been a while since I have run that to convergence, so it may need some tweaking. Give it a try and let me know. It's ~3 million grid nodes, so you'll likely need a few cores...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-258498677:43,config,config,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-258498677,1,['config'],['config']
Modifiability,"I'll take a more in-depth look my cases tomorrow (Saturday) to adapt the regression values, and options if necessary. In some cases I saw a massive improvement in convergence speed so I'll decrease the prescribed iterations to reflect that :+1: I hope it is ok to push to this PR directly (won't be that many lines ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585#issuecomment-1085574919:63,adapt,adapt,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585#issuecomment-1085574919,1,['adapt'],['adapt']
Modifiability,"I'm a junior student and a new CFDer.; I'v been testing upwind scheme in QuickStart and found that CUSP scheme diverged. Below is some important configuration information; Firstly I just changed convective scheme of ""inv_NACA0012.cfg"" in QuickStart to CUSP and SU2 diverged directly. Configuration information lies below.(CFL = 4.0); >% Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.8; %; % Angle of attack (degrees); AOA= 1.25; %; % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE); MGCYCLE= W_CYCLE; %; % Multi-Grid PreSmoothing Level; MG_PRE_SMOOTH= ( 1, 2, 3, 3 ); %; % Multi-Grid PostSmoothing Level; MG_POST_SMOOTH= ( 0, 0, 0, 0 ); %; % Jacobi implicit smoothing of the correction; MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); %; % Damping factor for the residual restriction; MG_DAMP_RESTRICTION= 1.0; %; % Damping factor for the correction prolongation; MG_DAMP_PROLONGATION= 1.0; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= CUSP; %; % Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:145,config,configuration,145,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,2,"['Config', 'config']","['Configuration', 'configuration']"
Modifiability,"I'm currently unable to reproduce the bug(s)... . I tried by apply [diff.txt](https://github.com/su2code/SU2/files/10437018/diff.txt) according to https://github.com/su2code/SU2/issues/1000#issuecomment-633079695 to enable MPICH builds, and then run the following commands in a `ubuntu:22.04` container,; ```bash; apt-get update; apt-get install gcc g++ mpich python3 python3-distutils git pkg-config; ./meson.py build --buildtype=debug -Dwith-mpi=enabled -Denable-tests=true --prefix=$PWD/install; ./ninja -C build install; ```. With the current master 1b08506, or commit 13dae36 before @pcarruscag's fix in #1892, ; several iterations of `install/bin/test_driver [NdFlattener]` consistently print ; ```; Filters: [NdFlattener]; ===============================================================================; All tests passed (45 assertions in 1 test case); ```. With `mpirun -np 2`, I see this output multiple times. Is this correct? In the SU2 test container (`ghcr.io/su2code/su2/test-su2:220614-1237`) with OpenMPI, I get this:; ```; Filters: [NdFlattener]; Filters: [NdFlattener]; ===============================================================================; All tests passed (74 assertions in 1 test case). ===============================================================================; All tests passed (77 assertions in 1 test case); ```. With 13dae36, running the new testcase (with `ITER=11`) like this:; ```bash; root@ed3df1d7769f:/workdir/SU2/TestCases/disc_adj_heat# ../../install/bin/SU2_CFD primal.cfg | grep "" 10|""; ```; consistently outputs ; ```; | 10| -15.998258| -14.557474| -14.812760| -8.956924| -18.202673| -1.040382| 5.7162e+00|; ```; or, with `mpirun -np 2`, the same line multiple times. So maybe I observe a problem with my way of installing mpich on Ubuntu, but no failing unit tests or non-deterministic regression tests. . Are the reported problems restricted to mpich? Could you provide build and run commands with the observed and expected output?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1385673898:394,config,config,394,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1385673898,1,['config'],['config']
Modifiability,"I'm doing my tests on a fresh clone from the git.; None of the folders that you menthoned exist after cloning. They are created during; the preconfigure run. The wrong naming does not originate from layers of history in ; the git folder.; And yes, adding no debug flag makes sense.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-600837563:199,layers,layers,199,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600837563,1,['layers'],['layers']
Modifiability,I'm fine with the consistency with the user input. Is the dry run mode working ok for these variables?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057#issuecomment-1644953529:92,variab,variables,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057#issuecomment-1644953529,1,['variab'],['variables']
Modifiability,"I'm getting to the same conclusion, the easier step might be to set; Multizone_Problem to false during recording steps... Ole Burghardt <notifications@github.com> escreveu no dia terça, 15/10/2019; à(s) 12:42:. > @rsanfer <https://github.com/rsanfer> You shouldn't get in touch with the; > new AD routines at all unless you're using CDiscAdjMultizoneDriver.; > So in case; > direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution);; > gets executed, that likely means that the if-statement above,; > config->GetMultizone_Problem(), evaluates to true.; > Some weeks ago I added another boolean (Get_MultiphysicsDiscreteAdjoint or; > similar) but I was asked to revert that to the line above.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/803?email_source=notifications&email_token=AJCOXNYKA2UDXBUN6DTFXVDQOWUBNA5CNFSM4JAY4HS2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEBIN6GA#issuecomment-542170904>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN2V3264434E3UH75ITQOWUBNANCNFSM4JAY4HSQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542173510:521,config,config,521,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542173510,1,['config'],['config']
Modifiability,"I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":. ```; Configuring H5pubconf.h using configuration. externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; ```. I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; LMK if you need the full configure error",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1500#issuecomment-1018249584:87,Config,Configuring,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1018249584,3,"['Config', 'config']","['Configuring', 'configuration', 'configure']"
Modifiability,"I'm ok with it in the solver files, since there we are actually separating the mean flow from the turbulence. Having Euler and N-S solver files would be nice, but then we'd have to separate those classes, which might be confusing since they are so tied together through inheritance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/375#issuecomment-279838334:270,inherit,inheritance,270,https://su2code.github.io,https://github.com/su2code/SU2/pull/375#issuecomment-279838334,1,['inherit'],['inheritance']
Modifiability,"I'm pinning this issue, to my knowledge this is not being worked on directly but it should be something we keep in mind as we refactor code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/594#issuecomment-592950547:126,refactor,refactor,126,https://su2code.github.io,https://github.com/su2code/SU2/issues/594#issuecomment-592950547,1,['refactor'],['refactor']
Modifiability,"I'm sorry but I have to say, this is why the code never evolves, you open an issue, get a solution for your problem, then close the issue without there being a pull request that actually fixes the problem for everyone else.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1727#issuecomment-1209715657:56,evolve,evolves,56,https://su2code.github.io,https://github.com/su2code/SU2/issues/1727#issuecomment-1209715657,1,['evolve'],['evolves']
Modifiability,"I'm the one who created that warning message, so I can fill in some details about when and why that error message occurs. For adaptive mesh refinement, SU2 looks at each element and checks how important it would be to divide that element. It then assigns a numeric value (a ""sensor"") to each element representing the relative importance. That sensor is normalized by the max value and is assumed to be positive, so its range should be from 0 to 1. SU2 defines a number of elements that it wants to create (4455 in your case). It then loops through all the elements and looks for elements whose sensors fall above a threshold. That threshold starts at 0.999, close to the max value of 1. If an element has a sensor above that threshold, SU2 marks that cell for division. If it doesn't find enough elements, then it lowers the threshold and continues looking. That process continues all the way down till the threshold hits 0. Sometimes, SU2 can't find enough elements to adapt. The threshold goes all the way to 0, and there's still not enough. Then it prints that warning and continues. That's what you're seeing. The code only mentions triangles, quadrilaterals, and tetrahedrons as a guess to what's wrong. You'll notice it says your grid ""may"" have too high a percentage of other types. If your grid were composed solely of hexahedrons, for example, then it won't find any elements to adapt and print that warning message. There's no check to confirm that this guess is actually correct. In your case, you only have quads and triangles, so the guess is obviously mistaken. As to what is actually going wrong in your case, I would have to dig in a little deeper to find out what's going on. I would guess that your elements aren't being marked as ""divisible,"" but I'm not sure why.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-434924444:126,adapt,adaptive,126,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-434924444,3,['adapt'],"['adapt', 'adaptive']"
Modifiability,"I've been doing some recreational reading on strategies that people have used for vectorization of fluxes but so far I have not thought of a way to reconcile them with the nice encapsulation we have of the numerics. For gradients (at least GG) and limiters on the other hand I do have ideas. By the way is there a branch on the repo for the work you, Francisco, Intel, and others did on this kind of stuff?. Yeah making solution variables members of the solver would avoid a lot of virtual calls but it would make it harder to eventually reach the solution for post processing, or in other areas like Integration/Iteration where the solution is manipulated directly by non-solver classes, we will see...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-513171591:429,variab,variables,429,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-513171591,1,['variab'],['variables']
Modifiability,"I've encountered a bug where SU2 will get stuck in an infinite loop. I've been trying out the grid adaptation code recently. Tets, rectangles, and triangles all worked fine, but hexahedra threw the code into an infinite loop. Basically, the code is missing the proper code for hexahedra in the `CGridAdaptation::SetSensorElem` function. I've attached the [offending lines 3640-3653](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/487:99,adapt,adaptation,99,https://su2code.github.io,https://github.com/su2code/SU2/issues/487,2,['adapt'],"['adaptation', 'adapted']"
Modifiability,"I've noticed while using Valgrind that some of the recent pull requests have introduced a few memory issues. Here's a summary of the changes in this PR: . + Sets default for `ilu_fill_in` to 0 to prevent uninitialized value bugs on destruction of `CSysMatrix`; + Adds deallocation of some turbomachinery variables; + Adds NULL initialization and deallocation of some of the new markers. I also found a memory issue in a weird corner case with `RefOriginMoment_X`, `_Y`, and `_Z`. If the reference origin is defined exactly once, but no surfaces are marked for monitoring, then `RefOriginMoment_X` (and `_Y` and `_Z`) is set as an empty array. I think that's a bug. That bug creates problems in `CConfig::SetOutput`, (line 4284) where SU2 tries to print out the reference origin.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/507:304,variab,variables,304,https://su2code.github.io,https://github.com/su2code/SU2/pull/507,1,['variab'],['variables']
Modifiability,"I've tracked down the source of the bug, and I'll submit a pull request later today. During the output of the periodic mesh in `SU2_MSH`, `CPeriodicGeometry::SetMeshFile` sorts the nodes into the order normal, receive, send. This can be found in [lines 18798-18819 of Common/src/geometry_structure](https://github.com/su2code/SU2/blob/68991cd1005cf118e1ff21b8952bb366bb299cf3/Common/src/geometry_structure.cpp#L18798). I've copied down the lines here for reference:. ```cpp; /*--- Change the numbering to guarantee that the all the receive; points are at the end of the file ---*/; unsigned long OldnPoint = geometry->GetnPoint();; unsigned long *NewSort = new unsigned long[nPoint];; for (iPoint = 0; iPoint < nPoint; iPoint++) {; NewSort[iPoint] = iPoint;; }; ; unsigned long Index = OldnPoint-1;; for (iMarker = 0; iMarker < nMarker; iMarker++) {; if (bound[iMarker][0]->GetVTK_Type() == VERTEX) {; if (config->GetMarker_All_SendRecv(iMarker) < 0) {; for (iElem_Bound = 0; iElem_Bound < nElem_Bound[iMarker]; iElem_Bound++) {; if (bound[iMarker][iElem_Bound]->GetNode(0) < geometry->GetnPoint()) {; NewSort[bound[iMarker][iElem_Bound]->GetNode(0)] = Index;; NewSort[Index] = bound[iMarker][iElem_Bound]->GetNode(0);; Index--;; }; }; }; }; }; ```. In order to sort the points, a list mapping the old points to the new points (`NewSort`) is created. The problem is that this list is sorted by switching nodes. But it doesn't switch around the _contents_ of the list (i.e. two node numbers from the list). Instead it switched an index from the list and an actual node number pulled from the geometry. This presents two problems:. 1. If any of the receive nodes actually are at the end of the list, they will get switched away from the end of the list.; 2. If any node is switched twice, data is lost. That's because the sorting assumes that the elements being switched have not already been switched. This is how the three points went missing from the cube problem I previously referenced. If my write",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431#issuecomment-358340153:906,config,config,906,https://su2code.github.io,https://github.com/su2code/SU2/issues/431#issuecomment-358340153,1,['config'],['config']
Modifiability,"I've tried to follow some convention for naming the functions. We were using ""SetMarkerCustomXX"" for CHT-type boundary conditions, so I extended that to other applications.; ""Custom"" means that the values set this way act as boundary conditions. Whereas the other accessors allow manipulating the state (e.g. for initialization) but do not change the final solution.; I also tried to disambiguate the terms for Flow loads of the flow solver vs FEA solver and mesh deformation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1978:136,extend,extended,136,https://su2code.github.io,https://github.com/su2code/SU2/pull/1978,1,['extend'],['extended']
Modifiability,"ION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10129,config,configure,10129,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability,IR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --modversion python-3.7m` -> 0; 3.7; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --cflags python-3.7m` -> 0; -I/data/home/yamazaki/soft/Python-3.7.9/build/include/python3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; WARNING: extract_all_objects called without setting recursive; keyword argument. Meson currently defaults to; non-recursive to maintain backward compatibility but; the default will be changed in the future. >SU2_PY/pySU2/meson.build:27:2: ERROR: Tried to form an absolute path to a source dir.; You should not do that but use relative paths instead. >To get include path to any directory relative to the current dir do. >incdir = include_directories(dirname). >After this incdir will contain both the current source dir as well as the; corresponding build dir. It can then be used in any subdirectory and; Meson will take care of all the busywork to make paths work. >Dirname can even be '.' to mark the current directory. Though you should; remember that the current source and build directories are always; put in the include directories by default so you only need to do; include_directories('.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1672:1740,config,config,1740,https://su2code.github.io,https://github.com/su2code/SU2/issues/1672,1,['config'],['config']
Modifiability,"Iexternals/cgns -I../externals/cgns -Iexternals/cgns/hdf5 -I../externals/cgns/hdf5 -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -I../externals/mel -ICommon/src -I../Common/src -I/usr/include -I/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi -I/usr/lib/x86_64-linux-gnu/openmpi/include -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -pthread -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ SU2_CFD/src/libSU2core.a.p/output_CAdjElasticityOutput.cpp.o -MF SU2_CFD/src/libSU2core.a.p/output_CAdjElasticityOutput.cpp.o.d -o SU2_CFD/src/libSU2core.a.p/output_CAdjElasticityOutput.cpp.o -c ../SU2_CFD/src/output/CAdjElasticityOutput.cpp; In file included from ../SU2_CFD/src/output/../../include/output/CAdjElasticityOutput.hpp:30,; from ../SU2_CFD/src/output/CAdjElasticityOutput.cpp:29:; ../SU2_CFD/src/output/../../include/output/COutput.hpp:50:10: fatal error: mel.hpp: No such file or directory; 50 | #include ""mel.hpp""; ```. **To Reproduce**. Firstly, I configure su2 by `python3 ./meson.py build`, and it suceed. . ![image](https://user-images.githubusercontent.com/29271051/159434916-1545a216-7f8d-4742-9b8e-1bdc56924adf.png); ![image](https://user-images.githubusercontent.com/29271051/159434952-60d64b38-1322-4ff5-81ce-9e1e2ef33c03.png). Then, I use `./ninja -C build install` to compile it, and the bug is reported. . **Desktop (please complete the following information):**; - OS: the subsystem (Ubuntu 20) on win10; - C++ compiler and version: gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04); - MPI implementation and version: I do not manually install it. ; - SU2 Version: 7.3.0 ""Blackbird"". Download from git. Any suggestion is appreciated~~~",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1569:3279,config,configure,3279,https://su2code.github.io,https://github.com/su2code/SU2/issues/1569,1,['config'],['configure']
Modifiability,"If 'downstream_function.py' is put in the run directory, whatever function is defined there will be used by finite_differences.py and continuous_adjoint.py with newly implemented boundary conditions that allow passing in gradients from an external function (or defined manually as constants in the config file). ; These are accessed with the ""OUTLET_CHAIN_RULE"" objective and can also be used with optimization. Other changes:; - addition of downstream_function.py in SU2_PY folder: if used this should be copied to the run directory and modified to contain whatever function of interest you want. Limited to quasi 1D functions for now.; - back pressure sensitivity output to screen and convergence history if an outflow-based objective is specified (average pressure, outlet-chain-rule, etc); - 2D symmetry plan now allows movement in the direction of the symmetry line (previously deformations intersecting a symmetry plane resulted in undesired deformations)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/204:298,config,config,298,https://su2code.github.io,https://github.com/su2code/SU2/pull/204,1,['config'],['config']
Modifiability,"If I recall correctly @tobikattman was dealing with a similar issue; (relating local markers to global ones) on his symmetry boundary condition; pull request. I think it would be worth keeping the ADT as clean and; generic as possible. On Mon, 9 Mar 2020, 19:32 Akshay.K.R, <notifications@github.com> wrote:. > Do I understand correctly that the roughness height does not influence the; > wall distance calculation itself?...; >; > @pcarruscag <https://github.com/pcarruscag> , Yes. I can use the markerID; > to find the corresponding roughness as long as the field element and the; > nearest wall marker are on the same rank. I was not sure how to relate the; > markerID on rankID from a different rank to the global config list, hence; > the current implementation. I am open to fixing it with a different; > implementation if I can figure out how to actually do it. The few things I; > tried all ended up causing problems and this was one way to avoid them; > (also my inexperience with MPI did not help).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/877?email_source=notifications&email_token=AJCOXNZA5Z2CBAXSTXG7BTTRGUY3XA5CNFSM4KVE7ON2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEOIQ3CA#issuecomment-596708744>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN2KX3BY5CXBZFKIMM3RGUY3XANCNFSM4KVE7ONQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-597205550:718,config,config,718,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-597205550,1,['config'],['config']
Modifiability,"If I set DV_KIND = HICKS_HENNE, then what exactly does DV_VALUE do? I see that it deforms the mesh, but I am trying to understand how exactly DV_VALUE (a scalar) is related to the vector of design variables defined in DEFINITION_DV?. Thanks for your help and apologies if this is documented elsewhere--I searched for it a bit but could not find a definition.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1254:197,variab,variables,197,https://su2code.github.io,https://github.com/su2code/SU2/issues/1254,1,['variab'],['variables']
Modifiability,"If I understand, you're calling `swig` manually? The typical way to set up the python wrapper is to use the typical build process (i.e. configure, make, make install) but to include the flag `--enable-PY_WRAPPER` during the configure step. The build process will automatically call `swig` for you, with the correct arguments. See the docs for more information: https://su2code.github.io/docs/Python-Wrapper-Build/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/551#issuecomment-404888496:136,config,configure,136,https://su2code.github.io,https://github.com/su2code/SU2/issues/551#issuecomment-404888496,2,['config'],['configure']
Modifiability,"If I'm not mistaken the residual of discrete adjoints is based on normalized variation of the adjoint variables (since there is no conservation principle) and this is already akin to the Cauchy criterion.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/627#issuecomment-444813302:102,variab,variables,102,https://su2code.github.io,https://github.com/su2code/SU2/issues/627#issuecomment-444813302,1,['variab'],['variables']
Modifiability,"If cgns is built with the flag CG_BUILD_SCOPE, all type and variable names are prefixed with 'CG_', which makes SU2 uncompilable.; Prefixing all CGNS variables and types with the macros CGNS_ENUMV and CGNS_ENUMT takes care of this.; These macros are defined in cgnslib.h:. ``` c; #ifdef CGNS_SCOPE_ENUMS; /* set scope prefix for values only */; #define CGNS_ENUMV( e ) CG_ ## e; /* set scope prefix for types */; #define CGNS_ENUMT( e ) CG_ ## e; /* set scope prefix for defines */; #define CGNS_ENUMD( e ) CG_ ## e; /* set scope prefix for variables (lowercase same as functions) */; #define CGNS_ENUMF( e ) cg_ ## e; #else; #define CGNS_ENUMV( e ) e; #define CGNS_ENUMT( e ) e; #define CGNS_ENUMD( e ) e; #define CGNS_ENUMF( e ) e; #endif; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/157:60,variab,variable,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/157,3,['variab'],"['variable', 'variables']"
Modifiability,"If cgns is built with the flag CG_BUILD_SCOPE, all type and variable names are prefixed with 'CG_', which makes SU2 uncompilable.; Prefixing all CGNS variables and types with the macros CGNS_ENUMV and CGNS_ENUMT takes care of this.; This macros are defined in cgnslib.h:. ``` c; #ifdef CGNS_SCOPE_ENUMS; /* set scope prefix for values only */; #define CGNS_ENUMV( e ) CG_ ## e; /* set scope prefix for types */; #define CGNS_ENUMT( e ) CG_ ## e; /* set scope prefix for defines */; #define CGNS_ENUMD( e ) CG_ ## e; /* set scope prefix for variables (lowercase same as functions) */; #define CGNS_ENUMF( e ) cg_ ## e; #else; #define CGNS_ENUMV( e ) e; #define CGNS_ENUMT( e ) e; #define CGNS_ENUMD( e ) e; #define CGNS_ENUMF( e ) e; #endif; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/155:60,variab,variable,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/155,3,['variab'],"['variable', 'variables']"
Modifiability,"If modifying the configure is necessary, I can help with that, but I think Tim is suggesting we just use the MPI_VERSION macro that is already defined by the implementations within the C++ (correct me if I am wrong). So, we could check for MPI_VERSION > 3, for instance. However, I think that in some older implementations this may not be defined, in which case we should default to something safe.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574#issuecomment-419880168:17,config,configure,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/574#issuecomment-419880168,1,['config'],['configure']
Modifiability,"If we go that direction we could use the ENUM options structure that already exits for other settings, allowing the user to set this with a word rather than a number (maybe NO, YES, and APPEND_HISTORY so that current config files would still work the same way, where ""YES"" means the same as ""from initialization file"")",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/99#issuecomment-103964647:217,config,config,217,https://su2code.github.io,https://github.com/su2code/SU2/issues/99#issuecomment-103964647,1,['config'],['config']
Modifiability,"If you are looking for another way to view all of the current config options, you can find them all directly in config_structure.cpp under the routine SetConfig_Options(). We also have a script that should be able to parse this portion of code automatically to give you a clean list, but it might need to be fixed up a little. That script is parse_config.py and can be found in SU2/SU2_PY/.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/277#issuecomment-221687875:62,config,config,62,https://su2code.github.io,https://github.com/su2code/SU2/issues/277#issuecomment-221687875,1,['config'],['config']
Modifiability,"If you are referring to surface heat flux it is one of the default surface outputs.; Maybe there is a bug in v6.2 but in current develop it seems to work fine, you can try using this config: [v7.cfg.zip](https://github.com/su2code/SU2/files/3762621/v7.cfg.zip); Some options changed name since v6.2, you can read about it here: https://su2code.github.io/docs/Guide-to-v7/; I replaced the relevant time domain options but commented out all the output options. On another note I think you should revise your settings, you had a time step of 0 on an unsteady simulation for example. If you have setup questions have a look at the user forum https://www.cfd-online.com/Forums/su2/ and start a topic if there is no related one already. If you have issues with heatflux output with the develop version / v7 we can re-open this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805#issuecomment-545454125:183,config,config,183,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-545454125,1,['config'],['config']
Modifiability,If you run a shape optimization problem (shape_optimization.py) with the RESTART_FLOW_FILENAME config option equal to the SOLUTION_FLOW_FILENAME config option then in each design folder you get symbolic links to the solution in DSN_001 instead of the solution for this design iteration.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/349:95,config,config,95,https://su2code.github.io,https://github.com/su2code/SU2/issues/349,2,['config'],['config']
Modifiability,"If you try to execute parallel_computation.py with a config file that includes two or more design variables:; DV_KIND= ROTATION, ROTATION; DV_MARKER= ( AIRCRAFT ); DV_PARAM= ( 32.90150, 0.0, 0.0, 32.90150, 0.0, 1.0 ); ( 32.90150, 0.0, 0.0, 32.90150, 1.0, 0.0 ); DV_VALUE= 45, 45; SU2 will create a config file config_CFD.cfg that doesn’t work. It doesn’t work because the python is changing DV_VALUE= 45, 45 by DV_VALUE= 0 and the new config file is not correct.; The problem is at the end of config.py, where you can read; # HACK - twl; if config.has_key('DV_VALUE_NEW'):; config.DV_VALUE = config.DV_VALUE_NEW; this line sets to 0 the DV_VALUE. I cannot modify (eliminate) this line without running a serious study about its implications during shape optimization, maybe in the near future if we find a volunteer...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/293:53,config,config,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/293,8,"['config', 'variab']","['config', 'variables']"
Modifiability,"Implementation of the original SA and Negative SA turbulence models as well as their no-ft2 versions. ## Proposed Changes; Implementation of the original version of Spalart-Allmaras turbulence model (https://www.researchgate.net/publication/236888804_A_One-Equation_Turbulence_Model_for_Aerodynamic_Flows).; Implementation of the Spalart-Allmaras turbulence model without the ft2 term.; Implementation of the original version of Negative Spalart-Allmaras turbulence model (https://www.iccfd.org/iccfd7/assets/pdf/papers/ICCFD7-1902_paper.pdf); Implementation of the Negative Spalart-Allmaras turbulence model without the ft2 term neither modified vorticity. On the config file, choose:; SA: Original SA model; SA_NOFT2: SA model without ft2 term (the *same* model found in the develop branch); SA_NEG: Original negative SA model; SA_NEG_NOFT2: Negative SA model (the *same* model found in the develop branch). *They are not the same as in the develop branch, because I corrected a minor bug.*. Updated the template config file to be in accordance with the source code: turbulent models and OUTPUT_FILES tags. ## Related Work; This PR resolves issues #992 and #1051. ## Regression testing; Tested on tutorials:; - Turbulent Flat Plate; - RAE2822; - Turbulent ONERA M6. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1066:665,config,config,665,https://su2code.github.io,https://github.com/su2code/SU2/pull/1066,2,['config'],['config']
Modifiability,Improve progress reporting in the Pointwise plugin,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/33:44,plugin,plugin,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/33,1,['plugin'],['plugin']
Modifiability,Improve the configuration file for the SA Neg test case,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559:12,config,configuration,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559,1,['config'],['configuration']
Modifiability,Improved look-up table query scaling with variable count,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214:42,variab,variable,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214,1,['variab'],['variable']
Modifiability,"In CDriver::Numerics_Preprocessing(...), around line 2030, begins a (large) switch `switch (config->GetKind_ConvNumScheme_Flow()) {` which is where the numerics classes get instantiated, there is a check there for `NO_CONVECTIVE` which should trigger an error (´SU2_MPI::Error(...)´).; But it appears that the error is not triggered, I would start by checking what value CConfig::GetKind_ConvNumScheme_Flow returns when the option is not present in the config, possibly the default value (set somewhere in CConfig) is not `NO_CONVECTIVE`.; If you look for `CONV_NUM_METHOD_FLOW` in config_structure.cpp you will find the line that tries to read that option. The definition for `NO_CONVECTIVE` and all common enumerators is in option_structure.hpp.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/842#issuecomment-567588529:92,config,config,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-567588529,2,['config'],['config']
Modifiability,"In CNSSolver, we do in BC_Isothermal_Wall_Generic:; ```; if (!cht_mode) {; Twall = config->GetIsothermal_Temperature(Marker_Tag) / Temperature_Ref;; }. ```. And we do not check for cht_mode in IncNSSolver. I think this might be the root cause of entering this routine? ; @Cristopher-Morales can you check this?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2281#issuecomment-2111147187:83,config,config,83,https://su2code.github.io,https://github.com/su2code/SU2/pull/2281#issuecomment-2111147187,1,['config'],['config']
Modifiability,"In Xcode, go to the menu item Product -> Scheme -> Edit Scheme... Once the dialogue pops up, there are tabs for ""Arguments"" where you can add the config file name to the command line call, and also ""Options"" where you can set a custom working directory where the config/mesh are located.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/994#issuecomment-631669081:146,config,config,146,https://su2code.github.io,https://github.com/su2code/SU2/issues/994#issuecomment-631669081,2,['config'],['config']
Modifiability,"In `CVolumetricMovement::SetBoundaryDisplacements` the periodic boundaries are left free, and so there is no guarantee that periodicity will be preserved. I don't use the optimization framework, but the default formulation is usually to minimize, i.e. you use a negative weight if you want to maximize, have you tried not setting the weight to -1?. If you want to perturb a single parameter you change one of the values in DV_VALUE. Attach your config...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-626400442:445,config,config,445,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626400442,1,['config'],['config']
Modifiability,"In order to plausibilize the results in a first step I took the fluid-domain of the streamwise periodic 2D-cht testcase .; 1. h=0 <=> adiabatic wall, i.e. heatflux=0; 2. h>>0 <=~> isothermal wall with Twall = Tinfinity. which the results recover (I also checked that nondimensionalization works correct) :+1: See the archive below for mesh and cfg files. See also below for some images. Note though that the definition of the heat-transfer/convection bc above in the PR-header is not correct. the heatflux computes to:. `q=h (T_infinity - T_wall)` with. `h` the the heat transfer coefficient (to be set in config by the user). `T_infinity` the reference temperature at infinity (to be set in config by the user). `T_wall` the the current local temperature of the specific FV-cell (of course done by the code). [htc-cases.tar.gz](https://github.com/su2code/SU2/files/6893231/htc-cases.tar.gz). The first two are for the isothermal case 2. (nondimensionalized). There is still a ~2.5K gap but I cannot go higher with h then 1e5 as I got bad convergence then. . *EDIT 29.07.2021: * In a comment below @pedro pointed out that one should/could add the Jacobian contribution from that bc. Doing so resolves the previously seen (and here documented) convergence issues with high `h`. Running the case again with h=1e8 converges nicely and results in an averaged surface temperature of exactly 400K 👍 . ![image](https://user-images.githubusercontent.com/31306376/127329398-65c4fdb2-2c1c-4657-bf1f-451624de87e0.png); ![image](https://user-images.githubusercontent.com/31306376/127329428-39ec0ef5-2c7b-4df6-8fb5-8ca7778b818d.png). For heatflux=0 and h=0 the results are (as expected) completely identical, the diff between the screen outputs is only that one uses a different bc in that `config file boundary information` tab; ![image](https://user-images.githubusercontent.com/31306376/127329459-ca9c0f26-a69e-498b-ae5a-31dbedf778cf.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-888307312:606,config,config,606,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-888307312,3,['config'],['config']
Modifiability,"In our case, he added the libraries himself and I believe he did some stuff in the configure file in his fork, so I wouldn't be sure whether the `--with-LAPACK-lib` option works as is.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/478#issuecomment-347944491:83,config,configure,83,https://su2code.github.io,https://github.com/su2code/SU2/issues/478#issuecomment-347944491,1,['config'],['configure']
Modifiability,"In part yes. Some old versions do not work.; In part no. I am trying to ensure people use our ""extended meson.py"" by at least checking that the version is the one we expect. This is based on having answered 10's or maybe 100 questions on CFD online and here on GitHub about not being able to build the code because they were using the ""wrong"" meson.py. As I said it has room for improvement both for experts and novices, it seems like either of you would be capable to help, implement it, open a PR, and we'll go from there. The limited time I have for this project is better spent on other things.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1451032341:95,extend,extended,95,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1451032341,1,['extend'],['extended']
Modifiability,"In principle yes, but there are a few complications for coupling everything which made me take a step back:; - The way the different solvers treat the linear system solution is not consistent, e.g. SST does not use it directly, which means the Jacobian-vector product would not be consistent.; - Scaling, this uses finite differences to compute a directed derivative, if the variables have very different magnitudes the error will be large.; - Conditioning, the residual Jacobian is very ill-conditioned it is difficult to solve systems with it at high CFL, and if CFL is low there is not much point in having the true Jacobian...; - Speed, each matrix-free product means one evaluation of the convective and viscous residuals, for schemes that are not vectorized yet this costs a lot which means the quasi-Newton approach will be faster even if it takes more iterations. The current implementation seems capable of pushing through some limit cycles that would otherwise just last forever.; But coupling everything is a bigger bite than I can take right now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183#issuecomment-774498456:56,coupling,coupling,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-774498456,3,"['coupling', 'variab']","['coupling', 'variables']"
Modifiability,"In reply to:; > You are adding the prefix ""_Abstract"" to the new parent classes. For the time being, as we are applying this only for the turbulence model, would it be possible to add also the key word ""Turb"". And... are you completely sure about using the word ""Abstract"" does it makes sense to use something like for example CAvgGrad_TurbBaseline instead of CAvgGrad_Abstract. What do you think?. I'm not fixed on ""Abstract"". In fact, I wanted to use the suffix ""Template"" instead, and only decided on ""Abstract"" as a less satisfactory second choice. As the code currently stands, I totally agree with you. ""Turb"" would be a better suffix. But I was also thinking about possible changes in the future. I can see these classes (`CAvgGrad_Abstract` and `CUpwSca_Abstract`) being used for the transition model (in `numerics_direct_transition.cpp`) as well. Do you agree? Do you think this refactoring should be applied to the transition model?. I didn't picture the transition model as part of this pull request's scope. I wanted to include the transition model as a separate pull request. If we do want to refactor the transition model to eliminate the duplicate code there, then I don't think ""Turb"" or ""TurbBaseline"" are good suffixes. If you do want the duplicate code in the transition model eliminated, then which would you prefer: ""Baseline"", ""Abstract"", ""Outline"", or ""Scalar""? Or do you have another idea?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/422#issuecomment-320700900:888,refactor,refactoring,888,https://su2code.github.io,https://github.com/su2code/SU2/pull/422#issuecomment-320700900,2,['refactor'],"['refactor', 'refactoring']"
Modifiability,"In solver_direct_mean.cpp at the Viscous_Forces routine the heat flux is computed incorrectly. The variable GradTemperature should be multiplied by the UnitNormal variable, rather than the Normal variable. If not, it will result in incorrect heat fluxes at the wall.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/70:99,variab,variable,99,https://su2code.github.io,https://github.com/su2code/SU2/issues/70,3,['variab'],['variable']
Modifiability,"In terms of file organisation I can think of two strategies, one would be grouping them according to parent class, numerics, solver, etc. this would maybe make navigation easier for people who work on the code daily but it does little more than what the naming convention already does. The other would be to group families of classes and that, I think, would help people who are less familiar with the code, so for example numerics, solvers, variables, etc. used for fluid simulations would be separate from the ones used for other physics. The main re-compilation trigger is probably the config, every file includes it and not all need it. Not much can be done here because most classes do use the config in some way but we could try to minimise how much the dependency spreads by:; - Reviewing what cpp files actually need to include config_structure.hpp; - Including from the cpp and using a forward declaration on the corresponding hpp. Other sensitive ""triggers"" are the header files of classes with many children (solver, numerics, and variable) splitting the header files for these (maybe by family for small classes to avoid an explosion of hpp files) would allow working on a child class without re-compiling all others so often. The clients of CSolver would only include the header for the abstract class so those too would be shielded from changes in children classes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-423970045:442,variab,variables,442,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-423970045,4,"['config', 'variab']","['config', 'variable', 'variables']"
Modifiability,"In terms of general look and feel this is ready for folks to have a look, there are a couple kinks to iron out:; - AD preaccumulation, @talbring is it ok to register the same variable for preaccumulation multiple times?; - Boundary numerics, it may not be possible to use these high efficiency classes for boundary terms, they are not as flexible in terms of what can be used as data sources, the current numerics take any old pointer, but these assume the data always comes from CVariable. They will probably need to complement each other.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1022#issuecomment-651205859:175,variab,variable,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-651205859,2,"['flexible', 'variab']","['flexible', 'variable']"
Modifiability,"In terms of streamlining dev process, `clang-format` would help keep code style consistent and `clang-tidy` - consistent code standard and prevent some common programmer errors. Both need a configuration file each in the root directory and most IDEs have built-in support for them. You might also want to consider `fmt` [library](https://github.com/fmtlib/fmt) for string formatting and output instead of `iostream`s. Using it should improve compile and text output times and make writing/understanding formatted strings much easier compared to the current ""chevron hell"". A subset of `fmt` is also becoming standard in C++20.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552244793:190,config,configuration,190,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552244793,1,['config'],['configuration']
Modifiability,"In the first instance I would just try to run the new and original Testcase with just the original config. And from what I can see you need to do the 2 steps mentioned above (Remove `MATH_PROBLEM` and use `SU2_CFD_AD` directly for the adjoint test + use the `no_restart = True` option for the reg test). If nothing else (apart from `Math_Problem` and `restart_sol`) was changed then this should work without an extra `*_adj.cfg`. . In a next step (which is then more of a cosmetic, optional nature) you could strip the comments and unnecessary options from the cfg",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571#issuecomment-1076205105:99,config,config,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571#issuecomment-1076205105,1,['config'],['config']
Modifiability,In this branch the HLLC algorithm has been generalized to Non-Ideal flows so that now it can be used with more complex equations of state. Computation on nicfd LS89 test case with Van der Waals eos show quite similar Cd/Cl predicted values. Furthermore I cleaned up a little bit the original CUpwHLLC_Flow::ComputeResidual: there were some redundancies (some variables were computed twice). I also made changes that in my opinion improve code readability. Regression tests (for the original HLLC) passed on my PC with a difference of 1E-6 on RhoE residual (slight differences were anyway expected). A couple of bugs fixed. Cheers ; Giulio,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/209:359,variab,variables,359,https://su2code.github.io,https://github.com/su2code/SU2/pull/209,1,['variab'],['variables']
Modifiability,"In this current form there is too much dissipation in most situations in my RANS simulations with k-omega-SST (in some situations it appears there is not enough, probably related to a low magnitude of du/dy). I don't have time to try any pure Navier-Stokes cases. The source terms (convection and diffusion) for k and omega should also be implemented I suppose which should be very much analogous so I think I could try to do that. . Otherwise I don't see what could be wrong with the flow source terms. Please let me know if you do. . I have a couple of questions and I would really appreciate if anybody could give any input. 1. What happens when a user specifies several sources? Will only the last one be retained since they are always assigned to the same numerics[iMGlevel][FLOW_SOL][source_first_term]? This matters most for the turbulent source since there is always already another source. 2. Why is the axisymmetric source term for the incompressible variable density version what it is (the publication related to this does not give any derivation)? If it is correct, something about my derivation must be wrong. My derivation : ; - take the equations in cylindrical coordinates (convection term as well as the tau definition, see ""Bird - Transport Processes"" Annex B if needed); - set any d/dtheta and velocity_theta (ignoring swirl) to zero ; - rearrange into two parts, one which resembles the cartesian 2D form (r=y, z=x) and the remaining part is the source term to be added. ; - Is the above derivation wrong?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-721121285:961,variab,variable,961,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-721121285,1,['variab'],['variable']
Modifiability,Included Dockerfiles for multiple platforms and created a Configuration generation UI,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172:58,Config,Configuration,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/172,1,['Config'],['Configuration']
Modifiability,Included github actions in the dependabot config,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1682:42,config,config,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1682,1,['config'],['config']
Modifiability,"Incorporate Parmetis into the SU2 build environment. Note that to build parmetis, a MPI-enabed C compiler is required, so . ``` sh; $ ./configure ... # looks for MPI C++/C compilers; $ ./configure --with-cxx=`which mpicxx` --with-cc=`which mpicc`; $ ./configure --disable-mpi # implicitly disables parmetis; $ ./configure --disable-metis # implicitly disables parmetis too; ```. all do the expected things.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/135:136,config,configure,136,https://su2code.github.io,https://github.com/su2code/SU2/pull/135,4,['config'],['configure']
Modifiability,"Indeed Sigfried, additional turbulence models would only enhance the capabilities of SU2, so they are welcome. In the late 1990s (and when Paul Durbin was still at Stanford), we tried v2-f in a couple of other codes (structured mesh or multi-block structured). I think there was even an implementation that was done for Fluent. In most cases the solution quality was rather good but the stiffness of the solution was significant. It would be interesting to see how the implementation converges in a fully-unstructured code like SU2.; Juan",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/369#issuecomment-281571814:57,enhance,enhance,57,https://su2code.github.io,https://github.com/su2code/SU2/issues/369#issuecomment-281571814,1,['enhance'],['enhance']
Modifiability,"Indeed, at the moment, we are relying on brute force searches. We have discussed using tree searches internally (and potentially have some reusable code available for this), but nothing has been implemented. It looks like pointcloud is released under a BSD license, which is very permissive. Do you have an implementation in SU2 already with this code embedded? It is also fairly straightforward for us to add hooks in the configure process to installed libraries on your system.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-223807001:423,config,configure,423,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-223807001,1,['config'],['configure']
Modifiability,Infinite Loop When Running Grid Adaptivity on Hexahderons,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/487:32,Adapt,Adaptivity,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/487,1,['Adapt'],['Adaptivity']
Modifiability,InitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15477,plugin,plugins,15477,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,Installation: Error during building configuration,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/954:36,config,configuration,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/954,1,['config'],['configuration']
Modifiability,"Interestingly I recompiled the code with no parallel feature i.e. just ./configure instead of ./configure --enable-mpi and then re-ran the Quick folder case. It did produce the plots. Then I ran the rotating airfoil case and it also produced the plots. Finally I ran my particular case and it also dumped the plot files. However, it is sad as it is taking way too longer to process on a single core as compared to what I can do with multi-cores. I wish some one can attend to this unique problem ASAP. Thanks :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/173#issuecomment-99216018:73,config,configure,73,https://su2code.github.io,https://github.com/su2code/SU2/issues/173#issuecomment-99216018,2,['config'],['configure']
Modifiability,Intermediate class of variable for all flow solver variables + Fix for MUSCL in NEMO solver,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1375:22,variab,variable,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375,2,['variab'],"['variable', 'variables']"
Modifiability,Introduction of AUSM+M and AUSM scheme refactoring in NEMO,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773:39,refactor,refactoring,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773,1,['refactor'],['refactoring']
Modifiability,"Is a python 3.x support planned or existing for SU2 ?; It is not so hard to make a code compatible with both version python 2 and 3 but only with recent version of each (2.7 and 3.5 for example). ; So my question is about python 2.x : what minimal version do you want to support ?. You can see a quick fix, only for config class for the moment, here: [gbaty/SU2/py2_and_py3_support](https://github.com/gbaty/SU2/tree/py2_and_py3_support)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246:316,config,config,316,https://su2code.github.io,https://github.com/su2code/SU2/issues/246,1,['config'],['config']
Modifiability,Is it possible the lift coefficient is different because the reference velocity is not the same in the 2 configurarions? Can you output the forces breakdown and see what is the force factor?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1459445037:105,config,configurarions,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1459445037,1,['config'],['configurarions']
Modifiability,Is there a possibility to implement an inputfile for realising a time variable pitching amplitude and frequency in the dynamic mesh definition?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/644:70,variab,variable,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/644,1,['variab'],['variable']
Modifiability,"Is there a way to wrap SU2 code in a namespace quickly? When I try to add new header files from another library, the SU2 constants and variables often conflict.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1410:135,variab,variables,135,https://su2code.github.io,https://github.com/su2code/SU2/issues/1410,1,['variab'],['variables']
Modifiability,"It changes somehow the convergence, but again, it doesn't always have the same effect. ![ComparisonNewBCsRho_EF0 2](https://github.com/user-attachments/assets/9888d427-31b2-4334-be81-4828578d39a3). ![ComparisonNewBCsTKE_EF0 2](https://github.com/user-attachments/assets/0525d670-1236-4cff-8105-df69f9474f13). My problem right now is that if I run the v2003m config on the finest mesh with 40 cores then it diverges after 125 iterations. If I run with 20 cores then it does not diverge. The number of cells/core is more then 10k thus I don't think that the domain is overly partitioned.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2338344025:358,config,config,358,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2338344025,1,['config'],['config']
Modifiability,"It does not break the multizone adjoint but it does not fix the problem. So now when we register the coordinates we do it index-based because the multizone_problem boolean is set.; What are the implications for when we extract the adjoints? Do we need an index-based GetDerivative?. UPDATE: This solves the segfault issue, but the derivatives are probably wrong.; The residuals for the flow adjoint are not moving, @rsanfer any chance that this due to some output adaptation (I'm guessing not).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542191835:464,adapt,adaptation,464,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542191835,1,['adapt'],['adaptation']
Modifiability,"It is not really a bug, since there is indeed a new recording at ExtIter=1 because the tape at this point holds the recording with respect to the geometry variables, but for the iteration we need it with respect to the flow variables. . But I agree that this output is confusing, so yes, I think the change you made is ok (I can remember that some time back it was already like that, but sometimes for debugging purposes I disable that, so maybe at some point it forgot to revert it)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/329#issuecomment-260129837:155,variab,variables,155,https://su2code.github.io,https://github.com/su2code/SU2/issues/329#issuecomment-260129837,2,['variab'],['variables']
Modifiability,"It is now possible to define more complex functions in a separate file called `functions.su2x`. The functions defined there are available in the inline expressions. You can either give the functions explicit arguments or you can use them without any arguments. All fields are available in the global scope. Which variables are available depends on the context in which the function is used in the code. . functions.su2x:; ```; function dragOverLift(){; l = LIFT;; d = DRAG;; return d/l;; }. function speedOfSound(gamma){; p = PRESSURE;; d = DENSITY;; return sqrt(gamma*p/d);; }; ```. config file:; ```; SCREEN_OUTPUT=(INNER_ITER, WALL_TIME, RMS_DENSITY, {dragOverLift()}); VOLUME_OUTPUT = (COORDINATES, SOLUTION, {speedOfSound(1.4)}); ```. The language is much more flexible and allows also for if-statements, loops, maps and so on. For the output it does not make that much sense, but for initial conditions it might be useful later.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913#issuecomment-605486038:313,variab,variables,313,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-605486038,3,"['config', 'flexible', 'variab']","['config', 'flexible', 'variables']"
Modifiability,"It looks like all the tests are finally working. However, the `directdiff_euler_py` output variables are written in the wrong order. It looks like this comes from `SU2/eval/gradients.py`:. ```python; # initialize gradients; func_keys = list(su2io.grad_names_map.keys()); func_keys = ['VARIABLE'] + func_keys; ```. My guess is that there was some assumption that dictionary keys have an inherent order. Now, should the test be doing a diff of the text output, or should it really be checking the numerical values?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-339951861:91,variab,variables,91,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-339951861,2,"['VARIAB', 'variab']","['VARIABLE', 'variables']"
Modifiability,"It looks like pointwise Mesh Link frame have a support for both mesh link and database (CAD) and it includes both edge data and corners (""Edge2"" for edges and begining and end vertices of each edge data set corresponds to corner data.); https://www.pointwise.com/doc/user-manual/file/export/cae/kestrel.html ; https://github.com/pointwise/MeshLink library also provides some info for mesh to CAD projection. . Therefore adap_back mesh file can be prepared in GAMMA mesh file format including corners, edges, triangles, tets and vertices. But l am not sure about the correctness of su2 files created at each refinement level since corner and edge data will be lost when they are written in su2 format. It may be a good idea to use the GAMMA mesh file format for pyamg mesh adaptation levels and use su2 mesh file format only when it is needed for SU2 runs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1673116005:772,adapt,adaptation,772,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1673116005,1,['adapt'],['adaptation']
Modifiability,It looks like that path ('C:\MINGW_W64\mingw_w64\posix\mingw64\bin\..\lib\gcc\x86_64-w64-mingw32\8.1.0\libC:\MICROSOFT_SDKs\MPI\Lib\x64\msmpi.a') should actually be 2; C:\MINGW_W64\mingw_w64\posix\mingw64\bin\..\lib\gcc\x86_64-w64-mingw32\8.1.0\lib; C:\MICROSOFT_SDKs\MPI\Lib\x64\msmpi.a. Maybe some environment variable is not setup correctly? I'm not at all familiar with building SU2 on Windows unfortunately.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1093#issuecomment-715277100:312,variab,variable,312,https://su2code.github.io,https://github.com/su2code/SU2/issues/1093#issuecomment-715277100,1,['variab'],['variable']
Modifiability,"It looks like the SU2_RUN environment variable was not set as described here<https://su2code.github.io/docs/Build-from-Source/>. Scroll to near the bottom for more details. Best,. Juan. On Apr 2, 2018, at 12:00 AM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. From the picture it looks like you use the python script, but that is about all I could see. Could you therefore give some more details? What operating system do you use? How did you compile the code? What version of MPI do you use?. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/521#issuecomment-377870148>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxJgeJsbnZC4ituvS1SoETz-iCeWfks5tkcxxgaJpZM4TDNbe>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/521#issuecomment-377870818:38,variab,variable,38,https://su2code.github.io,https://github.com/su2code/SU2/issues/521#issuecomment-377870818,1,['variab'],['variable']
Modifiability,It passed because the config options were not updated and so no mesh deformation was specified for any of the FSI cases.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/751#issuecomment-518277470:22,config,config,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/751#issuecomment-518277470,1,['config'],['config']
Modifiability,It seems `int totalNumParameters;` has been deleted from the line #205 in _numerics_machine_learning_ header which brings up the error: `‘class CNeurNet’ has no member named ‘totalNumParameters’` in version _4.0.1_ while configuring the suit with Jsoncpp options. I just add it back.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/197:221,config,configuring,221,https://su2code.github.io,https://github.com/su2code/SU2/issues/197,1,['config'],['configuring']
Modifiability,"It's good to hear Paraview has this capability. If SU2 has the structure for such an output maybe this can be extended to Tecplot as well. This will be a good capability. Additionally, I was also thinking of finding a way to plot along gridlines but that is not possible in Tecplot. It's an unstructured mesh so no i, j, k. If the output structure can have some additional information (maybe assign ""dummy"" i, j, k?) that would be a good capability to have as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/995#issuecomment-631645199:110,extend,extended,110,https://su2code.github.io,https://github.com/su2code/SU2/issues/995#issuecomment-631645199,1,['extend'],['extended']
Modifiability,"It's possible that you hit a bug, or the adjoint solver diverged, or... who knows, the python scripts are not very friendly at reporting errors and they are also not very flexible.; My most sincere advice is to follow what is done in this tutorial https://su2code.github.io/tutorials/Species_Transport/ it will save you time in the medium term, and at least you will know what the optimization is doing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666#issuecomment-1160907119:171,flexible,flexible,171,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666#issuecomment-1160907119,1,['flexible'],['flexible']
Modifiability,"It's running.; A small problem is that I have to change `ubuntu:19.04` to `ubuntu:18.04` and change `libopenmpi3` to `libopenmpi-dev openmpi-bin` in the definition, or it will fail.; ```; ubuntu@main-3:~/main_shared_volume/build_singularity_image/builid_image$ sudo singularity build su2_tensorforce.sif su2_tensorforce.def ; INFO: Starting build...; Getting image source signatures; Skipping fetch of repeat blob sha256:1eecd0e4c2cd8c1f628b81c53a487aae6c8d4140248a8617313cd73079be09c4; Skipping fetch of repeat blob sha256:fac13afdf65bf403945c8d6bee654a26940c5527a9913bdf8daa54b69a49f550; Skipping fetch of repeat blob sha256:0c6dd534ddf18642a5af19c09c2d9744d0d1aa93680995d430b5257b6eed079d; Skipping fetch of repeat blob sha256:854703cff8700dce5b5ff70e54f5d612ab701405bc200a5b10a0213ca9025e50; Copying config sha256:993d5f573a24af19dd6006bc3e6e113bd0c709797dc48676f4f0b5ed456470cc; 2.42 KiB / 2.42 KiB [======================================================] 0s; Writing manifest to image destination; Storing signatures; singularity image-build: relocation error: /lib/x86_64-linux-gnu/libnss_files.so.2: symbol __libc_readline_unlocked version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; FATAL: While performing build: while running engine: exit status 127; ```. My OS is ubuntu 18.04, and OpenMPI version is 2.1.1. I will take a test to see the reason. Once if finishes, I will let you know. Thank you.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-515383478:804,config,config,804,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-515383478,1,['config'],['config']
Modifiability,"It's used to implement #1478, and it was merged into develop.; Are those mesons the same version? Because the meson from Ubuntu 18.04 can't even configure SU2, let alone build.; Our build instructions state that you should use the versions shipped with the code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1528#issuecomment-1023012372:145,config,configure,145,https://su2code.github.io,https://github.com/su2code/SU2/issues/1528#issuecomment-1023012372,1,['config'],['configure']
Modifiability,Its fine to change the name in the config file,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006#issuecomment-1501033456:35,config,config,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006#issuecomment-1501033456,1,['config'],['config']
Modifiability,"Juan, all,. The adaptive wall function formulation as described in the paper of Medic et al. has two serious issues. First, the convergence stalls after three orders of magnitude or so and second it only works with an upwind discretization of the inviscid fluxes. For some reason JST type of schemes gave rather poor results. In order to have a reliable implementation, both issues need to be addressed. Unfortunately, we never did. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-307294686:16,adapt,adaptive,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-307294686,1,['adapt'],['adaptive']
Modifiability,"Just another note, portability is one of the cornerstones of SU2, so please try to work within C++11 boundaries, a lot of C++14 features are syntax sugar on top of C++11 capabilities, you can just adapt the example implementations from the online c++ documentation (no boost :) ).; Also compiler specific flags will be a bit of a deal breaker if they don't have support from the major vendors (gcc, clang, intel, ms).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-669267383:19,portab,portability,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669267383,2,"['adapt', 'portab']","['adapt', 'portability']"
Modifiability,"Just as a hint: To print a list of all possible output fields, use the `-d` flag, i.e. `SU2_CFD -d config.cfg`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-535429251:99,config,config,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-535429251,1,['config'],['config']
Modifiability,"Just as an information: I enabled CodeFactor to check the pull requests for tabs and white-spaces (I added CPPLINT.cfg file in the develop branch). However, this configuration does not work properly for PRs that are already open, they still use the default config. That is the reason why it is complaining about ""Redundant blank line .."" For new PRs it should work properly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808#issuecomment-550000663:162,config,configuration,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-550000663,2,['config'],"['config', 'configuration']"
Modifiability,Just compiled today and it seems like the options `CFL_ADAPT` and `CFL_ADAPT_PARAM` have been deprecated? . Running the 2D inviscid cylinder and the euler channel flow example both throw an error. ```; CFL_ADAPT: invalid option name. Check current SU2 options in config_template.cfg.; CFL_ADAPT_PARAM: invalid option name. Check current SU2 options in config_template.cfg.; ```. Commenting these lines out lets the test cases run but I'm not sure what the default behavior is (are these running with adaptive CFL if we don't pass that parameter at all?),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152:500,adapt,adaptive,500,https://su2code.github.io,https://github.com/su2code/SU2/issues/152,1,['adapt'],['adaptive']
Modifiability,"Just delete the configuration folder that you used in the meson call (probably ""build"" if you followed the documentation).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-619964844:16,config,configuration,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619964844,1,['config'],['configuration']
Modifiability,"Just one thought on this. I think it would be nice to run the validation suite for every release, that would force us to keep the configurations up to date, and provide an extra level of quality assurance. Most of the cases will be too expensive for travis but hopefully the computational burden can be spread over the community.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423119881:130,config,configurations,130,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423119881,1,['config'],['configurations']
Modifiability,"Just playing devil's advocate: are there reasons for removing the files other than possible conflicts in the generated Makefile.in during development?. If it works most of the time out of the box, then I think the lesser evil is for a few developers (who know a little about autotools) to deal with these conflicts from time to time rather than force all users to take an additional step to run bootstrap, which could be confusing. I think that having configure-make-install work immediately for most folks is important for the growth of the code (ease of install is critical or people will give up). In some cases it will fail, and bootstrap is there to save the day in those cases. Any other considerations I am forgetting?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-427404615:452,config,configure-make-install,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-427404615,1,['config'],['configure-make-install']
Modifiability,"Just to be sure, you tried the develop branch right?; Please provide everything necessary to run the case, just the configs is not enough to reproduce the issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2085#issuecomment-1640401833:116,config,configs,116,https://su2code.github.io,https://github.com/su2code/SU2/issues/2085#issuecomment-1640401833,1,['config'],['configs']
Modifiability,"Just to save others the trouble, the python scripts work by automatically creating temporary configs for the different steps, e.g. running SU2_CFD, SU2_CFD_AD, etc. It seems that if there are multiple control points (DV_PARAM) in the user config, the scripts break because they only write one DV_VALUE (and DV_KIND I think).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1289#issuecomment-841797597:93,config,configs,93,https://su2code.github.io,https://github.com/su2code/SU2/issues/1289#issuecomment-841797597,2,['config'],"['config', 'configs']"
Modifiability,"Just want to leave some notes here, open to any thoughts or suggestions. I think it's best to have it work something like this for 1st-order dual timestepping:. TIME_STEP=0.5; RESTART_ITER=0; ----------------------------------------------------------------------; Time_Iter Cur_Time; 0 0.0; 1 0.5; 2 1.0; ----------------------------------------------------------------------; Output of restart_flow_00002.dat associated with t=1.0. Then if I want to restart that simulation but with a different timestep, I would have to make sure `START_TIME` represents the time at which the first iteration in the restart is completed to, NOT the time from the previous restart file:. TIME_STEP=0.25; RESTART_ITER=3; START_TIME=1.25; ----------------------------------------------------------------------; Time_Iter Cur_Time; 3 1.25. I think it may make more sense to just call it `RESTART_TIME` so it is consistent with `RESTART_ITER`. However I don't think that this adaptive timestepping functionality / changing of timesteps for unsteady restarts would work for 2nd-order dual timestepping since information on the previous dt is lost. It wouldn't be too challenging to have a check for this in `CDriver::SetUnsteadyTimestep` and also a warning if `START_TIME` is used on an unsteady restart with it, but it may be getting a bit clunky at that point.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190#issuecomment-1871406591:956,adapt,adaptive,956,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190#issuecomment-1871406591,1,['adapt'],['adaptive']
Modifiability,"KAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; con",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:9853,config,configure,9853,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability,"KER_MONITORING, MARKER_DESIGNING: The main idea is to be able to compute to different integrals over the surfaces: one for simulation and the other for design. e.g. You maybe want to include all the solid surfaces and fan faces, and charging stations in MARKER_MONITORING to compute (Drag-Thrust) but in MArKER DESIGN you are only interested on the wing surface for design.; > ; > DV_MARKER. This is an unfortunately name. At the very beginning the mesh deformation capability was developed only for shape design (DV = Design Variables). We should generalize the names of the grid deformation parameters without using DV. Thanks!; Francisco. On Aug 18, 2015, at 4:31 AM, Heather Kline notifications@github.com wrote:. > Thanks Tom; > I agree that we should make things easy to understand. ; > My thinking was that most users will want to know what parts of the mesh they are moving, but don't necessarily need to know what's happening underneath - if they specify the entire mesh the code just reverts to the more efficient method. But (from the users perspective) it may be just as easy to have a separate specification for scaling the entire mesh.; > ; > In terms of moving it to SU2_MSH; I think it may make sense to include scale/rotate/translate in SU2_MSH, but I think it would be confusing to have two options that do the same thing. I would side with separate option names (this would also eliminate a loop over markers in this pull request); > ; > On this topic, I have sometimes found MARKER_DESIGNING and DV_MARKER to be confusing; on their own they sound very similar, in the description MARKER_DESIGNING is where the objective function is evaluated - but in the code, it's not clear what MARKER_DESIGNING does - the surfaces specified by MARKER_MONITORING are what are actually used to evaluate the objective function value.; > ; > There may be other similar areas where config file options could be clarified or compressed.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-133010923:2340,config,config,2340,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-133010923,2,['config'],['config']
Modifiability,"Krishna,. Thanks for your contributions. I have a couple of questions...; 1. Can the dockerfiles be made more general so that a user does not need to manually change the paths, i.e., avoid having the pathname on your machine hard-coded?; 2. The config generator is nice (it seems to even be working in Safari), but I have one concern: can it be made to automatically track the current available options in the code since these change somewhat frequently? For instance, we have a gui utility that does this in Python by parsing the config_structure.cpp file for current options (SU2_PY/config_gui.py). Can your web-based tool be made to do something similar?. Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172#issuecomment-126105709:245,config,config,245,https://su2code.github.io,https://github.com/su2code/SU2/pull/172#issuecomment-126105709,1,['config'],['config']
Modifiability,LAPACK is currently not used at all ... we probably need to clean up the configure script at some point.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/478#issuecomment-347913899:73,config,configure,73,https://su2code.github.io,https://github.com/su2code/SU2/issues/478#issuecomment-347913899,1,['config'],['configure']
Modifiability,"Lately I've been playing with Ipopt, which has auto scaling, the documentation (https://coin-or.github.io/Ipopt/OPTIONS.html#OPT_NLP_Scaling) and implementation papers go into decent detail about the strategies they have.; That being said, in the optimizations I've run in the past using L-BFGS-B, I scaled the objectives, constraints, and variables to the [-1, 1] range, and things seemed to work ok, i.e. not excessively long line searches etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616830810:340,variab,variables,340,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616830810,1,['variab'],['variables']
Modifiability,"Let me begin by saying ""Thank you so, so much for your time and efforts to write SU2 and then distribute as open source!"" . I now wish to make a complaint -- as far as I can tell there is not even a command manual for SU2. I think this should be a requirement for SU2. Tutorials are not enough:. > SU2 includes strict error checking of the config file upon execution of one of the C++ modules. For example, the code **will throw errors if unknown options are specified**, options appear more than once, extra text appears outside of comments, etc. A user should be able to reference a single document to find command syntax and options. As an excercise, I ""tried"" to use a dd-ilut preconditioner with 2 submatrices, symmetric overlap, a drop-tolerance of 1e-4, and a fill of 1.3, with a GMRES solver utilizing a modified Gram-Schmidt orthoganolization, kspace of 30, and RCM reordering... SU2 failed. Ok, so I didn't _actually_ try to do this, but if I were to try this how would I know SU2 _couldn't_ use this? To fill in this exercise I accessed the Trilinos Aztec User Manual: https://trilinos.org/oldsite/packages/aztecoo/AztecOOUserGuide.pdf which, while it doesn't attempt to tell me _what_ a krylov subspace is, at least tells me that I can and how to use the argument _AZ_kspace_. Then as a user I can google _GMRES kspace_ to find the theory / explanation if I so choose. Can this be a thing? At least a text document with commands and allowed arguments?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/183:340,config,config,340,https://su2code.github.io,https://github.com/su2code/SU2/issues/183,1,['config'],['config']
Modifiability,"Let's continue this here @suargi as it should be more visible for everyone. In principle, I like what you suggest, it is clean and concise.; However, I see one big issue with backwards compatibility of the config. KIND_TURB_MODEL is in almost every config (in the world) and we cannot simply break compatibility, something with this much impact would require SU2 v8 :smile: . This is not to say you could not implement what you propose, just that you need to make it compatible with the status quo.; For example:; KIND_TURB_MODEL= SA-NEQ; QCR= YES; (I'm not even sure if that makes sense but anyway); Needs to be converted internally to:; KIND_TURB_MODEL= SA; TURB_MODEL_CORRECTIONS= SA-NEG, SA-QCR2000. And of course, if someone uses the new option TURB_MODEL_CORRECTIONS you can enforce that KIND_TURB_MODEL only contains NONE, or SA, or SST, and that corrections do not appear in the config in any other way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1364#issuecomment-907388593:206,config,config,206,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-907388593,6,['config'],['config']
Modifiability,"Look at the warnings in the first couple of lines, e.g.; warning: libopen-rte.so.40, needed by /work/A/openmpi/3.0.0_intel2018u2/lib/libmpi.so, not found; Apparently your MPI implementation relies on these libraries, but it cannot find them. You'd better ask your system administrator, because I don't know the details of the configuration of your machine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744534832:326,config,configuration,326,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744534832,1,['config'],['configuration']
Modifiability,Lower bounds of the design variables are violated by optimizer,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/795:27,variab,variables,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/795,1,['variab'],['variables']
Modifiability,MARKER_ROUGHWALL is fine too. Do you want some help with the MPI to avoid setting data into the config? (I don't want to create too much friction but that is something that should really be avoided).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-652641123:96,config,config,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-652641123,1,['config'],['config']
Modifiability,MPI Point-to-Point Refactoring + New Periodic BC Implementation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:19,Refactor,Refactoring,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,1,['Refactor'],['Refactoring']
Modifiability,"MS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified bound 33 equals destination size [-Wstringop-truncation]; strncpy(str_buf, SolTag[i], CGNS_STRING_SIZE);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Rele",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:3740,variab,variable,3740,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,2,['variab'],['variable']
Modifiability,"Made the last of the changes that I wanted too in connection to the comments provided by @economon and @pcarruscag . Just as a review of the things I changed: . 1) Changed the error message; 2) Implemented the UQ methodology for a non-ideal fluid and for both gradient methods (AvgGrad and AvgCorrectedGrad). ; 3) generalized the eigen-decomposition functions for order n matrices. Also made the functions static so that they can be used without the need for an instantiation of the CNumerics class; 4) Improved performance by moving variable declarations to the class constructor for CNumerics; 5) Changed UQ config option names to be more specific. Added an output message for when people use the previous names.; 6) This instigated some changes to the TestCases config files, and to the compute_uncertainty.py script.; 7) Some general code clean up. Let me know if there are any other improvements that I should include.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-434551782:534,variab,variable,534,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-434551782,3,"['config', 'variab']","['config', 'variable']"
Modifiability,"Make changes throughout the docs about requiring bootstrap before configure-make-install for all releases after v6.1.0, and implement clear strategy for master branch and source distributions for subsequent releases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/599:66,config,configure-make-install,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/599,1,['config'],['configure-make-install']
Modifiability,"May I add my 10 cents: I also encountered this problem, starting from ver 7 if I recall correctly. It happens on a cluster using rdma protocol and NFS, with Redhat Linux (matches the Centos configuration listed above). It doesn't happen on a single machine with several cores using Ubuntu (my LT). Fortunately, it aborts after all writing is complete... Moving to ascii output (RESTART_ASCII, READ_BINARY_RESTART=NO, WRT_BINARY_RESTART=NO had no effect (still aborts).; I think that it is a problem related to the machine setup/system SW. However, it doesn't happen with other codes or previous versions of SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-624457511:190,config,configuration,190,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624457511,1,['config'],['configuration']
Modifiability,"Maybe CNumerics is not the perfect place, but it is good enough for government work (there are much more misplaced things in there). The ""everything is class"" OO approach applied to the lowest level of abstraction is... well I think it is terrible -- and it has taken me a mighty long time to get rid of it in CPoint and CVariable and to design alternative Numerics -- because:; - Boilerplate: Set this, get that, constructor, destructor;; - Thread safety: Those classes always end up having some mutable state that renders them thread-unsafe;; - Correctness: Many of the classes we have follow this paradigm of ""pass by member variable"" - I like to know what are the inputs and outputs of something just by looking at the signature;; - Slowww: Too much virtual;; - Unnecessary complexity: A case of using a canon to kill the mosquito, good code should be as simple as possible, if a function does the job then that is the level of abstraction we should use. My introduction to C++ was also the ""everything is class"", then one day I read ""From Mathematics to Generic Programming"" and well, I started liking C++ a whole lot more.; The standard template library is incredibly successful, and it ""just"" provides some containers and generic algorithms which are functions. That is what we need in SU2, some decent containers and generic algorithms to operate on them. OO and its patterns are very good high level tools to achieve encapsulation and to isolate code, which are very important for projects with millions of lines of code, but for low level things they are overkill. Sorry for the rant, I guess I have strong feelings about tiny classes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-742629412:628,variab,variable,628,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742629412,2,['variab'],['variable']
Modifiability,Maybe it makes more sense to have this changes in a separate branch for now ? This way we avoid potential problems for others in case there are some modifications of this config option necessary during the final implementation of the wall functions.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/435#issuecomment-329400246:171,config,config,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/435#issuecomment-329400246,1,['config'],['config']
Modifiability,"Merging this now to keep the PR and the number of problems, that will arise in other code, in bounds. This work will be continued in a future PR. If your code breaks after merging this PR you most likely just have to add an `<ENUM_NAME>::` in front of your enum variable. Thanks @pcarruscag for the idea and the setup in `option_structure.inl`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1242#issuecomment-815011215:262,variab,variable,262,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242#issuecomment-815011215,1,['variab'],['variable']
Modifiability,Mesh Adaptation and missing SU2_MSH in v7.0.8,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143:5,Adapt,Adaptation,5,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143,1,['Adapt'],['Adaptation']
Modifiability,MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ;,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:14605,plugin,plugins,14605,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpVersions.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin_Instructions.txt (0) ; - I QuickStart/inv_NACA0012.cfg (0) ; - I README (0) ; - I SU2_CFD/include/SU2_CFD.hpp (0) ; - I SU2_CFD/include/definition_structure.hpp (0) ; - I SU2_CFD/include/f,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:19788,plugin,plugins,19788,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpVersions.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin_Instructions.txt (0) ; - I QuickStart/inv_NACA0012.cfg (0) ; - I README (0) ; - I SU2_CFD/include/SU2_CFD.hpp (0) ; - I SU2_CFD/include/definition_structure.hpp (0) ; - I SU2_CFD/include/fluid_model.hpp (0) ; - I SU2_CFD/include/fluid_model.inl (0) ; - I SU2_CFD/include/integration_structure.hpp (0) ; - I SU2_CFD/include/integration_structure.inl (0) ; - I SU2_CFD/include/iteration_structure.hpp (0) ; - I SU2_CFD/include/numerics_machine_learning.hpp (0) ; - I SU2_CFD/include/numerics_machine_learning.inl (0) ; - I SU2_CFD/include/numerics_machine_learning_turbulent.hpp (0) ; - I SU2_CFD/include/numerics_structure.hpp (0) ; - I SU2_CFD/include/numerics_structure.inl (0) ; - I SU2_CFD/include/output_structure.hpp (0) ; - I SU2_CFD/include/solver_structure.hpp (0) ; - ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:20379,plugin,plugins,20379,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"Method described below.; No config options needed.; Takes about a minute to interpolate an 8M node mesh to a 70M mesh on 1000 cores.; May or may not add OpenMP to this which would improve scalability.; Restarts are read twice for RANS problems, which is not great for this type of feature...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1277:28,config,config,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/1277,1,['config'],['config']
Modifiability,"More refactoring, fixes, and new features related to CDriver and CIteration.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/199:5,refactor,refactoring,5,https://su2code.github.io,https://github.com/su2code/SU2/pull/199,1,['refactor'],['refactoring']
Modifiability,"Motti; Welcome to the community 🙂; Did you install with mpi?; Best; Eran. On Wed, Apr 15, 2020 at 17:39 mottiadar <notifications@github.com> wrote:. > Hi Everyone.; >; > I'm new to SU2.; > Installed on my mac (Catalina) the parallel version 7.0.2.; > Also installed MPICH.; >; > I am not using bash but rather tcsh (maybe there is a problem there...); > Added the following lines to .tcshrc:; > setenv SU2_RUN /Applications/SU2/bin; > setenv PYTHONPATH $SU2_RUN; >; > I have tried to run the onera3D tutorial case in parallel and got the; > following message:; > % parallel_computation.py -f inv_ONERAM6.cfg -n 2; > Traceback (most recent call last):; > File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in; > main(); > File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; > options.compute ); > File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in; > parallel_computation; > info = SU2.run.CFD(config); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; > the_Command = build_command( the_Command, processes ); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in; > build_command; > raise RuntimeError('could not find an mpi interface'); > RuntimeError: could not find an mpi interface; >; > Ideas to what can I do?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G6VMI65FZZ5IRC7BT3RMXBLRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/938#issuecomment-614081827:944,config,config,944,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614081827,1,['config'],['config']
Modifiability,"Move FFD parameters for number or boxes, corner points, etc., to the config file...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/147:69,config,config,69,https://su2code.github.io,https://github.com/su2code/SU2/issues/147,1,['config'],['config']
Modifiability,Multiline config option values and Paraview vtu default output,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/996:10,config,config,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/996,1,['config'],['config']
Modifiability,Muscl reconstruction for flow variables applied twice when scalar_upwind scheme is used,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2297:30,variab,variables,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/2297,1,['variab'],['variables']
Modifiability,"My fault - I realised that I only specified the CC variable, and not the CXX variable too. For anyone who faces this issue in the future (or myself, if I forget), you'll need to also install both gcc and g++. i.e.:; ```; conda install gcc_linux-64 gxx_linux-64; ```; Then you can run meson with the following:; ```; CC=/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-gcc CXX=/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-g++ ./meson.py build -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8; ```; That solves the first issue above and the compilation which stalled before now completes. Now, I'm hitting another issue, @vdweide - can you take a look again? I'm getting a lot of undefined references; is it conflicting with the supercomputer's openmpi? Thank you for the help.; ```; ninja: Entering directory `build'; [437/448] Linking target SU2_SOL/src/SU2_SOL; FAILED: SU2_SOL/src/SU2_SOL ; /home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-g++ -o SU2_SOL/src/SU2_SOL SU2_SOL/src/SU2_SOL.p/SU2_SOL.cpp.o SU2_CFD/src/libSU2core.a.p/solvers_CSolver.cpp.o SU2_CFD/src/libSU2core.a.p/solvers_CBaselineSolver.cpp.o SU2_CFD/src/libSU2core.a.p/solvers_CBaselineSolver_FEM.cpp.o SU2_CFD/src/libSU2core.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core.a.p/output_COutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_output_structure_legacy.cpp.o SU2_CFD/src/libSU2core.a.p/output_tools_CWindowingTools.cpp.o SU2_CFD/src/libSU2core.a.p/output_CBaselineOutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CParallelDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CParallelFileWriter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CFEMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CSurfaceFEMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CFVMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CSurfaceFVMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CCSVFileWriter.cpp.o SU2_CFD/src/libSU2core",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744503849:51,variab,variable,51,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744503849,2,['variab'],['variable']
Modifiability,"My goal is to have a simple pressure pulse propagate within the domain to ensure my setup is not wrong (boundary conditions, axisymmetry etc). The procedure I follow:; - I set the reference conditions to a quiscent flow condition. ; - Then have SU2 write a RESTART_ASCII file.; - I then modify this ASCII file to now have a Gaussian pressure pulse at the domain center.; - Next, I ask SU2 to read this restart_file.csv as the solution_file.; - However, the very next iteration from SU2 using this initial condition (IC) is a quiescent one. ; - I have tried different solvers and time steps and CFL numbers to no avail. ; - I suspect my configuration file is time stepping away from the pulse IC so quickly that there is no evidence of it in the next time steps I have SU2 write. . Please share any thought you might have regarding the issue my Config file is attached to this comment. . [AcousticPulseTS.txt](https://github.com/su2code/SU2/files/5643539/AcousticPulseTS.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1122:636,config,configuration,636,https://su2code.github.io,https://github.com/su2code/SU2/issues/1122,2,"['Config', 'config']","['Config', 'configuration']"
Modifiability,"My previous post used a linear solver precision of 1E-6. I ran a couple of test cases at near machine precision (a linear solver tolerance of 1E-14) and higher CFL number (CFL=150), with no CFL adaptation. As suggested, I used ILU+FGMRES. I capped the maximum number of linear solver iterations at 200, and did not raise any errors if the linear solver stopped at 200 iterations with less than 1E-14. The linear solver didn't exceed 200 iterations for the RANS equations, but it did for the Navier-Stokes equations. Once again, there doesn't appear to be a huge difference. For the flat-plate, the results were almost identical:. ![flat_plate_improved](https://user-images.githubusercontent.com/13340225/35233993-595fe2d4-ff65-11e7-9fd6-4b98f30b4d75.png). For the NACA 0012 airfoil, the current `develop` branch of the code outperformed this pull request:. ![naca0012_improved](https://user-images.githubusercontent.com/13340225/35233983-4f79b380-ff65-11e7-81f4-4b65964acecc.png). I believe overall convergence was similar because the Navier-Stokes solver, not the turbulence-solver, is the limiting factor when it comes to precision. The linear solver always converged on a turbulence solution with high precision in under 50 linear solver iterations. Meanwhile, the linear solver sometimes failed to find a Navier-Stokes solution within 1E-14 even after 200 iterations. The only way to make the Navier-Stokes solver converge to 1E-14 was to use small time steps (CFL ~= 1) at difficult points in the overall convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/491#issuecomment-359811658:194,adapt,adaptation,194,https://su2code.github.io,https://github.com/su2code/SU2/pull/491#issuecomment-359811658,1,['adapt'],['adaptation']
Modifiability,"N ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4644: result: gcc -E; configure:4664: gcc -E conftest.c; configure:4664: $? = 0; configure:4678: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4678: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:9487,config,configure,9487,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"N; ++k); grad(iPoint+k,iVar,iDim) = gradI[iVar][iDim][k];; ...; ```; Similarly when computing the gradient we need to first fetch/transpose it to be able to vectorize subsequent computations; ```c++; FltVec gradI[MAXNVAR][MAXNDIM];. for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); for(size_t k=0; k<SIMDLEN; ++k); gradI[iVar][iDim][k] = grad(iPoint+k,iVar,iDim);; ...; ```; Performance wise this is actually better than the SoA version (4% on gradients, 35% on limiters) as it also benefits from better locality, and it is only slightly (3%) worse than zig zag storage, especially when fusing limiters and gradients as the transposition of the gradient into storage is greatly amortised.; Regarding readability, the 3 nested loops can be moved to methods of the container, but we cannot get rid off the local variable (if we want vectorization that is). **We lose the ability to vectorize primitive variable updates efficiently with AoS** but currently that only accounts for 3% of the runtime and it is a memory bound operation therefore it would not gain much from vectorization anyway. On the subject of de-swizzling data remember I said the writes into CSysMatrix would be a bit weird, that is because each Jacobian contribution will be a ""matrix of short arrays"" that needs to be transformed into a short array of matrices, the result of that is code like the above that explicitly manipulates the lanes of our SIMD type, such code can be completely hidden inside CSysMatrix which is good because a 4x4 vectorized transpose and matrix update looks like this; ```c++; // block j, subs from jj and goes to ij; T0 = blk_j[ k ].unpackLo(blk_j[k+1]); T1 = blk_j[ k ].unpackHi(blk_j[k+1]);; T2 = blk_j[k+2].unpackLo(blk_j[k+3]); T3 = blk_j[k+2].unpackHi(blk_j[k+3]);. C0 = T0.widePermuteLo(T2); C1 = T1.widePermuteLo(T3);; C2 = T0.widePermuteHi(T2); C3 = T1.widePermuteHi(T3);. (Array4d(&bjj[0][k])-C0).store(&bjj[0][k]);; (Array4d(&bjj[1][k])-C1).store(&bjj[1][k]);; (Arr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:15136,variab,variable,15136,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['variab'],['variable']
Modifiability,NACA 0012 Test Case does not converge with provided config file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/37:52,config,config,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/37,1,['config'],['config']
Modifiability,"NT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <stdio.h>; | #ifdef HAVE_SYS_TYPES_H; | # include <sys/types.h>; | #endif; | #ifdef HAVE_SYS_STAT_H; | # include <sys/stat.h>; | #endif; | #ifdef STDC_HEADERS; | # include <stdlib.h>; | # include <stddef.h>; | #else; | # ifdef HAVE_STDLIB_H; | # include <stdlib.h>; | # endif; | #endif; | #ifdef HAVE_STRING_H; | # if !defined STDC_HEADERS && defined HAVE_MEMORY_H; | # include <memory.h>; | # endif; | # include <string.h>; | #endif; | #ifdef HAVE_STRINGS_H; | # include <strings.h>; | #endif; | #ifdef HAVE_INTTYPES_H; | # include <inttypes.h>; | #endif; | #ifdef HAVE_STDINT_H; | # include <stdint.h>; | #endif; | #ifdef HAVE_UNISTD_H; | # include <unistd.h>; | #endif; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking X11/Intrinsic.h presence; configure:5409: gcc -E conftest.c; conftest.c:28:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:14157,config,configure,14157,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability,"Naturally, I was using preconfig.py; However, while running it complained that it can't find configure: here is the printout; ----------------------; export CXXFLAGS=""-O3 -Wall -std=c++11 "" && ./preconfigure.py --enable-autodiff --enable-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-598686170:93,config,configure,93,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170,2,['config'],"['configuration', 'configure']"
Modifiability,Need to figure out how to adapt for noneq flows. I haven't been able to find a separate description of how to solve for boundary conditions for noneq flows with Riemann invariants.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1882#issuecomment-1378279716:26,adapt,adapt,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1882#issuecomment-1378279716,1,['adapt'],['adapt']
Modifiability,New SA version/correction combinations and new way of specifying them in the config (SA_OPTIONS=...),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1646:77,config,config,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/1646,1,['config'],['config']
Modifiability,"New code created by Blanca Fuentes Monjas, pushed by Evert Bunschoten for permission reasons. ## Proposed Changes; - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1*T + n2*T^2 +n3*T^3 + n4*T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS) ; - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. ; - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent.; . ## Related Work; - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1684:551,inherit,inheritance,551,https://su2code.github.io,https://github.com/su2code/SU2/pull/1684,1,['inherit'],['inheritance']
Modifiability,"New features:; - Control of the RBF interpolation matrix sparsity via option `RADIAL_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:1105,refactor,refactoring,1105,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['refactor'],['refactoring']
Modifiability,"Nice progress @pcarruscag!. I like the concept of your SIMD-friendly class that will take care of the data structure under the hood coupled with a standard type of loop statement (w/ +SIMDLEN). This should make it pretty easy for folks to still modify the kernels without having to worry about the data alignment, and they can reuse the same simple 'for' construct repeatedly. . Another reason to have our own lightweight class for this is that you can avoid dependence on OpenMP for SIMD (although that feature looks to have potential and wasn't available until somewhat recently) as well as the intrinsics. In my experience, the latter is especially bad for portability and readability (part of why we left the CaF work in a separate repo). It starts to become so specialized that compiling and modifying become difficult. W.r.t. OpenMP, another roadblock there a few years ago was making sure it is interoperable with CoDi for the adjoint, but I know this has been worked on and may be available by now. Might keep an open mind about point vs. edge. In some places, we may be able to pump up the compute in our loops by fusing kernels, as previously discussed (and I am guessing you are working on this already with gradients/limiters). Could change the final performance numbers significantly. Lastly, I know you are not there yet, but it is worth considering whether you can reuse anything you are developing in the kernels here for the linear solver routines. At some point, you will successfully reduce the cost of the residual kernels (RHS) to the bandwidth limit, and the majority of the iteration cost will be in the linear solver (it is already about 50% of the iteration cost before optimization, if I recall). Before making final decisions on strategy, you should consider if it will help in any of the linear solver routines too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530440072:660,portab,portability,660,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530440072,2,['portab'],['portability']
Modifiability,"Nice work already! If you click on 'Details' at the right of the failed Regression and Unit Testing cases you will see why they fail. I think one of the first things to do is go through these error messages ('variable may be used uninitialized', etc) and fix them so the regression tests will run.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810#issuecomment-1307771069:209,variab,variable,209,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810#issuecomment-1307771069,1,['variab'],['variable']
Modifiability,"Nice work, and thanks for sharing, @jayantmukho. I expect you'll add everything to the V&V repo and eventually the V&V tab once we understand what is happening?. The GG results look great, potentially even better than the previous set of results we had for the DSMA case. I am also surprised to see the behavior of the GG+LSQ.. the finest mesh seems to be especially errant. I have been running the NACA 0012 case, and I also see that the results with pure GG or WLSQ are slightly better there, but not this drastic. I think we still need to dial in the LSQ and make sure we do not have any bugs. Although, the flat plate and bump-in-channel cases were run with LSQ and gave very good results. It could be that too much curvature in the grid, especially near walls (which is known to be a potential problem), is causing these issues for the LSQ accuracy, but I'm surprised it would be that significant. Still looking into this... As for adaptive CFL, sometimes I find that just turning it off for some rans cases and using a fixed 250, 500, or 1000 works best. Does that work for you with these cases with GG or WLSQ, @jayantmukho ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-553521522:937,adapt,adaptive,937,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-553521522,1,['adapt'],['adaptive']
Modifiability,"Nice! . Since the probe location is taken from the nearest neighbor, should the actual probe location also be written to output?; [edit] the transported variables of all active solvers are written?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1909#issuecomment-1418283041:153,variab,variables,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/1909#issuecomment-1418283041,1,['variab'],['variables']
Modifiability,"No meson option yet, it is a very small one though, the whole system works by detecting `-fopenmp`.; Your second comment is the main argument against moving the parallel section further up.; Allocation routines have the highest risk of making a mess, but even seemingly innocuous things like the small auxiliary arrays we allocate e.g. in CSolver and then use in derived classes are a problem.; I am almost done making the FEA solver completely hybrid parallel and I had to refactor most uses of those arrays. This is also why I took a more functional approach to the new limiter and gradient routines. The way we use CConfig is also not thread safe, we would need to make all ""SetSomethings"" atomic, which would be monumental.; Initially I would have a few parallel sections (it is not too difficult to then move them up if we think that is the way to go) I want to use the FEA solver to get an idea for the relative performance, after seeing the effect of `OMP_WAIT_POLICY` I am optimistic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-566667503:474,refactor,refactor,474,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566667503,1,['refactor'],['refactor']
Modifiability,"No need for Intel buddies, I know what's up. Take [this code:](https://gcc.godbolt.org/z/siQamn); ```; class Base {; public:; inline virtual double get() const {return 0.0;}; };. class Derived : public Base {; double val;; public:; Derived(double a) : val(a) {}. inline double get() const final {return val;}; };. double fun1(Base* obj) {; return obj->get();; }. double fun2(Base* obj) {; return static_cast<Derived*>(obj)->get();; }; ```. `get` of derived has been marked `final` so in `fun2` polymorphism should be optimized away. Here is the assembly for gcc 5.4:. ```; fun1(Base*):; mov rax, QWORD PTR [rdi]; jmp [QWORD PTR [rax]]; fun2(Base*):; movsd xmm0, QWORD PTR [rdi+8]; ret; ```; `fun1` needs a jump, `fun2` knows what to return right away. Here is the assembly for icc 17:; ```; fun1(Base*):; mov rax, QWORD PTR [rdi] #16.12; mov rdx, QWORD PTR [rax] #16.12; jmp rdx #16.12; fun2(Base*):; mov rax, QWORD PTR [rdi] #20.34; mov rdx, QWORD PTR [rax] #20.34; jmp rdx #20.34; ```. @vdweide please tell me you did not use icc 19, because it performs this optimization just fine on this simple example. By the way @talbring (since you asked in #753), take away the `final` keyword and nothing gets optimized by the `static_cast`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-523952473:494,polymorphi,polymorphism,494,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-523952473,2,['polymorphi'],['polymorphism']
Modifiability,"No problem at all Francisco. As I said in the mail before, I'll update the; subroutine without using complex variables so that we don't have the issues; with AD and still have a working version of HB. On Fri, Nov 11, 2016 at 10:13 PM, Francisco Palacios <; notifications@github.com> wrote:. > By the way, you are doing a great job with the HB. And, sorry to comment; > out your subroutine. I'm using #ifdef CHECK_AD (line 3670, driver; > structure.cpp). For the time being, I have also commented out the; > regression test.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > https://github.com/su2code/SU2/pull/325#issuecomment-260104666, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AHenIPv43Yc0PSQdW37_iQbnxcUFWwuQks5q9Vj_gaJpZM4KjG5K; > .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/325#issuecomment-260167823:109,variab,variables,109,https://su2code.github.io,https://github.com/su2code/SU2/pull/325#issuecomment-260167823,1,['variab'],['variables']
Modifiability,"No, I think we're all set. I am going to merge this in. We have two issues that we are going to be clearing up very soon: the ONERA M6 adjoint case that is failing somewhat irregularly, and a reorganization of the test cases/config files to make the regression tests more effective (in particular for pull requests). Thanks for fixing the conflicts!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/186#issuecomment-127486074:225,config,config,225,https://su2code.github.io,https://github.com/su2code/SU2/pull/186#issuecomment-127486074,2,['config'],['config']
Modifiability,"No, your assumption of calling `swig` manually is not the cause why I've opened this issue (though, admittedly, ""compile SU2 in `$SU2_HOME` first"" – for getting the required libraries done – might sound confusing). Trying to be utterly relevant, I only replicated that part of the compilation process (yes, would-be with `--enable-PY_WRAPPER`) where one can explicitly debug the issue (please, have a look at the environment variables substituted by the `configure` script after `#` or post your `objdump -p _pysu2.so`, and/or `nm -u _pysu2.so` as also from the `config.log`/`Makefile` your `CXX`, `pySU2_CC_FLAGS`, `PY_INCLUDE`, `SO_LINK_FLAGS`, `SWIG_SO_REAL`, `SWIG_WRAP_REAL`, and `pySU2_LD_FLAGS` to compare the correct arguments). The docs had been definitely read before opening the issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/551#issuecomment-404905415:425,variab,variables,425,https://su2code.github.io,https://github.com/su2code/SU2/issues/551#issuecomment-404905415,3,"['config', 'variab']","['config', 'configure', 'variables']"
Modifiability,"Not sure if this is still an issue or not, but these constants are configurable via the config, so I'll play the role of the stale bot and close the issue.; If the defaults need changing doing it just before releasing 7.1 would be appropriate.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/301#issuecomment-661426428:67,config,configurable,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/301#issuecomment-661426428,2,['config'],"['config', 'configurable']"
Modifiability,"Not sure if you are aware, but the C++ MPI bindings have been deprecated since MPI-2.2:. http://www.mpi-forum.org/docs/mpi-2.2/mpi22-report/node328.htm. As MPI-3 becomes more prevalent, using the deprecate C++ MPI interface is dangerous for portability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/22:241,portab,portability,241,https://su2code.github.io,https://github.com/su2code/SU2/issues/22,1,['portab'],['portability']
Modifiability,Not without changing the meson.build script to treat blas and lapack separately (which I don't think we should do since a default build-from-source openblas will have both) or specifying a load of environment variables.; In said script you can try modifying `su2_deps += blas_dep` to; ```; su2_deps += blas_dep; su2_deps += dependency('lapack'); ```; Or maybe it will work if you just specify `-Dblas-name=lapack` and blas happens to be included as an automatic dependency of that.; Our documentation does state that:; >Note: The BLAS library needs to provide support for LAPACK functions. I'll update it with this arch linux special case when I get a minute.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632083173:209,variab,variables,209,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632083173,1,['variab'],['variables']
Modifiability,"Now I am happy with the results of the code but the question now is: How to code this up nicely!; This concept of an additional iterated variable next to the solution variable is ""new"" to SU2.; 1. Add the Adjoint pressure-drop variables always to the existing arrays (`Solution`, `External`, `AD_InputIndex`, etc.) which would make for ugly allocation routines and one would have to mess with `nPoint` as one would prob extend the containers by one element. So I consider this direction to be a bit too intrusive as this concept is not needed for most applications anyway.; 2. Add an `Extended` part to all relevant copide methods and variables and keep that general for the different applications",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456:137,variab,variable,137,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456,6,"['Extend', 'extend', 'variab']","['Extended', 'extend', 'variable', 'variables']"
Modifiability,Now you need to set the environment variables to pickup mutation in this script https://github.com/su2code/Docker-Builds/blob/master/test/runTests.sh via PR to the Docker-Builds repo.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1935#issuecomment-1444822483:36,variab,variables,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/1935#issuecomment-1444822483,1,['variab'],['variables']
Modifiability,"No… I can’t. I’m sorry. Great to hear from you. Machine learning is a very valuable research work and I will add it as a feature branch. . Removing code from the main release is a complex task and, as in the past, I have taken tough decisions. Anyway, to maintain a clean code is critical for its growing, it is like trimming a large tree. Basic criteria to maintain forever an implementation on the develop->master branch are: - Clear benefit to the CFD community (more accurate, robust, etc.) - Existing community of users or active developers - Minimal code documentation (at least the options should be in the config file). - Easy to install and use. - The implementation style should be aligned with the SU2 style - Regressions tests. Best,; Francisco. > On Oct 28, 2015, at 11:35 PM, Brendan Tracey notifications@github.com wrote:; > ; > Could you leave in the machine learning section a bit longer?; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/pull/208#issuecomment-152095697.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208#issuecomment-152384158:614,config,config,614,https://su2code.github.io,https://github.com/su2code/SU2/pull/208#issuecomment-152384158,2,['config'],['config']
Modifiability,Numerics refactoring for CAvgGrad- and CUpwSca- classes,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/422:9,refactor,refactoring,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/422,1,['refactor'],['refactoring']
Modifiability,"OBJECTIVE list.; % ex= Objective * Scale; OPT_OBJECTIVE= DRAG * 10; % Optimization constraint functions with pushing factors (affects its value, not the gradient in the python scripts), separated by semicolons; % ex= (Objective = Value ) * Scale, use '>','<','='; OPT_CONSTRAINT= ( LIFT > 0.328188 ) * 0.001; ( MOMENT_Z > 0.034068 ) * 0.001; ( AIRFOIL_THICKNESS > 0.11 ) * 0.001; %; % Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts); % In general, a norm of the gradient ~1E-6 is desired.; OPT_GRADIENT_FACTOR= 1E-6; %; % Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF); % In general, surface deformations of 0.01'' or 0.0001m are desirable; OPT_RELAX_FACTOR= 1E3; %; % Optimization bound (bounds the line search in SU2_DEF); OPT_LINE_SEARCH_BOUND= 0.1; %; % Upper bound for each design variable (bound in the python optimizer); OPT_BOUND_UPPER= 1E10; %; % Lower bound for each design variable (bound in the python optimizer); OPT_BOUND_LOWER= -1E10; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil | AIRFOIL, 0, 0, 0, 1.0 ); ...; ```. Now this provides a lot of flexibility in scaling the inputs to the optimizer, which is great because these optimizers aren't very robust with scaling. But the way they behave is sometimes a little odd. I am going to go through each option and talk about how it affects things (to the best of my knowledge). I am hoping someone can shed some light on the choices that were made and correct me if I am wrong in any of my assessment. 1. OPT_OBJECTIVE Scaling: It scales the objective function with the factor that you multiply it with. In the case above, the DRAG is being scaled by 10. **This scaling is also applied to the gradient of the objective function.**. 2. OPT_CONSTRAINT Scaling: Same as the OPT_OBJECTIVE scaling, but for the constraints. 3. OPT_GRADIENT_FACTOR: This is a misleading name and I prop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:1836,variab,variable,1836,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,3,['variab'],"['variable', 'variables']"
Modifiability,"OK I Solved it by use version 7.2. this problem still exists for version 7.3.1. > @Zcaic nope, I add '\' before`'C:Program Files...` and the environment MSMPI_LIB64 finally like `\C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\`; > ; > I paste wrong error message before . the actual error message after I change the envirnment variable is from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\lib\\C:\\Program...` . just a more `\\`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-1194064916:331,variab,variable,331,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1194064916,1,['variab'],['variable']
Modifiability,"OK the failing regression test were due to:; 1. One simple wrong function call in Csolver; 2. Creating new output in existing groups (AERO_COEFF, FLOW_COEFF) which invalidates some regression tests; 3. pyhton code which does not test if some config variable is present or altering the python code such that it invalidates other regression tests; 4. and finally the AVG_TEMP thing above. Now all these alone were somewhat minor things. Feature_flamelet is now up-to-date with develop with all regression test working",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223#issuecomment-898617272:242,config,config,242,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-898617272,4,"['config', 'variab']","['config', 'variable']"
Modifiability,"OK, I see that some refactoring happened e.g. to the python wrapper in the meantime. What's the best way to resolve the conflicts? --> If I hit the Resolve conflicts button, there is nothing I can do.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1535961512:20,refactor,refactoring,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1535961512,1,['refactor'],['refactoring']
Modifiability,"OK, I think I did some progress regarding this issue. After you read this, please [Compare](https://github.com/FoamScience/SU2/compare/master...FoamScience:feature_self_reg_classes) the master and the feature branches. ## Design Idea. - We need to register a child class to a map stored in a factory class; obviously, well before construction time.; - The static variables to the rescue: Associate a static variable to the class and call the registration function when initializing the static variable. done!. ## Work Status. > I'm using ""Inviscid Bump in the Channel"" case for testing. 1. I had to make some changes to the building options; - Upgrading to ""C++14"" allowing me to use make_unique; a personal preference.; - ""--whole-archive"" GCC compiler option is necessary in order to pull and force-initialize all symbols from statically-linked library. This is compiler-specific and may bloat the result binary with unnecessary symbols. But it's the quickest way.; 2. I tried to make changes so the interaction with the code is minimal so I went and took advantage of **CSolverFactory::CreateSubSolver()** to create a pointer to self-registered **CEulerSolver**.; 3. By the way, I thought the solver would be created only once. Little I knew!; 4. Anyway, The registration works as expected now. If you change ""EULER"" in [this line](https://github.com/FoamScience/SU2/blob/feature_self_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:363,variab,variables,363,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957,3,['variab'],"['variable', 'variables']"
Modifiability,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2132#issuecomment-1967081745:456,config,configuration-options-for-dependency-updates,456,https://su2code.github.io,https://github.com/su2code/SU2/pull/2132#issuecomment-1967081745,2,['config'],"['config', 'configuration-options-for-dependency-updates']"
Modifiability,"OK, code is now functional and cleaned up. If the approach for binary restart is fixed, I can will extend it to other outputs. I think the most interesting are the outputs that are used for visualization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1465#issuecomment-997344813:99,extend,extend,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465#issuecomment-997344813,1,['extend'],['extend']
Modifiability,"OK, thanks, SU2_MPI::Barrier definitely helps in narrowing down where the problem is. In MergeProfileMarkers, we get the number of profiles:; ```; for (iMarker = 0; iMarker < config->GetnMarker_All(); iMarker++) {; if (config->GetMarker_All_KindBC(iMarker) == markerType) {; numberOfProfiles++;; ```. Then downstream, we do:. ```; if (rank == MASTER_NODE) {; ...; profileCoords.resize(numberOfProfiles);; ```. And when it fails, it is because for MASTER, we did not have the condition that ; `config->GetMarker_All_KindBC(iMarker) == markerType`; ,although this condition is true for another rank.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1767#issuecomment-1265030228:175,config,config,175,https://su2code.github.io,https://github.com/su2code/SU2/issues/1767#issuecomment-1265030228,3,['config'],['config']
Modifiability,"OLUTION_FLOW_FILENAME']; ; sys.stdout.write('Initial CFD solution is provided.\n'); ; #--- Check existence of initial mesh, solution; ; required_files = [current_mesh,current_solution]; ; if not all (os.path.exists(fil) for fil in required_files):; err = '\n\n## ERROR : Can\'t find:\n'; for fil in required_files:; if not os.path.exists(fil):; err += fil + '\n'; raise RuntimeError , err; ; #--- Start looping; ; # Get mesh dimension; dim = su2amg.get_su2_dim(current_mesh); if ( dim != 2 and dim != 3 ):; raise RuntimeError , ""Wrong dimension number\n""; ; #--- AMG parameters; ; config_amg = dict(); ; config_amg['hgrad'] = float(config['ADAP_HGRAD']); config_amg['hmax'] = float(config['ADAP_HMAX']); config_amg['hmin'] = float(config['ADAP_HMIN']); config_amg['mesh_in'] = 'current.meshb'; config_amg['mesh_out'] = 'current.new.meshb'; config_amg['metric_in'] = ''; config_amg['sol_in'] = 'current_sensor.solb'; config_amg['itp_sol_in'] = 'current.solb'; config_amg['adap_source'] = ''; ; if 'ADAP_BACK' in config:; config_amg['adap_back'] = os.path.join(cwd,config['ADAP_BACK']); #os.symlink(os.path.join(cwd, config.ADAP_BACK), config.ADAP_BACK); else:; config_amg['adap_back'] = config['MESH_FILENAME']; ; print ""config_amg : "" + config_amg['adap_back']; back_name, back_extension = os.path.splitext(config_amg['adap_back']); ; if not os.path.exists(config_amg['adap_back']):; raise RuntimeError , ""\n\n##ERROR : Can't find back mesh: %s.\n\n"" % config_amg['adap_back']; ; if back_extension == "".su2"":; ; #pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); print ""skipping back mesh ...""; #import _amgio as amgio; #amgio.py_ConvertSU2toInria(config_amg['adap_back'], """", ""amg_back""); #config_amg['adap_back'] = ""amg_back.meshb""; ; if 'ADAP_SOURCE' in config:; config_amg['adap_source'] = os.path.join(cwd,config['ADAP_SOURCE']); ; global_iter = 0; ; sys.stdout.write(""\nStarting mesh adaptation process.\n""); ; for iSiz in range(len(mesh_sizes)):; ; mesh_size = int(mesh_sizes[iSiz",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:7008,config,config,7008,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"ONFIG_PATH=""${PKG_CONFIG_PATH}"":/lib/pkgconfig; slimshady@arch-linux-hp-probook-g3-450: pkgconfig$ export PKG_CONFIG_PATH=""${PKG_CONFIG_PATH}"":/usr/lib/pkgconfig; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1345,config,config,1345,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,2,['config'],['config']
Modifiability,"ON|OFF, disabled when building with Codi; * SU2_BUILD_PY_WRAPPER: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_SOL: ON|OFF, disabled when building with Codi; * Enable modules:; * SU2_ENABLE_CGNS:; * SU2_CGNS_CPPFLAGS: flags to pass when compiling CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON; * SU2_PARMETIS_CPPFLAGS: flags to pass when compiling Parmetis; * SU2_ENABLE_TECIO: ON|OFF; * SU2_TECIO_CPPFLAGS: flags to pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:2853,variab,variable,2853,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,2,['variab'],['variable']
Modifiability,"ORMATION PARAMETERS -----------------------%; %; % Tolerance of the Free-Form Deformation point inversion; FFD_TOLERANCE= 1E-10; %; % Maximum number of iterations in the Free-Form Deformation point inversion; FFD_ITERATIONS= 500; %; % FFD box definition: 3D case (FFD_BoxTag, X1, Y1, Z1, X2, Y2, Z2, X3, Y3, Z3, X4, Y4, Z4,; % X5, Y5, Z5, X6, Y6, Z6, X7, Y7, Z7, X8, Y8, Z8); % 2D case (FFD_BoxTag, X1, Y1, 0.0, X2, Y2, 0.0, X3, Y3, 0.0, X4, Y4, 0.0,; % 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0); FFD_DEFINITION= (MAIN_BOX,-0.1, 0.2, 0, 1.1, 0.2, 0, 1.1, -0.2, 0, -0.1, -0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0); %; % FFD box degree: 3D case (x_degree, y_degree, z_degree); % 2D case (x_degree, y_degree, 0); FFD_DEGREE= ( 6 , 1, 0 ); %; % Surface grid continuity at the intersection with the faces of the FFD boxes.; % To keep a particular level of surface continuity, SU2 automatically freezes the right; % number of control point planes (NO_DERIVATIVE, 1ST_DERIVATIVE, 2ND_DERIVATIVE, USER_INPUT); FFD_CONTINUITY= 2ND_DERIVATIVE; %; %; % --------------------- OPTIMAL SHAPE DESIGN DEFINITION -----------------------%; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil | MAIN_BOX, 0, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 1, 0, 0.0, 0.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 2, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 3, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 4, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 5, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 6, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 0, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 1, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 2, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 3, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 4, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 5, 1, 1.0, 0.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 6, 1, 0.0, 1.0 ); . ```. Thank you for your help. - OS: [Linux (Ubuntu 20)]; - SU2 Version: [v5.0.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1250:2415,variab,variables,2415,https://su2code.github.io,https://github.com/su2code/SU2/issues/1250,1,['variab'],['variables']
Modifiability,"Obviously it is possible to implement this, but it would significantly complicate the config parsing code. Right now the parser is very simple: Go through each line, and get the name and the tokens. As far as I can see there aren't good ways to allow this aside from either having a whitelist of options that can go on multiple lines (thus, only some options are allowed to do so), or to switch up the config file entirely and go to a more standard format like JSON.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/166#issuecomment-103241030:86,config,config,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/166#issuecomment-103241030,4,['config'],['config']
Modifiability,"Of course I'll provide an example of an MLP input file, as well as a python script I wrote that translates an MLP trained through TensorFlow to such an input file. . Very well, I'll move the files from the numerics folder to the common folder and change names accordingly. The models I used so far had between 5 and 50 perceptrons and up to 15 layers. Performance is quite important, as evaluation of MLP's is generally more computationally expensive than for example lookup tables. The larger the MLP architecture, the more costly evaluations get of course. Any improvement to the computation speed will therefore be welcome. In terms of memory, the MLP's don't seem to be an issue so far.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1247834992:344,layers,layers,344,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1247834992,1,['layers'],['layers']
Modifiability,"Oh interesting, just to be fully complete here's what made me think that:. 1.I have a well-converged steady-state solution and outputted the minimum DT's for each cell when running with a CFL=1.0, no adaptive. I was unable to restart this for an unsteady one with no changes in BCs without using a DT orders-of-magnitude smaller. 2. When I run /Tutorials/compressible_flow/Turbulent_OneraM6 with `MIN_DELTA_TIME` set as a screen output, I get orders-of-magnitude different final timestep when I run with `REF_DIMENSIONALIZATION= DIMENSIONAL` instead of `FREESTREAM_VEL_EQ_ONE`. . 3. When I run `SU2_CFD -d` on the /Tutorials/compressible_flow/Unsteady_NACA0012 example **using `FREESTREAM_VEL_EQ_ONE`** I see the attached image below, which appears to nondimensionalize using length/velocity. ![Unsteady_NACA0012_SU2CFDd](https://github.com/su2code/SU2/assets/116454159/44a5b0c4-2220-4e98-a911-cf0229f0cb21). 4. I also looked briefly at the code it _appeared_ that the calculations were using nondimensional values; here's what I looked at:. Setting of local timestep:; https://github.com/su2code/SU2/blob/b80e4ce0e4fd05afa136af0990a17dd619cdce42/SU2_CFD/include/solvers/CFVMFlowSolverBase.hpp#L506-L522. Calculation of Lambda's:; https://github.com/su2code/SU2/blob/b80e4ce0e4fd05afa136af0990a17dd619cdce42/SU2_CFD/include/solvers/CFVMFlowSolverBase.hpp#L413-L444. GetProjVel:; https://github.com/su2code/SU2/blob/b80e4ce0e4fd05afa136af0990a17dd619cdce42/SU2_CFD/include/variables/CEulerVariable.hpp#L244-L254. Then at this point admittedly I just assumed that the `MatrixType Primitive` of `CEulerVariable` was indeed nondimensional. I am not familiar with where/when data is stored/updated throughout SU2 as nondimensional v dimensional.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2060#issuecomment-1613895947:200,adapt,adaptive,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/2060#issuecomment-1613895947,2,"['adapt', 'variab']","['adaptive', 'variables']"
Modifiability,"Oh yeah, @pcarruscag, I finally got it to work. I am wondering if we can add `-Dmpi-name` flag like we have a `-Dblas-name` flag because I think mpich is a very common MPI implementation and accommodating for it would be really beneficial, for people and the package both. The lapack thing was discussed in #991 earlier and I forgot I didn't have that change in my commit (it has been months). Thanks a lot!. @fertinaz, you might be able to get it to work with this change in `meson.build` file, like Pedro suggested:; > ```; > mpi_dep = [dependency('mpich', language: 'c', required : get_option('with-mpi')),; > dependency('mpich', language: 'cpp', required : get_option('with-mpi'))]; > ```; I had kept the `-Dcustom-mpi` flag as `false`; Make sure you export all the environment variables:; ```; export CC='/usr/bin/gcc'; export CXX='/usr/bin/g++'; export MPICC='/opt/mpich-3.3.2/bin/mpicc'; export MPICXX='/opt/mpich-3.3.2/bin/mpicxx'; export LD_FLAGS='-L/opt/mpich-3.3.2/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/opt/mpich-3.3.2/include'; export C_FLAGS='-I/opt/mpich-3.3.2/include'; export PKG_CONFIG_PATH='/opt/mpich-3.3.2/lib/pkgconfig'; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721493822:782,variab,variables,782,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721493822,1,['variab'],['variables']
Modifiability,Oh yes you are right. I was looking in ADJOINT_/config_DOT_AD.cfg. That shows as 0.001 for all design variables.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/977#issuecomment-628744629:102,variab,variables,102,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-628744629,1,['variab'],['variables']
Modifiability,"Ok I'll see what I can do. On Tue, 27 Aug 2019, 16:33 Tim Albring, <notifications@github.com> wrote:. > Ah I just mean adding it to the meson.build file as an option and to; > provide the paths to headers/libraries. I am not in favor of doing it via; > environment variables ...; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/771?email_source=notifications&email_token=AJCOXN5NB6Z4366OSSPH373QGVCNPA5CNFSM4IPIUEI2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5IE6FQ#issuecomment-525356822>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AJCOXNYGAQR35RW43NXLW3DQGVCNPANCNFSM4IPIUEIQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-525370429:265,variab,variables,265,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-525370429,1,['variab'],['variables']
Modifiability,"Ok so the other parts of MPI are working fine but file operations are having some issue.; You can remove the OUTPUT_FILES line from the config.; When you run SU2, are you running in a clean directory? Does it segfault in a clean directory? Or only once the files already exist?; I also see you are running on the head node. Have you tried running SU2 on a compute node of the cluster?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2103#issuecomment-1680763161:136,config,config,136,https://su2code.github.io,https://github.com/su2code/SU2/issues/2103#issuecomment-1680763161,1,['config'],['config']
Modifiability,"Ok, I see - So where do you think should my new functions go?. Now that a bunch of function names changed, I am sure I need to refactor my side as well, so I can't tell if this proposal is still working.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1536366268:127,refactor,refactor,127,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1536366268,1,['refactor'],['refactor']
Modifiability,"Ok, I went back to try varying the `.cfg` settings on the simple v7.0.3 repo `TestCases/euler/naca0012` case and managed to get `mesh_adaptation_amg.py` to run successfully. It seems that one bit of advice [from here](https://www.cfd-online.com/Forums/su2/214613-grid-adaptation-options.html) is no longer true, i.e. one needs to set:; ```; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= YES; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= YES; ```; in order for the amg mesh adaptation to function. However, for some reason, I can't get it working for my actual mesh of interest. When using the same settings, I get a different ParMETIS error (from the `adap/ini/log.out`):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 4929018 grid points before partitioning.; 7406196 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 50968 boundary elements in index 1 (Marker = FARFIELD).; 284054 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [ 1] ***ASSERTION failed on line 207 of file ../externals/parmetis/libparmetis/comm.c:sendind[i] >= firstvtx && sendind[i] < lastvtx; [ 1] 361316 123226 246452; [1609857970.901920] [super:1060888:0] sock.c:344 UCX ERROR recv(fd=62) failed: Connection reset by peer; ```. The only difference that I can think of is that my flow is fully supersonic and my mesh is an unstructured core with a structured collar - might this be causing the issue? Kind regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754686447:268,adapt,adaptation-options,268,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754686447,4,['adapt'],"['adaptation', 'adaptation-options']"
Modifiability,"Ok, I will prepare a test case. I will take the Mach=0.1 case from the tutorial and change it slightly. Now the coupling between fluid and structure occurs after 100 steps, I will just couple them immediately. ; The only issue with #902 I see at the moment is with the file fsi_computation.py. The others are in separate folders so they should not create conflicts...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-746408443:112,coupling,coupling,112,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-746408443,1,['coupling'],['coupling']
Modifiability,"Ok, SIMD update, with #753, #959, and #966 we now have a unified storage type for the data we need in CNumerics. This means that we (I) only need to implement ""SIMD accessor methods"" (i.e. that return a SIMD type instead of a su2double) for one class (C2DContainer and co.). I think to do SIMD right we need a new way of going about CNumerics, these are my design requirements for ""CNewNumerics"":; - Thread-safe (consequently const-correct), a single object must be safe to use by multiple threads.; - Minimal indirection, the polymorphic overhead will be reduced to a single call (ComputeResidual), all auxiliary functions (like the ones that live in CNumerics) will be forcefully inlined, no useless copies of data (no more numerics->SetBlaBla).; - Compile time nDim/nVar, which will: a) avoid heap allocations; b) allow effective loop-unrolling (also during the writes to CSysMatrix).; - Allow low-overhead composition, e.g. have one CRoe for Euler and one CRoeVisc for NS to fuse convective and viscous residuals (without copy pasting code).; - A lot more readable, those cryptic V_i[iDim+1] need to go (somehow...). To achieve all this, the ""CNewNumerics"" will work as a template (obvs) decorator/visitor.; A visitor in the sense that the solver calls the numerics and gives it (read-only) access to all its data, the object pulls whatever it needs directly and there is no need for numerics->SetBlaBla.; A template decorator in the sense that the class can be augmented simply by inheriting from another, along the lines of `class CRoeVisc : public CRoe, public CVisc` (to allow fusing residual and Jacobian contributions).; All this needs to be done with templates for the ""minimal indirection"" requirement. Which means for each numerical method we will have 4 explicit template instantiations (Euler2D, Euler3D, (RA)NS2D, (RA)NS3D) but in the end these are still polymorphic objects that will be instantiated by some factory function (i.e. it will look clean, especially because I will not por",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:527,polymorphi,polymorphic,527,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,2,['polymorphi'],['polymorphic']
Modifiability,"Ok, here is an example. A steady simulation is used and the relevant files are attached below. The geometry is A-airfoil case with AoA = 13.3 deg, and the spanwise boundaries are set to MARKER_SYM. Two cases shown below use the same configuration and mesh file, the only difference comes from the submitted code and the original code. For the distribution on the sym bc, the spanwise speed keeps zero.; ![5](https://github.com/su2code/SU2/assets/58663453/35d550d2-8ff9-45ed-aee0-c222551b6245). For the history of drag and lift (CSF here for the spanwise direction is z-direction), submitted code shows little differences after convergence.; ![1](https://github.com/su2code/SU2/assets/58663453/302f79f6-c775-460a-92b3-15ea235544c5); ![2](https://github.com/su2code/SU2/assets/58663453/a820b221-40ad-489d-b977-9d447a9b0e46). For the history of the residual, increasing instabilities is not observed.; ![3](https://github.com/su2code/SU2/assets/58663453/03a285d9-5a2c-4332-81c5-cb9340efb2e3); ![4](https://github.com/su2code/SU2/assets/58663453/8459916e-796f-45b4-ad18-c42911da4f88). Relevant files:; [cfd.txt](https://github.com/su2code/SU2/files/13448935/cfd.txt); [history-original.txt](https://github.com/su2code/SU2/files/13448940/history-original.txt); [history-submitted.txt](https://github.com/su2code/SU2/files/13448942/history-submitted.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2174#issuecomment-1824200775:233,config,configuration,233,https://su2code.github.io,https://github.com/su2code/SU2/pull/2174#issuecomment-1824200775,1,['config'],['configuration']
Modifiability,"Ok. I don't think [these](https://github.com/su2code/SU2/pull/774/commits/e632133eded5edab7ff04f0979334c25c0f44ff8) changes are over-complicated. But I'm fine with changing the index saving procedure everywhere. There'd be just some work to do (we would have to adapt everything for the FEA elasticity solvers and all the variables they need as well)... so it's also a question of time, testing and so on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542206395:262,adapt,adapt,262,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542206395,2,"['adapt', 'variab']","['adapt', 'variables']"
Modifiability,"Ok. I will do it as soon as possible. . With kind regards,. Jairo. > On Jan 30, 2019, at 14:13, Thomas D. Economon <notifications@github.com> wrote:; > ; > @economon approved this pull request.; > ; > LGMT. Thanks @jaspe55 <https://github.com/jaspe55>; > Just one request: I have adjusted the number of iterations for the regression test and updated the residual values in the python script. I also had to move around some files. Can you please run the case (to convergence) and verify that the results are what you expect? Note that the config file and target Cp are in the code repository and the mesh and solution file are in the testcases repository. If everything looks ok, then this is ready to be merged.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#pullrequestreview-198200089>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180hqzVnSUPCnSBkQrTPfIv0kIltygks5vIdKrgaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-459029239:538,config,config,538,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-459029239,1,['config'],['config']
Modifiability,"Ok. My advice would be to not use the `SUPERSONIC_SHOCK` option, but other developers may have further recommendations there. It doesn't seem to be set up for general cases. Are you having any further issues with the mesh adaptation? For example, is the `GRAD_FLOW` option working as you expected? Has the issue been resolved?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-444955431:222,adapt,adaptation,222,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-444955431,1,['adapt'],['adaptation']
Modifiability,Okay @pcarruscag I believe ; I reverted all the annoying format changes. Can you please review the code when you get the chance?. BTW I am aware about the boilerplate code in `python_wrapper_structure.cpp` and I plan to adapt `CPyWrapperMatrixView`. Would appreciate some feedback anyways,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750#issuecomment-1779150012:220,adapt,adapt,220,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750#issuecomment-1779150012,2,['adapt'],['adapt']
Modifiability,"Okay so I'm new at all this and I'm just kinda figureing it out as I go on my own...  I've been at it for about 6 months and I've taught myself with the help of just reading how to do it now I'm in school but whenever I do any of those commands it doesn't work like the Dcustom and all those it's just not working . Sent from Yahoo Mail on Android ; ; On Tue, Apr 27, 2021 at 10:13 AM, ***@***.***> wrote: . Hi Pedro,. Thank you for your reply. Apologies for my own late answer as well. I am trying to install now the SU2 6.2.0 Falcon. It is the one I particularly need for a program that calls this program for Aeroelastic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1233#issuecomment-827721160:795,config,configure,795,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827721160,1,['config'],['configure']
Modifiability,Okay thank you Pedro (I meant the order in the code not in the config file). So I would just assign any k-omega axi source to numerics[iMGlevel][TURB_SOL][source_second_term]. See you tomorrow for the meeting,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-721182556:63,config,config,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-721182556,1,['config'],['config']
Modifiability,"Okay.; We have a little ownmade script here which sets some standard parameters like standard runtime, standard memory use mpi Version fpr the HPC.; As I can see(with my little knowledge about that script) it is doing the same like mpirun -n2 SU2_CFG config.cfg. And mostly I using parallel with mpi I get .vtks automaticly. It seems, that bigger files (~140mb mesh, 650mb flow.vtk) tends to not generating the automatic .vtk?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/268#issuecomment-215006869:251,config,config,251,https://su2code.github.io,https://github.com/su2code/SU2/issues/268#issuecomment-215006869,1,['config'],['config']
Modifiability,"On industrial cases, there can be tens of independent boundaries of a same type (eg. inlets / outlets). It would be very good to be able to define them in separate lines in the config file. Some graphical text editor can't even handle such ""infinite"" lines. (This is also true for optimization variables like DEFINITION_DV.)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/166:177,config,config,177,https://su2code.github.io,https://github.com/su2code/SU2/issues/166,2,"['config', 'variab']","['config', 'variables']"
Modifiability,"On the subject of virtual functions I would like to put another idea forward.; After moving things around in #725 I noticed that we have tons of `inline virtual` methods.; The keyword `inline` has two meanings to the compiler:; - ""Dear merciful compiler please copy paste the body of this function and then do all your wonderful optimizations, if that pleases your excellency.""; - ""Dear forgiving compiler, you will find this method defined in multiple units, please don't be mad"" (i.e. ignore the one-definition-rule). `virtual` means determine what version of the method to call at runtime. This is not compatible with the first (and often the intended one) meaning of inline, therefore the compiler will in general not inline those methods.; They will only be inlined if they are being called on a pointer to the derived class that does not declare the method to be virtual anymore. CSolver knows what variables it creates and so in hot areas of the code it could do a static downcast to allow inlining (e.g. `static_cast<CEulerVariable*>(node[iNode])->DoStuff()`).; Where is this important? For example when computing gradients, where simple additions and subtractions are hidden behind virtual functions.; If you are worried about maintenance each solver can typedef its most safe downcast level or better yet (or just more modern), methods that could benefit from this can be templated for the type of downcast.; Those in favour say Yea those against say Nay.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-509273008:905,variab,variables,905,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-509273008,2,['variab'],['variables']
Modifiability,"One comment I have-- @pcarruscag mentioned that it's somewhat difficult to break apart the ""config"" [blob](https://sourcemaking.com/antipatterns/the-blob). I have a proposal that could work to break apart things. Some config options, like those related to grid movement or timestepping or nondimensionalization, are used throughout a lot of the code. It will be difficult to make headway there. But some config settings have a very localized impact in the code. To find examples, just look for common prefixes in the `config_template.cfg`. There's `DV_*`, `FFD_*`, `UQ_*`, `INC_*`, etc. We could break apart the config class into a group of classes. Each class would derive from the base config class and share its features. Any function that needs config settings could then pull in two config objects, one with global settings (like nondimensionalization) and one with problem-specific settings (like incompressible flow settings). That way, changing the problem-specific settings, such as the incompressible flow options, won't trigger a complete rebuild of the code. It would only trigger a rebuild of the code that uses the incompressible flow options. That's my idea. Aside from that idea, I agree with the changes as proposed by @economon.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-500955452:92,config,config,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-500955452,7,['config'],['config']
Modifiability,"One more thing: should I change the naming scheme for the model version of SST? As it is now, the naming scheme is V+model version but the NASA TMR site says to use the V only for the vorticity form of the production term. Should we remove the V then, or maybe set it as lower case? This will break all of the configs, no problem for me to go through them all and change it though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2407067875:310,config,configs,310,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2407067875,1,['config'],['configs']
Modifiability,"Only the testcases `channel_2D`, `channel_3D` fail. Both use sliding mesh interfaces, but there are also other sliding mesh testcases that do not fail. The residuals are still very close and also the flow fields look similar. I thus adapted the stored residuals in 9d8f194. Let me know if you would like to investigate the changed residuals further.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670:233,adapt,adapted,233,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670,1,['adapt'],['adapted']
Modifiability,"Ooh, that sounds like exactly what I'm looking for. Do I set those as environment variables or in a different manner?. I'll have to check the hybrid again to see how it does. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1307#issuecomment-867067131:82,variab,variables,82,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307#issuecomment-867067131,1,['variab'],['variables']
Modifiability,Option for Joule Heating not in configuration file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/230:32,config,configuration,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/230,1,['config'],['configuration']
Modifiability,"Our proposal does not relate to the SST's good behavior (iThe SST model is not sensitive to Omega freestream value: it is because of the addition of the cross-diffusion term, which was absent in the original Wilcox model). The current implicit treatment in the SU2 may generate a negative solution that is not physical. A low limit value is available in the code to avoid a negative solution. This means the solution is clipped to this value if the solution reaches a lower value. There is no single absolute low-limit value that is suitable, for example, issues with dimension vs. non-dimension form. Our proposal circumvents this problem. The current situation in the code is not robust. We suffer from many robustness issues, especially with the SST2003 model. However, using our proposal significantly enhanced the solver's robustness. The current situation is like a ""bug"" because it may interfere with the solution. We understand that our idea requires a lot of effort and that it would make the code unreproducible. Therefore, we would like to suggest the following: Give the user an option to control these low-limit values. The default values will be according to the hard-coded values. We also strongly recommend adding additional user low-limit values control according to our proposal. The user will be able to decide which option he prefers. Our end goal is to design the implicit treatment so that these low-limit controls will be almost redundant. Based on several publications I've made during the last 15-20 years, my code enjoys this feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323#issuecomment-2231452852:806,enhance,enhanced,806,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323#issuecomment-2231452852,1,['enhance'],['enhanced']
Modifiability,"Our proposed changes implicitly include 2 modifications to current code: ; The first is the modification of the lower limit such that it should be relative to a reference value. The rational for this is that a single given hard coded number cannot be correct for possible all flow regimes. Moreover, even running the same case in dimensional and non dimensional form, will lead to different behaviour of the lower limit. The proposed solution therefore is defining a limit relative to reference values, namely:; k_low_limit = C_k * K_infinity; w_low_limit = C_w * W_infinity. This change will inevitably cause changes to current behaviour (as can be seen in test case results), but we believe it is more correct. . The second, is giving the user control over C_k and C_w and the choice of the default value. As mentioned above, the behaviour of the proposed default value will inevitably be different than the existing one. Even if we choose default values that will lead to similar values to those existing for a certain case this would not be true for other cases. Therefore no default value can be given to reconstruct the current solver behaviour. ; The values suggested as default are not the most correct per se, but rather robust suggestions based on experience and are open to discussion. Optimal default values of different cases, say external and internal flows are expected to be different, this is why we felt it important to allow user control of the lower limit. . We emphasise that the solution used in SU2 of applying a lower limit to turbulence variables in order keep the solution positive is somewhat artificial, and future features we are working on should minimize the need for such a treatment, however, as long as this is the solution implemented, we believe that the proposed change is more correct, leading to more robust behaviour.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323#issuecomment-2230214740:1562,variab,variables,1562,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323#issuecomment-2230214740,1,['variab'],['variables']
Modifiability,"Overall some solid looking code @jayantmukho, thanks!; I have a few suggestions:; 1 - Some of the config variables have fairly broad names, ""permute"" for example, I think prefixing them with UQ would more clearly identify what they are meant for.; 2 - There are a lot of dynamic allocations of static size, if the current implementation is compatible with 2 and 3 dimensions I would allocate those variables statically, makes for cleaner and faster code (stack allocations are much faster and subsequent loops would likely be unrolled by the compiler).; 3 - It looks like some of the new methods in CNumerics are for generic ""Eigenvalue-stuff"" for re-usability I suggest moving those methods to a helper class, even if for now that class becomes just a collection of static methods. In the implementation of those methods the dimension of the inputs is being assumed, if you do move them please make them generic.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-427468893:98,config,config,98,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-427468893,6,"['config', 'variab']","['config', 'variables']"
Modifiability,"PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link current files; ; config_cfd = copy.deepcopy(config); for opt in adap_options:; config_cfd.pop(opt, None); config_cfd.LOW_MEMORY_OUTPUT = ""NO""; ; config_cfd.WRT_BINARY_RESTART = ""NO""; #config_cfd.READ_BINARY_RESTART = ""NO""; ; current_mesh = ""Initial_mesh""; current_solution = ""Initial_solution""; ; if config['RESTART_SOL'] == 'NO':; ; stdout_hdl = open('ini.stdout','w') # new targets; stderr_hdl = open('ini.stderr','w'); ; success = False; val_out = [False]; ; sys.stdout.write('Running initial CFD solution.\n'); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_mesh = config['MESH_FILENAME']; current_solution = ""ini_restart_flow.dat""; ; config_cfd.CONV_FILENAME = ""ini_history""; config_cfd.RESTART_FLOW_FILENAME = current_solution; ; SU2_CFD(config_cfd); ; except:; sys.stdout = sav_stdout; sys.stderr = sav_stderr; raise; ; sys.stdout = sav_stdout; sys.stderr = sav_stderr; ; else:; required_options=['SOLUTION_FLOW_FILENAME']; if not all (opt in config for ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:4701,config,config,4701,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"Parallel preaccumulations must not share any variables. In particular, they must not have any common inputs and outputs. I suspect (judging from the code) that the preaccumulations treated in 781092a3533caf36589426e99293c2b20d332726 violate this pattern, and that this is the reason why excluding them makes several hybrid parallel AD tests pass. Other preaccumulations might be affected as well. The correctness of preaccumulations inside numerics objects, for example, depends on the values of pointers like `V_i`, `V_j`. Other preaccumulations might look wrong but are ok because common variables are prevented by color loops.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-871002042:45,variab,variables,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-871002042,2,['variab'],['variables']
Modifiability,"Part of the problem was that I was considering the TKE in the computation of the boundary conditions but not inside the domain since I was using the modified version of the SST model. With this, the vertical velocity at the inlet is in the range of 10^-12. The problem on the bottom symmetry still remains though. I am trying on the coarser mesh and I et FGMRES divergence after more than 1.3k iterations. I don't know if I should also change all the boundary conditions code to take the TKE from the solver rather than from the config. I guess that it should be done.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2353506266:529,config,config,529,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2353506266,1,['config'],['config']
Modifiability,"Part of the reason I never gave much attention to the current optimization scripts, and instead developed my own, is that I need different settings for primal and adjoint and the optimization scripts cannot handle that. I don't think we should have different config settings for primal and adjoint. I'm certain the adjoint solver considers the convergence criteria, you probably did something wrong in your setup (I'm guessing the fields you are monitoring do not exist for the adjoint, hence it has nothing to use as convergence field) but since you did not attach your config file, all I can tell you is to read the documentation https://su2code.github.io/docs_v7/Solver-Setup/. > ... I am downgrading ... Yes you are. Honestly I envy this kind of pragmatism, it is probably why SU2 has tens or hundreds of ""feature branches"" lagging behind master by several versions. I feel like ranting but I'll be pragmatic for once.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1024#issuecomment-645255976:259,config,config,259,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645255976,2,['config'],['config']
Modifiability,"Passing arrays by pointer -> don't https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-use-ptr; Variables declared at the top of the function -> https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Res-introduce; Using member variables to ""pass data"" to other methods -> https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Ri-explicit. ""What are important implementation aspects?"" You ask -> https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#per7-design-to-enable-optimization",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1218#issuecomment-789893628:108,Variab,Variables,108,https://su2code.github.io,https://github.com/su2code/SU2/issues/1218#issuecomment-789893628,2,"['Variab', 'variab']","['Variables', 'variables']"
Modifiability,"Pedro, ; I cherry-picked your your commit [c2018c8](https://github.com/su2code/SU2/pull/1595/commits/c2018c836791944383c13d32dcfec903d5657072) and tested it with my configuration. Looks good so far, I haven't see any issues / problems on my side. Thank you very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1595#issuecomment-1094677121:165,config,configuration,165,https://su2code.github.io,https://github.com/su2code/SU2/pull/1595#issuecomment-1094677121,1,['config'],['configuration']
Modifiability,"Perhaps i found a little bug. ; Can someone confirm, that the output name of variables is different which flow.vtk ""maker"" you use?. SU2_SOL creates ""Conservative_1"" with """" and the automatic flow.vtk has Conservative_1 without """".; This is little irritating when using Paraview and especially Paraview states. If u have a state file created without """" variables and want import a flow.vtk created with SU2_SOLfirst u get an error, second u have to add """" in every calc to get results again",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/269:77,variab,variables,77,https://su2code.github.io,https://github.com/su2code/SU2/issues/269,2,['variab'],['variables']
Modifiability,"Pete, Tim,. I have had a long standing interest in getting this working and would be happy to help. The (partial) implementation that is there is already 3-4 years old, so it will have to be updated, but we can discuss some of the details of the implementation and how it can be done both more efficiently and for both compressible formulations and adaptive wall functions. We can start a thread separately (jjalonso@stanford.edu<mailto:jjalonso@stanford.edu>) and perhaps have a telecon to kick things off. My availability for this improves after the next 2 weeks. Best,. Juan. On Jun 7, 2017, at 1:19 PM, Tim Albring <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi Pete,. we appreciate your help on that. I just updated the branch feature_Wall_Functions<https://github.com/su2code/SU2/tree/feature_Wall_Functions> to be up-to-date with develop. The main routines dealing with the wall functions are in solver_direct_mean.cpp<https://github.com/su2code/SU2/blob/feature_Wall_Functions/SU2_CFD/src/solver_direct_mean.cpp#L16612> and solver_direct_turbulent.cpp<https://github.com/su2code/SU2/blob/feature_Wall_Functions/SU2_CFD/src/solver_direct_turbulent.cpp#L2569>. Maybe @economon<https://github.com/economon> can tell you what exactly is missing there. Tim. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/399#issuecomment-306912607>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxOvHCOSUFKDoizjyvrHbgyXgZ-vVks5sBwW8gaJpZM4NvG6w>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-306941656:349,adapt,adaptive,349,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-306941656,1,['adapt'],['adaptive']
Modifiability,"Piggybacking on pull request #488, this pull request adds the ability to specify the values of the inlet variables for inlet boundary conditions. This includes both the Euler/Navier-Stokes variables as well as the turbulence variables. No new inlet conditions are created; rather, the existing inlet conditions (such as total pressure and total temperature) can be set to custom values. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildeconto",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/503:105,variab,variables,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/503,4,"['flexible', 'variab']","['flexible', 'variables']"
Modifiability,"Please do run tutorial cases for 3D Euler and NS(Inviscid and Turbulent ONERAM6) first before running your own implementation. Tutorial pages are self-explanatory so I expect that you can easily grab which boundary markers to use in your implementation. ; As I said in previous comment, boundary conditions in config file and mesh file do match at least inviscid case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/523#issuecomment-381747291:310,config,config,310,https://su2code.github.io,https://github.com/su2code/SU2/issues/523#issuecomment-381747291,1,['config'],['config']
Modifiability,Please let me know if anyone knows what to do. The part of meson-log.txt is below:. > Message: Boost sources found.; Program swig found: YES (/usr/bin/swig); Running command: /---/---/---/work/SU2/venv/bin/python3 -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include. > --- stderr ---. > Message: Using mpi4py from /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include; Pkg-config binary for 1 is cached.; Determining dependency 'python-3.7m' with pkg-config executable '/usr/bin/pkg-config'; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --modversion python-3.7m` -> 0; 3.7; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --cflags python-3.7m` -> 0; -I/data/home/yamazaki/soft/Python-3.7.9/build/include/python3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; WARNING: extract_all_objects called without setting recursive; keyword argument. Meson currently defaults to; non-recursive to maintain backward compatibility but; the default will be changed in the future. >SU2_PY/pySU2/meson.build:27:2: ERROR: Tried to form an absolute path to a source ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1672:1131,config,config,1131,https://su2code.github.io,https://github.com/su2code/SU2/issues/1672,1,['config'],['config']
Modifiability,"Please see the end of the SU2_PY/SU2/io/config.py file - this is where defaults for python are currently defined. If you see any additional ones that are needed for the python scripts to operate, or any that have the incorrect default values, please do update those. ; I would recommend against adding an exhaustive list of defaults, and only adding those that are actually used by the python scripts. The reason is that the default values are not automatically synced between the c++ and python codes, and so this would add unneeded overhead for developers and room for future errors.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-377072314:40,config,config,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-377072314,1,['config'],['config']
Modifiability,"Please use meson and ninja to build the code as documented here: https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/. This is what I do:; ```; export BUILD=build; export CXXFLAGS=""-funroll-loops -march=native -mtune=native"". ./meson.py $BUILD -Dcustom-mpi=true -Dwith-omp=true -Denable-mixedprec=true -Denable-autodiff=true -Denable-tecio=false -Denable-mkl=true -Dmkl_root=$MKLROOT --prefix=$PWD/$BUILD --optimization=2 --warnlevel=2; ./ninja -C $BUILD install; ```; Depending on how your compilers are setup you may find convenient to modify this:; ```; if get_option('custom-mpi'); mpi_dep = []; ```; To:; ```; if get_option('custom-mpi'); mpi_dep = [declare_dependency(link_args: ['-lmpi'])]; ```; In the meson.py script, I'm sure there is a way to do it with environment variables but I never bothered trying. Regards,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1088#issuecomment-706397914:781,variab,variables,781,https://su2code.github.io,https://github.com/su2code/SU2/issues/1088#issuecomment-706397914,1,['variab'],['variables']
Modifiability,PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D Mesh,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:17117,plugin,plugins,17117,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,Put a README in the Eclipse folder pointing folks to the GitHub plugin,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/86:64,plugin,plugin,64,https://su2code.github.io,https://github.com/su2code/SU2/issues/86,1,['plugin'],['plugin']
Modifiability,"Python's ""self"" which; // makes this solution reasonably idiomatic.; Base::Compute(wv, sol);. // Then do our specific job.; wv.area = 0.0;; for(int i=0; i<nDim; ++i); wv.area += pow(sol.areaVector[i],2);; wv.area = sqrt(wv.area);; }; };. // Same mechanics as above; template<typename Base>; class ComputeFlux : Base; {; protected:; enum : int {nDim = Base::nDim};. struct WorkVarsType : Base::WorkVarsType ; {; double flux; // ...add new member; };. template<typename WV>; void Compute(WV& wv, const SolutionContainer& sol) const; {; // ...call base; Base::Compute(wv,sol);. // ...do aditional work; wv.flux = 0.0;; for(int i=0; i<nDim; ++i); wv.flux += sol.velocity[i]*sol.areaVector[i];; }; };. // This class is used to terminate the chain, it makes the link; // with the interface and it is used to specify any fixed sizes.; template<int NDIM>; class Terminator : private VirtualInterface; {; protected:; enum : int {nDim = NDIM};. struct WorkVarsType {};. template<typename... Ts>; void Compute(Ts&...) const {}; };. // Finally we use the building blocks to implement Compute.; // The blocks can be reordered depending on application to; // help the compiler fuse loops or minimize register spillage,; // the resulting WorkVarsType definition will be equivalent.; class ComposedClass: public; ComputeFlux< ComputeArea< Terminator<3> > >; {; public:; ResultType Compute(const SolutionContainer& sol) const;; };. ResultType ComposedClass::Compute(const SolutionContainer& sol) const; {; // Create the working variables on the stack.; ComputeFlux::WorkVarsType wv;. // Pass down the working variables and whatever other arguments.; // If the convention was followed, all building blocks will run.; // Recall that all Compute's were templates, they will be; // instantiated here and we can force them to be inlined.; ComputeFlux::Compute(wv, sol);. // Do some additional work if needed and return result.; return wv.flux / wv.area;; }; ```; [Care for some assembly?](https://gcc.godbolt.org/z/os-gNg)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:5120,variab,variables,5120,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,4,['variab'],['variables']
Modifiability,"R [rbp-208], ymm1; vmovapd YMMWORD PTR [rbp-400], ymm0; cmp rax, rbx; jne .L7; ```; which makes the vectorized code perform just as well as the scalar code, iterators could also be used for the other variables but that would start to hurt readability without improving the performance much. _Note: There is also a chance the compiler (gcc) is not doing this kind of optimization because of the way I wrote the code..._. **So we need AoS to avoid losing performance in lightweight numerics classes.**. Before we look into the impact of not using SoA in the gradient and limiters routines let me tell you there is a way to have the best of both worlds, enter the *_array of structures of arrays_* or as I like to call it zig zag storage, aka a right mess.; Imagine an AoS of short arrays of SIMD length, e.g. `{ {u0 u1 u2 u3} {v0 ... v3} {w0 ... w3} {u4 u5 u6 u7} ... }` with that it is possible to fully vectorize point loops as the first index (iPoint) is contiguous in groups of SIMD length and when looping along variables and dimensions in edge loops the stride is small enough (equal to SIMD length) to trigger hardware prefetching.; The catch is that we need even more integer arithmetic and so we really need iterators to amortise that cost, there is also the drawback that scalar usage of such a container would be terrible. **For these reasons I think we should sacrifice ultimate performance and keep node data in AoS storage.**. The major impact on gradients and limiters is the way the code is written, to vectorize the computation we need to compute the gradient into a local variable and then ""transpose"" it when storing it, i.e.; ```c++; FltVec phiI[MAXNVAR], gradI[MAXNVAR][MAXNDIM];; ...; for(size_t iVar=0; iVar<nVar; ++iVar); {; auto flux = weight*(phiI[iVar]+phi.getVec(jPoint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); gradI[iVar][iDim] += a_ij[iDim]*flux;; }; }. for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); for(size_t k=0; k<SIMDLEN; ++k); g",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:13231,variab,variables,13231,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['variab'],['variables']
Modifiability,RANS output now includes the full C_f vector instead of the magnitude (useful for finding separation on surfaces) and some clean up for the variable names in Tecplot.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/267:140,variab,variable,140,https://su2code.github.io,https://github.com/su2code/SU2/pull/267,1,['variab'],['variable']
Modifiability,"RING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4644: result: gcc -E; configure:4664: gcc -E conftest.c; configure:4664: $? = 0; configure:4678: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4678: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:9216,config,configure,9216,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,12,['config'],['configure']
Modifiability,"RY_RESTART = ""NO""; #config_cfd.READ_BINARY_RESTART = ""NO""; ; current_mesh = ""Initial_mesh""; current_solution = ""Initial_solution""; ; if config['RESTART_SOL'] == 'NO':; ; stdout_hdl = open('ini.stdout','w') # new targets; stderr_hdl = open('ini.stderr','w'); ; success = False; val_out = [False]; ; sys.stdout.write('Running initial CFD solution.\n'); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_mesh = config['MESH_FILENAME']; current_solution = ""ini_restart_flow.dat""; ; config_cfd.CONV_FILENAME = ""ini_history""; config_cfd.RESTART_FLOW_FILENAME = current_solution; ; SU2_CFD(config_cfd); ; except:; sys.stdout = sav_stdout; sys.stderr = sav_stderr; raise; ; sys.stdout = sav_stdout; sys.stderr = sav_stderr; ; else:; required_options=['SOLUTION_FLOW_FILENAME']; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : RESTART_SOL is set to YES, but the solution is missing:\n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; current_mesh = config['MESH_FILENAME']; current_solution = config['SOLUTION_FLOW_FILENAME']; ; sys.stdout.write('Initial CFD solution is provided.\n'); ; #--- Check existence of initial mesh, solution; ; required_files = [current_mesh,current_solution]; ; if not all (os.path.exists(fil) for fil in required_files):; err = '\n\n## ERROR : Can\'t find:\n'; for fil in required_files:; if not os.path.exists(fil):; err += fil + '\n'; raise RuntimeError , err; ; #--- Start looping; ; # Get mesh dimension; dim = su2amg.get_su2_dim(current_mesh); if ( dim != 2 and dim != 3 ):; raise RuntimeError , ""Wrong dimension number\n""; ; #--- AMG parameters; ; config_amg = dict(); ; config_amg['hgrad'] = float(config['ADAP_HGRAD']); config_amg['hmax'] = float(config['ADAP_HMAX']); config_amg['hmin'] = float(config['ADAP_HMIN']); config_amg['mesh_in'] = 'current.meshb'; config_amg['mesh_out'] = 'curre",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:5709,config,config,5709,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,4,['config'],['config']
Modifiability,"Really nice work @pcarruscag :+1: ; It looks good to me. I agree with. > There is already a lot of nice work here in identifying the meaningful differences between different SA variants and reducing code duplication, so let's checkpoint this into develop before some other changes are made to turbulence models. The alternative way to specify corrections/variants in the config can be done in a different PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1413#issuecomment-1054045131:371,config,config,371,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413#issuecomment-1054045131,1,['config'],['config']
Modifiability,Refactor CPrimalGrid classes,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1352:0,Refactor,Refactor,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1352,1,['Refactor'],['Refactor']
Modifiability,Refactor Driver classes method names,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1988:0,Refactor,Refactor,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1988,1,['Refactor'],['Refactor']
Modifiability,Refactor Output classes method names,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1987:0,Refactor,Refactor,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1987,1,['Refactor'],['Refactor']
Modifiability,Refactor SA source terms to modularize the specification of model variants and correction terms,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1413:0,Refactor,Refactor,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413,1,['Refactor'],['Refactor']
Modifiability,Refactor SST model implementation and addition of variants/corrections,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560:0,Refactor,Refactor,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560,1,['Refactor'],['Refactor']
Modifiability,Refactor viscous numerics,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626:0,Refactor,Refactor,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/626,1,['Refactor'],['Refactor']
Modifiability,Refactoring of convective numerics classes,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691:0,Refactor,Refactoring,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/691,1,['Refactor'],['Refactoring']
Modifiability,Refactoring of the Linear Solver classes,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650:0,Refactor,Refactoring,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/650,1,['Refactor'],['Refactoring']
Modifiability,Refactorization of SU2 Grid Deformation for Python,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300:0,Refactor,Refactorization,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300,1,['Refactor'],['Refactorization']
Modifiability,"Regarding the name change, I would like to add that Paraview doesn't show the variable name correctly when using those subscripts.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/283#issuecomment-225389066:78,variab,variable,78,https://su2code.github.io,https://github.com/su2code/SU2/issues/283#issuecomment-225389066,1,['variab'],['variable']
Modifiability,Removing unnecessary variables for CFluidScalar constructor,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2357:21,variab,variables,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/2357,1,['variab'],['variables']
Modifiability,Renaming of PHYSICAL_PROBLEM config option to SOLVER,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/756:29,config,config,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/756,1,['config'],['config']
Modifiability,Renaming some of variables,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/191:17,variab,variables,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/191,1,['variab'],['variables']
Modifiability,Restart file variable writing order change,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/397:13,variab,variable,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/397,1,['variab'],['variable']
Modifiability,"Restart files currently contain fields that are not necessary for restarts, like residual information, pressure coefficient, etc. I propose to store only the fields that are necessary for restarts in the restart file. This will keep the size of the restart files to a minimum. . I think we only need to store the transported variables, or do we need to store more information for perfect restarts, or adjoints?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2118:325,variab,variables,325,https://su2code.github.io,https://github.com/su2code/SU2/issues/2118,1,['variab'],['variables']
Modifiability,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/190:48,config,config,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/190,3,['config'],"['config', 'configure']"
Modifiability,"Right now if you include an EnumListOption with no values, for example, . % Type of mesh motion; % Type: EnumListOption Default: GridMovement_Map; GRID_MOVEMENT_KIND= ( ). SU2 gives an error of . Error inT okenizeString(): option GRID_MOVEMENT_KIND in configuration file with no value assigned. I think this is not good behavior. It means that you cannot easily switch from a config file that uses grid movement to one that does not, and it means your can't write a valid config file that has all of the config options in it.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/13:252,config,configuration,252,https://su2code.github.io,https://github.com/su2code/SU2/issues/13,4,['config'],"['config', 'configuration']"
Modifiability,"Right now, there is no error checking whatsoever for the solution restart file. You can give it a tecplot file (for instance) and it will read in without any warning. When we fix that, we should also be adding to the header file (this was run for X solver, etc.) to check that the variables mean the same thing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/12:281,variab,variables,281,https://su2code.github.io,https://github.com/su2code/SU2/issues/12,1,['variab'],['variables']
Modifiability,"Right, that is the AUSM-family refactoring done with the hybrid Jacobians, Roe approximation is still available and it is the default.; So far:; - It was not practical to do finite differences of the mass flux and pressure by perturbing the conservatives, I had to do it on the primitives which then requires an extra Jacobian... So the approach is more expensive per iteration, which could be partially offset by using vector-mode forward-AD.; - However for some cases convergence is much better for the same CFL (wedge case with CFL=25) and in others (transonic airfoil, SST, low Re mesh) it allows much higher (4x) CFL to be used, which again results in lower time overall.; - The performance penalty from the extra layers does not seem to be big, but I have to measure that in a machine that is not doing other things at the same time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-501745584:31,refactor,refactoring,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-501745584,2,"['layers', 'refactor']","['layers', 'refactoring']"
Modifiability,"ST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python3",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6645,config,config,6645,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config']
Modifiability,SU2 configurer,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/759:4,config,configurer,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/759,1,['config'],['configurer']
Modifiability,"SU2 right now is inconsistent with how it does file names in the config file. For example, the restart file needs to be specified with a "".dat"" suffix, but in the case of the surface files, the "".csv"" is added automatically. SU2 should be consistent across all filenames. Preferably, this will be fixed by having the user specify all suffixes. This is a tiny amount of additional work for the user, but it makes writing scripts that use the config file much easier. When the suffix is in the config file, it's easy to have python say ""open this file"". If the config file just has the base name of the file (no extension) then the knowledge of what suffix SU2 uses must be hard-coded into the follow-on script (which can then break later if SU2 changes).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/41:65,config,config,65,https://su2code.github.io,https://github.com/su2code/SU2/issues/41,4,['config'],['config']
Modifiability,"SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /home/antodech/SU2-4.1.0; Install location: /gshare/work/hpascalj/CodeSU2-master; Version: 4.1.0; C++ Compiler: g++; C Compiler: gcc; Preprocessor flags: ; Compiler flags: -g -O2; Linker flags: ; MPI support: no; Metis support: no; Parmetis support: no; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: no; LAPACK support: no; Datatype support:; double yes; complex no; codi_reverse no; codi_forward no. External includes: ; External libs: . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: yes; Build SU2_DEF: yes; Build SU2_SOL: yes; Build SU2_GEO: yes. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=""/gshare/work/hpascalj/CodeSU2-master/bin""; export SU2_HOME=""/home/antodech/SU2-4.1.0""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=x86_64-unknown-linux-gnu; ac_cv_c_compiler_gnu=yes; ac_cv_cxx_compiler_gnu=yes; ac_cv_env_CCC_set=; ac_cv_env_CCC_value=; ac_cv_env_CC_set=; ac_cv_env_CC_value=; ac_cv_env_CFLAGS_set=; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_CXXFLAGS_set=; ac_cv_env_CXXFLAGS_value=; ac_cv_env_CXX_set=; ac_cv_env_CXX_value=; ac_cv_env_LDFLAGS_set=; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_file__gshare_soft_code_sa",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:19276,config,configuration,19276,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configuration']
Modifiability,"SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f), the `SetRoe_Dissipation` function checked to see if the sensor values were valid regardless of the type of blending selected. Commit [ac8b3bf](https://github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f) changed the behavior to only check the sensor values if they will be used. The unit test sets the convective blending to `NTS`, feeds invalid sensor values into `SetRoe_Dissipation` and checks the output. ```cpp; // Used to set the Roe-low-dissipation option; void WriteCfgFile(unsigned short nDim, const char* filename,; std::string blending) {; std::ofstream cfg_file;. cfg_file.open(filename, ios::out);; cfg_file << ""PHYSICAL_PROBLEM= NAVIER_STOKES"" << std::endl;; cfg_file << ""ROE_LOW_DISSIPATION= "" << blending << std::endl;. cfg_file.close();; }. BOOST_AUTO_TEST_CASE(BadSensorsAllowedForNTS) {. /*--- Setup ---*/. const unsigned short nDim = 3;. /*--- Set up the config class for the test ---*/; char cfg_filename[100] = ""convective_blending_test.cfg"";; WriteCfgFile(nDim, cfg_filename, ""NTS"");; CConfig* config = new CConfig(cfg_filename, SU2_CFD, 0, 1, 2, VERB_NONE);; std::remove(cfg_filename);. /*--- Inputs ---*/; const su2double dissipation_i = 0.4;; const su2double dissipation_j = 0.6;; const su2double sensor_i = NAN; // Intentionally unphysical:; const su2double sensor_j = NAN; // Intentionally unphysical:. /*--- Outputs ---*/; su2double dissipation;. /*--- Test ---*/. CNumerics numerics;; numerics.SetRoe_Dissipation(dissipation_i, dissipation_j,; sensor_i, sensor_j,; dissipation, config);. const su2double tolerance = std::numeric_limits<su2double>::epsilon();; BOOST_CHECK_CLOSE_FRACTION(dissipation, 0.5, tolerance);. /*--- Teardown ---*/; delete config;; }; ```. There's a couple problems I would fix if I had more time. Ideally, I would be writing the cfg file to an in-memory stream and not to a file. And realistically, I shouldn't need to use a config file at all for a simple test like this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499999225:1409,config,config,1409,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499999225,8,['config'],['config']
Modifiability,"SU2] Feature deallocation (#174). Bringing this branch up to date with current develop branch. ; Various deallocation changes; Some regression tests fail but all run. (previously was not the case); You can view, comment on, or merge this pull request online at:;   https://github.com/su2code/SU2/pull/174; Commit Summary; - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working version with ParMETIS. Fixed bug in global index. Now clean up and testing...; - Cleaned version of ParMETIS routines with better console output during partitioning.; - Small bug in initial element division.; - Made arrays in ParMETIS call dynamic.; - Fixed compiler warnings and added MPI directives so that the pure serial code works with the ParMETIS routines.; - Bootstrap on zion.; - Added some typecasts. Still tracking down a memory problem...; - Critical bug fix for vtxdist array.; - Partial fix; - More MPI improvements.; - Fixing a bug in SU2_DEF; - Updated BC_ActDisk_Boundary (MPI); - Merge remote-tracking branch 'upstream/develop' into develop; - changing solidboundary setting to be heatflux OR euler etc instead of AND, also working on doxygen documentation; - Dynamic allocation for ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:1824,config,config,1824,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['config'],['config']
Modifiability,SU2_SOL and automatic flow.vtk creat different output variablenames,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/269:54,variab,variablenames,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/269,1,['variab'],['variablenames']
Modifiability,"S_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:818",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:15706,config,config,15706,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,"Samet,. I can help you with the NREL case and the output. . We are in the middle of rewriting those routines, so it will be very easy to register and output new variables to the viz. files soon (another week or less). Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257618678:161,variab,variables,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257618678,1,['variab'],['variables']
Modifiability,"Samet,. the error you get for the caradonna tung case is probably because the definition of the numerical scheme for the turbulence model is missing in the config file. Just copy it from another case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257549568:156,config,config,156,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257549568,1,['config'],['config']
Modifiability,"Seems like we lost that function recently, I'll try to fix it and put together a working example, then you can adapt it to your problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1079#issuecomment-2143984024:111,adapt,adapt,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2143984024,1,['adapt'],['adapt']
Modifiability,"Seems like you're using older version of SU2 master branch. We didn't have several config options such as ""WRT_BINARY_RESTART"" in older version. That's the reason why your SU2_CFD executable throws error message regarding it.; Please clean your SU2 directory, pull fresh copy of master branch of SU2, compile it and then run it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/523#issuecomment-381752554:83,config,config,83,https://su2code.github.io,https://github.com/su2code/SU2/issues/523#issuecomment-381752554,1,['config'],['config']
Modifiability,"Seems like your figures are not attached. Please upload them again. Also, please double check whether your ""SU2_RUN"" environment variable is set correctly as Juan mentioned. If serial computation worked fine only with ""$ SU2_CFD inv_ONERAM6.cfg"" command, I guess you set it correctly. However, from your error message, python script says it can't find a path to ""SU2_RUN""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/521#issuecomment-378119992:129,variab,variable,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/521#issuecomment-378119992,1,['variab'],['variable']
Modifiability,"Seems this may be a result of SU2_DDC not recognizing the one of the configuration file parameters (perhaps NUMBER_PART?), and thus the mesh doesn't get decomposed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2#issuecomment-23189870:69,config,configuration,69,https://su2code.github.io,https://github.com/su2code/SU2/issues/2#issuecomment-23189870,1,['config'],['configuration']
Modifiability,Segementation error on coupling turbomachinery settings with structural analysis,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2085:23,coupling,coupling,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/2085,1,['coupling'],['coupling']
Modifiability,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/278:61,config,config,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/278,1,['config'],['config']
Modifiability,"Simple bug that converted errors like ""duplicate MACH setting in configuration file"" to ""missing configuration file"".",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144:65,config,configuration,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/144,2,['config'],['configuration']
Modifiability,"Simplest is to just copy the saved file again, with an iteration number appended. No keeping track of what the iteration number at the previous write was, no copying of the final saved file with manually appending the final iteration number, no lag of WRT_FREQ in the availability of the restart_xxx.dat file. It does mean that we do a copy instead of a rename. But I think this is the better (because the simplest) solution. I will extend it to the other file options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1465#issuecomment-1005529868:433,extend,extend,433,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465#issuecomment-1005529868,2,['extend'],['extend']
Modifiability,"Since most of the magic of turbulence models can be found in the source, you could adopt what we have done for the SA variants and make a new source term only in CNumerics for each new variant (or maybe have it inherit somehow from the existing one and add just an additional term without duplicating). That way, the bools can be left as SST everywhere and only one line is needed to instantiate the correct source term. The checks on SA and SST throughout are mostly because they have 1 and 2 equations, respectively, so all of their variants can still be lumped under checks for just SA and SST type, I think.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/765#issuecomment-523996743:211,inherit,inherit,211,https://su2code.github.io,https://github.com/su2code/SU2/pull/765#issuecomment-523996743,1,['inherit'],['inherit']
Modifiability,"So I tested the convergence on a couple of test cases, to see its behavior. I used the following three different preconditioner/linear solver combinations:. + LU SGS with FGMRES; + ILU with FGMRES; + ILU with BCGSTAB. I looked at three different test cases from the repo: the zero-pressure gradient flat-plate turbulent boundary layer, the NACA 0012 airfoil, and the RAE 2822. In each case, I ran without a restart file. For the flat plate and the NACA 0012, I used adaptive CFL and no multigrid. For the RAE 2822, I used constant CFL and multigrid. I looked at both the number of iterations of the linear solver (the inner iterations) and the overall convergence over time (the outer iterations). Here's some sample results and discussion:. For the flat-plate boundary layer, there was no noticeable difference between the develop branch and the fix:; ![flat_plate_ilu](https://user-images.githubusercontent.com/13340225/35281464-92d4da84-0018-11e8-9460-ae4672be6f44.png). For the NACA 0012, the linear solver converged in a similar number of iterations. Its hard to tell which outperformed the other due to different CFL numbers. The residual in turbulent kinetic energy did lag in the middle, but both cases converged in a similar number of outer iterations.; ![naca0012_ilu](https://user-images.githubusercontent.com/13340225/35281471-9aa05a40-0018-11e8-8abe-e31ddd058679.png). For the RAE 2822, the overall convergence was identical (same number of outer iterations). The linear solvers also converged in a similar number of iterations.; ![rae2822_ilu](https://user-images.githubusercontent.com/13340225/35281495-addf0d7c-0018-11e8-96c0-6599e3cfa5e5.png). ### Conclusion; There doesn't seem to be any large difference in the convergence with or without the fix.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/491#issuecomment-358401929:466,adapt,adaptive,466,https://su2code.github.io,https://github.com/su2code/SU2/pull/491#issuecomment-358401929,1,['adapt'],['adaptive']
Modifiability,"So I tested this on 4 mesh levels for a NACA0006 at 2.0 degrees AoA, at low (0.6) and high-ish (0.8) Mach number (Roe scheme).; These are the results for low Mach:; ![image](https://user-images.githubusercontent.com/38071223/61968547-3b08c680-afd0-11e9-8aae-9705a9441a00.png); Very small differences between recomputing a mass flux based on primitives (""Reconstructed"") or storing the flux computed during discretization of convection (""Consistent"").; However, the convergence rate for the latter approach is much worse:; ![image](https://user-images.githubusercontent.com/38071223/61968712-99ce4000-afd0-11e9-9c31-dafd7e26e3fb.png); Which makes sense because we are going from a Gauss-Seidel coupling of flow and turbulence to a half GS, half Jacobi (since the turbulence source terms were still computed with current velocity gradients).; After seeing this I only ran one mesh level (second to finest) at high Mach number and again differences were very small and convergence worse.; Some memory would indeed be saved in the discrete adjoint through the reduction of the number of pre-accumulation input variables, but only 30MB out of almost 9GB for a 2D case without MG. In summary the current approach seems to strike a good balance between accuracy, cost, and simplicity.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/721#issuecomment-515535554:693,coupling,coupling,693,https://su2code.github.io,https://github.com/su2code/SU2/issues/721#issuecomment-515535554,4,"['coupling', 'variab']","['coupling', 'variables']"
Modifiability,"So I've got a more general question: Why do we want the gradient norm to be ~1E-6? Isn't this gradient norm problem dependent? it most definitely scales with the square root of the number of design variables. I would suspect that the relative scales of the design variables are also a factor. Is 1E-6 a good rule? Or is it just a decent starting point, and values very different from 1E-6 are used in practice? Also, if this is ""a good rule,"" then shouldn't we just automatically rescale the problem after the first design iteration?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616774814:198,variab,variables,198,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616774814,2,['variab'],['variables']
Modifiability,"So instead of using arrays, since we are only choosing the smallest limiter value, it seems like we can just store a local variable in computing the Van Albada limiter. Does this look okay?. I have the feeling we want to generalize this for other limiters in the future, but this seems like the most efficien option for an implementation in CNEMOEulerSolver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1428#issuecomment-972139855:123,variab,variable,123,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428#issuecomment-972139855,1,['variab'],['variable']
Modifiability,"So now please check why the flux is calculated as ; ""conv_numerics->ComputeResidual(Residual, Jacobian_i, Jacobian_j, config)"" instead of; ""conv_numerics->GetInviscidProjFlux(&V_infty[nDim+2], Velocity, &Pressure, &V_infty[nDim+3], Normal, Residual)""; Why should Jacobian_j be involved? Unless you say that both the above routines give the same end result I am not convinced that it is right.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-313630343:118,config,config,118,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-313630343,1,['config'],['config']
Modifiability,Some old options in config for HB,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/363:20,config,config,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/363,1,['config'],['config']
Modifiability,"Some updates:. - Python wrapper functionalities have been moved into a dedicated python_wrapper_structure.cpp file for code clarity.; - The data structures for the customized values at boundaries have been removed from the CPoint class. Data structures are stored in the geometry class, they are initialized only when customization is set ON and only for involved vertices. There was no restriction to put the data structures in the solver class, except that when multi-grids needs to be updated (required for non uniform field), the geometry class needed an access to the solver class, which is not the case since everything that is in the Common structure seems to be independent of what it is in SU2_CFD, and I wanted to keep that. Those data structures should not be seen as true PDE-related variables, they should be seen as a generic support for boundary customization.; - CHT related labels have been removed and replaced by ""Python customizable"" in order to not introduce any confusion with the native CHT development. The basic purpose of this work is to enable existing boudary conditions to be customized from Python and not to develop a CHT interface. CHT is just an example of application (since only the HEAT_FLUX and ISOTHERMAL walls are customizable for now).; - Based on the previous point, no new specific boundary condition was introduced. For now, I keep the idea to just modify (one single line) the existing boundary conditions to take into account the customization. New dedicated boundary conditions (for example BC_HEAT_FLUX_CUSTOM or BC_ISOTHERMAL_CUSTOM) would be a 99% copy of the originals... Dedicated boundary conditions for native CHT development can still be defined independently (no condlfict). Cheers,. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-355928565:796,variab,variables,796,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-355928565,1,['variab'],['variables']
Modifiability,"Sometimes rather than solving lots of species equations, I prefer to treat gas as mixture of all species and define material properties such as Cp and k as polynomial of temperature only for mixture. As a solver Fluent can do that. I know Fluent is primitive solver, so it treats temperature as solution variable. Then it is easy to find Cv, Cp, k others secondaries for him. In SU2 as I understand (I am not sure), gamma is always constant in ideal gas model. This is not appropriate for high temperature flows such as in rocket nozzle etc. Is there a way to overcome this problem? Which classes I have to touch and re-write? I will be very appreciated if someone enlighten me. Best regards.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/731:304,variab,variable,304,https://su2code.github.io,https://github.com/su2code/SU2/issues/731,1,['variab'],['variable']
Modifiability,"Sorry for my late reply and thanks Heather for opening this important discussion.; I fully agree with you and OBJECTIVE_FUNCTION and OPT_OBJECTIVE cause confusion. As far I see the problem, if we focus on a typical users point of view, I think that OPT_OBJECTIVE and OPT_CONSTRAINT must be in the config file and as close as possible. They are the key to define an optimization problem (one of the key features of SU2). On the other hand, as you suggested we need to add some flexibility. It would be interesting to to able to define a multi-objective like; OPT_OBJECTIVE= DRAG \* DRAG_WEIGHT; LIFT^2 \* LIFT^2_WEIGHT;. As Tim pointed out OBJECTIVE_FUNCTION is important because is what we use to play and develop the adjoint capability but, from the users point of view it is not as interesting as the OPT_OBJECTIVE. If everything works ok, OPT_OBJECTIVE should be enough for most of the SU2 users. How many typical users are interested in solving and adjoint problem for the sake of solving of an adjoint problem?. However OBJECTIVE_FUNCTION is not a good name, from the point of view of the continuous adjoint, I would feel comfortable if we change it to ADJ_BND_CONDITION. That probably doesn't work for the discrete adjoint, isn't it? Tim, What key word would work for the Discrete Adjoint? We need something that reflect the effect, in mathematical terms, of the objective function in the AD adjoint problem. Finally, before adding any capability we should ask ourself how general is going to be and if it going to be useful for the most part of the SU2 users community (in my opinion, external aerodynamics). If the new objective function is only useful for us, or a research project, then I think we need to create some kind of custom objective function, (e.g. CUSTOM_OBJFUNC at the same level than DRAG, LIFT, etc) that we can describe with other set of parameters. Thanks,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-187255862:297,config,config,297,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-187255862,1,['config'],['config']
Modifiability,"Sorry for the delayed response,. Yes, for some reason I still receive the same results using the SUPERSONIC_SHOCK option. Thank you for the additional resources on mesh adaptation,; Alex",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-443926887:169,adapt,adaptation,169,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-443926887,1,['adapt'],['adaptation']
Modifiability,"Sorry for the late reply, here are some personal opinions. (1) I have also test the turb flatplate and Onera M6 case (Fig1.Original; Fig2.Submit) in the tutorials. The convengence and results also shows just slightly difference. . (2) This PR is not suitable for the euler wall, for the wall is not always a straight plane and singular points do not statisfy the condition for the normal direction is hard to define. (3) Well, I have noticed the BC_Sym_Plane before, but it is very puzzling to me that only the closed point to the vertex on the sym wall is considered to add additional negative normal flux contribution. Maybe the mesh is unstructured and more than one point out of wall is linked to the vortex. Maybe the closed point is not normal to the wall while it always occurs on the 3D sym plane such as the ONERA M6 wing case. (4) This PR is to add a limitation of the velocity on the sym wall, just like what we do to the turb walls in the CTurbSSTSolver::CTurbSSTSolver(CGeometry *geometry, CConfig *config, unsigned short iMesh). The fix is only available for the SYMMETRY wall and in the implicit iteration, just to avoid uncertainty and potential instability.; `; CTurbSSTSolver::CTurbSSTSolver(CGeometry *geometry, CConfig *config, unsigned short iMesh); : CTurbSolver(geometry, config, true) {; ...... /*--- Initialize lower and upper limits---*/; lowerlimit[0] = 1.0e-10;; upperlimit[0] = 1.0e10;. lowerlimit[1] = 1.0e-4;; upperlimit[1] = 1.0e15;; `; ![untitled](https://github.com/su2code/SU2/assets/58663453/f5b5f543-3476-45d6-9477-94c7deeca9aa); ![untitled](https://github.com/su2code/SU2/assets/58663453/c6ecbdc5-0636-4880-a315-05c8636c27bb)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2174#issuecomment-1829816458:1012,config,config,1012,https://su2code.github.io,https://github.com/su2code/SU2/pull/2174#issuecomment-1829816458,3,['config'],['config']
Modifiability,"Sorry for the late response, and thanks for getting back to me! That definitely looks like what I'm looking for. I've taken a look through the code and I'm not entirely sure about what the syntax for including such a bc in the config file would be. Is there an example?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/690#issuecomment-498694974:227,config,config,227,https://su2code.github.io,https://github.com/su2code/SU2/issues/690#issuecomment-498694974,1,['config'],['config']
Modifiability,Sounds good to me. I have been prototyping the multizone driver in the last couple of weeks. It's still in the early stages but it's slowly taking shape. You can find it here:; https://github.com/su2code/SU2/tree/feature_reformat_config. I also outlined some of the changes (particularly in what respects to the config file) in the Dev-society forum: https://su2devsociety.org/forum/?view=thread&id=5 . We could keep the conversation there if you want. Happy to set up a meeting to explain a bit what I have been doing and receive some feedback (and helping hands would also be welcome!) from the different groups.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528#issuecomment-392061901:312,config,config,312,https://su2code.github.io,https://github.com/su2code/SU2/pull/528#issuecomment-392061901,2,['config'],['config']
Modifiability,Sounds good. ; Do you mean that MARKER_MOVING will disappear entirely? I think that is a good idea - this is one of those options that confuse new users if they aren't reading the config file comments in detail.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-136878093:180,config,config,180,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-136878093,1,['config'],['config']
Modifiability,"Sounds good. I was a little concerned about carrying around unnecessary memory during fluid computations, which will be the case for FSI as well as time spectral and some other applications, but you have a good point about avoiding allocation/deallocation overhead, and since you're reducing the number of times the same variables are re-allocated without any deallocation, it'll be a performance improvement relative to the current code either way. Please replace the 'varname.~Classname' calls with 'delete varname', then I think it should be good to go (pending anyone else weighing in on this). [you probably already know this from previous pull requests, but just in case - you don't have to create a new pull request, just commit into your branch and it will update automatically]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-148124339:321,variab,variables,321,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-148124339,1,['variab'],['variables']
Modifiability,"Strange indeed. It was a fresh cloning of the develop branch.; Look at the begining of preconfigure.py:. #!/usr/bin/env python. ## \file configure.py; # \brief An extended configuration script.; # \author T. Albring; # \version 7.0.2 ""Blackbird""; #; # SU2 Project Website: https://su2code.github.io; # ; # The SU2 Project is maintained by the SU2 Foundation ; # (http://su2foundation.org); #; # Copyright 2012-2020, SU2 Contributors (cf. AUTHORS.md); #; Clearly 7.02. So there is somewhere a mixup with the 6 version. But the problem that not; just the headers numbers are mixed up",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-598824144:137,config,configure,137,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598824144,3,"['config', 'extend']","['configuration', 'configure', 'extended']"
Modifiability,Sub-config files for multizone problems,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/715:4,config,config,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/715,1,['config'],['config']
Modifiability,Supersonic Wedge Mesh Adaptation Issue,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606:22,Adapt,Adaptation,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/606,1,['Adapt'],['Adaptation']
Modifiability,"Sure we do (e.g. `CDiscAdjSolver::RegisterSolution` will behave incorrectly). So actually both ways are based on saving indices somewhere. However the routines that I added (with the `_intIndexBased` extension) do save them internally together with ""their"" corresponding variable (in the same variable class) which is important for the multizone stuff. > So now when we register the coordinates we do it index-based because the multizone_problem boolean is set. We don't want the `_intIndexBased` routines for the FSI cases. They work by re-recording new tapes for each set of variables (fluid solution/coordinates/displacement solution) with added specific routines within the solvers/iterators for cross dependencies (which goes along with saving indices externally, but in a preassigned order). > What are the implications for when we extract the adjoints? Do we need an index-based GetDerivative?. Yes there are counterparts in `RegisterSolution`, `SetAdjoint_Output` and `ExtractAdjoint_Solution`. But nothing more. We can go for the internal indices in `CVariable` exclusively once we have integrated the FSI capabilities to the multiphysics driver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542202636:271,variab,variable,271,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542202636,3,['variab'],"['variable', 'variables']"
Modifiability,Sure. Your change is fully compatible for me.; I understand your motive for the new environment variable. Please go ahead.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/335#issuecomment-263695418:96,variab,variable,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/335#issuecomment-263695418,1,['variab'],['variable']
Modifiability,THIS IS A PR TO feature_NEMO. No impact on develop. This pull requests adds preprocessing to the NEMO NS solver and commonpreprocessing functionality seen in develop. Some functions have been extended to deal with eddy viscosity. Regression tests are passing. If the community finds having internal pull request distracting/cluttering I can take down.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1078:192,extend,extended,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/1078,1,['extend'],['extended']
Modifiability,"THOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------; Found: mesh_NACA64A010_turb.su2; New Project: ./; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 50 ( 50 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 100; Requested accuracy: 1.0000000000000001e-11; Initial guess for the independent variable(s): [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]; Lower and upper bound for each independent variable: [(-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05)]. Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:2144,variab,variable,2144,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['variab'],['variable']
Modifiability,"T_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <stdio.h>; | #ifdef HAVE_SYS_TYPES_H; | # include <sys/types.h>; | #endif; | #ifdef HAVE_SYS_STAT_H; | # include <sys/stat.h>; | #endif; | #ifdef STDC_HEADERS; | # include <stdlib.h>; | # include <stddef.h>; | #else; | # ifdef HAVE_STDLIB_H; | # include <stdlib.h>; | # endif; | #endif; | #ifdef HAVE_STRING_H; | # if !defined STDC_HEADERS && defined HAVE_MEMORY_H; | # include <memory.h>; | # endif; | # include <string.h>; | #endif; | #ifdef HAVE_STRINGS_H; | # include <strings.h>; | #endif; | #ifdef HAVE_INTTYPES_H; | # include <inttypes.h>; | #endif; | #ifdef HAVE_STDINT_H; | # include <stdint.h>; | #endif; | #ifdef HAVE_UNISTD_H; | # include <unistd.h>; | #endif; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking X11/Intrinsic.h presence; configure:5409: gcc -E conftest.c; conftest.c:28:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:14078,config,configure,14078,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,Test Case was not running due to AssertionError: Config file has multiple specifications of CFL_ADAPT_PARAM; Duplicated entry of CFL_ADAPT_PARAM removed,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/387:49,Config,Config,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/387,1,['Config'],['Config']
Modifiability,"TestCases repo is used for large files that are used in regression tests.; Then we have the tutorials repo for tutorial files (mesh + configs) and we also exercise those in regressions.; If this is too large for either of the above it should go into V&V, I guess that is how it was used for the paper?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2239#issuecomment-2018876371:134,config,configs,134,https://su2code.github.io,https://github.com/su2code/SU2/pull/2239#issuecomment-2018876371,1,['config'],['configs']
Modifiability,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:84,config,config,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363,8,['config'],"['config', 'configuration']"
Modifiability,"Thank you @chamsolli ; However, it says that some of the options like coefficients and binary restart are not analogous to the config file of SU2.; ![screenshot from 2018-04-16 16-03-29](https://user-images.githubusercontent.com/31462793/38835288-c18a81e4-4190-11e8-8aae-d28eabbbc0d1.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/523#issuecomment-381751040:127,config,config,127,https://su2code.github.io,https://github.com/su2code/SU2/issues/523#issuecomment-381751040,1,['config'],['config']
Modifiability,"Thank you Clark,; I will come back as soon as I will be able to run the case to extend the script. Best regards",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1079#issuecomment-702016718:80,extend,extend,80,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-702016718,1,['extend'],['extend']
Modifiability,"Thank you all for the review and comments. I've added a test case with this pull request for a pitching airfoil. The config is in the main repository and the mesh is added in the TestCases repository with the same branch name. Can both pleased be merged in together? Also about the tutorial request, I'll have a go at writing one in a feature branch of the website repository.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-526666570:117,config,config,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-526666570,1,['config'],['config']
Modifiability,Thank you for having a look @MicK7.; Allowing multizone cgns based on the MULTIZONE_MESH option sounds reasonable but I did not want to remove the error without testing. Do you (or @ChristianBauerEng) have a multizone cgns we can use to test this?; I don't think we should add more config options.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1566#issuecomment-1073214095:282,config,config,282,https://su2code.github.io,https://github.com/su2code/SU2/pull/1566#issuecomment-1073214095,1,['config'],['config']
Modifiability,"Thank you for re-testing Jayant.; The idea with the hard-coded ceiling (floor?) on linear solver tolerance was to handle examples where it is set to very low values which would not allow this mechanism to work properly... Hummm but I can see the case for using the linear solver tolerance to achieve a fixed number of iterations, and then using an ""acceptable reduction"" to drive the CFL. Alright good idea I'll make it a fifth, optional CFL-adapt parameter with default 0.001 and still take the max between it and the tolerance. Out of curiosity did you manage to check what kind of tolerance seems ""optimum"" for adapted meshes?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020:442,adapt,adapt,442,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020,2,['adapt'],"['adapt', 'adapted']"
Modifiability,"Thank you for sharing the Output details @pcarruscag. Now I can output the *Cur_Time* column with only changing of input script. . After reading the source code, I also found that the history field depends on the user settings, such as physics type, turbulence model, etc. If I manually assign the HISTORY_OUTPUT variable, will the default settings be wiped out? It seems that adding the ""CUR_TIME"" to the default history field for transient analysis is reasonable if not conflict with other settings. I will be proposing a PR, however, please feel free to comment or challenge. Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2138#issuecomment-1740363137:313,variab,variable,313,https://su2code.github.io,https://github.com/su2code/SU2/issues/2138#issuecomment-1740363137,1,['variab'],['variable']
Modifiability,"Thank you for the pull request. ; Pull requests must be both to and from the ""develop"" branch (or the relevant feature branch if applicable). In order to make a pull request, please check out the develop branch, make your changes, and submit the pull request into to develop branch. . While this might be useful in some situations, and particularly the record of this pull request can be an example to other users who want to use Docker with SU2, it looks like this is specific to a version of Ubuntu, and that you have hard-coded some lines to refer to locations on your own file system. We try to make it such that SU2 will be usable in most operating systems, with appropriate changes to the configuration steps. . Since it is setting up a development environment this would be more appropriate to SU2_IDE/, rather than Quickstart/ - which is intended as the main tutorial for new users, who are not necessarily developers and who may not have heard of Docker.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/169#issuecomment-96786749:695,config,configuration,695,https://su2code.github.io,https://github.com/su2code/SU2/pull/169#issuecomment-96786749,2,['config'],['configuration']
Modifiability,"Thank you for the review Catarina, based on your comments I will try to explain the new structure better. ### The interface; These numerics classes are still abstract and so the outside world only needs to known about their interface:; ```c++; class CNumericsSIMD {; public:; virtual void ComputeFlux(...) const = 0;; };; ```; Any class that wants to be a simd numerics needs to inherit from this base and in so doing is forced to implement `ComputeFlux` (because it is pure virtual). ### Static decorator pattern; Now, in this structure we don't have convective and viscous classes separate. Instead, we have convective schemes that can be ""decorated"" with viscous fluxes. For example:; ```c++; template<int nDim>; class CCompressibleViscousFlux : public CNumericsSIMD {; protected:; void viscousTerms(...) const {...}; };; ```; Here note that this class template is derived from CNumericsSIMD but it does not implement `ComputeFlux`, thus it cannot be instantiated by itself. The idea is that convective schemes can use these viscous fluxes as base class (thereby linking them to CNumericsSIMD) to access the `viscousTerms` method (when we don't want viscous terms we just use a dummy viscous class).; Note also the template parameter `nDim`, this is because we want to create specific versions of the numerical schemes for 2D and 3D (we ""want"" this because it allows static allocation and unrolling loops perfectly). Then convective classes also need to be class templates so that we can programatically change their base class:; ```c++; template<class Base>; class MyConvectiveScheme : public Base {; public:; void ComputeFlux(...) const {; // do my own thing; Base::viscousTerms(...);; // update the linear system with the result; }; };; ```; Now to create an instance of this class template we do for example:; ```c++; auto obj = new MyConvectiveScheme< CCompressibleViscousFlux<2> >(...);; ```; which would create an object for 2D problems with viscous terms. And so we need at least 4 instanti",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:379,inherit,inherit,379,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721,1,['inherit'],['inherit']
Modifiability,"Thank you for the suggestion, the artificial compressibility should probably be added to config template - although I would also note that this option only operates when running an incompressible problem, which some users may not realize.; The config template is generated for releases, and some options are excluded for development purposes. Artificial compressibility is not in that category, however, and so it should be added to the config template. . All options, and default values, can be found in the source file: Common/src/config_structure.cpp. One alternate solution for getting more detail on options, which unfortunately is only partially complete, is to leverage doxygen:; https://github.com/su2code/SU2/issues/122. example output:; ![image](https://cloud.githubusercontent.com/assets/5167760/15504600/9beafe66-2174-11e6-836d-f20777f4f474.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/277#issuecomment-221262435:89,config,config,89,https://su2code.github.io,https://github.com/su2code/SU2/issues/277#issuecomment-221262435,3,['config'],['config']
Modifiability,"Thank you for the thorough review @rsanfer! I'll reply to your main questions and some of the smaller ones here to centralize things. > Just a request, if it's possible that you add one or two test cases so the implementation is safe onwards (and, of course, so I can play around with the new features a little bit ). The testcases are the same, no changes there other than the one optional option introduced above. When the hybrid stuff covers most of the code I would add an entire build configuration e.g. BaseMPIOMP and corresponding testcase suite. > * Should this just run ""out of the box"" with a working installation of OpenMP in any machine, or is there anything else _fancy_ needed?. I would leave it to the community to decide what the defaults should be, probably for a lot of new users that don't run on clusters just calling SU2_CFD and not having to worry about mpi would be nice (a lot of the issues on CFD online are mpi related). > * Is the previous behaviour exactly kept, or are there any modifications in the basic, non OpenMP version of code? (Not that I mind, just curious). Other than the algorithmic changes (but mathematically equivalent) introduced to limiters and gradients in #834, yes. > What's the advantage of having one numerics term per thread?. It is a requirement, we need to write data into numerics before using them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could r",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:490,config,configuration,490,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,2,['config'],['configuration']
Modifiability,"Thank you for your advice. I will do that as soon. PENG YAN, PhD student. Department of Aerospace Science & Technology. Politecnico di Milano; ________________________________; From: Nijso ***@***.***>; Sent: Wednesday, October 5, 2022 21:47; To: su2code/SU2 ***@***.***>; Cc: Peng Yan ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] [WIP]Coupling of SU2 and CoolProp (PR #1782). Yes, all those automatically generated files should be removed, so everything in the folder .idea (including the folder), and the entire cmake-build-debug folder. If they come from coolprop, tell it to install into another directory outside of SU2. —; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/1782#issuecomment-1268887325>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ATJ4GKA5U3DU3MBG5LNUQC3WBXLMBANCNFSM6AAAAAAQ53HAJY>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1268908256:353,Coupling,Coupling,353,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1268908256,1,['Coupling'],['Coupling']
Modifiability,"Thank you for your answer. If you could share the configs and meshes that you are using I can try following the approach suggested by @pcarruscag and use the TKE from the turbulence solver instead of the freestream one. Plus, I have some doubts on the default value of the turbulent to laminar viscosity ratio which is equal to 10 in SU2, although on the NASA page suggests to be in the range of 10^-2 to 10^-5. However, I think that this is another issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-2245190147:50,config,configs,50,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-2245190147,1,['config'],['configs']
Modifiability,"Thank you for your comment. No need to create dummy points for periodic BC is really an ingenious design and when I run RANS/URANS cases, I get good results. But there are still some problems for me, the first is convergence when I run big 3D cases and the second is the periodic BC cannot cooperate with hybrid RANS/LES method. So I thought a dummy layer is sometimes necessary just as in Blazek's book(Computational Fluid Dynamics: Principles and Applications, Second Edition, Page 293). ; ![book](https://github.com/su2code/SU2/assets/58663453/cd5a29ba-4f75-40a0-8530-edfd1523d9b7). One dummy layer need to communicate solution, gradients or maybe Laplacian, sensors and so on. It's still complex so I choose two dummy layers to only communicate solution. As in the picture, the original use the send-recieve pair1 as periodic BCs and this feature need four pairs with a restriction that the outermost four layers should be structured grids. Three more repeated mesh sections are indeed added but it is acceptable in terms of robustness and reducing data communication.; ![pairs](https://github.com/su2code/SU2/assets/58663453/1d7c5005-b704-40a6-88dd-518e09082eea). The above diagram can be set with the following settings:; MARKER_PERIODIC= ( y0.48, y0.04, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.44, 0.0, y0, y0.44, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.44, 0.0 ); PERIODIC_DUMMY= YES. This functionality also requires a pre-processing program for the grid to add the appropriate boundary conditions to the .su2 file. I am currently doing this using a fortran code and trying to replicate it using python scripts. But the changes to the c++ code section have been verified with various RANS/URANS/DES cases and a result of NACA0012 swept wings is listed below.; ![0012](https://github.com/su2code/SU2/assets/58663453/552782e9-e5c3-4a0f-b809-af7fdc7aecfc)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2038#issuecomment-1556503119:722,layers,layers,722,https://su2code.github.io,https://github.com/su2code/SU2/pull/2038#issuecomment-1556503119,2,['layers'],['layers']
Modifiability,Thank you for your quick response. I'll open a PR to fix the comment.; Do you happen to know why the default value of ADJ_SHARP_LIMITER_COEFF is set to 3? It makes surface sensitivity zero for large areas and screws up shape optimization. It took me a while to find out that this variable is the cause. I think the default value should be something that works for most users.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1830#issuecomment-1328190193:280,variab,variable,280,https://su2code.github.io,https://github.com/su2code/SU2/issues/1830#issuecomment-1328190193,1,['variab'],['variable']
Modifiability,"Thank you for your response, @bigfooted. ; I can see the available options using the flag -d as you suggested. . Is there any way that I can activate the CUR_TIME in the history file using the config.cfg? Currently what I did is adding the line below to certain source files, then build and run. It works but has to change the source code. ` if (config->GetTime_Domain()) requestedHistoryFields.emplace_back(""CUR_TIME"");`. Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2138#issuecomment-1738826301:193,config,config,193,https://su2code.github.io,https://github.com/su2code/SU2/issues/2138#issuecomment-1738826301,2,['config'],['config']
Modifiability,"Thank you very much for creating SU2,. I would like to know more about the drag coefficient calculation used to produce the results in Forces_breakdown.dat. May someone add a page on the SU2 website to include further details on this?. Thanks a bunch. **In general it would be great if there was a manual page for configuration options used in both compressible and incompressible flow simulations.**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/758:314,config,configuration,314,https://su2code.github.io,https://github.com/su2code/SU2/issues/758,1,['config'],['configuration']
Modifiability,"Thank you. I see, so you set separate markers, e.g. MARKER_EULER= ( WingTop, WingBottom ), and where the marker boundaries meet, the mesh points on that interface is unchanged; did I understand that correctly? I guess that while this will reduce the artefacts on the LE/TE it still results in a departure from the design shape at the portions away from the boundary edges. As you mentioned before, there might not be a way to solve this without mapping back to an iges or parametric file. I suppose another approach might be to work the other way around? Perhaps one can limit the max allowable adapted size to match the 'worst case' allowable surface mesh? I just realised that may be a contributing factor to why the points jumpy across the fuselage; `PYADAP_HMAX` may be set excessively large. If I set this limit to less than the average surface mesh cell size, will it attempt to refine everything over the limit instantly? Or will it only use the limit for 'new' cells that are generated during adaptation? Thanks for your thoughts.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764836923:595,adapt,adapted,595,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764836923,2,['adapt'],"['adaptation', 'adapted']"
Modifiability,"Thank you. It does seem to work for the GRAD_FLOW option; however, it still results in the same incorrect results as before for the SUPERSONIC_SHOCK option. Also, when I add ""-c 2"" as a command line argument to mesh_adaptation.py to speed up the process of running multiple adaptation cycles, the simulation will only do a single one then exit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-437553068:274,adapt,adaptation,274,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-437553068,1,['adapt'],['adaptation']
Modifiability,Thanks ! So do we go for pysu2 as the Py module and _pysu2 as the extended C++ (.so lib) ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/357#issuecomment-272708402:66,extend,extended,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/357#issuecomment-272708402,1,['extend'],['extended']
Modifiability,Thanks @ScottImlay. Seems to work now. Just a quick question. You only adapted the volume mesh/solution routines. Is it also possible to use the new format for the surface files (i.e. in the routines SetTecplotBinary_SurfaceMesh/SetTecplotBinary_SurfaceSolution) ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-425020607:71,adapt,adapted,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-425020607,1,['adapt'],['adapted']
Modifiability,"Thanks @TobiKattmann, nice catch! Can you please put a pull request with the required changes? That way I can also do some tests myself and we can move the discussion there. @economon As far as I know, there is no multizone-multiinstance case running as of now. I think @arubino worked on multizone harmonic-balance, but I don't think it has yet been adapted to the new instance index. Am I right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/568#issuecomment-416935622:351,adapt,adapted,351,https://su2code.github.io,https://github.com/su2code/SU2/issues/568#issuecomment-416935622,1,['adapt'],['adapted']
Modifiability,Thanks @economon this makes a lot of sense. And if it goes ahead maybe the options DEFORM_LINEAR_SOLVER_ITER and DEFORM_LINEAR_ITER should also be fused?. This is has a smallish negative implication to FSI cases. There because the deformation is incremental it is acceptable to converge the solver to 1e-6 or only 1e-5. But in shape optimization (@cvencro and I are working on that) we would be limited by the lowest required tolerance. @rsanfer this is something to consider in the mesh deformation refactoring.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/623#issuecomment-443665804:500,refactor,refactoring,500,https://su2code.github.io,https://github.com/su2code/SU2/pull/623#issuecomment-443665804,1,['refactor'],['refactoring']
Modifiability,"Thanks @pcarruscag for making this PR a lot better. @bigfooted @danielmayer @mheimgartner ; To layout future steps as discussed after this merge: ; 1. Merge these changes into feature_flamelet (and then feature_multicomp). Therefore the `CScalar*` things that are currently present in these branches will be renamed to CLegacyScalar* to not overwrite files. This has the advantage that those branches are kept up-to-date with develop.; 2. Implement a rudimentary (passive) CSpeciesSolver (specifically does not contain multicomponent mixing from #1332 ) and merge that. Finding a good (validation) Testcase would be great here.; 3. Extend the CSpeciesSolver by #1332 mixing models. Either by cutting away all the flamelet specific parts or by porting the additions to a new PR.; 4. Make feature_flamelet switch to the new structure. This is an in-place change as both implementations are then present but just one will be kept. This will shrink the PR size of #1223 by quite a bit . Additionally the heat and radiation solver should be ported into this new structure, but that is independent work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330#issuecomment-925066101:632,Extend,Extend,632,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330#issuecomment-925066101,1,['Extend'],['Extend']
Modifiability,"Thanks @pcarruscag for responding! I really appreciate you taking time to answer this. Well, I was just looking at the density residuals for convergence. That should be valid for both primal and adjoint. I have attached my config file for future reference. The same works for v6 though. Yes, downgrading hurts. But I had good reasons to do so because of the shape optimization scripts for turbomachinery are way more developed for v6 than v7. I wish I could have done that earlier. Plus the MPI issue as well #990. Now I am able to use 30 instead of 3 cores and that makes one hell of a difference. The good part about git is that I can go back to v6.1.0 tag and get not only the code and Testcases but the website at that version as well. That certainly helps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1024#issuecomment-645495083:223,config,config,223,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645495083,1,['config'],['config']
Modifiability,Thanks @pcarruscag for your comments. As always very valuable! I think I have addressed all of them. Some other things I have changed:. - The history files per zone are disabled by default when running a multizone problem; - The multizone history file is now named after the config file (i.e. case name).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/845#issuecomment-572996083:275,config,config,275,https://su2code.github.io,https://github.com/su2code/SU2/pull/845#issuecomment-572996083,1,['config'],['config']
Modifiability,"Thanks @sun5k, the merge conflicts were probably a bit challenging because some files were moved with the other work we were doing on turbulence.; I had a look at the code and it looks like you did a nice job of modernizing the transition implementation :+1: and the verification against Fluent also looks good.; Given that this is an improvement in all directions (better code, feature that works, same amount of code) I encourage you to make the final push so that we can integrate it into develop.; As you see the GitHub tests are failing because of compiler warnings (unused variables and so on, you should be able to see the logs) let me know if you need some help.; Then we need at least one regression test, for example one of the coarser grids in your V&V, and with that we should be able to finish this PR!. After that please consider adding your results to our V&V page https://su2code.github.io/vandv/home/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1239202757:579,variab,variables,579,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1239202757,1,['variab'],['variables']
Modifiability,"Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. ![Comparison](https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png); ![ComparisonMesh](https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-621450497:229,adapt,adaption,229,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621450497,2,['adapt'],['adaption']
Modifiability,"Thanks Edwin, the vectorized loops in the code are probably very simple array copies, hence the low efficiency? I would put money on not a single vector instruction being generated for the important stuff. I was surprised by the 1.25 to 1.3 factor you are seeing, for the exact same case I measured 1.39 (to be more precise). Initially I thought it had something to do with running single core, thus leaving vast amounts of L3 for only that core to use, so on the same 24c platform I ran 2 processes (30MB of cache for each) (very uncivilised) and the factor went down to 1.37, so cache was not the reason.; So then I thought maybe the Intel compilers are very good at optimizing polymorphism away, but the development branch compiled with icc 17 runs at exactly the same speed as when compiled with gcc 5.4. Then I compiled feature_contiguous_cvariable with icc 17 and it runs 9% slower than the gcc binaries, and so with icc 17 the speedup for this case was 1.27 errrrr... Anyone got a buddy at Intel?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-523930905:680,polymorphi,polymorphism,680,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-523930905,2,['polymorphi'],['polymorphism']
Modifiability,"Thanks Heather,. Could you please take a look at the log_Adjoint.out file generated in the folder DESIGNS/DSN_001/ADJOINT_DRAG/ when you run the single objective-with-multiple-surfaces regression test (in the part whereSU2 specifies the Surface(s) where the force coefficients are evaluated). It seems that the shape optimization python script only copied the first surface to config_CFD.cfg. I found the ""if (n_obj>1):” solution… but, you know better the multi objective implementation. Just let me know if there is another more elegant fix that we can implement. Thanks!; Francisco. > On Mar 25, 2018, at 1:55 PM, Heather Kline <notifications@github.com> wrote:; > ; > @hlkline commented on this pull request.; > ; > In SU2_PY/SU2/eval/design.py <https://github.com/su2code/SU2/pull/519#discussion_r176953697>:; > ; > > @@ -364,7 +364,7 @@ def obj_df(dvs,config,state=None):; > # For multiple objectives are evaluated one-by-one rather than combined; > # MARKER_MONITORING should be updated to only include the marker for i_obj; > # For single objectives, multiple markers can be used ; > - config['MARKER_MONITORING'] = marker_monitored[i_obj]; > + if (n_obj>1): config['MARKER_MONITORING'] = marker_monitored[i_obj]; > I think that the array of monitored markers is extended to accommodate this situation in config.py (~line 514), and there is a single objective-with-multiple-surfaces regression test; do you have a case you can send me where this wasn't working? Or if you see an issue with that test that I previously missed I wouldn't mind looking into it.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/519#pullrequestreview-106743204>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AccuRva3VNHDjv7H11VnmorjY5pCNlpkks5tiARDgaJpZM4S4O1W>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-376016690:857,config,config,857,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-376016690,5,"['config', 'extend']","['config', 'extended']"
Modifiability,"Thanks Heather,. I completely agree, MARKER_DESIGNING. MARKER_MONITORING. MARKER_PLOTTING. DV_MARKER are confusing… we have tried to fix this without too much luck. It really requires some deep changes on the python and C++ stuff. The idea is the following. > MARKER_PLOTTING: Should disappear, in the future, all the markers should be in the tecplot or paraview file (and the user will decide which one turn on of off using templet of paraview); > ; > MARKER_MONITORING, MARKER_DESIGNING: The main idea is to be able to compute to different integrals over the surfaces: one for simulation and the other for design. e.g. You maybe want to include all the solid surfaces and fan faces, and charging stations in MARKER_MONITORING to compute (Drag-Thrust) but in MArKER DESIGN you are only interested on the wing surface for design.; > ; > DV_MARKER. This is an unfortunately name. At the very beginning the mesh deformation capability was developed only for shape design (DV = Design Variables). We should generalize the names of the grid deformation parameters without using DV. Thanks!; Francisco. On Aug 18, 2015, at 4:31 AM, Heather Kline notifications@github.com wrote:. > Thanks Tom; > I agree that we should make things easy to understand. ; > My thinking was that most users will want to know what parts of the mesh they are moving, but don't necessarily need to know what's happening underneath - if they specify the entire mesh the code just reverts to the more efficient method. But (from the users perspective) it may be just as easy to have a separate specification for scaling the entire mesh.; > ; > In terms of moving it to SU2_MSH; I think it may make sense to include scale/rotate/translate in SU2_MSH, but I think it would be confusing to have two options that do the same thing. I would side with separate option names (this would also eliminate a loop over markers in this pull request); > ; > On this topic, I have sometimes found MARKER_DESIGNING and DV_MARKER to be confusing; on",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-133010923:982,Variab,Variables,982,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-133010923,1,['Variab'],['Variables']
Modifiability,"Thanks Pedro for hinting me at this coupling issue again, now I think I understand it! . **For the record**, here is what I talked about in today's developer meeting:; When I make the following changes in the `issue_simplified/multizone/multizone-i.cfg` :. 88c88; < CFL_NUMBER= 0.1; ---; > CFL_NUMBER= 1000.0; 162c162; < TIME_DISCRE_FLOW= EULER_EXPLICIT; ---; > TIME_DISCRE_FLOW= EULER_IMPLICIT; 177c177; < TIME_DISCRE_TURB= EULER_EXPLICIT; ---; > TIME_DISCRE_TURB= EULER_IMPLICIT. then the simplified multizone setup converges, albeit to a different solution:; ![simplified-multizone-explicit-cfl01-density](https://user-images.githubusercontent.com/72806890/139096529-5063dbe7-8ee8-4c53-a7c6-a2b6b3a031a1.png); than what the simplified singlezone setup (from above) converged to: ; ![simplified-singlezone-density](https://user-images.githubusercontent.com/72806890/139096586-7d096c5f-4d34-4ddb-94fa-0deab52df5e4.png). The same observation can be made analogously for `issue_complicated`:; The multizone setup with explicit Euler and CFL=0.1 (nearly) converges (actually the residual stalls at `avg[bgs][0]` approximately -13) to the following limit:; ![complicated-multizone-explicit-cfl01-density](https://user-images.githubusercontent.com/72806890/139096973-e9547f9f-521e-4920-aba5-2621fad79944.png); while the singlezone solution (with implicit Euler and CFL 1000) is (**EDIT**: was momentum plot, replaced by density plot); ![complicated-singlezone-density](https://user-images.githubusercontent.com/72806890/139109790-e5cae4be-041e-4c29-93a5-e086a26f72a4.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-953043430:36,coupling,coupling,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-953043430,2,['coupling'],['coupling']
Modifiability,Thanks Pedro for the description of all these!. I was using the default value for most of them. I tried increasing the DEFORM_LINEAR_SOLVER_ITER but that did not have any effect. Probably will try using DEFORM_COEFF and DEFORM_LIMIT to see if that has an effect. I have also attached the config file for future reference.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1026#issuecomment-645489716:288,config,config,288,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026#issuecomment-645489716,1,['config'],['config']
Modifiability,"Thanks Suman,. My suggestion is the following… we have really never performed a detailed test of the CUSP scheme. As far I remember it was a really quick implementation. And it looks to see that you know SU2 and you are ready to contribute … Would it be possible for you to create a pull request with the changes, including a test case? if it is a bug, your change will pay off immediately. Best,; Francisco. > On Jul 12, 2017, at 10:03 PM, SumanVajjala <notifications@github.com> wrote:; > ; > @hlkline <https://github.com/hlkline> Thank you for your reply. We have been using SU2 for over 2 years and only recently we started looking at the code to understand some of the issues we were facing. To clarify I did not report it as a bug. I do understand that the flow variables obtained by Riemann invariants (line 10433) are set as the primitive variables for the boundary point. But when it came to the flux calculation I saw Jacobian_j and that triggered my question. I know that each scheme has a ComputeResidual routine but for this specific case what routine is being used? Is it the one in numerics_template.cpp? And I still do not understand why Jacobian_j should play a role in the flux calculation! I will be glad if you can kindly comment on it.; > ; > Finally, can I now treat that this is a non-issue?; > ; > @fpalacios <https://github.com/fpalacios> @oleburghardt <https://github.com/oleburghardt> @hlkline <https://github.com/hlkline> By the way don't you think Nu_c in line no 729 in numerics_direct_mean.cpp should be Nu_c = (1.0-Beta)*LamdaNeg? This was the other probable bug I was referring to within SU2 found in CUSP implementation.; > ; > Regards; > Suman; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/issues/405#issuecomment-314971522>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AccuRkqESRvP7dcREH5t_PKPioRlkERhks5sNaUSgaJpZM4OKV38>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-315096146:768,variab,variables,768,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-315096146,2,['variab'],['variables']
Modifiability,"Thanks Tom, actually most of the work was already done in September, lately I've been busy with other stuff and that's why it took so long before this pull request. Regarding the upcoming release of the sliding meshes, before the AIAA, we can surely think about including this one too. ; It still has some limitations, for instance it doesn't work with periodic boundaries, though Antonio and I are working on it in separate branches, but I've tested it for a bunch of different flow configurations and it seems to be quite robust.; Basically, after this pull request the code will be able to carry out computations using an arbitrary number of zones, both Euler/RANS, serial/parallel, using the nearest neighbour approach and the one from Rinaldi. By the way, it doesn't really matter to me if this feature is included in the upcoming release or in the one later, I just would like to have this on the develop so that I don't have to merge and fix conflicts any time the branch gets updated.; So some of the modification I made will be stable and I can move to the next step (the adaptive sliding meshes).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/389#issuecomment-301007972:484,config,configurations,484,https://su2code.github.io,https://github.com/su2code/SU2/pull/389#issuecomment-301007972,2,"['adapt', 'config']","['adaptive', 'configurations']"
Modifiability,"Thanks Tom. And, as mentioned before, let’s have a bit of a discussion as to which wall functions formulations would make most sense to implement. I am pretty sure that we can create a generic implementation that can then be used for standard wall functions, but also for adaptive wall functions (see Medic, G., Kalitzin, G., et al., “Adaptive Wall Functions with Applications”, 2006), and even compressible/incompressible formulations. The adaptive wall function trick is quite useful as it makes the wall function implementation more robust to the varying y+ of the first cell of the surface of the geometry and lessens the burden during the grid generation stage. Formulations for S-A and k-w/SST are available. If anyone else is interested in participating, please let us know. Best,. Juan. On Jun 8, 2017, at 5:11 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi all,. Yes, it would be wonderful to get this feature completed. I had started this a couple of years ago, but never quite got around to finishing (too many fun things to work on!). I was following this paper, which should be a straightforward implementation for us, as FUN3D has a very similar structure:. Jan-Renee Carlson, Veer Vatsa, and Jeffery A. White. ""Node-Centered Wall Function Models for the Unstructured FLow Code Fun3D"", 22nd AIAA Computational Fluid Dynamics Conference, AIAA AVIATION Forum, AIAA 2015-2758, https://doi.org/10.2514/6.2015-2758. The key changes can be found in the following locations:. * CNSSolver::Compute_Wall_Functions_Mean() routine in solver_direct_mean.cpp - computes and stores an updated wall shear stress based on the chosen wall model; * CTurbSASolver::Compute_Wall_Functions() routine in solver_direct_turbulent.cpp - computes the eddy visc/nu tilde needed near the wall based on the model; * CNumerics::GetViscousProjFlux() in numerics_structure.cpp - computes the viscous flux between two nodes and will make an adjustment near the wall when th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-307262047:272,adapt,adaptive,272,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-307262047,3,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Modifiability,"Thanks Tom; I agree that we should make things easy to understand. ; My thinking was that most users will want to know what parts of the mesh they are moving, but don't necessarily need to know what's happening underneath - if they specify the entire mesh the code just reverts to the more efficient method. But (from the users perspective) it may be just as easy to have a separate specification for scaling the entire mesh. . In terms of moving it to SU2_MSH; I think it may make sense to include scale/rotate/translate in SU2_MSH, but I think it would be confusing to have two options that do the same thing. I would side with separate option names (this would also eliminate a loop over markers in this pull request). On this topic, I have sometimes found MARKER_DESIGNING and DV_MARKER to be confusing; on their own they sound very similar, in the description MARKER_DESIGNING is where the objective function is evaluated - but in the code, it's not clear what MARKER_DESIGNING does - the surfaces specified by MARKER_MONITORING are what are actually used to evaluate the objective function value. . There may be other similar areas where config file options could be clarified or compressed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-132181536:1144,config,config,1144,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-132181536,2,['config'],['config']
Modifiability,"Thanks a lot @talbring !! Yes, with LDFLAGS it worked, although I believe it's not failsafe because the order of elements in the link line usually has an effect. BTW, I got another error later in the build, this time due to libpython3.8.a not being added to the link line (I don't know why --in fact Meson says it found python 3.8 when configuring SU2). I'm rebuilding again, this time adding -lpython3.8 to LDFLAGS. I'm closing the issue because I believe it's solved 👍",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/867#issuecomment-584199364:336,config,configuring,336,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-584199364,1,['config'],['configuring']
Modifiability,"Thanks a lot @talbring !!. What would be the environment variable that Meson would honor for libraries? (LDFLAGS is for linker flags rather than libraries, and if the linker line puts the LDFLAGS before the object files, you'd get the libs before the objects, so a linker error). Maybe something like LIBS? However, looking at [the variables that the Meson docs say it supports](https://github.com/mesonbuild/meson/blob/8c1221b437b2930fa64d78517337293e8a0e079f/docs/markdown/Reference-tables.md#compiler-and-linker-flag-environment-variables), I don't see any LIBS-like variable...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/867#issuecomment-584151705:57,variab,variable,57,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-584151705,4,['variab'],"['variable', 'variables']"
Modifiability,"Thanks a lot for your feedback, we have updated the files. ; For the time being, just remove MG_CFL_REDUCTION= 0.9 in your config file.; Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/44#issuecomment-54904983:123,config,config,123,https://su2code.github.io,https://github.com/su2code/SU2/issues/44#issuecomment-54904983,2,['config'],['config']
Modifiability,"Thanks a lot for your support, @pcarruscag. . I run the other test cases this morning and I noticed there is a very small difference in the sensitivities around the 10th significant figure (in the order of the updates you made on the discrete adjoint airfoil case). Given that the order of magnitude of this difference remains consistent even when extending the simulation, I updated the test values. I leave here the [reference to the previous state](https://github.com/su2code/SU2/commit/654ba3dfc207e25c31da9c09860224ad4044a610) for our records. . If there are no comments against it in the next day or so, I will be merging in this PR next, as it just puts back some functionality that was removed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-543067888:348,extend,extending,348,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-543067888,1,['extend'],['extending']
Modifiability,"Thanks a lot on the comments so far @pcarruscag . Helps quite a bit 👍 ; I think I addressed all your comments by now (using AuxVarGrad, a bunch of openMP instructions, overhauling the FindUnique_RefNode func, making a struct for the streamwise periodic values and using that in Numerics and the solver, not using config as a solver var container, and some other things ); Feel encouraged to comment/request-changes on more things.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/773#issuecomment-788766954:313,config,config,313,https://su2code.github.io,https://github.com/su2code/SU2/pull/773#issuecomment-788766954,1,['config'],['config']
Modifiability,"Thanks a lot, @TobiKattmann, for this fix,. I was able to reproduce the error locally as well and the fix makes perfect sense to me. I've only added one small statement:; `config_container[iZone]->SetiInst(INST_0);`; to SU2_SOL in cases with single instance, to enforce that iInst = config->GetiInst() in CBaselineSolver::LoadRestart() receives the correct value. @economon as of now, I think there are no multizone-multiinstance cases available in develop. When that comes through, it would only require an extra loop on iInst and the correct setting of; `config_container[iZone]->SetiInst(iInst);`; in the very same fashion as it is done for harmonic balance (lines 357-380 in SU2_SOL.cpp). Then, inside the LoadRestart routine, the correct container position is read in line 3939 of solver_structure.cpp,; `unsigned short iInst = config->GetiInst();`; and used onwards. . I'll wait until the tests pass for this latest commit and then merge it in by Monday morning if there are no further comments.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/572#issuecomment-417633741:283,config,config,283,https://su2code.github.io,https://github.com/su2code/SU2/pull/572#issuecomment-417633741,2,['config'],['config']
Modifiability,"Thanks at all for being so responsive to this mishap. When I started contributing I learned that something like a 2-LGTM-rule was applying. But apparently it evolved to have someone merge a pull request if he or she can judge the content and feels comfortable with it, as the other approach ended up having a large list of unmerged pull requests **or** having two LGTM's of non-independent reviewers. @economon Maybe you can bring it up at the next meeting how we could address this little double bind?. So sorry again for the trouble (at least a revert of the very latest commit would not be too difficult). Still I'll wait if @pcarruscag and @talbring want to do now the way Tim suggested.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/667#issuecomment-480015080:158,evolve,evolved,158,https://su2code.github.io,https://github.com/su2code/SU2/pull/667#issuecomment-480015080,2,['evolve'],['evolved']
Modifiability,"Thanks for adding the description, Heather. I think this is a very nice contribution.. we’re working on the regressions and will pull this in once we have everything straightened out (and this branch passes). In the meantime, you got me thinking: the scale, rotate, translate options might be confusing now if a user doesn’t know whether to include the markers or not. Perhaps this is a chance for separating some of the “design” options from “mesh” options. One way I could see us do this is by moving the implementation I had just committed for the “volume” scale, rotate, and translate options over into the SU2_MSH executable, which might be a more logical home for it. However, this would require adding an extra set of config options for reading in a scale/rotate/translate options for SU2_MSH. The nice thing here is that we keep the intent separate, i.e., only design variables are listed with the other design variables while the mesh transformations are elsewhere. A different, possibly simpler way would be to just create separate names for these two types in the list of available options so that there is no ambiguity. Any thoughts?. On Aug 16, 2015, at 9:21 AM, Heather Kline <notifications@github.com<mailto:notifications@github.com>> wrote:. Some illustrative images/output in case my description was hard to understand:; [image]https://cloud.githubusercontent.com/assets/5167760/9294050/52a764b2-440f-11e5-8681-b68318da0ce7.png. SU2_DEF output when only ""airfoil"" marker included:. ------------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid. ----------------------- Volumetric grid deformation ---------------------; Performing the deformation of the volumetric grid. # FGMRES residual history. # Residual tolerance target = 4.14044e-11. # Initial residual norm = 15.8102. ```; 0 1; 50 2.17385e-06; 100 1.08998e-10; ```. # FGMRES final (true) residual:. # Iteration = 105: |res|/|res0| = 3.50764e-11. Non-linear iter.: 1/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-132065067:725,config,config,725,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-132065067,6,"['config', 'variab']","['config', 'variables']"
Modifiability,"Thanks for adding the small change to the config, David. Merging these changes in...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/218#issuecomment-166225189:42,config,config,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/218#issuecomment-166225189,1,['config'],['config']
Modifiability,"Thanks for all the questions on the shape optimization. It helps us make improvements to the code to make it easier to use. . You are correct in that the adjoint gradients determine the direction that the optimizer moves the design variables. But this direction can (and usually does) change during the optimization process as it explores different parts of the design space. So the design variables won't always move in the same direction. Sometimes the optimizer won't take the best step in the direction of descent. In this case, the objective function can increase. The optimizer will then try again in the same direction but with a different (usually smaller) step size. If it does achieve a reduction in the objective function, it will usually run the adjoints again to get an updated gradient direction. The objective + adjoint iterations are called major iterations and are what is output by the SLSQP algorithm. This process is more complicated when there are constraints involved. . So in summary, no it is not necessary (or likely) that the objective function will always decrease through an optimization process",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/984#issuecomment-628714360:232,variab,variables,232,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628714360,2,['variab'],['variables']
Modifiability,"Thanks for cleaning up the config template. As far as I can tell, the Dirichlet and Neumann boundary conditions (around line 650) are not implemented in SU2 (they exist as placeholders). If this is true, keeping them in the config_template would be misleading. . Leaving this as a comment since I don't know if those markers are useful in places I haven't seen (like outside of SU2_CFD). Can someone confirm?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/686#issuecomment-494926280:27,config,config,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/686#issuecomment-494926280,1,['config'],['config']
Modifiability,"Thanks for fixing these things and the attached pdf. The results look great ! . In case you have some parameters that you might want to have as an config option, feel free to add them or just let us know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257391503:147,config,config,147,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257391503,1,['config'],['config']
Modifiability,"Thanks for getting everything cleaned up, @ScottImlay. I really would like to get this merged soon, as I think it is a great contribution. My main concern remains the size of the files that are now included due to the boost library. The externals/tecio directory has increased in size from 3.6 MB to 172 MB, and 166 MB of that is boost. Perhaps we can consider downloading this code on-the-fly during the configure process, or have a script access it as a submodule similar to CoDiPack via preconfigure.py. Open to ideas here.. any thoughts?. Lastly, if we are shipping boost source, we should add their license to the distribution by including this file in externals/tecio/boost/ : https://www.boost.org/LICENSE_1_0.txt",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-426809515:405,config,configure,405,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-426809515,1,['config'],['configure']
Modifiability,"Thanks for merging Tim, but you did not solve correctly the conflict on parallel_regression.py. We do not test the external FSI coupling for now, so it has to be removed ;). Everything is up to date now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/357#issuecomment-272124052:128,coupling,coupling,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/357#issuecomment-272124052,1,['coupling'],['coupling']
Modifiability,"Thanks for sharing the progress on the container in #753 . You may already be going in this direction, but another idea to consider is making CVariable a pure data structure (basically a c-style struct with your new containers) with no methods. This could be interesting for 2 reasons: 1) we remove a level of indirection without the Getters/Setters and operate directly on the data, and 2) this breaks the current cycle we are stuck in where we need to add a new virtual function to the base class every time one of the child CVariable classes adds new data that it must access with Get()/Set(). . Adding new data to the child classes for each solver becomes trivial if it is just a data structure. A pure data structure and an object with polymorphism will always be at odds - we should choose the best for each situation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-518900363:741,polymorphi,polymorphism,741,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-518900363,1,['polymorphi'],['polymorphism']
Modifiability,"Thanks for the clarification clarkpede. One of the things I had tried when I first ran into that warning after looking at the code was to create a coarse grid with fewer than 1000 elements (just in case the sensor value was extremely large for a single element for some reason, then it should’ve at least marked that one for adaptation). However, it still output the same results and warning message. I’m not exactly sure how the adaptation index is calculated for the SUPERSONIC_SHOCK or GRAD_FLOW, but is it possible that these values could be negative, causing the sensor value to always be below the threshold value?. I haven’t been able to find any examples using the mesh adaptation, so I may be missing an additional parameter from the configuration file. Thanks for any additional help,; Alex",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-435625964:325,adapt,adaptation,325,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-435625964,4,"['adapt', 'config']","['adaptation', 'configuration']"
Modifiability,"Thanks for the clarification!. Best,; Francisco. > On Apr 22, 2017, at 5:01 PM, Heather Kline <notifications@github.com> wrote:; > ; > Thanks; > The discrete adjoint can also be used with combined objectives, and uses the same config specifications. It may not be clear from this pull request since this functionality was added in a previously - when multiple objectives (limited to objectives defined inside the CFD solver) are specified, they are added together (with specified weights) in the CFD solver into the 'COMBO' output to history. This variable is registered for the discrete adjoint solver.; > An example of this can be seen in the serial_regression_AD.py, test name 'discadj_multi_py'.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/385#issuecomment-296409557>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AEpklrJ5WQ8CoWJNAy_FVZ0bbYN000s2ks5rypTpgaJpZM4MgM_e>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-296409876:227,config,config,227,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-296409876,4,"['config', 'variab']","['config', 'variable']"
Modifiability,"Thanks for the contribution! This is a much needed change. I wanted to perform a refactoring like this myself. The viscous (or turbulent) stress calculation is repeated many times in the code. Changing that calculation (e.g. adding QCR or UQ) currently requires changing many files. In my humble opinion, the stress tensor calculation should have its own class at the lowest level of the code, like the gas model (e.g. ideal gas) or the viscosity calculation (e.g. Sutherland's law). `CNumerics` classes need access to it, and `CNumerics` is meant to have minimal dependencies. But the stress isn't really ""numerics."" Its part of the underlying equations we're trying to solve. Changing the stress tensor isn't the same flavor as changing from JST to Roe. Because the stress is part of the underlying equations, it is sometimes needed in the `CSolver` classes. Previously, I've seen the stress tensor used in `CNSSolver` boundary conditions and axisymmetric source terms. That may still be true in the current version of the code. The best way to make sure that both `CSolver` and `CNumerics` have access to it is to make it an independent class. Unless, of course, we want to be manually setting the six tensor elements in `CNumerics`, like we do with primitive variables. I don't like that alternative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-742531842:81,refactor,refactoring,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742531842,2,"['refactor', 'variab']","['refactoring', 'variables']"
Modifiability,"Thanks for the explanation @suargi . I would personally advocate for that the testcases should converge to some reasonable solution people might use it as a starting point (copy the cfg and doing mild adaptions) for their own stuff. And the Testcases show off the capabilities to some degree, to do so, convergence is beneficial. But as we have a bunch of working 2D airfoils in regression already I recon that adding a clear explanation and warning to the cfg as suggested by Pedro is fine. Otherwise you might try to bisect the AoA ... maybe there is a value that triggers negative SA and does not diverge :thinking: . Knowingly adding a diverging test without a clear warning is not good imo :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083:201,adapt,adaptions,201,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083,2,['adapt'],['adaptions']
Modifiability,"Thanks for the feedback @pcarruscag. @jayantmukho and I discussed this when we implemented the objective function. The main motivation was that since our implementation of the separation sensor is computed using the skin friction coefficient, we only defined the variables Buffet_Sensor, Buffet_Metric, etc. for the NSSolver class. Since the NSSolver needs to be able to evaluate all the same objectives as the EulerSolver, but the buffet objective is exclusive to the NSSolver, I copy pasted the function and added the new objective. Let me know if you have any suggestions for a cleaner implementation. We were basically choosing between defining all the Buffet_* variables in EulerSolver which would just add unnecessary variables to the constantly growing list of variables, or copying EvaluateObj_Func to allow for NS-specific objectives.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/614#issuecomment-441300657:263,variab,variables,263,https://su2code.github.io,https://github.com/su2code/SU2/pull/614#issuecomment-441300657,8,['variab'],['variables']
Modifiability,"Thanks for the fix! One more small request... can you please push this to our new 'develop' branch instead? We are switching up our branching strategy to make for a better experience, and will be using the develop branch for staging and testing before pushing code releases to the master. Also, Sean had mentioned that you have done some nice isothermal validations. If you are interested, we would be happy to make a regression test based on one of your test cases (to ensure that these features remain well-tested in SU2). If you provide a config/mesh, we can make the regression test for you very quickly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/71#issuecomment-56557046:542,config,config,542,https://su2code.github.io,https://github.com/su2code/SU2/pull/71#issuecomment-56557046,1,['config'],['config']
Modifiability,"Thanks for the fixes, Francisco. The continuous adjoint tests are now failing, but I am guessing that it is something simple with the changes to the config option. Can you please take a look when you have a moment?. Couldn't agree more about keeping an eye on the Python scripts. We'll chat about it this week at the developer meeting (we need regressions for the Python scripts). More on that to come.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244#issuecomment-191571633:149,config,config,149,https://su2code.github.io,https://github.com/su2code/SU2/pull/244#issuecomment-191571633,2,['config'],['config']
Modifiability,"Thanks for the heads up - I just noticed you merged today! Does that mean; if I download the fresh-out-of-the oven master, these problems will go; away? Cheers!. On 6 Dec 2017 18:55, ""David Thomas"" <notifications@github.com> wrote:. > As the error message says, it cannot find ""Python.h"". This is again; > related to the Python wrapper compilation. If you really don't need it, I; > suggest you to just disable it when configuring your build (remove; > --enable-PY_WRAPPER). If you need the Python wrapper and if your Python is; > not located in a standard location on your supercomputer, you will have to; > manually modify the SU2_PY/pySU2/Makefile.am and put the right paths for; > the Python include and Python libs (I think similarly to what you did for; > mpi4py, see above)... Again, everything should be improved after #424; > <https://github.com/su2code/SU2/pull/424> is merged.; >; > —; > You are receiving this because you modified the open/close state.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/447#issuecomment-349590138>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AQD-Esbg6axZxZB3ZUnHir1iqvyU8CUSks5s9mSrgaJpZM4Pm0yA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-349967348:419,config,configuring,419,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-349967348,1,['config'],['configuring']
Modifiability,"Thanks for the hint, just uploaded a screenshot of the mesh adaption!; Now I'm trying to run a simple 3D case, but unfortunately the amg.out fails during the first try (in the adap/ini folder):; ```; ## 16739 TRIANGLE(S) DISCARDED ; fefloa_Python2Mesh : 3d mesh on input ; fefloa_Python2Mesh : msh->NbrVer 14368 ; fefloa_Python2Mesh : msh->NbrTet 58189 ; fefloa_Python2Mesh : leaving with 14368 ver. 16740 tri. 0 edg. ; -- Maximal memory ; Maximum number of Points 53800000 ; Maximun number of Bnd Points 10760000; Maximum number of Triangles 21520000 ; Maximum number of Tetrahedra 295900000 ; Allocated Memory 50.105 Gb ; Physical Memory 62.729 Gb; bounding box x: -100 200 y: -150 150 z: -150 150 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN IN",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-623572280:60,adapt,adaption,60,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280,2,['adapt'],['adaption']
Modifiability,"Thanks for the note! Indeed, we are aware of this issue, and we are already testing a patch that fixes it. We should be pushing the fix any day to the master, and I’ll note it here/close the thread when that happens. > On Apr 23, 2015, at 5:40 AM, arrow206 notifications@github.com wrote:; > ; > I am using SU2 version 3.2.8. I have tried all the steady-state Euler and Navier-Stokes test cases and they worked fine. However, none of the demos for Rotating (NACA and CAradonna) are working. Both are diverging. I have decreased the Courant number from 4 to 2 and increased the number of implicit iterations. There is still divergence. In the cfg file, I removed all the variables related to the dynamic mesh motion nad put a freestream of 0.8. SU2 did not diverge. Is there a specific setting to put in the cfg file in order to get convergence for the Rotating test cases; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/issues/167.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/167#issuecomment-95671956:670,variab,variables,670,https://su2code.github.io,https://github.com/su2code/SU2/issues/167#issuecomment-95671956,1,['variab'],['variables']
Modifiability,"Thanks for the post. I think the issue is that ParMETIS support is enabled by default when building with '--enable-mpi' and so that option is not necessary (and may throw and error). Additionally, if the user does not enable MPI, ParMETIS will be disabled. Same for METIS. . If this is causing issues, we can remove them entirely from the set of configure options in order to avoid confusion.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/567#issuecomment-416808134:346,config,configure,346,https://su2code.github.io,https://github.com/su2code/SU2/issues/567#issuecomment-416808134,1,['config'],['configure']
Modifiability,"Thanks for the question; The RESTART_SOLUTION option determines only whether the CFD solution will restart from a provided solution file, not whether the optimizer will restart. ; To restart the optimizer process, this must be specified to the python script:; shape_optimization.py -r project.pkl -f config.cfg -n N; The options of all the python scripts can be viewed with a command like:; shape_optimization.py -h. So, to run an optimization process restarted from a previous optimization, and to have each individual simulation restart from previously converged CFD results you will need to BOTH specify RESTART_SOLUTION and the -r python option. To restart the optimizer but have each CFD simulation start from scratch, use the -r option and specify RESTART_SOLUTION=NO. . Restarting from a specified design (rather than the most recent design) is not currently provided as an option, but if you are willing to dig into things manually it may be possible via editing the project.pkl and results.pkl files. . In the future, please view our forum at http://www.cfd-online.com/Forums/su2/, you may find questions about configuration options etc that have already been answered, and a wider community will be able to respond.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/290#issuecomment-231421177:300,config,config,300,https://su2code.github.io,https://github.com/su2code/SU2/issues/290#issuecomment-231421177,2,['config'],"['config', 'configuration']"
Modifiability,"Thanks for the quick fix, Tim. . Kudos to Ruben and Heather for all of the exciting contributions packed in this pull request: this is the culmination of months of hard work on their sides, and the collaboration has been very fruitful (just count the commits!). The tests are passing now, but I have one small request before we merge everything. If you check out the details of the build in Travis CI, there are many warnings. Can you please clean these up? They are mostly unused variables and the like. Otherwise, things are looking pretty good to me...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/234#issuecomment-178807682:481,variab,variables,481,https://su2code.github.io,https://github.com/su2code/SU2/pull/234#issuecomment-178807682,1,['variab'],['variables']
Modifiability,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619502763:171,adapt,adaption,171,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763,7,['adapt'],"['adapt', 'adaption']"
Modifiability,"Thanks for the reviews guys. At the moment the optimization framework does not support the topology variables, there is a script in SU2_PY for this feature that runs a testcase with hardcoded parameters...; It is not an easy thing to run a tutorial for :/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/752#issuecomment-524374294:100,variab,variables,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/752#issuecomment-524374294,1,['variab'],['variables']
Modifiability,"Thanks for the suggestion. ; That looks like a great alternative, however it's not compatible with the reason that I ended up making the change - I'm working in an environment that uses ibrun rather than srun or mpirun, and so I needed to control the mpi launcher command as well as adding additional flags. We've also had input at other times from people who wanted to control whether mpirun or mpiexec was used, which is currently defaulted to mpirun. ; I think that this change should be compatible with your bypass - you can either keep using your custom SU2_RUN variable, or set:; SU2_MPI_COMMAND = ""mpirun -machinefile=[machinefile] -env I_MPI_DEVICE rdma"" (replacing mpirun with whichever command works on your system).; What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/335#issuecomment-263686438:567,variab,variable,567,https://su2code.github.io,https://github.com/su2code/SU2/pull/335#issuecomment-263686438,1,['variab'],['variable']
Modifiability,"Thanks for the tips so far! By any chance do you know which part of the configuration/path search that results in the line that says:; ```; Run-time dependency python3 found: YES 3.6; ```. I can't figure out why it picks up my environment 3.7 (which has the mpi4py installed) correctly, but then somehow pulls in 3.6! Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-752694678:72,config,configuration,72,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-752694678,1,['config'],['configuration']
Modifiability,"Thanks for this PR; I think it is critical since our main working clusters are disconnected from the web. ; Meson/ninja work like a charm but only on my web-connected laptop.; I believe that this is not a singular case. ; However, the PR that you have mentioned was already merged into develop branch, but from a fresh clone of develop I had 2 problems (at least):; 1. the configure script was missing (I have copied it from a previous version); 2. The make failed due to missing reference to CHeatSolverFVP.cpp which actually; doesn't exist. So some work is still needed here. I shall try to see also what I can find out",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-598386726:373,config,configure,373,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598386726,1,['config'],['configure']
Modifiability,"Thanks for this, Giulio, it looks like a nice implementation. And thank you for taking the time to clean up the original HLLC method a bit. It looks like you are basing the Jacobian terms on the Roe implementation (like we do in the ideal gas situation). Out of curiosity, will you be interested in having the Jacobians for the HLLC method directly?. Also, I noticed that there are some commented cout statements in the config post-processing (in the ideal gas condition check). Could you please remove those when you have a minute?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/209#issuecomment-152403831:420,config,config,420,https://su2code.github.io,https://github.com/su2code/SU2/pull/209#issuecomment-152403831,1,['config'],['config']
Modifiability,"Thanks for your comment, Ruben, ; this pull request was indeed also intended to open a discussion among developers regarding the proper nomenclature for interface markers and variables. This is just a preliminary step towards sliding meshes so this capabilities will remain hidden for a while since it is still under development. ; We'll have plenty of time to discuss how the Marker_fsi_interface tag should change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-256055685:175,variab,variables,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-256055685,1,['variab'],['variables']
Modifiability,"Thanks for your comments! Except for mixing plane and frozen rotor, sliding plane is also pretty common in turbomachinery simulation, it is indeed implemented in some, if not all, in-house codes. ; MRF is quite useful in turbomachinery simulation, expecially when we deal with transient simulation. Actually it is really rare to move the rotor mesh like in reality. One reason is that MRF is more efficient and accurate. Otherwise, you introduce new disturbance into the transient flow field every physical time step, which is not good. Because when you rotate the mesh, the velocity direction of each grid point inherited from last time step is not rotated. To make it more clear, you will have a flow going towards casing instead of parallel to, at the start of next physical time step. So you need more pseudo time steps to get a proper velocity variable. As a result, you get a zig-zag shape in the residual history.; I'm not actually moving the interface. The rotor mesh is not rotated, so as the interface at rotor zone. I'm just virtually rotating the rotor interface to find the new matching points between rotor and stator for each physical time step, so that the variable could be passed across the interface. In other words, only the passing variables are actually rotated. If I understand it correctly, there is no additional moving mesh restriction introduced here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1953783506:613,inherit,inherited,613,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1953783506,8,"['inherit', 'variab']","['inherited', 'variable', 'variables']"
Modifiability,"Thanks for your fast answers. We are definitely going to use SU2 here and I wanted to be sure that it is working correctly. We will look to use its inverse design capability too (provide Cp target) . I have tried the test case on the NACA 0012 but it did not work.; From your CFD forum, it seems it could be related to the scipy library used. I will look more to be sure if I am doing things correctly before making any note. Francois. From: Thomas D. Economon [mailto:notifications@github.com]; Sent: Thursday, April 23, 2015 2:01 PM; To: su2code/SU2; Cc: Fortin, Francois; Subject: Re: [SU2] arrrow206 (#167). Thanks for the note! Indeed, we are aware of this issue, and we are already testing a patch that fixes it. We should be pushing the fix any day to the master, and I’ll note it here/close the thread when that happens. > On Apr 23, 2015, at 5:40 AM, arrow206 <notifications@github.com<mailto:notifications@github.com>> wrote:; > ; > I am using SU2 version 3.2.8. I have tried all the steady-state Euler and Navier-Stokes test cases and they worked fine. However, none of the demos for Rotating (NACA and CAradonna) are working. Both are diverging. I have decreased the Courant number from 4 to 2 and increased the number of implicit iterations. There is still divergence. In the cfg file, I removed all the variables related to the dynamic mesh motion nad put a freestream of 0.8. SU2 did not diverge. Is there a specific setting to put in the cfg file in order to get convergence for the Rotating test cases; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/issues/167. —; Reply to this email directly or view it on GitHubhttps://github.com/su2code/SU2/issues/167#issuecomment-95671956.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/167#issuecomment-95679198:1317,variab,variables,1317,https://su2code.github.io,https://github.com/su2code/SU2/issues/167#issuecomment-95679198,1,['variab'],['variables']
Modifiability,"Thanks for your feedback! I agree, `OMP_NUM_THREADS` is better than having the number of threads in the constructor. I adapted `disc_adj_flow` and `disc_adj_fea` for MPI and added both to parallel AD and hybrid AD tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1472198978:119,adapt,adapted,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1472198978,2,['adapt'],['adapted']
Modifiability,"Thanks for your hints. Now I understand that:; a) In `CPhysicalGeometry::LoadSurfaceElements`, the process finds those global markers that have at least one element adjacent to the subdomain of the process, and assigns local IDs. The function is called in the constructor of `CPhysicalGeometry`.; b) The transfer of quantities from one MPI process to another is done with additional markers of type `SEND_RECEIVE`. They are created e.g. in `CPhysicalGeometry::SetSendReceive` => after the constructor has been called. I also saw that the problem of mapping local (non-`SEND_RECEIVE`) markers to some global identifiers can be (and is) solved by the `string` `config->GetMarker_All_TagBound(val_marker)`. And probably there is no point in assigning a global ID to each pair of communicating `SEND_RECEIVE` markers.; ; So there is no need for the local<->global mapping that I intended to implement. Instead I will just remove the two members of `CPhysicalGeometry` and what depends on it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1110#issuecomment-762234155:659,config,config,659,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110#issuecomment-762234155,1,['config'],['config']
Modifiability,"Thanks for your input, I think you make a good point. . The way I was thinking about it is that OBJECTIVE_FUNCTION would now serve the same purpose and have the same behavior across multiple methods - right now (in the current develop and master branch), OBJECTIVE_FUNCTION is used either when running SU2_CFD with the continuous or discrete adjoint method, and when running continuous_adjoint.py, while OPT_OBJECTIVE is used with shape_optimization.py.; Where this gets confusing is that shape_optimization.py automatically flips signs of certain objectives without ever informing the user that this is the case - right now the only way to find out that the sign is flipped is either to carefully read through the source code or run a case and figure it out from the results. ; This will get more confusing when adding in multiple objectives - I would like to at least move the sign change into the config file rather than hidden behind the scenes; however that does get dangerous as it will quietly change the optimization behavior for people who aren't aware of that modification.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-185479306:900,config,config,900,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-185479306,1,['config'],['config']
Modifiability,Thanks for your remarks. I already named the routines AD/FD to prepare for that. With an appropriate config option this also works then for the cont. adjoint. I'll try that first before merging.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/239#issuecomment-183855554:101,config,config,101,https://su2code.github.io,https://github.com/su2code/SU2/pull/239#issuecomment-183855554,1,['config'],['config']
Modifiability,"Thanks! I'll try and, if it works, then will change all config files to AOA",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/323#issuecomment-255648959:56,config,config,56,https://su2code.github.io,https://github.com/su2code/SU2/issues/323#issuecomment-255648959,1,['config'],['config']
Modifiability,"Thanks! Please feel free to add anything you consider to my PR. And… do not worry too much (or at all)... we are doing this for free and for fun! As you know, after a major release we always find this kind of small bugs. The big picture is that thanks to you we all enjoy an awesome multipoint optimization capability! Thanks!. Best,; Francisco. > On Mar 25, 2018, at 6:04 PM, Heather Kline <notifications@github.com> wrote:; > ; > @hlkline commented on this pull request.; > ; > In SU2_PY/SU2/eval/design.py <https://github.com/su2code/SU2/pull/519#discussion_r176962282>:; > ; > > @@ -364,7 +364,7 @@ def obj_df(dvs,config,state=None):; > # For multiple objectives are evaluated one-by-one rather than combined; > # MARKER_MONITORING should be updated to only include the marker for i_obj; > # For single objectives, multiple markers can be used ; > - config['MARKER_MONITORING'] = marker_monitored[i_obj]; > + if (n_obj>1): config['MARKER_MONITORING'] = marker_monitored[i_obj]; > @fpalacios <https://github.com/fpalacios> yes, I commented a bit too quickly; I do see the behavior that you mention. I think the line previously mentioned helps with getting the value of the objective but not the gradient.; > While I was testing this on my end I also noticed that there is an issue if you list the same objective multiple times (for example, if you wanted to weight the drag contribution from one surface more than another), where since it has the same key the previous dict entry is overwritten. Do you mind if I add an error catching that to your PR?; > ; > I am taking a look back through it but so far I think your solution will be good - and better to fix the performance in master now and worry about elegant improvements in the develop branch.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/519#discussion_r176962282>, or mute the thread <https://github.com/notifications/unsubscribe-auth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-376023020:618,config,config,618,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-376023020,3,['config'],['config']
Modifiability,"Thanks!; If there's a current branch already being used for fixing minor issues, I wouldn't mind throwing in a couple of fixes to address compiler warnings that have started accumulating (mostly unused or uninitialized variables) into whichever branch that is rather than starting a new branch just for compiler warnings.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/341#issuecomment-264956099:219,variab,variables,219,https://su2code.github.io,https://github.com/su2code/SU2/issues/341#issuecomment-264956099,1,['variab'],['variables']
Modifiability,"Thanks, @clarkpede, merging now. We can keep the extended convo going with issue #487.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/492#issuecomment-356504525:49,extend,extended,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/492#issuecomment-356504525,1,['extend'],['extended']
Modifiability,"Thanks, Edwin. I had originally toyed around with this too, but I thought using the system-specific versions would be most portable at first. However, for something this simple, I agree that we should just do it ourselves. I have reused your implementation with some minor modifications. Could you please just confirm that the code posted above is yours, you are ok with me adapting it, and that I can name you as an author at the top of the file (I have added you there)?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562#issuecomment-414092502:123,portab,portable,123,https://su2code.github.io,https://github.com/su2code/SU2/pull/562#issuecomment-414092502,4,"['adapt', 'portab']","['adapting', 'portable']"
Modifiability,"Thanks, I’ll take a look at that before the weekend,. Best,; Francisco. > On Mar 2, 2016, at 8:03 PM, Thomas D. Economon notifications@github.com wrote:; > ; > Thanks for the fixes, Francisco. The continuous adjoint tests are now failing, but I am guessing that it is something simple with the changes to the config option. Can you please take a look when you have a moment?; > ; > Couldn't agree more about keeping an eye on the Python scripts. We'll chat about it this week at the developer meeting (we need regressions for the Python scripts). More on that to come.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/pull/244#issuecomment-191571633.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244#issuecomment-191590831:309,config,config,309,https://su2code.github.io,https://github.com/su2code/SU2/pull/244#issuecomment-191590831,2,['config'],['config']
Modifiability,"Thanks, Tim. Adding flexibility to the FFD is a great contribution. I was just going through the changes and I have a couple of questions:; 1. I noticed that you have added AD as an option for computing the geometric sensitivity component (change in the surface location due to a delta change in the design variable) that multiplies the adjoint sensitivity. Is there a way to make this usable for the continuous adjoint too rather than using finite differencing? This assumes that the user has built the AD version, even though they use the continuous adjoint.; 2. On a related note (I think), is the finite differencing that is currently used for computing the geometric sensitivity the only roadblock to arbitrary FFD movements for the continuous adjoint?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/239#issuecomment-183462794:307,variab,variable,307,https://su2code.github.io,https://github.com/su2code/SU2/pull/239#issuecomment-183462794,2,['variab'],['variable']
Modifiability,"Thanks, that was very helpful. . I have another question related to this., Would you suggest keeping all the control points as design variables or should the number of design variables be very selective to ensure that correct optimization direction is achieved? I have 216 control points on my FFD box, I can reduce them if I put in some extra effort in indexing them. Is it worth it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/984#issuecomment-628725910:134,variab,variables,134,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628725910,2,['variab'],['variables']
Modifiability,"Thanks; The discrete adjoint can also be used with combined objectives, and uses the same config specifications. It may not be clear from this pull request since this functionality was added in a previously - when multiple objectives (limited to objectives defined inside the CFD solver) are specified, they are added together (with specified weights) in the CFD solver into the 'COMBO' output to history. This variable is registered for the discrete adjoint solver. ; An example of this can be seen in the serial_regression_AD.py, test name 'discadj_multi_py'.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-296409557:90,config,config,90,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-296409557,4,"['config', 'variab']","['config', 'variable']"
Modifiability,"That does not look like an MPI problem (yup automake + preconfigure.py is the legacy system). The probable problem there is that your OpenBLAS was not build with support for LAPACK functions (the undefined references in the error messages from the linker). If you are building OpenBLAS from source there is an option to provide LAPACK support (if I recall correctly, this is the default so I'm guessing you are using what the operating system provides).; The best solution is to get OpenBLAS with LAPACK support, alternatively:; - Install LAPACK for your operating system and below line 155 of meson.build add ```su2_deps += dependency('lapack')``` (this will use pkg config).; - Delete line 153 of meson.build, i.e. keep BLAS but disable LAPACK, this can either make what you are doing much slower, or have no difference at all...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721373702:668,config,config,668,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721373702,1,['config'],['config']
Modifiability,"That is a bit of a necessary evil, I would leave a warning in the config explaining exactly what you just did.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1067934368:66,config,config,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067934368,1,['config'],['config']
Modifiability,"That's a good point. Maybe this functionality would be better as an optional config flag rather than the default behavior.; Alternatively, there could be a post-processing script to concatenate history files given a set of files and information about what the restart-writing frequency was.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/99#issuecomment-103252237:77,config,config,77,https://su2code.github.io,https://github.com/su2code/SU2/issues/99#issuecomment-103252237,1,['config'],['config']
Modifiability,"The ""Why ignore turb_ke?"" comment originated in the refactoring effort of #1127 .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1551#issuecomment-1054499366:52,refactor,refactoring,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551#issuecomment-1054499366,1,['refactor'],['refactoring']
Modifiability,"The Config --. ```; DV_KIND= FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D; DV_MARKER= ( airfoil ); DV_PARAM= ( AIRFOIL, 1.0) ; ( AIRFOIL, 2.0) ; ( AIRFOIL, 3.0) ; ( AIRFOIL, 4.0) ; ( AIRFOIL, 5.0) ; ( AIRFOIL, 6.0) ; ( AIRFOIL, 7.0) ; ( AIRFOIL, 8.0) ; ( AIRFOIL, 9.0) ; ( AIRFOIL, 10.0) ; ( AIRFOIL, 11.0) ; ( AIRFOIL, 12.0) ; ( AIRFOIL, 13.0) ; ( AIRFOIL, 14.0) ; ( AIRFOIL, 15.0) ; ( AIRFOIL, 16.0) ; ( AIRFOIL, 17.0) ; ( AIRFOIL, 18.0) ; ( AIRFOIL, 1.0) ; ( AIRFOIL, 2.0) ; ( AIRFOIL, 3.0) ; ( AIRFOIL, 4.0) ; ( AIRFOIL, 5.0) ; ( AIRFOIL, 6.0) ; ( AIRFOIL, 7.0) ; ( AIRFOIL, 8.0) ; ( AIRFOIL, 9.0) ; ( AIRFOIL, 10.0) ; ( AIRFOIL, 11.0) ; ( AIRFOIL, 12.0) ; ( AIRFOIL, 13.0) ; ( AIRFOIL, 14.0) ; ( AIRFOIL, 15.0) ; ( AIRFOIL, 16.0) ; ( AIRFOIL, 17.0) ; ( AIRFOIL, 18.0) ; DV_VALUE= 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1; ```. From the Log -- . ```; FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 1 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 2 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 3 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 4 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 5 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 6 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 7 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 8 ); FFD 2D (camber) <-> airfoil ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/153:4,Config,Config,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/153,1,['Config'],['Config']
Modifiability,"The FluidDriver name was choose cause it is now used to run multi-zone simulation involving fluid zones only. There are no limitations to sliding meshes though however that's one way of coupling zones. Now, mixing plane simulations uses the fluidDriver too so I think we should stick with something general related to fluids.; Perhaps someone else has any idea of what the name should be?. Salvo,; actually it would be nice to move the mixing plane structure within the interpolator class in the future, maybe we can have a talk about that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-255677842:186,coupling,coupling,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-255677842,1,['coupling'],['coupling']
Modifiability,"The NACA 0012 test case (TestCases/rans/naca0012) does not converge with the provided config file if RESTART_SOL=NO, and the number of iterations is increased beyond 25. The test case should be updated to have a config file which converges ""out of the box""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/37:86,config,config,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/37,2,['config'],['config']
Modifiability,"The Near-Field BC (useful for Equivalent Area based optimizations) was using the old MPI with buffering, and conservative variables instead of primitive variables. The new version has been tested using the LM1021 configuration.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/69:122,variab,variables,122,https://su2code.github.io,https://github.com/su2code/SU2/pull/69,3,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"The SLSQP Python implementation is a good one. However, it is quite rigid and I have added some extra variables in the config file to control the scaling of the main objective function as well as push factors to work with complex constraints.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/421:102,variab,variables,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/421,2,"['config', 'variab']","['config', 'variables']"
Modifiability,"The SU2 version that is listed during the config process is incorrect. Output of ./configure --enable-mpi --prefix=/apps/intel-2020.2/impi-2020.2/su2-7.0.6/ CC=mpiicc CXX=mpiicpc CXXFLAGS=""-I/apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/mkl/include -g -O2 -std=c++11"". ```; -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.2.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /tmp/jhrogers/SU2-7.0.6; Install location: 	 /apps/intel-2020.2/impi-2020.2/su2-7.0.6; Version: 6.2.0; C++ Compiler: mpiicpc; C Compiler: mpiicc. ```. OS: CentOS 7.8; Compiler/MPI: Intel 2020/impi 2020; Version: ""7.0.6"" according to the tar ball",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1072:42,config,config,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/1072,3,"['Config', 'config']","['Configuration', 'config', 'configure']"
Modifiability,"The Travis config should probably be updated to use Miniconda, running tests with both a Python 2 and Python 3 environment. Could take some influence from https://github.com/mwaskom/seaborn/blob/master/.travis.yml",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-321431468:11,config,config,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-321431468,1,['config'],['config']
Modifiability,"The [description of SU2][1] says. >The primary applications are computational fluid dynamics and aerodynamic shape optimization, but has been extended to treat more general equations such as electrodynamics and chemically reacting flows. Are there any examples of how [SU2][2] ""has been extended to treat more general equations such as electrodynamics""?. [1]: https://github.com/su2code/SU2#su2-introduction; [2]: https://github.com/su2code/SU2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/655:142,extend,extended,142,https://su2code.github.io,https://github.com/su2code/SU2/issues/655,2,['extend'],['extended']
Modifiability,"The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback. Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; ```; #!/usr/bin/env python; ```; uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?. If it didn't build/install, you could go into extensions/AMGIO/su2io and run; ```; python3 setup.py build_ext && python3 setup.py install; ```; If it did build/install, try the command; ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619334494:318,variab,variables,318,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619334494,2,['variab'],['variables']
Modifiability,"The added lines are a combination of the explicit Euler in CHeatSolver and the implicit Euler in CScalarSolver. Do you consider this approach to be correct?. For the testcase `SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg`, explicit Euler for both flow and turbulence equations and CFL=0.1 converges from the restart solution. Some more details:; - `CHeatSolver` does something with `CVariable::Res_TruncError`, which is related to multigrid. Maybe additional adaptations are necessary here.; - `PrepareExplicitIteration` was copied from `PrepareImplicitIteration`, except for the computation of the matrix of the linear system. We can remove duplicate code here.; - `CompleteImplicitIteration` could be renamed as ""add `LinSysSol` to solution""; .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1435#issuecomment-966491089:464,adapt,adaptations,464,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435#issuecomment-966491089,1,['adapt'],['adaptations']
Modifiability,"The answer to that is very simple. Look in the data set that is present in the szplt file. The z-coordinate is not in there anymore and consequently Tecplot takes the next variable, the density in this case, as the z-coordinate. Consequently you git a picture like you showed. The same is true for the field solution. Also there the z-coordinate is not present in the szplt file and hence you get a rather funny picture when you attempt to visualize this in 3D. But 2D visualization works just fine. In contrast the z-coordinate is stored in the vtu files, because the standard requires that. Hence you can still visualize this in 3D. Could you try a truly 3D test case to see if that visualizes fine? If so, please let us know such that we can close this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1182#issuecomment-771407798:172,variab,variable,172,https://su2code.github.io,https://github.com/su2code/SU2/issues/1182#issuecomment-771407798,2,['variab'],['variable']
Modifiability,"The behavior can be seen in the backward facing step case, as shown in a snapshot below. As currently set up, `Roe_Dissipation` is equal to `f_d` from the original DDES paper. So `Roe_Dissipation` should:. + Go to 0 in attached boundary layers; + Go to 1 in regions with resolved turbulent fluctuations. Here's a comparison of the `Roe_Dissipation` before and after this PR:. ![viscosity_comparison](https://user-images.githubusercontent.com/13340225/45117324-e5f36600-b11a-11e8-8194-fac45dff0edf.png). Here's the same case, but zoomed in at the step:. ![viscosity_comparison_zoom](https://user-images.githubusercontent.com/13340225/45117474-5ac6a000-b11b-11e8-94ab-5bd203aa5845.png). With this PR, the model does indeed go to 0 near the walls and go to 1 in the highly unsteady (""LES"") region after the step.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/575#issuecomment-418860081:237,layers,layers,237,https://su2code.github.io,https://github.com/su2code/SU2/pull/575#issuecomment-418860081,1,['layers'],['layers']
Modifiability,"The canonical configuration file, 'config_template.cfg', is located in the source directory. It lists all of the commands and usually, at least for the configuration parameters I've been interested in, allowable values. Another good resource is the online discussion forum:. http://www.cfd-online.com/Forums/su2/. There is also the Github wiki for this project in the menu to the right >>>>>>. There is the source code. It was hard to write, so it might be hard to read, but the information is there. Finally, as an open source project, this is an area where you could contribute for fame & fortune. You could collect the information from the various sources into a coherent document.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/183#issuecomment-111755690:14,config,configuration,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/183#issuecomment-111755690,2,['config'],['configuration']
Modifiability,"The changes to SU2 are mostly minor. There are some adaptions regarding external functions, due to interface changes from CoDiPack 1 to CoDiPack 2. The `callPrimalFuncWithADType` is necessary for correct output handling. Passing the external function to it is the intended usage, therefore the encapsulation of the respective code block in a lambda expression. `callPrimalFuncWithADType` also takes care of the tape activity, which was previously spelled out in SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1903#issuecomment-1451814899:52,adapt,adaptions,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/1903#issuecomment-1451814899,1,['adapt'],['adaptions']
Modifiability,"The compressible primitive variables are T u v w P rho H, we output the limiters for T u v w P with the names:; LIMITER_DENSITY; LIMITER_MOMENTUM-X; LIMITER_MOMENTUM-Y; LIMITER_MOMENTUM-Z; LIMITER_ENERGY; Which would be ok if we were referring to the conservative variables. Also the limiter for temperature is not relevant for ideal gases as the state is derived from the enthalpy instead.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1025:27,variab,variables,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/1025,2,['variab'],['variables']
Modifiability,"The config and mesh files can be downloaded from https://seafile.rlp.net/d/bb0fbb16eb414263b642/ and more information on them is provided [above](https://github.com/su2code/SU2/issues/1414#issue-1036103020). . I ran the four cases in the current develop branch at 58cf2d4a3829e5a60c35eda2a788b1107338e850, configuring the build with `--buildtype=debug`. . **`SU2_CFD singlezone.cfg` in `issue_simplified/singlezone`** gives; ```; +------------------------------------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[k]| rms[w]| CL| CD| LinSolRes|; +------------------------------------------------------------------------------------------+; | 0| -3.131336| -3.358218| 2.356417| 0.021774| 45.825257| -2.955766|; ...; | 12377| -11.999782| -15.033189| -10.208063| 0.003434| 0.989679| -4.378694|; | 12378| -12.000141| -15.033858| -10.208411| 0.003434| 0.989679| -4.378353|. ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; ```. **`SU2_CFD multizone.cfg` in `issue_simplified/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+; | Outer_Iter| avg[bgs][0]| avg[bgs][1]|; +--------------------------------------+; | 0| -0.259741| -0.741089|; | 1| -1.224321| -2.240439|. ...; | 841| -0.356891| 0.285076|; | 842| -0.124937| 0.178422|. Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```. **`mpirun SU2_CFD mz-0.cfg` in `issue_complicated/singlezone`** with 24 MPI ranks (because it needs so many iterations) gives; ```; +----------------------------------------------------------------+; | Inner_Iter| Time(sec)| rms[Rho]| CL| CD|; +----------------------------------------------------------------+; | 0| 4.5727e-02| -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206:4,config,config,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206,2,['config'],"['config', 'configuring']"
Modifiability,"The config file is a start, but for a thorough investigation a full test case, i.e. including a grid, is preferable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533#issuecomment-388726367:4,config,config,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/533#issuecomment-388726367,1,['config'],['config']
Modifiability,"The configure looks good to me now. Did you do the test for the viscous ONERA M6? It would be good to know what the speed up is here. Anyway, if you can merge with the latest develop version, it can be merged in as far as I am concerned.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/543#issuecomment-416828129:4,config,configure,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/543#issuecomment-416828129,1,['config'],['configure']
Modifiability,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619412341:758,adapt,adaptation,758,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341,3,['adapt'],['adaptation']
Modifiability,"The current SU2 implementation checks if the array of variables contains the velocity and gives the index to the gradient calculator. You can give the gradient calculator the starting index and ending index as well.. So suppose you have an array of M variables, you could split it into 2 arrays, each containing a velocity vector, so array [0,..,N] and array [N+1,..,M], and you call greengauss twice.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2285#issuecomment-2130316902:54,variab,variables,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/2285#issuecomment-2130316902,2,['variab'],['variables']
Modifiability,"The current version of the HLLC solver (the one in the develop branch) computes the jacobians terms using Roe approach. The implementation I'm testing uses instead the direct formulation. This of course changes a lot the behaviour of the implicit scheme which now seems to be less robust, at least for this test case.; Today I made some tests and what I propose is to modify the config file in order to run a non-dimensional simulation with a CFL = 1.0. Would that be possible?; Tomorrow I will look again for bugs in my branch. Just another small question: I saw that in the for cycle at line 3674 of solver direct mean (of develop branch), in the part regarding the low mach number correction, vel_i_corr and vel_j_corr are declared as 3 element arrays. The code cycle over [iDim+1] for those arrays. Could this bring to a vector overflow in the 3D case?. Cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-182496475:379,config,config,379,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-182496475,1,['config'],['config']
Modifiability,"The default values for the marker options do not parse. It would be nice to add a ""NONE"" flag that can be parsed as not having any of that boundary type. . in config:; % Dirichlet boundary marker(s); % Type: MarkerOption Default: Marker_Dirichlet; MARKER_DIRICHLET= Marker_Dirichlet. error is:; Error in CMarkerDirichletRef::SetValue(): incorrect number of MARKER_DIRICHLET_ELEC parameters in the configuration file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/14:159,config,config,159,https://su2code.github.io,https://github.com/su2code/SU2/issues/14,2,['config'],"['config', 'configuration']"
Modifiability,"The developer who worked on it was @frx-wintermute in #1951 ; A lot of those packages are header-only, not compiled libraries, if you use different versions than the ones we use in our regression tests you have no guarantees that the code will work properly, and it seems you are mostly interested in stability.; If you want to make changes to the meson.build script to look for local versions of libraries like cgns, parmetis, etc. see e.g. https://github.com/su2code/SU2/discussions/2064; We also have examples like this:; ```; pastix_dep = dependency('pastix', required: false). if not pastix_dep.found(); pastix_root = get_option('pastix_root')+'/install'; scotch_root = get_option('scotch_root')+'/lib'; pastix_dep = declare_dependency(include_directories: pastix_root,; link_args: [ '-L../'+pastix_root, '-L../'+scotch_root,; '-lpastix', '-lscotch', '-lptscotch', '-lptscotcherr',; '-lm', '-lrt', '-lpthread']); endif; su2_deps += pastix_dep; ```; where we try to use pkg-config and fall back to specifying paths. I recommend using pkg-config whenever possible.; If either you or @frx-wintermute are interested in complementing the feature by adding an option to prefer system libraries (via pkg-config, no paths because 99.9% of users will not know what to do) instead of the versions shipped with SU2, please go ahead and open a PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1646018871:978,config,config,978,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1646018871,3,['config'],['config']
Modifiability,"The dimensional inconsistency comes from the multiplicity of the normal velocity eigenvalue and the manipulation Hirsch does with the corresponding eigenvectors in order to obtain a formulation that is valid for any normal vector. When you use the P matrix to form the characteristic variables, the dimensional inconsistency disappears again, as it should. Never looked at it this way. Thanks for clearing this up Francisco.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/423#issuecomment-322124810:284,variab,variables,284,https://su2code.github.io,https://github.com/su2code/SU2/issues/423#issuecomment-322124810,2,['variab'],['variables']
Modifiability,"The discrete adjoint may still run with the chosen objective, since that is entirely defined within the C++, but some additional steps may be needed to run your objective with the Python framework. First, I recommend that you verify in your primal solve that you can compute one of your chosen objectives such as ENTROPY_GENERATION, and that it appears in the history file, since this is a prerequisite for running shape optimization with the Python framework. You should be able to follow details of the old ENTROPY_GENERATION objective if you look in the COutputLegacy::SpecialOutput_Turbo() routine in the legacy output. Note that you may need to do some work to connect this for your particular problem, since as mentioned, the turbomachinery related features are currently being brought into line with the most recent version of the software, and the routine may not be called by default. Once you have your desired objectives being computed and printed to the history file, give the updateHistoryMap.py script a look so that you can update the fields that the python framework can handle. As for custom objectives, there is a variable within the fluid solvers named Total_Custom_ObjFunc that will be differentiated for you if you use it compute a custom expression within the solver class (you can do this in multiple places within the solver class, but make sure it is called). Same suggestions apply for making sure that you can compute the custom objective, it appears in the history file, and that the python script is updated to read that particular field during optimization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889#issuecomment-609959747:1132,variab,variable,1132,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-609959747,1,['variab'],['variable']
Modifiability,"The discrete adjoint solvers (all of them, with deforming or static grids) compute sensitivities with respect to displacing individual nodes, the only projection done on the surface sensitivities is onto the surface normal (my previous reply was incomplete).; But this is just for post processing, this manipulation still does not consider that moving a surface node (e.g. through an FFD variable) also moves internal nodes, due to the _design mesh deformation_ (as opposed to FSI deformation for example). The volume sensitivity projection of SU2_DOT_AD is the differentiation of SU2_DEF. For deforming grid cases this step is still required, the best way I can put it in words is that the results still depend on the initial / reference coordinates of the grid, if you move any point of the initial grid you change the results, as you change not only the deformed final position of the point, but also the way the mesh itself responds to the physical (e.g. FSI) surface displacements that it is subject to.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1017#issuecomment-640078507:388,variab,variable,388,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-640078507,1,['variab'],['variable']
Modifiability,"The doxygen at that link is very out of date, we no longer update it. ; I meant the doxygen at https://github.com/su2code/Documentation/tree/master/Doxygen; The file there will allow you to get the doxygen documentation for whichever version of the code you have on your computer, as it uses comments within the code to generate the documentation. The output where I clipped the above example is in >Modules > Description of the Configuration Options. . In reading the .cpp you have to do some searching, as the options are stored in a map in another file (option_structure.hpp). But in terms of those maps, yes, they do have all the options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/277#issuecomment-221539456:429,Config,Configuration,429,https://su2code.github.io,https://github.com/su2code/SU2/issues/277#issuecomment-221539456,1,['Config'],['Configuration']
Modifiability,The dummy layer is what we used before version 7 and moved away from it for simplicity.; Two layers doesn't sound possible for unstructured meshes.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2038#issuecomment-1557818415:93,layers,layers,93,https://su2code.github.io,https://github.com/su2code/SU2/pull/2038#issuecomment-1557818415,2,['layers'],['layers']
Modifiability,"The enum options (for example in the config file) should be of their type, not just as unsigned short.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/34:37,config,config,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/34,1,['config'],['config']
Modifiability,"The equations previously did not match the paper by Travin et al, and; are corrected in this commit. ## Proposed Changes; The hybrid upwind/central blending introduced for DES has the option to use the blending by Travin _et al._ (2002). It's referred to as the ""NTS adaptive"" blending or the ""NTS"" blending for short, and was labeled as a ""low dissipation function"". But the what's implemented in the code doesn't match the paper, and it doesn't even make sense. You can compare the code to the paper by Travin _et al.__ at: https://doi.org/10.1007/0-306-48383-1_16 or the related AIAA presentation at: https://arc.aiaa.org/doi/pdf/10.2514/6.2001-879. There's multiple issues that I believe are present:. + There's an extra square root in the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532:267,adapt,adaptive,267,https://su2code.github.io,https://github.com/su2code/SU2/pull/532,1,['adapt'],['adaptive']
Modifiability,"The filename of the Paraview multiblock is set to the case name / config filename:. https://github.com/su2code/SU2/blob/b1e7e7bb7229152f26e5035c0eae70804fee5ca2/SU2_CFD/src/output/COutput.cpp#L562. For all other volume outputs, the filename is specified with 'VOLUME_FILENAME' in the config file. See e.g. the Paraview XML filename:. https://github.com/su2code/SU2/blob/b1e7e7bb7229152f26e5035c0eae70804fee5ca2/SU2_CFD/src/output/COutput.cpp#L508. This is counter-intuitive and the user is not able to change the multiblock filename in the config file. Is there a reason behind this or can we align that by using the volume filename for multiblock as well?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1928:66,config,config,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/1928,3,['config'],['config']
Modifiability,"The fix is not as simple, using the strategy from #1631 makes it worse.; Intersection with symmetry/euler look ok, so the best is to extend the domain...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1639#issuecomment-1132302976:133,extend,extend,133,https://su2code.github.io,https://github.com/su2code/SU2/issues/1639#issuecomment-1132302976,2,['extend'],['extend']
Modifiability,The important group to keep together is the solution the rest doesn't really matter.; We should change the restart functions to look for variable names instead of relying on the assumed position.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1985#issuecomment-1484008699:137,variab,variable,137,https://su2code.github.io,https://github.com/su2code/SU2/pull/1985#issuecomment-1484008699,1,['variab'],['variable']
Modifiability,"The incompressible solver does not accept the TIME_AVERAGE output field:. ` Info: Ignoring the following volume output fields/groups:` ; ` TIME_AVERAGE` ; ` Volume output fields: COORDINATES, SOLUTION, PRIMITIVE, RESIDUAL, VORTEX_IDENTIFICATION, MPI, MESH_QUALITY` . whereas the compressible solver accepts the field and prints mean volume variables:. `Volume output fields: COORDINATES, SOLUTION, PRIMITIVE, RESIDUAL, VORTEX_IDENTIFICATION, MPI, MESH_QUALITY, TIME_AVERAGE`. **Desktop:**; - OS: Linux (CentOS 7.9); - C++ compiler and version: g++ (GCC) 12.1; - MPI implementation and version: OpenMPI 4.1.4; - SU2 Version: v7.5.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2044:340,variab,variables,340,https://su2code.github.io,https://github.com/su2code/SU2/issues/2044,1,['variab'],['variables']
Modifiability,"The jones_turbocharger_restart case was set to use adaptive CFL coupled with CFL turbulence Reduction thus changes in the results are expected , I ran the case a few thousand steps and the case seems to converge. Therefore I am allowing myself to change test results leaving the configuration setting as is.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2185970973:51,adapt,adaptive,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2185970973,2,"['adapt', 'config']","['adaptive', 'configuration']"
Modifiability,"The motivation of having it as the default was to make the code as user-friendly as possible (fewer knobs exposed in the config), but options are good of course. I would propose then that we add an option for the reconstruction gradient, something like:; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; to let users decide if they want a separate option for the reconstruction gradients. If it does not appear, then the default is to use the same method as defined by NUM_METHOD_GRAD without a second gradient computation (basically what we have now). The nice thing about that is we can even try out other combos such as WLS+GG for the two different gradients. I will throw an error if users try to use LSQ for the viscous/source gradients, to avoid accuracy issues. What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-533259202:121,config,config,121,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-533259202,2,['config'],['config']
Modifiability,"The native mesh adaption was deprecated. The amg interface is in development, you can re-open some of the issues where it is mentioned to ask new questions (that way all ""documentation"" stays in one place).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143#issuecomment-751685783:16,adapt,adaption,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143#issuecomment-751685783,1,['adapt'],['adaption']
Modifiability,"The objective functions SURFACE_STATIC_PRESSURE and SURFACE_TOTAL_PRESSURE do not work with the shape_optimization.py script. . This has been verified by running the python optimization using the test case ""multiobjective_wedge"" in the optimization_euler test case folder, using the provided script (""inv_wedge_ROE_multiobj.cfg""). I get the following error: . >Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 98, in main; options.nzones ); File ""/usr/local/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/usr/local/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'SURFACE_TOTAL_PRESSURE'. The same happens if setting these keywords for the constraints. My environment:. OpenSuse Leap 15.1; Python 3.6.10; gcc 7.5.0; OpenMPI 1.10.7; SU2 v7.0.6",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1075:658,config,config,658,https://su2code.github.io,https://github.com/su2code/SU2/issues/1075,1,['config'],['config']
Modifiability,"The objective of this pull request is to clarify the name of some parameters. I found that:; 1. LIMITER_COEFF was confusing because: A) it is a parameters linked only to the Venkat's limiter B) Venkat's original and Wang's version use the same parameter but with different value! (0.5 vs. 0.05); 2. I found AD_COEFF_FLOW very confusing too: A) You can think that AD stands for Automatic Differentiation B) AD is too convoluted... it is just JST!; 3. REF_ELEM_LENGTH is mainly linked to Venkat's limiter... and a constant value is recommended (0.1 or 5.0 depending on the units). In the method REF_ELEM_LENGTH is multiplied by LIMITER_COEFF... so why two parameters to define a single constant (EPS)?... too many options for the user... The current config file to define the limiters or the pressure sensor is as follow:. % ----------- SLOPE LIMITER AND DISSIPATION SENSOR DEFINITION -----------------%; %; % Coefficient for the Venkat's limiter (upwind scheme). A larger values decrease; % the extent of limiting, values approaching zero cause; % lower-order approximation to the solution (0.05 by default); VENKAT_LIMITER_COEFF= 0.05; %; % 1st, 2nd and 4th order artificial dissipation coefficients for; % the JST ( 0.15, 0.5, 0.02 by default ); JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ); %; % Coefficient for the adjoint sharp edges limiter (3.0 by default).; ADJ_SHARP_LIMITER_COEFF= 3.0; %; % 1st, 2nd, and 4th order artificial dissipation coefficients for; % the adjoint JST method ( 0.15, 0.5, 0.02 by default ); ADJ_JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ). This config file is much more clear for people that are not familiar with SU2. Best,; Jonathan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/451:748,config,config,748,https://su2code.github.io,https://github.com/su2code/SU2/pull/451,2,['config'],['config']
Modifiability,The openblas_config line looks exactly like mine...; Are there any lapack-???.pc files in your system?; If you run `pkg-config openblas --version` is the output 0.3.8 ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631996848:120,config,config,120,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631996848,1,['config'],['config']
Modifiability,The order on which the variables were being written in the restart file was wrong. This issue only appeared when limiters and/or residuals were written. This pull request fixes the issue by reorganizing the variable location when writing limiters and/or residuals.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/397:23,variab,variables,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/397,2,['variab'],"['variable', 'variables']"
Modifiability,"The preconfigure in the root of the repo, use the develop branch.; Does your system use pkg config for modules?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645646835:92,config,config,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645646835,1,['config'],['config']
Modifiability,The problem is that the path where automake looks for mpi4py is hardcoded at the moment. This will also eventually be changed soon. . A workaround is to add the path manually in `SU2_PY/pySU2/Makefile.am` to the `MPI4PY_INCLUDE` variable. Then run `automake` in the main folder and then the preconfigure script again.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-333100920:229,variab,variable,229,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-333100920,1,['variab'],['variable']
Modifiability,"The problem that caused Travis to fail is related to a broader issue:; There are several configuration parameters that have a default value (like REYNOLDS_LENGTH =1.0 by default). This means that it is legitimate not to include these parameters in the cfg file.; However, the Python environment is oblivious to these defaults values: if a parameter is missing in the cfg file, then it is not a member of the Python list config. I think it is more consistent to set the default values also in the Python environment. I shall be happy to create such a pull request. However, before I do that I'd like to check if this has not been set intentionally, for a logic that escapes me. ; I shall appreciate a comment about that.; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-376941826:89,config,configuration,89,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-376941826,2,['config'],"['config', 'configuration']"
Modifiability,"The routine you are looking for is probably this one:. `void CPhysicalGeometry::SetGridVelocity(CConfig *config, unsigned long iter)` geometry_structure.cpp:14760 (cannot paste a link, the file is too big)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766#issuecomment-524363232:105,config,config,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/766#issuecomment-524363232,1,['config'],['config']
Modifiability,"The same configurations are used to compile; ./configure CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/local/mpi3-dynamic/bin/mpicc --with-cxx=/usr/local/mpi3-dynamic/bin/mpicxx ; CGNS flag is no need to enable since the new version has already taken care of it. . A couple of issues when ran the quicktest,; 1. segmentation fault after the Begin Solver. ; 2. when using multi-cores, got multi-thread outputs. Must be something wrong with the mpi. . Does anybody else have a similar issue? Or it is just my problem. . Thanks,; Paul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/303:9,config,configurations,9,https://su2code.github.io,https://github.com/su2code/SU2/issues/303,2,['config'],"['configurations', 'configure']"
Modifiability,"The shape_optimization.py script fails when setting `OPT_OBJECTIVE= TOTAL_HEATFLUX `.; The name of the variables have apparently been changed, but this change is not reflected in files _SU2_CFD/src/output/CFlowCompOutput.cpp_ and _SU2_CFD/src/output/CFlowIncOutput.cpp_. In those files, replacing all instances of `""HEATFLUX""` with `""TOTAL_HEATFLUX""` solves the problem. ; For reference, I also run the script SU2/SU2_PY/updateHistoryMap.py after recompiling, but I am not sure if this is needed. **Desktop (please complete the following information):**; - OS: Linux (Red Hat 7.6); - C++ compiler and version: g++ 8.3.0; - MPI: mvapich 2.3.1; - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/946:103,variab,variables,103,https://su2code.github.io,https://github.com/su2code/SU2/issues/946,1,['variab'],['variables']
Modifiability,"The solver with the closest functionality to what you are trying to do is the elasticity solver, it may be worth having a look there. But in a nutshell there the variables we want to differentiate are held by (members of) the discrete adjoint solver, they are reset before being registered as inputs to clear the derivative information, and it is important that they are left alone during the recording phase.; You will see that the adjoint iteration class for this solver then needs to update the numerics classes (in SetDependencies), at least for the source term the SA coefficients are set in the constructor of the corresponding numerics so maybe this step is missing?; The key point is that whenever a coefficient is used you need to be able to trace its value back to the original variable you registered.; Also the derivatives should be extracted in the same order they were registered, and you cannot access them multiple times by calling ""GetDerivative"" on them repeatedly (not 100% sure if this restriction still exists after the update of CoDi).; If none of this makes sense point me to branch you are working on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-491910935:162,variab,variables,162,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-491910935,4,['variab'],"['variable', 'variables']"
Modifiability,"The source term is being computed, but it is zero because the momentum is; zero.; If run a few iterations with MACH > 0 and then restart the simulation; putting it back to 0 are the results ok?. javsu <notifications@github.com> escreveu no dia sexta, 22/05/2020 à(s); 14:01:. > I tried to give a non-zero Mach Number in config file and it succeed. I; > obtained a rotary solution. However, giving a non-zero Mach Number would; > mean it is not hover anymore. Is there anyway to initialize this problem; > without given any forward speed ?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/997#issuecomment-632678700>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN3CDDHXXHNYCNHJLDLRSZZSLANCNFSM4NHBR7DQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-632683533:320,config,config,320,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-632683533,1,['config'],['config']
Modifiability,The standard way should use pkg-config. I see that pastix and BLAS both provide the required files. Should be quite easy actually to add them.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-525694678:32,config,config,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-525694678,1,['config'],['config']
Modifiability,"The vtm file and the folder where the data is stored are now called like the config file (called ""case name""). Futhermore the files inside of the folder are organized like the data. That means after a successful run, the working directory looks like that (omitting history files):; ```; ├── cht_2d_3cylinders; │   ├── zone_0; │   │   ├── cylinder_outer1.vtu; │   │   ├── cylinder_outer2.vtu; │   │   ├── cylinder_outer3.vtu; │   │   ├── farfield.vtu; │   │   └── Internal.vtu; │   ├── zone_1; │   │   ├── core1.vtu; │   │   ├── cylinder_inner1.vtu; │   │   └── Internal.vtu; │   ├── zone_2; │   │   ├── core2.vtu; │   │   ├── cylinder_inner2.vtu; │   │   └── Internal.vtu; │   └── zone_3; │   ├── core3.vtu; │   ├── cylinder_inner3.vtu; │   └── Internal.vtu; ├── cht_2d_3cylinders.cfg; ├── cht_2d_3cylinders.vtm; ├── solid_cylinder1.cfg; ├── solid_cylinder2.cfg; └── solid_cylinder3.cfg. ```. And the structure in Paraview:. ![cht_example](https://user-images.githubusercontent.com/4933860/71916713-d6f14d80-317e-11ea-9b78-8592d633a067.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/845#issuecomment-571701938:77,config,config,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/845#issuecomment-571701938,1,['config'],['config']
Modifiability,"The word ""numerics"" applies to most of what SU2 does including time integration. For this reason, a class called CNumerics that only relates to spatial discretization is confusing. . Considering the routines which inherit from this parent class (CUpwRoe_Flow, CAvgGradCorrected_Flow, etc.), I suggest as a new name CSpatialSchemes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/81:214,inherit,inherit,214,https://su2code.github.io,https://github.com/su2code/SU2/issues/81,1,['inherit'],['inherit']
Modifiability,"There are certainly parameters in the config, and if you had posted yours I could give advice without having to write a bloody essay on all of them. DEFORM_STIFFNESS_TYPE= WALL_DISTANCE // always; DEFORM_COEFF= ""nu"" // the Poisson ratio, default 1E6, you can also try a small value 0.2-0.3; DEFORM_LIMIT= ""R"" // clamps domain points with wall distance greater than ""R"", this improves the condition of the stiffness matrix, which makes it easier for the linear solver to converge.; DEFORM_CONSOLE_OUTPUT= YES // so you can see if the linear solver converges; DEFORM_NONLINEAR_ITER= 1 // always; DEFORM_LINEAR_SOLVER = FGMRES // or CONJUGATE_GRADIENT if memory becomes a problem, i.e. if GMRES does not converge in 100-200 iterations.; DEFORM_LINEAR_SOLVER_PREC = ILU // always, always, never anything else.; DEFORM_LINEAR_SOLVER_ERROR= 1e-9 // at least, I usually set it to 1e-10; DEFORM_LINEAR_SOLVER_ITER= 200 // or a much larger number when using CG since its memory usage does not depend on number of iterations",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1026#issuecomment-645265175:38,config,config,38,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026#issuecomment-645265175,1,['config'],['config']
Modifiability,There are other boundary-variable combinations where the gradients are known and can be enforced.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2285#issuecomment-2450118831:25,variab,variable,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/2285#issuecomment-2450118831,1,['variab'],['variable']
Modifiability,"There are some tricks possible to add the `<<` operator. Not all the code base needs refactoring. We can have both styles for the future as `()` syntax is very powerful thanks to fmtlib. . ```cpp; cout << ""Values at node<< nodeId << "" are "" << val[0] << "" "" << val[1] << "" "" << val[3] << endl;; ```. can be transformed directly to . ```cpp; LOG(""Values at node {} are {}"",nodeId,val);; ```. Equivalently . ```cpp; LOG << fmt::format(""Values at node {} are {}"",nodeId,val); ; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991#issuecomment-1488340098:85,refactor,refactoring,85,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991#issuecomment-1488340098,1,['refactor'],['refactoring']
Modifiability,"There are two sources for those, `atomicAdd` which is used in dot products with CSysVectors (so it affects the linear solvers). And in the NK solver to compute the norm of the solution.; The other less obvious source is SU2_OMP_CRITICAL, critical sections do not have a guaranteed ordering. We use these to compute the RMS residuals, and those influence the CFL adaptation.; AFAIK the only way around this is to store the result of each thread into a vector visible by all threads, and then have a single thread compute the total.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2340842669:362,adapt,adaptation,362,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2340842669,1,['adapt'],['adaptation']
Modifiability,"There is a lot of boilerplate code in the code base for screen output like. ```cpp; if (rank == MASTER_NODE) {; cout << ""My Message"" << endl;; }; ```; This is not a good example from many points of view. From performance-wise overly used `std::endl` is a killer. If one needs to redirect output to file it is additional loss etc. ; From the user's perspective, it is not possible to set the logging level. At least a three-level logging would be nice (INFO/WARNING/DEBUG) this also makes life easier for developers too. It is also nice to have a rotating log file if one runs longer cases on the HPC systems. After a while the log files getting so bloating . **Describe the solution you'd like**. A configurable logger would be better with defaults not changing the current system. ```text; % LOGGING LOCATIONS default is SCREEN; LOG= (SCREEN, FILE); % Default is SU2.log; LOG_FILE = ""myLog.log""; % Logging level INFO/DEBUG ; LOG_LEVEL = ""DEBUG"" ; ```; In the code . For general messages ; ```cpp; INFO << ""My useful information"";; DEBUG << ""Operation done in "" << time << "" seconds"";; ```. There is also a lot of `--------------- Start Solver ----------` type headers in the code we can automate this as . ```cpp; HEADER << ""Start Solver""; ; ```. **Describe alternatives you've considered**. A proper choice of logging library is required. Alternatives I considered: . [AixLog](https://github.com/badaix/aixlog). - Header only; - Vanilla C++11, no dependencies; - Uses `<<` operator; - MIT licence. [spdlog](https://github.com/gabime/spdlog); - Header only/compiled; - C++11; - Uses LOG("""") syntax ; - More users/mature project ; - MIT licence. [easylogging](https://github.com/amrayn/easyloggingpp); - Header only; - C++11; - Uses `<<` operator; - MIT licence . [glog](https://github.com/google/glog); - C++14 required the codebase must be bumped (may not be worth it); - Uses `<<` operator ; - Google Licence (IDK if it comp. with GPL). I am in favor of spdlog library . **Additional context**; *Ad",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991:699,config,configurable,699,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991,1,['config'],['configurable']
Modifiability,There is a problem with the finite_difference.py script. The step size is currently taken from the REF_LENGTH_MOMENT config option. See . https://github.com/su2code/SU2/blob/develop/SU2_PY/SU2/eval/gradients.py#L470. I don't think that this was intentionally done. @fpalacios it looks like it was introduced with one of your commits (https://github.com/su2code/SU2/commit/90ab5347fc3071d44c0e9c2010a9faeacca0abc4),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/367:117,config,config,117,https://su2code.github.io,https://github.com/su2code/SU2/issues/367,1,['config'],['config']
Modifiability,"There is already a lot of nice work here in identifying the meaningful differences between different SA variants and reducing code duplication, so let's checkpoint this into develop before some other changes are made to turbulence models.; The alternative way to specify corrections/variants in the config can be done in a different PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1413#issuecomment-1053528343:299,config,config,299,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413#issuecomment-1053528343,1,['config'],['config']
Modifiability,"There is currently an option to control the name of the restart and solution files in config files (see below). That seems to be what you are describing, but did you mean that you want the intermediate restart files (the ones that are written every WRT_SOL_FREQ iterations) to have a third, distinct name? Or something else?. % Restart flow input file; SOLUTION_FLOW_FILENAME= solution_flow.dat; % Output file restart flow; RESTART_FLOW_FILENAME= restart_flow.dat",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/17#issuecomment-29596043:86,config,config,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/17#issuecomment-29596043,1,['config'],['config']
Modifiability,"There is no conflict because both here and there the files were moved, to SU2_FSI and FSI_tools respectively.; What there is now is a massive amount of duplication, if you and Nicola want to try and fix that, it would be the ideal outcome for SU2. I made the final changes Tom and I had requested on this PR because it did not seem like this was going anywhere... But if you are still working on it, well do what you think is best, I don't have time to figure out how to get rid of the duplication. ""develop"" needs to work as a staging area, if you have a chunk of work that can be merged, without breaking compilation, testcases, or interfering too much with the work of other folks, then it should be merged ASAP to avoid this kind of situation.; For example refactoring this ""FSIInterface.py"" file into direct and adjoint should have possibly been a PR by itself to set the stage for the rest. Anyway, regarding the initial proposed changes this looks good to me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/902#issuecomment-743422907:761,refactor,refactoring,761,https://su2code.github.io,https://github.com/su2code/SU2/pull/902#issuecomment-743422907,1,['refactor'],['refactoring']
Modifiability,"There is one case that has different residuals, the Jones turbocharger case. The other case is a know problem that is fixed in another PR. ; So you should check if this case uses adaptive CFL and CFL_REDUCTION_TURB, because that is when the residuals could be different. Please also check if it still converges, because it looks like it 's not. So maybe it needs another CFL number?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2181198847:179,adapt,adaptive,179,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2181198847,1,['adapt'],['adaptive']
Modifiability,"There is one thing that is not mentioned yet, which is rather important. I assume we are talking RANS here. In that case it does not make sense to ramp up the CFL number to values higher than 50 or so with the current segregated setup of mean flow, turbulence and possibly transition solvers (not even talking about multidisciplinary problems). The segregated character makes it extremely flexible for adding additional models, but it does not work for a full blown Newton solver. In that case you have to switch to a strong coupling between the mean flow and the turbulence solver, which will require a significant change in the data-structures. Also, computing the exact Jacobians for a second order scheme is not trivial and as Tom mentioned, it may be needed to use AD tools for that, which makes it quite costly. Furthermore the memory usage for storing the exact Jacobians is very big. An alternative would be to use a matrix free approach, i.e. use a Frechet derivative for the matrix vector products in the Krylov solver (although you still need a good preconditioner). When a coupled with a turbulence model (especially k-omega type models), this will be extremely sensitive to the epsilon parameter you have to choose. There are ways around this, e.g. using dual numbers and possibly with CoDiPack, but these will increase your computational cost by at least a factor of 4. I think it is definitely worth trying, but seen all the pitfalls you may run into, you may want to test things out first with a test solver before implementing it in SU2 itself. My two cents,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460908007:389,flexible,flexible,389,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460908007,2,"['coupling', 'flexible']","['coupling', 'flexible']"
Modifiability,"There is only one efficient way to move data between memory and registers, via `load` and `store` instructions (they do come in multiple flavors). That is, pointing to a memory location and reading or writing N elements of contiguous data.; It is not the only way, it is also possible to `gather` and `scatter` data. That is populating the register from non-contiguous locations and vice versa. This is about one order of magnitude slower, to the point where if the computations are very simple it may not pay-off to vectorize. **Relation with algorithms**; Some form of `gather` and `scatter` is required in unstructured CFD, which means SIMD has a price of admission. Some thought needs to go into designing algorithms that amortize that cost by maximizing the so called FLOP/Byte ratio, and mask the latency of those operations by being able to start computing as soon as the first element of data is available. **What elements should we try to process simultaneously?**; The choice is between multiple geometric primitives (edges/points) or multiple solution primitives (variables). The latter sounds like a sensible idea until we get to areas of the code where different primitives require different treatment, that and the fact that the number of variables might not fit evenly in the number of lanes can lead to very tricky and non-generic code. Nevertheless if the same code were to be applied to e.g. 4 solution variables, this strategy would likely perform better as it avoids the pesky gather/scatter operations.; Processing multiple geometric primitives can make full utilization of whatever register size (important on GPU's), the code is just as readable (as I hope to show), but gather/scatter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:2204,variab,variables,2204,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['variab'],['variables']
Modifiability,"There seems to potentially be a bug with doing an unsteady dual-timestepping simulation without a provided initial condition (restart file):. When no restart file is provided, the first inner iterations have Time_Iter=0 and Cur_Time=0 (the state **before** these inner iterations). After completion of this time iteration, a file `flow_00000.vtu` and all others are outputted. These files are _not_ the initial condition as specified by the configuration file -- they seem to actually be the solution after the first time step. This can be reproduced easily in the config file I have attached to this issue (an updated version of TestCases/plunging_naca0012 for SU2 v8). The `flow_00000.vtu` file has non-uniform flowfields, which doesn't make sense. For simulations where a restart file like `restart_00000.dat` is provided, the Time_Iter=1 and Cur_Time=dt (the state **after** these inner iterations), and the subsequently outputted files have the correct time iteration appended to it. I think that for non-restart unsteady simulations, the IC should be outputted as solely just the initialization before any inner iterations are completed, Time_Iter++ and Cur_Time+=dt, and THEN inner iterations performed. [plunging_NACA0012.cfg.txt](https://github.com/user-attachments/files/16912625/plunging_NACA0012.cfg.txt). **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 22.04); - C++ compiler and version: GNU; - MPI implementation and version: MPICH; - SU2 Version: v8.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2353:441,config,configuration,441,https://su2code.github.io,https://github.com/su2code/SU2/issues/2353,2,['config'],"['config', 'configuration']"
Modifiability,"There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; (talking does not go very far). If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262#issuecomment-818786416:30,refactor,refactoring,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818786416,4,"['refactor', 'variab']","['refactoring', 'variables']"
Modifiability,"There was actually another error before The Meson build system-output. > warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [1/29] CXX build/browse.oninja: fatal: posix_spawn: Resource temporarily unavailable; Traceback (most recent call last):; File ""configure.py"", line 709, in <module>; subprocess.check_call(rebuild_args); File ""/home/FDa/FDa045/anaconda3/lib/python3.7/subprocess.py"", line 363, in check_call; raise CalledProcessError(retcode, cmd); subprocess.CalledProcessError: Command '['./ninja']' returned non-zero exit status 1.; /bin/sh: fork: retry: No child processes",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420#issuecomment-958677226:373,config,configure,373,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420#issuecomment-958677226,1,['config'],['configure']
Modifiability,"There were several places where the compiler was returning warnings, for things like comparing signed and unsigned integers, uninitialized variables, unused variables, etc. ; This pull request corrects for these warnings; the largest change is in changing the type of some consts that previously returned signed-unsigned comparison warnings.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/342:139,variab,variables,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/342,2,['variab'],['variables']
Modifiability,"These are all fantastic questions. I have exclusively used SLSQP for any optimizations that I have run. So, I can only speak to that optimization algorithm. . > Why do we want the gradient norm to be ~1E-6?. Not sure why this is. I agree with what @economon said. These tuning parameters are to coax out an ideal step size for the optimizer. As you can imagine, the ideal step size is wildly varying depending on the optimization objectives/constraints, scales of the geometry, and types/numbers of design variables that are being used. You have to play this game of scaling the objectives and constraints in different ways to coax out the ideal first step. In my limited testing, the value of 1E-6 for the gradient norm seems to work well for 3D RANS aerodynamic shape optimizations of an aircraft wing when using FFD control points to change the shape of the wing. This is a specific use case that was the subject of a lot of the underlying research that resulted in the shape optimization framework. Which is likely why I have had good results using this rule of thumb. . > Is 1E-6 a good rule? Or is it just a decent starting point, and values very different from 1E-6 are used in practice? Also, if this is ""a good rule,"" then shouldn't we just automatically rescale the problem after the first design iteration?. Scaling in an optimization problem can be pretty frustrating and time consuming. Anecdotally, I have been using @economon 's suggestions of leaving everything else as default (value of 1) and only playing with the objective and constraint scalings to get a good first step size. As mentioned before, this step size is of different values for different problems, which is why it is difficult to come up with universal scalings that would work for most problems. But I am hoping to address some of these scaling issues in #923 . . I haven't really found much good literature on this problem, but I might be looking in the wrong places. Recommendations are welcome. . A big boon is hav",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616810829:506,variab,variables,506,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616810829,1,['variab'],['variables']
Modifiability,They are SU2 config options. I think they are explained in the config_template in more detail (98% sure).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1307#issuecomment-867121983:13,config,config,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307#issuecomment-867121983,1,['config'],['config']
Modifiability,"They may be too high. This is certainly the case whether one runs in a dimensional or non-dimensional mode. It may be sufficiently low for one mode but marginally low for the second mode. Therefore, we suggest clipping the solution relative to the TKE and Omega freestream values such that:. TKE_LowerLimit = C_k * TKE_infinity; Omega _LowerLimit = C_w * Omega_infinity. Where C_k and C_w are constants. . The control over these constants is given to the user, However based on our 20 years of experience with the k-w models, Omega will not drop below 1E-3 * Omega_infinity (converged solution). However, in the process of convergence, it may reach lower values. Therefore, a value of . C_w = 1E-6. is reasonable. The solution of TKE is not very sensitive to C_K (assume it is sufficiently low). We recommended:. C_K = 1E-20. setting these as default values. . ## Related Work; Results of the change on convergence of VFE2 test case are presented. Two configurations of CFL adaptation were tested on both the original and modified lower limit code, ; 1. CFL_ADAPT_PARAM= ( 0.99, 1.005, 5.0, 50.0, 0.0001 ) named max CFL 50 ; 2. CFL_ADAPT_PARAM= ( 0.99, 1.05, 5.0, 200.0, 0.0001 ) named max CFL 200. ![rms Rho](https://github.com/su2code/SU2/assets/139676851/6481464c-6da3-4565-8415-d19d9ea211ab). ![rms k](https://github.com/su2code/SU2/assets/139676851/e1582ea2-f77e-4814-9eda-dd41c006aabf). we point out that beyond the change in maximum CFL, also the acceleration rate is changed. . Beyond adding robustness allowing the the use of a CFL of 200 which diverges under the original limit , the modified limit allows for better convergence of the flow and turbulence residuals for CFL of 50. Plots of the Lift and drag Coefficients are added here showing that results are not affected by the new limit, and additionally convergence is slightly quicker for the lift coefficient even with a CFL of 50 . . ![CL](https://github.com/su2code/SU2/assets/139676851/61adc0af-9449-41e8-aac7-e985ca3c9bdb); ![CD]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323:1394,config,configurations,1394,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323,2,"['adapt', 'config']","['adaptation', 'configurations']"
Modifiability,"Things done:; - Create CScalarSolver/Variable classes that now sits between CSolver/Variable and CTurbSolver/Variable; - Move variables/methods to CScalar-land for which one can reasonably assume that they will be useful for future children of the CScalar-family; - That implies, that the rest remains in Turbulence land mostly(!) untouched; - Mostly, because I renamed (Set)TurbVar[-,Gradient] variables/methods in CNumerics which result in changing that all over turb_diff/conv/sources. They hear by the name (Set)ScalarVar* now; And that's it for now. I added some personal comments in the code here and there that will be removed. Next up (coming to a PR near you soon):; - add CSpeciesSolver/Variable with appropriate Upwind/Viscous_Residual and Boundary conditions; - The first step will be a truly Passive Species transport but then ...; - ...introduce the mixture properties of @mheimgartner from #1332 i.e. make the transport equation 'active'. This comes along with some more necessary changes to CConfig. I am not sure yet what is the best order of tackling that. We'll see...; - @mheimgartner work concentrates on 1 additional transport equation. The idea is of course to make it as general as possible but it might be wiser to just go with 1 for the beginning.; - For that setup (2 components mixing) we'll want to get validated gradients going; - The more general way will be needed to merge with @danielmayer #1223 but that would be the step after the above mentioned. @bigfooted that i what I currently have in mind but feel free to chime in here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330#issuecomment-905608752:37,Variab,Variable,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330#issuecomment-905608752,6,"['Variab', 'variab']","['Variable', 'variables']"
Modifiability,"This PR implements the specification of a different wall function treatment per viscous wall marker. In the configuration file you do this as follows, where the default is NO_WALL_FUNCTION. % Viscous wall markers for which wall functions must be applied. (NONE = no marker); % Format: ( marker name, wall function type, ... ); MARKER_WALL_FUNCTIONS= ( airfoil, NO_WALL_FUNCTION ). You can determine the type of wall function treatment for a given marker by calling the function CConfig::GetWallFunction_Treatment. I put a dummy call in CNSSolver::BC_HeatFlux_Wall and CNSSolver::BC_Isothermal_Wall, as an example. It is the intention that the branches feature_Wall_Functions and feature_hom_wallModel merge with this version and work out the actual implementation for the FV solver and DG-FEM solver, respectively.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/435:108,config,configuration,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/435,1,['config'],['configuration']
Modifiability,"This PR improves the capabilities of the Py wrapper by exposing new members of the driver:. - Extracting information (tag, type, number of vertices, ...) on the different markers involved in the computation.; - Adding more Set/Get functions for vertices values.; - Adding the possibility to customize the computation with non-uniform and unsteady boundary conditions, currently implemented for solid boundary motion (FSI applications) and solid thermal quantities (temperatures or heat fluxes, CHT applications). This could be extended to other type of BC's (e.g. user-defined inlet velocity profile).; - Adding proper reg tests for the Python wrapper (see also PR#19 from TestCases repo that has to merged before.). EDIT: Reg tests still to be committed once PR in TestCases is merged.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488:527,extend,extended,527,https://su2code.github.io,https://github.com/su2code/SU2/pull/488,1,['extend'],['extended']
Modifiability,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/514:269,variab,variable,269,https://su2code.github.io,https://github.com/su2code/SU2/pull/514,5,"['config', 'variab']","['configuration', 'variable', 'variable-based']"
Modifiability,"This PR is ready from my point of view. All periodic / turbomachinery meshes and regressions have been updated (thanks @salvovitale), and I can confirm they converge with the new periodic implementation. Only a few other regression tests needed to be updated due to the refactoring of the MPI, but they were very minor. If the tests pass, then I recommend we merge very soon. Any final comments or reviews are most welcome.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652#issuecomment-484730590:270,refactor,refactoring,270,https://su2code.github.io,https://github.com/su2code/SU2/pull/652#issuecomment-484730590,1,['refactor'],['refactoring']
Modifiability,"This PR removes quite a few compiler warnings that you get when you compile with the following flags for the g++ compiler; -g -Wall -Wextra -Wno-unused-parameter -Wno-empty-body. I would advice people to use these flags before merging into develop to keep the code as clean as possible. Warnings are very useful to catch faulty behavior, but if there are already quite a few present in working code, it is easy to miss important ones. With these flags there is still one file that gives warnings in the develop version, namely Common/src/geometry_structure.cpp. The reason is that on line 745 of this file there is the following statement. if ((jPoint > iPoint) // && (CrossProduct >= 0.0). The commented part is new and leads to a few compiler warnings about unused variables. The question therefore is whether the comment should indeed be in there (and hence CrossProduct is not relevant) or this is just something for debugging. In the former case some more cleaning up can be done. In the latter case the comment should be removed again.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/506:767,variab,variables,767,https://su2code.github.io,https://github.com/su2code/SU2/pull/506,1,['variab'],['variables']
Modifiability,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/513:138,refactor,refactoring,138,https://su2code.github.io,https://github.com/su2code/SU2/pull/513,2,"['refactor', 'rewrite']","['refactoring', 'rewrite']"
Modifiability,"This branch adds a native CHT functionality to SU2. Main contents are:. 1. A new driver (CMultiPhysicalZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correct",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505:790,config,config,790,https://su2code.github.io,https://github.com/su2code/SU2/pull/505,1,['config'],['config']
Modifiability,"This bug pops up because the periodic mesh reconstruction (in `SU2_MSH`) doesn't always create a valid mesh in 3D. Some points disappear, and some points are duplicated. When `SU2_CFD` (specifically, `CPhysicalGeometry`) tries to get the number of points in the domain, it calculates the wrong number because some of those points are duplicated. That leads to segfaults, because the output routine thinks the extra (missing) points belong to another processor. I've got a little toy problem with a simple periodic cube. It's easy to see on the simple 4x4x4 (+ periodic) problem that 3 nodes disappear, and 3 nodes are duplicated. I've never observed this problem in any of the 2D test cases I ran. As to why `SU2_MSH` is missing some points and duplicating others, I'm not sure. I tried running Valgrind to check for uninitialized variables or illegal memory access, but nothing there. I'll have to look more into the problem. The `su2_periodic.f90` script mentioned in #416 seems to be a workaround. I don't run into any problems when I use that script.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431#issuecomment-337056131:831,variab,variables,831,https://su2code.github.io,https://github.com/su2code/SU2/issues/431#issuecomment-337056131,2,['variab'],['variables']
Modifiability,"This change looks ok to me, but in general preconfigure.py should be able to just pass unknown arguments to the configure script so that no change is required there. Have you tried that ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298#issuecomment-240339485:112,config,configure,112,https://su2code.github.io,https://github.com/su2code/SU2/pull/298#issuecomment-240339485,1,['config'],['configure']
Modifiability,This commit adds the appropriate code to more accurately report the; progress of the vertex export in the SU2 Pointwise plugin.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/72:120,plugin,plugin,120,https://su2code.github.io,https://github.com/su2code/SU2/pull/72,1,['plugin'],['plugin']
Modifiability,This commit fixes an issue causing incorrect reporting of the specified; adaptive CFL behavior. Thanks for your consideration!,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/233:73,adapt,adaptive,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/233,1,['adapt'],['adaptive']
Modifiability,"This feature includes several minor changes to unify the style:; - Now we are using CL, CD, CSF across the entire code (instead of Clift, CDrag, CSideForce). This new nomenclature is more consistent with CMx, Fx, that we were using before.; - string GetMarker_xxx to GetMarker_xxx_TagBound to reflect that the output is the name of the bound. this is also more consistent with the existing GetMarker_TagBound; - Minor cosmetic changes e.g. something=something -> something = something. Code comments using /_--- ---_/, else{ -> else { or ){ to ) {. And an important change, now SU2 is able to divide between pressure, momentum and friction contribution to the computed total force. The momentum is important if we are dealing with open surfaces like an engine inlet/outlet. The new names for the main subroutines are. void CEulerSolver::Pressure_Forces(CGeometry *geometry, CConfig *config); void CEulerSolver::Momentum_Forces(CGeometry *geometry, CConfig *config); void CNSSolver::Friction_Forces(CGeometry *geometry, CConfig *config). which are also more consistent with its content.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/304:883,config,config,883,https://su2code.github.io,https://github.com/su2code/SU2/pull/304,3,['config'],['config']
Modifiability,This has been implemented with the new CFL adaptation.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/92#issuecomment-101393482:43,adapt,adaptation,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/92#issuecomment-101393482,1,['adapt'],['adaptation']
Modifiability,"This implementation allows the definition of cartesian, cylindrical and spherical FFD boxes. The gradient evaluation itself has been also revisited to reduce the required time by skipping the surface deformation process when the variable is has been fixed by the user.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/330:229,variab,variable,229,https://su2code.github.io,https://github.com/su2code/SU2/pull/330,1,['variab'],['variable']
Modifiability,"This indicates that the code has not been successfully compiled for parallel. ; I recommend checking the configuration and recompiling. ; For a faster response and information on how others have troubleshot configuration problems, please see our forum at http://www.cfd-online.com/Forums/su2/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2#issuecomment-70964324:105,config,configuration,105,https://su2code.github.io,https://github.com/su2code/SU2/issues/2#issuecomment-70964324,2,['config'],['configuration']
Modifiability,This is a big change that will affect all the config files... could you please add a meaningful error message if somebody uses the old options? Thanks!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/451#issuecomment-336345293:46,config,config,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/451#issuecomment-336345293,1,['config'],['config']
Modifiability,"This is a good point, as you know we've tried to move to the ""m"" versions of SST (#1483) (dropping k from viscous terms) but I don't think we have looked too deeply into the convective terms.; However, the Roe speed of sound is only used by dissipation terms, the consistent part of the flux is based on primitive variables, and those account for tke, so I suspect there is some other inconsistency at play when defining farfield conditions or the farfield boundary itself.; Also note that you are probably using very high values of free stream turbulence intensity and viscosity ratio, the defaults are (5% and 10x). I did not see this type of problem in https://su2code.github.io/vandv/swbli/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1361254042:314,variab,variables,314,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1361254042,1,['variab'],['variables']
Modifiability,"This is a nice-to-have but there are 2600 uses of cout << in SU2, are you sure you want to refactor all of them?; If you pick something with operator << it will be easier.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991#issuecomment-1488252091:91,refactor,refactor,91,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991#issuecomment-1488252091,1,['refactor'],['refactor']
Modifiability,"This is a relatively small code change, but the change in options will effect the config files for everyone currently using optimization, and for anyone who has an OPT_OBJECTIVE defined in their config file. . The reasoning behind deprecating this option:; -Compressing the OPT_OBJECTIVE and OBJECTIVE_FUNCTION options into a single specification will reduce potential confusion about the behavior of these options. ; -Using the new OBJECTIVE_WEIGHT option to specify not only the scaling but also the sign clarifies the behavior of the optimizer - previously, the sign of the objective function was automatically flipped behind the scenes, now this is controlled by the user.; - This change facilitates planned further modifications to allow multiple objectives. . Please feel free to comment both on the code changes themselves as well as on the new config option format",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241:82,config,config,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/241,3,['config'],['config']
Modifiability,"This is a small issue I noticed when I worked on some features for the discrete adjoint driver.; In CDiscAdjFluidIteration::RegisterInput the inputs for the AD tape are registered.; At the moment if kind_recording == RECORDING::SOLUTION_AND_MESH is set it only registers the flow variables and has no difference to RECORDING::SOLUTION_VARIABLES. If I understand the logic for this enum option correctly, it should register the flow variables and the mesh coordinates from geometry. I.e. if you want to add unctions to the driver, which can evaluate derivatives w.r.t. flow and geometry in one tape evaluation, you should use this option. In addition, I change an out-of-date comment. ## Proposed Changes; Register the geometry variables as inputs in the discrete adjoint flow iteration if 'kind_recording == RECORDING::SOLUTION_AND_MESH'. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1492:280,variab,variables,280,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492,3,['variab'],['variables']
Modifiability,"This is confusing me a bit. Before I set it up: Do you want me to use the original config (without the _adj), remove the comments and the model and then run SU2_CFD_AD in the regression test?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571#issuecomment-1076187970:83,config,config,83,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571#issuecomment-1076187970,1,['config'],['config']
Modifiability,"This is how the scale factor is computed `su2double Scale = config->GetDV_Value(0)*config->GetOpt_RelaxFactor();`; OPT_RELAX_FACTOR is 1000 in your config, and so it cancels the scale you want to apply. Please try this again and reopen the issue if the problem persists.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1023#issuecomment-645306463:60,config,config,60,https://su2code.github.io,https://github.com/su2code/SU2/issues/1023#issuecomment-645306463,3,['config'],['config']
Modifiability,"This is indeed important. Having some reference quality metric, while creating mesh (acceptable limits, specific to the solvers, which evolves with usage).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778#issuecomment-525845039:135,evolve,evolves,135,https://su2code.github.io,https://github.com/su2code/SU2/pull/778#issuecomment-525845039,1,['evolve'],['evolves']
Modifiability,"This is not the preferred way to contribute to open source, especially considering that the refactoring PR already had comments.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750#issuecomment-1237029298:92,refactor,refactoring,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750#issuecomment-1237029298,1,['refactor'],['refactoring']
Modifiability,"This is obviously very good work and should make it much simpler to add new outputs etc. My main concern when first reviewing was performance (something no one seems to care about) but from the limited testing I did while merging this and CVariable there seems to be no big impact, I did not time anything though, if you have numbers to share please do.; Nevertheless if you can get away with using unordered_map instead of map it would be better. Possibly part of the reason everyone puts of reviewing this is that it is a major refactoring and yet there are no accompanying notes about the architecture the implementation choices etc. I absolutely guarantee you that is not how professional software is developed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534651933:530,refactor,refactoring,530,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534651933,2,['refactor'],['refactoring']
Modifiability,"This is simply the way how the cmd.exe shell works on Windows - file and folder names containing spaces or special characters must be quoted into `""` to be handled correctly.; The title says it all - *to make them [executables] run*. The patch prepends one `""` and appends one `""` to the command name. This could be refactored further to reduce repetition much more by putting the different executable file names into a map and have a single place to combine quote + executable + quote.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/332#issuecomment-321264218:316,refactor,refactored,316,https://su2code.github.io,https://github.com/su2code/SU2/pull/332#issuecomment-321264218,2,['refactor'],['refactored']
Modifiability,"This is the first of a number of important changes to make way for the discrete adjoint framework. With this change, one must use CONTINUOUS_ADJOINT instead of ADJOINT in config files to run the continuous adjoint problem. Contains all necessary changes to the C++ and Python source.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/185:171,config,config,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/185,1,['config'],['config']
Modifiability,"This issue has already been dealt with in the forum, ; https://www.cfd-online.com/Forums/su2/203777-unable-find-configure-file.html",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/549#issuecomment-402973171:112,config,configure-file,112,https://su2code.github.io,https://github.com/su2code/SU2/issues/549#issuecomment-402973171,1,['config'],['configure-file']
Modifiability,This issue has been closed because the CFL adaptation format has changed.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/8#issuecomment-101391478:43,adapt,adaptation,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/8#issuecomment-101391478,1,['adapt'],['adaptation']
Modifiability,"This issue is relevant to many environments.; For a long time I made a bypass using the environment variable SU2_RUN.; Setting in before a parallel run in a bash command:; export SU2_RUN=”-machinefile=[machinefile] -env I_MPI_DEVICE rdma [SU2 location]/SU2/bin“; Then ; parallel_computation.py -n [N] ; It only requires a small modification in ; [Home-source]/SU2/SU2_PY/SU2/run/interface.py ; Replace ; base_Command = os.path.join(SU2_RUN,'%s'); with; base_Command = SU2_RUN+""%s""; Then it works smoothly. ; Would you like to consider this as an alternative ?; Best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/335#issuecomment-263671223:100,variab,variable,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/335#issuecomment-263671223,1,['variab'],['variable']
Modifiability,"This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files. ## Parallel Unsteady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 100`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below).; ; ## Serial Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `SU2_CFD unsteady_naca0012.cfg`; * Take note of PIDs for me",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:2527,config,config,2527,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['config'],['config']
Modifiability,This makes sure DV_KIND comes before DV_PARAM when a config file is output by the python scripts. The python dict passed to update doesn't guarantee order. This issue occured when DV_KIND and DV_PARAM were not previously defined in a config file passed to shape_optimization.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/20:53,config,config,53,https://su2code.github.io,https://github.com/su2code/SU2/pull/20,2,['config'],['config']
Modifiability,This makes sure DV_KIND comes before DV_PARAM when a config file is; output by the python scripts. The python dict passed to update doesn't; guarantee order. This issue occured when DV_KIND and DV_PARAM; were not previously defined in a config file passed to; shape_optimization.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/73:53,config,config,53,https://su2code.github.io,https://github.com/su2code/SU2/pull/73,2,['config'],['config']
Modifiability,"This may be relevant, and it may not be. Is there a reason that the molecular and turbulent diffusion of turbulent kinetic energy is not included in the total energy terms? I'm talking about terms like:. ![molecular and turbulent diffusion of tke](https://latex.codecogs.com/gif.latex?\left(&space;\mu&space;&plus;&space;\frac{\mu_t}{\sigma_k}\right)\frac{\partial&space;k}{\partial&space;x_j}). This term is listed both in Wilcox's ""Turbulence Modeling for CFD"" book and the [NASA TMR website](https://turbmodels.larc.nasa.gov/implementrans.html). NASA's page basically just copies what Wilcox states, and then says ""This expression in the energy equation is also sometimes neglected."". Rumsey clarified his position in a [2009 report](https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20090015399.pdf), saying that ""when considering high Mach number compressible boundary layer flows using k-omega models, the conservation of total energy should be configured to include the contribution of the turbulent kinetic energy k... It is sometimes common practice to ignore these effects, which is certainly justified when k is signficantly smaller than the square of the mean velocity."" . But he also states: ""Note that in CFL3D, the turbulence models are decoupled from the mean flow equations, k is *not* included in the definition of the total energy, and the diffusion of k does not appear in the mean flow energy equation for its models tested here."" He also omitted the 2/3 \rho k term in both the production and the turbulent stress tensor, and found that it made little difference even for M=10 wall-bounded flows. SU2's version of SST is in a weird spot right now, where it's using the turbulent kinetic energy in some places but not others. It's using it here:. + Total energy definition; + Production of turbulent kinetic energy; + RANS evolution equations; + Eddy viscosity definition. But not here:. + Molecular and turbulent diffusion of turbulent kinetic energy in the total energy cons",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-548886007:955,config,configured,955,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-548886007,2,['config'],['configured']
Modifiability,"This new version of SU2_DEF generates only one .plt file independently of the number of MPI ranks. It is a visualization issue but, this new capability is very useful to study the effect of a design variable dealing with large cases that require multiple MPI ranks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/130:199,variab,variable,199,https://su2code.github.io,https://github.com/su2code/SU2/pull/130,1,['variab'],['variable']
Modifiability,"This one is all set after a little more cleanup. I left some low-level changes to the EoS models for later. @CatarinaGarbacz @MarcoFossati : we can use a simple directory name, as you suggest. Let's just go with fluid/ since we also treat liquids with the incompressible solver. Bonus: adds a rotating frame calculation test and some extra error checks on CFL adapt params that should help avoid unreported problems with old configs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715:360,adapt,adapt,360,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715,4,"['adapt', 'config']","['adapt', 'configs']"
Modifiability,"This one is related to the integer overflow problem for very large meshes when writing paraview XML files. In the function CParaviewXMLFileWriter::WriteDataArray the variable totalByteSize is defined as an integer. When writing lots of data, especially the connectivity data, this variable overflows, as @GomerOfDoom experienced. Is it possible to define this byte size to be of type Int64 in paraview instead of Int32?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-625322105:166,variab,variable,166,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-625322105,2,['variab'],['variable']
Modifiability,"This problem appears to be solved, tested with current develop branch (hacked configs below).; [configs.zip](https://github.com/su2code/SU2/files/3724204/config.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/713#issuecomment-541622770:78,config,configs,78,https://su2code.github.io,https://github.com/su2code/SU2/issues/713#issuecomment-541622770,3,['config'],"['config', 'configs']"
Modifiability,This pull request **introduces 2 alerts** and **fixes 19** when merging 0cf08d4d50535f6c145d0a974f0e5cc9521a9b1a into c2c78e2bc56160c2724fb34102c1fd2c2542c2a1 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-bc742e5740e7fde7e8efae25d0be0ca4e1117e11). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1357#issuecomment-903274510:308,variab,variable,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357#issuecomment-903274510,3,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,This pull request **introduces 2 alerts** and **fixes 19** when merging 4ecf3eab71954a9e30a0da5242bc90e2c0eab82f into c2c78e2bc56160c2724fb34102c1fd2c2542c2a1 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b65cf99f0149c4b378622df6b284bab9578714f9). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1357#issuecomment-903529424:308,variab,variable,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357#issuecomment-903529424,3,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,This pull request **introduces 2 alerts** and **fixes 19** when merging a28a4d810429bbb289104f27e1b2f0fc46ce11a0 into a1a88d1f8494c5dc0a9cda407b26806e7a3a8d72 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-6f51530a24240894df3db8346a8c6a07062dfcd2). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1402#issuecomment-940882471:308,variab,variable,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402#issuecomment-940882471,3,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,This pull request **introduces 2 alerts** and **fixes 29** when merging 1577def85c64c7165c45f3b39ed30d0d1d426af2 into a1a88d1f8494c5dc0a9cda407b26806e7a3a8d72 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-384f1d4abd4d5c3f707768fe6f28b54ea7574463). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 10 for Comparison of narrow type with wide type in loop condition; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1396#issuecomment-937384173:308,variab,variable,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/1396#issuecomment-937384173,3,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,This pull request **introduces 2 alerts** and **fixes 29** when merging b718c1f697b28ceb9c6b3636869b923767f6fde7 into a1a88d1f8494c5dc0a9cda407b26806e7a3a8d72 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-09da455b036edabab1f34277beeb4185ef2ad75c). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 10 for Comparison of narrow type with wide type in loop condition; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1416#issuecomment-954872759:308,variab,variable,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/1416#issuecomment-954872759,3,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,This pull request **introduces 293 alerts** when merging 2e74c55142511f325455bc139bba0ee4acf09c70 into e528e80decab717bd780a3ecedb8cdb432865993 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-66e7b8c38e60d91d57ccb025f36f2effd8902f4b). **new alerts:**. * 131 for FIXME comment; * 43 for Comparison result is always the same; * 38 for Multiplication result converted to larger type; * 34 for Constant return type on member; * 24 for Inconsistent definition of copy constructor and assignment \(&#39;Rule of Two&#39;\); * 10 for Empty branch of conditional; * 4 for Declaration hides parameter; * 2 for Expression has no effect; * 2 for Catching by value; * 1 for Overloaded assignment does not return &#39;this&#39;; * 1 for Virtual call from constructor or destructor; * 1 for Unclear comparison precedence; * 1 for Local variable hides global variable; * 1 for Short global name,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1286021191:841,variab,variable,841,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1286021191,2,['variab'],['variable']
Modifiability,This pull request **introduces 293 alerts** when merging 82614e7ed24a4eccce699de9e11a699ec4887bb4 into 4f3e0af2da355e862caae2a447bd1511471ea32a - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-3e39f1debd30828b2dc6092d06a1f82d2d0bb548). **new alerts:**. * 131 for FIXME comment; * 43 for Comparison result is always the same; * 38 for Multiplication result converted to larger type; * 34 for Constant return type on member; * 24 for Inconsistent definition of copy constructor and assignment \(&#39;Rule of Two&#39;\); * 10 for Empty branch of conditional; * 4 for Declaration hides parameter; * 2 for Expression has no effect; * 2 for Catching by value; * 1 for Overloaded assignment does not return &#39;this&#39;; * 1 for Virtual call from constructor or destructor; * 1 for Unclear comparison precedence; * 1 for Local variable hides global variable; * 1 for Short global name,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1272340241:841,variab,variable,841,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1272340241,2,['variab'],['variable']
Modifiability,This pull request **introduces 293 alerts** when merging a6ce86a453490cd0844a1fc01a148c156fe70d42 into 4f3e0af2da355e862caae2a447bd1511471ea32a - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-e8d9506dfb52f522a663da1099315a32263d82f7). **new alerts:**. * 131 for FIXME comment; * 43 for Comparison result is always the same; * 38 for Multiplication result converted to larger type; * 34 for Constant return type on member; * 24 for Inconsistent definition of copy constructor and assignment \(&#39;Rule of Two&#39;\); * 10 for Empty branch of conditional; * 4 for Declaration hides parameter; * 2 for Expression has no effect; * 2 for Catching by value; * 1 for Overloaded assignment does not return &#39;this&#39;; * 1 for Virtual call from constructor or destructor; * 1 for Unclear comparison precedence; * 1 for Local variable hides global variable; * 1 for Short global name,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1268978482:841,variab,variable,841,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1268978482,2,['variab'],['variable']
Modifiability,This pull request **introduces 8 alerts** and **fixes 58** when merging aec088cd7ff510f67327d17e3b6fb657616870f1 into 3cb709cfd29d6d75dfe53972b5aaa7a08294b9b5 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-33e58c38b81a8d4c274e2d9b050128676a0937cb). **new alerts:**. * 5 for Unused import; * 1 for Variable defined multiple times; * 1 for Result of integer division may be truncated; * 1 for Unnecessary delete statement in function. **fixed alerts:**. * 47 for Comparison of narrow type with wide type in loop condition; * 6 for Unused local variable; * 4 for Multiplication result converted to larger type; * 1 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1216#issuecomment-789073723:318,Variab,Variable,318,https://su2code.github.io,https://github.com/su2code/SU2/pull/1216#issuecomment-789073723,2,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,This pull request addressed issue #682 and cleans up the config structure. - [x ] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ x] My contribution is commented and consistent with SU2 style.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/686:57,config,config,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/686,1,['config'],['config']
Modifiability,"This pull request contains a first step towards sliding mesh implementation. Fluid-Fluid simulations are now possible using the NEAREST_NEIGHBOUR approach between an arbitrary number of zones. The driver structure has changed: a CFluidDriver and a CGeneralDriver were created in place of the singlezone and multizone drivers.; FluidDriver is capable of managing an arbitrary number of fluid zones exploiting the Cinterpolator and the CTransfer classes.; CGeneralDriver is left to run single-zone FEM, heat, poisson or wave problems. For the time being they are still limited to single zone problems only (as in the current develop branch).; If you any idea or suggestion about what the new drivers' names should be or about some reference multizone problem we may use in the future to extend the General driver we could start a discussion. The CTransfer and CInterpolator classes were modified to deal with an arbitrary number of fluid zone, (they were limited to 2 zones only). . A new BC MARKER_FLUID_INTERFACE was introduced.; This interface must be specified like, for instance, the MARKER_CLAMPED or MARKER_NORMAL_LOAD in FSI problems.; Regarding this BC, now it still requires the MARKER_FSI_INTERFACE to be specified in order to create the interfaces.; For this pull request I left the old name but I think it should change, maybe into something more general like MARKER_ZONE_INTERFACE. Any suggestion?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322:785,extend,extend,785,https://su2code.github.io,https://github.com/su2code/SU2/pull/322,1,['extend'],['extend']
Modifiability,"This pull request enlarges the capability of SU2 to simulate internal flows in turbomachinery. The flow solver is now capable of performing 3D steady multi-zone simulations via a 3D Non-Reflecting Mixing Plane. The implementation is based on the work done by Saxer and Giles (available at https://doi.org/10.2514/3.23618). To adapt the implementation of Saxer and Giles to an unstructured vertex-based solver such as SU2, a new data structure, called **_CTurboVertex_**, was created for the inflow and outflow boundaries. The **_CTurboVertex_** class is a child of the class **_CVertex_**; thus, it maintains all the standard vertex properties. However, more than a standard vertex, the turboVertex posses:. 1. the possibility of accessing the inflow and outflow boundaries on a span-wise manner (to impose different values of the mixing-plane condition along the blade-height) and on a pitch-wise ordered manner (to compute the Spatial Fourier Transformation of the outgoing characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.da",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:326,adapt,adapt,326,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,1,['adapt'],['adapt']
Modifiability,"This pull request extends the fluid interface to viscous and turbulent calculations (SA and SST). * One note:; nVar is still passed in driver_structure.cpp:2509 but is not used. I left it, for the moment, to reduce potential conflicts but it can be removed in a future PR.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/382:18,extend,extends,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/382,1,['extend'],['extends']
Modifiability,"This pull request features some improvements regarding the FFD. To be more precise:; - It is now possible to allow the FFD control points to move in an arbitrary direction. This is automatically enabled if the direction of movement in the design variable definition is set to (0.0,0.0,0.0). The set_ffd_design_var.py is updated accordingly (you can now specify the direction, default is 0.0). At the moment this is only possible for the discrete adjoint. But it could also be extended to the cont. adjoint.; - Along with this goes a refactoring of SU2_DOT to reduce code copy. Especially for the optimization of turbine blades and everything else that is not an airfoil this might be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/239:246,variab,variable,246,https://su2code.github.io,https://github.com/su2code/SU2/pull/239,3,"['extend', 'refactor', 'variab']","['extended', 'refactoring', 'variable']"
Modifiability,"This pull request implements . ``` bash; $ ./configure --with-metis-cppflags=""...""; ```. if needed, but sets the METIS C preprocessor flags to sane values by default in m4/metis.m4. Thomas, this relies on the system default **linux** rather than -DLINUX.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/32:45,config,configure,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/32,1,['config'],['configure']
Modifiability,"This pull request includes:; - updates and refinement of multiple objective gradient evaluation and optimization; - per-surface evaluation of forces and moments can now be included in an optimization or gradient evaluation: this is only used when more than one objective is specified. ; - the multiobjective test case has been added back into the regressions; - FIN_DIFF_STEP can now be specified in the config file (the option was already added in the develop branch; a small modification was needed to the python code in order to use it). If this option is not specified the previous behavior is used. ; - a few minor corrections are also included; - penalty functions can now be used as a portion of the objective. The penalty function is defined as the square of the difference between the function and its constraint - this is hard-coded, but can be modified by simply changing obj_p and obj_dp in the python scripts. . A tutorial around multiobjective optimization may be added later based on the inv_wedge_ROE_multiobj.cfg case.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385:404,config,config,404,https://su2code.github.io,https://github.com/su2code/SU2/pull/385,1,['config'],['config']
Modifiability,This pull request introduces a 'custom' design variable that can be used in an objective defined in an external script. ; Also includes some clean-up/ name changes to outflow-generalized adjoint (previously 'chain rule adjoint'). Also adds a test case.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/215:47,variab,variable,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/215,1,['variab'],['variable']
Modifiability,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298:463,coupling,coupling,463,https://su2code.github.io,https://github.com/su2code/SU2/pull/298,4,"['adapt', 'config', 'coupling']","['adapted', 'configuration', 'coupling']"
Modifiability,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295:263,config,configure,263,https://su2code.github.io,https://github.com/su2code/SU2/pull/295,2,"['config', 'coupling']","['configure', 'coupling']"
Modifiability,"This pull request is another in a series of pull requests to merge developments of the NEMO branch into develop without a massive PR. . This pull requests addresses:; -Fixes non-operable schemes (ROE, MSW, LAX); -AUSMPWPLUS remains functional but extremely unstable => flag to make unusable.; -Removes config->GetGamma() in with an appropriate function; -Renames 'Get' functions to 'Compute' where applicable. Somethings that are in the works/on the radar:; -Migrate toward Geometry:ToolBox functions (Remove GetBasis function); -Centralize the INDEX information; . ## Related Work; This is related to feature_NEMO and previous pull requests (#1111) . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1117:302,config,config,302,https://su2code.github.io,https://github.com/su2code/SU2/pull/1117,1,['config'],['config']
Modifiability,"This pull request is intended to be the first of two (or more) pull requests implementing multi-objective functionality. I am separating it into multiple requests since some structural changes are made which could potentially effect things outside the regression tests, and I want to make it easier for code review. . In this pull request, the ability to run multiple objectives is added to the python tools and to the config options. Within the CFD and adjoint solvers, the only major change is in the data structure containing the objectives - it now can hold a list of objectives, but when the adjoint solver is run only one objective is included. Later pull requests are planned to include the ability to run a single adjoint solution for a sum of objectives defined on different markers.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/237:419,config,config,419,https://su2code.github.io,https://github.com/su2code/SU2/pull/237,1,['config'],['config']
Modifiability,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328:670,refactor,refactoring,670,https://su2code.github.io,https://github.com/su2code/SU2/pull/328,5,"['refactor', 'rewrite', 'variab']","['refactoring', 'rewrite', 'variables']"
Modifiability,"This pull request moves all restart file loading from CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files wi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/374:155,refactor,refactoring,155,https://su2code.github.io,https://github.com/su2code/SU2/pull/374,1,['refactor'],['refactoring']
Modifiability,"This pull request replaces AdjointMPI with our own open-source library called Medipack (https://github.com/SciCompKL/MeDiPack). It covers most of the MPI standard (especially non-blocking communication, custom data types and operators), which makes it more flexible for future extensions of the MPI communication in SU2. Furthermore this updates Codi to the newest version and provides support for different taping strategies. Eventually we want to get rid of the #ifdef's for MPI, so I also started with replacing almost all MPI calls with calls to the SU2_MPI wrapper class. . I also removed the complex step datatype since I cannot make sure that it still works (and it makes no sense to maintain a forward mode and complex step ...)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473:257,flexible,flexible,257,https://su2code.github.io,https://github.com/su2code/SU2/pull/473,1,['flexible'],['flexible']
Modifiability,This pull request solves issue #276 ; The variable Parent_CV had no initial value causing undefined behaviour during multigrid agglomeration process. The variable is now initialized to 0 in CPoint constructor in dual_geometry_structure.cpp.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/316:42,variab,variable,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/316,2,['variab'],['variable']
Modifiability,This was fixed with the new config parsing script.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/14#issuecomment-44468230:28,config,config,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/14#issuecomment-44468230,1,['config'],['config']
Modifiability,"This works awesome. Except one thing.; I'm trying to build SU2 using Meson inside a Singularity container. However, the configuring of ninja doesn't work there. ; It looks for `python` but if not installed, this is not there, only python3 command is there. It works on my desktop because I have python2 installed there. However, from the documentation it seems I only need python3, in reality it uses both. Last part of the output of the Singularity build:; [meson_output.txt](https://github.com/su2code/SU2/files/3502142/meson_output.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-521301556:120,config,configuring,120,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-521301556,1,['config'],['configuring']
Modifiability,"Those two cases are not part of the regression suite, and so they were probably not updated as some of the options were renamed.; You can have a look at the other turbomachinery examples (at least two of them are part of the regressions) it should be simple to adapt those options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1086#issuecomment-706417999:261,adapt,adapt,261,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086#issuecomment-706417999,2,['adapt'],['adapt']
Modifiability,"Tim,. I can share some initial impressions. I’m trying to build the Mesa 3D graphics library, which recently switched to Meson and Ninja. They are pretty impressive. It looks like Meson uses both pkg-config and (more recently) CMake under the hood. For specific packages that don’t play nicely with pkg-config, it will look for other similar utilities, such as llvm-config for the LLVM library. I have a beef mostly with documentation, but that’s hardly unusual in the open source world, and maybe not so relevant to SU2, which doesn’t have the multitude of external dependencies that many open source projects do. I think the struggles I have had relate mostly to the non-transparent way that Meson interacts with the underlying utilities (pkg-config, CMake, llvm-config,…). For example, I had to fumble around to get Meson to find llvm-config in a non-standard location (adding that location to $PATH turned out to be the answer), as well as to get pkg-config to find its required pkgconfig directories in non-standard locations (adding them to $PKG_CONFIG_PATH was the answer there). I also had to build/install Python 3 (required by Meson), and found that the Python 3.7 has problems with OpenSSL (module _ssl), on which Meson depends, so I went back to Python 3.6. I imagine any pre-built Python 3.7 would be fine, though a related bug appears to still be open (https://bugs.python.org/issue34028). On Windows, Meson will output Visual Studio projects, which would make any Windows developer happy, but your source still has to be cross-platform friendly—not a problem for TecIO, but I don’t know if that’s true elsewhere in SU2. FWIW,. Dave. From: Tim Albring [mailto:notifications@github.com]; Sent: Wednesday, May 22, 2019 7:31 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] Meson build system (#685). To see a major advantage, just compare the meson.build and the configure.ac file ... —; You are receiving this becaus",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-494848848:200,config,config,200,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-494848848,7,['config'],['config']
Modifiability,"To Whom it May Concern, . I am writing in connection with the Transitional Flat Plate Test Case and wanted to report that the tutorial available on SU2 website was not working with the current version of the code: 7.3. That is to say that after I followed the tutorial step by step without changing anything, I had the following terminal error : ""FGMRES orthogonalization failed, linear solver diverged"". I checked the source code and found a little contradiction between the configuration file of the tutorial and the implementation of the transitional model. As you can see in the configuration file, the turbulence intensity Tu is already specified in % so the factor 100 added to Tu in the code does not seem necessary. . ![configuration_file](https://user-images.githubusercontent.com/109698292/180274079-ece0c6f6-4d64-4897-8e2d-abff41d30056.png); ![code](https://user-images.githubusercontent.com/109698292/180274082-b2dbee2d-a0ea-4967-b33e-a698f61d7471.png). When I erased that factor 100 in the source code (SU2_CFD/include/numerics/turbulent/turb_sources.hpp) I was able to get the same results as displayed in the tutorial for the skin friction coefficient. . Thank you",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1719:476,config,configuration,476,https://su2code.github.io,https://github.com/su2code/SU2/issues/1719,2,['config'],['configuration']
Modifiability,"To be clear: I like the solver/, variable/, output/, etc. layout a lot, and I am simply suggesting that we move entirely to that layout (with cpp and hpp merged together in each of those folders) and merging the code in Common, SU2_CFD, and other modules into that structure too (in their own folders still, like geometry/ for example). To keep it organized you can simply make each of those directories a library in meson which all later get linked into the various binaries. The mains could live in the top level src/ directory if we keep it or a separate directory (open for me). Something like. ```; SU2/; src/; solver/; meson.build; solver_\*.cpp; solver_\*.hpp; variable/; meson.build; variable_\*.cpp; variable_\*.hpp; ...; ```. with or without the src/ directory in the root (could go either way). Might want to keep it or even name it cpp/ to differentiate from the python framework(s).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-630918578:33,variab,variable,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-630918578,4,['variab'],['variable']
Modifiability,"To confirm, there seems to be a similar problem in 2D. I did the following test for the test case ""steady_inverse_design"". Ran test case with given mesh and config file.; This gave CP_diff=0.178; Copied ""surface_flow.dat"" -> ""TargetCp.dat"" (they seem to share the same format); Re-ran the test case; This gave identical results apart from the Cp_diff=0.009; Again this should definitely equal zero. I have looked through the source code and found the line that I think equates this value:. PressDiff += Area \* (CpTarget - Cp) \* (CpTarget - Cp); (from SU2_CFD/src/output_structure.cpp line 7529). There seems to be some other problem affecting this though as (CpTarget - Cp) should be zero.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/321#issuecomment-254857757:157,config,config,157,https://su2code.github.io,https://github.com/su2code/SU2/issues/321#issuecomment-254857757,1,['config'],['config']
Modifiability,"To do it with your AxiAuxVar i would suggest this: . ```; residual[0] -= 0.0;; residual[1] -= Volume*(yinv*total_viscosity_i*(PrimVar_Grad_i[1][1]+PrimVar_Grad_i[2][0]) ; - TWO3*AxiAuxVar_Grad_i[0][0]);; residual[2] -= Volume*(yinv*total_viscosity_i*2*(PrimVar_Grad_i[2][1]-v*yinv); - TWO3*AxiAuxVar_Grad_i[0][1]);; residual[3] -= Volume*(yinv*(total_viscosity_i*(u*(PrimVar_Grad_i[2][0]+PrimVar_Grad_i[1][1]); + v*(FOUR3*PrimVar_Grad_i[1][1]+TWO3*PrimVar_Grad_i[1][0]); - TWO3*v*v*yinv); - total_conductivity_i*PrimVar_Grad_i[0][1]); - TWO3*(AxiAuxVar_Grad_i[1][1]+AxiAuxVar_Grad_i[2][1]));; ```. Could you put that into your branch and then push to this branch? I double checked the signs.. should be fine. If I commited it here I now would break the compilation because these things are not defined in this branch. And for the setters maybe combine the `if` guards so it's cleaner; ```; /*--- Set primitive variables for viscous terms and/or generalised source ---*/; if (!ideal_gas || viscous) numerics->SetPrimitive(nodes->GetPrimitive(iPoint), nodes->GetPrimitive(iPoint));. /*--- Set secondary variables for generalised source ---*/; if (!ideal_gas) numerics->SetSecondary(nodes->GetSecondary(iPoint), nodes->GetSecondary(iPoint));. if (viscous) {; ; /*--- Set gradient of primitive variables ---*/; numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint), nodes->GetGradient_Primitive(iPoint));; ; /*--- Set gradient of auxillary variables ---*/; numerics->SetAxiAuxVarGrad(nodes->GetAxiAuxVarGradient(iPoint), nullptr);; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-728114454:910,variab,variables,910,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-728114454,4,['variab'],['variables']
Modifiability,"To everyone searching for the code in latest develop (there also @bigfooted's paper is given maybe, also it might be another from Eduardo Molina?) I posted it below.; It seems you are using an older version of the code so please compare it with the latest which is posted below. (I am too lazy to check myself, and I am also not knowledgeable in this stuff). (@ShiheJia when posting code please dont include every line number, keep the formatting and post the code wrapped in `'''c++ <code> '''` with `'` being the forward pointing tick); ```c++; case SA_EDDES: {; /*--- An Enhanced Version of DES with Rapid Transition from RANS to LES in Separated Flows.; Shur et al.; Flow Turbulence Combust - 2015; ---*/. su2double vortexTiltingMeasure = nodes->GetVortex_Tilting(iPoint);. const su2double omega = GeometryToolbox::Norm(3, vorticity);. su2double ratioOmega[MAXNDIM] = {};. for (auto iDim = 0; iDim < 3; iDim++){; ratioOmega[iDim] = vorticity[iDim]/omega;; }. const su2double deltaDDES = geometry->nodes->GetMaxLength(iPoint);. su2double ln_max = 0.0;; for (const auto jPoint : geometry->nodes->GetPoints(iPoint)) {; const auto coord_j = geometry->nodes->GetCoord(jPoint);; su2double delta[MAXNDIM] = {};; for (auto iDim = 0u; iDim < nDim; iDim++){; delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);; }; su2double ln[3];; ln[0] = delta[1]*ratioOmega[2] - delta[2]*ratioOmega[1];; ln[1] = delta[2]*ratioOmega[0] - delta[0]*ratioOmega[2];; ln[2] = delta[0]*ratioOmega[1] - delta[1]*ratioOmega[0];; const su2double aux_ln = sqrt(ln[0]*ln[0] + ln[1]*ln[1] + ln[2]*ln[2]);; ln_max = max(ln_max, aux_ln);; vortexTiltingMeasure += nodes->GetVortex_Tilting(jPoint);; }; vortexTiltingMeasure /= (nNeigh + 1);. const su2double f_kh = max(f_min,; min(f_max,; f_min + ((f_max - f_min)/(a2 - a1)) * (vortexTiltingMeasure - a1)));. const su2double r_d = (kinematicViscosityTurb+kinematicViscosity)/(uijuij*k2*pow(wallDistance, 2.0));; const su2double f_d = 1.0-tanh(pow(8.0*r_d,3.0));. su2double maxDelta = (ln_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462#issuecomment-985689737:574,Enhance,Enhanced,574,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-985689737,1,['Enhance'],['Enhanced']
Modifiability,"To see a major advantage, just compare the `meson.build` and the `configure.ac` file ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-494828151:66,config,configure,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-494828151,1,['config'],['configure']
Modifiability,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:113,adapt,adapted,113,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996,6,"['adapt', 'variab']","['adapted', 'variable']"
Modifiability,"Tom, I noticed that in under SU2_PY you have a parse_config.py that takes the cpp and hpp files and parses the data and returns it to the python UI. What is the data structure for this, is this like a data dictionary, key, value pair? can you give me the data structure for this so that I can reuse this in the web app. . Also may be provide me sample datastructure so that I can test it out in the weblayer. Having this in a weblayer is good idea, we can deploy this weblayer so that anyone accessing the web app can use this to create this configuration and use it as a starter.. I can implement a bottle application in python and deploy it in heroku and it can be used across. Thanks for your help. Krishna",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172#issuecomment-126140571:542,config,configuration,542,https://su2code.github.io,https://github.com/su2code/SU2/pull/172#issuecomment-126140571,1,['config'],['configuration']
Modifiability,"Tom, I would love to address both of these. Give me some time. I feel even in the current form, it is good. Do you have plans to merge this into master, so that people can use this to setup dev environment quickly. They can also create a basic config file quickly. . I will consider both of your ideas to make user experience better. Thanks for your support. ; Krishna",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172#issuecomment-126133647:244,config,config,244,https://su2code.github.io,https://github.com/su2code/SU2/pull/172#issuecomment-126133647,2,['config'],['config']
Modifiability,"Tom, thank you for improving this one.; This sounds cool, I was really looking for an easy way to customize the output to plot, for instance, the entropy field or the mass flow for turbomachinery applications. ; Is this meant to remain hard-coded or are you planning to introduce new options to specify the output from the config file?. I see reg tests failing due to travis time out (I believe we have 50 minutes for each python script). I also experienced that issue before and I had to turn down a couple of check I wanted to add for sliding meshes. We need to think about reorganising reg test to reduce or shorten them without loosing control on code features.; Otherwise we could consider switching to travis.com but I believe we'll have to pay for that. looks good to me by the way. . Ciao!; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-259085483:323,config,config,323,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-259085483,1,['config'],['config']
Modifiability,"Tom,. I have completed the basic html 5/ javascript based configuration generator. Please go thru the readme.md of SU2_IDE/Configuration-gen folder in develop branch and follow the instructions. Let me know if I am going the right direction. Thanks; Krishna",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172#issuecomment-127882798:58,config,configuration,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/172#issuecomment-127882798,2,"['Config', 'config']","['Configuration-gen', 'configuration']"
Modifiability,"Tom,. The endian test I got from http://cs-fundamentals.com/tech-interview/c/c-program-to-check-little-and-big-endian-architecture.php. The byte swapping function is mine and I am OK with you adapting it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562#issuecomment-414104646:192,adapt,adapting,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/562#issuecomment-414104646,1,['adapt'],['adapting']
Modifiability,Tools/PointwiseSU2plugin/PluginSDK.suo (0) ; - D MeshTools/PointwiseSU2plugin/depend.sh (28) ; - D MeshTools/PointwiseSU2plugin/mkplugin (10) ; - D MeshTools/PointwiseSU2plugin/mkplugin.bat (82) ; - D MeshTools/PointwiseSU2plugin/mkplugin.tcl (422) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:14284,plugin,plugins,14284,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,Tools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:17036,plugin,plugins,17036,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,Tools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseS,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18269,plugin,plugins,18269,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,Tools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpVersions.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin_Instructions.txt (0) ; - I QuickStart/inv_NACA0012.cfg (0) ; - I README (0) ; - I SU2_CFD/include/SU2_CFD.hpp (0) ; - I SU2_CFD/include/definition_structure.hpp (0) ; - I SU2_CFD/include/fluid_model.hpp (0) ; - I SU2_CFD/include/fluid_model.inl (0) ; - I SU2_CFD/include/integration_structure.hpp (0) ; - I SU2_CFD/include/integration_structure.inl (0) ; - I SU2_CFD/include/iteration_structure.hpp (0) ; - I SU2_CFD/include/numerics_machine_learning.hpp (0) ; - I SU2_CFD/include/numerics_machine_learning.inl (0) ; - I SU2_CFD/include/numerics_machine_learning_turbulent.hpp (0) ; - I SU2_CFD/include/numerics_structure.hpp (0) ; - I SU2_CFD/include/numerics_structure.inl (0) ; - I SU2_CFD/include/output_structure.hpp (0) ; - I SU2_CFD/include/solver_structure.hpp (0) ; - I SU2_CFD/include/solver_structure.inl (0) ; - I SU2_CFD/include/transport_model.hpp (0) ; - I SU2_CFD/include/transport_model.inl (0) ; - I ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:20530,plugin,plugins,20530,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"Tried to run the time-spectral test case (v3.2.9) using the NACA64A010 aerofoil and got a segmentation fault. The fault occurs in the ""MeanFlowIteration"" routine due to the change in the ""nZone"" variable value when using the time-spectral method. I tried a quick fix by updating ""nZone"" in main.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/171:195,variab,variable,195,https://su2code.github.io,https://github.com/su2code/SU2/issues/171,1,['variab'],['variable']
Modifiability,Try to detect wrong meson being used to configure SU2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1615:40,config,configure,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/1615,1,['config'],['configure']
Modifiability,Two PRs is fine for me.. good strategy I also use: much easier to complete a big refactoring if you know the residuals shouldn't change on the regressions (I am doing this with the MPI comms now). Do you have the bandwidth to put in another PR after this? We appreciate it,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626#issuecomment-458193864:81,refactor,refactoring,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/626#issuecomment-458193864,1,['refactor'],['refactoring']
Modifiability,U2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:14846,plugin,plugins,14846,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,U2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtim,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:17610,plugin,plugins,17610,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,U2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:17851,plugin,plugins,17851,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"UCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link current files; ; config_cfd = copy.deepcopy(config); for opt in adap_options:; config_cfd.pop(opt, None); config_cfd.LOW_MEMORY_OUTPUT = ""NO""; ; config_cfd.WRT_BINARY_RESTART = ""NO""; #config_cfd.R",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:3796,adapt,adaptation,3796,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['adapt'],['adaptation']
Modifiability,"Unable to find ""configure"" file",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/549:16,config,configure,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/549,1,['config'],['configure']
Modifiability,Update adaptive CFL,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036:7,adapt,adaptive,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036,1,['adapt'],['adaptive']
Modifiability,Update of the python fsi interface and new feature coupling SU2 with Nastran,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124:51,coupling,coupling,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124,1,['coupling'],['coupling']
Modifiability,Update to my comment above ~~But Nemo does not implement its own BC_Sym_Plane and uses the standard FVM implementation~~ ...turns out Nemo uses its own implementation. So Please re-use / adapt the one in CFVMSolver,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1625#issuecomment-1117417733:187,adapt,adapt,187,https://su2code.github.io,https://github.com/su2code/SU2/issues/1625#issuecomment-1117417733,1,['adapt'],['adapt']
Modifiability,Updated Adjoint variable to Continuous_Adjoint,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244:16,variab,variable,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/244,1,['variab'],['variable']
Modifiability,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-600991354:368,config,configs,368,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354,5,"['adapt', 'config']","['adaptive', 'config', 'configs']"
Modifiability,Updates to interpolation:; - Parallelized isoparametric interpolation; - Modified variable names w/in isoparametric calc for easier human-interpretation; - Introduced 'mirror' interpolation for use with Consistent & Conservative interpolation; - modified driver_structure such that structure -> fluid interpolation is defined first (which is necessary for C&C interpolation); - some code which was repeated in multiple interpolator child classes was moved to functions defined in the parent interpolator class (Determine_ArraySize and Collect_VertexInfo).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/231:82,variab,variable,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/231,1,['variab'],['variable']
Modifiability,"Upon implementing these changes, the compilation of the code failed due to multiple variables receiving conflicting declarations. After using just the variables @pcarruscag made and re-compiling, I receive multiple errors regarding the assignment of read-only variables, so I had to remove the ""const"" before a few lines to allow for compilation. Is this alright?. Also, any ideas about why SPECIFIED_SUPERSONIC_INLET_PROFILE is not being accepted as an option even though it's defined in CConfig.cpp?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1652#issuecomment-1152528910:84,variab,variables,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/1652#issuecomment-1152528910,3,['variab'],['variables']
Modifiability,Use CGNS_ENUMT and CGNS_ENUMV to properly scope type and variable names,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/157:57,variab,variable,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/157,1,['variab'],['variable']
Modifiability,Use CGNS_ENUMT and CGNS_ENUMV to properly scope type and variable names ...,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/155:57,variab,variable,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/155,1,['variab'],['variable']
Modifiability,Use doxygen to keep config options updated,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/122:20,config,config,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/122,1,['config'],['config']
Modifiability,Use the develop branch of the code and the config file I uploaded before. Heatflux is being outputted.; Please understand that we do not have resources to fix bugs in previous versions of the code.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805#issuecomment-546279885:43,config,config,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-546279885,1,['config'],['config']
Modifiability,"Using Cygwin's OpenMPI you can compile SU2 using the following command:. $SU2_HOME/configure --prefix=$SU2_EXEC --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx --enable-metis --with-metis-cppflags=""-D_FILE_OFFSET_BITS=64 -DNDEBUG -DNDEBUG2 -DHAVE_GETLINE -DMETIS_USE_LONGINDEX=1"" --enable-parmetis --with-parmetis-cppflags=""-DMETIS_USE_LONGINDEX=1"" --enable-cgns. Ok, you will not have the same performance as a linux distribution but you will be able to run SU2. I hope it can help. Best,; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/521#issuecomment-378291150:83,config,configure,83,https://su2code.github.io,https://github.com/su2code/SU2/issues/521#issuecomment-378291150,1,['config'],['configure']
Modifiability,Using the primitive variable index classes in more places (+ minor chores),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1476:20,variab,variable,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/1476,1,['variab'],['variable']
Modifiability,"V_KIND, DV_PARAM and DV_VALUE just one entry I found no comply on parsing the config file, parallel_computation will work as expected, but shape_optimization ""successfully"" finishes showing a GNORN=0 for each of objective function I have tried! The workaround suggested by Pedro Gomes in the CFD on line site, has not worked.; I have a 2D model, which is my ""smaller"" dataset, and can provide the slurm config and SU2 config. The mesh file size is 31801880 bytes. If those are ok to you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin/python; Python 3.9.1. *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough inst",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:1105,config,configure,1105,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['config'],['configure']
Modifiability,"V_VALUE, DV_KIND and DV_PARAM.; if I keep DEFINITION_DV unchanged, but assign to DV_KIND, DV_PARAM and DV_VALUE just one entry I found no comply on parsing the config file, parallel_computation will work as expected, but shape_optimization ""successfully"" finishes showing a GNORN=0 for each of objective function I have tried! The workaround suggested by Pedro Gomes in the CFD on line site, has not worked.; I have a 2D model, which is my ""smaller"" dataset, and can provide the slurm config and SU2 config. The mesh file size is 31801880 bytes. If those are ok to you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin/python; Python 3.9.1. *Give a clear and concise description of what th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:1085,Config,Configured,1085,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['Config'],['Configured']
Modifiability,Variable length arrays in Common/src/grid_movement/CVolumetricMovement.cpp,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1146:0,Variab,Variable,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1146,1,['Variab'],['Variable']
Modifiability,"Variable name change (Adjoint -> ContinuousAdjoint). There is now a clear distinction between DiscreteAdjoint variable and ContinuousAdjoint variable (booleans). I have also fixed some bugs in the I/O (tecplot and fieldview) due to the previous problem: we were using only the Adjoint boolean and the Discrete adjoint output was incorrect. An interesting bug in geometry.py has been also fixed. We must keep an eye on shape design using geometrical constraints. Because of this problem, it is not working in the master repository and current release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244:0,Variab,Variable,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/244,3,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,Variables like 'ZoneType_t' is reported'was not declared in this scope',MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/28:0,Variab,Variables,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/28,1,['Variab'],['Variables']
Modifiability,"Various changes:; && switch to || for solid boundary (previously a marker was only ""solid"" if it was heat flux AND euler AND isothermal); additions/modifications to the euler adjoint BC_OUTLET (average pressure, stagnation pressure); changes to doxygen-compatible comments for config options",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/146:277,config,config,277,https://su2code.github.io,https://github.com/su2code/SU2/pull/146,1,['config'],['config']
Modifiability,"Vec(data_,offsets_); }. STRONGINLINE FltVec operator++(int) {; auto ret = (*this)(); offsets_ += Incr; return ret;; }; };; ```; so silly in fact, it only moves forward, we use it in our loop like so; ```c++; ...; auto gradI = grad.getColIterator(iPoint);; auto gradJ = grad.getColIterator(jPoint);. for(size_t iVar=0; iVar<nVar; ++iVar); {; FltVec phiL = 0.0;; FltVec phiR = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); {; phiL += (gradI++)*d_ij[iDim];; phiR -= (gradJ++)*d_ij[iDim];; }; ...; ```; to get better assembly; ```asm; .L7:; vmovapd ymm3, ymm13; vmovapd ymm2, YMMWORD PTR [rbp-400]; add rax, 32; vgatherqpd ymm0, QWORD PTR [rcx+ymm1*8], ymm3; vpaddq ymm1, ymm1, ymm11; vmovapd YMMWORD PTR [rbp-272], ymm0; vmovapd YMMWORD PTR [rbp-240], ymm0; vfmadd132pd ymm0, ymm2, YMMWORD PTR [rax-32]; vmovdqa YMMWORD PTR [rbp-208], ymm1; vmovapd YMMWORD PTR [rbp-400], ymm0; cmp rax, rbx; jne .L7; ```; which makes the vectorized code perform just as well as the scalar code, iterators could also be used for the other variables but that would start to hurt readability without improving the performance much. _Note: There is also a chance the compiler (gcc) is not doing this kind of optimization because of the way I wrote the code..._. **So we need AoS to avoid losing performance in lightweight numerics classes.**. Before we look into the impact of not using SoA in the gradient and limiters routines let me tell you there is a way to have the best of both worlds, enter the *_array of structures of arrays_* or as I like to call it zig zag storage, aka a right mess.; Imagine an AoS of short arrays of SIMD length, e.g. `{ {u0 u1 u2 u3} {v0 ... v3} {w0 ... w3} {u4 u5 u6 u7} ... }` with that it is possible to fully vectorize point loops as the first index (iPoint) is contiguous in groups of SIMD length and when looping along variables and dimensions in edge loops the stride is small enough (equal to SIMD length) to trigger hardware prefetching.; The catch is that we need even more integer a",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:12416,variab,variables,12416,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['variab'],['variables']
Modifiability,"Very nice job, Tim. I can report that it works fine for me on Mac and a linux cluster. One suggestion to make our transition easier: if you agree, can you please add a 'bootstrap_meson' file in the root that will set up the build system like our current 'bootstrap' script? I am thinking just something like:; ```; git submodule update --init --recursive; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; since I found that I usually need to get meson and ninja on my systems. This should also be familiar to folks given our current workflow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-516687563:378,config,configure,378,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-516687563,1,['config'],['configure']
Modifiability,Volume-averaging by extending MARKER_INTERNAL to support volume elements?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1894:20,extend,extending,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/1894,1,['extend'],['extending']
Modifiability,"Wally,; Could please share the config file and point to the grid that you used?; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/651#issuecomment-464361840:31,config,config,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/651#issuecomment-464361840,1,['config'],['config']
Modifiability,"Was playing around with the turbomachinery cases with the new multi-zone config. I like the new changes, makes it much clearer!. Just a remark, don't know if this is on purpose, but for the configuration parameter TURBOMACHINERY_KIND, you still need to supply them in the general configuration file for both zones (so in case of a two zone problem: TURBOMACHINERY_KIND = CENTRIFUGAL CENTRIFUGAL). Wouldnt it make more sense to have this per zone specified in the respective configuration file?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/715#issuecomment-514208185:73,config,config,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/715#issuecomment-514208185,8,['config'],"['config', 'configuration']"
Modifiability,"We are compiling those combinations we may well make them available, best I; can due is issue warnings. On Mon, 23 May 2022, 14:43 Nijso, ***@***.***> wrote:. > ***@***.**** commented on this pull request.; > ------------------------------; >; > In Common/include/option_structure.hpp; > <https://github.com/su2code/SU2/pull/1646#discussion_r879473183>:; >; > > + * \param[in] SA_Options - Selected SA option from config.; >; > + * \param[in] nSA_Options - Number of options selected.; >; > + * \param[in] rank - MPI rank.; >; > + * \return Struct with SA options.; >; > + */; >; > +inline SA_ParsedOptions ParseSAOptions(const SA_OPTIONS *SA_Options, unsigned short nSA_Options, int rank) {; >; > + SA_ParsedOptions SAParsedOptions;; >; > +; >; > + auto IsPresent = [&](SA_OPTIONS option) {; >; > + const auto sa_options_end = SA_Options + nSA_Options;; >; > + return std::find(SA_Options, sa_options_end, option) != sa_options_end;; >; > + };; >; > +; >; > + const bool found_neg = IsPresent(SA_OPTIONS::NEG);; >; > + const bool found_edw = IsPresent(SA_OPTIONS::EDW);; >; > + const bool found_bsl = !found_neg && !found_edw;; >; >; > ⬇️ Suggested change; >; > - const bool found_bsl = !found_neg && !found_edw;; >; > + const bool found_bsl = !found_neg && !found_edw;; >; > + const bool found_ft2 = IsPresent(SA_OPTIONS::FT2);; >; > +; >; > + if (found_neg && !found_ft2) {; >; > + SU2_MPI::Error(""Negative and NOFT2 were both selected but are incompatible. Please choose only one."", CURRENT_FUNCTION);; >; > + }; >; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/1646#pullrequestreview-981793059>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN33ZH2GAQODQZ7M2BLVLODOVANCNFSM5WSMMMUA>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1646#issuecomment-1134822257:414,config,config,414,https://su2code.github.io,https://github.com/su2code/SU2/pull/1646#issuecomment-1134822257,1,['config'],['config']
Modifiability,We can already output all LUT and MLP variables using ; ```; LOOKUP_NAMES= Beta_ProgVar; VOLUME_OUTPUT= LOOKUP; ```,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2303#issuecomment-2169371185:38,variab,variables,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/2303#issuecomment-2169371185,1,['variab'],['variables']
Modifiability,"We can compute the HBoperator alternatively without using the complex; variables too for now by replacing the routine if fixing this issue is; complex so that we have a working version of HB. Complex numbers and; vectors are used for elegance but I agree with Francisco that getting the; code compiled without any issues is more important. We can keep it; commented for now and I'll push the updated subroutine soon for a working; version of HB and make sure that it is compiled without errors on Mac. Thanks,; Sravya. On Sat, Nov 12, 2016 at 7:24 AM, Tim Albring notifications@github.com; wrote:. > From what I see there is no easy way to resolve this. The problem is that; > the multiplication operator of the complex type in LLVM uses copysign which; > is a function that only excepts double and int... so that means it is not; > possible to instantiate complex with anything else than these types ...; > from my point of view it is not a very smart design decision. We should; > maybe enable the code section depending on the compiler. A possible; > solution would be to implement our own operators, which we would directly; > in codi then.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > https://github.com/su2code/SU2/issues/319#issuecomment-260128156, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AHenIObXD9Yd0margHrl2xNq7641i7uWks5q9doigaJpZM4KYAX3; > .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/319#issuecomment-260167765:71,variab,variables,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/319#issuecomment-260167765,1,['variab'],['variables']
Modifiability,"We have created a new structure for the documentation for version 7:; https://su2code.github.io/docs_v7/ . We need some help from all of you. Please go through the files, check for typos, deprecated config options, add comments, and so on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/775#issuecomment-547996411:199,config,config,199,https://su2code.github.io,https://github.com/su2code/SU2/issues/775#issuecomment-547996411,1,['config'],['config']
Modifiability,We have moved to an adaptive CFL functionality in the place of our old CFL ramp feature (see the config_template.cfg file for more details on its usage).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/124#issuecomment-102149500:20,adapt,adaptive,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/124#issuecomment-102149500,1,['adapt'],['adaptive']
Modifiability,"We have quite a few common booleans we use in many places of the code.; Some of them are very simple, like checking for compressible vs incompressible, or for FSI.; But when we want to express something more complicated like is it SA or SST, is the mesh moving or deforming, is this FEM or FVM or FEA, and so on, things are not so simple anymore and we end up with long conditionals repeated in many places. Since that logic is all built up from data in config I propose that we create a custom type akin to a bit-field that we can get from config and query whatever flag we want.; We move all the logic of setting up / updating this object to the config so that for example this:; ```; unsigned short Kind_Solver = config->GetKind_Solver();; bool flow = ((Kind_Solver == DISC_ADJ_EULER) ||; (Kind_Solver == DISC_ADJ_RANS) ||; (Kind_Solver == DISC_ADJ_NAVIER_STOKES) ||; (Kind_Solver == ADJ_EULER) ||; (Kind_Solver == ADJ_NAVIER_STOKES) ||; (Kind_Solver == ADJ_RANS));; ```; Can become `bool flow = config->GetFlags().flow();`, or similar. If we move this kind of logic to a separate object we can possibly make the config lighter, not so many methods etc.; This flags class can be absolutely tiny if the bits are packed (8 times tinier than storing bools).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/770:454,config,config,454,https://su2code.github.io,https://github.com/su2code/SU2/issues/770,6,['config'],['config']
Modifiability,"We were discussing the failing discrete adjoint test case in this PR earlier today in the dev call (which seems a little odd). It may be worth disabling the CFL adaption features altogether in Config::SetPostprocesing() when running the discrete adjoint, since it does not make much sense given that we record just a single primal iteration. We should also then check that the CFL number used in that iteration makes sense (initial value vs final value in the primal.. prob makes sense to use initial to be conservative).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-673026393:161,adapt,adaption,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-673026393,2,"['Config', 'adapt']","['Config', 'adaption']"
Modifiability,"We will merge this PR next in order to have enough time for testing and for you to solve conflicts (if you need any help to solve those, please contact me). Even if this PR is merged, please continue to give feedback on the usability. We will still continue to work on that. Refer to the user documentation in order to learn how to adapt your config files. Let me know if you have any questions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534522241:332,adapt,adapt,332,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534522241,4,"['adapt', 'config']","['adapt', 'config']"
Modifiability,We would love the option to use multipoint optimization in combination with our existing INC_RANS primal and discrete adjoint config file. We would love to see config options for incompressible settings available in the config file. (MULTIPOINT_INC_VELOCITY_INIT in particular.). We have tried hardcoding values (INC_VELOCITY_INIT in particular) in functions.py and gradients.py. This was an effort to essentially create a multipoint optimization using INC_RANS. However this method led SU2_DEF to ouptut a defective mesh. We have not yet found a workaround for this issue. . INC_RANS has proved robust and quick to converge for our application. We would love to be able to use it for multipoint!`,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/912:126,config,config,126,https://su2code.github.io,https://github.com/su2code/SU2/issues/912,3,['config'],['config']
Modifiability,"Well thats not really an issue. Its just a conceptual thing. Usually what you want to do with an container is to run something from the outside like; ```; ./container_binary <arguments>; ```; or to be more specific, like I did with the singularity container; ```; ./su2.sif SU2_CFD configfile; ```; This way you can also run the python scripts; ```; ./su2.sif parallel_computation.py -f configfile; ```; This works well in serial, however, if you want to run it in parallel you probably should use mpirun from the host system (actually I have no idea what happens if you run mpirun inside of the container, but I am pretty sure that it won't work properly on a cluster). But: at the moment the python scripts do exactly that at the moment, they call the binaries using mpirun in the container.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/747#issuecomment-516786129:282,config,configfile,282,https://su2code.github.io,https://github.com/su2code/SU2/issues/747#issuecomment-516786129,2,['config'],['configfile']
Modifiability,"What about clusters?. On Wed, 28 Aug 2019, 12:02 Tim Albring, <notifications@github.com> wrote:. > The standard way should use pkg-config. I see that pastix and BLAS both; > provide the required files. Should be quite easy actually to add them.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/771?email_source=notifications&email_token=AJCOXN4ND46DXNDEFQ4OSW3QGZLLRA5CNFSM4IPIUEI2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5KXNVQ#issuecomment-525694678>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AJCOXN67TTZLU5O6XIAYUHDQGZLLRANCNFSM4IPIUEIQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-525701307:131,config,config,131,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-525701307,1,['config'],['config']
Modifiability,"What advantages does meson provide over Cmake? I have experience with CMake, but not with meson. @talbring I'm not sure what you mean by ""the syntax is also not very comfortable and it has too many features which we actually don't need."". I recently did a survey of the some of the most popular open-source C++ libraries, both inside and outside and outside of scientific computing. The most popular build system was CMake (60% of the 15 open source libraries). If ""everyone else"" is using CMake, then why should we use meson? I'm not trying to be adversarial. I'm curious about why meson is better. Is the syntax simpler? Is meson more flexible? Is it more robust during changes? Is it faster?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-498827230:637,flexible,flexible,637,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-498827230,2,['flexible'],['flexible']
Modifiability,"What are the objective functions that are available with Turbomachinery for the adjoint solver? The test case ""disk_adj_turbomachinery/transonic_stator_2D"" does not work with the python script:. `$ shape_optimization.py -g DISCRETE_ADJOINT -f transonic_stator_2D.cfg`. and shows the following error:; ```; File ""/home/baigan/SU2/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'ENTROPY_GENERATION'; ```; If I change the objective function to DRAG then this error disappears but then it won't support the constraint for FLOW_ANGLE_OUT. Is ENTROPY_GENERATION supported for Turbomachinery or not?. I generated the FFD mesh using DV_KIND=FFD_SETTING and then changed to FFD_CONTROL_POINT_2D with the new mesh. A discrete adjoint run of SU2_CFD_AD seems to converge nicely. But how can I manually go through the process of generating config files for SU2_DOT / SU2_DEF to get the next deformed shape and what is the sequence they must be run if the python script is not working?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889:884,config,config,884,https://su2code.github.io,https://github.com/su2code/SU2/issues/889,1,['config'],['config']
Modifiability,"What do you mean by logically related? [Compressible / Incompressible / Turbulent] solver+variable+numerics+output ?; I think having the top level of folders following the class hierarchy is helpful to someone who is trying to follow the code execution for the first time.; Maybe we can have some subdirs for specific physics in /solvers /variables and /output (similar to what I did with /numerics to keep a compromise between the old file structure and the new)?; I would not mind merging Common and SU2_CFD now that there are descriptive sub-directories for geometry, solvers, etc. I'm not sure if linking everything into just one library is a good idea though (e.g. is it going to make the binaries much larger?).; We should perhaps then move the applications to a separate folder ""SU2_APPS"" where we would put CFD, DEF, DOT etc.; I don't mind having hpp's and cpp's together as we have a fair bit of implementation also in header files, I guess most IDE's have filters to separate them if folks prefer to see them that way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-630724704:90,variab,variable,90,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-630724704,2,['variab'],"['variable', 'variables']"
Modifiability,"What should the default value of RefElemLength in the code below be? The comment says it is 0.1 but the code says 1.0, which are inconsistent. ```cpp; /*--- Length based parameter for slope limiters uses a default value of; 0.1m ---*/. RefElemLength = 1.0;; if (SystemMeasurements == US) RefElemLength /= 0.3048;; ```; https://github.com/su2code/SU2/blob/9f082de9b9090188a820688cd30458da0fce5661/Common/src/CConfig.cpp#L4696. For shape optimization, when I set ADJ_SHARP_LIMITER_COEFF to default (3.0) and set SENS_REMOVE_SHARP to YES, surface sensitivity becomes zero within fairly large distance from the sharp edges. The cutoff distance is defined by the product of ADJ_SHARP_LIMITER_COEFF (AdjSharp_LimiterCoeff) and RefElemLength, so RefElemLength seems to be too large. https://github.com/su2code/SU2/blob/9f082de9b9090188a820688cd30458da0fce5661/SU2_CFD/src/solvers/CDiscAdjSolver.cpp#L488. Because of this, I'm assuming that the default value of RefElemLength should have been 0.1 instead of 1.0. However, I realized that RefElemLength is used by the slope limiters as well, and I'm currently not sure about the impact of changing this variable. I am investigating myself but if someone knows the intent of this variable or the implementation of the slope limiters, I would like to ask for your help before I open PR.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1830:1144,variab,variable,1144,https://su2code.github.io,https://github.com/su2code/SU2/issues/1830,2,['variab'],['variable']
Modifiability,"When I enter the ""shape_optimization.py -f unsteady_naca0012_opt.cfg"" in the commend the error is:; ```; Traceback (most recent call last):; File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 116, in <module>; main(); File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 34, in main; shape_optimization( options.filename ,; File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 51, in shape_optimization; config = SU2.io.Config(filename); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\io\config.py"", line 88, in __init__; super(Config,self).__init__(*args,**kwarg); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_bunch.py"", line 83, in __init__; super(OrderedBunch,self).__init__(*args,**kwarg); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_dict.py"", line 48, in __init__; self.__update(*args, **kwds); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_dict.py"", line 174, in update; for key, value in other:; TypeError: 'NoneType' object is not iterable; ```; When I enter the ""parallel_computation.py -f turb_naca0012.cfg -n NP in the commend the error is:; ```; Traceback (most recent call last):; File ""C:\Users\74351\Desktop\SU2\SU2\bin\parallel_computation.py"", line 110, in <module>; main(); File ""C:\Users\74351\Desktop\SU2\SU2\bin\parallel_computation.py"", line 53, in main; raise Exception(""No config file provided. Use -f flag""); Exception: No config file provided. Use -f flag; ```; Any solvers related to "".py"" cannot be executed, but I can run any cases with SU2_CFD. So I wonder if this situation is a problem with the Python Wrapper? . I will be very appreciated if I could get some feedback on this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1567#issuecomment-1074910200:475,config,config,475,https://su2code.github.io,https://github.com/su2code/SU2/issues/1567#issuecomment-1074910200,10,"['Config', 'config']","['Config', 'config']"
Modifiability,"When I run a mixing-layer problem with periodic boundary conditions, I get a segfault while saving the file. I checked out the most recent develop branch, and I get the same problem. It may be that I messed up the periodic boundary conditions. I'm still learning how to use them in SU2, and I may have made a mistake. But even if my *.cfg files are set up wrong, I should get a runtime error message, not a segfault. I did a brief check and it looks like `SU2_MSH` is doing its job in generating the correct periodic BCs. Valgrind says that there's a lot of invalid reads in `COutput::SortOutputData`, which terminate in a segfault. I'm attaching the valgrind output, in case you want to look at it. #### Steps to reproduce; 1. Build SU2 with parallel support.; 1. Put the attached grid, `mixing_MSH.cfg` and `mixing_CFD.cfg` files into the same folder.; 2. Run `SU2_MSH mixing_MSH.cfg`.; 3. Run `SU2_MSH mixing_CFD.cfg`. I've also attached my config output, so you can see what my setup is like. Here's the files: ; [PeriodicSegfault.tar.gz](https://github.com/su2code/SU2/files/1257883/PeriodicSegfault.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431:944,config,config,944,https://su2code.github.io,https://github.com/su2code/SU2/issues/431,1,['config'],['config']
Modifiability,"When I try to build with Metis 5 I get the following error : ; ../src/geometry_structure.cpp:4994:101: error: cannot convert 'int_' to 'idx_t_ {aka long int_}' for argument '1' to 'int METIS_PartMeshNodal(idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, real_t_, idx_t_, idx_t_, idx_t_, idx_t*)'; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);. the other problem is that you are using metis static (libmetis.a ) instead of libmetis.so (shared). that' s a problem when you try to package SU^2 for a Linux distribution like Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/19:683,config,configure,683,https://su2code.github.io,https://github.com/su2code/SU2/issues/19,3,['config'],['configure']
Modifiability,"When SU2 creates an inlet profile file, the values in the file are set to 0.0, expect for the vertex coordinates. The values used to be initialized from MARKER_INLET in the config file. Any particular reason this initialization disappeared? I propose to add this again, and also to add a line to inlet.dat with the names of the variables in the columns so it's easier for users to see what's in the columns.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1265:173,config,config,173,https://su2code.github.io,https://github.com/su2code/SU2/issues/1265,2,"['config', 'variab']","['config', 'variables']"
Modifiability,"When compiling SU2, it appears the LAPACK can be used for some linear solver routines. There's a optional compile flag `--with-LAPACK-lib` and a `LAPACK support: no` readout. There's even a comment in the configure.ac file: `LAPACK connection added by Teus van der Stelt, 11/13/2014`. However, I can't find any code at all that uses LAPACK. At least, there aren't any sections that switch on with `HAVE_LAPACK`. Am I missing something? Was this removed at some point? Is there a branch that does have this integration?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/478:205,config,configure,205,https://su2code.github.io,https://github.com/su2code/SU2/issues/478,1,['config'],['configure']
Modifiability,"When running discrete_adjoint.py (or shape_optimization.py with a discrete adjoint method) for the test case steady_inverse_design, the value of the adjoint variables at the first iterations is already O(1e-10) and after a while the following message is printed on screen:. CSysSolve::FGMRES(): system solved by initial guess. This problem does not occur when using other objective functions or a continuous adjoint method. P.S. I am using SU2 v 6.0.0.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/515:157,variab,variables,157,https://su2code.github.io,https://github.com/su2code/SU2/issues/515,1,['variab'],['variables']
Modifiability,"When using `srun` version 15.08.7 `parallel_computation.py` launches `-n` instances of my SU2 call rather than one instance of SU2 with `n` processes. This does not happen with `srun` version 2.6.5. I fixed this issue by commenting out the line in `interface.py` that calls `srun` if a SLURM jobID number is in the environment variables. This causes `parallel_computation.py` to call `mpirun`, which works as expected.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/469:327,variab,variables,327,https://su2code.github.io,https://github.com/su2code/SU2/issues/469,1,['variab'],['variables']
Modifiability,"While I believe the velocity transfer is the way to go for adjoints and accuracy especially in incompressible flow, it should be possible to cater to both needs by basing the flow solver flow traction malarkey on Marker deform mesh, instead of marker fluid load.; Which would possibly make the setup easier as well.; If we want the flexibility to have fluid load markers independent of mesh deformation deformation, we may need a ""yet another config knob"".; One aspect to consider is that the displacement coming from python might be a forced motion, and so the consistency argument no longer matters.; Perhaps what we need, is a way to tell for which boundaries the velocity is known or not.; If the velocity is not known, it could be computed by finite differences at the interface and made part of the velocity-elasticity problem.; This would allow the forced motions to work together with FSI.; If the velocity is not known for any boundary, it is orders of magnitude quicker to compute it by finite differences. Sorry for the soliloquy, but I think all y'all get what I'm sayin'",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778391020:443,config,config,443,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778391020,1,['config'],['config']
Modifiability,"While `SU2_CFD` has been made to use binary restart files by default, the `SU2_MSH` code has not been updated to be compatible with binary restarts. If a grid adaptation strategy requires a solution (as in `GRAD_FLOW`), then `SU2_MSH` tries to read from the restart file. This is handled by `CGridAdaptation::GetFlowSolution`. If you look into the code, you'll notice that it's still set up for ASCII restart files. There's no check for binary restarts, and no ability to load a binary restart. The code tries to read the binary file as an ASCII file without complaint. A brief check on my part confirmed that ASCII restart files work with `SU2_MSH`, but binary restart files do not. This bug results in errors that are not caught by the program, as seen in Issue #606.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/610:159,adapt,adaptation,159,https://su2code.github.io,https://github.com/su2code/SU2/issues/610,1,['adapt'],['adaptation']
Modifiability,"While `unsigned short* CPhysicalGeometry::Local_to_Global_Marker` and `Global_to_Local_Marker` are currently not in use, I think that they should be filled with sensible content rather than being removed. The data seems to be already available in `CPhysicalGeometry::LoadSurfaceElements` with the local variables; - `vector<unsigned long> Marker_Local` and ; - `unordered_map<unsigned long, unsigned long> Marker_Global_to_Local`. I'd like to implement this change. Before that, let's discuss the following questions: Do you think that marker IDs (often called `iMarker`) should be `unsigned short` or `unsigned long` (this is inconsistent across the code)? Should the above data structures be arrays (with some special code for ""this global index does not correspond to a local index"") or maps/lists? I'd prefer the latter, respectively.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1110#issuecomment-762047231:303,variab,variables,303,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110#issuecomment-762047231,1,['variab'],['variables']
Modifiability,"While doing some simulations with the version 6.2.0, I found a strange behaviour on the pressure field.; The test case is a naca0012 at AoA=0°, M=0.7, Re=9e6.; When running with SST turbulence model, the pressure field in the ""boundary layer region"" is not constant. Using SA turbulence model, this behaviour is not shown. It looks like the tubulent kinetic energy field affect the computation of pressure field, leading to a non zero gradient pressure at wall, as shown in the attached figures:. In the figures it can be seen a comparison between the in-house solver of the Italian Aerospace Research Center (CIRA), where SST model is implemented, and SU2 using both available turbulence models, SST and SA. The isolines represent the pressure field and the contour is the TKE field obtained with SU2 with SST. In particular, solid red line is CIRA solver, the solid black line is SU2-SST, and dashed black line is SU2-SA. Near the LE where TKE is 0, the isolines are similar and 0 pressure gradient at the wall is obtained with both turbulence models. When TKE starts to grow, the pressure computed with SU2-SST shows a non constant behaviour and at the wall has non 0 gradient. Furthermore, in the wake region the defect is more evident. Leading edge detail:; ![cp_tke_detail_Le](https://user-images.githubusercontent.com/36844965/66407922-53448b00-e9ee-11e9-877d-88ace3a222fb.png). Detail at 30% of the chord length:; ![cp_tke_detail_1](https://user-images.githubusercontent.com/36844965/66407921-53448b00-e9ee-11e9-8a22-87106066984b.png). Wake region detail:; ![cp_tke_detail_wake](https://user-images.githubusercontent.com/36844965/66407920-53448b00-e9ee-11e9-92ad-b770e0ac5743.png). Has anyone found previously this behaviour? Could it depend on the set up that I have used? . I attach the grid and configurations files.; [grid_and_conf_files.zip](https://github.com/su2code/SU2/files/3703135/grid_and_conf_files.zip). Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797:1806,config,configurations,1806,https://su2code.github.io,https://github.com/su2code/SU2/issues/797,1,['config'],['configurations']
Modifiability,"While working on #718 it was brought to my attention by @economon that CTurbSolver makes its own interpolation / reconstruction of bulk flow variables when computing the convective fluxes. This is mentioned in #403 and #422 but my concern is different. This reconstruction is not consistent with the one used by the flow solver (except in some very special circumstances) which means the convective fluxes considered for the turbulence variables do not respect the discretized continuity equation. Now, have I missed something and this is being compensated by some source term?; If I have not missed anything, I think the solution is relatively straight forward, one simply stores the convective fluxes computed in CEulerSolver::Centered/Upwind_Residual to later use in CTurbSolver. I would be happy to implement this but do let me know if I got something wrong folks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/721:141,variab,variables,141,https://su2code.github.io,https://github.com/su2code/SU2/issues/721,2,['variab'],['variables']
Modifiability,"While working on the turbo features Salvo and I noticed that there is currently a problem with the order of the communication (i.e. the order in which we loop through the SEND_RECEIVE markers.). In the code we always have loops like this. ```; for (iMarker = 0; iMarker < config->GetnMarker_All(); iMarker++) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. This way the send/receive involving the periodic boundaries is always done **before** the send/receive involving the boundaries related to the parallel partitioning (this is because the periodic structure is created before the partitioning is done). Hence the wrong values are send to the periodic ghost cells. An easy solution is to change the order of the loop, i.e. ```; for (iMarker = config->GetnMarker_All() - 1; iMarker >= 0; iMarker--) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. Since I am not completely sure whether this is a valid solution (I dont know if this gives performance issues or will break something else) I opened this as an issue. Related to this I would also suggest to maybe implement a general send/recv routine that every class can use, because all these SendReceive_\* and Set_MPI_\* routines do essentially the same at the moment (just with different data).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/252:272,config,config,272,https://su2code.github.io,https://github.com/su2code/SU2/issues/252,6,['config'],['config']
Modifiability,Will it be a good idea to provide the optional control of these under-relaxation parameters to the users in configuration (.cfg) file? (ANSYS-Fluent does have such controls). It may be useful sometimes.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-543913900:108,config,configuration,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-543913900,1,['config'],['configuration']
Modifiability,"With the address sanitizer it gets stuck writing the binary restart file. When I terminate, I get:; ^CTraceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 280, in run_command; return_code = proc.wait(); File ""/usr/lib64/python2.7/subprocess.py"", line 1099, in wait; pid, sts = _eintr_retry_call(os.waitpid, self.pid, 0); File ""/usr/lib64/python2.7/subprocess.py"", line 125, in _eintr_retry_call; return func(*args). I thought SU2 exclusively used python3? It registers as compiled with python3 (Program python3 found: YES (/bin/python3)).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-623683360:400,config,config,400,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623683360,1,['config'],['config']
Modifiability,"With this (very small) change, users can quickly change the system command used by the python scripts to launch parallel jobs without making any modifications to the code. ; Example:; (bash); export SU2_MPI_COMMAND=""mpiexec -n %i %s"". NOTE:; SU2_MPI_COMMAND must contain '%i' and '%s', in that order, which will be replaced with the number of processors and the SU2 command (ie, 'SU2_CFD config.cfg') respectively.; If this environment variable exists in the workspace, whatever is in it will be used instead of the default options. This should allow things like nonstandard mpi launchers, additional arguments like hostfiles, etc.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/335:388,config,config,388,https://su2code.github.io,https://github.com/su2code/SU2/pull/335,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"With this (very small) change, users can quickly change the system command used by the python scripts to launch parallel jobs without making any modifications to the code.; Example (for bash shell):; export SU2_MPI_COMMAND=""mpiexec -n %i %s"". NOTE:; SU2_MPI_COMMAND must contain '%i' and '%s', in that order, which will be replaced with the number of processors and the SU2 command (ie, 'SU2_CFD config.cfg') respectively.; If this environment variable exists in the workspace, whatever is in it will be used instead of the default options. This should allow things like nonstandard mpi launchers, additional arguments like hostfiles, etc.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/336:396,config,config,396,https://su2code.github.io,https://github.com/su2code/SU2/pull/336,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"Wonderful contribution. Thanks for doing all that. Streamlining the dev process is very helpful and cmake is definitely becoming a standard. Best,. Juan. On Nov 10, 2019, at 11:24 AM, Daumantas Kavolis <notifications@github.com> wrote:. ﻿; Proposed Changes. Added CMake build support for SU2. With this, many popular IDEs will be able to use SU2 as a project with minimal setup. CMake also enables to add dependencies more easily since most libraries have CMake support. vcpkg is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use preconfigure.py anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is ${CMAKE_PREFIX_PATH}/bin. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile pySU2ad with Nothing known about namespace 'medi' in Common/include/mpi_structure.hpp:57 without -includeall SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing using namespace declarations and either importing used symbols explicitly with using or prepending namespace name, clang-tidy warns against them by default and it makes the code clearer. SU2 CMake options are:. * Build modules:; * SU2_BUILD_CFD: ON|OFF; * SU2_BUILD_DEF: ON|OFF, disabled when building with Codi; * SU2_BUILD_DOT: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_GEO: ON|OFF, disabled when building with Codi; * SU2_BUILD_MSH: ON|OFF, disabled when building with Codi; * SU2_BUIL",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:1020,config,configurable,1020,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,2,['config'],['configurable']
Modifiability,"Would it be possible to add a 3D example of RANS, SST model with wind tunnel (6 walls) and an obstacle to simulate wind flow?. Ultimately I'd like to see how to retrieve resulting pressures on a surface from the model, after providing inlet flow. I've tried adapting Multiphysics FSI 2D model with no luck, too many possible input issues on my end, and the SU2_CFD executable reports no errors when loading config, just finishes with no output or results. Meshes I've tried were generated from GMSH (tets for wind tunnel volume and tri for obstacle as a planar surface). I'm a new user so please excuse my lack of knowledge using SU2. An example would be great help! Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2261:258,adapt,adapting,258,https://su2code.github.io,https://github.com/su2code/SU2/issues/2261,2,"['adapt', 'config']","['adapting', 'config']"
Modifiability,Would it be possible to make available the Gmsh mesh and the config file?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533#issuecomment-388532268:61,config,config,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/533#issuecomment-388532268,1,['config'],['config']
Modifiability,"YES! I am excited to try this out. I can probably test it on some of the other TMR cases (airfoils, flatplates). Will post the results when I get those done. . Side note, there was one issue that @bmunguia and I encountered when performing optimizations with adaptive CFL. Say the DIRECT simulation is run with adaptive CFL and is well converged (6 to 8 orders of residual reduction). When the discrete adjoint performs the one direct iteration to store the computational graph, it uses the initial CFL value, not the CFL that the adaptive CFL routine ended at. This results in the residuals being very high for that one iteration, which then affects the convergence of the discrete adjoint. . I will try to run an adjoint on one of these cases as well to see if the problem persists. Perhaps could be overcome with a simple additional field for CFL in the restart meta-data",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-531520526:259,adapt,adaptive,259,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-531520526,6,['adapt'],['adaptive']
Modifiability,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619584815:9,config,config,9,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815,4,"['adapt', 'config']","['adaptation', 'adaptations', 'config']"
Modifiability,"Yeah, I also tried the Roe case which actually gives more strange numbers (1.7 Pa), but by the way these are only tutorials. regarding the Reynolds number, that's correct, lowering density will also lower the Reynolds number. But reducing the Mach number (and thus free-stream speed) is also a way. The thing is that the HLLC solver I'm testing works pretty well for the supersonic wedge (an also for others) but suffers a lot this test case (computation explodes at first iteration). ; Can we think about changing the config file a little bit (perhaps changing the fluid)? Is there a particular reason why the HLLC solver is needed here?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-181892267:519,config,config,519,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-181892267,1,['config'],['config']
Modifiability,"Yeah, so there was a comment left here from someone saying a root-finding method was needed to compute rhocvve in this case. Closer look, it isn't since you assume you already have vib temp and can compute Eve. I used the setTDStatePTTv which seems to give all values needed to initialize. There are likely some bugs there but I can work through that. . A few follow on Qs:; - Why at line 2238 there is a call to conv_numerics to set values based on node_infty. Should that not be based on node_inlet? I think we should be passing dPdU, etc., for the inlet state we just computed. What's the best way to do that if so?; - What is the best way here to reference fluid model? Is what I have right, or am I missing something?; - Since mass fraction is a necessary input for the supersonic_inlet, will we need a different config option for nemo vs the standard air solver?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1370206942:818,config,config,818,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1370206942,1,['config'],['config']
Modifiability,"Yeah, sorry, bad wording from my side. The standard version of SU2 used the value of CDkw as value of the cross-diffusion term in the residual computations. Thus, I think I should revert to that formulation. Regarding the CDkw, it's implementation in SU2 was made such that the exponent of the epsilon term was equal to minus the production limiter constant of the model. Thus 20 for SST1994 and 10 for SST2003. Is it just a coincidence in the model formulation? In the original paper there is no mention of it being the same variable. This can lead to different results if someone changes the production limiter constant.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2284462041:526,variab,variable,526,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2284462041,1,['variab'],['variable']
Modifiability,"Yeah... It sounded more like an hardware limitation than a software implementation (mpi) issue. About the hybrid solver, you are running into load balancing issues (there are more threads than work packets, i.e. edge groups) it will be better for larger meshes, and maybe an 8x8 division works better than 4x16.; As you are using JST you can also try running at higher CFL to shift work to the linear solver which has no load balancing issues regardless of the group size parameter (the adaptive CFL mode may be necessary to get through the initial transient). Let us know if the new hardware solves the problem.; I will let you know via this issue when we have a release where the hybrid implementation might scale better on unstructured grids.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593573398:487,adapt,adaptive,487,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593573398,1,['adapt'],['adaptive']
Modifiability,"Yep, things seem to be passing just fine now, and it looks like things are coming along nicely for the turbomachinery features. Before we merge this in... I am a little concerned with the number of additions to solver_direct_mean.cpp related to the different switch statements and subroutines needed for the Riemann and non-reflecting BCs. Is there anything we can do to simplify things?. In addition, could you please clean up the spacing/style in those methods to match up with the other BCs (more comments are needed, indentation, variable declarations, etc.)? It would also be great to have a little more detail on how to use the new BCs in the descriptions in config_template.cfg. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/207#issuecomment-152406337:534,variab,variable,534,https://su2code.github.io,https://github.com/su2code/SU2/pull/207#issuecomment-152406337,2,['variab'],['variable']
Modifiability,Yes I get that now and I am doing it exactly like that. For this one I thought I leave it. I tried to do a rebase of my develop to remove older commits from this PR but then git was telling me it was not able to include all the following commits including merges etc so I aborted. . From now on for any fix I would branch every time anew from my develop (which is a copy of su2code +this PR). I also do the same for my own development and then merge any fix branches I need into that. If later you don't merge those fixes because that part of the code is revamped anyway I will bin that branch and redo it on top of your new structure as that would probably be better anyway and just in case I ever want to propose those own developments to su2code. I will watch and adapt. Hope that's fine for now but let me me if you want me to redo or rebase anything for this PR,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/927#issuecomment-612613571:767,adapt,adapt,767,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-612613571,1,['adapt'],['adapt']
Modifiability,Yes I know about the ONERAM examples. But the mesh files and config files do not match as their boundary conditions are different. Could you share your config file and meshed file to me regarding ONERAM ? ; Thank you.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/523#issuecomment-381731261:61,config,config,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/523#issuecomment-381731261,2,['config'],['config']
Modifiability,"Yes I use [`testing_symmetry_plane`](https://github.com/su2code/su2/tree/testing_symmetry_plane) which is up to date with develop otherwise. I used boolean config options to switch between things as follows:; ```; % Surf; YES=oldEuler; NO=NewEuler; VISUALIZE_SURFACE_DEF= YES. % YES=use toms fix; NO=do not use toms fix; (only active if NewEuler wall is used, i.e.VISUALIZE_SURFACE_DEF=NO); DEFORM_CONSOLE_OUTPUT=NO. % the following two are only really active for the NewEuler as there the numerics class is explicitly used; % YES=JST; NO=see VOLUME_DEF; MUSCL_ADJFLOW= NO; % Vol; YES=UpwRoe(default in develop then and now); NO=JST_BC; VISUALIZE_VOLUME_DEF= YES; ```; The most interesting comparison in my opinion is oldEuler (other options shouldnt matter) vs newEuler+JST_BC (with and without Toms fix) as these two should do pretty much the same thing. And now we know now pretty much that Toms fix actually ensures that :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-634591483:156,config,config,156,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-634591483,1,['config'],['config']
Modifiability,"Yes but it is being called on which solver? Don't forget there is one instance of DiscAdjSolver for the bulk flow and another for the turbulence, you are currently trying to get the value from solver_container[iZone][iInst][MESH_0][ADJTURB_SOL] so make sure RegisterVariables is called for this solver, you may be calling it for ADJFLOW_SOL instead, and that will still give you the right value of cb1 because it comes directly from the config. Edit: I would not mess around with pointers here... You can determine which solver object is being used at a given time by printing nVar to screen (which is 1 for SA and 4/5 for RANS).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-498429475:437,config,config,437,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-498429475,1,['config'],['config']
Modifiability,"Yes but it would be kind of you to check if a feature of a future release is going in the direction of what you need.; Compiled libraries would be easy to handle via pkg config.; But your choices of words sound a bit unfriendly so I honestly don't care, we can also close the issue until the next release.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645668805:170,config,config,170,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645668805,1,['config'],['config']
Modifiability,"Yes for MARKER_ROUGH, or MARKER_ROUGH_WALL to be clearer.; Or just WALL_ROUGHNESS as you have right now, since it would not really a marker, just the properties of markers (and I've seen some people on CFD online confused with similar naming e.g. MARKER_SHROUD). Regarding the MPI stuff, I had the following idea over lunch:; In CPhysicalGeometry::SetWallDistance we compute the closest distance, and in so doing we also get the mpi rank and markerID associated with the closest vertex.; So, before computing the wall distances you communicate the local marker ids and wall roughness's (via Allgather as you are doing now), with this info you can build a `unordered_map<pair<int,int>, su2double>` to map pairs of <rank,markerID> to the values of roughness.; Now when you loop over the points to compute the distances you can retrieve the roughness from this map instead of from config.; It's almost exactly the same as you have, but avoids using the config as a messenger between routines, and using a stl map should also make the code simpler. In the boundary conditions you can still get the marker roughness via the marker tag as you are doing now, and I guess the wall type (smooth / rough) can be inferred from having 0 (default) roughness (?); With the string+double list specification you also avoid having to specify 0 roughness and SMOOTH wall type for markers where you don't want to use this feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-630861158:878,config,config,878,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630861158,4,['config'],['config']
Modifiability,"Yes in the config, it's OUTPUT_FILES= RESTART_ASCII sorry",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2103#issuecomment-1679196656:11,config,config,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/2103#issuecomment-1679196656,1,['config'],['config']
Modifiability,"Yes it is inconsistent that's why it would need validation, the worst-case scenario is when your design variable is the thing the primal solver is manipulating to implement the fixed mode.; For example I'm pitching the wing (geometric AOA let's call it) the adjoint gives me a value for dCL / dalpha, but in practice this value is 0 because the primal solver does not allow the CL to change.; But doing the above would be dumb right, the validation question is what happens to the derivatives of other outputs? Is dCD / dalpha correct? I imagine this depends on the relation between CD and CL in this case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1030108842:104,variab,variable,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030108842,1,['variab'],['variable']
Modifiability,"Yes there is a `lapack.pc` file in each of those folders.; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ cat /usr/lib/pkgconfig/lapack.pc ; libdir=/usr/lib; includedir=/usr/include. Name: LAPACK; Description: FORTRAN reference implementation of LAPACK Linear Algebra PACKage; Version: 3.9.0; URL: http://www.netlib.org/lapack/; Libs: -L${libdir} -llapack; Requires.private: blas; ```; The output of `pkg-config openblas --version` is 0.3.8, but it shows a message as well:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ pkg-config openblas --version; pkg-config: --version specified with other options or module names, assuming --modversion.; 0.3.8; ```; I also installed using the same meson arguments on an Ubuntu system (Python v3.7.5, mpich v3.3.2) which did not need the `$PKG_CONFIG_PATH` variable to be set. So all this is a little confusing for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632009282:406,config,config,406,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632009282,4,"['config', 'variab']","['config', 'variable']"
Modifiability,Yes you need to have it in the fluid config file that produces the files you will use to restart. The files you have without grid velocities will not work... but the new ones will.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1287#issuecomment-843271165:37,config,config,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-843271165,1,['config'],['config']
Modifiability,"Yes, I agree that if this factor 100 should remain in the code, than it is the configuration file of the tutorial that should be modified with a lower turbulence intensity Tu to get the proper results. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1719#issuecomment-1191863697:79,config,configuration,79,https://su2code.github.io,https://github.com/su2code/SU2/issues/1719#issuecomment-1191863697,1,['config'],['configuration']
Modifiability,"Yes, I have activated the option for the force breakdown in my configuration file and currently running it. I'll update you with the findings I get.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1175#issuecomment-765907601:63,config,configuration,63,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175#issuecomment-765907601,1,['config'],['configuration']
Modifiability,"Yes, I plan to invest some time here and there to finish this, but, not everything here falls under my expertise. I am currently making CPBIncEulerVariable to inherit CFlowVariable (instead of CVariable). This should already remove some duplication.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2210#issuecomment-1945788025:159,inherit,inherit,159,https://su2code.github.io,https://github.com/su2code/SU2/pull/2210#issuecomment-1945788025,1,['inherit'],['inherit']
Modifiability,"Yes, I set separate markers. I don't think that mesh nodes aren't unchanged, but the edge topology is respected. You are right also when you refer to departure from the design shape (mostly driven by excessively big TRIAS on the surface; I suspect all the surface nodes still lay on the original, initialization surface mesh); there is still departure.; I tried to reduce the `PYADAP_HMAX` but as it affects all the mesh (including volume elements), in order to reach the desired refinement on the surface, the number of cells easily explodes. > If I set this limit to less than the average surface mesh cell size, will it attempt to refine everything over the limit instantly? Or will it only use the limit for 'new' cells that are generated during adaptation? Thanks for your thoughts. I believe it will affect all the mesh, but yet again, it may be also influenced by the numbers of `PYADAP_SUBITE` specified in the config file. It would be great to have different parameters for volume mesh dimensions and surface mesh dimensions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764931621:750,adapt,adaptation,750,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764931621,2,"['adapt', 'config']","['adaptation', 'config']"
Modifiability,Yes. Thank you all. I installed libopenmpi-dev and openmpi-common. I don't know which one is the key but I can see SU2_RUN and SU2_HOME environment variables displayed at the conclusion of configure.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513853762:148,variab,variables,148,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513853762,2,"['config', 'variab']","['configure', 'variables']"
Modifiability,"You are completely right... the description for OBJECTIVE_FUNCTION. % Objective function in optimization problem (DRAG, LIFT, SIDEFORCE, MOMENT_X,; % MOMENT_Y, MOMENT_Z, EFFICIENCY,; % EQUIVALENT_AREA, NEARFIELD_PRESSURE,; % FORCE_X, FORCE_Y, FORCE_Z, THRUST,; % TORQUE, TOTAL_HEATFLUX,; % MAXIMUM_HEATFLUX, INVERSE_DESIGN_PRESSURE,; % INVERSE_DESIGN_HEATFLUX, AVG_TOTAL_PRESSURE, ; % MASS_FLOW_RATE, ELLIPTIC_SPANLOAD, MAX_SECTIONAL_CL); OBJECTIVE_FUNCTION= DRAG. Is not accurate and introduces some level of confusion. . From the “average"" user point of view my experience is that they only use OPT_OBJECTIVE and thy don’t know that OBJECTIVE_FUNCTION exists. Could you please change ""Objective function in optimization problem” by something more accurate? In fact, we should maybe think on changing the keyword OBJECTIVE_FUNCTION itself. Best,; Francisco. > On Apr 22, 2017, at 5:19 PM, Heather Kline <notifications@github.com> wrote:; > ; > @fpalacios <https://github.com/fpalacios>, @economon <https://github.com/economon> - There's a comment in the config files that says that 'OBJECTIVE_FUNCTION' sets the objective function for the optimizer - however it seems that this option is only used with controlling the adjoint solver and output, and whatever the user specifies there will be overwritten by the optimizer. I put an alternative comment in the config_templates here; I can either revert that back or change the comment in all the config files (I have a script).; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/385#issuecomment-296410309>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AEpklinNXzQxD1nXZbsTUqsE6aPW6zEMks5rypkJgaJpZM4MgM_e>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-296417940:1055,config,config,1055,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-296417940,2,['config'],['config']
Modifiability,"You can override the command that is used to launch parallel jobs by setting the environment variable `SU2_MPI_COMMAND`. For example on our cluster I had to force it to use the usual mpi command with `export SU2_MPI_COMMAND=""mpirun -n %i %s""`, otherwise it tried to use `srun` which didn't work with our setup.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/469#issuecomment-345215874:93,variab,variable,93,https://su2code.github.io,https://github.com/su2code/SU2/issues/469#issuecomment-345215874,1,['variab'],['variable']
Modifiability,"You can replace the computation in python_wrapper_structure.cpp, the benefit of having a central definition outweighs the velocity divergence thing.; Also the way that method is used expects a reasonably converged solution, so it should not make a big difference.; Moreover that assumption for incompressible flow is not correct for variable density flows, so yes please replace it if you can.; I guess the TWO3 had a purpose in the end xD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-743119468:333,variab,variable,333,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-743119468,1,['variab'],['variable']
Modifiability,"You can restart after a small (or large) geometric change so long as the mesh topology is the same (the minimum requirement is probably that the number of points in the file be the same).; This is what happens when you use SU2_DEF to parameterize / deform the mesh. Yes one does need to be careful with the interpolation methods used for this, e.g. use the connectivity information of both meshes when looking for nearest neighbors to keep the runtime O(N).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/852#issuecomment-578516517:234,parameteriz,parameterize,234,https://su2code.github.io,https://github.com/su2code/SU2/issues/852#issuecomment-578516517,1,['parameteriz'],['parameterize']
Modifiability,You can show all available options for screen/history output by running `SU2_CFD -d config.cfg`,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2138#issuecomment-1738548219:84,config,config,84,https://su2code.github.io,https://github.com/su2code/SU2/issues/2138#issuecomment-1738548219,1,['config'],['config']
Modifiability,"You can use the --prefix option (most ""build from source"" software works; like that).; Do you know of a portable way to determine the user name?. On Mon, 11 May 2020, 21:04 Max Le, <notifications@github.com> wrote:. >; > -; >; > When installing SU2 from fresh or recompiling to update changes, the; > installation process always requires root permission to finish. The reason; > is that the binaries are installed in /usr/local/bin, which needs root; > access. The installation went well, it is just that I don't feel like; > entering root password everytime.; > -; >; > A way to go around this would be to have the binaries installed in the; > bin folder in the home folder, so on Linux that would be /home/user/bin.; > Even better, we can have it creates a separate SU2bin folder, where only; > the binaries from SU2 will be stored. Of course, doing this would change; > the environmental variables as well.; > -; >; > What do you all think? Is this too much hassle?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/979>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN3VS6AOUOBHLOHSCULRRBK6DANCNFSM4M6GX6DA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/979#issuecomment-626952122:104,portab,portable,104,https://su2code.github.io,https://github.com/su2code/SU2/issues/979#issuecomment-626952122,2,"['portab', 'variab']","['portable', 'variables']"
Modifiability,"You have to add that particular branch to the .travis.yml file.; See https://travis-ci.org/su2code/SU2/requests (Branch ""feature_STLwriter"" not included per configuration.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/748#issuecomment-526150574:157,config,configuration,157,https://su2code.github.io,https://github.com/su2code/SU2/issues/748#issuecomment-526150574,1,['config'],['configuration']
Modifiability,You only see changes on residuals that are -20 so I think you are ok.; Taking those variables from members to local variables may allow the compiler to re-order some stuff for optimization.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1923#issuecomment-1432346004:84,variab,variables,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/1923#issuecomment-1432346004,2,['variab'],['variables']
Modifiability,You should be able to use CConfig::SetFinestMesh in CDriver::Geometrical_Preprocessing_FVM to initialize this to the coarsest grid that was produced. The threshold to stop agglomeration should stay. But you can expose it as a config option if you want.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-907033127:226,config,config,226,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-907033127,1,['config'],['config']
Modifiability,You'll have to take out the tecplot output from the config https://github.com/su2code/SU2/actions/runs/5006027201/jobs/8971286794,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1551976585:52,config,config,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1551976585,1,['config'],['config']
Modifiability,"You're right about that bug with vel_i_corr. Thanks for finding it, I'll submit a correction. Yes, it's possible to modify the config file so that your implementation works. But is this simply masking the problem of reduced stability? Do you expect the direct formulation to be less stable? And do the benefits of the direct formulation make the loss of stability worthwhile? If so, then I think you should change the config file. I hope this answers your question, I'm not sure if I understood it correctly. Regards,; Daniel",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-182655391:127,config,config,127,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-182655391,4,['config'],['config']
Modifiability,"You've reminded me that there is an old python script (parse_config.py) which parses the c++ config structure code - I couldn't get it to run right away, but maybe you can update that script to generate your list automatically from the c++ code, and so not require much change (and also not require you to manually write out all the defaults). . Personally I think that we should keep the default definitions in the C++ as it is now, as this keeps the executables self-contained among other things. ; By the way, I think you meant SetConfig_Options().",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-377420170:93,config,config,93,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-377420170,1,['config'],['config']
Modifiability,"Yup, it is being called as far as I can tell. I've also put a print statement inside the registervariables method inside solver right after cb1_adj is registered with AD, and sure enough the screen outputs my statement along with the correct value of cb1_adj as read in from the config class.; Seems that only when we are inside the Iteration class and calling the solver method to return cb1_adj from solver it returns it as 0. Could it be an issue with the scope of cb1_adj? (I also tried making it a public variable inside the class but didn't make a difference).; Or perhaps instead of trying to get the _value_ of cb1_adj from solver, I need to get a pointer pointing to the memory address of cb1_adj, and pass _that_ onto numerics?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-498417564:279,config,config,279,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-498417564,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"ZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.D.Palacios@boeing.com|; | Dr. Thomas D. Economon, econ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16090,config,config,16090,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,"ZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; --------------------------------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:15955,config,config,15955,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,"[...]; > If either you or @frx-wintermute are interested in complementing the feature by adding an option to prefer system libraries (via pkg-config, no paths because 99.9% of users will not know what to do) instead of the versions shipped with SU2, please go ahead and open a PR. Hello @pcarruscag!. To be honest, my daydream is: I would love to see SU2 shipping nothing in 'externals/' (or just empty subdirectories such as 'externals/meson/' ); then those external dependencies are by default downloaded from external repositories or tar archives. This defaul behavior would be obtained by configuring with the './meson.py' script and then by building with './ninja'. But, if a user wants to build SU2 from source and prefers to use system-wide Meson and Ninja and system-wide versions of the external dependencies, it would be possible to avoid downloading these external dependencies. By running './preconfigure.py' with appropriate options, it would be possible to decide which external dependencies to **not** download. At that point, system-wide Meson and Ninja could be used to build SU2 from source. And the 'meson.build' file would do the following:. * for each required or enabled (at configure time) dependency **\<foo\>**, it would check whether it is found in 'externals/**\<foo\>**/'; if not, it would check whether it can be found as a system-wide installation (perhaps via pkgconfig); if not, it would exit with error; * for each dependency which is not required nor enabled at configure time, it would avoid using it at all. I think this daydream is achievable, and I hope that other people consider it as a useful goal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1646970778:142,config,config,142,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1646970778,4,['config'],"['config', 'configure', 'configuring']"
Modifiability,[WIP] Adding/extending SU2 to handle turbulence for NEMO.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1385:13,extend,extending,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/1385,1,['extend'],['extending']
Modifiability,[WIP] Enable the hover simulation for the Actuator Disk with Variable Load,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1648:61,Variab,Variable,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/1648,1,['Variab'],['Variable']
Modifiability,[WIP] Piperno slope limiter and more flexible MUSCL scheme,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050:37,flexible,flexible,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050,1,['flexible'],['flexible']
Modifiability,[WIP] Refactor Code Base,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1981:6,Refactor,Refactor,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/1981,1,['Refactor'],['Refactor']
Modifiability,[WIP]: Flamelet progress variable (FPV) model,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223:25,variab,variable,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223,1,['variab'],['variable']
Modifiability,"[WIP]; SU2-specific best practices (carried over from #1487). - Get rid of magic numbers in the code: enums (ongoing work) #1457 (and many others); - Get rid of magic numbers for variable indices: nDim+1, nDim+2, etc. #1392",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1218#issuecomment-1013365053:179,variab,variable,179,https://su2code.github.io,https://github.com/su2code/SU2/issues/1218#issuecomment-1013365053,1,['variab'],['variable']
Modifiability,"[case728.txt](https://github.com/su2code/SU2/files/5137616/case728.txt). What does:; ```; OPT_BOUND_UPPER= 0.0001; OPT_BOUND_LOWER= -0.0001; ```; achieve?. It shows the upper and lower bounds have been read:; `Lower and upper bound for each independent variable: [(-0.0001, 0.0001), (-0.0001, 0.0001), (-0.0001, 0.0001),...`. However, the max deformation of the FFD box never satisfies this limit. I am getting way more deformations than I want. The limit is only satisfied if I specify:. `OPT_LINE_SEARCH_BOUND=0.0001`; and shown by:; ```; SU2 is fixing the planes to maintain a continuous 2nd order derivative.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.000340635.; Out-of-bounds, re-adjusting scale factor to safisfy line search limit.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.0001.; ```. What is the intended purpose of upper and lower bound options and what is the correct way to use them?. Using SU2 v6.1.0. I don't think this part of the optimization script has changed in the newer version. Config is attached.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1069:253,variab,variable,253,https://su2code.github.io,https://github.com/su2code/SU2/issues/1069,2,"['Config', 'variab']","['Config', 'variable']"
Modifiability,"[flat plate test.zip](https://github.com/user-attachments/files/16321830/flat.plate.test.zip); @pcarruscag Hi Pedro, thanks for the help. I used your modified one to do a plat plate test, which could work without inlet profile, however, when I input the inlet profile with uniform value(should be same as no-input), it still diverged immediately. I was looking through the function 'LoadInletProfile' in CSolver.cpp these days, maybe there should be some changes around? Because there is a determination of inlet type, which SUPERSONIC_BC doesn't belong to, I am not that sure if it effects. I attached all the testing files, including mesh, config, profile dat, etc. Please take a look and let's debug on this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327#issuecomment-2241240909:642,config,config,642,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327#issuecomment-2241240909,1,['config'],['config']
Modifiability,"[iVar] = vmax(phiMax[iVar], phi.getVec(jPoint,iVar));; phiMin[iVar] = vmin(phiMin[iVar], phi.getVec(jPoint,iVar));; }; }. for(size_t iVar=0; iVar<nVar; ++iVar); {; FltVec lim = vmin(FltVec(2.0), vmin(; (phiMax[iVar]-phi.getVec(iPoint,iVar))/prjMax[iVar],; (phiMin[iVar]-phi.getVec(iPoint,iVar))/prjMin[iVar]));. limiter.setVec(iPoint,iVar, lim*(lim+2.0)/(lim*lim+lim+2.0));; }; }; }; ```; In terms of algorithm, for each point we find the min and max neighbor values and the min (negative) and max (positive) projections, those are then combined in a final `min(2, max/max, min/min)` to which the limiter function is applied (this would also be applicable to Venkatakrishnan-[Wang] limiters).; This is equivalent to the edge-loop, if statements are not required as due to cells being closed, if the positive projection is not zero, the negative one will also not be zero, therefore it is correct to always evaluate both ratios.; This algorithm only needs min and max neighbors as small local variables instead of large global ones due to the way those values are determined. This is where the memory from the extra adjacency information is recovered. Like @economon said, fusing the gradient kernel with the limiter kernel is trivial with these point loops, and I do not think it affects readability much since one can clearly tell ""what is what"" (I will not put it here but it really is a matter of copy paste), including the boundaries could be a bit more challenging, but I will give performance number nevertheless. **Performance summary**. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed 1 core** | 1.0 | 1.75 | 1.25 | 2.0 |; | **Speed 4 cores** | 2.45 | 2.7 | 4.5 | 7.0 |. The basic point version does not lose to edge based because, contrary to gradients, it does not require duplication of computations while benefiting from sequential access to gradients.; Again the point-based implementation does really well in parallel",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:9687,variab,variables,9687,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['variab'],['variables']
Modifiability,"[kw2.zip](https://github.com/user-attachments/files/16349664/kw2.zip). Here is SWBLI config and mesh file I used. The original freestream turbulence intensity is a 5.0e-4, I was changed arbitrary to 5.0e-2 for test. Also you can easily observe any high Mach number simulation with high TKE.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-2245328618:85,config,config,85,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-2245328618,1,['config'],['config']
Modifiability,"[sd2_case1b_ddes_v7.cfg.txt](https://github.com/su2code/SU2/files/4531160/sd2_case1b_ddes_v7.cfg.txt). Hello,. We are currently unable to restart SU2 in DDES mode from a restart file that includes time-averaged data on very large (~180 million cell) meshes. Compiled in release mode, the code gives the error ""FGMRES orthogonalization failed, linear solver diverged."". Compiled in debug mode, the code issues an assertion failure at line 1881 of $SU2_HOME/SU2_CFD/src/numerics_structure.cpp, which is a check in the CNumerics::SetRoe_Dissipation(...) method to make sure that variable 'Dissipation_j' is between zero and one. This problem only appears when attempting to restart from solution files that include ""TIME_AVERAGE"" data on very large meshes. Note the above behavior is occurring with commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 of the ""develop"" branch. . I have pulled the latest commits of develop (c093a62a2b) and master (d9c867d342), but get segfaults during Jacobian structure initialization when attempting to restart on multiple cores. All help is appreciated. -Paul. **To Reproduce**; Config file attached, but mesh file is quite large... 17.6 GB. **Desktop (please complete the following information):**; - Department of Defense Unclassified System: ""Onyx""; - System type: Cray XC40/50; - OS: Variant of SuSe Linux 12.3 and/or Cray Linux Environment; - Compiler: Intel 19.0.1.144; - MPI: cray-mpich 7.6.3; - SU2 v. 7.0.1, develop branch, commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 (and segfaults with latest commits of develop (c093a62a2b) and master (d9c867d342) ).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949:576,variab,variable,576,https://su2code.github.io,https://github.com/su2code/SU2/issues/949,2,"['Config', 'variab']","['Config', 'variable']"
Modifiability,"\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -1;; ^~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFtoSU2Sol':; ./sources/Python3.7/convert.c:32:26: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:32:7: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c:28:26: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:28:7: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:6403,variab,variable,6403,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['variab'],['variable']
Modifiability,"\suflow\resources\softwares\SU2\externals\meson\mesonbuild\mesonmain.py"", line 146, in run; return options.run_func(options); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\msetup.py"", line 294, in run; app.generate(); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\msetup.py"", line 185, in generate; self._generate(env); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\msetup.py"", line 247, in _generate; intr.backend.generate(); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 553, in generate; self.generate_target(t); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 900, in generate_target; elem = self.generate_link(target, outname, final_obj_list, linker, pch_objects, stdlib_args=stdlib_args); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 3062, in generate_link; dep_targets.extend(self.guess_external_link_dependencies(linker, target, commands, internal)); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2907, in guess_external_link_dependencies; search_dirs, static_patterns); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2848, in guess_library_absolute_path; trial = CCompiler._get_file_from_list(self.environment, trial); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\compilers\mixins\clike.py"", line 1036, in _get_file_from_list; if p.is_file():; File ""C:\Users\zeng\AppData\Local\Programs\Python\Python37\lib\pathlib.py"", line 1387, in is_file; return S_ISREG(self.stat().st_mode); File ""C:\Users\zeng\AppData\Local\Programs\Python\Python37\lib\pathlib.py"", line 1183, in stat; return self._accessor.stat(self); OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'C:\\ProgramData\\chocolatey\\lib\\mingw\\tools\\install\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2106:1174,extend,extend,1174,https://su2code.github.io,https://github.com/su2code/SU2/issues/2106,1,['extend'],['extend']
Modifiability,"_):. - **FGMRES** solved by initial guess.; - **CONJUGATE_GRADIENT** reached the convergency conditions but being MAX DIFF. = 0 no deformation was applied to the mesh. Similarly, SU2_DOT_AD behaved in the same manner even if adjoint solution was tightly converged. To exclude any non-dependency from the objective function, different options were investigated (DRAG, LIFT, SURFACE_MACH, SURFACE_TOTAL_PRESSURE, ENTROPY_GENERATION) and nothing changed. Moreover, the vaned diffuser scenario (_not visualized in here for simplicity_) seems to be affected too, even if very similar to basic flow scenarios (_basically, it is just an internal 3D-flow over airfoil case_). I thought this behavior could be traced to a bug since my previous mesh deformation always proceeded smoothly (_from flow past cylinder to other internal flow scenarios_), either with arbitrary or gradient based deformation. However, none of these were investigated with turbomachinery settings, which are necessary for this scenario for two main reasons:. 1. post processing parameters computed by SU2; 6. this mesh is part of a turbomachinery multi-block simulation. **To reproduce**; [config.txt](https://github.com/su2code/SU2/files/11416238/config.txt) -> cfg file; [mesh_out.txt](https://github.com/su2code/SU2/files/11416239/mesh_out.txt) -> mesh (_FFD box attached_). Thank you in advance for your support and your help which is always appreciated.; Cheers!. **Bug report checklist**; - [ ✓ ] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [ ✓ ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ ✓ ] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: ubuntu 20.04.4; - C++ compiler and version: g++ 9.4.0; - MPI implementation and version: Open MPI 4.1.5; - SU2 Version: v7.5.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025:3748,config,config,3748,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025,2,['config'],['config']
Modifiability,"_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:;",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:1148,refactor,refactoring,1148,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['refactor'],['refactoring']
Modifiability,"_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: execut",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:15650,config,config,15650,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,"_Originally posted by @suargi in https://github.com/su2code/SU2/issues/1066#issuecomment-906376697_. Currently each variation/correction model has its unique name identification in SU2. In order to simultaneously combine multiple correction models to a given turbulence model I suggest the following:; - The config file option KIND_TURB_MODEL should specify only which turbulence model to use, i.e. SA or SST.; - Introduce an additional config file field TURB_MODEL_CORRECTIONS to indicate all variations/corrections to be considered. . Here an example,; % Specify turbulent model (NONE, SA, SST); KIND_TURB_MODEL= SA; % Turbulence model corrections (NONE, SA-EDW, SA-NOFT2, SA-COMP, SA-NEG, SA-QCR2000, SST-SUST); TURB_MODEL_CORRECTIONS= SA-EDW, SA-NEG. What do you think?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1364:308,config,config,308,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364,2,['config'],['config']
Modifiability,"_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; .... And then; Elwardi-PC:04092] *** Process received signal ***; [Elwardi-PC:04092] Signal: Segmentation fault (11); [Elwardi-PC:04092] Signal code: Address not mapped (1); [Elwardi-PC:04092] Failing at address: (nil); [Elwardi-PC:04092] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x3efd0)[0x7f6f2de1dfd0]; [Elwardi-PC:04092] *** End of error message ***; Segmentation fault; ```; So there is probably something else I didn't pay attention to. ## Immediate improvements. Forcing the dev to create his own ""is_registered"" static variable and initializing it himself can be eliminated by by putting the variable in a templated class (notice that the variable initialization only depends on the type it belongs to and the factory class) which the solver can inherit from. ## My question. Any idea on what is causing the seg fault. I'm pretty sure it's because I'm returning a nullptr somewhere though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:3017,variab,variable,3017,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957,4,"['inherit', 'variab']","['inherit', 'variable']"
Modifiability,`./configure --enable-mpi --with-cc=/cluster/intel/2019/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --prefix=/cluster/software/su2/bin/; `; does not help,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1089#issuecomment-706119208:3,config,configure,3,https://su2code.github.io,https://github.com/su2code/SU2/issues/1089#issuecomment-706119208,1,['config'],['configure']
Modifiability,"`COORDINATES` and `SOLUTION` groups are always added even if they are not present in the config file. So that should not happen anymore. If it does, let me know :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/9#issuecomment-548017340:89,config,config,89,https://su2code.github.io,https://github.com/su2code/SU2/issues/9#issuecomment-548017340,1,['config'],['config']
Modifiability,"```diff; $ git --no-pager diff --cached ; diff --git a/meson.build b/meson.build; index ca86992ea..b68a03c52 100644; --- a/meson.build; +++ b/meson.build; @@ -1,15 +1,12 @@; project('SU2', 'c', 'cpp',; version: '7.5.1 ""Blackbird""',; + meson_version: '0.61.1',; license: 'LGPL2',; default_options: ['buildtype=release',; 'warning_level=0',; 'c_std=c99',; 'cpp_std=c++11']); ; -if meson.version() != '0.61.1'; - error('SU2 must be configured with the extended Meson script (./meson.py) in the SU2 root directory.'); -endif; -; pymod = import('python'); python = pymod.find_installation(); ; ```. I used this patch, and then ran the following:. ```; $ meson setup builddir --wipe; The Meson build system; Version: 1.0.1; Source dir: /tmp/SU2; Build dir: /tmp/SU2/builddir; Build type: native build. meson.build:1:0: ERROR: Meson version is 1.0.1 but project requires 0.61.1; ```. Using the >= comparison, it configures fine, and downloads a git submodule for mutationpp/coolprop on demand. From a hasty look around, it seems like the other git submodules are used as externals/ directories, not meson subprojects. Another project I know uses e.g. ```; if not fs.exists('submoduledir/README.md'); error('Missing the `submoduledir` submodule! Run `git submodule update --init` to fix this.'); endif; ```. for each submodule before it gets processed by meson. This is less automatic than wrapping it in meson.py, but does provide pretty clear directions... the sticking point is if people download tarballs. You currently point people to github's autogenerated archives, which is NOT sufficient as it doesn't have submodules included. I would actually suggest using `meson dist --include-subprojects --no-tests` to produce your own tarballs and attach them as additional releases artifacts. Meson *does* include submodules (whether or not they are subprojects) automatically to the tarball it creates.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434:429,config,configured,429,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434,6,"['config', 'extend']","['configured', 'configures', 'extended']"
Modifiability,"aafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridI",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:6096,config,config,6096,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,"able). This allows; > people to see the performance of SU2 and replicate it, if need be.; >; > The first step would be compiling a list of cases that should be covered.; > The SU2 2014 SciTech paper; > <https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf> would be a; > good starting point as it already had a couple of validation cases. This; > list can be bolstered with some of the NASA TMR cases, and with grid; > convergence studies. I would like to propose an initial list that the; > community can talk through and make changes as we see fit. I am mostly only; > familiar with canonical CFD flows that are used in these cases. But it; > would be great to have other cases, such as Turbo-machinary or FSI cases,; > that show the full breadth of SU2's abilities. This is by no means an; > exhaustive list:; >; > 1. Zero Gradient Flat Plate; > 2. 2D and 3D Bump in Channel; > 3. Asymmetric Diffuser; > 4. Backward facing step; > 5. Unsteady Square cylinder; > 6. NACA0012; > 7. NACA4412 Trailing Edge Seperation; > 8. Joukowski Airfoil; > 9. 30P30N High Lift airfoil; > 10. ONERAM6 Wing; > 11. NASA CRM; > 12. Subsonic and Supersonic Jets; >; > It would be ideal for these test cases to have either high-fidelity data; > (wind tunnel tests, or LES/DNS data), and/or published results of other; > solvers so that comparisons can be made.; >; > I also want to point out the difference between this and the TestCases; > repository. The TestCases repo is used in regression tests to ensure that; > parts of the code don't break when changes are made. This is more a test of; > SU2's fidelity. It would feature large grids and configuration files that; > can be run to convergence.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/581>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/APKNm0MgSdkhQbG8dvGsdxlxIf9pa1xsks5ucppYgaJpZM4Ww0V4>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423070900:3050,config,configuration,3050,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423070900,1,['config'],['configuration']
Modifiability,able-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse'.; === Error Log ===; /bin/sh: 1: ../configure: not found. ---------------------------------------------; When I copied configure.py from older installations it kept running but then aborted on; missing modules,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-598686170:1607,config,configure,1607,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170,5,['config'],['configure']
Modifiability,"ables (#738). Dear developers,; I am trying to install SU2 in docker ubuntu 18.04 container so that I can easily share with partner. But I failed to compile the code with following errors:. (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx. checking build system type... x86_64-pc-linux-gnu. checking host system type... x86_64-pc-linux-gnu. checking target system type... x86_64-pc-linux-gnu. checking for a BSD-compatible install... /usr/bin/install -c. checking whether build environment is sane... yes. checking for a thread-safe mkdir -p... /bin/mkdir -p. checking for gawk... no. checking for mawk... mawk. checking whether make sets $(MAKE)... yes. checking whether make supports nested variables... yes. checking whether make supports nested variables... (cached) yes. checking for style of include used by make... GNU. checking whether the C++ compiler works... no. configure: error: in `/home/SU2':. configure: error: C++ compiler cannot create executables. See `config.log' for more details. I am sure that I have installed gcc/g++ successfully. You can see. (base) root@a5502ebdff64:/home# gcc --version. gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0. Copyright (C) 2017 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. (base) root@a5502ebdff64:/home# g++ -o hello hello.cc. (base) root@a5502ebdff64:/home# ./hello. Hello, World!. I have uploaded the config.log file. Could you give me some suggestions, please?; config.log<https://github.com/su2code/SU2/files/3418183/config.log>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/738?email_source=notifications&email_token=AADV2HBFP42OXAJCIZGTH2DQAXH4ZA5CNFSM4IFZ52EKYY3PNVWWK3TUL52HS4DFUVEXG4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847308:1330,config,configure,1330,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847308,1,['config'],['configure']
Modifiability,"acting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_CFD/src/SU2_CFD SU2_CFD/src/SU2_CFD.p/SU2_CFD.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:3317,variab,variables,3317,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['variab'],['variables']
Modifiability,"actually... the line; print 'IOError , 'Could not find config file: %s' % filename; should read; print 'IOError: Could not find config file: %s' % filename",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/141#issuecomment-67575875:55,config,config,55,https://su2code.github.io,https://github.com/su2code/SU2/issues/141#issuecomment-67575875,2,['config'],['config']
Modifiability,added custom MPI command set by user-defined environment variable,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/335:57,variab,variable,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/335,1,['variab'],['variable']
Modifiability,"ails. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /home/antodech/SU2-4.1.0; Install location: /gshare/work/hpascalj/CodeSU2-master; Version: 4.1.0; C++ Compiler: g++; C Compiler: gcc; Preprocessor flags: ; Compiler flags: -g -O2; Linker flags: ; MPI support: no; Metis support: no; Parmetis support: no; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: no; LAPACK support: no; Datatype support:; double yes; complex no; codi_reverse no; codi_forward no. External includes: ; External libs: . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: yes; Build SU2_DEF: yes; Build SU2_SOL: yes; Build SU2_GEO: yes. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=""/gshare/work/hpascalj/CodeSU2-master/bin""; export SU2_HOME=""/home/antodech/SU2-4.1.0""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=x86_64-unknown-linux-gnu; ac_cv_c_compiler_gnu=yes; ac_cv_cxx_compiler_gnu=yes; ac_cv_env_CCC_set=; ac_cv_env_CCC_value=; ac_cv_env_CC_set=; ac_cv_env_CC_value=; ac_cv_env_CFLAGS_set=; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_CXXFLAGS_set=; ac_cv_env_CXXFLAGS_value=; ac_cv_env_CXX_set=; ac_cv_env_CXX_value=; ac_cv_env_LDFLAGS_set=; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:19168,variab,variables,19168,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['variab'],['variables']
Modifiability,"ains the global index information; and values that are used in surface-based mesh deformation (and maybe other; tools, but that's the one I know of - I could see that format being useful; for prescribed surface properties as well). So one challenge that would be; faced with this change is how to make sure that both files are still; output. I would argue for switching to no suffixes where possible - less work for; new users, a little more work for us - one way we could get the best of; both worlds is by having the filenames written in the config without; suffix, but when loaded into su2 (and the python version of loading the; config file) store the variable with the appropriate suffix. That way if it; changes in the future it only has to be updated in one place, and all the; old config files would still work after a code change that alterred the; suffix.; -Heather. On Wed, Jul 30, 2014 at 11:05 AM, Brendan Tracey notifications@github.com; wrote:. > SU2 right now is inconsistent with how it does file names in the config; > file. For example, the restart file needs to be specified with a "".dat""; > suffix, but in the case of the surface files, the "".csv"" is added; > automatically. SU2 should be consistent across all filenames. Preferably,; > this will be fixed by having the user specify all suffixes. This is a tiny; > amount of additional work for the user, but it makes writing scripts that; > use the config file much easier. When the suffix is in the config file,; > it's easy to have python say ""open this file"". If the config file just has; > the base name of the file (no extension) then the knowledge of what suffix; > SU2 uses must be hard-coded into the follow-on script (which can then break; > later if SU2 changes).; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/su2code/SU2/issues/41. ## . Heather Kline; PhD Candidate, NASA Space Technology Research Fellow; Aeronautics & Astronautics; Stanford University; kline.hl@gmail.com, hlkli",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/41#issuecomment-50703399:1212,config,config,1212,https://su2code.github.io,https://github.com/su2code/SU2/issues/41#issuecomment-50703399,1,['config'],['config']
Modifiability,"ainst `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib64/libz.a(zutil.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status. ```; **To Reproduce**. I configured the source code with the commands:. ```; module load mkl/latest; module load mpi/openmpi-x86_64. CFLAGS=""-mtune=native -march=native -fPIC"" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/panos/Applications/SU2; enable-autodiff : true; enable-cgns : true; enable-directdiff: true; enable-mkl : true; enable-pywrapper : true; with-mpi : e",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:1234,Config,Configuration,1234,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['Config'],['Configuration']
Modifiability,"ally delete the connectivity table from the ASCII Tecplot as you can use numpy genfromtxt.(https://docs.scipy.org/doc/numpy/reference/generated/numpy.genfromtxt.html). Another option is to use the following restart_flow binary reader/writer that I wrote in Python. # ----------; def read_restart_bin(filename):. 	# Not efficient way; 	infile = open(filename, 'rb'); 	data = infile.read(); 	infile.close(). 	print ""Size of the file: "", len(data). # The first is a magic number that we can use to check for binary files (it is the hex; # representation for ""SU2"").; 	if (struct.unpack('i',data[:4])[0] != 535532):; 		print ""Magic number 535532 not found in the solution file %s"" %filename; 		sys.exit(); 		#try:; 		#	data_file = read_restart_ascii(filename); 		#	return data_file; 		#except:; 			# Exit; 		#	sys.exit(). 	# The second two values are number of variables and number of points (DoFs). ; 	nvar = struct.unpack('i',data[4:8])[0]; 	ndof = struct.unpack('i',data[8:12])[0]. 	# Read the variable names of the file. Note that we are adopting a; # fixed length of 33 for the string length to match with CGNS.; 	variables_names = []; 	for i in range(nvar):; 		aux = (struct.unpack('33s',data[20+(i)*33:20+(i+1)*33])[0]); 		for j in range(len(aux)):; 			if aux[j] == ""\x00"":; 				break; 		variables_names.append(aux[:j]). 	# Read data in one shoot; 	start = 20 + nvar*33; 	end = start+nvar*ndof*8; 	array = np.asfarray(struct.unpack('%dd'%(nvar*ndof),data[start:end])); 	array = array.reshape(ndof,nvar). 	# The last two values are for metadata: one int for ExtIter and 8 su2doubles.; 	# Metadata: 1 int for ExtIter and 8 doubles; 	#ncount = len(data) - nvar*ndof*8 - 4 - 64; 	ExtIter = struct.unpack('i',data[end:end+4])[0]; 	metadata = struct.unpack('8d',data[end+4:end+4+8*8]). 	# Create dictionary; 	data_file = {'names':variables_names,'data':array, 'ExtIter':ExtIter, 'MetaData':metadata}; 	return data_file. def read_restart_ascii(filename):; 	""""""; 	; 	""""""; 	infile = open(filename, 'r'); 	h",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528461173:1053,variab,variable,1053,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528461173,1,['variab'],['variable']
Modifiability,"alternatively you can use a hostfile. Below is an example that is used to statically link SU2 and include a statically linked MPICH library. . You can set the hostfile with `--hostfile=<path_to_hostfile>` in the meson call. `-Dcustom-mpi=true` must be also set in that case. I never ran into problems with the order and I think that `LDFLAGS` and the hostfile approach are equivalent in your case, but anyway, its worth a try. ```; [binaries]; c = 'x86_64-linux-gnu-gcc'; cpp = 'x86_64-linux-gnu-g++'; ar = 'x86_64-linux-gnu-ar'; strip = 'x86_64-linux-gnu-strip'; pkgconfig = 'x86_64-linux-gnu-pkg-config'. [host_machine]; system ='linux'; cpu_family = 'x86_64'; cpu = 'x86_64'; endian = 'little'. [properties]; cpp_link_args = ['-static', '-static-libstdc++', '-static-libgcc', '-L/mpich-x86_64-linux-gnu/lib', '-lmpi', '-lxml2', '-lbacktrace', '-lz', '-lpthread', '-lrt']; c_link_args = ['-static', '-static-libstdc++', '-static-libgcc', '-L/mpich-x86_64-linux-gnu/lib', '-lmpi', '-lxml2', '-lbacktrace', '-lz', '-lpthread', '-lrt']; cpp_args = ['-Wno-inconsistent-missing-override', '-I/mpich-x86_64-linux-gnu/include']; c_args = ['-I/mpich-x86_64-linux-gnu/include']; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/867#issuecomment-584169812:598,config,config,598,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-584169812,1,['config'],['config']
Modifiability,"alues. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildecontour](https://user-images.githubusercontent.com/13340225/35588241-9891e5a4-05c5-11e8-9861-50064b28689e.png); Figure 3: A comparison of the turbulent variable between truncated and full domains. ![nu_tilde_line](https://user-images.githubusercontent.com/13340225/35588249-9d94e3e4-05c5-11e8-9fc6-fbe9e89d144e.png); Figure 4: A comparison of the turbulent variable profiles at x~=1.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/503:2148,variab,variable,2148,https://su2code.github.io,https://github.com/su2code/SU2/pull/503,2,['variab'],['variable']
Modifiability,"ame target are build in parallel). Another advantage is that meson has multiplatform support for linux, mac and windows. . ### Why not cmake ?; Meson files are much easier to read and in general it is much better to maintain. Furthermore it has a great documentation. Finally, meson has no dependencies apart from python and we can easily ship it (as a submodule) since it needs no installation/compilation. . ### What is ninja ?; ninja is a replacement for make and is used to execute the compiler and to resolve dependencies. Meson uses ninja as the default backend. So instead of using configure + make, we use meson + ninja. As with meson, we can ship it as a submodule. It needs a compilation, but again it has no dependencies apart from python. ### How to use ?; The correct meson and ninja versions are added as git submodules. So in case you don't have meson and ninja installed (there should be packages available for all major distros), compile ninja using:. ```; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; and run meson using; ```; meson.py build --prefix=$PWD -Denable-pywrapper=true -Denable-autodiff=true; ```; to ocnfigure SU2 with the python wrapper and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Additional notes; - Meson requires python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a m",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:1490,config,configure,1490,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['config'],['configure']
Modifiability,"amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : Can't find mesh.\n""; ; #--- Get sensor; ; sensor = su2amg.create_sensor(mesh, adap_sensor); su2amg.write_solution(""current_sensor.solb"", sensor); ; if not os.path.exists(""current_sensor.solb""):; raise RuntimeError , ""\n##ERROR : Can't find adap sensor.\n""; ; #--- Run amg; ; sys.stdout.write(""Running amg. Log : %s\n"" % config_amg['amg_log']); ; if os.path.exists(""current.itp.solb""):; os.remove(""current.itp.solb""); ; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Genera",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:9384,adapt,adaptation,9384,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['adapt'],['adaptation']
Modifiability,"ample in [NASA TMR website](https://turbmodels.larc.nasa.gov/spalart.html).; - Spalart-Allmaras standard; - Spalart-Allmaras negative; - Spalart-Allmaras **yes** ft2 term; - Spalart-Allmaras mixing layer compressibility correction; - Spalart-Allmaras Edwards modification; - Spalart-Allmaras QCR-2000. The first step is to identify the core, i.e., the mathematical formulation that is shared/common between all of them. Below I provide a very short description of their main characteristics. #### Spalart-Allmaras standard; In the literature one can find a correction that sets the ft2-term to zero. However, the current baseline model in SU2 sets this ft2-term to zero. As discussed in [here](https://github.com/su2code/SU2/issues/1364#issuecomment-916890178) in order to keep compatibility with previous SU2 versions results it is preferable to keep the current nomenclature, i.e., SA will refer to the SA-noft2 variant. #### Spalart-Allmaras negative; The model is the same as the ""baseline"" version when the turbulence variable $\tilde \nu$ is greater than or equal to zero. The modified vorticity is modified to prevent it from acquiring negative values. When $\tilde \nu$ is negative a slightly different integral equation is solved. The viscous fluxes are redefined as well. The boundary conditions are the same as for the standard S-A. #### Spalart-Allmaras nonzero ft2 term; This is the approach corresponds to the faithful baseline. The equations are the same as for the ""baseline"" version (SA), except we take the term $f_{t2}$ into account. #### Spalart-Allmaras mixing layer compressibility correction; This version is the same as for the ""baseline"" version except that an additional term is included on the right hand side of the equation. #### Spalart-Allmaras Edwards modification; This version is the same as for the ""baseline"" version, except that $f_{t2}$ is ignored, and two variables are redefined: the modified vorticity $\tilde{S}$ and $r$. Note that this correction is not com",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1411:2743,variab,variable,2743,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411,2,['variab'],['variable']
Modifiability,"ance.; The git add, git commit and git push commands worked as expected.; The only problem I had was when I tried to upload the mesh file to https://github.com/su2code/TestCases/tree/develop/disc_adj_euler: <https://github.com/su2code/TestCases/tree/develop/disc_adj_euler:> I wanted to upload a folder “arina2k”, whose contents is the mesh file (.su2). I could not just upload the folder name: the system appears to be waiting for an actual file name. When I choose the file name inside that folder , it appears that the system would upload the file within the repository, but 'discarding’ its folder name, so I would have an ‘orphaned’ file there. I tried also to create a file (which would be my folder name), but again, I am prompted with an editor in order to write an actual file, using directly the browser. I believe that there is a simple way to upload a sub-directory/filename, but i could not realize it. With kind regards,. Jairo. > On Dec 14, 2018, at 01:26, Thomas D. Economon <notifications@github.com> wrote:; > ; > @jaspe55 <https://github.com/jaspe55> : I see that you have added the residual check for the python regression script, but I do not see the config file, target file, or mesh. The config file and target file should be placed in SU2/TestCases/disc_adj_euler/arina2k/ (according to your path in the regression script), and the mesh placed in the TestCases/disc_adj_euler/arina2k/ directory in the TestCases repository here (develop): https://github.com/su2code/TestCases/tree/develop <https://github.com/su2code/TestCases/tree/develop>. Don't forget to 'git add' the files to make sure they are included on push. We can help diagnose any segfaults with the files.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-447209397>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180hTDpbM_TXuwfdIJnHpDEpp295gqks5u4yh5gaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-447475363:1221,config,config,1221,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-447475363,4,['config'],['config']
Modifiability,"and prepare necessary near-field boundary marker in version 6.2.0, nearfield_flow.dat and Equivalent_Area.dat are output but not in version 7.0.0 anymore. I did some investigation in the code. nearfield_flow.dat and Equivalent_Area.dat seem to be output by the code below in output_structure_legacy.cpp.; `void COutputLegacy::SpecialOutput_SonicBoom`. It is called out in `void COutputLegacy::SetConvHistory_Body` in output_structure_legacy.cpp. It is then called out in the following lines in CDriver.cpp but none of them seems to be for sonicboom case, which I think is the cause for this bug.; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(NULL, geometry_container, solver_container, config_container,`. In version 6.2.0, `bool CDriver::Monitor(unsigned long ExtIter)` in driver_structure.cpp had `output->SetConvHistory_Body` and I think this was eventually calling out `SpecialOutput_SonicBoom`. I think this function has been accidentally removed by the change below but I'm not sure how to fix it.; https://github.com/su2code/SU2/pull/724 . It would be great if sonicboom case is included in the regression test of test cases. ""biparabolic"" uses this feature but does not seem to be included in the regression test. This test case does not converge at least on my computer though. **To Reproduce**. [v7_sonicboom.zip](https://github.com/su2code/SU2/files/3968025/v7_sonicboom.zip); NACA64206_sonicboom_v6.cfg is a config file for version 6.; NACA64206_sonicboom_v7.cfg is a config file for version 7.; The mesh file is common for both cases. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.04.3 LTS); - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: v6.2.0 and v7.0.0. Thank you in advance for your help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/841:1672,config,config,1672,https://su2code.github.io,https://github.com/su2code/SU2/issues/841,2,['config'],['config']
Modifiability,"are mentioning is the same. I simply united the TIP, LOWER_SIDE and UPPER_SIDE under the marker tag WING. > The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh; In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔. I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings.; [Summary_steady_6_0_1.txt](https://github.com/su2code/SU2/files/3906039/Summary_steady_6_0_1.txt); [Summary_steady_6_2_0.txt](https://github.com/su2code/SU2/files/3906010/Summary_steady_6_2_0.txt). Regarding the unsteady case, I'm aware that this test may have little physics behind (especially if comparing the first timesteps) but I wanted to investigate the reason :). Results are too different and I think these might be one of the reasons behind some discrepancies I'm encountering in my FSI framework. ; My framework for FSI features a restart from a steady solution at t=0 and an unsteady simulation with imposed boundary of the wing marker. The discrepancies in that case are huge and are clearly wrong. I went back to the root and found this weird behaviour comparing the two versions so I thought this might be one cause. > Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0.. Yep you are right, the version is definitely 6.0.1 as it can be seen from the Summaries: **I'm updating the issue.**. > And both versions are/were on the develop branches -> what exactly do you refer to here: config-files, code, mesh. Didn't quite understand you here. Let me know if you need any other info regarding the topic. Looking forward to hear from you!. Best,; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-559850074:2163,config,config-files,2163,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559850074,2,['config'],['config-files']
Modifiability,"ared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unrecognized option '-qversion'; gcc: no input files; configure:3999: $? = 1; configure:4003: checking whether we are using the GNU C compiler; configure:4022: gcc -c conftest.c >&5; configure:4022: $? = 0; configure:4031: result: yes; configure:4040: checking whether gcc accepts -g; configure:4060: gcc -c -g conftest.c >&5; configure:4060: $? = 0; configure:4101: result: yes; configure:4118: checking for gcc option to accept ISO C89; configure:4181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conftest.c -o conftest2.o >&5; configure:4380: $? = 0; configure:4386: gcc -c conftest.c -o conftest2.o >&5; configure:4390: $? = 0; configure:4401: cc -c conftest.c >&5; configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:6905,config,configure,6905,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,8,['config'],['configure']
Modifiability,"atic (libmetis.a ) instead of libmetis.so (shared). that' s a problem when you try to package SU^2 for a Linux distribution like Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.so]), ; [with_Metis_lib=$withval], [with_Metis_lib=""no""]); AC_ARG_WITH(Metis-include,; AS_HELP_STRING([--with-Metis-include[=ARG]], [Metis include directory, ARG = path to metis.h]), ; @@ -121,7 +121,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/Common/src/geometry_structure.cpp; ====================================",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/19:1451,config,configure,1451,https://su2code.github.io,https://github.com/su2code/SU2/issues/19,1,['config'],['configure']
Modifiability,ation.; +-------------------------------------------+; | MG Level| Presmooth|PostSmooth|CorrectSmo|; +-------------------------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; Courant-Friedrichs-Lewy number: 10; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 99999.; Reduce the density residual 10 orders of magnitude.; The minimum bound for the density residual is 10^(-12).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 10000 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot ASCII (.dat).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; Far-field boundary marker(s): farfield.; Constant heat flux wall boundary marker(s): airfoil. ---------------------- Read Grid File Information -----------------------; Two dimensional problem.; 14576 points.; 2 surface markers.; +------------------------------------+; | Index| Marker| Elements|; +------------------------------------+; | 0| airfoil| 128|; | 1| farfield| 352|; +------------------------------------+; 14336 quadrilaterals. ------------------------- Geometry Preprocessing ------------------------; Setting point connectivity.; Renumbering points (Reverse Cuthill McKee Ordering).; Recomputing point connectivity.; Setting element connectivity.; Checking the numerical grid orientation.; There has been a re-orientation of the LINE surface elements.; Identifying edges and vertices.; Computing centers of gravity.; Setting the control volume struct,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:4358,variab,variables,4358,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['variab'],['variables']
Modifiability,"ation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /home/bu/SU2; Install location: 	 /home/bu/SU2; Version: 6.1.0; C++ Compiler: /usr/lib64/mpich/bin/mpicxx; C Compiler: /usr/lib64/mpich/bin/mpicc; Preprocessor flags: -DHAVE_MPI ; Compiler flags: -O3 -Wall; Linker flags: ; MPI support: yes; Metis support: yes; Parmetis support: yes; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: 	 no; LAPACK support: no; Datatype support:; double no; complex no; codi_reverse yes; codi_forward no. External includes: -DHAVE_CGNS -I$(top_srcdir)/externals/cgns -I$(top_srcdir)/externals/cgns/adf -DHAVE_PARMETIS -I$(top_srcdir)/externals/parmetis/include -DHAVE_METIS -I$(top_srcdir)/externals/metis/include ; External libs: $(top_builddir)/externals/cgns/libcgns.a $(top_builddir)/externals/parmetis/libparmetis.a $(top_builddir)/externals/metis/libmetis.a . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: no; Build SU2_DEF: no; Build SU2_SOL: no; Build SU2_GEO: no; Build Py Wrapper: no. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=""/home/bu/SU2/bin""; export SU2_HOME=""/home/bu/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:9882,variab,variables,9882,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,2,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"aviour can be seen. The solutions were converged by about 8 orders of magnitude at each time step for both cases. I reran the current develop code with symmetry boundary condition forcing all the way to residual stalling as suggested for a few hundred time steps but I think the case was pretty well converged already and there is no difference with increased convergence. ![image](https://user-images.githubusercontent.com/33747655/70387595-e5412380-199e-11ea-96d2-f7ee447a8131.png); ![image](https://user-images.githubusercontent.com/33747655/70387599-effbb880-199e-11ea-81f4-5fd37ae9ebd8.png). Although it is good that the converged behaviour is similar for both boundary conditions, the difference in transient behaviour will have a large effect for coupled unsteady problems. . About the dynamic grid, the reason I spotted this was because the gradient verification against rigid motion with symmetry plane boundary condition was good but not as good as the gradient verification with Euler wall boundary condition (as well as having slightly different inherent sensitivity magnitudes between the two boundary conditions caused by the difference in transient behaviour). Therefore, this is perhaps missing something as I would have expected to see the same level of agreement in the sensitivities for the symmetry plane boundary condition as is seen for the Euler wall. I’ve added the results using both boundary conditions for a pitching airfoil case using efficiency as the objective function and FFD control points as the design variables. The differences are seen at the trailing edge (points 10, 11, 21, 22). ![image](https://user-images.githubusercontent.com/33747655/70387604-043fb580-199f-11ea-9c5e-08f5feb2d14e.png); ![image](https://user-images.githubusercontent.com/33747655/70387609-0a359680-199f-11ea-91b5-84931b1d7ec0.png). Should the Euler wall boundary condition be replaced by the symmetry plane condition or could we have both as options to choose from?. Best wishes,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-562931249:1913,variab,variables,1913,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562931249,1,['variab'],['variables']
Modifiability,"ble-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3343: $? = 0; configure:3332: g++ -V >&5; g++: '-V' option must have argument; configure:3343: $? = 1; configure:3332: g++ -qversion >&5; g++: unrecognized option '-qversion'; g++: no input files; configure:3343: $? = 1; configure:3363: checking whether the C++ compiler works; configure:3385: g++ conftest.cpp >&5; configure:3389: $? = 0; configure:3437: result: yes; configure:3440: checking for C++ compiler default output file name; configure:3442: result: a.out; configure:3448: checking for suffix of executables; configure:3455: g++ -o conftest conftest.cpp >&5; configure:3459: $? = 0; configure:3481: result: ; configure:3503: checking whether we are cross compiling; configure:3511: g++ -o conftest conftest.cpp >&5; configure:3515: $? = 0; configure:3522: ./conftest; configure:3526: $? = 0; configure:3541: result: no; configure:3546: checking for suffix of object files; configure:3568: g++ -c conftest.cpp >&5; configure:3572: $? = 0; configure:3593: result: o; configure:3597: checking whether we are using the GNU C++ compiler; configure:3616: g++ -c conftest.cpp >&5; configure:3616: $? = 0; configure:3625: result: yes; configure:3634: checking whether g++ accepts -g; configure:3654: g++ -c -g conftest.cpp >&5; configure:3654: $? = 0; configure:3695: result: yes; configure:3720: checking dependency style of g++; configure:3831: result: gcc3; configure:3921: check",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:4215,config,configure,4215,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,8,['config'],['configure']
Modifiability,"bmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -1;; ^~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFtoSU2Sol':; ./sources/Python3.7/convert.c:32:26: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:32:7: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c:28:26: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:28:7: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFWithBoundtoSU2Sol':; ./sources/Pytho",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:6543,variab,variable,6543,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,2,['variab'],['variable']
Modifiability,"book-g3-450: SU2_HOME$ ./meson.py configure build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this config",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1433,config,config,1433,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,2,['config'],['config']
Modifiability,"brief overview of your contribution here in a few sentences.*; ; This PR contains the following:; - A new fluid model for incompressible ideal gas with variable Cp via polynomial fit as Cp(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 where the user specifies b coefficients.; - Polynomial viscosity model (incompressible only) with Mu(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - Polynomial laminar thermal conductivity model (incompressible only) with Kt(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - New option for TURBULENT_CONDUCTIVITY_MODEL, which is CONSTANT_PRANDTL_TURB by default, but gives flexibility for more options in the future. This was not exposed before, which can be dangerous, depending on the choice of laminar conductivity model. Now, any of the laminar models can still include the effect of turbulence on heat transfer with a constant turbulent Prandtl number, or it can be deactivated.; - A few fixes for FFD parameterization, including ParaView output and handling of symmetry planes. The polynomial models have only been added to the incompressible solver to start. However, one could activate them in the compressible solver(s) too, since they are in the shared fluid/transport model classes. A cylinder test case has been added for the polynomial fluid models. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/624:1003,parameteriz,parameterization,1003,https://su2code.github.io,https://github.com/su2code/SU2/pull/624,1,['parameteriz'],['parameterization']
Modifiability,"bsonic engine intake option; - Small output change; - Added output_su2.cpp; - Updated Engine BC; - Working on Engine BCs; - Added Supersonic Outlet BC; - Minor change; - Merge remote-tracking branch 'upstream/develop' into develop; - adjoints, solid boundary, doxygen in config; - continued fixing; - re-added adjoint bc mods; - re-adding avg outlet pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated ac",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:4106,config,config,4106,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['config'],['config']
Modifiability,"calZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routines when I feel comfortable about them.; 1. The **discrete adjoint version** of all this wo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505:1125,adapt,adaption,1125,https://su2code.github.io,https://github.com/su2code/SU2/pull/505,1,['adapt'],['adaption']
Modifiability,"calars are then used to look up scalar source terms, transport -, and thermodynamic quantities from a lookup table. The lookup table is compiled from one-dimensional flame simulations using more expensive chemistry models - typically finite rate mechanisms. In this implementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223:1317,extend,extended,1317,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223,1,['extend'],['extended']
Modifiability,"calj/CodeSU2-master; Version: 4.1.0; C++ Compiler: g++; C Compiler: gcc; Preprocessor flags: ; Compiler flags: -g -O2; Linker flags: ; MPI support: no; Metis support: no; Parmetis support: no; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: no; LAPACK support: no; Datatype support:; double yes; complex no; codi_reverse no; codi_forward no. External includes: ; External libs: . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: yes; Build SU2_DEF: yes; Build SU2_SOL: yes; Build SU2_GEO: yes. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=""/gshare/work/hpascalj/CodeSU2-master/bin""; export SU2_HOME=""/home/antodech/SU2-4.1.0""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=x86_64-unknown-linux-gnu; ac_cv_c_compiler_gnu=yes; ac_cv_cxx_compiler_gnu=yes; ac_cv_env_CCC_set=; ac_cv_env_CCC_value=; ac_cv_env_CC_set=; ac_cv_env_CC_value=; ac_cv_env_CFLAGS_set=; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_CXXFLAGS_set=; ac_cv_env_CXXFLAGS_value=; ac_cv_env_CXX_set=; ac_cv_env_CXX_value=; ac_cv_env_LDFLAGS_set=; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_file__gshare_soft_code_saturne_4_0_0_prod_cgnslib_3_2_1_include_cgnslib_h=yes; ac_cv_file__gshare_soft_code_saturne_4_0_0_prod_cgnslib_3_2_1_lib_libcgns_a=yes; ac_cv_header_X11_Intrinsic_h=no; ac_cv_header_inttypes_h=yes; ac_cv_header_memory_h=yes; ac_cv_header_std",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:19534,variab,variables,19534,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['variab'],['variables']
Modifiability,"cbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test cas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:2635,extend,extended,2635,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,2,"['extend', 'parameteriz']","['extended', 'parameterization']"
Modifiability,"cc: unrecognized option '-qversion'; gcc: no input files; configure:3999: $? = 1; configure:4003: checking whether we are using the GNU C compiler; configure:4022: gcc -c conftest.c >&5; configure:4022: $? = 0; configure:4031: result: yes; configure:4040: checking whether gcc accepts -g; configure:4060: gcc -c -g conftest.c >&5; configure:4060: $? = 0; configure:4101: result: yes; configure:4118: checking for gcc option to accept ISO C89; configure:4181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conftest.c -o conftest2.o >&5; configure:4380: $? = 0; configure:4386: gcc -c conftest.c -o conftest2.o >&5; configure:4390: $? = 0; configure:4401: cc -c conftest.c >&5; configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4619: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4644: result: gcc -E; configure:4664: gcc -E conftest.c; configure:4664: $? = 0; configure:4678: gcc -E conftest.c; confte",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:7694,config,configure,7694,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"ce some structural changes are made which could potentially effect things outside the regression tests, and I want to make it easier for code review.; > ; > In this pull request, the ability to run multiple objectives is added to the python tools and to the config options. Within the CFD and adjoint solvers, the only major change is in the data structure containing the objectives - it now can hold a list of objectives, but when the adjoint solver is run only one objective is included. Later pull requests are planned to include the ability to run a single adjoint solution for a sum of objectives defined on different markers.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/237 https://github.com/su2code/SU2/pull/237; > Commit Summary; > ; > config options updated to be compatible with multiple objectives - mdo not yet implemented; > python tools; > python adjusted for multiple objectives: will always run 1st objective only with continuous adjoint, but will run separate continuous adjoint evaluations within optimization; > continuous adjoint evaluates the requested objectives; > fixing some errors; > File Changes; > ; > M Common/include/config_structure.hpp https://github.com/su2code/SU2/pull/237/files#diff-0 (20); > M Common/include/config_structure.inl https://github.com/su2code/SU2/pull/237/files#diff-1 (6); > M Common/src/config_structure.cpp https://github.com/su2code/SU2/pull/237/files#diff-2 (90); > M SU2_PY/SU2/eval/design.py https://github.com/su2code/SU2/pull/237/files#diff-3 (8); > M SU2_PY/SU2/eval/functions.py https://github.com/su2code/SU2/pull/237/files#diff-4 (14); > M SU2_PY/SU2/eval/gradients.py https://github.com/su2code/SU2/pull/237/files#diff-5 (4); > M SU2_PY/SU2/io/config.py https://github.com/su2code/SU2/pull/237/files#diff-6 (21); > M SU2_PY/SU2/io/tools.py https://github.com/su2code/SU2/pull/237/files#diff-7 (21); > M SU2_PY/SU2/opt/project.py https://github.com/su2code/SU2/pull",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/237#issuecomment-182175757:1304,config,config,1304,https://su2code.github.io,https://github.com/su2code/SU2/pull/237#issuecomment-182175757,1,['config'],['config']
Modifiability,ceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsS,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15561,plugin,plugins,15561,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"ce_adjoint files and in contrary as what Ole expected; the compressible gives a more wavy result. However the deviation of the sens_adjoint of incompressible is huge compare to the compressible case. ![image](https://user-images.githubusercontent.com/21182966/28306613-4425789c-6ba0-11e7-8337-41a99e15ebd2.png). So if I am understanding correctly, in order to determine the sensitivity an initial deviation of the control points has to be set to determine the (dx/dC)-term. In which 'x' indicates discrete points and 'C' control points. . ![image](https://latex.codecogs.com/gif.latex?%5Cfrac%7B%5Cpartial%20J%7D%7B%5Cpartial%20%5Cvec%7BC%7D%7D%20%3D%20%5Cfrac%7B%5Cpartial%20%5Cvec%7Bx%7D%7D%7B%5Cpartial%20%5Cvec%7BC%7D%7D%5Ccdot%20%5Cfrac%7B%5Cpartial%20J%7D%7B%5Cpartial%20%5Cvec%7Bx%7D%7D). Tim do you mean with the current step size the step of dC ? Because the step of the discrete point is set on 0.001 (of_grad_cd.vtk). If you mean the control point step, then there should be a parameterization step in between as well in order to know the influence of dC to dx. This should give a difference in sensitivity results, however the sensitivities of the case of scale = 0.01 and of the case scale =1 are exactly the same (for the compressible and incompressible case). The values below are gradients of the file of_grad_cd.vtk from the compressible case. ![image](https://user-images.githubusercontent.com/21182966/28307680-f01c9240-6ba3-11e7-8ada-4ddf9e4ae0a9.png). The final thing which I still have to check is the residuals of the direct and adjoint solution. As can be seen there is a difference in convergence and result, which I think is due to the difference in regime. The convergence of the direct solution is: ; ![image](https://user-images.githubusercontent.com/21182966/28309520-e967cbc6-6ba9-11e7-9233-9c9f69db126b.png). The convergence of the adjoint solution is:; ![image](https://user-images.githubusercontent.com/21182966/28308831-b937bf76-6ba7-11e7-9108-e8a2ab959b74.png). Th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-316018103:1592,parameteriz,parameterization,1592,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-316018103,2,['parameteriz'],['parameterization']
Modifiability,"chine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Program",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6092,config,config-lite-,6092,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config-lite-']
Modifiability,"circle of radius 1 (adiabatic wall), and a ""boundary-layer-like"" structure around a circle of radius (approximately) 4. Having this ""boundary-layer-like"" structure does not make sense here, but in our project we later want to change the area `1<=radius<=4` to a ""porous material"" zone and this would introduce a boundary layer there. Both the [attached](https://seafile.rlp.net/d/bb0fbb16eb414263b642/) `issue_complicated.zip`, `issue_simplified.zip` contain subdirectories `singlezone`, `multizone`. I observed the problem best for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In the singlezone setup, the whole mesh has been exported to `singlezone.su2`. The `singlezone.cfg` is `TestCases/rans/naca0012/turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed f",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:2152,adapt,adapted,2152,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['adapt'],['adapted']
Modifiability,"compile the code with following errors:. (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx. checking build system type... x86_64-pc-linux-gnu. checking host system type... x86_64-pc-linux-gnu. checking target system type... x86_64-pc-linux-gnu. checking for a BSD-compatible install... /usr/bin/install -c. checking whether build environment is sane... yes. checking for a thread-safe mkdir -p... /bin/mkdir -p. checking for gawk... no. checking for mawk... mawk. checking whether make sets $(MAKE)... yes. checking whether make supports nested variables... yes. checking whether make supports nested variables... (cached) yes. checking for style of include used by make... GNU. checking whether the C++ compiler works... no. configure: error: in `/home/SU2':. configure: error: C++ compiler cannot create executables. See `config.log' for more details. I am sure that I have installed gcc/g++ successfully. You can see. (base) root@a5502ebdff64:/home# gcc --version. gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0. Copyright (C) 2017 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. (base) root@a5502ebdff64:/home# g++ -o hello hello.cc. (base) root@a5502ebdff64:/home# ./hello. Hello, World!. I have uploaded the config.log file. Could you give me some suggestions, please?; config.log<https://github.com/su2code/SU2/files/3418183/config.log>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/738?email_source=notifications&email_token=AADV2HBFP42OXAJCIZGTH2DQAXH4ZA5CNFSM4IFZ52EKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4HAVNCNA>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AADV2HFS5T4HH2MWIC4JR4TQAXH4ZANCNFSM4IFZ52EA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847308:1947,config,config,1947,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847308,3,['config'],['config']
Modifiability,"composed via an inheritance chain, to do this; // we allow each building block to inherit from any class. These classes should; // be function objects that have no member variables, all data used in the; // resulting Compute method will be on the stack.; template<typename Base>; class ComputeArea : Base; {; protected:; // Different template instantiations will be made for; // 2D/3D to allow perfect loop unrolling.; enum : int {nDim = Base::nDim};. // To share variables between building blocks we will pass; // down a struct which is also composed by inheritance; struct WorkVarsType : Base::WorkVarsType; {; double area; // add ""area"" to the variables of Base; };; ; // The final implementation of Compute will be a call down the chain.; // The final constructed WorkVarsType is not known at this stage,; // hence we also template the method.; template<typename WV>; void Compute(WV& wv, const SolutionContainer& sol) const; {; // Boilerplate, call base first. This is akin to the decorator design pattern; // without polymorphism. The working variables resemble Python's ""self"" which; // makes this solution reasonably idiomatic.; Base::Compute(wv, sol);. // Then do our specific job.; wv.area = 0.0;; for(int i=0; i<nDim; ++i); wv.area += pow(sol.areaVector[i],2);; wv.area = sqrt(wv.area);; }; };. // Same mechanics as above; template<typename Base>; class ComputeFlux : Base; {; protected:; enum : int {nDim = Base::nDim};. struct WorkVarsType : Base::WorkVarsType ; {; double flux; // ...add new member; };. template<typename WV>; void Compute(WV& wv, const SolutionContainer& sol) const; {; // ...call base; Base::Compute(wv,sol);. // ...do aditional work; wv.flux = 0.0;; for(int i=0; i<nDim; ++i); wv.flux += sol.velocity[i]*sol.areaVector[i];; }; };. // This class is used to terminate the chain, it makes the link; // with the interface and it is used to specify any fixed sizes.; template<int NDIM>; class Terminator : private VirtualInterface; {; protected:; enum : int {nDim = NDIM};",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:3564,polymorphi,polymorphism,3564,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,2,['polymorphi'],['polymorphism']
Modifiability,"computations are very simple it may not pay-off to vectorize. **Relation with algorithms**; Some form of `gather` and `scatter` is required in unstructured CFD, which means SIMD has a price of admission. Some thought needs to go into designing algorithms that amortize that cost by maximizing the so called FLOP/Byte ratio, and mask the latency of those operations by being able to start computing as soon as the first element of data is available. **What elements should we try to process simultaneously?**; The choice is between multiple geometric primitives (edges/points) or multiple solution primitives (variables). The latter sounds like a sensible idea until we get to areas of the code where different primitives require different treatment, that and the fact that the number of variables might not fit evenly in the number of lanes can lead to very tricky and non-generic code. Nevertheless if the same code were to be applied to e.g. 4 solution variables, this strategy would likely perform better as it avoids the pesky gather/scatter operations.; Processing multiple geometric primitives can make full utilization of whatever register size (important on GPU's), the code is just as readable (as I hope to show), but gather/scatter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:2550,variab,variables,2550,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['variab'],['variables']
Modifiability,"concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi,. I am currently using SU2 to do some test cases for AIAA 1st Stability and Control Workshop. These cases need to run with a fixed-Cl as the DPW6 cases did. When I tried to use the knobs “FIXED_CL_MODE= YES” and “TARGET_CL= 0.50” in the .cfg input file to run these cases, the Cl change always got some odd significant jumps even though the AoA change was quite small and then the computations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % psf = lbf/ft^2, Density = slug/ft^3,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:1017,config,configuration,1017,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['config'],['configuration']
Modifiability,config file: Improve explanation of CFL number and ramp,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/8:0,config,config,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/8,1,['config'],['config']
Modifiability,"configure:4060: $? = 0; configure:4101: result: yes; configure:4118: checking for gcc option to accept ISO C89; configure:4181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conftest.c -o conftest2.o >&5; configure:4380: $? = 0; configure:4386: gcc -c conftest.c -o conftest2.o >&5; configure:4390: $? = 0; configure:4401: cc -c conftest.c >&5; configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4619: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4644: result: gcc -E; configure:4664: gcc -E conftest.c; configure:4664: $? = 0; configure:4678: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4678: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:8023,config,configure,8023,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10175,config,configure,10175,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,6,['config'],['configure']
Modifiability,configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:11020,config,configure,11020,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.D.Palacios@boeing.com|; | Dr. Thomas D. Economon, economon@stanford.edu |; -------------------------------------------------------------------------; | SU2 Developers: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaisersl",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16382,config,config,16382,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,"container so that I can easily share with partner. But I failed to compile the code with following errors:. (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx. checking build system type... x86_64-pc-linux-gnu. checking host system type... x86_64-pc-linux-gnu. checking target system type... x86_64-pc-linux-gnu. checking for a BSD-compatible install... /usr/bin/install -c. checking whether build environment is sane... yes. checking for a thread-safe mkdir -p... /bin/mkdir -p. checking for gawk... no. checking for mawk... mawk. checking whether make sets $(MAKE)... yes. checking whether make supports nested variables... yes. checking whether make supports nested variables... (cached) yes. checking for style of include used by make... GNU. checking whether the C++ compiler works... no. configure: error: in `/home/SU2':. configure: error: C++ compiler cannot create executables. See `config.log' for more details. I am sure that I have installed gcc/g++ successfully. You can see. (base) root@a5502ebdff64:/home# gcc --version. gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0. Copyright (C) 2017 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. (base) root@a5502ebdff64:/home# g++ -o hello hello.cc. (base) root@a5502ebdff64:/home# ./hello. Hello, World!. I have uploaded the config.log file. Could you give me some suggestions, please?; config.log<https://github.com/su2code/SU2/files/3418183/config.log>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/738?email_source=notifications&email_token=AADV2HBFP42OXAJCIZGTH2DQAXH4ZA5CNFSM4IFZ52EKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4HAVNCNA>, or mute the thread<https://github.com/notificatio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847308:1428,config,config,1428,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847308,1,['config'],['config']
Modifiability,"cpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; ./src/util.cc(158): warning #3656: variable ""components"" may be used before its value is set; dst = components[component_count - 1];; ^. icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; ./src/ninja.cc(119): warning #177: function ""<unnamed>::NinjaMain::ToolMSVC"" was declared but never referenced; int ToolMSVC(const Options* options, int argc, char* argv[]);; ^. remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; wrote build.ninja.; bootstrap complete. rebuilding...; [2/29] CXX build/metrics.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; [3/29] CXX build/clparser.o; icpc: command",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1042:4544,variab,variable,4544,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042,1,['variab'],['variable']
Modifiability,"d `WALL_TIME` is supposed to hold the . > Current average wall-clock time for one iteration. as per the documentation and dry-run output. However, the screen and history outputs of this field do not seem to actually represent this value. The screen-output of the 0th inner iteration of each time-iteration seems to represent the accumulated WCT since the last output (or restart file) was written. What the screen- and history-output of other inner iterations within a timestep mean is not obvious. See attached discussion for more details. **Expected behaviour**; During transient simulations the `WALL_TIME` history output should either be the average WCT for one time-iteration or the accumulated WCT since simulation start.; The screen output of `WALL_TIME ` should either be the average WCT for a time-iteration ( thus the same for all inner iterations ) or (better) correctly compute the average WCT of one inner iteration. **To Reproduce**; See attached mesh and config, but any transient simulation with activated WALL_TIME and implicit time integration should do.; [MeshAndConfig.zip](https://github.com/su2code/SU2/files/8034224/MeshAndConfig.zip). **Desktop (please complete the following information):**; - OS: SLES 15; - C++ compiler and version: icpc (intel 19.0.5.281); - MPI implementation and version: intelMPI 2019; - SU2 Version: 7.3.0 (master/develop). <div type='discussions-op-text'>. <sup>Originally posted by **ChristianBauerEng** February 8, 2022</sup>; Hi All!. I'm currently running transient, 2D axisymmetric simulations of an oscillating resonator. For now I'm still in the validation and testing phase, but the results look promising!. However, I've noticed that solver performance (as in Time/Iteration) seems to degrade over runtime, so I wanted to measure that by including `WALL_TIME` in screen and history output. I still have trouble understanding the outputs, though. The screen output looks like this:. > +-------------------------------------; > | Time_Iter| Inn",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1542:1087,config,config,1087,https://su2code.github.io,https://github.com/su2code/SU2/issues/1542,1,['config'],['config']
Modifiability,"d one of the members mentioned it may be a bug and post it here. . I am simulating flow over an inlet at hypersonic speeds (Mach 7) in 2D using the JST scheme. I have done a mesh convergence study with an inviscid simulation and the residuals go to machine accuracy for all the meshes and works fine. I am using the Navier-Stokes solver for the viscous simulations. I have 5 meshes (very_coarse, coarse, medium, fine, very_fine) to do a mesh convergence study. The very_coarse (VC) and coarse (C) meshes converge to a residual rho of -8.5 and -9 with Cauchy on drag = -10 orders of magnitude. The finer meshes barely converge to -4 to -5, before increasing -2 where they plateau. For all of the meshes (including the converged VC and C), there is an abnormal region with a higher Mach number at the leading edge (11 for VC and 9 for C). Following one of the discussion on the CFD forum (https://www.cfd-online.com/Forums/su2/142261-anomalous-mach-number.html), I extended the domain around the leading edge, but that had no effect on this region. I played around with the 2nd and 4th coefficients in the scheme; the 4th coefficient has not effect on this region. Increasing 2nd coefficient smooths discontinuities, so it decreases the Mach number in those regions but its still higher than freestream. Increasing the 2nd coefficient also makes the shock resolution in the rest of the flow field very smooth (looks like a smudge on the screen). Is there a reason why this happens? I did a few first order upwind simulations; they converge almost instantly and the higher Mach region does not exist. Nor does it exist in 2nd order upwind scheme, but these dont converge any further than -4. I want to conduct optimisation, for which the JST scheme shows good stability and convergence for adjoint problems. I have uploaded the config file, convergence history and images of the high Mach region around the leading edge here: https://drive.google.com/drive/folders/1HtBwS9rVuWn5IJoDpMCCpRyYehOTk9by?usp=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2330:1326,extend,extended,1326,https://su2code.github.io,https://github.com/su2code/SU2/issues/2330,1,['extend'],['extended']
Modifiability,"d pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:2369,config,configuration,2369,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['config'],['configuration']
Modifiability,"d the question with adding some code to ```CSurfaceMovement.cpp```.; The following is my specific added code:; ```; ...; 557: else if ((config->GetDesign_Variable(0) == ROTATION) || (config->GetDesign_Variable(0) == TRANSLATION) ||; 558: (config->GetDesign_Variable(0) == SCALE) || (config->GetDesign_Variable(0) == HICKS_HENNE) ||; 559: (config->GetDesign_Variable(0) == SURFACE_BUMP) || (config->GetDesign_Variable(0) == ANGLE_OF_ATTACK) ||; 560: (config->GetDesign_Variable(0) == CST)) {; 561: /*--- Apply rotation, displacement and stretching design variables (this; 562: should be done before the bump function design variables) ---*/; 563: ; 564: for (iDV = 0; iDV < config->GetnDV(); iDV++) {; 565: switch (config->GetDesign_Variable(iDV)) {; 566: case SCALE:; 567: SetScale(geometry, config, iDV, false);; 568: break;; 569: case TRANSLATION:; 570: SetTranslation(geometry, config, iDV, false);; 571: break;; 572: case ROTATION:; 573: SetRotation(geometry, config, iDV, false);; 574: break;; 575: }; 576: }; 577: ; 578: /*--- Apply the design variables to the control point position ---*/; 579: ; 580: for (iDV = 0; iDV < config->GetnDV(); iDV++) {; 581: switch (config->GetDesign_Variable(iDV)) {; 582: case HICKS_HENNE:; 583: SetHicksHenne(geometry, config, iDV, false);; 584: break;; 585: }; 586: }; 587: ; 588: /*--- Apply the design variables to the control point position ---*/; 589: ; 590: for (iDV = 0; iDV < config->GetnDV(); iDV++) {; 591: switch (config->GetDesign_Variable(iDV)) {; 592: case CST:; 593: SetCST(geometry, config, iDV, false);; 594: break;; 595: }; 596: }; ...; ```. I add ; ```; (config->GetDesign_Variable(0) == CST)) ; ``` ; in line 560 and add ; ```; for (iDV = 0; iDV < config->GetnDV(); iDV++) {; switch (config->GetDesign_Variable(iDV)) {; case CST:; SetCST(geometry, config, iDV, false);; break;; }; }; ```; in line 590~596. Then I recompiled it and run ```SU2_DEF naca0012.cfg``` , it worked as expected. But I'm not sure if the added code has a hidden hole.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2123#issuecomment-1703314305:1642,config,config,1642,https://su2code.github.io,https://github.com/su2code/SU2/issues/2123#issuecomment-1703314305,4,['config'],['config']
Modifiability,"d to a problem?; Maybe! It's not pleasant when I'm forced to link libraries statically. I think it hinders the potential of the C++ language and makes compilation time unnecessarily longer. For example, in [SU2_CFD.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/SU2_CFD.cpp#L117) the program decides what to do with an if statement and **all drivers need to be linked at compile-time**. What if I want to write my own driver? I need to include my headers in ""SU2_CFD.hpp"" and rebuild the whole thing again!!!. ## The solution I would like; Why not use a [Factory With Self-Registering Classes](https://www.bfilipek.com/2018/02/factory-selfregister.html) instead. Ideally, the parent class (CDriver for example) would have; a static ::new() (or ::create() ) method which will create the appropriate type (child classes) based on **user input** (aka, from config file).; Of course, this way, the table of registered classes (drivers in my example) could be extended if the user requests to; dynamically load his own library (assuming that the library contains a child class that registers itself to the table). There is another vital related issue: Incorporating SU2 code in user-developed code is the main concern of this feature request but we also need a mechanism for getting references to all created objects. In the shared separate library, the user expects to; use already created CVariables, ... etc; how can he get those? An object database that keeps references to most involved objects is needed. **This roughly describes what I think is needed to be done. I'm willing to help and even lead the development of this feature if it gets enough approval**. ### Alternatives?; Can't think of anything else! This feature will enable devs to effortlessly extend the software and it even facilitates the building of User Defined Functions in the future as it'll become an important feature when the project gains enough popularity. The only other option is to leave all this behind and c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058:1272,extend,extended,1272,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058,1,['extend'],['extended']
Modifiability,"d"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.1/cpp/ql/src"">source</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/github/codeql-action/blob/main/CHANGELOG.md"">github/codeql-action's changelog</a>.</em></p>; <blockquote>; <h2>3.24.6 - 29 Feb 2024</h2>; <p>No user facing changes.</p>; <h2>3.24.5 - 23 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.3. <a href=""https://redirect.github.com/github/codeql-action/pull/2156"">#2156</a></li>; </ul>; <h2>3.24.4 - 21 Feb 2024</h2>; <ul>; <li>Fix an issue where an existing, but empty, <code>/sys/fs/cgroup/cpuset.cpus</code> file always resulted in a single-threaded run. <a href=""https://redirect.github.com/github/codeql-action/pull/2151"">#2151</a></li>; </ul>; <h2>3.24.3 - 15 Feb 2024</h2>; <ul>; <li>Fix an issue where the CodeQL Action would fail to load a configuration specified by the <code>config</code> input to the <code>init</code> Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2147"">#2147</a></li>; </ul>; <h2>3.24.2 - 15 Feb 2024</h2>; <ul>; <li>Enable improved multi-threaded performance on larger runners for GitHub Enterprise Server users. This feature is already available to GitHub.com users. <a href=""https://redirect.github.com/github/codeql-action/pull/2141"">#2141</a></li>; </ul>; <h2>3.24.1 - 13 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.2. <a href=""https://redirect.github.com/github/codeql-action/pull/2124"">#2124</a></li>; <li>The CodeQL action no longer fails if it can't write to the telemetry api endpoint. <a href=""https://redirect.github.com/github/codeql-action/pull/2121"">#2121</a></li>; </ul>; <h2>3.24.0 - 02 Feb 2024</h2>; <ul>; <li>CodeQL Python analysis will no longer install dependencies on GitHub Enterprise Server, as is already the case for GitHub.com. See <a href=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:10556,config,configuration,10556,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,2,['config'],"['config', 'configuration']"
Modifiability,d/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpVersions.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin_Instructions.txt (0) ; - I QuickStart/inv_NACA0012.cfg (0) ; - I README (0) ; - I SU2_CFD/include/SU2_CFD.hpp (0) ; - I SU2_CFD/include/definition_structure.hpp (0) ; - I SU2_CFD/include/fluid_model.hpp (0) ; - I SU2_CFD/include/fluid_model.inl (0) ; - I SU2_CFD/include/integration_structure.hpp (0) ; - I SU2_CFD/include/integration_structure.inl (0) ; - I SU2_CFD/include/iteration_structure.hpp (0) ; - I SU2_CFD/include/numerics_machine_learning.hpp (0) ; - I SU2_CFD/include/numerics_machine_learning.inl (0) ; - I SU2_CFD/include/numerics_machine_learning_turbulent.hpp (0) ; - I SU2_CFD/include/numerics_,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:20214,plugin,plugins,20214,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"dary condition, which is implemented in the `CEulerSolver.cpp`, the `Inflow_Mach_old` returned is 0.0, causing the computation of the updated pressure to be incorrect. In practice, this drives the pressure lower and lower until it becomes negative. To find this, I added debug statements to `SU2_CFD/src/solvers/CEulerSolver.cpp` where the FAN_FACE_MACH BC logic is to iterate on the outflow pressure. . // cout << endl << ""PRINTING DEBUG INFO FOR FAN_FACE_MACH"" << endl;; // cout << ""Rank = "" << rank << endl;; // cout << ""Kind_Engine_Inflow = "" << Kind_Engine_Inflow << endl;; // cout << ""Target_Inflow_Mach = "" << Target_Inflow_Mach << endl;; // cout << ""Inflow_Pressure_old = "" << Inflow_Pressure_old << endl;; // cout << ""Inflow_Mach_old = "" << Inflow_Mach_old << endl;; // cout << ""Inflow_Pressure_inc = "" << Inflow_Pressure_inc << endl;; // cout << ""Inflow_Pressure = "" << Inflow_Pressure << endl;. which resulted in the output:. PRINTING DEBUG INFO FOR FAN_FACE_MACH; Rank = 1; Kind_Engine_Inflow = 1; Target_Inflow_Mach = 0.64; Inflow_Pressure_old = 2.36396; Inflow_Mach_old = 0; ... So it seems the main issue is that in the `config` the `Inflow_Mach` quantity is never getting updated. I _believe_ this should happen in `src/solvers/CEulerSolver.cpp` starting at line 2855 `if (Engine) { ... ` . Here, a call to `config->SetInflow_Mach(iMarker_Inlet, Inlet_Mach_Total[iMarker_Inlet]);` is completely missing. I'm not familiar with the code base, so I'm not sure if it is supposed to be updated elsewhere. However, inserting that line appears to fix the problem and the above logic around FAN_FACE_MACH begins working as expected. **Reproduce**; Perhaps the only thing about my problem worth mentioning is it is ran as axisymmetric. I'm running RANS, with the SST model. . **Desktop (please complete the following information):**; - OS: [e.g., Linux (Centos 7)]; - C++ compiler and version: [g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 4.0.1]; - SU2 Version: [v7.3.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1607:1240,config,config,1240,https://su2code.github.io,https://github.com/su2code/SU2/issues/1607,2,['config'],['config']
Modifiability,"date an array.; ```; VariableBase** node = new VariableBase* [nNode];; for(int i=0; i<nNode; ++i); node[i] = new VariableDerived(nVar,overhead);; ...; for(int i=0; i<nEdge; ++i); {; int p0 = connectivity[i].first;; int p1 = connectivity[i].second;. double r = numerics->ComputeResidual(node[p0]->GetPrimary(), node[p1]->GetPrimary());. residual[p0] += r;; residual[p1] -= r;; }; ```; I hope that looks familiar.; `connectivity` is a `vector<pair<int,int> >` so nicely contiguous (in SU2 this information comes from an array of CEdge*). Note that we are never talking about sequential access here, this level of indirection will always be present.; To create a somewhat realistic access pattern we create 2 edges per node connecting it to nodes +- some distance away, this distance is small for end nodes and largest for the middle node (I assumed the maximum distance to be `sqrt(nNode)`). This should vaguely resemble an RCM ordered 2D connectivity.; We will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new double [nNode*nVar];; for(int i=0; i<nNode*nVar; ++i) solution[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(), node[p1]->GetSecondary());; ...; ```; and now we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:4091,variab,variables,4091,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['variab'],['variables']
Modifiability,"date with develop. Check out [feature_adap](https://github.com/su2code/SU2/tree/feature_adap). It uses goal-oriented (adjoint-based) adaptation instead of feature-based (just based on Mach or pressure) that Vic's fork used. Some things to note:; 1. It's currently only tested on Euler (it uses a Hessian of the Euler fluxes so it might work for NS/RANS, but probably not) (@WallyMaier and I also extended it to TNE2 in [feature_amgtne2](https://github.com/su2code/SU2/tree/feature_amgtne2) but the source terms are giving us trouble on adapted meshes); 2. It requires AD support since it uses the discrete adjoint to weigh the Euler flux Hessians; 3. I did all my testing with the AMG executable since pyAMG doesn't have all the features I currently need, but I just updated the branch to use pyAMG. I just tested the new interface with an airfoil and it seems to be working, but there might still be some bugs. You'll want to run mesh_adaptation_amg.py with the following options:; **ADAP_SIZES:** list of mesh complexities for each adaptive level. This is correlated to mesh size, but picking good values requires some playing around; **ADAP_SUBITE:** number of adaptations performed at each adaptive level. If set to (2,3) for example, it will run 2 adaptive iterations to try to reach ADAP_SIZES[0], and 3 iterations to try to reach ADAP_SIZES[1]; **ADAP_EXT_ITER:** number of iterations used by SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_RESIDUAL_REDUCTION:** order of magnitude residual reduction for SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_SENSOR:** currently only works for GOAL; **ADAP_HMAX:** maximum cell size (m); **ADAP_HMIN:** minimum cell size (m); **ADAP_HGRAD:** gradation coefficient (>1) used by AMG during mesh smoothing. A larger value corresponds to larger allowed gradient in mesh size. E.g. for the RAE2822 I used:; ADAP_SIZES= (12800, 19200, 25600); ADAP_SUBITE= (2, 2, 2); ADAP_EXT_ITER= (9999, 9999, 9999); ADAP_RESIDUAL_REDUCTION= (6, 6, 6); ADA",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504675574:1169,adapt,adaptive,1169,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504675574,1,['adapt'],['adaptive']
Modifiability,"days of debugging and I a don't get it. I have traced the problem down quite a bit and know which code lines I have to comment to make the problem go away ... but it doesnt make sense: I am not allowed (I can, but then I have non-equal diffs) to write anything (but zero!) in certain blocks of the local variable `profileData` in `CMarkerProfileReader`. That is only the case for more than 1 species equation! I also overwrote the `Inlet_Species_Var` using the `SetUnformInlet` which just takes the cfg-Marker values. . It seems to be some memory-problem and valgrind trys to speak to me but can only point me to the constructor of the Avg_GradSpecies for the volume in CDriver and tells me about a `Conditional jump or move depends on uninitialised value(s)` in `CSysSolve.cpp:131`; ```c++; if ((nrm <= 0.0) || (nrm != nrm)) {; ```; and is supposed to originate from `CDriver.cpp:1366` via a `Uninitialised value was created by a heap allocation`; ```c++; numerics[iMGlevel][SPECIES_SOL][visc_term] = new CAvgGrad_Species<Indices>(nDim, nVar_Species, true, config);; ```; ```c++; 338 --139924-- REDIR: 0x53dc330 (libstdc++.so.6:operator new[](unsigned long)) redirected to 0x4c2a801 (operator new[](unsigned long)); 339 --139924-- REDIR: 0x53da3e0 (libstdc++.so.6:operator delete[](void*)) redirected to 0x4c2b596 (operator delete[](void*)); 340 --139924-- REDIR: 0x53dc2e0 (libstdc++.so.6:operator new(unsigned long, std::nothrow_t const&)) redirected to 0x4c2a3af (operator new(unsigned long, std::nothrow_t const&)); 341 --139924-- REDIR: 0x53da3d0 (libstdc++.so.6:operator delete(void*, std::nothrow_t const&)) redirected to 0x4c2b2a8 (operator delete(void*, std::nothrow_t const&)); 342 ==139924== Conditional jump or move depends on uninitialised value(s); 343 ==139924== at 0xE2D19C: CSysSolve<double>::ModGramSchmidt(int, C2DContainer<unsigned long, double, (StorageType)0, 64ul, 0ul, 0ul>&, std::vector<CSysVector<double>, std::allocator<CSysVector<double> > >&) const (CSysSolve.cpp:131); 3",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:1913,config,config,1913,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603,1,['config'],['config']
Modifiability,de/SU2/pull/814/files#diff-3> (13); * A SU2_DOT/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-4> (25); * A SU2_GEO/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-5> (9); * A SU2_MSH/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-6> (8); * A SU2_PY/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-8> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/fil,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:5605,Config,ConfigureExternals,5605,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['Config'],['ConfigureExternals']
Modifiability,"defs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.D.Palacios@boeing.com|; | Dr. Thomas D. Economon, economon@stanford.edu |; -----------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16147,config,config,16147,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,"differentiable_functions.py"", line 256, in _update_grad; self._update_grad_impl(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 167, in update_grad; self.g = grad_wrapped(self.x); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 380, in obj_df; grad = su2grad(this_obj,grad_method,config,state); File ""/usr/local/bin/SU2/eval/gradients.py"", line 96, in gradient; grads = adjoint( func_name, config, state ); File ""/usr/local/bin/SU2/eval/gradients.py"", line 294, in adjoint; info = su2run.adjoint(konfig); File ""/usr/local/bin/SU2/run/adjoint.py"", line 79, in adjoint; SU2_CFD(konfig); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2/SU2-7.0.4/test1/DESIGNS/DSN_001/ADJOINT_DRAG/,; Command = /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD config_CFD_AD.cfg; SU2 process returned error '127'; /bin/sh: 1: /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD: not found; ```; So I tried to build AD under the instruction. I copied the exact same thing and pasted to the command. The error is:. ```; Checking the status of submodules; =====================================================================; Found an old or unspecified version of CoDiPack in externals/codi.; Use -u to reset module.; ```; However, when I try to u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:2335,config,config,2335,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['config'],['config']
Modifiability,differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyM,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:4401,config,config,4401,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['config'],['config']
Modifiability,"do not initialize the residual nor the solution if we are using a FULLMG_CYCLE, producing a segmentation fault. I have included a line of code to consider the FULLMG_CYCLE scenario. **Second issue**; This issue is not related to mpi _per se_ but to domain partitioning.; In CMultiGridGeometry::CMultiGridGeometry() is computed the ratio between the number of points in the finest grid and a given coarse grid level. If this ratio is below 2.5 (I do not know why do we make this evaluation neither the reason why exactly 2.5) a multigrid level is removed (without warning the user!?), see lines 629-632. For a few cases that I have tested, when running in parallel certain grid levels have a ratio below 2.5 hence are removed. This does not happen when running in serial.; In CMultiGridIntegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Force",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362:1313,config,config,1313,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362,1,['config'],['config']
Modifiability,"dule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; The Meson build system; Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:1262,config,config,1262,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,5,['config'],"['config', 'config-tool']"
Modifiability,dv_size = project.config['DEFINITION_DV']['SIZE'],MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/378:18,config,config,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/378,1,['config'],['config']
Modifiability,"e a bit of space `sizeof(CNSVariable)` is 424 bytes, before it allocates any data.; And that can only get worse as more functionality is added to the code. This is one of those ""well known"" things at least in a qualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhead); {; primary = new double [nVar+overhead];; for(int i=0; i<nVar; ++i) primary[i] = 1.0;; }; ```; All this does is give access to some primary variables held by the base class and allow derived classes to store their own secondary variables, e.g.:; ```; class VariableDerived : public VariableBase; {; private:; double* secondary;; public:; VariableDerived(int nVar, int overhead);; ~VariableDerived();; inline double* GetSecondary() {return secondary;}; };; ```; Then lets say we have dummy numerics classes.; ```; class NumericsBase; {; public:; virtual ~NumericsBase();; inline virtual double ComputeResidual(const double* a, const double* b) {return 0.0;}; };. class NumericsDerived : public NumericsBase; {; private:; int n;; public:; NumericsDerived(int nVar);; double ComputeResidual(const double* a, const double* b);; };; ```; `NumericsDerived` simply computes the dot product of `a` and `b`.; The use case is to loop over edges that connect nodes `a` and `b` passing the data of those nodes to `ComputeResidual` and using the result to update an array.; ```; VariableBase** node = new VariableBase* [nNode];; for(int i=0; i<nNode; ++i); node[i] = new Vari",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:2146,variab,variables,2146,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,['variab'],['variables']
Modifiability,"e bug**; When creating a CDriver instance, for example through the Python wrapper, with an MPI communicator which is defined only on a subset of the processes on which the MPI library was initialised, SU2 will deadlock. This seems to be because most of the MPI communication and synchronisation operations in SU2 explicitly refer to the global `MPI_COMM_WORLD`. The issue arose when attempting to control several Euler/RANS SU2 `CSinglezoneDriver` and `CDiscAdjSinglezoneDriver` instances in parallel (i.e. simultaneously) within a larger optimisation code, which provides each analysis with a subset of the ranks in its own MPI communicator. Naively replacing _all_ references to `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` throughout the code (except where it is defined, and where it is used to initialise the MPI wrapper in the SU2_XXX.cpp files) prevents the deadlock and results in the desired behaviour. However, I imagine that this ""fix"" may well cause all sorts of issues outside of my own, limited use case. **To Reproduce**; The issue can be reproduced with any SU2_CFD configuration file and mesh, run in parallel using the Python wrapper as follows: ; ```; from mpi4py import MPI; import pysu2 # or pysu2ad. filename = 'example.cfg'; zones = 1. rank = MPI.COMM_WORLD.Get_rank(); size = MPI.COMM_WORLD.Get_size(). group = MPI.COMM_WORLD.group.Excl([0]) # exclude the first rank; comm = MPI.COMM_WORLD.Create_group(group). if comm: # is False only on the excluded rank; print(""Running SU2 on global rank {} of {} ... "".format(rank, size)). # create SU2 instance -- will hang during Geometry preprocessing; instance = pysu2.CSinglezoneDriver(filename, zones, comm). else:; print(""Doing nothing on global rank {} of {} ... "".format(rank, size)). ```. **Desktop (please complete the following information):**; - OS: Redhat 7.7; - C++ compiler and version: g++ (GCC) 4.8.5; - MPI implementation and version: MPICH 3.2.1; - SU2 Version: 7.0.2 ""Blackbird"" (looks to be reproducible on 7.1.0 also)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1179:1093,config,configuration,1093,https://su2code.github.io,https://github.com/su2code/SU2/issues/1179,1,['config'],['configuration']
Modifiability,"e essentially independent of the rest of the code. . Below you find an example output of the current preprocessing:. ```. ---------------------- Space Numerical Integration ----------------------; Jameson-Schmidt-Turkel scheme (2nd order in space) for the flow inviscid terms.; JST viscous coefficients (2nd & 4th): 0.5, 0.02.; The method includes a grid stretching correction (p = 0.3).; Scalar upwind solver for the turbulence model.; First order integration in space.; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 999999999 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot binary (.plt).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; +--------------------------------",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:1623,adapt,adaptation,1623,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['adapt'],['adaptation']
Modifiability,"e more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each operating point) have in common. There would be no need to initialise the entire `SU2_CFD` machinery for this step, or to apply the design update separately for each of the SU2 instances.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:1575,variab,variables,1575,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696,6,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"e primal restarted and adjoint restarted now match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" case shouldnt be counted for this I feel). **To Reproduce**; I post my setups later here. Cannot upload through vpn. I also use a simple bash script to do these comparisons for me. So the chance for manual errors is much lower. **Additional Notes**; A few things ahead, I run FGMRES+ILU for all configurations. No periodic boundaries at all. I went without turbulence for the cht cases to make it simpler. In the past and now we were able to see some good gradient validation against FD. So this issue is not super dramatic (although I am pretty annoyed by that) and I think I simply overlooked it in the past. In case there is sth unclear pls let me know, I'll will try to clarify asap. I still have some debugging to do but I appreciate all hints as I am currently more poking into the fog. . Thanks already , Tobi. **Desktop (please complete the following information):**; - OS: [RHELS 7.6 Maipo]; - C++ compiler and version: [g++ (GCC) 5.3.0]; - MPI implementation and version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1395:6040,coupling,coupling,6040,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395,1,['coupling'],['coupling']
Modifiability,"e running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:1093,config,configs,1093,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,1,['config'],['configs']
Modifiability,"e type (child classes) based on **user input** (aka, from config file).; Of course, this way, the table of registered classes (drivers in my example) could be extended if the user requests to; dynamically load his own library (assuming that the library contains a child class that registers itself to the table). There is another vital related issue: Incorporating SU2 code in user-developed code is the main concern of this feature request but we also need a mechanism for getting references to all created objects. In the shared separate library, the user expects to; use already created CVariables, ... etc; how can he get those? An object database that keeps references to most involved objects is needed. **This roughly describes what I think is needed to be done. I'm willing to help and even lead the development of this feature if it gets enough approval**. ### Alternatives?; Can't think of anything else! This feature will enable devs to effortlessly extend the software and it even facilitates the building of User Defined Functions in the future as it'll become an important feature when the project gains enough popularity. The only other option is to leave all this behind and continue developing following the current design until the project reaches a state where it will become very hard to go back and implement this feature. **Additional context**; 1. The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). 2. One last thing: Please, Please, we have to stop using raw pointers like that. I ran valgrind on the ""Inviscid Bump in a Channel"" case and discovered that 1Megs got definitely lost (leaked). Of course it will, if raw pointers get used in that way. I fully understand that many of the skilled programmers here come from C/Fortran background but please refrain from using raw pointers everywhere; and use C++ memory management objects (weak_ptr, unique_ptr, shared_ptr ... etc) instead. Make it a cod",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058:2074,extend,extend,2074,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058,1,['extend'],['extend']
Modifiability,"e weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:1273,refactor,refactoring,1273,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['refactor'],['refactoring']
Modifiability,"e will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new double [nNode*nVar];; for(int i=0; i<nNode*nVar; ++i) solution[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(), node[p1]->GetSecondary());; ...; ```; and now we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operato",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:5037,polymorphi,polymorphism,5037,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['polymorphi'],['polymorphism']
Modifiability,e.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc); - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Another important updated to BC in parallel; - More implementation and clean up of the parallel CGNS reader.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - CGNS reader bug fix.; - Updated adj. NS solver with primitive variables and farfield bc including viscous contribution.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Small change; - Back to the previous version; - Fixed some loop variables.;,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:6059,config,configure,6059,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['config'],['configure']
Modifiability,e.m (60) ; - D MeshTools/Matlab/plotMarkers.m (64) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux_x86_64 (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.macosx (112) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win (14) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win32 (33) ; - D MeshTools/PointwiseSU2plugin/Makefile (304) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.sln (64) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.suo (0) ; - D MeshTools/PointwiseSU2plugin/depend.sh (28) ; - D MeshTools/PointwiseSU2plugin/mkplugin (10) ; - D MeshTools/PointwiseSU2plugin/mkplugin.bat (82) ; - D MeshTools/PointwiseSU2plugin/mkplugin.tcl (422) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugi,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:13852,plugin,plugins,13852,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,e/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26> (28); * A cmake/check_thread_storage.c<https://github.com/su2code/SU2/pull/814/files#diff-27> (5); * A cmake/functions.cmake<https://github.com/su2code/SU2/pull/814/files#diff-28> (416); * A externals/cgns/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-29> (26); * A externals/metis/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-30> (108); * A externals/parmetis/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-31> (70); * A externals/tecio/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/file,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:6257,Config,ConfigureThreads,6257,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['Config'],['ConfigureThreads']
Modifiability,"e:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-d",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:11674,config,configure,11674,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,8,['config'],['configure']
Modifiability,"e; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------; Found: mesh_NACA64A010_turb.su2; New Project: ./; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 50 ( 50 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 100; Requested accuracy: 1.0000000000000001e-11; Initial guess for the independent variable(s): [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]; Lower and upper bound for each independent variable: [(-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:1836,variab,variable,1836,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['variab'],['variable']
Modifiability,eSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/s,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:17289,plugin,plugins,17289,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"e_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.D.Palacios@boeing.com|; | Dr. Thomas D. Economon, economon@stanford.edu |; -------------------------------------------------------------------------; | SU2 Developers: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16332,config,config,16332,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,"ead_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could revisit the ownership relations of the numerics classes, i.e. allocate them as members of their respective solvers, which if we do, we can think of having a purpose built container that automates the per-thread creation and access. > Why are they redefined each time inside the loop?; > Is this for efficiency reasons?. Referring to variables being declared inside loops. One stylist reason is that declaring everything at the top of a function is the C way of doing things, the C++ people whose books/blogs I've read and talks I've watched, recommend keeping namespaces (the inside of the loop being one) as clean as possible.; The only reason not to do this is if you explicitly want re-use, in the case of trivial types this does not improve efficiency, and in the context of OpenMP code it can create issues. Just like we need one numerics per thread, if we declare variables outside a parallel loop the default OpenMP behaviour is to consider them shared, and concurrent writes to shared locations = gdb and many bad words xD.; **EDIT:** I should mention here that if the parallel region is started before the variable declarations they become local and all is well, with the exception of class members, those will be shared most of the time (this is where const correctness can give some peace of mind). > Also, just an additional (hopefully constructive) comment: I find all of these developments great, and I honestly think that you are doing an amazing job on performance and overall code improvement. However, as a non-C++-master myself, I'm just a little concerned of whether some advanced programming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:2870,variab,variables,2870,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,2,['variab'],['variables']
Modifiability,"eature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I miss something?; If it is correct and complete, which file contains the adaptive mesh? How can I use it since there is no new .su2 file? . Thank you for the big help",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-737134105:1239,Adapt,Adaptation,1239,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105,5,"['Adapt', 'adapt']","['Adaptation', 'adaptation', 'adaptive']"
Modifiability,"eck the flow field, including the boundary. But, the inlet boundary is not the same flow conditions I imposed. ; Here is the comparison of other models using the same flow conditions. . ![image](https://user-images.githubusercontent.com/50565314/208847631-a3ced0ab-7a70-45ee-b67e-41314b2ddfb1.png). ![image](https://user-images.githubusercontent.com/50565314/208847743-6f08eb96-ea5e-4ac5-a50a-0d980f33c547.png). So, I tried to find the cause. . When deriving the RANS equation from the energy equation, the turbulent kinetic energy(TKE) is derived from the kinetic energy of Total Energy(E) as shown below.; ![image](https://user-images.githubusercontent.com/50565314/208849564-da4f1b0a-ff2f-4732-911a-b1ed2a4ca1c8.png). In the boundary condition and initialization part, k is considered depending on whether or not the SST model is used for Total Energy. In CEulerSolver.cpp ; `bool tkeNeeded = (turbulent && config->GetKind_Turb_Model() == TURB_MODEL::SST);`; `if (tkeNeeded) { Energy_FreeStream += Tke_FreeStream; }; config->SetEnergy_FreeStream(Energy_FreeStream);`; `if (tkeNeeded) Energy_FreeStreamND += Tke_FreeStreamND;`. But In the flux calculation part, when calculating the speed of sound(a), using the total enthalpy(H). But, in this part consider only the kinetic energy. . Expressed mathematically ; ![image](https://user-images.githubusercontent.com/50565314/208861650-92b8cad6-5a1f-4742-952b-30d0187ae28b.png). but in the SU2 code using below. ![image](https://user-images.githubusercontent.com/50565314/208861902-ff614d53-d07e-4237-a04d-73a49ad5a55c.png). The speed of sound always has a slightly high value because TKE is not subtracted. See ""roe.cpp"" line 119 ~ 149. ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel);` ; This line might be changed roughly like : ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel-k);` . There seem to be two possible ways to this problem.; 1. Subtract TKE when the speed of sound calculation; 2. Store e(static energy) or k in primitive var",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851:1222,config,config,1222,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851,2,['config'],['config']
Modifiability,"ed for each CV for this process.; - Modified realizability checks to avoid negative density/pressure/temperature at the nodes and also during 2nd-order reconstruction at cell faces.; - CV face states for 2nd-order MUSCL are now optionally reconstructed with a separate gradient method (unweighted least squares recommended), which is very important for robustness. Gradients for viscous terms and sources are still computed via GG or WLS for accuracy reasons.; - SA model was being clipped unnecessarily. This clipping has been removed. Here is my recommendation on how to run all of your 2nd-order cases going forward:. ### Euler / Laminar N-S; Turn off the limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:1929,adapt,adaption,1929,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['adapt'],['adaption']
Modifiability,"ed) adaptation instead of feature-based (just based on Mach or pressure) that Vic's fork used. Some things to note:; 1. It's currently only tested on Euler (it uses a Hessian of the Euler fluxes so it might work for NS/RANS, but probably not) (@WallyMaier and I also extended it to TNE2 in [feature_amgtne2](https://github.com/su2code/SU2/tree/feature_amgtne2) but the source terms are giving us trouble on adapted meshes); 2. It requires AD support since it uses the discrete adjoint to weigh the Euler flux Hessians; 3. I did all my testing with the AMG executable since pyAMG doesn't have all the features I currently need, but I just updated the branch to use pyAMG. I just tested the new interface with an airfoil and it seems to be working, but there might still be some bugs. You'll want to run mesh_adaptation_amg.py with the following options:; **ADAP_SIZES:** list of mesh complexities for each adaptive level. This is correlated to mesh size, but picking good values requires some playing around; **ADAP_SUBITE:** number of adaptations performed at each adaptive level. If set to (2,3) for example, it will run 2 adaptive iterations to try to reach ADAP_SIZES[0], and 3 iterations to try to reach ADAP_SIZES[1]; **ADAP_EXT_ITER:** number of iterations used by SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_RESIDUAL_REDUCTION:** order of magnitude residual reduction for SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_SENSOR:** currently only works for GOAL; **ADAP_HMAX:** maximum cell size (m); **ADAP_HMIN:** minimum cell size (m); **ADAP_HGRAD:** gradation coefficient (>1) used by AMG during mesh smoothing. A larger value corresponds to larger allowed gradient in mesh size. E.g. for the RAE2822 I used:; ADAP_SIZES= (12800, 19200, 25600); ADAP_SUBITE= (2, 2, 2); ADAP_EXT_ITER= (9999, 9999, 9999); ADAP_RESIDUAL_REDUCTION= (6, 6, 6); ADAP_SENSOR= GOAL; ADAP_HMAX= 10.0; ADAP_HMIN= 1e-8; ADAP_HGRAD= 1.5. ![mesh](https://user-images.githubusercontent.com/19416354/599",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504675574:1299,adapt,adaptations,1299,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504675574,2,['adapt'],"['adaptations', 'adaptive']"
Modifiability,"ed.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8610,Config,Configuration,8610,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,3,"['Config', 'config', 'variab']","['Configuration', 'configuration', 'variables']"
Modifiability,"egin to run much larger models. Otherwise the preprocessing time for the searches can become excessive and dominant. If someone wanted to try using PCL for this, that would be quite interesting. Given the open source license, as Tom mentions, there should not be a problem interfacing with SU2. Now, an issue we faced in the ASC / PSAAP programs is that for extremely large calculations, the surface mesh (to be searched for minimum distance calculations) may actually not fit in a single processor. For that purpose we built parallel ADTs in the past (unfortunately in FORTRAN90) which replicate a small portion of the upper structure of the tree in all processors (without consuming a lot of memory) and then decomposed the tree into the various processors participating in the searches. While the parallel speedups / efficiencies were not earth-shattering, we did manage to overcome the memory bottlenecks. Does anyone know if PCL can also handle trees that are decomposed in parallel? Would PCL work with its own MPI communicator and automate the communication needed for the searches?. Cheers,. Juan. On Jun 5, 2016, at 4:06 AM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. Indeed, at the moment, we are relying on brute force searches. We have discussed using tree searches internally (and potentially have some reusable code available for this), but nothing has been implemented. It looks like pointcloud is released under a BSD license, which is very permissive. Do you have an implementation in SU2 already with this code embedded? It is also fairly straightforward for us to add hooks in the configure process to installed libraries on your system. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHubhttps://github.com/su2code/SU2/issues/282#issuecomment-223807001, or mute the threadhttps://github.com/notifications/unsubscribe/ADpSxPh8ni-GpSN-zKjD9Nyi47sf5sqZks5qIq2jgaJpZM4ItVbi.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-223861540:1874,config,configure,1874,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-223861540,1,['config'],['configure']
Modifiability,"ehensive set of V&V cases for SU2 that can showcase it's performance in comparison to other solvers. . I think the the [NASA TMR website](https://turbmodels.larc.nasa.gov/index.html) is a good model to base it on. The idea would be to present the V&V case, provide working configuration and mesh files, and provide results comparing performance to other solvers and to higher fidelity data (when available). This allows people to see the performance of SU2 and replicate it, if need be. . The first step would be compiling a list of cases that should be covered. The [SU2 2014 SciTech paper](https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf) would be a good starting point as it already had a couple of validation cases. This list can be bolstered with some of the NASA TMR cases, and with grid convergence studies. I would like to propose an initial list that the community can talk through and make changes as we see fit. I am mostly only familiar with canonical CFD flows that are used in these cases. But it would be great to have other cases, such as Turbo-machinary or FSI cases, that show the full breadth of SU2's abilities. This is by no means an exhaustive list:. 1. Zero Gradient Flat Plate; 2. 2D and 3D Bump in Channel; 3. Asymmetric Diffuser; 4. Backward facing step; 5. Unsteady Square cylinder; 6. NACA0012; 7. NACA4412 Trailing Edge Seperation; 8. Joukowski Airfoil; 9. 30P30N High Lift airfoil; 10. ONERAM6 Wing; 11. NASA CRM; 12. Subsonic and Supersonic Jets. It would be ideal for these test cases to have either high-fidelity data (wind tunnel tests, or LES/DNS data), and/or published results of other solvers so that comparisons can be made. . I also want to point out the difference between this and the TestCases repository. The TestCases repo is used in regression tests to ensure that parts of the code don't break when changes are made. This is more a test of SU2's fidelity. It would feature large grids and configuration files that can be run to convergence.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581:2088,config,configuration,2088,https://su2code.github.io,https://github.com/su2code/SU2/issues/581,1,['config'],['configuration']
Modifiability,"emark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [26/29] CXX build/ninja.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; src/ninja.cc(119): warning #177: function ""<unnamed>::NinjaMain::ToolMSVC"" was declared but never referenced; int ToolMSVC(const Options* options, int argc, char* argv[]);; ^. remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [27/29] CXX build/build.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [29/29] LINK ninja; Traceback (most recent call last):; File ""./meson.py"", line 85, in <module>; sys.exit(mesonmain.main()); File ""/depot/data/SU2_v7/SU2-v7_modified/externals/meson/mesonbuild/mesonmain.py"", line 228, in main; return run(sys.argv[1:], launcher); File ""/depot/data/SU2_v7/SU2-v7_modified/externals/meson/mesonbuild/mesonmain.py"", line 219, in run; return CommandLineParser().run(args); File ""/depot/data/SU2_v7/SU2-v7_modified/externals/meson/mesonbuild/mesonmain.py"", line 44, in __init__; help_msg='Configure the project'); File ""/depot/data/SU2_v7/SU2-v7_modified/externals/meson/mesonbuild/mesonmain.py"", line 82, in add_command; p = self.subparsers.add_parser(name, help=help_msg, aliases=aliases, formatter_class=self.formatter); File ""/apps/cent7/xalt/libexec/argparse.py"", line 1085, in add_parser; parser = self._parser_class(**kwargs); TypeError: __init__() got an unexpected keyword argument 'aliases'; ```. **Desktop:**; - OS: CentOS x86-64 7.7; - C++ compiler and version: Intel C++ 17.0.1.132; - MPI implementation and version: IMPI 2017.1.132; - SU2 Version: v7.0.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1042:11358,Config,Configure,11358,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042,1,['Config'],['Configure']
Modifiability,"ences (each product requires the computation of the residual for a perturbed solution).; This linear system is much more ill-conditioned, and so in addition to the classical linear preconditioners, it is possible to use the traditional linear system as the preconditioner (you gotta love the kind of stuff SU2 lets you get away with sometimes).; This nesting makes each iteration potentially very expensive, it is crucial not to ""over solve"" the linear systems, and to use adaptive CFL to run always at the highest CFL possible. Notwithstanding the preconditioner madness, this also works for explicit solvers, but that may only be good enough for dual time methods with relatively small time steps. This seems to be good at converging problems that would otherwise not get past a limit cycle.; I do not expect it to be faster when that is not a problem. Some references:; https://arc.aiaa.org/doi/abs/10.2514/6.2021-0857; https://arc.aiaa.org/doi/10.2514/1.J052255. Example config for the RANS ONERA M6 in the repo: [turb_ONERAM6_nk.txt](https://github.com/su2code/SU2/files/5947580/turb_ONERAM6_nk.txt); It contains the explanation and recommendations for the different parameters. The initial idea was to couple all solvers (flow, turbulence, etc.) but that makes the problem even more ill-conditioned and so I took a step back (as that also makes the implementation simpler...).; The skeleton of the coupled iteration exists in commit c97221b6f7dfd315dfceb9f59f8928790c78e0ce and it was functional... if anyone wants to take it further, it's there. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate do",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183:1191,config,config,1191,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183,1,['config'],['config']
Modifiability,"ense to have an updated value for the limiter. However this is not 100% accurate because we are using old gradients to compute the new limiter. Anyway, the spirit is to have a limiter computed using the latest flow variables value and we should probably check that the gradients have been also updated before computing limiters again for the turbulence equation. What I don't really like is Upwind_Residual. ` bool limiter = (config->GetSpatialOrder() == SECOND_ORDER_LIMITER);; `. in this case we are using only the info about limiters or not in the turbulence model... so if, for example, we are using JST for the mean flow equations then the limiter for the flow equations have never been computed and. ```; if (limiter) {; FlowPrimVar_i[iVar] = V_i[iVar] + Limiter_i[iVar]*Project_Grad_i;; FlowPrimVar_j[iVar] = V_j[iVar] + Limiter_j[iVar]*Project_Grad_j;; }. ``` . Is incorrect because Limiter_i has never been computed (if we are lucky maybe we are using a zero value by default... but we need to check). In other words, I think this require a deeper look. @jschuele, could you please think on this and submit a new pull request (I'll close this one). If you don't have time, please let me know and we really appreciate if you could add this situation as an Issue. We'll try to fix this problem as soon as possible. By the way the initial confusion was that the SpatialOrder in . ` config->GetSpatialOrder(); `; is updated in ; ```; void CConfig::SetGlobalParam(unsigned short val_solver,; unsigned short val_system,; unsigned long val_extiter) {; ```. so it will change during runtime and as we are solving the turbulence model . `config->GetSpatialOrder()` is the same as `config->GetSpatialOrder_Turb()`. in ; `void CTurbSASolver::Preprocessing(CGeometry *geometry, CSolver **solver_container, CConfig *config, unsigned short iMesh, unsigned short iRKStep, unsigned short RunTime_EqSystem, bool Output) {`. @jschuele and @paulhzhang thanks a lot for working with us on SU2!; Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/403#issuecomment-320490588:2025,config,config,2025,https://su2code.github.io,https://github.com/su2code/SU2/pull/403#issuecomment-320490588,4,['config'],['config']
Modifiability,"ent for make and is used to execute the compiler and to resolve dependencies. Meson uses ninja as the default backend. So instead of using configure + make, we use meson + ninja. As with meson, we can ship it as a submodule. It needs a compilation, but again it has no dependencies apart from python. ### How to use ?; The correct meson and ninja versions are added as git submodules. So in case you don't have meson and ninja installed (there should be packages available for all major distros), compile ninja using:. ```; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; and run meson using; ```; meson.py build --prefix=$PWD -Denable-pywrapper=true -Denable-autodiff=true; ```; to ocnfigure SU2 with the python wrapper and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Additional notes; - Meson requires python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:1957,config,configuration,1957,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['config'],['configuration']
Modifiability,"ent them using decorators. Hence multiple corrections/variations introducing source terms can be simultaneously used. Here is a minimal example:. :bangbang: IMPORTANT: the following code served as a first draft and orientation. The final version has slightly changed to improve efficiency, reusability and readability. :bangbang:. ```c++; template<class ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1413:5497,config,config,5497,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413,1,['config'],['config']
Modifiability,epend.sh (28) ; - D MeshTools/PointwiseSU2plugin/mkplugin (10) ; - D MeshTools/PointwiseSU2plugin/mkplugin.bat (82) ; - D MeshTools/PointwiseSU2plugin/mkplugin.tcl (422) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:14357,plugin,plugins,14357,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,eport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/s,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:16773,plugin,plugins,16773,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,epts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes; checking for ranlib... ranlib; checking whether we are using the GNU C++ compiler... (cached) yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... (cached) yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... (cached) gcc3; checking for python... /usr/bin/python; checking for python version... 2.7; checking for python platform... linux2; checking for python script directory... ${prefix}/lib/python2.7/site-packages; checking for python extension module directory... ${exec_prefix}/lib64/python2.7/site-packages; checking for python2.7-config... /usr/bin/python2.7-config; checking python include flags... -I/usr/include/python2.7 -I/usr/include/python2.7; checking how to run the C preprocessor... /usr/lib64/mpich/bin/mpicc -E; checking for grep that handles long lines and -e... /usr/bin/grep; checking for egrep... /usr/bin/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>;,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:4617,config,config,4617,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"epts in Aeronautics at Tech. Inst. of Aeronautics. |; -------------------------------------------------------------------------; | Copyright 2012-2018, Francisco D. Palacios, Thomas D. Economon, |; | Tim Albring, and the SU2 contributors. |; | |; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /home/bu/SU2; Install location: 	 /home/bu/SU2; Version: 6.1.0; C++ Compiler: /usr/lib64/mpich/bin/mpicxx; C Compiler: /usr/lib64/mpich/bin/mpicc; Preprocessor flags: -DHAVE_MPI ; Compiler flags: -O3 -Wall; Linker flags: ; MPI support: yes; Metis support: yes; Parmetis support: yes; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: 	 no; LAPACK support: no; Datatype support:; double no; complex no; codi_reverse yes; codi_forward no. External includes: -DHAVE_CGNS -I$(top_srcdir)/externals/cgns -I$(top_srcdir)/externals/cgns/adf -DHAVE_PARMETIS -I$(top_srcdir)/externals/parmetis/include -DHAVE_METIS -I$(top_srcdir)/externals/metis/include ; External libs: $(top_builddir)/externals/cgns/libcgns.a $(top_builddir)/externals/parmetis/libparmetis.a $(top_builddir)/externals/metis/libmetis.a . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: no; Build SU2_DEF: no; Bui",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:8756,Config,Configuration,8756,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['Config'],['Configuration']
Modifiability,"er = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link current files; ; config_cfd = copy.deepcopy(config); for opt in adap_options:; config_cfd.pop(opt, None); config_cfd.LOW_MEMORY_OUTPUT = ""NO""; ; config_cfd.WRT_BINARY_RESTART = ""NO""; #config_cfd.READ_BINARY_RESTART = ""NO""; ; current_mesh = ""Initial_mesh""; current_solution = ""Initial_solution""; ; if config['RESTART_SOL'] == 'NO':; ; stdout_hdl = open('ini.stdout','w') # new targets; stderr_hdl = open('ini.stderr','w'); ; success = False; val_out = [False]; ; sys.stdout.write('Running initial CFD solution.\n'); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_mesh = config['MESH_FILENAME']; current_solution = ""ini_restart_flow.dat""; ; config_cfd.CONV_FILENAME = ""ini_history""; config_cfd.RESTART_FLOW_FILENAME = current_solution; ; SU2_CFD(config_cfd); ; except:; sys.stdout = sav_stdout; sys.stderr ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:4572,config,config,4572,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"er the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4 threads) approach is about 5% faster thank the MPI-only (8 ranks), I expect larger cases to have identical performance. ### How To; - Compile: Add -fopenmp to the compiler and linker arguments.; - Run: Set number of threads with env variable `OMP_NUM_THREADS` (eventually I will make that a command line parameter), for best performance set `OMP_WAIT_POLICY=ACTIVE` and beware of thread binding settings, use `mpirun --bind-to socket` or `mpirun --bind-to numa` never `core`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:3593,variab,variable,3593,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['variab'],['variable']
Modifiability,"er time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files. ## Parallel Unsteady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`;",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:2063,config,config,2063,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['config'],['config']
Modifiability,"eration. ------------------------------ Begin Solver -----------------------------. Simulation Run using the Single-zone Driver; +----------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[nu]| CL| CD|; +----------------------------------------------------------------+; | 0| -5.507608| -6.134199| 0.484414| 0.030848|; | 1| -4.574136| -6.098123| 0.484453| 0.030598|; [...]; | 10| -5.466734| -4.908028| 0.484509| 0.029445|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /mnt/cfddata/WLiao/CRJ700_su2/CRJ700_inch_roe_TEST/,; Command = mpirun -np 2 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '139'; [gen2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); [gen2node1:232297:0:232297] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971:1554,config,config,1554,https://su2code.github.io,https://github.com/su2code/SU2/issues/971,1,['config'],['config']
Modifiability,"erator= (const Array& rhs); {; #pragma omp simd; FOREACH vals_[k] = rhs.vals_[k];; return *this;; }. STRONGINLINE Array& operator+= (const Array& rhs); {; #pragma omp simd; FOREACH vals_[k] += rhs.vals_[k];; return *this;; }; STRONGINLINE Array operator+ (const Array& rhs) const { return Array(*this)+=rhs; }; ; /*; * Many other operators go here.; */; };. // Common math function overloads; template<class T>; STRONGINLINE T vmax(const T& a, const T& b); {; T res;; #pragma omp simd; for(size_t k=0; k<T::Size; ++k); res[k] = (a[k]>b[k])? a[k] : b[k];; return res;; }. #undef FOREACH; ```; There are other (better) ways to do this, for example using [x86 intrinsics](https://software.intel.com/sites/landingpage/IntrinsicsGuide/#expand=2273,2273,2436,2943,2436,2943,610,1788,2942) (in header `<x86intrin.h>`), register types instead of arrays, and a boat load of template meta-programming (I'm guessing) there are professional libraries for this.; This quickly-hacked-together code is compatible with custom types, portable, and seems to do the trick. To pull this off we do not need to have `Vector` or `Matrix` of this class, the underlying type for those data structures is still `double`, only the `getVec` type methods need to convert on the fly to the SIMD type, for example:; ```C++; // use the ""pointer ctor"" to return an array starting at ""row0""; Array<double,4> Matrix<double>::getVec(size_t row0, size_t col) const {; return Array<double,4>(&data_[row0+col*rows_]);; }. // use the ""gather ctor"" to return an array with the indices in ""rows""; template<class U>; Array<double,4> Matrix<double>::getVec(const U& rows, size_t col) const {; return Array<double,4>(&data_[col*rows_], rows);; }; ```; After inlining those copies get optimized away.; Although the stored type, and ""scalar interface"" of the containers do not need to change, the storage order of the data does. Notice that in the above data is stored by columns instead of rows (something that @vdweide mentioned in #716) this has",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:9050,portab,portable,9050,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['portab'],['portable']
Modifiability,"erency) or it needs to acquire a *lock* for the point it is writing to, if it fails to acquire the *lock* (because another thread has it) it needs to wait. None of these is without drawbacks.; - **Coloring** reduces temporal locality, edges are sorted in increasing order of the point indices to reduce cache misses, this means small groups of contiguous edges will share the same ""iPoint"", coloring single edges destroys this. Furthermore coloring either requires edges to be re-sorted by color, or if the edge indices of each color are instead kept in arrays, performance will suffer due to increased indirection which confounds the hardware pre-fetcher.; This can be mitigated to some extent by coloring groups of edges, groups of edges of the same color can be processed simultaneously, but within each group edges need to be processed serially. However grouping will reduce how much parallelism can be exploited within each color.; - **Gather to scatter** will in general use more memory due to the intermediate variables and extra adjacency information needed. If the entire algorithm is transformed performance may suffer as some computations may have to be repeated.; However, some reductions are possible without intermediate variables, for example when assembling the system matrix for implicit schemes only the diagonal entries can result in race conditions, now it just so happens that each diagonal entry is equal to the negated corresponding column sum.; - **Atomics** are terrible for the performance of code that writes frequently to memory (i.e. bandwidth-bound code), they do not increase the memory footprint and so make sense for compute-bound code.; Bugs due to a missing atomic can be very hard to debug (but any race condition is). Coloring is what one sees most in the literature, and yet I lean towards gather-to-scatter. Fewer things can go wrong with it as it is easy to understand, one gets the maximum amount of parallelism. I will now take two familiar routines, computin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:5878,variab,variables,5878,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['variab'],['variables']
Modifiability,"erical scheme or the other options are changed. Which configuration file would you want?; > > By any chance, are you implementing or developing a transition model? Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer.; > ; > If you could send me the config files for the T3A, T3A- and NLF test cases it would be awesome!; > ; > I have implemented the same model as yours, the LM model, in parallel to you 'cause I needed it for some simulations. I also tried implementing the same version but related to the SA turbulence model, however it still is bothering me that I cannot seem to get good results on it.; > ; > If you want, I also tried the prolate spheroid test-case with good results. If you need I can give the configs and the meshes. The only thing about this test-case is that it is more related to the cross-flow transition, thus it needs to be implemented, which I think I'll do in these days.; > ; > I think that the k-w-gamma model is the way to go right after the implementation of the LM model since it has lots of equations in common. Do you think that you need another class for it or you will write on the same classes that you have already built (like the CTransLMSolver)?. The test case(T3A, T3A-, and NLF-0416) configuration files were uploaded to my git repository. Here is the [link](https://github.com/sun5k/SU2/tree/develop/TestCases/transition ). Suggestions for the prolate spheroid test-case is appreciated. However, my transition model is the LM-2009, and I have no plans for the 2015-LM model. Therefore, the cross-flow transition is left for future developers. I think the CTransGammaSolver, CTransGSolver, or the other name of classes will be added for the k-w-gamma transition model. It's a vague idea, I haven't really thought about detail yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830:1784,config,configuration,1784,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830,1,['config'],['configuration']
Modifiability,"erit from any class. These classes should; // be function objects that have no member variables, all data used in the; // resulting Compute method will be on the stack.; template<typename Base>; class ComputeArea : Base; {; protected:; // Different template instantiations will be made for; // 2D/3D to allow perfect loop unrolling.; enum : int {nDim = Base::nDim};. // To share variables between building blocks we will pass; // down a struct which is also composed by inheritance; struct WorkVarsType : Base::WorkVarsType; {; double area; // add ""area"" to the variables of Base; };; ; // The final implementation of Compute will be a call down the chain.; // The final constructed WorkVarsType is not known at this stage,; // hence we also template the method.; template<typename WV>; void Compute(WV& wv, const SolutionContainer& sol) const; {; // Boilerplate, call base first. This is akin to the decorator design pattern; // without polymorphism. The working variables resemble Python's ""self"" which; // makes this solution reasonably idiomatic.; Base::Compute(wv, sol);. // Then do our specific job.; wv.area = 0.0;; for(int i=0; i<nDim; ++i); wv.area += pow(sol.areaVector[i],2);; wv.area = sqrt(wv.area);; }; };. // Same mechanics as above; template<typename Base>; class ComputeFlux : Base; {; protected:; enum : int {nDim = Base::nDim};. struct WorkVarsType : Base::WorkVarsType ; {; double flux; // ...add new member; };. template<typename WV>; void Compute(WV& wv, const SolutionContainer& sol) const; {; // ...call base; Base::Compute(wv,sol);. // ...do aditional work; wv.flux = 0.0;; for(int i=0; i<nDim; ++i); wv.flux += sol.velocity[i]*sol.areaVector[i];; }; };. // This class is used to terminate the chain, it makes the link; // with the interface and it is used to specify any fixed sizes.; template<int NDIM>; class Terminator : private VirtualInterface; {; protected:; enum : int {nDim = NDIM};. struct WorkVarsType {};. template<typename... Ts>; void Compute(Ts&...) const {}; }",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:3590,variab,variables,3590,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,2,['variab'],['variables']
Modifiability,"es are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.D.Palacios@boeing.com|; | Dr. Thomas D. Economon, economon@stanford.edu |; -------------------------------------------------------------------------; | SU2 Developers: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial College London. |; ----------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16582,config,config,16582,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,"esh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Generating adapted mesh using AMG\n' % pad_cpt); ; mesh_new = su2amg.amg_call_python(mesh, config_amg); ; #--- print mesh size; ; sys.stdout.write(' %s AMG done: %s\n' % (pad_nul, su2amg.return_mesh_size(mesh_new))); ; mesh_new['markers'] = mesh['markers']; mesh_new['dimension'] = mesh['dimension']; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter; ; su2amg.write_mesh(current_mesh, current_solution, mesh_new); ; #--- Run su2; ; log = 'ite%d.SU2'%global_iter; stdout_hdl = open('%sstdout'%log,'w') # new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_solution_ini = ""ite%d_ini.dat"" % global_iter; os.rename(current_solution, current_solution_ini); ; config_cfd.MESH_FILENAME = current_mesh; config_cfd.CONV_FILENAME = ""ite%d_history"" % global_iter",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:10362,adapt,adapted,10362,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['adapt'],['adapted']
Modifiability,eshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugi,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:16127,plugin,plugins,16127,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"eson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\p",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5547,config,config,5547,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,4,['config'],['config']
Modifiability,"estart files. ## Parallel Unsteady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 100`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below).; ; ## Serial Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `SU2_CFD unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Memory measurement; I measured the memory usage with a minutely cronjob of the following snippet:. ```; #!/bin/bash. dir=/path/to/testdir. #list of PIDs:; pid_list='XXXX XXXX'. cd $dir; for PID in $pid_list; do; 	now=$(date +""%Y%m%d%H%M""); 	current_kb=$(pmap $PID| tail -n 1 | awk '{print $3}') # current memory; 	echo $now,$current_kb >> memory_history_$PID.cs",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:2921,config,config,2921,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['config'],['config']
Modifiability,"ested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:1854,variab,variable,1854,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['variab'],['variable']
Modifiability,"esult: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:12270,config,configure,12270,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,6,['config'],['configure']
Modifiability,"esults obtained from the develop and master branch are quite different, specially the pressure distribution over the hump. The same difference also appears when other numerical scheme is used (SLAU2 instead of Roe). On the other hand, the skin friction seems not be affected. Please see attached figures. Also, I attached the plot of the residual over iterations, showing that all simulations converged nicely. Firstly, I thought that this was related to pull request #670 but I ran the same case with an older version of the dev branch and the results were identical. This suggest that the difference started from pull requests that were merged before #670. I also attached the config and mesh files if someone wants to reproduce. Thanks to Danah Park (PhD student) for pointed me out. I appreciate your time and feedback. Best,. Eduardo. ![rans_cf_compare-branch_roe](https://user-images.githubusercontent.com/9790985/61551958-7113dc80-aa0b-11e9-8074-7d754d36a99c.png); ![rans_cf_compare-branch_slau2](https://user-images.githubusercontent.com/9790985/61551959-7113dc80-aa0b-11e9-83c2-918d89d26f07.png); ![rans_cp_compare-branch_roe](https://user-images.githubusercontent.com/9790985/61551960-71ac7300-aa0b-11e9-9f1a-e1be993377cb.png); ![rans_cp_compare-branch_slau2](https://user-images.githubusercontent.com/9790985/61551962-71ac7300-aa0b-11e9-80c6-2ee9390e61f9.png); ![rans_rho0Res_compare-branch](https://user-images.githubusercontent.com/9790985/61551963-71ac7300-aa0b-11e9-962a-7ea04a98ecd4.png). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [hump_ddes_full.su2.gz](https://github.com/su2code/SU2/files/3412065/hump_ddes_full.su2.gz); [turb_SA_hump.cfg.txt](https://github.com/su2code/SU2/files/3412070/turb_SA_hump.cfg.txt). **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04]; - C++ compiler and version: [g++ (GCC) 5.4.0]; - MPI implementation and version: [OpenMPI 1.10.2]; - SU2 Version: [v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735:1823,config,config,1823,https://su2code.github.io,https://github.com/su2code/SU2/issues/735,1,['config'],['config']
Modifiability,"except:; sys.stderr.write(""## ERROR : Unable to import pyamg module.\n""); sys.exit(1). def amg ( config , kind='' ):; ; sys.stdout.write(""SU2-AMG Anisotropic Mesh Adaptation\n""); ; #--- TODO: Check pyamg version compatibility; ; #--- Check config options related to mesh adaptation; ; adap_options = ['ADAP_SIZES', 'ADAP_SUBITE', 'ADAP_SENSOR', \; 'ADAP_BACK', 'ADAP_HMAX', 'ADAP_HMIN', 'ADAP_HGRAD', 'ADAP_RESIDUAL_REDUCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:3428,config,config,3428,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"f the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @c",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1712,variab,variables,1712,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['variab'],['variables']
Modifiability,"f501dc168cd7ef4a4d1f81140a0959a9d4382128 fixes divergence of the `disc_adj_fsi` case among the parallel regression tests that occurred when using the CoDiPack type `RealReverseIndex` instead of `RealReverse`. Since the bug is not obvious from the commit and there might be a better way to fix this, let me put this up for discussion. In `CDiscAdjMultizoneDriver::SetRecording`, the tape is recorded part by part. The part of the code that is at fault involves three of them.; - `DEPENDENCIES -> OBJECTIVE_FUNCTION`: an index is last used on a right hand side; - `OBJECTIVE_FUNCTION -> TRANSFER`: the index is available for reuse and used on the left hand side; - `recording for a zone`: the index is used on a right hand side. In `CDiscAdjMultizoneDriver.cpp::ComputeAdjoints`, however, the `TRANSFER -> OBJECTIVE_FUNCTION` part of the evaluation is skipped in some cases. After the `recording for a zone` evaluation accumulated adjoints for the said index, the adjoint reset that would be performed in the skipped tape part is missing. Instead, the tape evaluation `DEPENDENCIES -> OBJECTIVE_FUNCTION` receives the adjoints for this index, which is wrong because the index is associated with a different primal variable in this part of the tape. Have there been issues regarding dependencies between tape parts previously? Are there mechanisms established that address such issues?. If someone wants to give it a try, I added a build option for the tape type in 183c3ca7a3235c8293cf2242c66c82d35a3922c7. You can switch to the index tape by calling meson with `-Dcodi-tape=JacobianIndex`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733:1212,variab,variable,1212,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733,1,['variab'],['variable']
Modifiability,"fPIC -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -MD -MQ UnitTests/test_driver.p/test_driver.cpp.o -MF UnitTests/test_driver.p/test_driver.cpp.o.d -o UnitTests/test_driver.p/test_driver.cpp.o -c ../UnitTests/test_driver.cpp; In file included from /usr/include/signal.h:328,; from ../externals/catch2/catch.hpp:7955,; from ../UnitTests/test_driver.cpp:32:; ../externals/catch2/catch.hpp:10735:58: error: call to non-‘constexpr’ function ‘long int sysconf(int)’; 10735 | static constexpr std::size_t sigStackSize = 32768 >= MINSIGSTKSZ ? 32768 : MINSIGSTKSZ;; | ^~~~~~~~~~~; In file included from /usr/include/x86_64-linux-gnu/bits/sigstksz.h:24,; from /usr/include/signal.h:328,; from ../externals/catch2/catch.hpp:7955,; from ../UnitTests/test_driver.cpp:32:; /usr/include/unistd.h:640:17: note: ‘long int sysconf(int)’ declared here; 640 | extern long int sysconf (int __name) __THROW;; | ^~~~~~~; In file included from ../UnitTests/test_driver.cpp:32:; ../externals/catch2/catch.hpp:10794:45: error: size of array ‘altStackMem’ is not an integral constant-expression; 10794 | char FatalConditionHandler::altStackMem[sigStackSize] = {};; | ^~~~~~~~~~~~; ```. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; In my case, this issue occurred when I upgraded my kubuntu version to 22.04; some info:; https://github.com/catchorg/Catch2/issues/2178; https://github.com/catchorg/Catch2/issues/2421. **Desktop (please complete the following information):. Project version: 7.3.1 ""Blackbird""; C compiler for the host machine: /usr/bin/mpicc.mpich (gcc 11.2.0 ""gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0""); C linker for the host machine: /usr/bin/mpicc.mpich ld.bfd 2.38; C++ compiler for the host machine: /usr/bin/mpicxx.mpich (gcc 11.2.0 ""g++ (Ubuntu 11.2.0-19ubuntu1) 11.2.0""); C++ linker for the host machine: /usr/bin/mpicxx.mpich ld.bfd 2.38",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1724:2851,config,config,2851,https://su2code.github.io,https://github.com/su2code/SU2/issues/1724,1,['config'],['config']
Modifiability,"far. The new driver adapts many of the well-known routines for registering variables, recording, initializing and extracting adjoints. The main difference is the handling of multiple zones. . The adjoint (fixed point-) iteration approach in `CDiscAdjMultizoneDriver` is to initialize them per-zone in an outer loop and to extract adjoints with respect to _dependent variables from all zones_, thereby inherently capturing the cross dependencies.; Multiple successive evaluations of adjoints with respect to the same zone (equivalent to inner iterations in the multizone driver) are possible.; ; In order not to have to re-record a tape in the (outer) zone-loop as it can be quite costly, this branch includes some new functionalities in the underlying AD-structure which make it possible to record a ""full"" tape that holds all derivative information and that can be accessed flexibly for different input and output variables across zones.; This also overcomes the restriction that adjoints have to be evaluated in the same order as their variables had been registered.; ; This is the first version of the driver and my intention is to continue contributing to it in terms of both performance and coverage of different kinds of physical couplings in SU2. ## PR Checklist; A regression test for a heated cylinder array with conjugate heat transfer is added to `TestCases/coupled_cht/disc_adj_incomp_2d`. The very same case is used in a tutorial showcasing the new driver and CHT sensitivity analysis, see [Heated cylinders test case](https://github.com/su2code/su2code.github.io/pull/14). I'll check carefully for compiler warnings during test phase. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774:1296,variab,variables,1296,https://su2code.github.io,https://github.com/su2code/SU2/pull/774,2,"['coupling', 'variab']","['couplings', 'variables']"
Modifiability,ff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-8> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26> (28); * A cmake/check_thread_storage.c<https://github.com/su2code/SU2/pull/814/files#diff-27> (5); * A cmake/functions.cmake<https://github.com/su2code/SU2/pull/814/files#diff-28> (416); * A externals/cgns/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-29,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:5973,Config,ConfigureMutationpp,5973,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['Config'],['ConfigureMutationpp']
Modifiability,"fficients from the config file, instead of the given hard coded values. (I would need to change the values later on). Now I'm trying to get the sensitivity of my objective function (in this case Cl as specified in the config file) with respect to these closure coefficients. . I've modified the CDiscAdjSolver class in solver_structure.hpp and solver_structure.inl by adding new variables for the sensitivities I want to calculate, defining inline Get functions which return the sensitivity values, and defining virtual functions onto the CSolver class. I've modified solver_adjoint_discrete.cpp by adding new variables which read in the values of the closure coefficients from the config class and passing these variables onto AD::RegisterInput() _(these are done in the RegisterVariables routine)_, and then passing them onto SU2_TYPE::GetDerivative() to calculate the derivatives _(this is done in the ExtractAdjoint_Variables routine)_. I store the derivative values as new variables called Total_Sens_SA, similar to what's already done for Total_Sens_AoA, for example. The problem I have is that when I pass the variables onto SU2_TYPE::GetDerivative(), the output is returned as 0. As far as I see, I've followed the same steps that are done to get the other sensitivity values such as Total_Sens_AoA or Total_Sens_Mach, but I don't understand why the derivative is being returned as 0. Is there something I'm missing here? I assumed as long as I register the variables whose derivatives I want onto AD::RegisterInput() the rest should be taken care of inside the AD and codi modules and the derivatives should be calculated correctly?. Curiously, in output_structure.cpp where values such as Total_Sens_AoA are called again to be printed to screen, these values differ from those calculated inside solver_adjoint_discrete.cpp. This to me suggests that the sensitivity values are altered elsewhere, but I cannot seem to find where this occurs. Any help would be appreciated. Kind regards,; Amir",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679:1324,variab,variables,1324,https://su2code.github.io,https://github.com/su2code/SU2/issues/679,3,['variab'],['variables']
Modifiability,"fig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_CFD/src/SU2_CFD SU2_CFD/src/SU2_CFD.p/SU2_CFD.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/local/mpich-3.3.2/lib /usr/local/mpich-3.3.2/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:3425,config,configuration,3425,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['config'],['configuration']
Modifiability,figure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10267,config,configure,10267,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability,"fine PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creat",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:15364,config,configure,15364,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % In",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1005,adapt,adaptation,1005,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341,1,['adapt'],['adaptation']
Modifiability,"firmed by opening a python terminal and running `import mpi4py`. #### The easiest workaround. Switch to a [virtualenv](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/). This will ensure that all of your python packages are stored in single location. #### Alternate workaround. In this method, you change the hardcoded includes to match mpi4py's package location. First I figure out where my mpi4py is installed. I start a terminal session of python using the python environment I want to use (in this case, it's python 3.6), and then run:; ```; from mpi4py import MPI; MPI; ```. Since I have mpi4py installed on your system and it's on my python path, I see something like:; ```; <module 'mpi4py.MPI' from '/home/clarkpede/.local/lib/python3.6/site-packages/mpi4py/MPI.cpython-34m.so'>; ```. The `/home/clarkpede/.local/lib/python3.6/` directory is where my mpi4py package is installed. But the swig compile command includes `/home/clarkpede/.local/lib/python2.7/`. That's not the right directory! So first I find the hardcoded paths of the makefile by running (on a bash terminal):; ```; grep -rn python2\.7 SU2_PY/ ; ```; On my system, this prints out four lines. I don't care about the `Makefile.in` files, because those are generated automatically and will be overwritten every time I run ""configure"" or ""preconfigure.py."" The `NUMPY_INCLUDE` line is also commented out, so I ignore that too. That leaves me with one line, line 51 of `SU2_PY/pySU2/Makefile.am`:. ```; SU2_PY/pySU2/Makefile.am:51:MPI4PY_INCLUDE = ${HOME}/.local/lib/python2.7/site-packages/mpi4py/include \; ```. I now modify line 51 of Makefile.am to read:. ```; MPI4PY_INCLUDE = ${HOME}/.local/lib/python3.6/site-packages/mpi4py/include \; ```. Then run configure or preconfigure.py again, and then run make again. You should be good to go!. #### tl;dr. If you're having this error, modify the `MPI4PY_INCLUDE` line of `SU2_PY/pySU2/Makefile.am` to include the location of your mpi4py package.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722#issuecomment-515693590:2286,config,configure,2286,https://su2code.github.io,https://github.com/su2code/SU2/issues/722#issuecomment-515693590,4,['config'],['configure']
Modifiability,"fix mutation download, exception catching to inform user, and more flexible names for manual downloads; Closes #1335",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1475:67,flexible,flexible,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/1475,1,['flexible'],['flexible']
Modifiability,fix variable lenght arrays,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1147:4,variab,variable,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/1147,1,['variab'],['variable']
Modifiability,fixed bug that masks config file errors as missing file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/176:21,config,config,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/176,1,['config'],['config']
Modifiability,"fixed set functions for NEMO axisymmetric, implemented auxvargrad correction in nemo axisymmetric source residual, fixed fluid model/transport model print statement. Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes; This PR addresses an issue found with not setting primitive and conservative variables in computing the axisymmetric source residual, as well as implementing the auxvargrad indexing correction applied in the standard air axisymmetric source residual and fixing an issue with printing the fluid and transport models. . ## Related Work; This PR is related to #1192 and #1162. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1205:314,variab,variables,314,https://su2code.github.io,https://github.com/su2code/SU2/pull/1205,1,['variab'],['variables']
Modifiability,"flows. To perform such analysis, I need to firstly obtain a steady-state solution of the Navier-Stokes equations. This is not a problem when a physical steady-state exists but becomes cumbersome otherwise. In the latter case, I need to drive the flow to a steady-state numerically such that the flow becomes steady and linear stability analysis can be performed. Presently, there is no compressible open-source CFD code capable of supersonic simulations, as far as I know, able to obtain ''unstable'' steady-states. The solutions outlined below not only would give the users capabilities needed to perform stability analysis of globally unstable flows with help of SU2 code but would also provide means of accelerating convergence of any unsteady solution. **Describe the solution you'd like**; Implementation of selective frequency damping (SFD) for unsteady simulation as introduced in [1] and boostconv algorithm as proposed by [2]. _SFD_: A method, enabling the computation of steady solutions of the Navier-Stokes equations in globally unstable configurations. Steady-state is achieved by damping the unstable temporal frequencies with addition of a dissipative relaxation term proportional to the high-frequency content of the velocity fluctuations. [1]. _boostconv_: An iterative algorithm, inspired by Krylov-subspace methods, which is able to compute unstable steady states and/or accelerate the convergence to stable configurations. This algorithm is based on the minimization of the residual norm at each iteration step with a projection basis updated at each iteration rather than at periodic restarts like in the classical GMRES method. The algorithm is able to stabilize any dynamical system without increasing the computational time of the original numerical procedure used to solve the governing equations. _Moreover, it can be easily inserted into a pre-existing relaxation (integration) procedure with a call to a single black-box subroutine_. [2]. **Additional context**; I would b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022:1322,config,configurations,1322,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022,1,['config'],['configurations']
Modifiability,"from the community to start addressing these issues, as much as possible we will try to break these down into ""bite sized"" chunks. **To be clear, all contributions are welcome, even if they do not fit in one of the categories below.**; **The main objective here is consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - B",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:1499,refactor,refactoring,1499,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['refactor'],['refactoring']
Modifiability,"ftest.c >&5; configure:4022: $? = 0; configure:4031: result: yes; configure:4040: checking whether gcc accepts -g; configure:4060: gcc -c -g conftest.c >&5; configure:4060: $? = 0; configure:4101: result: yes; configure:4118: checking for gcc option to accept ISO C89; configure:4181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conftest.c -o conftest2.o >&5; configure:4380: $? = 0; configure:4386: gcc -c conftest.c -o conftest2.o >&5; configure:4390: $? = 0; configure:4401: cc -c conftest.c >&5; configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4619: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4644: result: gcc -E; configure:4664: gcc -E conftest.c; configure:4664: $? = 0; configure:4678: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4678: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #d",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:7771,config,configure,7771,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,14,['config'],['configure']
Modifiability,"fyi, the surface files output both a .csv and a .dat version, one of which; can be opened by tecplot (.dat) with everything you usually want for; visualization, while the other one contains the global index information; and values that are used in surface-based mesh deformation (and maybe other; tools, but that's the one I know of - I could see that format being useful; for prescribed surface properties as well). So one challenge that would be; faced with this change is how to make sure that both files are still; output. I would argue for switching to no suffixes where possible - less work for; new users, a little more work for us - one way we could get the best of; both worlds is by having the filenames written in the config without; suffix, but when loaded into su2 (and the python version of loading the; config file) store the variable with the appropriate suffix. That way if it; changes in the future it only has to be updated in one place, and all the; old config files would still work after a code change that alterred the; suffix.; -Heather. On Wed, Jul 30, 2014 at 11:05 AM, Brendan Tracey notifications@github.com; wrote:. > SU2 right now is inconsistent with how it does file names in the config; > file. For example, the restart file needs to be specified with a "".dat""; > suffix, but in the case of the surface files, the "".csv"" is added; > automatically. SU2 should be consistent across all filenames. Preferably,; > this will be fixed by having the user specify all suffixes. This is a tiny; > amount of additional work for the user, but it makes writing scripts that; > use the config file much easier. When the suffix is in the config file,; > it's easy to have python say ""open this file"". If the config file just has; > the base name of the file (no extension) then the knowledge of what suffix; > SU2 uses must be hard-coded into the follow-on script (which can then break; > later if SU2 changes).; > ; > —; > Reply to this email directly or view it on GitHub; > https",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/41#issuecomment-50703399:729,config,config,729,https://su2code.github.io,https://github.com/su2code/SU2/issues/41#issuecomment-50703399,4,"['config', 'variab']","['config', 'variable']"
Modifiability,g for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; --------------------------------------------------------------------,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:5922,config,config,5922,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,g for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; --,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6139,config,config,6139,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"g minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribut",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:2422,parameteriz,parameterization,2422,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['parameteriz'],['parameterization']
Modifiability,"g-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; Build targets in project: 12; ; Found ninja-1.10.0.git at /home/user/programs/su2/SU2_src/ninja; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; ```. Am I specifying it incorrectly?; Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4789,Config,Configuration,4789,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311,3,"['Config', 'config', 'variab']","['Configuration', 'configuration', 'variables']"
Modifiability,"g_amg['metric_in'] = ''; config_amg['sol_in'] = 'current_sensor.solb'; config_amg['itp_sol_in'] = 'current.solb'; config_amg['adap_source'] = ''; ; if 'ADAP_BACK' in config:; config_amg['adap_back'] = os.path.join(cwd,config['ADAP_BACK']); #os.symlink(os.path.join(cwd, config.ADAP_BACK), config.ADAP_BACK); else:; config_amg['adap_back'] = config['MESH_FILENAME']; ; print ""config_amg : "" + config_amg['adap_back']; back_name, back_extension = os.path.splitext(config_amg['adap_back']); ; if not os.path.exists(config_amg['adap_back']):; raise RuntimeError , ""\n\n##ERROR : Can't find back mesh: %s.\n\n"" % config_amg['adap_back']; ; if back_extension == "".su2"":; ; #pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); print ""skipping back mesh ...""; #import _amgio as amgio; #amgio.py_ConvertSU2toInria(config_amg['adap_back'], """", ""amg_back""); #config_amg['adap_back'] = ""amg_back.meshb""; ; if 'ADAP_SOURCE' in config:; config_amg['adap_source'] = os.path.join(cwd,config['ADAP_SOURCE']); ; global_iter = 0; ; sys.stdout.write(""\nStarting mesh adaptation process.\n""); ; for iSiz in range(len(mesh_sizes)):; ; mesh_size = int(mesh_sizes[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d - Mesh size coefficient %.1lf\n"" % (iSiz+1, len(mesh_sizes), mesh_size)); ; for iSub in range(nSub):; ; config_amg['size'] = mesh_size; config_amg['amg_log'] = 'ite%d.amg.stdout' % (global_iter); ; # Prints; pad_cpt = (""(%d/%d)"" % (iSub+1, nSub)).ljust(9); pad_nul = """".ljust(9); ; if not amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : Can't find mesh.\n""; ; #--- Get sensor; ; sensor = su2amg.create_sens",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:7822,config,config,7822,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"ge: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags /usr/lib/openmpi/libmpi.so -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enab",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2521,config,configuration,2521,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['config'],['configuration']
Modifiability,gen/Doxyfile (2368) ; - M INSTALL (2) ; - D Logo/logo_su2.jpg (0) ; - D Logo/su2_eagle.png (0) ; - M Makefile.am (32) ; - M Makefile.in (53) ; - D MeshTools/Matlab/MergeSU2.m (77) ; - D MeshTools/Matlab/ReadSU2.m (160) ; - D MeshTools/Matlab/WriteSU2.m (91) ; - D MeshTools/Matlab/angle2dcm.m (28) ; - D MeshTools/Matlab/example_MergeMeshes.m (38) ; - D MeshTools/Matlab/getElemTypeInfo.m (52) ; - D MeshTools/Matlab/mesh_bipara_1.su2 (38465) ; - D MeshTools/Matlab/mesh_bipara_2.su2 (3248) ; - D MeshTools/Matlab/plotElem.m (45) ; - D MeshTools/Matlab/plotFace.m (60) ; - D MeshTools/Matlab/plotMarkers.m (64) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux_x86_64 (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.macosx (112) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win (14) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win32 (33) ; - D MeshTools/PointwiseSU2plugin/Makefile (304) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.sln (64) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.suo (0) ; - D MeshTools/PointwiseSU2plugin/depend.sh (28) ; - D MeshTools/PointwiseSU2plugin/mkplugin (10) ; - D MeshTools/PointwiseSU2plugin/mkplugin.bat (82) ; - D MeshTools/PointwiseSU2plugin/mkplugin.tcl (422) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:13297,Plugin,PluginSDK,13297,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Plugin'],['PluginSDK']
Modifiability,ges/mpi4py/include. > --- stderr ---. > Message: Using mpi4py from /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include; Pkg-config binary for 1 is cached.; Determining dependency 'python-3.7m' with pkg-config executable '/usr/bin/pkg-config'; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --modversion python-3.7m` -> 0; 3.7; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --cflags python-3.7m` -> 0; -I/data/home/yamazaki/soft/Python-3.7.9/build/include/python3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; WARNING: extract_all_objects called without setting recursive; keyword argument. Meson currently defaults to; non-recursive to maintain backward compatibility but; the default will be changed in the future. >SU2_PY/pySU2/meson.build:27:2: ERROR: Tried to form an absolute path to a source dir.; You should not do that but use relative paths instead. >To get include path to any directory relative to the current dir do. >incdir = include_directories(dirname). >After this incdir will contain both the current source dir as well as the; corresponding build dir. It can then be used in any subdirectory and; Meson will ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1672:1460,config,config,1460,https://su2code.github.io,https://github.com/su2code/SU2/issues/1672,1,['config'],['config']
Modifiability,"gh I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multizone setup. - **General structure of the drivers**: Maybe there are relevant differences between `CSinglezoneDriver` and `CMultizoneDriver`, I don't know.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:4535,variab,variables,4535,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,2,['variab'],['variables']
Modifiability,gin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGrid,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:17771,plugin,plugins,17771,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"ging global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\U",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6427,config,config,6427,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,2,['config'],"['config', 'config-lite-']"
Modifiability,gins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/sr,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18134,plugin,plugins,18134,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f), the `SetRoe_Dissipation` function checked to see if the sensor values were valid regardless of the type of blending selected. Commit [ac8b3bf](https://github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f) changed the behavior to only check the sensor values if they will be used. The unit test sets the convective blending to `NTS`, feeds invalid sensor values into `SetRoe_Dissipation` and checks the output. ```cpp; // Used to set the Roe-low-dissipation option; void WriteCfgFile(unsigned short nDim, const char* filename,; std::string blending) {; std::ofstream cfg_file;. cfg_file.open(filename, ios::out);; cfg_file << ""PHYSICAL_PROBLEM= NAVIER_STOKES"" << std::endl;; cfg_file << ""ROE_LOW_DISSIPATION= "" << blending << std::endl;. cfg_file.close();; }. BOOST_AUTO_TEST_CASE(BadSensorsAllowedForNTS) {. /*--- Setup ---*/. const unsigned short nDim = 3;. /*--- Set up the config class for the test ---*/; char cfg_filename[100] = ""convective_blending_test.cfg"";; WriteCfgFile(nDim, cfg_filename, ""NTS"");; CConfig* config = new CConfig(cfg_filename, SU2_CFD, 0, 1, 2, VERB_NONE);; std::remove(cfg_filename);. /*--- Inputs ---*/; const su2double dissipation_i = 0.4;; const su2double dissipation_j = 0.6;; const su2double sensor_i = NAN; // Intentionally unphysical:; const su2double sensor_j = NAN; // Intentionally unphysical:. /*--- Outputs ---*/; su2double dissipation;. /*--- Test ---*/. CNumerics numerics;; numerics.SetRoe_Dissipation(dissipation_i, dissipation_j,; sensor_i, sensor_j,; dissipation, config);. const su2double tolerance = std::numeric_limits<su2double>::epsilon();; BOOST_CHECK_CLOSE_FRACTION(dissipation, 0.5, tolerance);. /*--- Teardown ---*/; delete config;; }; ```. There's a couple problems I would fix if I had more time. Ideally, I would be writing the cfg file to an in-memory stream and not to a file. And realistically, I shouldn't need to use a config file at all for a sim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499999225:1267,config,config,1267,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499999225,2,['config'],['config']
Modifiability,"gnized option '-qversion'; g++: no input files; configure:3343: $? = 1; configure:3363: checking whether the C++ compiler works; configure:3385: g++ conftest.cpp >&5; configure:3389: $? = 0; configure:3437: result: yes; configure:3440: checking for C++ compiler default output file name; configure:3442: result: a.out; configure:3448: checking for suffix of executables; configure:3455: g++ -o conftest conftest.cpp >&5; configure:3459: $? = 0; configure:3481: result: ; configure:3503: checking whether we are cross compiling; configure:3511: g++ -o conftest conftest.cpp >&5; configure:3515: $? = 0; configure:3522: ./conftest; configure:3526: $? = 0; configure:3541: result: no; configure:3546: checking for suffix of object files; configure:3568: g++ -c conftest.cpp >&5; configure:3572: $? = 0; configure:3593: result: o; configure:3597: checking whether we are using the GNU C++ compiler; configure:3616: g++ -c conftest.cpp >&5; configure:3616: $? = 0; configure:3625: result: yes; configure:3634: checking whether g++ accepts -g; configure:3654: g++ -c -g conftest.cpp >&5; configure:3654: $? = 0; configure:3695: result: yes; configure:3720: checking dependency style of g++; configure:3831: result: gcc3; configure:3921: checking for gcc; configure:3937: found /usr/bin/gcc; configure:3948: result: gcc; configure:3979: checking for C compiler version; configure:3988: gcc --version >&5; gcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3999: $? = 0; configure:3988: gcc -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --ena",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:4984,config,configure,4984,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,8,['config'],['configure']
Modifiability,"going characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade with respect to certain performance parameters (ENTROPY_GENERATION, TOTAL_PRESSURE_LOSS, KINETIC_ENERGY_LOSS, ecc.). However, the optimization script only works for 2D blades since the FFD and the mesh deformation routines need still to be adapted to handle 3D blades (especially for problem on the deformation of the hub and shroud surfaces).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:2867,adapt,adapted,2867,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,1,['adapt'],['adapted']
Modifiability,"gs mentioned above. However, the current implementation in develop only works correctly for PARAVIEW_MULTIBLOCK and for RESTART type output files. This is because in the case of PARAVIEW_MULTIBLOCK, the additional file output using the iteration number in the filename, is performed in the switch case block directly. . For all other output files, the switch case block only generates the correct filename with the iteration number appended. After the switch block, it is (wrongly) checked if (and only if) the WRT_RESTART_OVERWRITE flag is set to NO. If so, the additional file is written. Therefore, this logic only works correctly for RESTART files (and PARAVIEW_MULTIBLOCK files, because for that format, the file dump is independent of the file dump after the switch block. . The proposed fix here introduces a local boolean (doWriteIterFile) that acts as a switch for the additional file dump. It is set in the switch case block and afterwards it is checked if this variable is true or false. Based on this value, the file dump is executed or not. Furthermore, the fix introduces and corrects some comments to make the function easier to understand. ## Related Work; The flags are already available in the develop branch as config options but they don't work as expected. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2036:1965,config,config,1965,https://su2code.github.io,https://github.com/su2code/SU2/pull/2036,1,['config'],['config']
Modifiability,"gure:3332: g++ -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3343: $? = 0; configure:3332: g++ -V >&5; g++: '-V' option must have argument; configure:3343: $? = 1; configure:3332: g++ -qversion >&5; g++: unrecognized option '-qversion'; g++: no input files; configure:3343: $? = 1; configure:3363: checking whether the C++ compiler works; configure:3385: g++ conftest.cpp >&5; configure:3389: $? = 0; configure:3437: result: yes; configure:3440: checking for C++ compiler default output file name; configure:3442: result: a.out; configure:3448: checking for suffix of executables; configure:3455: g++ -o conftest conftest.cpp >&5; configure:3459: $? = 0; configure:3481: result: ; configure:3503: checking whether we are cross compiling; configure:3511: g++ -o conftest conftest.cpp >&5; configure:3515: $? = 0; configure:3522: ./conftest; configure:3526: $? = 0; configure:3541: result: no; configure:3546: checking for suffix of object files; configure:3568: g++ -c conftest.cpp >&5; configure:3572: $? = 0; configure:3593: result: o; configure:3597: checking whether we are using the GNU C++ compiler; configure:3616: g++ -c conftest.cpp >&5; configure:3616: $? = 0; configure:3625: result: yes; conf",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:3889,config,configure,3889,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,14,['config'],['configure']
Modifiability,"gure:4664: $? = 0; configure:4678: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4678: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:9618,config,configure,9618,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,6,['config'],['configure']
Modifiability,gure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173:,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:11216,config,configure,11216,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"h Adaptation\n""); ; #--- TODO: Check pyamg version compatibility; ; #--- Check config options related to mesh adaptation; ; adap_options = ['ADAP_SIZES', 'ADAP_SUBITE', 'ADAP_SENSOR', \; 'ADAP_BACK', 'ADAP_HMAX', 'ADAP_HMIN', 'ADAP_HGRAD', 'ADAP_RESIDUAL_REDUCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FI",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:3588,config,config,3588,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"h adds a native CHT functionality to SU2. Main contents are:. 1. A new driver (CMultiPhysicalZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505:1017,adapt,adaption,1017,https://su2code.github.io,https://github.com/su2code/SU2/pull/505,1,['adapt'],['adaption']
Modifiability,"h allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_AD.cpp` into new driver classes, e.g. `CDeformationDriver` and `CDiscAdjProjectionDriver`, broken down into pre-processing, execution, output, and postprocessing.; - Exposing these new driver classes to Python through a SWIG `.i` file. Beyond offering a solution to the problem described above, allowing the complete optimisation iteration to be controlled externally (for example by an MDO framework), this might in the long term also allow providing deformations to the `SU2_DEF` routine directly in Python, as an alternative to the surface deformation file. Similarly, the surface sensitivities resulting from `SU2_DOT_AD` could be accessed directly in Python for post-processing. **Alternatives**; The proposed solution is hopefully a starting point for some discussion, should there be interest in the issue. Suggestions which could help with the refinement and implementation of the proposed solution, or any alternative, would be very welcome. **Discla",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:2597,Refactor,Refactoring,2597,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['Refactor'],['Refactoring']
Modifiability,"h and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be remo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:3142,config,configuring-code-scanning,3142,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['config'],['configuring-code-scanning']
Modifiability,"h size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link current files; ; config_cfd = copy.deepcopy(config); for opt in adap_options:; config_cfd.pop(opt, None); config_cfd.LOW_MEMORY_OUTPUT = ""NO""; ; config_cfd.WRT_BINARY_RESTART = ""NO""; #config_cfd.READ_BINARY_RESTART = ""NO""; ; current_mesh = ""Initial_mesh""; current_solution = ""Initial_solution""; ; if config['RESTART_SOL'] == 'NO':; ; stdout_hdl = open('ini.stdout','w') # new targets; stderr_hdl = open('ini.stderr','w'); ; success = False; val_out = [False]; ; sys.stdout.write('Running initial CFD solution.\n'); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_mesh = config['MESH_FILENAME']; current_solution = ""ini_restart_flow.dat""; ; config_cfd.CONV_FILENAME = ""ini_history""; config_cfd.RESTART_FLOW_FILENAME = current_solution; ; SU2_CFD(config_cfd); ; except:; sys.stdout =",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:4540,config,config,4540,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"h>. // An example type to use instead of the container that stores solution data for all vertices.; struct SolutionContainer; {; std::array<double,3> velocity;; std::array<double,3> areaVector;; };. using ResultType = double;. // We want classes with this interface.; class VirtualInterface; {; public:; virtual ResultType Compute(const SolutionContainer&) const = 0;; };. // The Compute method is to be composed via an inheritance chain, to do this; // we allow each building block to inherit from any class. These classes should; // be function objects that have no member variables, all data used in the; // resulting Compute method will be on the stack.; template<typename Base>; class ComputeArea : Base; {; protected:; // Different template instantiations will be made for; // 2D/3D to allow perfect loop unrolling.; enum : int {nDim = Base::nDim};. // To share variables between building blocks we will pass; // down a struct which is also composed by inheritance; struct WorkVarsType : Base::WorkVarsType; {; double area; // add ""area"" to the variables of Base; };; ; // The final implementation of Compute will be a call down the chain.; // The final constructed WorkVarsType is not known at this stage,; // hence we also template the method.; template<typename WV>; void Compute(WV& wv, const SolutionContainer& sol) const; {; // Boilerplate, call base first. This is akin to the decorator design pattern; // without polymorphism. The working variables resemble Python's ""self"" which; // makes this solution reasonably idiomatic.; Base::Compute(wv, sol);. // Then do our specific job.; wv.area = 0.0;; for(int i=0; i<nDim; ++i); wv.area += pow(sol.areaVector[i],2);; wv.area = sqrt(wv.area);; }; };. // Same mechanics as above; template<typename Base>; class ComputeFlux : Base; {; protected:; enum : int {nDim = Base::nDim};. struct WorkVarsType : Base::WorkVarsType ; {; double flux; // ...add new member; };. template<typename WV>; void Compute(WV& wv, const SolutionContainer& sol) cons",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:3005,variab,variables,3005,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,6,"['inherit', 'variab']","['inheritance', 'variables']"
Modifiability,hTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugi,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:16537,plugin,plugins,16537,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"he config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files. ## Parallel Unsteady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 100`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below).; ; ## Serial Steady Freq=1; * Following cha",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:2284,config,config,2284,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['config'],['config']
Modifiability,"he host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SH",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:1885,Config,Configuration,1885,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Config'],['Configuration']
Modifiability,"he limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousand. Ultra fine RANS meshes can still slow things down (MG could help there), but otherwise, speedups of an order of magnitude (or more) are possible for most problems. Experiment yourselves.. sometimes you can get even more performance, sometimes less, case depending. I could use help testing this one with your cases, since I think almost all regression tests will change. As a start, I have run all of the NASA TMR 2D bump-in-channel cases. Everything looks good with that (see figures). I have also checked that the inviscid and laminar MMS give 2nd-order accuracy ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:2636,adapt,adaption,2636,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['adapt'],['adaption']
Modifiability,"he refactoring he was doing and will try to bring as much as possible into this, but I need to do it in smaller steps. Now this PR deals with some of the aforementioned refactoring, namely:; - CG, BCGSTAB, and GMRES have their working vectors and matrices as members of CSysSolve and allocate them only on the first call.; - CSysSolve is now a member of CSolver and CVolumetricMovement.; - BCGSTAB uses two fewer vectors than before and the ""p"" and ""v"" vectors are initialized to 0 instead of ""b"" (I think this was a small bug?).; - CSysSolve takes a ""mesh deformation"" flag at construction so that Solve can be called by CSolver and by CElasticityMovement, before the latter decided what Krylov method to call in place, kind of duplicating what is done by Solve. I did not do the same for CVolumetricMovement because there the differentiation is handled differently. This also allowed SetExternalSolve_Mesh to be merged with SetExternalSolve.; - Now when CSysSolve sets the external solve it passes itself (*this*) so that CSysSolve_b re-uses it in the reverse path instead of instantiating a CSysSolve every time.; - Part of CSysSolve_b::Solve_b was moved to CSysSolve::Solve_b to allow CSysSolve_b::Solve_g to be dropped. CSysSolve_b::Solve_b now simply prepares the RHS of the adjoint system and calls Solve_b on the pointer it gets through the AD data handler. I decided not to shoehorn Solve_b into Solve as that would be a bit unreadable. I will now start tackling the templating part, and once I can demonstrate that that works, start bringing in Tim's refactoring. ## Related Work; #648 ; *feature_template_linear_solver*. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650:2903,refactor,refactoring,2903,https://su2code.github.io,https://github.com/su2code/SU2/pull/650,1,['refactor'],['refactoring']
Modifiability,"he solver, only the operation A^-1 * b. Nevertheless currently all CSysVectors and CSysMatrices use su2double which makes them incompatible with external libraries and slower than in direct mode.; To address this issue I want to template the required classes such that we have the option (but not be obligated) to have CSysMatrices of passivedoubles in the discrete adjoint.; Moreover, I want to do some refactoring to make CSysSolve a proper class instead of an aggregate of functions. Currently we instantiate a CSysSolve whenever we need to solve a system, I think it would be beneficial to keep CSysSolve as a member of the classes that use it, so that for example, working memory used by Krylov methods is allocated only once. Note: I am aware that @talbring started some work on this (and more) in the *feature_template_linear_solver* branch, I tried to pick up were Tim left of but it was too much (a lot changes in one year). I really like the refactoring he was doing and will try to bring as much as possible into this, but I need to do it in smaller steps. Now this PR deals with some of the aforementioned refactoring, namely:; - CG, BCGSTAB, and GMRES have their working vectors and matrices as members of CSysSolve and allocate them only on the first call.; - CSysSolve is now a member of CSolver and CVolumetricMovement.; - BCGSTAB uses two fewer vectors than before and the ""p"" and ""v"" vectors are initialized to 0 instead of ""b"" (I think this was a small bug?).; - CSysSolve takes a ""mesh deformation"" flag at construction so that Solve can be called by CSolver and by CElasticityMovement, before the latter decided what Krylov method to call in place, kind of duplicating what is done by Solve. I did not do the same for CVolumetricMovement because there the differentiation is handled differently. This also allowed SetExternalSolve_Mesh to be merged with SetExternalSolve.; - Now when CSysSolve sets the external solve it passes itself (*this*) so that CSysSolve_b re-uses it in t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650:1345,refactor,refactoring,1345,https://su2code.github.io,https://github.com/su2code/SU2/pull/650,1,['refactor'],['refactoring']
Modifiability,"he wall distances only need to be computed once for distance-based stiffness, and the stiffness matrix is now symmetric after applying BCs so conjugate gradient can be used to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @talbring ; - I already started adding the mesh solver, numerics and transfer functions in separate files as discussed in #583 and already started in #725. For clarity and ease of merging, only new classes are split so far, but I will probably start splitting other structures soon in PRs to come. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. I",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:1502,refactor,refactoring,1502,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['refactor'],['refactoring']
Modifiability,header_stdc=yes; ac_cv_header_stdint_h=yes; ac_cv_header_stdlib_h=yes; ac_cv_header_string_h=yes; ac_cv_header_strings_h=yes; ac_cv_header_sys_stat_h=yes; ac_cv_header_sys_types_h=yes; ac_cv_header_unistd_h=yes; ac_cv_host=x86_64-unknown-linux-gnu; ac_cv_objext=o; ac_cv_path_EGREP='/bin/grep -E'; ac_cv_path_GREP=/bin/grep; ac_cv_path_install='/usr/bin/install -c'; ac_cv_path_mkdir=/bin/mkdir; ac_cv_prog_AWK=gawk; ac_cv_prog_CPP='gcc -E'; ac_cv_prog_ac_ct_CC=gcc; ac_cv_prog_ac_ct_CXX=g++; ac_cv_prog_ac_ct_RANLIB=ranlib; ac_cv_prog_cc_c89=; ac_cv_prog_cc_g=yes; ac_cv_prog_cc_gcc_c_o=yes; ac_cv_prog_cxx_g=yes; ac_cv_prog_make_make_set=yes; ac_cv_sizeof_double=8; ac_cv_sizeof_float=4; ac_cv_sizeof_int=4; ac_cv_sizeof_long_int=8; ac_cv_sizeof_short_int=2; ac_cv_sizeof_unsigned_int=4; ac_cv_sizeof_void_p=8; ac_cv_target=x86_64-unknown-linux-gnu; am_cv_CC_dependencies_compiler_type=gcc3; am_cv_CXX_dependencies_compiler_type=gcc3; am_cv_make_support_nested_variables=yes. ## ----------------- ##; ## Output variables. ##; ## ----------------- ##. ACLOCAL='${SHELL} /home/antodech/SU2-4.1.0/missing --run aclocal-1.12'; AMDEPBACKSLASH='\'; AMDEP_FALSE='#'; AMDEP_TRUE=''; AMTAR='$${TAR-tar}'; AM_BACKSLASH='\'; AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'; AM_DEFAULT_VERBOSITY='0'; AM_V='$(V)'; AUTOCONF='${SHELL} /home/antodech/SU2-4.1.0/missing --run autoconf'; AUTOHEADER='${SHELL} /home/antodech/SU2-4.1.0/missing --run autoheader'; AUTOMAKE='${SHELL} /home/antodech/SU2-4.1.0/missing --run automake-1.12'; AWK='gawk'; BUILD_CFD_FALSE='#'; BUILD_CFD_TRUE=''; BUILD_CGNS_FALSE='#'; BUILD_CGNS_TRUE=''; BUILD_DEF_FALSE='#'; BUILD_DEF_TRUE=''; BUILD_DIRECTDIFF_FALSE=''; BUILD_DIRECTDIFF_TRUE='#'; BUILD_DOT_FALSE='#'; BUILD_DOT_TRUE=''; BUILD_GEO_FALSE='#'; BUILD_GEO_TRUE=''; BUILD_HDF5_FALSE=''; BUILD_HDF5_TRUE='#'; BUILD_JSONCPP_FALSE=''; BUILD_JSONCPP_TRUE='#'; BUILD_LAPACK_FALSE=''; BUILD_LAPACK_TRUE='#'; BUILD_METIS_FALSE=''; BUILD_METIS_TRUE='#'; BUILD_MSH_FALSE='#'; BUILD_MSH_TRUE=''; B,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:21525,variab,variables,21525,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['variab'],['variables']
Modifiability,"here a full ""solver"" status, and uses the FEA Elasticity classes as its basis. The pseudo-linear elastic solver now always refers to the initial, undeformed geometrical discretization, therefore ensuring that the problem remains traceable to the original mesh, and that when volumes are computed to deform the mesh, the initial quality of the elements is observed. . With this framework, the wall distances only need to be computed once for distance-based stiffness, and the stiffness matrix is now symmetric after applying BCs so conjugate gradient can be used to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @ta",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:954,config,config,954,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,2,"['adapt', 'config']","['adapt', 'config']"
Modifiability,"hine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running comma",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6002,config,config,6002,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config']
Modifiability,"his PR applies the following bugfixes:; - correct retrieval of the wall roughness in a multizone setup, the original intention of this PR; - the non-MPI substitute for `SU2_MPI::Allgatherv` and `Alltoallv` now takes the displacement into account; - fix #1293, adding a missing `#include` statement . Below is the original PR description. ## Proposed Changes; I think that currently the roughness at the closest wall is retrieved in a wrong way for multizone setups. The current structure is like this:. def CGeometry::ComputeWallDistance:; for each iZone:; construct an ADT which stores the markers of iZone; for each jZone:; call CPhysicalGeometry::SetWallDistance to jZone geometry which \; reduces the stored wall distances of jZone's points according to iZone's markers in the ADT and\; sets wall roughnesses of jZone's points according to data from jZone's geometry. The issue I perceive here is that the closest wall in the ADT, identified by the `markerID`, belongs to `iZone`. `iZone`'s geometry and config must therefore be an additional argument to `CPhysicalGeometry::SetWallDistance`. We must not use the wall roughness from `jZone`'s geometry and config associated to the markerID, as it is currently done. ## Related Work; ?; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286:1073,config,config,1073,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286,2,['config'],['config']
Modifiability,"his PR introduces the discrete adjoint counterpart for the multizone driver. It also comes with some heat solver-related additions for the new input/output structure as CHT (conjugate heat transfer) cases are the primary application so far. The new driver adapts many of the well-known routines for registering variables, recording, initializing and extracting adjoints. The main difference is the handling of multiple zones. . The adjoint (fixed point-) iteration approach in `CDiscAdjMultizoneDriver` is to initialize them per-zone in an outer loop and to extract adjoints with respect to _dependent variables from all zones_, thereby inherently capturing the cross dependencies.; Multiple successive evaluations of adjoints with respect to the same zone (equivalent to inner iterations in the multizone driver) are possible.; ; In order not to have to re-record a tape in the (outer) zone-loop as it can be quite costly, this branch includes some new functionalities in the underlying AD-structure which make it possible to record a ""full"" tape that holds all derivative information and that can be accessed flexibly for different input and output variables across zones.; This also overcomes the restriction that adjoints have to be evaluated in the same order as their variables had been registered.; ; This is the first version of the driver and my intention is to continue contributing to it in terms of both performance and coverage of different kinds of physical couplings in SU2. ## PR Checklist; A regression test for a heated cylinder array with conjugate heat transfer is added to `TestCases/coupled_cht/disc_adj_incomp_2d`. The very same case is used in a tutorial showcasing the new driver and CHT sensitivity analysis, see [Heated cylinders test case](https://github.com/su2code/su2code.github.io/pull/14). I'll check carefully for compiler warnings during test phase. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774:1173,variab,variables,1173,https://su2code.github.io,https://github.com/su2code/SU2/pull/774,1,['variab'],['variables']
Modifiability,"hmm there weren't when I submitted it but I'll see what's up, I'm assuming either; some more recent commits to develop or that last commit that removed a couple of unused variables. On Tue, Oct 27, 2015 at 1:36 PM, Thomas D. Economon <; notifications@github.com> wrote:. > @hlkline https://github.com/hlkline, looks like there are conflicts in; > the pull request... When you have a moment, could you please check it out; > so that we can get this merged in soon?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/su2code/SU2/pull/204#issuecomment-151636306. ## . Heather Kline; PhD Candidate, NASA Space Technology Research Fellow; Aeronautics & Astronautics; Stanford University; kline.hl@gmail.com, hlkline@stanford.edu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/204#issuecomment-151637159:171,variab,variables,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/204#issuecomment-151637159,1,['variab'],['variables']
Modifiability,"hon. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:1432,variab,variable,1432,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['variab'],['variable']
Modifiability,"hon3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in _minimize_slsqp; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in <listcomp>; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 107, in merge_solution; SU2_SOL( config ); File ""/usr/local/bin/SU2/run/interface.py"", line 207, in SOL; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 270, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2-7.3.0/xxxx/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -n 4 /home/xxx/SU2-7.3.0/SU2/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '139'; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 1 with",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:4526,config,config,4526,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['config'],['config']
Modifiability,"hort array of matrices, the result of that is code like the above that explicitly manipulates the lanes of our SIMD type, such code can be completely hidden inside CSysMatrix which is good because a 4x4 vectorized transpose and matrix update looks like this; ```c++; // block j, subs from jj and goes to ij; T0 = blk_j[ k ].unpackLo(blk_j[k+1]); T1 = blk_j[ k ].unpackHi(blk_j[k+1]);; T2 = blk_j[k+2].unpackLo(blk_j[k+3]); T3 = blk_j[k+2].unpackHi(blk_j[k+3]);. C0 = T0.widePermuteLo(T2); C1 = T1.widePermuteLo(T3);; C2 = T0.widePermuteHi(T2); C3 = T1.widePermuteHi(T3);. (Array4d(&bjj[0][k])-C0).store(&bjj[0][k]);; (Array4d(&bjj[1][k])-C1).store(&bjj[1][k]);; (Array4d(&bjj[2][k])-C2).store(&bjj[2][k]);; (Array4d(&bjj[3][k])-C3).store(&bjj[3][k]);. C0.store(&bij[0][k]); C1.store(&bij[1][k]);; C2.store(&bij[2][k]); C3.store(&bij[3][k]);; ```; I am showing this because it represents a readability worst case in terms of manipulating SIMD types, we might end up with one or two of these to get the best performance possible but they will always be encapsulated and deep in kernel-type areas of SU2 that are almost never touched. ## Conclusions; - Over 45% faster CSysMatrix updates by mapping off-diagonal blocks to edges and diagonal blocks to points.; - Colouring is the best strategy for hybrid parallelism of compute-heavy edge loops and matrix updates as it interleaves compute and memory operations.; - AoS storage should be kept to avoid significant loss of performance in compute-light edge loops due to poor locality of SoA storage.; - Major implication of AoS is on point loops where some data needs to be fetched (transposed) into local variables for effective vectorization.; - An intermediate storage scheme, AoSoA, can provide both good locality and vectorization of point loops, however it requires that data be accessed via special iterators and scalar code based on it would have poor performance. Next I will try to estimate how much we can gain for a ""realistic"" numerics class.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:17193,variab,variables,17193,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['variab'],['variables']
Modifiability,https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc); - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Another important updated to BC in parallel; - More implementation and clean up of the parallel CGNS reader.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - CGNS reader bug fix.; - Updated adj. NS solver with primitive variables and farfield bc including viscous contribution.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Small change; - Back to the previous version; - Fixed some loop variables.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixes for CGNS.; - New slope limiter based on the wall distance; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - Non-dimensional adjoint bc; - CGNS bug.; - Mixed-element support in new CGNS reader.; - Memory fix for mixed-element CGNS in parallel.; - Activated the parallel CGNS reader.; - New FFD input; - Adjacency building for Parmetis improve to account for VTK structure; - added if viscous steps to some adjeuler bcs; - Minor changes; - Back to previous version of ParMetis; - Small change; - Final update.; - Minor bug fixed.; - Updated SU2_DEF (cgns); - CGNS global element ID bug fix.; - Heat flux bug fix.; - Small fix.; - Merge branch 'master' into develop; - changed history output to match # of residuals printed in header and body; - further correction to history output; - history file fix; - fixed history out,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:7019,variab,variables,7019,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['variab'],['variables']
Modifiability,"hub.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/o",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:15492,config,configure,15492,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,10,['config'],['configure']
Modifiability,"i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special v",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:6719,variab,variables,6719,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['variab'],['variables']
Modifiability,"iVar); {; lim_i[iVar] = (lim_i[iVar]-phi(iPoint,iVar))/proj_i[iVar];; limiter(iPoint,iVar) = min(limiter(iPoint,iVar), lim_i[iVar]);. lim_j[iVar] = (lim_j[iVar]-phi(jPoint,iVar))/proj_j[iVar];; limiter(jPoint,iVar) = min(limiter(jPoint,iVar), lim_j[iVar]);; }; }. #pragma omp parallel for schedule(dynamic,TARGET_CHUNK_SIZE); for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; double lim = limiter(iPoint,iVar);; limiter(iPoint,iVar) = lim*(lim+2)/(lim*lim+lim+2);; }; }; }; ```; Again to keep things short here is the parallel and SIMD point-loop version (like for gradients it is very similar to the scalar and sequential version).; ```C++; void computeLimiters(size_t nPoint,; size_t nVar,; size_t nDim,; const Adjacency<4>& adj,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; Matrix& limiter); {; const size_t SIMDLEN = 4;; using FltVec = Array<double,SIMDLEN>;. // working variables; FltVec phiMax[MAXNVAR], phiMin[MAXNVAR], prjMax[MAXNVAR], prjMin[MAXNVAR];. const double eps = numeric_limits<double>::epsilon();. #pragma omp parallel for schedule(dynamic,128) private(phiMax,phiMin,prjMax,prjMin); for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); {; for(size_t iVar=0; iVar<nVar; ++iVar); {; phiMin[iVar] = phiMax[iVar] = phi.getVec(iPoint,iVar);; prjMax[iVar] = eps;; prjMin[iVar] = -eps;; }. for(size_t iNeigh=0; iNeigh<adj.nNeighbor(iPoint); ++iNeigh); {; auto jPoint = adj.jPoint_vec(iPoint,iNeigh);. FltVec d_ij[3] = {FltVec(0.0), FltVec(0.0), FltVec(0.0)};. for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = (coords.getVec(jPoint,iDim)-; coords.getVec(iPoint,iDim))*0.5;. for(size_t iVar=0; iVar<nVar; ++iVar); {; FltVec prj = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); prj += d_ij[iDim]*grad.getVec(iPoint,iVar,iDim);. prjMax[iVar] = vmax(prjMax[iVar], prj);; prjMin[iVar] = vmin(prjMin[iVar], prj);. phiMax[iVar] = vmax(phiMax[iVar], phi.getVec(jPoint,iVar));; phiMin[iVar] = vmin(phiMin[iVa",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:7743,variab,variables,7743,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['variab'],['variables']
Modifiability,"ialization part, k is considered depending on whether or not the SST model is used for Total Energy. In CEulerSolver.cpp ; `bool tkeNeeded = (turbulent && config->GetKind_Turb_Model() == TURB_MODEL::SST);`; `if (tkeNeeded) { Energy_FreeStream += Tke_FreeStream; }; config->SetEnergy_FreeStream(Energy_FreeStream);`; `if (tkeNeeded) Energy_FreeStreamND += Tke_FreeStreamND;`. But In the flux calculation part, when calculating the speed of sound(a), using the total enthalpy(H). But, in this part consider only the kinetic energy. . Expressed mathematically ; ![image](https://user-images.githubusercontent.com/50565314/208861650-92b8cad6-5a1f-4742-952b-30d0187ae28b.png). but in the SU2 code using below. ![image](https://user-images.githubusercontent.com/50565314/208861902-ff614d53-d07e-4237-a04d-73a49ad5a55c.png). The speed of sound always has a slightly high value because TKE is not subtracted. See ""roe.cpp"" line 119 ~ 149. ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel);` ; This line might be changed roughly like : ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel-k);` . There seem to be two possible ways to this problem.; 1. Subtract TKE when the speed of sound calculation; 2. Store e(static energy) or k in primitive variables; 3. ; I'm not sure which is clear and easy. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ ] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [ ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ ] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v7.4.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851:2310,variab,variables,2310,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851,1,['variab'],['variables']
Modifiability,"ib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.D.Palacios@boeing.com|; | Dr. Thomas D. Economon, economon@stanford.edu |; -------------------------------------------------------------------------; | SU2 Developers: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16482,config,config,16482,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,"ic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5lTmsMaJ6%2Fgx7gHoyM%3D&reserved=0>, or unsubscribe<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2F",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202:1185,config,config,1185,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202,4,"['config', 'variab']","['config', 'variable']"
Modifiability,"ield and outlet as TOTAL_INLET, FARFIELD, OUTLET and EULER and some (not all) combination between these BC were tried. The mesh was generated with Salome-Meca. It is a tetrahedral mesh. I have a script that permits to change the domain size with ease. So from the mesh perspective it is fairly easy to test different mesh sizes and domain sizes.; Generally the outer domain radius was between 1.5*propRadius to 10*propRadus. Domain height between 3*propRadius to 15*propRadius. The prop was at 2/3 of the total height (1/2 and 3/4 were also tested). Some simulations approximated from a far experimental results (thrust +/-10% error, torque +/-15%). Some completely diverged some converge towards something way out of the 10% error range. **To Reproduce**. You can find the configuration file below.; I cannot provide the mesh at the moment.; If needed I will change the geometry for ""reproduction"". `%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: Caradonna & Tung rotor in hover (still air) %; % Author: Thomas D. Economon %; % Institution: Stanford University %; % Date: 2020.05.24 %; % File Version 7.3.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION); SOLVER= EULER; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= NO . % ----------- COMPRESSIBLE AND INCOMPRESSIBLE FREE-STREAM DEFINITION ----------%; %; % Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.0; %; % Angle of attack (degrees); AOA= 0.0; %; % Side-slip angle (degrees); SIDESLIP_ANGLE= 0.0; %; % Free-stream pressure (101325.0 N/m^2 by default, only Euler flows) ; FREESTREAM_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:2638,config,configuration,2638,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['config'],['configuration']
Modifiability,ig; checking python include flags... -I/usr/include/python2.7 -I/usr/include/python2.7; checking how to run the C preprocessor... /usr/lib64/mpich/bin/mpicc -E; checking for grep that handles long lines and -e... /usr/bin/grep; checking for egrep... /usr/bin/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:5577,Config,Configuring,5577,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,3,['Config'],['Configuring']
Modifiability,"iguration with a lower output frequency can run significantly more iterations without exceeding limits. I may be missing something, but it seems like there is a potential memory leak dependent on the output frequency, which I've documented in this report. **Expected**; Memory usage remains steady over time and does not significantly change with output frequency. **Local tests**; I was able to reproduce the issue locally on a workstation using the [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012), whereby all 2200 time iterations are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files. ## Parallel Unsteady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:1301,config,config,1301,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['config'],['config']
Modifiability,"ike Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.so]), ; [with_Metis_lib=$withval], [with_Metis_lib=""no""]); AC_ARG_WITH(Metis-include,; AS_HELP_STRING([--with-Metis-include[=ARG]], [Metis include directory, ARG = path to metis.h]), ; @@ -121,7 +121,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/Common/src/geometry_structure.cpp; ===================================================================; --- SU2-2.0.8/Common/src/geometry_structure.cpp; +++ SU2-2.0.8/Common/src/geometry_structure",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/19:1576,config,configure,1576,https://su2code.github.io,https://github.com/su2code/SU2/issues/19,1,['config'],['configure']
Modifiability,"il now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528:1381,adapt,adapted,1381,https://su2code.github.io,https://github.com/su2code/SU2/pull/528,1,['adapt'],['adapted']
Modifiability,"ild; Build type: native build; Project name: SU2; Project version: 7.5.1 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\zeng\AppData\Local\Programs\Python\Python37\python.exe); WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.platlibdir"" option.; WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.purelibdir"" option.; Found pkg-config: C:\Program Files\mingw-w64\bin\pkg-config.EXE (0.26); mpicc found: NO; Run-time dependency MPI for c found: YES; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig, config-tool and system). meson.build:61:2: ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system. A full log can be found at F:\suflow\code\Su-FVMu-Solver\build\meson-logs\meson-log.txt; ```. meson-log.txt: ; [meson-log.txt](https://github.com/su2code/SU2/files/12427739/meson-log.txt). **Bug report checklist**. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Windows/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Windows 11; - C++ compiler and version: gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0; - MPI implementation and version: msmpi 10.1.2; - SU2 Version: 7.5.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:1433,config,config-tool,1433,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,2,['config'],['config-tool']
Modifiability,"imizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859E-11; Optimization terminated successfully. (Exit mode 0); Current function value: 1.07807522; Iterations: 1; Function evaluations: 1; Gradient evaluations: 1. And no further designs are generated. What makes SLSQP to 'converge'?. **I am using branch** [turbo_output_opt](https://github.com/su2code/SU2/compare/develop...turbo_output_opt) (updated to latest develop). Thanks in advance. Config file: [case728.txt](https://github.com/su2code/SU2/files/4606913/case728.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:1885,variab,variables,1885,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,2,"['Config', 'variab']","['Config', 'variables']"
Modifiability,"implified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is that we then need to provide a portable version that can be differentiated with CoDi or to implement the exact differentiation (similar to what is done in the ""solve_b"" routines). @vdweide that is not an issue with Eigen because everything is templated and therefore compatible with any type or class that overloads the appropriate arithmetic operators.; I have used it for over 2 years and I can attest to its compatibility with AD tools (I've tried 3), and speed when linked with a BLAS library, their native implementations are also very good, peeking inside their code... you can tell they know what they are doing. P.S. I feel this post needs a disclaimer, I am not affiliated in any way to Eigen, my motivation is not to promote their work (but I obviously think they deserve it). I genuinely think adopting an algebra library (that is compatible with AD) would greatly simplify our work and further drop the entry barrier to new developers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:2229,portab,portable,2229,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,2,['portab'],['portable']
Modifiability,"in essence both are performing similar duties, but people should express their opinions. With that said, how about a boolean such as USE_WALL_FUNCTIONS / USE_WALL_MODEL (YES or NO) with an optional argument WALL_FUNCTION_TYPE / WALL_MODEL_TYPE that can taken one of many pre-specified values that can be added as these options are developed and tested? Certainly options like STANDARD_WALL_FUNCTION, ADAPTIVE_WALL_FUNCTION, SCALABLE_WALL_FUNCTION, compressible and incompressible versions, and even EQUILIBRIUM_WALL_MODEL and NONEQUILIBRIUM_WALL_MODEL are things that are likely to be in the code in the near future. Thoughts?. Juan. On Sep 5, 2017, at 2:27 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. @petebachant<https://github.com/petebachant>: the paper that I linked earlier on this thread had some fairly simple examples similar to the one you propose.. different flat plates and so on with varying y^+. You can likely reuse the grid(s) in the TestCases repo. @vdweide<https://github.com/vdweide>: it was very simple in this first implementation. It checks for a single boolean for whether or not to apply wall functions (WALL_FUNCTIONS= YES or NO, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L15339), and then assumes they should be applied to all no-slip walls (heat flux or isothermal, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L16653). This could of course be made more specific for individual markers using a config structure like MARKER_MONITORING to list them, or by making a dedicated BC type for it potentially. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/399#issuecomment-327308587>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxJUhyEBSuSzHV1a7BZM_Frxbtb5sks5sfbzUgaJpZM4NvG6w>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327313634:1950,config,config,1950,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327313634,2,['config'],['config']
Modifiability,"in the file /SU2_PY/SU2/io/config.py ...; The block that reads:; # read config if it exists. ```; if filename:; try:; self.read(filename); except:; raise IOError , 'Could not find config file: %s' % filename; ```. mask all assertion errors used to check the integrity of the config options as an 'IOError, Could not find the config file: known_and_present_config_file.cfg'. the block should read:; # read config if it exists. ```; if filename:; try:; self.read(filename); except IOError:; print 'IOError , 'Could not find config file: %s' % filename; except:; print ""Unexpected error:"", sys.exc_info()[0]; raise; ```. or just trap the IOError and let exceptions triggered by failed assertions propagate up the call stack",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/141:27,config,config,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/141,7,['config'],['config']
Modifiability,in your type config file do:; ```; #ifdef MLP_CUSTOM_TYPE; using mlpdouble = MLP_CUSTOM_TYPE;; #else; using mlpdouble = double;; #endif; ```; in SU2 before the first MLP include do:; ```; #define MLP_CUSTOM_TYPE su2double; #include ...; ```,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1498987561:13,config,config,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1498987561,1,['config'],['config']
Modifiability,in/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpVersions.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin_Instructions.txt (0) ; - I QuickStart/inv_NACA0012.cfg (0) ; - I README (0) ; - I SU2_CFD/include/SU2_CFD.hpp (0) ; - I SU2_CFD/include/definition_structure.hpp (0) ; - I SU2_CFD/include/fluid_model.hpp (0) ; - I SU2_CFD/include/fluid_model.inl (0) ; - I SU2_CFD/include/integration_structure.hpp (0) ; - I SU2_CFD/include/integration_structure.inl (0) ; - I SU,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:19960,plugin,plugins,19960,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"index information; and values that are used in surface-based mesh deformation (and maybe other; tools, but that's the one I know of - I could see that format being useful; for prescribed surface properties as well). So one challenge that would be; faced with this change is how to make sure that both files are still; output. I would argue for switching to no suffixes where possible - less work for; new users, a little more work for us - one way we could get the best of; both worlds is by having the filenames written in the config without; suffix, but when loaded into su2 (and the python version of loading the; config file) store the variable with the appropriate suffix. That way if it; changes in the future it only has to be updated in one place, and all the; old config files would still work after a code change that alterred the; suffix.; -Heather. On Wed, Jul 30, 2014 at 11:05 AM, Brendan Tracey notifications@github.com; wrote:. > SU2 right now is inconsistent with how it does file names in the config; > file. For example, the restart file needs to be specified with a "".dat""; > suffix, but in the case of the surface files, the "".csv"" is added; > automatically. SU2 should be consistent across all filenames. Preferably,; > this will be fixed by having the user specify all suffixes. This is a tiny; > amount of additional work for the user, but it makes writing scripts that; > use the config file much easier. When the suffix is in the config file,; > it's easy to have python say ""open this file"". If the config file just has; > the base name of the file (no extension) then the knowledge of what suffix; > SU2 uses must be hard-coded into the follow-on script (which can then break; > later if SU2 changes).; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/su2code/SU2/issues/41. ## . Heather Kline; PhD Candidate, NASA Space Technology Research Fellow; Aeronautics & Astronautics; Stanford University; kline.hl@gmail.com, hlkline@stanford.edu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/41#issuecomment-50703399:1606,config,config,1606,https://su2code.github.io,https://github.com/su2code/SU2/issues/41#issuecomment-50703399,3,['config'],['config']
Modifiability,"ing MAX_NUMBER_MARKER; - Working version with ParMETIS. Fixed bug in global index. Now clean up and testing...; - Cleaned version of ParMETIS routines with better console output during partitioning.; - Small bug in initial element division.; - Made arrays in ParMETIS call dynamic.; - Fixed compiler warnings and added MPI directives so that the pure serial code works with the ParMETIS routines.; - Bootstrap on zion.; - Added some typecasts. Still tracking down a memory problem...; - Critical bug fix for vtxdist array.; - Partial fix; - More MPI improvements.; - Fixing a bug in SU2_DEF; - Updated BC_ActDisk_Boundary (MPI); - Merge remote-tracking branch 'upstream/develop' into develop; - changing solidboundary setting to be heatflux OR euler etc instead of AND, also working on doxygen documentation; - Dynamic allocation for some marker-related arrays.; - visualize part taken out to match upstream/dev; - Collection of improvements; - Release 3.2.7; - Fixing LOW_MEMORY_OUTPUT; - Updated LOW_MEMORY_OUTPUT option; - Updated configure.ac; - After autoconf; - Updated MPI; - Updated BC_Engine_Exhaust and BC_Engine_Bleed; - Small change; - Fixing subsonic engine intake option; - Small output change; - Added output_su2.cpp; - Updated Engine BC; - Working on Engine BCs; - Added Supersonic Outlet BC; - Minor change; - Merge remote-tracking branch 'upstream/develop' into develop; - adjoints, solid boundary, doxygen in config; - continued fixing; - re-added adjoint bc mods; - re-adding avg outlet pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment o",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:2997,config,configure,2997,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['config'],['configure']
Modifiability,"ing command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7993,config,config,7993,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config']
Modifiability,"ing for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.D.Palacios@boeing.com|; | Dr. Thomas D. Economon, economon@stanford.edu |; -------------------------------------------------------------------------; | SU2 Developers: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guar",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16432,config,config,16432,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,"ing for C++ compiler default output file name; configure:3442: result: a.out; configure:3448: checking for suffix of executables; configure:3455: g++ -o conftest conftest.cpp >&5; configure:3459: $? = 0; configure:3481: result: ; configure:3503: checking whether we are cross compiling; configure:3511: g++ -o conftest conftest.cpp >&5; configure:3515: $? = 0; configure:3522: ./conftest; configure:3526: $? = 0; configure:3541: result: no; configure:3546: checking for suffix of object files; configure:3568: g++ -c conftest.cpp >&5; configure:3572: $? = 0; configure:3593: result: o; configure:3597: checking whether we are using the GNU C++ compiler; configure:3616: g++ -c conftest.cpp >&5; configure:3616: $? = 0; configure:3625: result: yes; configure:3634: checking whether g++ accepts -g; configure:3654: g++ -c -g conftest.cpp >&5; configure:3654: $? = 0; configure:3695: result: yes; configure:3720: checking dependency style of g++; configure:3831: result: gcc3; configure:3921: checking for gcc; configure:3937: found /usr/bin/gcc; configure:3948: result: gcc; configure:3979: checking for C compiler version; configure:3988: gcc --version >&5; gcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3999: $? = 0; configure:3988: gcc -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-mu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:5130,config,configure,5130,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,18,['config'],['configure']
Modifiability,"ing for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.D.Palacios@boeing.com|; | Dr. Thomas D. Economon, economon@stanford.edu |; -------------------------------------------------------------------------; | SU2 Developers: |; | - Prof. Juan J. Alonso's gr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16233,config,config,16233,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,ing size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Pie,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6354,config,config,6354,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"ing test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5756,config,config,5756,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,2,['config'],"['config', 'config-lite-']"
Modifiability,"ing the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Underst",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1237,config,configuration,1237,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809,2,['config'],['configuration']
Modifiability,"ing them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could revisit the ownership relations of the numerics classes, i.e. allocate them as members of their respective solvers, which if we do, we can think of having a purpose built container that automates the per-thread creation and access. > Why are they redefined each time inside the loop?; > Is this for efficiency reasons?. Referring to variables being declared inside loops. One stylist reason is that declaring everything at the top of a function is the C way of doing things, the C++ people whose books/blogs I've read and talks I've watched, recommend keeping namespaces (the inside of the loop being one) as clean as possible.; The only reason not to do this is if you explicitly want re-use, in the case of trivial types this does not improve efficiency, and in the context of OpenMP code it can create issues. Just like we need one numerics per thread, if we declare variables outside a parallel loop the default OpenMP behaviour is to consider them shared, and concurrent writes to shared locations = gdb and many bad words xD.; **EDIT:** I should mention here that if the parallel region is started before the variable declarations they become local and all is well, with the exception of class members, those will be shared most of the time (this is where const correctness can give some peace of mind). > Also, just an additional (hopeful",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:2333,variab,variables,2333,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,2,['variab'],['variables']
Modifiability,ing.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6090,config,config,6090,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,inlet profile from file is not initialized from config.cfg,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1265:48,config,config,48,https://su2code.github.io,https://github.com/su2code/SU2/issues/1265,1,['config'],['config']
Modifiability,input file for time variable pitching movement,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/644:20,variab,variable,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/644,1,['variab'],['variable']
Modifiability,ins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:16857,plugin,plugins,16857,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"install SU2 in docker ubuntu 18.04 container so that I can easily share with partner. But I failed to compile the code with following errors:. (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx. checking build system type... x86_64-pc-linux-gnu. checking host system type... x86_64-pc-linux-gnu. checking target system type... x86_64-pc-linux-gnu. checking for a BSD-compatible install... /usr/bin/install -c. checking whether build environment is sane... yes. checking for a thread-safe mkdir -p... /bin/mkdir -p. checking for gawk... no. checking for mawk... mawk. checking whether make sets $(MAKE)... yes. checking whether make supports nested variables... yes. checking whether make supports nested variables... (cached) yes. checking for style of include used by make... GNU. checking whether the C++ compiler works... no. configure: error: in `/home/SU2':. configure: error: C++ compiler cannot create executables. See `config.log' for more details. I am sure that I have installed gcc/g++ successfully. You can see. (base) root@a5502ebdff64:/home# gcc --version. gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0. Copyright (C) 2017 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. (base) root@a5502ebdff64:/home# g++ -o hello hello.cc. (base) root@a5502ebdff64:/home# ./hello. Hello, World!. I have uploaded the config.log file. Could you give me some suggestions, please?; config.log<https://github.com/su2code/SU2/files/3418183/config.log>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/738?email_source=notifications&email_token=AADV2HBFP42OXAJCIZGTH2DQAXH4ZA5CNFSM4IFZ52EKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4HAVNCNA>, or mute the t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847308:1365,config,configure,1365,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847308,1,['config'],['configure']
Modifiability,intwiseSU2plugin/FLAGS.macosx (112) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win (14) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win32 (33) ; - D MeshTools/PointwiseSU2plugin/Makefile (304) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.sln (64) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.suo (0) ; - D MeshTools/PointwiseSU2plugin/depend.sh (28) ; - D MeshTools/PointwiseSU2plugin/mkplugin (10) ; - D MeshTools/PointwiseSU2plugin/mkplugin.bat (82) ; - D MeshTools/PointwiseSU2plugin/mkplugin.tcl (422) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:14031,plugin,plugins,14031,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,intwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/sr,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:16292,plugin,plugins,16292,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"ion (robin BC) is applied allowing for a non-zero eddy viscosity at the wall. More information is also available [here](https://turbmodels.larc.nasa.gov/spalart.html#sarough). For the SST model, the roughness boundary condition is based on:. Wilcox, D.C Turbulence Modeling for CFD., 1998 and 2006, DWC Industries. There are two suggestions (first in the 2nd edition and a corrected version in the 3rd edition). I have implemented the latest one and commented the old one. There have been numerous papers about some limitations of these models themselves however. The modification consists of changing the omega boundary condition at the wall to a different value based on local quantities. . This PR introduces two extra config options - one to specify whether a wall is rough or not and another to specify the sand grain roughness height for each of them. ; ; WALL_TYPE = SMOOTH/ROUGH; WALL_ROUGHNESS = <array of doubles>. By default all walls are smooth. If neither option is present in the config file, smooth walls are assumed everywhere. However, if there are multiple walls some rough, some smooth, they need to be listed (similar to INLET TYPE) in the order they appear in the MARKER_HEATFLUX definition. I have attached some examples here. . 1. Flatplate; Here is the input file [turb_flatplate_v7_cfg.txt](https://github.com/su2code/SU2/files/4198440/turb_flatplate_v7_cfg.txt),. The meshes can be found in TestCases/rans/flatplate or the NASA TMR database. Here are the results with both SA and SST; ![yplus_vs_uplus_sa_comparison](https://user-images.githubusercontent.com/28007882/74438338-3b808600-4e6a-11ea-9a83-c326384950d3.png). Here I am plotting the non-dimensionalised velocity u^+ against y^+. The clean results give fairly good agreement and we can see some over prediction in velocity shifts. This was also reported elsewhere. ![yplus_vs_uplus_sst_comparison](https://user-images.githubusercontent.com/28007882/74438363-49360b80-4e6a-11ea-9070-09f72810a40a.png). The same plot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877:1821,config,config,1821,https://su2code.github.io,https://github.com/su2code/SU2/pull/877,1,['config'],['config']
Modifiability,"ion, the polymorphic overhead will be reduced to a single call (ComputeResidual), all auxiliary functions (like the ones that live in CNumerics) will be forcefully inlined, no useless copies of data (no more numerics->SetBlaBla).; - Compile time nDim/nVar, which will: a) avoid heap allocations; b) allow effective loop-unrolling (also during the writes to CSysMatrix).; - Allow low-overhead composition, e.g. have one CRoe for Euler and one CRoeVisc for NS to fuse convective and viscous residuals (without copy pasting code).; - A lot more readable, those cryptic V_i[iDim+1] need to go (somehow...). To achieve all this, the ""CNewNumerics"" will work as a template (obvs) decorator/visitor.; A visitor in the sense that the solver calls the numerics and gives it (read-only) access to all its data, the object pulls whatever it needs directly and there is no need for numerics->SetBlaBla.; A template decorator in the sense that the class can be augmented simply by inheriting from another, along the lines of `class CRoeVisc : public CRoe, public CVisc` (to allow fusing residual and Jacobian contributions).; All this needs to be done with templates for the ""minimal indirection"" requirement. Which means for each numerical method we will have 4 explicit template instantiations (Euler2D, Euler3D, (RA)NS2D, (RA)NS3D) but in the end these are still polymorphic objects that will be instantiated by some factory function (i.e. it will look clean, especially because I will not port all methods in one go xD). The template machinery to support this is actually not too crazy:; ```c++; #include <array>; #include <cmath>. // An example type to use instead of the container that stores solution data for all vertices.; struct SolutionContainer; {; std::array<double,3> velocity;; std::array<double,3> areaVector;; };. using ResultType = double;. // We want classes with this interface.; class VirtualInterface; {; public:; virtual ResultType Compute(const SolutionContainer&) const = 0;; };. // The Co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:1486,inherit,inheriting,1486,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,2,['inherit'],['inheriting']
Modifiability,"ions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3343: $? = 0; configure:3332: g++ -V >&5; g++: '-V' option must have argument; configure:3343: $? = 1; configure:3332: g++ -qversion >&5; g++: unrecognized option '-qversion'; g++: no input files; configure:3343: $? = 1; configure:3363: checking whether the C++ compiler works; configure:3385: g++ conftest.cpp >&5; configure:3389: $? = 0; configure:3437: result: yes; configure:3440: checking for C++ compiler default output file name; configure:3442: result: a.out; configure:3448: checking for suffix of executables; configure:3455: g++ -o conftest conftest.cpp >&5; configure:3459: $? = 0; configure:3481: result: ; configure:3503: checking whether we are cross compiling; configure:3511: g++ -o conftest conftest.cpp >&5; configure:3515: $? = 0; configure:3522: ./conftest; configure:3526: $? = 0; configure:3541: result: no; configure:3546: checking for suffix of object files; configure:3568: g++ -c conftest.cpp >&5; configure:3572: $? = 0; configure:3593: result: o; configure:3597: checking whether we are using the GNU C++ compiler; configure:3616: g++ -c conftest.cpp >&5; configure:3616: $? = 0; configure:3625: result: yes; configure:3634: checking whether g++ accepts -g; configure:3654: g++ -c -g conftest.cpp >&5; configure:3654: $? = 0; configure:3695: result: yes; configure:3720: checking dependency style of g++; configure:3831: result: gcc3; configure:3921: checking for gcc; configure:3937: found /usr/bin/gcc; configure:3948: result: gcc; configure:3979: checking for C compiler version; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:4367,config,configure,4367,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"ions):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link current files; ; config_cfd = copy.deepcopy(config); for opt in adap_options:; config_cfd.pop(opt, None); config_cfd.LOW_MEMORY_OUTPUT = ""NO""; ; config_cfd.WRT_BINARY_RESTART = ""NO""; #config_cfd.READ_BINARY_RESTART = ""NO""; ; current_mesh = ""Initial_mesh""; current_solution = ""Initial_solution""; ; if config['RESTART_SOL'] == 'NO':; ; stdout_hdl = open('ini.stdout','w') # new targets; stderr_hdl = open('ini.stderr','w'); ; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:4053,config,config,4053,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"ique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is workin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:2240,config,configure,2240,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['config'],['configure']
Modifiability,"ironment locally on your machine. You can even download the compiled binaries produced on github and run them locally to further debug problems.; - It is faster and more flexible. Compiling and running all tests requires ~1h since a lot of things run in parallel now (e.g. building the base, reverse AD and forward AD binaries). There is potential to further speed things up by splitting the test case scripts into several files. All of that requires minimal work. Unfortunately there is no caching using ccache at the moment, but it is likely that github introduces this feature mid of november. ; - Additional tests like unit tests can make use of the same docker containers and can be easily set up by creating a new workflow file.; - We can easily add a deployment step to automatically create releases and/or nightly builds. **Note:** the linked docker containers are **only** for development/testing purposes. Hence we cannot give any support in this regard. For production use it is recommended to use singularity containers. But: the docker containers can be used as basis layers for singularity. I will get back with more information on that topic. ~~I had to change regression test values of two cases since apparently they are compiler dependent.~~ I changed it to the same versions as we have on Travis. There will be some documentation on how to use the containers locally soon. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806:1561,layers,layers,1561,https://su2code.github.io,https://github.com/su2code/SU2/pull/806,1,['layers'],['layers']
Modifiability,"is -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -I/home/FDa/FDa045/programs/intel/2020_update4/mkl/include -I../externals/codi/include -I../externals/medi/include -I../externals/medi/src -ICommon/src -I../Common/src -I/work/A/openmpi/3.0.0_intel2018u2/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -m64 -pthread -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -DHAVE_MKL -DCODI_REVERSE_TYPE -MD -MQ SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -MF 'SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o.d' -o SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -c ../SU2_CFD/src/solvers/CTurbSolver.cpp; In file included from ../SU2_CFD/src/solvers/CTurbSolver.cpp:31:0:; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; CScalarSolver<VariableType>::CScalarSolver(bool conservative) : CSolver(), Conservative(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: require",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:3355,Variab,VariableType,3355,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,2,['Variab'],['VariableType']
Modifiability,"is because we want to create specific versions of the numerical schemes for 2D and 3D (we ""want"" this because it allows static allocation and unrolling loops perfectly). Then convective classes also need to be class templates so that we can programatically change their base class:; ```c++; template<class Base>; class MyConvectiveScheme : public Base {; public:; void ComputeFlux(...) const {; // do my own thing; Base::viscousTerms(...);; // update the linear system with the result; }; };; ```; Now to create an instance of this class template we do for example:; ```c++; auto obj = new MyConvectiveScheme< CCompressibleViscousFlux<2> >(...);; ```; which would create an object for 2D problems with viscous terms. And so we need at least 4 instantiations of these class templates, 2D/3D with or without viscous terms, and this is done in the factory method implemented in CNumericsSIMD.cpp, which is the only cpp in this entire implementation. ### Static polymorphism; Another concept used in this implementation for efficiency is static polymorphism.; For example in the non vectorized numerics we have a family of Roe schemes since a lot of code is shared, and the only difference is how the dissipation terms are computed. There this is done with virtual functions, here we want none of that.; Virtual functions allow a parent class to dynamically call methods of its children, we want to do this statically and so we need to let the parent class know who is deriving from it.; ```c++; template<class Derived>; class Parent {; public:; void parentMethod() {; // ""I know I am also a Derived and so I can cast myself.""; auto derived = static_cast<Derived*>(this);; // ""now I can use a method of derived""; derived->childMethod();; }; };. // A derived class needs to inform the parent about itself; class Child : public Parent<Child> {; public:; void childMethod() {...}; };; ```. Why is this better? Note that 2 of these derived classes don't actually have the same parent, i.e. one inherits from ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:2208,polymorphi,polymorphism,2208,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721,2,['polymorphi'],['polymorphism']
Modifiability,"is converged. The solution was obtained setting up the turbomachinery simulation options available in SU2. After this initial procedure the FFD Box was successfully generated ( FFD_DEGREE = 2,2,2 ) and attached to the domain as explained in the tutorials ( *using SU2_DEF* ). The FFD box appears as follows:. *FFD box edges: green ; FFD box control point: yellow; There is no intersection between FFD edges and periodic boundaries*. ![Screenshot (158)](https://user-images.githubusercontent.com/96534491/236707553-92fb9e5a-3808-4ea0-a02e-43b574de44c0.png). It was intended to operate each SU2 module manually: . 1. **SU2_DEF** -> FFD box generation; 2. **SU2_CFD** -> flow field computation; 3. **SU2_CFD_AD** -> adjoint solution; 4. **SU2_DOT_AD** -> gradient calculation; 5. **SU2_DEF** -> shape deformation. ## **Shape deformation test**; Before the actual gradients computation it was preferred to perform a deformation test with the presented settings: . % ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%. DV_KIND= FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT; %; % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= ( BLADE1 ); %; % Parameters of the shape deformation ; % 	- FFD_CONTROL_POINT ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp ); %; DV_PARAM= ( BLADE_BOX, 0, 0, 0, 1.0, 0.0, 0.0 ); ( BLADE_BOX, 0, 1, 0, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 0, 1, 1, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 1, 1, 1, 0.0, 1.0, 0.0 ); %; % New value of the shape deformation; DV_VALUE= 0.02, 0.02, 0.02, 0.02; %; OPT_RELAX_FACTOR = 1.0. Moreover, some surfaces were re-assigned to avoid any plane fixing (that was, intentionally, set as FFD_CONTINUITY = USER _INPUT): . MARKER_SYM = ( HUB, SHROUD, BLADE1, PER1, PER2 ). ## **Results**; For any given linear solver deformation and parameter the arbitrary mesh deformation test failed _(even after hugely increasing both DV_VALUE and OPT_RELAX_FACTOR to exclude a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025:1567,VARIAB,VARIABLE,1567,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025,1,['VARIAB'],['VARIABLE']
Modifiability,iseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plu,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18200,plugin,plugins,18200,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,4,['plugin'],"['pluginRegistry', 'plugins']"
Modifiability,it doesn't matter where it is placed. But it must be run inside the folder where the config file is and the environment variable SU2_RUN must be set correctly.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/279#issuecomment-222656300:85,config,config,85,https://su2code.github.io,https://github.com/su2code/SU2/issues/279#issuecomment-222656300,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"it uses a Hessian of the Euler fluxes so it might work for NS/RANS, but probably not) (@WallyMaier and I also extended it to TNE2 in [feature_amgtne2](https://github.com/su2code/SU2/tree/feature_amgtne2) but the source terms are giving us trouble on adapted meshes); 2. It requires AD support since it uses the discrete adjoint to weigh the Euler flux Hessians; 3. I did all my testing with the AMG executable since pyAMG doesn't have all the features I currently need, but I just updated the branch to use pyAMG. I just tested the new interface with an airfoil and it seems to be working, but there might still be some bugs. You'll want to run mesh_adaptation_amg.py with the following options:; **ADAP_SIZES:** list of mesh complexities for each adaptive level. This is correlated to mesh size, but picking good values requires some playing around; **ADAP_SUBITE:** number of adaptations performed at each adaptive level. If set to (2,3) for example, it will run 2 adaptive iterations to try to reach ADAP_SIZES[0], and 3 iterations to try to reach ADAP_SIZES[1]; **ADAP_EXT_ITER:** number of iterations used by SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_RESIDUAL_REDUCTION:** order of magnitude residual reduction for SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_SENSOR:** currently only works for GOAL; **ADAP_HMAX:** maximum cell size (m); **ADAP_HMIN:** minimum cell size (m); **ADAP_HGRAD:** gradation coefficient (>1) used by AMG during mesh smoothing. A larger value corresponds to larger allowed gradient in mesh size. E.g. for the RAE2822 I used:; ADAP_SIZES= (12800, 19200, 25600); ADAP_SUBITE= (2, 2, 2); ADAP_EXT_ITER= (9999, 9999, 9999); ADAP_RESIDUAL_REDUCTION= (6, 6, 6); ADAP_SENSOR= GOAL; ADAP_HMAX= 10.0; ADAP_HMIN= 1e-8; ADAP_HGRAD= 1.5. ![mesh](https://user-images.githubusercontent.com/19416354/59965706-940fa700-94c6-11e9-811c-4379694f0f7b.png); ![sol](https://user-images.githubusercontent.com/19416354/59965707-940fa700-94c6-11e9-9e1a-e0ae6854d412.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504675574:1388,adapt,adaptive,1388,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504675574,3,['adapt'],['adaptive']
Modifiability,"iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link current files; ; config_cfd = copy.deepcopy(config); for opt in adap_options:; config_cfd.pop(opt, None); config_cfd.LOW_MEMORY_OUTPUT = ""NO""; ; config_cfd.WRT_BINARY_RESTART = ""NO""; #config_cfd.READ_BINARY_RESTART = ""NO""; ; current_mesh = ""Initial_mesh""; current_solution = ""Initial_solution""; ; if config['RESTART_SOL'] == 'NO':; ; stdout_hdl = open('ini.stdout','w') # new targets; stderr_hdl = open('ini.stderr','w'); ; success = False; val_out = [False]; ; sys.stdout.write('Running initial CFD solution.\n'); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_mesh = config['MESH_FILENAME']; current_solution = ""ini_restart_flow.dat""; ; config_cfd.CONV_FILENAME = ""ini_history""; config_cfd.RESTART_FLOW_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:4465,config,config,4465,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"ith SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `export LD_LIBRARY_PATH=/path/to/libROM/build/:$LD_LIBRARY_PATH`; 4. You can test by adding `SAVE_LIBROM=YES` to the Quickstart config",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1310:1987,variab,variable,1987,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"ith-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3343: $? = 0; configure:3332: g++ -V >&5; g++: '-V' option must have argument; configure:3343: $? = 1; configure:3332: g++ -qversion >&5; g++: unrecognized option '-qversion'; g++: no input files; configure:3343: $? = 1; configure:3363: checking whether the C++ compiler works; configure:3385: g++ conftest.cpp >&5; configure:3389: $? = 0; configure:3437: result: yes; configure:3440: checking for C++ compiler default output file name; configure:3442: result: a.out; configure:3448: checking for suffix of executables; configure:3455: g++ -o conftest conftest.cpp >&5; configure:3459: $? = 0; configure:3481: result: ; configure:3503: checking whether we are cross compiling; configure:3511: g++ -o conftest conftest.cpp >&5; configure:3515: $? = 0; configure:3522: ./conftest; configure:3526: $? = 0; configure:3541: result: no; configure:3546: checking for suffix of object files; configure:3568: g++ -c conftest.cpp >&5; configure:3572: $? = 0; configure:3593: result: o; configure:3597: checking whether we are using the GNU C++ compiler; configure:3616: g++ -c conftest.cpp >&5; configure:3616: $? = 0; configure:3625: result: yes; configure:3634: checking whether g++ accepts -g; configure:3654: g++ -c -g conftest.cpp >&5; configure:3654: $? = 0; configure:3695: result: yes; configure:3720: checking dependency style of g++; configure:3831: result: gcc3; configure:3921: checking for gcc; configure:3937: found /usr/bin/gcc; configure:3948: result: gcc; configure:3979: checking for C compiler version; configure:3988: gcc --version >&5; gcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:4469,config,configure,4469,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,8,['config'],['configure']
Modifiability,"itycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5841,config,config,5841,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config']
Modifiability,"ive loop-unrolling (also during the writes to CSysMatrix).; - Allow low-overhead composition, e.g. have one CRoe for Euler and one CRoeVisc for NS to fuse convective and viscous residuals (without copy pasting code).; - A lot more readable, those cryptic V_i[iDim+1] need to go (somehow...). To achieve all this, the ""CNewNumerics"" will work as a template (obvs) decorator/visitor.; A visitor in the sense that the solver calls the numerics and gives it (read-only) access to all its data, the object pulls whatever it needs directly and there is no need for numerics->SetBlaBla.; A template decorator in the sense that the class can be augmented simply by inheriting from another, along the lines of `class CRoeVisc : public CRoe, public CVisc` (to allow fusing residual and Jacobian contributions).; All this needs to be done with templates for the ""minimal indirection"" requirement. Which means for each numerical method we will have 4 explicit template instantiations (Euler2D, Euler3D, (RA)NS2D, (RA)NS3D) but in the end these are still polymorphic objects that will be instantiated by some factory function (i.e. it will look clean, especially because I will not port all methods in one go xD). The template machinery to support this is actually not too crazy:; ```c++; #include <array>; #include <cmath>. // An example type to use instead of the container that stores solution data for all vertices.; struct SolutionContainer; {; std::array<double,3> velocity;; std::array<double,3> areaVector;; };. using ResultType = double;. // We want classes with this interface.; class VirtualInterface; {; public:; virtual ResultType Compute(const SolutionContainer&) const = 0;; };. // The Compute method is to be composed via an inheritance chain, to do this; // we allow each building block to inherit from any class. These classes should; // be function objects that have no member variables, all data used in the; // resulting Compute method will be on the stack.; template<typename Base>; class Com",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:1871,polymorphi,polymorphic,1871,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,2,['polymorphi'],['polymorphic']
Modifiability,"ix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ninja",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2542,Config,Configuration,2542,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610,3,"['Config', 'config', 'variab']","['Configuration', 'configuration', 'variables']"
Modifiability,"ized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/380",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:1585,enhance,enhancements,1585,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['enhance'],['enhancements']
Modifiability,"k #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [15/29] CXX build/version.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; [16/29] CXX build/dyndep.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [17/29] CXX build/clean.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [18/29] CXX build/util.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; src/util.cc(158): warning #3656: variable ""components"" may be used before its value is set; dst = components[component_count - 1];; ^. [19/29] CXX build/eval_env.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; [20/29] CXX build/dyndep_parser.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [21/29] CXX build/subprocess-posix.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [22/29] CXX build/build_log.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [23/29] CXX build/graph.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1042:8294,variab,variable,8294,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042,1,['variab'],['variable']
Modifiability,"k pyamg version compatibility; ; #--- Check config options related to mesh adaptation; ; adap_options = ['ADAP_SIZES', 'ADAP_SUBITE', 'ADAP_SENSOR', \; 'ADAP_BACK', 'ADAP_HMAX', 'ADAP_HMIN', 'ADAP_HGRAD', 'ADAP_RESIDUAL_REDUCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:3638,config,config,3638,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"kg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mp",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6585,config,config-lite-,6585,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config-lite-']
Modifiability,"l Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1471,variab,variables,1471,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['variab'],['variables']
Modifiability,"l last):; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/mesh_adaptation_amg.py"", line 38, in <module>; > import SU2; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/__init__.py"", line 14, in <module>; > from SU2 import amginria; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/amginria/__init__.py"", line 4, in <module>; > from .interface import *; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/amginria/interface.py"", line 41, in <module>; > import _amgio as amgio; > ModuleNotFoundError: No module named '_amgio'; > ```. and followed the instructions provided as in [https://github.com/su2code/SU2/issues/948#issuecomment-619334494](url):. > The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback.; > ; > Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; > ; > ```; > #!/usr/bin/env python; > ```; > ; > uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?; > ; > If it didn't build/install, you could go into extensions/AMGIO/su2io and run; > ; > ```; > python3 setup.py build_ext && python3 setup.py install; > ```; > ; > If it did build/install, try the command; > ; > ```; > python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; > ```. After doing `python3 setup.py build_ext && python3 setup.py install`, I encountered the following error:. > ```; > (temp_su5) takashi279@turing1:/dfs/user/takashi279/plasma/design/multiscale_adap3/SU2/externals/AMGIO/su2io$ python3 setup.py build_ext && python3 setup.py install; > running build_ext; > running install; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/install.py:37: SetuptoolsDeprecationWarning: se",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1699:1338,variab,variables,1338,https://su2code.github.io,https://github.com/su2code/SU2/issues/1699,1,['variab'],['variables']
Modifiability,"l) for fil in required_files):; err = '\n\n## ERROR : Can\'t find:\n'; for fil in required_files:; if not os.path.exists(fil):; err += fil + '\n'; raise RuntimeError , err; ; #--- Start looping; ; # Get mesh dimension; dim = su2amg.get_su2_dim(current_mesh); if ( dim != 2 and dim != 3 ):; raise RuntimeError , ""Wrong dimension number\n""; ; #--- AMG parameters; ; config_amg = dict(); ; config_amg['hgrad'] = float(config['ADAP_HGRAD']); config_amg['hmax'] = float(config['ADAP_HMAX']); config_amg['hmin'] = float(config['ADAP_HMIN']); config_amg['mesh_in'] = 'current.meshb'; config_amg['mesh_out'] = 'current.new.meshb'; config_amg['metric_in'] = ''; config_amg['sol_in'] = 'current_sensor.solb'; config_amg['itp_sol_in'] = 'current.solb'; config_amg['adap_source'] = ''; ; if 'ADAP_BACK' in config:; config_amg['adap_back'] = os.path.join(cwd,config['ADAP_BACK']); #os.symlink(os.path.join(cwd, config.ADAP_BACK), config.ADAP_BACK); else:; config_amg['adap_back'] = config['MESH_FILENAME']; ; print ""config_amg : "" + config_amg['adap_back']; back_name, back_extension = os.path.splitext(config_amg['adap_back']); ; if not os.path.exists(config_amg['adap_back']):; raise RuntimeError , ""\n\n##ERROR : Can't find back mesh: %s.\n\n"" % config_amg['adap_back']; ; if back_extension == "".su2"":; ; #pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); print ""skipping back mesh ...""; #import _amgio as amgio; #amgio.py_ConvertSU2toInria(config_amg['adap_back'], """", ""amg_back""); #config_amg['adap_back'] = ""amg_back.meshb""; ; if 'ADAP_SOURCE' in config:; config_amg['adap_source'] = os.path.join(cwd,config['ADAP_SOURCE']); ; global_iter = 0; ; sys.stdout.write(""\nStarting mesh adaptation process.\n""); ; for iSiz in range(len(mesh_sizes)):; ; mesh_size = int(mesh_sizes[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d - Mesh size coefficient %.1lf\n"" % (iSiz+1, len(mesh_sizes), mesh_size)); ; for iSub in range(nSub):; ; config_amg['size'] = mesh_size; config_amg",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:7183,config,config,7183,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"le 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Pr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6971,config,config-tool,6971,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config-tool']
Modifiability,"le boundary conditions setup were tested for the ""inlet"", ""farfield"" and ""outlet"" markers. Furthermore the Inlet BC were tried with many different vertical speeds (vx=0/0.001/0.01/0.1/1/10). Simulations with the inlet, farfield and outlet as TOTAL_INLET, FARFIELD, OUTLET and EULER and some (not all) combination between these BC were tried. The mesh was generated with Salome-Meca. It is a tetrahedral mesh. I have a script that permits to change the domain size with ease. So from the mesh perspective it is fairly easy to test different mesh sizes and domain sizes.; Generally the outer domain radius was between 1.5*propRadius to 10*propRadus. Domain height between 3*propRadius to 15*propRadius. The prop was at 2/3 of the total height (1/2 and 3/4 were also tested). Some simulations approximated from a far experimental results (thrust +/-10% error, torque +/-15%). Some completely diverged some converge towards something way out of the 10% error range. **To Reproduce**. You can find the configuration file below.; I cannot provide the mesh at the moment.; If needed I will change the geometry for ""reproduction"". `%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: Caradonna & Tung rotor in hover (still air) %; % Author: Thomas D. Economon %; % Institution: Stanford University %; % Date: 2020.05.24 %; % File Version 7.3.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION); SOLVER= EULER; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= NO . % ----------- COMPRESSIBLE AND INCOMPRESSIBLE FREE-STREAM DEFINITION ----------%; %; % Mach number (non-dimensional, based on ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:2418,config,configuration,2418,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['config'],['configuration']
Modifiability,"le to control the step size for the finite differences. The option for step size was only in finite_differences.py. The step size is scaled with the reference length because from the practical point of view, I have found that the size of the aircraft, wing, airfoil, is important to determine a meaningful step size. e.g. should we use the same step for an aircraft with a MAC of ~150in than for an airfoil with a chord of 1in. Remember that most of the times we are using FD when the adjoint is not converging… so we have bad convergence of the direct problem (including some level of unsteadiness that we want to filter with the selection of the step size). In other words, with the right choice of the FD step size you can obtain, at least, an useful gradient… and that number is somehow linked to the size of the aircraft, wing, or airfoil. The best solution would be to add the step size to the finite_differences.py and also to the shape_optimization.py (creating a new option in the config file)… not a top priority, but I’ll do it soon. Best,; Francisco. > On Mar 1, 2017, at 3:25 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:; >; > Bumping this issue. This has come up several times now for different people/projects. Is there a reason to keep it based on the reference moment length, or can we revert to specifying this through the command line options?; >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/issues/367#issuecomment-283505108>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AEpkllp8PXmLDDQLJNq-2yRLBoDAfXE-ks5rhf5pgaJpZM4Lq5F->.; >. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/367#issuecomment-284288637>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxAsCyC2rWixx_FUvNF0Mc44BDm",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/367#issuecomment-284300083:1714,config,config,1714,https://su2code.github.io,https://github.com/su2code/SU2/issues/367#issuecomment-284300083,1,['config'],['config']
Modifiability,"line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in _minimize_slsqp; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in <listcomp>; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 107, in merge_solution; SU2_SOL( config ); File ""/usr/local/bin/SU2/run/interface.py"", line 207, in SOL; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 270, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2-7.3.0/xxxx/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -n 4 /home/xxx/SU2-7.3.0/SU2/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '139'; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; ----------------------------------------------------------------------",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:4416,config,config,4416,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['config'],['config']
Modifiability,"linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin/python; Python 3.9.1. *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:2215,config,config,2215,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['config'],['config']
Modifiability,"listcomp>; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 107, in merge_solution; SU2_SOL( config ); File ""/usr/local/bin/SU2/run/interface.py"", line 207, in SOL; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 270, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2-7.3.0/xxxx/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -n 4 /home/xxx/SU2-7.3.0/SU2/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '139'; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 1 with PID 0 on node LAPTOP-DDQOFLU8 exited on signal 11 (Segmentation fault).; --------------------------------------------------------------------------; ```. The parallel computing for the case of SU2_CFD only can work well.; but I canno",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:4776,config,config,4776,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['config'],['config']
Modifiability,ll/814/files#diff-5> (9); * A SU2_MSH/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-6> (8); * A SU2_PY/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-8> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26> (28); * A cmake/check_thread_storage.c<https://github.com/su2code/SU2/pull/814/files#diff,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:5791,Config,ConfigureMPI,5791,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['Config'],['ConfigureMPI']
Modifiability,location.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc);,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:5553,Adapt,Adapt,5553,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['Adapt'],"['Adapt', 'Adaptive']"
Modifiability,"loog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3343: $? = 0; configure:3332: g++ -V >&5; g++: '-V' option must have argument; configure:3343: $? = 1; configure:3332: g++ -qversion >&5; g++: unrecognized option '-qversion'; g++: no input files; configure:3343: $? = 1; configure:3363: checking whether the C++ compiler works; configure:3385: g++ conftest.cpp >&5; configure:3389: $? = 0; configure:3437: result: yes; configure:3440: checking for C++ compiler default output file name; configure:3442: result: a.out; configure:3448: checking for suffix of executables; configure:3455: g++ -o conftest conftest.cpp >&5; configure:3459: $? = 0; configure:3481: result: ; configure:3503: checking whether we are cross compiling; configure:3511: g++ -o conftest conftest.cpp >&5; configure:3515: $? = 0; configure:3522: ./conftest; configure:3526: $? = 0; configure:3541: result: no; configure:3546: checking for suffix of object files; configure:3568: g++ -c conftest.cpp >&5; configure:3572: $? = 0; configure:3593: result: o; configure:3597: checking whether we are using the GNU C++ compiler; configure:3616: g++ -c conftest.cpp >&5; configure:3616: $? = 0; configure:3625: result: yes; configure:3634: checking whether g++ accepts -g; configure:3654: g++ -c -g conftest.cpp >&5; configure:3654: $? = 0; configure:3695: result: yes; configure:3720: checking dependency style of g++; configure:3831: result: gcc3; configure:3921: checking for gcc; configure:3937: found /usr/bin/gcc; configure:3948: result: gcc; configure:3979: checking for C compiler version; configure:3988: gcc --version >&5; gcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3999: $? = 0; configure:3988: gcc -v >&",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:4678,config,configure,4678,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,8,['config'],['configure']
Modifiability,"look, I used a conservative number based on:; For the Roe scheme 4 matrices are generated (Jacobian i, Jacobian j, P tensor, P^-1 tensor), each coefficient of those matrices requires a reasonable number of floating point ops, and two of those matrices are indeed multiplied by each other.; So lets say 5 matrix-matrix multiplications are representative, this should be a conservative estimate as I am not considering the eventual fusion of convective and diffusive discretizations. **The vectorized code is 1.5 times faster.**; This is a fair 1.5 as the code is running on 4 fast cores (parallel via colouring for the reasons I explained previously) and 2 memory channels (scalar code can eventually saturate the memory bandwidth too, but it would take an unreasonable ratio of cores to channels to do so).; Furthermore the scalar code I am considering is writing to CSysMatrix with all the mapping and vectorized writes I mentioned before, before you get all compound interest and take this 1.5 with the 1.47 from CSysMatrix, the speedup relative to code without mapping and vector writes is 1.85.; I restate that this does not require changes to the data layout, again for reasons previously mentioned. ## SpMv - Sparse matrix-vector multiplication; With all these speedups the linear solvers will start taking well over 50% of the time, and so it is desirable to make some improvements there too.; Sadly SpMv is as bandwidth bound as it gets, 1 FMA per 8 bytes, nonetheless I implemented some number-of-variable-specific kernels (for nVar=4 and nVar=5) and I can get about **1.12** speedup (same realistic core to channel conditions). I am not going to dump that code here because it is not too nice to look at (it uses intrinsics) but again that would be something hidden away in CSysMatrix that most people would not need to look at, and there would be a safe generic fall-back for arbitrary number of variables. I think I will do the estimated global speedup together with the summary/proposal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539177957:3924,variab,variable-specific,3924,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539177957,4,['variab'],"['variable-specific', 'variables']"
Modifiability,"ls a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working corre",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3056,config,configure,3056,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['config'],['configure']
Modifiability,ls/PointwiseSU2plugin/src/Pointwise/Win64Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/Upgr,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:14687,plugin,plugins,14687,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,ls/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugin,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:16458,plugin,plugins,16458,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"lsqp; constraints=cons, **opts); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 370, in _minimize_slsqp; raise ValueError(""Objective function must return a scalar""); ValueError: Objective function must return a scalar; ```. when using python3:. ```; Traceback (most recent call last):; File ""/usr/lib/python3.6/shutil.py"", line 544, in move; os.rename(src, real_dst); FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Airfoil_Design_NACA0012_AOA/DESIGNS/DSN_006/DIRECT/solution_flow.dat' -> '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/DESIGNS/DSN_006/solution_flow.dat'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 146, in _eval; vals = eval_func(*inputs); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 243, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/functions.py"", line 98, in function; aerodynamics( config, state ); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/functions.py"", line 273, in aerodynamics; push.append(info.FILES['TARGET_HEATFLUX']); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/io/redirect.py"", line 250, in __exit__; shutil.move(old_name,new_name); File ""/usr/lib/python3.6/shutil.py"", line 558, in move; copy_function(src, real_dst); File ""/usr/lib/python3.6/shutil.py"", line 257, in copy2; copyfile(src, dst, follow_symlinks=follow_symlinks); File ""/usr/lib/python3.6/shutil.py"", line 121, in copyfile; with open(dst, 'wb') as fdst:; FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/DESIGNS/DSN_006/solution_flow.dat'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/usr/lib/python3/dist-package",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559:2028,config,config,2028,https://su2code.github.io,https://github.com/su2code/SU2/issues/559,1,['config'],['config']
Modifiability,lugin/FLAGS.linux (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux_x86_64 (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.macosx (112) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win (14) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win32 (33) ; - D MeshTools/PointwiseSU2plugin/Makefile (304) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.sln (64) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.suo (0) ; - D MeshTools/PointwiseSU2plugin/depend.sh (28) ; - D MeshTools/PointwiseSU2plugin/mkplugin (10) ; - D MeshTools/PointwiseSU2plugin/mkplugin.bat (82) ; - D MeshTools/PointwiseSU2plugin/mkplugin.tcl (422) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:13932,plugin,plugins,13932,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,lugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridM,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:17692,plugin,plugins,17692,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,lugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2pl,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15843,plugin,plugins,15843,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"lve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362:2576,variab,variable,2576,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362,2,['variab'],['variable']
Modifiability,"ly contiguous (in SU2 this information comes from an array of CEdge*). Note that we are never talking about sequential access here, this level of indirection will always be present.; To create a somewhat realistic access pattern we create 2 edges per node connecting it to nodes +- some distance away, this distance is small for end nodes and largest for the middle node (I assumed the maximum distance to be `sqrt(nNode)`). This should vaguely resemble an RCM ordered 2D connectivity.; We will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new double [nNode*nVar];; for(int i=0; i<nNode*nVar; ++i) solution[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(), node[p1]->GetSecondary());; ...; ```; and now we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:4528,variab,variables,4528,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['variab'],['variables']
Modifiability,"measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 100`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below).; ; ## Serial Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `SU2_CFD unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Memory measurement; I measured the memory usage with a minutely cronjob of the following snippet:. ```; #!/bin/bash. dir=/path/to/testdir. #list of PIDs:; pid_list='XXXX XXXX'. cd $dir; for PID in $pid_list; do; 	now=$(date +""%Y%m%d%H%M""); 	current_kb=$(pmap $PID| tail -n 1 | awk '{print $3}') # current memory; 	echo $now,$current_kb >> memory_history_$PID.csv; done; ```. **Desktop (please complete the following information):**; - OS: openSUSE Leap 15.2; - C++ compiler and version: gcc 7.5.0; - MPI implementation and version: OpenMPI 4.1.0; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:3316,config,config,3316,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['config'],['config']
Modifiability,"mily: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Loc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6059,config,config-lite-,6059,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config-lite-']
Modifiability,"min_slsqp( x0 = x0 ,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in _minimize_slsqp; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in <listcomp>; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 107, in merge_solution; SU2_SOL( config ); File ""/usr/local/bin/SU2/run/interface.py"", line 207, in SOL; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 270, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2-7.3.0/xxxx/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -n 4 /home/xxx/SU2-7.3.0/SU2/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '139'; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direct",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:4320,config,config,4320,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['config'],['config']
Modifiability,"mon/lib/../src/config_structure.cpp:38:; /usr/include/mpich-x86_64/mpi.h:1460:5: error: initializing argument 3 of ‘int MPI_T_pvar_write(MPI_T_pvar_session, MPI_T_pvar_handle, void*)’ [-fpermissive]; int MPI_T_pvar_write(MPI_T_pvar_session session, MPI_T_pvar_handle handle, void *buf);; ^; make[2]: *** [../src/libSU2_AD_a-config_structure.o] Error 1; make[2]: Leaving directory `/home/bu/SU2/SU2_AD/Common/lib'; make[1]: *** [all-recursive] Error 1; make[1]: Leaving directory `/home/bu/SU2/SU2_AD'; make: *** [SU2_AD] Error 2; ```; Following is the config log:; ```; checking build system type... x86_64-unknown-linux-gnu; checking host system type... x86_64-unknown-linux-gnu; checking target system type... x86_64-unknown-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /usr/bin/mkdir -p; checking for gawk... gawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes; checking for ranlib... ranlib; checking whether we are using the GNU C++ compiler... (cached) yes; checking whether /usr/lib64/mpich",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:3205,variab,variables,3205,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['variab'],['variables']
Modifiability,"mory (RAM) by caching frequently used areas of that memory, this effort is very easily undermined by accessing memory at random or predictably but at very large strides.; Let me give you some numbers, for CNSVariable in 2D the average distance between the primitives at consecutive nodes is 200 doubles or 1600 bytes. ""What?! is the compiler dumb?"" No, virtual methods take up quite a bit of space `sizeof(CNSVariable)` is 424 bytes, before it allocates any data.; And that can only get worse as more functionality is added to the code. This is one of those ""well known"" things at least in a qualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhead); {; primary = new double [nVar+overhead];; for(int i=0; i<nVar; ++i) primary[i] = 1.0;; }; ```; All this does is give access to some primary variables held by the base class and allow derived classes to store their own secondary variables, e.g.:; ```; class VariableDerived : public VariableBase; {; private:; double* secondary;; public:; VariableDerived(int nVar, int overhead);; ~VariableDerived();; inline double* GetSecondary() {return secondary;}; };; ```; Then lets say we have dummy numerics classes.; ```; class NumericsBase; {; public:; virtual ~NumericsBase();; inline virtual double ComputeResidual(const double* a, const double* b) {return 0.0;}; };. class NumericsDerived : public NumericsBase; {; private:; int n;; public:; NumericsDerived(int nVar);; double ComputeRes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:1638,variab,variable,1638,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,4,"['Variab', 'variab']","['VariableBase', 'variable']"
Modifiability,"mpile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5703,config,config-lite-,5703,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config-lite-']
Modifiability,"ms is hidden as well. ## CHT Pin Array setup 2D. Here things get really weird. . 1. With low iteration count it looks like the primal-only restart works perfectly and only the solid residual of temperature is flawed; 2. With higher iteration counts the solid temperature is still different but now both restarted mean flow residuals are not in line with the X+1 iteration simulation ... what?. (p, vx, vy, T_fluid, T_solid); 10 Iterations; ```; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -5.8150835186; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -5.8150835186; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -6.27627665971; ```. 200 Iterations; ```; -12.6894989871 -13.0272466772 -12.776380701 -1.01446550457 -7.17890161426; -12.6894989199 -13.0272465259 -12.7763807181 -1.01446550457 -7.17890161426; -12.6894989199 -13.0272465259 -12.7763807181 -1.01446550457 -7.30259065606; ```. 200 Iterations (No CHT interface at all, i.e. still ""multizone"" but no coupling between the zones); ```; -12.6993664689 -13.037441642 -12.7880987801 -0.895636121058 -16.5806369934; -12.6993665267 -13.0374417614 -12.7880988088 -0.895636121058 -16.1994417242; -12.6993665267 -13.0374417614 -12.7880988088 -0.895636121058 -16.1994417242; ```. 2000 Iterations; ```; -17.5073098614 -17.7104073858 -17.9003808832 -3.34538088409 -9.30160418764; -17.4072816449 -17.5306206426 -17.7140334705 -3.34538088409 -9.30160418771; -17.4072816449 -17.5306206426 -17.7140334705 -3.34538088409 -9.425709713; ```. Also note that the residual for the adjoint-restart is better than expected, and not even by a tiny amount. This naturally leads to the hypothesis that the direct-solution is not reset after the CLEAR_INDICES run. But that is the case, I checked and I also Print the DirectResdiual for all DIrectIterations (2 flow + 2 mesh ones) and they are always the same. If the residual were to drop dramatically for the adjoint restart that would prob be easier to debug. I of course also check",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1395:3516,coupling,coupling,3516,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395,1,['coupling'],['coupling']
Modifiability,n (14) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win32 (33) ; - D MeshTools/PointwiseSU2plugin/Makefile (304) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.sln (64) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.suo (0) ; - D MeshTools/PointwiseSU2plugin/depend.sh (28) ; - D MeshTools/PointwiseSU2plugin/mkplugin (10) ; - D MeshTools/PointwiseSU2plugin/mkplugin.bat (82) ; - D MeshTools/PointwiseSU2plugin/mkplugin.tcl (422) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUn,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:14112,plugin,plugins,14112,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"n and LM2015 for the respective model. The default is NONE.; 2. KIND_TRANS_CORRELATION. It allows the selection among correlation models found in the literature for F_length and ReTheta_c variables. Values are MALAN, SULUKSNA, KRAUSE, MEDIDA_BAEDER, MEDIDA, MENTER_LANGTRY. It defaults to the MENTER_LANGTRY If the underlying turbulence model is SST or to MALAN in case of SA.; 3. CONVERTSA2SST. If the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. I have never really used this feature, it is there just because it is another way of coupling the LM model with SA.; 4. HROUGHNESS. RMS value of roughness for LM2015 transition model. It defaults to 1e-6m. Output fields added:. 1. The values of intermittency and Retheta_tilde have been added to the SOLUTION field. Also, their respective residuals and linear solver residuals/iterations have been added.; 2. I have added the possibility of printing some variables related to transition. These are useful in the case of investigation of the transition phenomenon. The field associated is TRANS_VARS. I do not know if I can leave it as it is or if you want just the essential variables to be printed in the output. The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. AD implementation is missing at the moment, but it will be added in the future. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:1514,variab,variables,1514,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['variab'],['variables']
Modifiability,"n on the library we choose, but he seems to be in favor of [PETSc](https://www.mcs.anl.gov/petsc/) from ANL, which has a 2-clause BSD license and is used by ADflow (formerly SUmb), among other solvers. Eduardo could probably provide more details.; > ; > Another one that's come up in our discussions is [HYPRE](https://computation.llnl.gov/projects/hypre-scalable-linear-solvers-multigrid-methods) from LLNL which has a GNU LGPL. >@juanjosealonso ; >(...) While PETSc is a wonderful library (and parallel), I would hesitate to use it as the solution for the problem that we are trying to solve: it is not the easiest thing to compile and it is most definitely not lightweight. If one also wanted to replace Krylov-space solvers and preconditioners in SU2 the PETSc might make more sense….but it still forces the developer to conform to their view of the world (including matrix setup and decomposition). (...). >@erangit; >I also support external libraries usage (no need to repeat the many advantages as it is well described above) but I think we should be very wary of portability issues. For instance in SUMB, PETSc was used for the Krylov solvers and more. While indeed it worked well and in parallel mode, each new implementation was a nightmare. LAPACK/BLAS package, on the other hand, provides a much easier implementation experience. Certainly, this is not the only consideration but it should be taken into account. Currently, resulting from the significant contributions of the members of this developers group, SU2 implementation works like a charm. I think we should strive to conserve this feature, especially if we aim at attracting more users and developers into the community. (...). >@vdweide; >(...) @bmunguia and @EduardoMolina, what type of application did you have in mind for PETSc? The only thing I can think of is a full Newton solver. And no matter how much I like PETSc, @juanjosealonso and @erangit have a point here. Looks like I start to belong to the group of old conser",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460853218:1231,portab,portability,1231,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460853218,2,['portab'],['portability']
Modifiability,"n the CFD forum (https://www.cfd-online.com/Forums/su2/142261-anomalous-mach-number.html), I extended the domain around the leading edge, but that had no effect on this region. I played around with the 2nd and 4th coefficients in the scheme; the 4th coefficient has not effect on this region. Increasing 2nd coefficient smooths discontinuities, so it decreases the Mach number in those regions but its still higher than freestream. Increasing the 2nd coefficient also makes the shock resolution in the rest of the flow field very smooth (looks like a smudge on the screen). Is there a reason why this happens? I did a few first order upwind simulations; they converge almost instantly and the higher Mach region does not exist. Nor does it exist in 2nd order upwind scheme, but these dont converge any further than -4. I want to conduct optimisation, for which the JST scheme shows good stability and convergence for adjoint problems. I have uploaded the config file, convergence history and images of the high Mach region around the leading edge here: https://drive.google.com/drive/folders/1HtBwS9rVuWn5IJoDpMCCpRyYehOTk9by?usp=drive_link. The history file also contains information of the meshes (number of cells and y+ values). I uploaded one of the converging meshes (v_coarse.su2) and one of the diverging meshes (medium.su2). I used WEIGHTED_LEAST_SQUARES to help with the sharp edge; this decreases the Mach in the region but not by much (~9 for the very_coarse mesh). I have also run the RANS solver with JST, but there is no significant difference from using NS with WEIGHTED_LEAST_SQUARES; the Mach number in the region 8.74. Thank you,; RK. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2330:2188,config,config,2188,https://su2code.github.io,https://github.com/su2code/SU2/issues/2330,1,['config'],['config']
Modifiability,"n the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: Y",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5316,config,config,5316,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config']
Modifiability,"n't even make sense. You can compare the code to the paper by Travin _et al.__ at: https://doi.org/10.1007/0-306-48383-1_16 or the related AIAA presentation at: https://arc.aiaa.org/doi/pdf/10.2514/6.2001-879. There's multiple issues that I believe are present:. + There's an extra square root in the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoMolina) on what tests to use would be appreciated. Otherwise, I'll come up with my own test. ## Related Work; This hybrid upwind/central blending was introduced by @EduardoMolina as part of PR #490. ## PR Checklist. - [x] I am submitting my contribution to the develop br",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532:1422,variab,variable,1422,https://su2code.github.io,https://github.com/su2code/SU2/pull/532,1,['variab'],['variable']
Modifiability,n/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; --------------------------------------------------,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:5900,config,configure,5900,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['configure']
Modifiability,"n; ; required_files = [current_mesh,current_solution]; ; if not all (os.path.exists(fil) for fil in required_files):; err = '\n\n## ERROR : Can\'t find:\n'; for fil in required_files:; if not os.path.exists(fil):; err += fil + '\n'; raise RuntimeError , err; ; #--- Start looping; ; # Get mesh dimension; dim = su2amg.get_su2_dim(current_mesh); if ( dim != 2 and dim != 3 ):; raise RuntimeError , ""Wrong dimension number\n""; ; #--- AMG parameters; ; config_amg = dict(); ; config_amg['hgrad'] = float(config['ADAP_HGRAD']); config_amg['hmax'] = float(config['ADAP_HMAX']); config_amg['hmin'] = float(config['ADAP_HMIN']); config_amg['mesh_in'] = 'current.meshb'; config_amg['mesh_out'] = 'current.new.meshb'; config_amg['metric_in'] = ''; config_amg['sol_in'] = 'current_sensor.solb'; config_amg['itp_sol_in'] = 'current.solb'; config_amg['adap_source'] = ''; ; if 'ADAP_BACK' in config:; config_amg['adap_back'] = os.path.join(cwd,config['ADAP_BACK']); #os.symlink(os.path.join(cwd, config.ADAP_BACK), config.ADAP_BACK); else:; config_amg['adap_back'] = config['MESH_FILENAME']; ; print ""config_amg : "" + config_amg['adap_back']; back_name, back_extension = os.path.splitext(config_amg['adap_back']); ; if not os.path.exists(config_amg['adap_back']):; raise RuntimeError , ""\n\n##ERROR : Can't find back mesh: %s.\n\n"" % config_amg['adap_back']; ; if back_extension == "".su2"":; ; #pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); print ""skipping back mesh ...""; #import _amgio as amgio; #amgio.py_ConvertSU2toInria(config_amg['adap_back'], """", ""amg_back""); #config_amg['adap_back'] = ""amg_back.meshb""; ; if 'ADAP_SOURCE' in config:; config_amg['adap_source'] = os.path.join(cwd,config['ADAP_SOURCE']); ; global_iter = 0; ; sys.stdout.write(""\nStarting mesh adaptation process.\n""); ; for iSiz in range(len(mesh_sizes)):; ; mesh_size = int(mesh_sizes[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d - Mesh size coefficient %.1lf\n"" % (iSiz+1, len(mesh_sizes), ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:7131,config,config,7131,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"n; SU2.opt.SLSQP(project,x0,xb,its); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 102, in scipy_slsqp; epsilon = 1.0e-06 ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 236, in fmin_slsqp; mieq = len(f_ieqcons(x)); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; in",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:1581,config,config,1581,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['config'],['config']
Modifiability,"n_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add thes",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8110,config,config,8110,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config']
Modifiability,"nd of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % Invert the background mesh orientation; % Sometimes required for 3D meshes, since AMG doesn't perform; % a check that the orientation of the background and foreground; % meshes match; PYADAP_INV_BACK= NO; % Don't use ridge detection if corners specified; PYADAP_RDG= NO; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1316,adapt,adaptations,1316,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341,2,['adapt'],"['adaptation', 'adaptations']"
Modifiability,"ne just needs to replace each of these templates by the appropriate class. For those corrections/variations that just introduce an additional source term, I think it is better to implement them using decorators. Hence multiple corrections/variations introducing source terms can be simultaneously used. Here is a minimal example:. ```c++; template<class ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1411:5312,config,config,5312,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411,1,['config'],['config']
Modifiability,"ned on different markers.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/237 https://github.com/su2code/SU2/pull/237; > Commit Summary; > ; > config options updated to be compatible with multiple objectives - mdo not yet implemented; > python tools; > python adjusted for multiple objectives: will always run 1st objective only with continuous adjoint, but will run separate continuous adjoint evaluations within optimization; > continuous adjoint evaluates the requested objectives; > fixing some errors; > File Changes; > ; > M Common/include/config_structure.hpp https://github.com/su2code/SU2/pull/237/files#diff-0 (20); > M Common/include/config_structure.inl https://github.com/su2code/SU2/pull/237/files#diff-1 (6); > M Common/src/config_structure.cpp https://github.com/su2code/SU2/pull/237/files#diff-2 (90); > M SU2_PY/SU2/eval/design.py https://github.com/su2code/SU2/pull/237/files#diff-3 (8); > M SU2_PY/SU2/eval/functions.py https://github.com/su2code/SU2/pull/237/files#diff-4 (14); > M SU2_PY/SU2/eval/gradients.py https://github.com/su2code/SU2/pull/237/files#diff-5 (4); > M SU2_PY/SU2/io/config.py https://github.com/su2code/SU2/pull/237/files#diff-6 (21); > M SU2_PY/SU2/io/tools.py https://github.com/su2code/SU2/pull/237/files#diff-7 (21); > M SU2_PY/SU2/opt/project.py https://github.com/su2code/SU2/pull/237/files#diff-8 (2); > M SU2_PY/SU2/opt/scipy_tools.py https://github.com/su2code/SU2/pull/237/files#diff-9 (24); > M SU2_PY/SU2/run/projection.py https://github.com/su2code/SU2/pull/237/files#diff-10 (4); > M SU2_PY/continuous_adjoint.py https://github.com/su2code/SU2/pull/237/files#diff-11 (22); > Patch Links:; > ; > https://github.com/su2code/SU2/pull/237.patch https://github.com/su2code/SU2/pull/237.patch; > https://github.com/su2code/SU2/pull/237.diff https://github.com/su2code/SU2/pull/237.diff; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/pull/237.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/237#issuecomment-182175757:2269,config,config,2269,https://su2code.github.io,https://github.com/su2code/SU2/pull/237#issuecomment-182175757,1,['config'],['config']
Modifiability,"new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_solution_ini = ""ite%d_ini.dat"" % global_iter; os.rename(current_solution, current_solution_ini); ; config_cfd.MESH_FILENAME = current_mesh; config_cfd.CONV_FILENAME = ""ite%d_history"" % global_iter; config_cfd.SOLUTION_FLOW_FILENAME = current_solution_ini; config_cfd.RESTART_FLOW_FILENAME = current_solution; ; config_cfd.RESIDUAL_REDUCTION = float(adap_res[iSiz]); config_cfd.EXT_ITER = int(adap_ext_iter[iSiz]); ; config_cfd.WRT_BINARY_RESTART = ""NO""; config_cfd.READ_BINARY_RESTART = ""NO""; ; SU2_CFD(config_cfd); ; if not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : SU2_CFD Failed.\n""; ; ; except:; sys.stdout = sav_stdout; sys.stderr = sav_stderr; raise; ; sys.stdout = sav_stdout; sys.stderr = sav_stderr; ; ; #--- Print convergence history; ; plot_format = config_cfd['OUTPUT_FORMAT']; plot_extension = su2io.get_extension(plot_format); history_filename = config_cfd['CONV_FILENAME'] + plot_extension; ; history = su2io.read_history(history_filename); ; res_flow = history['Res_Flow[0]']; res_cvg = max(res_flow)-min(res_flow); ; del history; ; sys.stdout.write(' %s CFD done. Residual convergence %.2lf orders of magnitude\n' % (pad_nul, res_cvg)); ; ; to_remove = [""current.itp.solb"", config_amg['mesh_in'], config_amg['mesh_out'], config_amg['sol_in'],config_amg['itp_sol_in']]; for fil in to_remove:; if os.path.exists(fil) : os.remove(fil); ; global_iter += 1; ; os.rename(current_solution,os.path.join(cwd,config.RESTART_FLOW_FILENAME)); os.rename(current_mesh,os.path.join(cwd,config.MESH_OUT_FILENAME)); ; sys.stdout.write(""\nMesh adaptation successfully ended. Results files:\n""); sys.stdout.write(""%s\n%s\n\n"" % (config.MESH_OUT_FILENAME,config.RESTART_FLOW_FILENAME))",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:12628,config,config,12628,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,5,"['adapt', 'config']","['adaptation', 'config']"
Modifiability,nftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: e,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:11421,config,configure,11421,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"nftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4619: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4644: result: gcc -E; configure:4664: gcc -E conftest.c; configure:4664: $? = 0; configure:4678: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4678: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:8653,config,configure,8653,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"ng is because it's applied uniformly to all objectives and constraints. 4. OPT_RELAX_FACTOR: This is a scaling factor that purely multiplies the DV_VALUES from a config file, before applying the deformation to the mesh. For example, if you are performing a 2D optimization using a FFD and the optimizer spits out a suggested DV_VALUE of 0.001, the mesh deformation routine will move the FFD control point by 1 (according to the scaling given above). 5. OPT_LINE_SEARCH_BOUND: This is an interesting one and the one I am least sure off. This option limits the maximum final movement of the FFD control points in the cartesian coordinate system. So, DV_VALUE * OPT_RELAX_FACTOR results in a movement of the FFD_CONTROL_POINT. If the the maximum movement of any of the control points is greater than OPT_LINE_SEARCH_BOUND, then all the control point movements are scaled such that the maximum movement = OPT_LINE_SEARCH_BOUND. . 6. OPT_UPPER/LOWER_BOUND: This value is divided by the OPT_RELAX_FACTOR to give the optimizer the maximum/minimum values for the design variables. . 7. DEFINITION_DV Scaling: This one I am really confused about. The only place that I can find this being used, is to scale the gradient of the objectives/constraints. It doesn't seem to actually scale the DVs anywhere in the python code, except for in the initialization, where the DVs are zeroed out anyway. Am I missing something here? Is it correct to think that scaling the gradients is one way to ensure that the DVs that the optimizer outputs scaled DVs?. In general, I think it'd be useful to have more information in the config template so that the scalings don't seem to be a dark art. The template does have some suggestions, like the gradient norm should order 10^-6. I have found this suggestion to be super useful, and it does work well. But I am not sure why the gradients need to be so small for the optimizer to work well. Any insight into this value?. In the end I am hoping to de-mystify some of the scaling",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:4276,variab,variables,4276,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['variab'],['variables']
Modifiability,ng size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6446,config,config,6446,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"ng type for those data structures is still `double`, only the `getVec` type methods need to convert on the fly to the SIMD type, for example:; ```C++; // use the ""pointer ctor"" to return an array starting at ""row0""; Array<double,4> Matrix<double>::getVec(size_t row0, size_t col) const {; return Array<double,4>(&data_[row0+col*rows_]);; }. // use the ""gather ctor"" to return an array with the indices in ""rows""; template<class U>; Array<double,4> Matrix<double>::getVec(const U& rows, size_t col) const {; return Array<double,4>(&data_[col*rows_], rows);; }; ```; After inlining those copies get optimized away.; Although the stored type, and ""scalar interface"" of the containers do not need to change, the storage order of the data does. Notice that in the above data is stored by columns instead of rows (something that @vdweide mentioned in #716) this has greater implications for gradients as instead of the familiar ""vector of matrices"" we would need a ""matrix of vectors"", i.e. the derivative of variable i w.r.t. coordinate j stored as a vector for all points. The `Adjacency` also needs to be stored in a funny way. For the scalar version of the code it was stored as a CSR sparse matrix (one array of indices into the arrays of data for each point, the rows).; For the vectorized version we want to load (small) arrays of jPoint's, arrays of iEdge's, and arrays of directions, and as we know either those are contiguous or we take a huge performance hit.; If all points had the same number of neighbors we could store the adjacency in LIL (list of lists) format, essentially a column-major matrix, but that is not true for hybrid meshes and so we would possibly waste a lot of memory.; The solution is to use a Block-CSR format (like in CSysMatrix) where the blocks are the vectors we want and instead of one row per point we have one row per SIMD group. But even within a SIMD-sized group points can have different number of neighbors...; The solution for that is padding, within each grou",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:10178,variab,variable,10178,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['variab'],['variable']
Modifiability,"nitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modv",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5669,config,config-lite-,5669,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config-lite-']
Modifiability,"nja.exe -C C:\Users\qiang_zhang\Desktop\TestCases\SU2\build install; ninja: Entering directory `C:\Users\qiang_zhang\Desktop\TestCases\SU2\build'; [1/767] Linking target externals/cgns/hdf5/H5detect.exe; FAILED: externals/cgns/hdf5/H5detect.exe; ""gcc"" -o externals/cgns/hdf5/H5detect.exe externals/cgns/hdf5/H5detect.exe.p/H5detect.c.obj ""-Wl,--allow-shlib-undefined"" ""-Wl,-O1"" ""D:/Anaconda/Library/lib/z.lib"" ""-Wl,--start-group"" ""-lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi"" ""-Wl,--subsystem,console"" ""-lkernel32"" ""-luser32"" ""-lgdi32"" ""-lwinspool"" ""-lshell32"" ""-lole32"" ""-loleaut32"" ""-luuid"" ""-lcomdlg32"" ""-ladvapi32"" ""-Wl,--end-group""; D:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; collect2.exe: error: ld returned 1 exit status; [10/767] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Pint.c.obj; ninja: build stopped: subcommand failed.; ```. **To Reproduce**. I can sucess configure su2:; ![image](https://user-images.githubusercontent.com/29271051/159446256-dc866db4-9199-42d0-86b4-c38839753dd3.png); ![image](https://user-images.githubusercontent.com/29271051/159446307-354518f6-3382-401b-80c9-ac9e72f3d224.png). Then, I want to compile it by:; ```; ./ninja.exe -C C:\Users\qiang_zhang\Desktop\TestCases\SU2\build install; ```; And the bug is reported:. ```; cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; ```; However, I have install the `msmpisdk.msi` and `msmpisetup.exe`. . ![image](https://user-images.githubusercontent.com/29271051/159446649-f606a381-0896-461c-bd09-9e0b9243ce2e.png). **Desktop (please complete the following information):**; - OS: win10; - C++ compiler and version: as the recommanded `gcc version 8.1.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project)`; - MPI implementation and version: as the recommanded v10.1.2; - SU2 Version: Project version: 7.3.0 ""Blackbird"". Any suggestion is appreciated~~~",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1570:1085,config,configure,1085,https://su2code.github.io,https://github.com/su2code/SU2/issues/1570,1,['config'],['configure']
Modifiability,"nly in finite_differences.py.; >; > The step size is scaled with the reference length because from the; > practical point of view, I have found that the size of the aircraft, wing,; > airfoil, is important to determine a meaningful step size. e.g. should we; > use the same step for an aircraft with a MAC of ~150in than for an airfoil; > with a chord of 1in.; >; > Remember that most of the times we are using FD when the adjoint is not; > converging… so we have bad convergence of the direct problem (including; > some level of unsteadiness that we want to filter with the selection of the; > step size). In other words, with the right choice of the FD step size you; > can obtain, at least, an useful gradient… and that number is somehow linked; > to the size of the aircraft, wing, or airfoil.; >; > The best solution would be to add the step size to the; > finite_differences.py and also to the shape_optimization.py (creating a new; > option in the config file)… not a top priority, but I’ll do it soon; >; > Best,; > Francisco; >; >; > > On Mar 1, 2017, at 3:25 PM, Thomas D. Economon <notifications@github.com; > <mailto:notifications@github.com>> wrote:; > >; > > Bumping this issue. This has come up several times now for different; > people/projects. Is there a reason to keep it based on the reference moment; > length, or can we revert to specifying this through the command line; > options?; > >; > > —; > > You are receiving this because you were assigned.; > > Reply to this email directly, view it on GitHub <; > https://github.com/su2code/SU2/issues/367#issuecomment-283505108>, or; > mute the thread <https://github.com/notifications/unsubscribe-; > auth/AEpkllp8PXmLDDQLJNq-2yRLBoDAfXE-ks5rhf5pgaJpZM4Lq5F->.; > >; >; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub<https://github.com/; > su2code/SU2/issues/367#issuecomment-284288637>, or mute the thread<; > https://github.com/notifications/unsubscri",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/367#issuecomment-284314148:2381,config,config,2381,https://su2code.github.io,https://github.com/su2code/SU2/issues/367#issuecomment-284314148,2,['config'],['config']
Modifiability,"nning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs wer",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:1374,config,configuration,1374,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['config'],['configuration']
Modifiability,"nother place (or lab server) and in Github we only had the config files, unfortunately we checked that for some users it was frustrating to download the config files and then go to another place to download the grids. From our practical point of view, the current setting is ideal to run the regression tests. But we are open to any change that benefits the SU2 users/developers community. . Now, it is very easy to download and modify the TestCases (keep in mind that the options in the config files change frequently) but, the price to pay is a large GitHub repository that it is difficult to download if you don’t have a good internet connection. Anyway, I think you are coming to Stanford in one week, it would be great to chat with you. We would love to have you and your group as a SU2 developer/user. Looking forward to meeting you and thanks for testing SU2. Best; Francisco. ## . Dr. Francisco Palacios; Engineering Research Associate at Stanford University; AIAA Senior Member, SIAM Member, and SU2 lead developer; Editorial Board Member for Scientific Report (Nature Publishing Group); Intel Parallel Computing Center. Personal webpage: http://adl.stanford.edu/people/fpalacios.html; SU2 webpage: http://su2.stanford.edu/. Department of Aeronautics and Astronautics; Durand Building. Room 357; Stanford University; Stanford CA 94305; United States. On Feb 3, 2015, at 1:32 PM, Lorena A. Barba notifications@github.com wrote:. > And why is your Test repo so large?; > Perhaps some data files would be happier living elsewhere?; > ; > I'm thinking that if your Tests load large mesh files, for example, these mesh files could be placed in a data repository (like Figshare, Data Dryad, Zenodo), and your configuration files for each test could fetch the data it needs. I would imagine that the input data does not change often (or perhaps ever?) and one permalink and DOI is better suited for data than a version-controlled repo.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72909446:1996,config,configuration,1996,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72909446,1,['config'],['configuration']
Modifiability,"nrunning.html). . Briefly ; 1. In SU2, The production term of the SST model uses incompressible assumptions. Is there some special reason? . 2. Always ignore the turbulence kinetic energy to compute the stress tensor for the momentum and energy equation, is it a bug?. Here is the detail!. 1. . The Boussinesq relation of RANS is . ![image](https://user-images.githubusercontent.com/50565314/148731113-5d141cd0-bea0-4bc4-8f2a-e40932645844.png). Form [Running cases with CFD of NASA TMR](https://turbmodels.larc.nasa.gov/noteonrunning.html): ""In the equation above, the![image](https://user-images.githubusercontent.com/50565314/148731540-ace2cac5-4168-48d8-9125-c053806ba463.png) term is sometimes ignored for non-supersonic speed flows, and the **second term in parentheses is identically zero for incompressible flows**."". The production term of SST model is :. ![image](https://user-images.githubusercontent.com/50565314/148771167-b96d6d8f-b638-4efd-a6a3-6731ddb4f4a0.png). Rewrite the first term of the above equation :. ![image](https://user-images.githubusercontent.com/50565314/148731731-23cdd717-28d1-453c-a867-77c99494f86f.png). ![image](https://user-images.githubusercontent.com/50565314/148771466-f1613617-0502-4809-9861-a64f4ce0dee7.png). Finally, the production term becomes :; ; ![image](https://user-images.githubusercontent.com/50565314/148732458-c5d7bbd7-bd68-4416-bac2-979aa006512e.png). This term( ![image](https://user-images.githubusercontent.com/50565314/148732925-d66edf19-484a-4c4e-b518-3cff8ef935f0.png) ) becomes zero in incompressible flow(from continuity equation ![image](https://user-images.githubusercontent.com/50565314/148760571-f54c54eb-a897-4786-a859-c40aee873792.png) ), but the compressible flow is not zero. . In the SU2 source code( line 849 in [SU2_CFD/src/numerics/turbulent/turb_sources.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/numerics/turbulent/turb_sources.cpp)), the production term of SU2's SST model is ; ""pk = Eddy_Viscosity_i*Strai",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1551:1892,Rewrite,Rewrite,1892,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551,1,['Rewrite'],['Rewrite']
Modifiability,ntation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc); - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Another important updated to BC in parallel; - More implementation and clean up of the parallel CGNS reader.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - CGNS reader bug fix.; - Updated adj. NS solver with primitive variables and farfield bc including viscous contribution.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Small change; - Back to the previous version; - Fixed some loop variables.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixes for CGNS.; - New slope limiter based on the wall distance; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - Non-dimensional adjoint bc; - CGNS bug.; - Mixed-element support in new CGNS reader.; - Memory fix for mixed-element CGNS in parallel.; - Activated the parallel CGNS reader.; - New FFD input; - Adjacency building for Parmetis improve to account for VTK structure; - added if viscous steps to some adjeuler bcs; - Minor changes; - Back to previous version of ParMetis; - Small change; - Final update.; - Minor bug fixed.; - Updated SU2_DEF (cgns); - CGNS global element ID bug fix.; - Heat flux bug fix.; - Small fix.; - Merge branch 'master' into develop; - changed history,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:6821,variab,variables,6821,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['variab'],['variables']
Modifiability,"nterface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special via a boolean vector and know how to access via a hash table (for example). **Alternatives**; We could make the storage continuous by using a memory pool i.e. allocate outside the class and give the class a pointer to its memory location. This is still not truly contiguous as the pointers the class holds are variables themselves and so they would still be separated (albeit by a smaller huge distance), thus the amount of overhead would still influence performance. Right, that is enough writing... please let me know what you think.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:7339,variab,variables,7339,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,4,['variab'],['variables']
Modifiability,"nts to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % Invert the background mesh orientation; % Sometimes required for 3D meshes, since AMG doe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1111,adapt,adaptation,1111,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341,1,['adapt'],['adaptation']
Modifiability,ntwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/share,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:17362,plugin,plugins,17362,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,ntwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpVersions.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin_Instructions.txt (0) ; - I QuickStart/inv_NACA0012.cfg (0) ; - I README (0) ; - I SU2_CFD/include/SU2_CFD.hpp (0) ; - I SU2_CFD/include/definition_structure.hpp (0) ; - I SU2_CFD/include/fluid_model.hpp (0) ; - I SU2_CFD/include/fluid_model.inl (0) ; - I SU2_CFD/include/inte,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:19876,plugin,plugins,19876,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"o allow fusing residual and Jacobian contributions).; All this needs to be done with templates for the ""minimal indirection"" requirement. Which means for each numerical method we will have 4 explicit template instantiations (Euler2D, Euler3D, (RA)NS2D, (RA)NS3D) but in the end these are still polymorphic objects that will be instantiated by some factory function (i.e. it will look clean, especially because I will not port all methods in one go xD). The template machinery to support this is actually not too crazy:; ```c++; #include <array>; #include <cmath>. // An example type to use instead of the container that stores solution data for all vertices.; struct SolutionContainer; {; std::array<double,3> velocity;; std::array<double,3> areaVector;; };. using ResultType = double;. // We want classes with this interface.; class VirtualInterface; {; public:; virtual ResultType Compute(const SolutionContainer&) const = 0;; };. // The Compute method is to be composed via an inheritance chain, to do this; // we allow each building block to inherit from any class. These classes should; // be function objects that have no member variables, all data used in the; // resulting Compute method will be on the stack.; template<typename Base>; class ComputeArea : Base; {; protected:; // Different template instantiations will be made for; // 2D/3D to allow perfect loop unrolling.; enum : int {nDim = Base::nDim};. // To share variables between building blocks we will pass; // down a struct which is also composed by inheritance; struct WorkVarsType : Base::WorkVarsType; {; double area; // add ""area"" to the variables of Base; };; ; // The final implementation of Compute will be a call down the chain.; // The final constructed WorkVarsType is not known at this stage,; // hence we also template the method.; template<typename WV>; void Compute(WV& wv, const SolutionContainer& sol) const; {; // Boilerplate, call base first. This is akin to the decorator design pattern; // without polymorphism. ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:2557,inherit,inheritance,2557,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,4,['inherit'],"['inherit', 'inheritance']"
Modifiability,"o some primary variables held by the base class and allow derived classes to store their own secondary variables, e.g.:; ```; class VariableDerived : public VariableBase; {; private:; double* secondary;; public:; VariableDerived(int nVar, int overhead);; ~VariableDerived();; inline double* GetSecondary() {return secondary;}; };; ```; Then lets say we have dummy numerics classes.; ```; class NumericsBase; {; public:; virtual ~NumericsBase();; inline virtual double ComputeResidual(const double* a, const double* b) {return 0.0;}; };. class NumericsDerived : public NumericsBase; {; private:; int n;; public:; NumericsDerived(int nVar);; double ComputeResidual(const double* a, const double* b);; };; ```; `NumericsDerived` simply computes the dot product of `a` and `b`.; The use case is to loop over edges that connect nodes `a` and `b` passing the data of those nodes to `ComputeResidual` and using the result to update an array.; ```; VariableBase** node = new VariableBase* [nNode];; for(int i=0; i<nNode; ++i); node[i] = new VariableDerived(nVar,overhead);; ...; for(int i=0; i<nEdge; ++i); {; int p0 = connectivity[i].first;; int p1 = connectivity[i].second;. double r = numerics->ComputeResidual(node[p0]->GetPrimary(), node[p1]->GetPrimary());. residual[p0] += r;; residual[p1] -= r;; }; ```; I hope that looks familiar.; `connectivity` is a `vector<pair<int,int> >` so nicely contiguous (in SU2 this information comes from an array of CEdge*). Note that we are never talking about sequential access here, this level of indirection will always be present.; To create a somewhat realistic access pattern we create 2 edges per node connecting it to nodes +- some distance away, this distance is small for end nodes and largest for the middle node (I assumed the maximum distance to be `sqrt(nNode)`). This should vaguely resemble an RCM ordered 2D connectivity.; We will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new d",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:3072,Variab,VariableBase,3072,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,3,['Variab'],"['VariableBase', 'VariableDerived']"
Modifiability,"o you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin/python; Python 3.9.1. *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:1586,config,configure,1586,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['config'],['configure']
Modifiability,"o:notifications@github.com]; Sent: Monday, July 22, 2019 8:38 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: [su2code/SU2] C++ compiler cannot create executables (#738). Dear developers,; I am trying to install SU2 in docker ubuntu 18.04 container so that I can easily share with partner. But I failed to compile the code with following errors:. (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx. checking build system type... x86_64-pc-linux-gnu. checking host system type... x86_64-pc-linux-gnu. checking target system type... x86_64-pc-linux-gnu. checking for a BSD-compatible install... /usr/bin/install -c. checking whether build environment is sane... yes. checking for a thread-safe mkdir -p... /bin/mkdir -p. checking for gawk... no. checking for mawk... mawk. checking whether make sets $(MAKE)... yes. checking whether make supports nested variables... yes. checking whether make supports nested variables... (cached) yes. checking for style of include used by make... GNU. checking whether the C++ compiler works... no. configure: error: in `/home/SU2':. configure: error: C++ compiler cannot create executables. See `config.log' for more details. I am sure that I have installed gcc/g++ successfully. You can see. (base) root@a5502ebdff64:/home# gcc --version. gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0. Copyright (C) 2017 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. (base) root@a5502ebdff64:/home# g++ -o hello hello.cc. (base) root@a5502ebdff64:/home# ./hello. Hello, World!. I have uploaded the config.log file. Could you give me some suggestions, please?; config.log<https://github.com/su2code/SU2/files/3418183/config.log>. —; You are receiving this because you are subscribed to t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847308:1149,variab,variables,1149,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847308,1,['variab'],['variables']
Modifiability,oat... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Tech,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6400,config,config,6400,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,odulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/p,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15389,plugin,plugins,15389,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"of the roughness elements and thus the distance to nearest wall is modified for all points based on the specified sand grain roughness. Additionally, the boundary condition at the wall is now not set to zero but a mixed condition (robin BC) is applied allowing for a non-zero eddy viscosity at the wall. More information is also available [here](https://turbmodels.larc.nasa.gov/spalart.html#sarough). For the SST model, the roughness boundary condition is based on:. Wilcox, D.C Turbulence Modeling for CFD., 1998 and 2006, DWC Industries. There are two suggestions (first in the 2nd edition and a corrected version in the 3rd edition). I have implemented the latest one and commented the old one. There have been numerous papers about some limitations of these models themselves however. The modification consists of changing the omega boundary condition at the wall to a different value based on local quantities. . This PR introduces two extra config options - one to specify whether a wall is rough or not and another to specify the sand grain roughness height for each of them. ; ; WALL_TYPE = SMOOTH/ROUGH; WALL_ROUGHNESS = <array of doubles>. By default all walls are smooth. If neither option is present in the config file, smooth walls are assumed everywhere. However, if there are multiple walls some rough, some smooth, they need to be listed (similar to INLET TYPE) in the order they appear in the MARKER_HEATFLUX definition. I have attached some examples here. . 1. Flatplate; Here is the input file [turb_flatplate_v7_cfg.txt](https://github.com/su2code/SU2/files/4198440/turb_flatplate_v7_cfg.txt),. The meshes can be found in TestCases/rans/flatplate or the NASA TMR database. Here are the results with both SA and SST; ![yplus_vs_uplus_sa_comparison](https://user-images.githubusercontent.com/28007882/74438338-3b808600-4e6a-11ea-9a83-c326384950d3.png). Here I am plotting the non-dimensionalised velocity u^+ against y^+. The clean results give fairly good agreement and we can see ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877:1549,config,config,1549,https://su2code.github.io,https://github.com/su2code/SU2/pull/877,1,['config'],['config']
Modifiability,"ogramming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...).""; I try to encapsulate and hide the tricky bits as much as possible to make the code as readable as possible, whether I am succeeding or not is for the community to decide, in all these PR's I've been pointing to the areas I think are trickier, if someone, anyone, feels they are absolutely incomprehensible please say something... either here, or trough slack, or by email (I think it shows in the commits) (I understand not everyone is keen on github exposure). > I'm aware that you have been doing very well at documenting the code and the various PRs, but I'd say we should try to find an strategy to ease the learning curve on potential new developers (maybe some developer tutorials? a collection of the comments/discussions on the PRs moved to the wiki? a list of links/useful resources?). I agree with documentation of broad design decisions, that is the intent of #789, and developer tutorials (how to implement a new X) once we are content with the restructurings, otherwise they will quickly go outdated... or actually...; We should probably first think about the answers to ""how to implement a new X"" and restructure/refactor as a function of that.; Based on previous efforts of maintaining wiki's updated while code is being developed, I much prefer this github style where you can clearly tell what version of the code the comments refer to. A collection of comments/discussions organized by topic and linked to a feature is somewhat what I had in mind when I opened a ""big PR"" (#824) with little branches such as this one, I can try to complete that with a list of links/useful resources, references as it were, good idea!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:5095,refactor,refactor,5095,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,2,['refactor'],['refactor']
Modifiability,"oint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); gradI[iVar][iDim] += a_ij[iDim]*flux;; }; }. for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); for(size_t k=0; k<SIMDLEN; ++k); grad(iPoint+k,iVar,iDim) = gradI[iVar][iDim][k];; ...; ```; Similarly when computing the gradient we need to first fetch/transpose it to be able to vectorize subsequent computations; ```c++; FltVec gradI[MAXNVAR][MAXNDIM];. for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); for(size_t k=0; k<SIMDLEN; ++k); gradI[iVar][iDim][k] = grad(iPoint+k,iVar,iDim);; ...; ```; Performance wise this is actually better than the SoA version (4% on gradients, 35% on limiters) as it also benefits from better locality, and it is only slightly (3%) worse than zig zag storage, especially when fusing limiters and gradients as the transposition of the gradient into storage is greatly amortised.; Regarding readability, the 3 nested loops can be moved to methods of the container, but we cannot get rid off the local variable (if we want vectorization that is). **We lose the ability to vectorize primitive variable updates efficiently with AoS** but currently that only accounts for 3% of the runtime and it is a memory bound operation therefore it would not gain much from vectorization anyway. On the subject of de-swizzling data remember I said the writes into CSysMatrix would be a bit weird, that is because each Jacobian contribution will be a ""matrix of short arrays"" that needs to be transformed into a short array of matrices, the result of that is code like the above that explicitly manipulates the lanes of our SIMD type, such code can be completely hidden inside CSysMatrix which is good because a 4x4 vectorized transpose and matrix update looks like this; ```c++; // block j, subs from jj and goes to ij; T0 = blk_j[ k ].unpackLo(blk_j[k+1]); T1 = blk_j[ k ].unpackHi(blk_j[k+1]);; T2 = blk_j[k+2].unpackLo(blk_j[k+3]); T3 = blk_j[k+2].unpackHi(blk_j[k+3]);. C0 ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:15046,variab,variable,15046,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['variab'],['variable']
Modifiability,ointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/Po,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:19122,plugin,plugins,19122,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"ok I just removed the commented lines!; Sorry about that, I initially put there those ""couts"" cause I first thought about throwing out a warning string (in case users try to impose Gamma and Gas_constant using standard_air model) and then I forgot to remove them. ; This is a bug from the current develop branch actually: right now it is possible to change gamma even though one chooses the std_air model.; It happened to me that simulations were not converging and giving weird behaviour just because I forgot to remove the option from the config file. I put that correction but maybe you've a better idea on how to handle this?. Regarding the Jacobians, you're right, right now the implementation is exactly the generalization of the one implemented in the original ideal gas situation (Roe). Maybe in the future we will work also on Jacobians for the HLLC but that's something I don't really need right now. I can talk with folks here in Milano or in Delft and see if there a critical mass calling for that implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/209#issuecomment-152458824:541,config,config,541,https://su2code.github.io,https://github.com/su2code/SU2/pull/209#issuecomment-152458824,1,['config'],['config']
Modifiability,ols/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpVersions.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin_Instructions.txt (0) ; - I QuickStart/inv_NACA0012.cfg (0) ; - I README (0) ; - I SU2_CFD/include/SU2_CFD.hpp (0) ; - I SU2_CFD/include/definition_structure.hpp (0) ; - I SU2_CFD/include/fluid_model.hpp (0) ; - I SU2_CFD/include/fluid_model.inl (0) ; - I SU2_CFD/include/integration_structure.hpp (0) ; - I SU2_CFD/include/integration_structure.inl (0) ; - I SU2_CFD/include/iteration_structure.hpp (0) ; - I SU2_CFD/include/numerics_machine_learning.hpp (0) ; - I SU2_CFD/include/numerics_machine_learning.inl (0) ; - I SU2_CFD/include/numerics_machine_learning_turbulent.hpp (0) ; - I SU2_CFD/include/numerics_structure.hpp (0) ; - I SU2_CFD/include/numerics_structure.inl (0) ; - I SU2_CFD/include/output_structure.hpp (0) ; - I SU2_CFD/include/solver_structure.hpp (0) ; - I SU2_CFD/include/solver_structure.inl (0) ; - I SU2_CFD/include/transpor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:20460,plugin,plugins,20460,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"om>> wrote:. I've tracked down the source of the bug, and I'll submit a pull request later today. During the output of the periodic mesh in SU2_MSH, CPeriodicGeometry::SetMeshFile sorts the nodes into the order normal, receive, send. This can be found in lines 18798-18819 of Common/src/geometry_structure<https://github.com/su2code/SU2/blob/68991cd1005cf118e1ff21b8952bb366bb299cf3/Common/src/geometry_structure.cpp#L18798>. I've copied down the lines here for reference:. /*--- Change the numbering to guarantee that the all the receive; points are at the end of the file ---*/; unsigned long OldnPoint = geometry->GetnPoint();; unsigned long *NewSort = new unsigned long[nPoint];; for (iPoint = 0; iPoint < nPoint; iPoint++) {; NewSort[iPoint] = iPoint;; }. unsigned long Index = OldnPoint-1;; for (iMarker = 0; iMarker < nMarker; iMarker++) {; if (bound[iMarker][0]->GetVTK_Type() == VERTEX) {; if (config->GetMarker_All_SendRecv(iMarker) < 0) {; for (iElem_Bound = 0; iElem_Bound < nElem_Bound[iMarker]; iElem_Bound++) {; if (bound[iMarker][iElem_Bound]->GetNode(0) < geometry->GetnPoint()) {; NewSort[bound[iMarker][iElem_Bound]->GetNode(0)] = Index;; NewSort[Index] = bound[iMarker][iElem_Bound]->GetNode(0);; Index--;; }; }; }; }; }. In order to sort the points, a list mapping the old points to the new points (NewSort) is created. The problem is that this list is sorted by switching nodes. But it doesn't switch around the contents of the list (i.e. two node numbers from the list). Instead it switched an index from the list and an actual node number pulled from the geometry. This presents two problems:. 1. If any of the receive nodes actually are at the end of the list, they will get switched away from the end of the list.; 2. If any node is switched twice, data is lost. That's because the sorting assumes that the elements being switched have not already been switched. This is how the three points went missing from the cube problem I previously referenced. If my write-up is too c",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431#issuecomment-358423989:1220,config,config,1220,https://su2code.github.io,https://github.com/su2code/SU2/issues/431#issuecomment-358423989,1,['config'],['config']
Modifiability,"on here in a few sentences.*; Reimplemented pressure-based solver from feature_Pressure_based into the development branch. . ## Related Work; branch: feature_Pressure_based. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary. Euler Solver: Incompressible cylinder case Pressure based (PB) vs Density Based (DB); ![incomp_cylinder](https://github.com/su2code/SU2/assets/22835014/c37cb127-88fe-4945-b712-c0ef450a3c43); ![incomp_cylinder_history](https://github.com/su2code/SU2/assets/22835014/3cf4c72c-445f-4086-87ea-162159d06cb7). Navier Stokes Solver: Incompressible Hydrofoil case Pressure-based (PB) vs Density Based (DB); ![NACA0012_hydrofoil](https://github.com/su2code/SU2/assets/22835014/cab1e73e-a60a-47af-aeef-ba50eb46e0eb); ![NACA0012_hydrofoil_history](https://github.com/su2code/SU2/assets/22835014/d71f09fd-73f9-44bb-861a-8f033408c6ba). Still TODOs; * Fixing RANS: Current CIncPBVariable inherits CVariable instead of CFlowVariable, if this is fixed RANS should work.; * Fixing MPI: The problem is currently unknown; * Fixing ND: non-dimensionalization is different in the two solvers. It should be harmonized.; * Multigrid: A PB multigrid is available but has not been tested.; * Small style changes.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2210:1749,inherit,inherits,1749,https://su2code.github.io,https://github.com/su2code/SU2/pull/2210,1,['inherit'],['inherits']
Modifiability,"on you'd like**; *A clear and concise description of what you want to happen.*. May I ask for the implementation of multizone discrete adjoint solve for turbomachinery? Or if there is any solution for it.; I found the work from Vitale's paper in 2020 includes such capability in SU2 at https://github.com/su2code/SU2/tree/ feature_turbomachinery, yet I fail to run the multizone case. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*. I would like to try FADO for alternatives and may concern about the solver of the discrete adjoint for multizone problems in turbomachinery will still be needed. . **Additional context**; *Add any other context or screenshots about the feature request here.*. Here is the function I have added for turbo coeffcient output in CFlowOutput.cpp:. void CFlowOutput::AddTurbomachineryCoefficients(const CConfig* config) {; ; if (!config->GetBoolTurbomachinery()) return;; /// BEGIN_GROUP: AERO_COEFF, DESCRIPTION: Sum of the aerodynamic coefficients and forces on all surfaces (markers) set with MARKER_MONITORING.; /// DESCRIPTION: Drag coefficient; AddHistoryOutput(""ENTROPY_GENERATION"", ""ENTROPY_GENERATION"", ScreenOutputFormat::SCIENTIFIC, ""TURBO_COEFF"", ""Entropy generation coefficient of the whole turbomachinery"", HistoryFieldType::COEFFICIENT);; /// DESCRIPTION: Lift coefficient; AddHistoryOutput(""TT_EFFICIENCY"", ""TT_EFFICIENCY"", ScreenOutputFormat::SCIENTIFIC, ""TURBO_COEFF"", ""Total efficiency coefficient "", HistoryFieldType::COEFFICIENT);; /// DESCRIPTION: Sideforce coefficient; AddHistoryOutput(""PRESSURE_LOSS"", ""PRESSURE_LOSS"", ScreenOutputFormat::SCIENTIFIC, ""TURBO_COEFF"", ""Pressure ratio between outlet and inlet"", HistoryFieldType::COEFFICIENT);; /// DESCRIPTION: Moment around the x-axis; AddHistoryOutput(""MASS_FLOW_RATIO"", ""MASS_FLOW_RATIO"", ScreenOutputFormat::SCIENTIFIC, ""TURBO_COEFF"", ""Mass flux ratio on the outlet"", HistoryFieldType::COEFFICIENT);. Add",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1720:1844,config,config,1844,https://su2code.github.io,https://github.com/su2code/SU2/issues/1720,2,['config'],['config']
Modifiability,"on. This is done using the three WRT_*_OVERWRITE flags mentioned above. However, the current implementation in develop only works correctly for PARAVIEW_MULTIBLOCK and for RESTART type output files. This is because in the case of PARAVIEW_MULTIBLOCK, the additional file output using the iteration number in the filename, is performed in the switch case block directly. . For all other output files, the switch case block only generates the correct filename with the iteration number appended. After the switch block, it is (wrongly) checked if (and only if) the WRT_RESTART_OVERWRITE flag is set to NO. If so, the additional file is written. Therefore, this logic only works correctly for RESTART files (and PARAVIEW_MULTIBLOCK files, because for that format, the file dump is independent of the file dump after the switch block. . The proposed fix here introduces a local boolean (doWriteIterFile) that acts as a switch for the additional file dump. It is set in the switch case block and afterwards it is checked if this variable is true or false. Based on this value, the file dump is executed or not. Furthermore, the fix introduces and corrects some comments to make the function easier to understand. ## Related Work; The flags are already available in the develop branch as config options but they don't work as expected. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutori",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2036:1707,variab,variable,1707,https://su2code.github.io,https://github.com/su2code/SU2/pull/2036,1,['variab'],['variable']
Modifiability,"one Driver` to screen. No more screen or file output (e.g. history), but `top` shows that the processes are not idling and the respective cores are at ~100% workload. . Call `mpirun -n 4 SU2_CFD configMaster.cfg` and tell me if it is the same for you. I tested on on our cluster and my private machine with the same result and it also happens every time. They seem to run forever ... I let both setups run for an hour (on 3 cores it takes a couple of min to complete) without any change in what i see = no output + cores at 100%. With any other number !=4 for cores the code runs. When was it introduced? Not very very recent ... already there when #773 was merged . **Now to the debugging efforts:**; Happens in debug and release mode. I changed quite a few options to see if sth interesting happens (no turb model, velocity inlet and pressure outlet, changed linear solvers and permutated values all over the place) but no change there. . As it is just 4 cores I went attached to all processes with ; ```; mpirun -n 4 xterm -e gdb --args SU2_CFD configMaster.cfg; ```; And the backtraces show that 2 processes are waiting at:; <details>; <summary>this place</summary>. ```; #0 0x00002aaac3d5ec40 in hmca_bcol_basesmuma_bcast_k_nomial_knownroot_progress; () from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf5ee590 in hmca_coll_ml_allgather (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf32f7e0 in mca_coll_hcoll_allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/par",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:1227,config,configMaster,1227,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['configMaster']
Modifiability,"onfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7964,config,config-lite-,7964,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config-lite-']
Modifiability,onfigure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of uns,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10313,config,configure,10313,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,6,['config'],['configure']
Modifiability,ons.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5605,adapt,adapt,5605,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['adapt'],['adapt']
Modifiability,ools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:16617,plugin,plugins,16617,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,ools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/Pointwise,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18344,plugin,plugins,18344,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"opt/xcat/sbin; PATH: /usr/lib64/qt-3.3/bin; PATH: /opt/pbs/default/bin; PATH: /opt/pbs/tools/bin; PATH: /usr/lpp/mmfs/bin/; PATH: /usr/local/bin; PATH: /bin; PATH: /usr/bin; PATH: /usr/local/sbin; PATH: /usr/sbin; PATH: /sbin; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: .; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: . ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2465: checking build system type; configure:2479: result: x86_64-unknown-linux-gnu; configure:2499: checking host system type; configure:2512: result: x86_64-unknown-linux-gnu; configure:2532: checking target system type; configure:2545: result: x86_64-unknown-linux-gnu; configure:2587: checking for a BSD-compatible install; configure:2655: result: /usr/bin/install -c; configure:2666: checking whether build environment is sane; configure:2721: result: yes; configure:2872: checking for a thread-safe mkdir -p; configure:2911: result: /bin/mkdir -p; configure:2918: checking for gawk; configure:2934: found /bin/gawk; configure:2945: result: gawk; configure:2956: checking whether make sets $(MAKE); configure:2978: result: yes; configure:3075: checking whether make supports nested variables; configure:3092: result: yes; configure:3117: checking for style of include used by make; configure:3145: result: GNU; configure:3196: result: >>> MPI support disabled by default <<<; configure:3269: checking for g++; configure:3285: found /usr/bin/g++; configure:3296: result: g++; configure:3323: checking for C++ compiler version; configure:3332: g++ --version >&5; g++ (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3343: $? = 0; configure:3332: g++ -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:1591,config,configure,1591,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,56,"['config', 'variab']","['configure', 'variables']"
Modifiability,or Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc); - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Another important updated to BC in parallel; - More implementation and clean up of the parallel CGNS reader.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - CGNS reader bug fix.; - Upd,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:5795,config,configure,5795,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['config'],['configure']
Modifiability,"or machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Loc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6618,config,config-lite-,6618,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config-lite-']
Modifiability,or sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been co,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:5987,config,config,5987,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"ore parallel partitioning.; Performing linear partitioning of the grid nodes.; 494258 interior elements before parallel partitioning.; Distributing elements across all ranks.; Calling the partitioning functions.; Getting into adjacency function.; Building the graph adjacency structure.; 5 surface markers.; 10222 boundary elements in index 0 (Marker = aircraft).; 9712 boundary elements in index 1 (Marker = farfield).; 3382 boundary elements in index 2 (Marker = inner_nearfield).; 19738 boundary elements in index 3 (Marker = symmetry).; 3382 boundary elements in index 4 (Marker = outer_nearfield).; Calling ParMETIS...; Traceback (most recent call last):; File ""/home/app/SU2/install/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 61, in main; options.compute ); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; RuntimeError:; Command = mpirun -n 12 /home/app/SU2/install/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '15'; [ubuntu:8553] *** An error occurred in MPI_Wait; [ubuntu:8553] *** on communicator MPI COMMUNICATOR 3 DUP FROM 0; [ubuntu:8553] *** MPI_ERR_TRUNCATE: message truncated; [ubuntu:8553] *** MPI_ERRORS_ARE_FATAL: your MPI job will now abort; --------------------------------------------------------------------------; mpirun has exited due to process rank 9 with PID 8554 on; node ubuntu exiting improperly. There are two reasons this could occur:. 1. this process did not call ""init"" before exiting, but others in; the job did. This can cause a job to hang indefinitely while it waits; for all processes to call ""init"". By rule, if one process calls ""init"",; then ALL processes must call ""init"" prior to termination. 2. this process called ""init"", but exited without calling ""finalize"".; By rule, all processes that call ""init"" MUST call ""finalize"" prior to; exiting or it will be considered an ""abnormal termination""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485283:1123,config,config,1123,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485283,1,['config'],['config']
Modifiability,ort.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:16695,plugin,plugins,16695,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"orted in increasing order of the point indices to reduce cache misses, this means small groups of contiguous edges will share the same ""iPoint"", coloring single edges destroys this. Furthermore coloring either requires edges to be re-sorted by color, or if the edge indices of each color are instead kept in arrays, performance will suffer due to increased indirection which confounds the hardware pre-fetcher.; This can be mitigated to some extent by coloring groups of edges, groups of edges of the same color can be processed simultaneously, but within each group edges need to be processed serially. However grouping will reduce how much parallelism can be exploited within each color.; - **Gather to scatter** will in general use more memory due to the intermediate variables and extra adjacency information needed. If the entire algorithm is transformed performance may suffer as some computations may have to be repeated.; However, some reductions are possible without intermediate variables, for example when assembling the system matrix for implicit schemes only the diagonal entries can result in race conditions, now it just so happens that each diagonal entry is equal to the negated corresponding column sum.; - **Atomics** are terrible for the performance of code that writes frequently to memory (i.e. bandwidth-bound code), they do not increase the memory footprint and so make sense for compute-bound code.; Bugs due to a missing atomic can be very hard to debug (but any race condition is). Coloring is what one sees most in the literature, and yet I lean towards gather-to-scatter. Fewer things can go wrong with it as it is easy to understand, one gets the maximum amount of parallelism. I will now take two familiar routines, computing gradients (Green-Gauss) and limiters, vectorize / parallelize them in different ways, and measure relative performance to illustrate some of these key points introduced here. There will be C++ snipets and there will be some x86 assembly too :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:6096,variab,variables,6096,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['variab'],['variables']
Modifiability,"osed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:1010,Variab,Variable,1010,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,4,"['Variab', 'variab']","['Variable', 'variables']"
Modifiability,"ost machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6119,config,config,6119,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config']
Modifiability,"oup at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial College London. |; -------------------------------------------------------------------------; | Copyright (C) 2012-2015 SU2, the open-source CFD code. |; | |; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /home/antodech/SU2-4.1.0; Install location: /gshare/work/hpascalj/CodeSU2-master; Version: 4.1.0; C++ Compiler: g++; C Compiler: gcc; Preprocessor flags: ; Compiler flags: -g -O2; Linker flags: ; MPI support: no; Metis support: no; Parmetis support: no; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: no; LAPACK support: no; Datatype support:; double yes; complex no; codi_reverse no; codi_forward no. External includes: ; External libs: . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: yes; Build SU2_DEF: yes; Build SU2_SOL: yes; Build SU2_GEO: yes. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=""/gshare/work/hpascalj/CodeSU2-master/bin""; export SU2_HOME=""/home/antodech/SU",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:18415,Config,Configuration,18415,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,1,['Config'],['Configuration']
Modifiability,"oupled discrete adjoint sensitivity analysis. These bottlenecks include a lack of flexibility, modularity, and robustness of the computational tools, as well as the potential startup development costs needed to implement and verify the MDAO features. The purpose of this work is to facilitate the coupling of SU2 with external structural codes (e.g. NASTRAN, TACS, Airbus structural suite Lagrange) for gradient-based aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:1110,flexible,flexible,1110,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['flexible'],['flexible']
Modifiability,"ovided.\n'); ; #--- Check existence of initial mesh, solution; ; required_files = [current_mesh,current_solution]; ; if not all (os.path.exists(fil) for fil in required_files):; err = '\n\n## ERROR : Can\'t find:\n'; for fil in required_files:; if not os.path.exists(fil):; err += fil + '\n'; raise RuntimeError , err; ; #--- Start looping; ; # Get mesh dimension; dim = su2amg.get_su2_dim(current_mesh); if ( dim != 2 and dim != 3 ):; raise RuntimeError , ""Wrong dimension number\n""; ; #--- AMG parameters; ; config_amg = dict(); ; config_amg['hgrad'] = float(config['ADAP_HGRAD']); config_amg['hmax'] = float(config['ADAP_HMAX']); config_amg['hmin'] = float(config['ADAP_HMIN']); config_amg['mesh_in'] = 'current.meshb'; config_amg['mesh_out'] = 'current.new.meshb'; config_amg['metric_in'] = ''; config_amg['sol_in'] = 'current_sensor.solb'; config_amg['itp_sol_in'] = 'current.solb'; config_amg['adap_source'] = ''; ; if 'ADAP_BACK' in config:; config_amg['adap_back'] = os.path.join(cwd,config['ADAP_BACK']); #os.symlink(os.path.join(cwd, config.ADAP_BACK), config.ADAP_BACK); else:; config_amg['adap_back'] = config['MESH_FILENAME']; ; print ""config_amg : "" + config_amg['adap_back']; back_name, back_extension = os.path.splitext(config_amg['adap_back']); ; if not os.path.exists(config_amg['adap_back']):; raise RuntimeError , ""\n\n##ERROR : Can't find back mesh: %s.\n\n"" % config_amg['adap_back']; ; if back_extension == "".su2"":; ; #pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); print ""skipping back mesh ...""; #import _amgio as amgio; #amgio.py_ConvertSU2toInria(config_amg['adap_back'], """", ""amg_back""); #config_amg['adap_back'] = ""amg_back.meshb""; ; if 'ADAP_SOURCE' in config:; config_amg['adap_source'] = os.path.join(cwd,config['ADAP_SOURCE']); ; global_iter = 0; ; sys.stdout.write(""\nStarting mesh adaptation process.\n""); ; for iSiz in range(len(mesh_sizes)):; ; mesh_size = int(mesh_sizes[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:7060,config,config,7060,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"ow match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" case shouldnt be counted for this I feel). **To Reproduce**; I post my setups later here. Cannot upload through vpn. I also use a simple bash script to do these comparisons for me. So the chance for manual errors is much lower. **Additional Notes**; A few things ahead, I run FGMRES+ILU for all configurations. No periodic boundaries at all. I went without turbulence for the cht cases to make it simpler. In the past and now we were able to see some good gradient validation against FD. So this issue is not super dramatic (although I am pretty annoyed by that) and I think I simply overlooked it in the past. In case there is sth unclear pls let me know, I'll will try to clarify asap. I still have some debugging to do but I appreciate all hints as I am currently more poking into the fog. . Thanks already , Tobi. **Desktop (please complete the following information):**; - OS: [RHELS 7.6 Maipo]; - C++ compiler and version: [g++ (GCC) 5.3.0]; - MPI implementation and version: [OpenMPI 3.1.6]; - SU2 Version: [#1394]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1395:6345,config,configurations,6345,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395,1,['config'],['configurations']
Modifiability,"ow with a few pragmas we get gcc to vectorize:; ```C++; template<size_t nVar>; void computeGradients_impl(size_t nEdge,; size_t nPoint,; size_t nDim,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& area,; const vector<double>& volume,; const Matrix& phi,; VectorOfMatrix& grad); {; grad.setZero();. for(size_t iEdge=0; iEdge<nEdge; ++iEdge); {; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. double phi_ave[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); phi_ave[iVar] = 0.5*(phi(iPoint,iVar)+phi(jPoint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; double flux = phi_ave[iVar]*area(iEdge,iDim);. grad(iPoint,iVar,iDim) += flux;; grad(jPoint,iVar,iDim) -= flux;; }; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); for(size_t iDim=0; iDim<nDim; ++iDim); #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); grad(iPoint,iVar,iDim) /= volume[iPoint];; }; ```; Well it is not just a few pragmas, we need to make the number of variables known at compile time (via a template parameter) and we need to transpose how the gradient is stored, i.e. instead of {xyz, xyz, xyz, xyz} we need {xxxx, yyyy, zzzz}. This code gets a speed-up of **2.2**. This code is generic but the template needs to be instantiated for every possible number of variables and we need a `switch` to call the right version at runtime, not very friendly.; Processing multiple edges at the same time is not worth the effort, for one we need `gather/scatter` on a very light routine, and on top of that we need to sort the edges such that we do not attempt to `scatter` to the same point when updating the gradient (a problem similar to the race condition described for SPMD). We can switch to a point-based loop and process multiple points in a SIMD way, that avoids the `scatter` problem but `gathers` will still be required. Here is what the scalar version of the point-based loop loo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:2817,variab,variables,2817,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['variab'],['variables']
Modifiability,"pData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if appl",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8050,config,config-lite-,8050,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config-lite-']
Modifiability,"parmetis.a externals/tecio/teciompisrc/libteciompi.a /usr/lib64/libpython3.10.so /usr/lib64/libz.a -lm -ldl -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags /usr/lib64/openmpi/lib/libmpi.so -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags /usr/lib64/openmpi/lib/libmpi_cxx.so -Wl,--start-group /opt/intel/oneapi/mkl/latest/lib/pkgconfig/../../lib/intel64/libmkl_intel_lp64.a /opt/intel/oneapi/mkl/latest/lib/pkgconfig/../../lib/intel64/libmkl_sequential.a /opt/intel/oneapi/mkl/latest/lib/pkgconfig/../../lib/intel64/libmkl_core.a -Wl,--end-group -lpthread -Wl,--end-group -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,--start-group -Wl,--end-group -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags; /usr/bin/ld: /usr/lib64/libz.a(deflate.o): warning: relocation against `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib64/libz.a(zutil.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status; ninja: build stopped: subcommand failed. ```. I do use the -fPIC option for the compilation process but even if I remove it from the configuration execution line I still get the same linking error. **Desktop (please complete the following information):**. - OS: Linux (Fedora 35); - C++ 11.2.1 20220127 (Red Hat 11.2.1-9) (GCC); - MPI implementation and version: OpenMPI v4.1.1; - SU2 Version: v7.3.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:16050,config,configuration,16050,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['config'],['configuration']
Modifiability,"pe_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line 79, in direct; SU2_CFD(konfig); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 88, in CFD; run_command( the_Command ); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 276, in run_command; raise exception , message; SU2.DivergenceFailure: Path = /home/fortin/Python/DESIGNS/DSN_116/DIRECT/,; Command = mpirun -n 1 /home/fortin/Python/bin/SU2_CFD config_CFD.cfg; ## SU2 process returned error '2'. mpirun noticed that the job aborted, but has no info as to the process; ## that caused that situation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/170:2291,config,config,2291,https://su2code.github.io,https://github.com/su2code/SU2/issues/170,3,['config'],['config']
Modifiability,"pecasts. Still tracking down a memory problem...; - Critical bug fix for vtxdist array.; - Partial fix; - More MPI improvements.; - Fixing a bug in SU2_DEF; - Updated BC_ActDisk_Boundary (MPI); - Merge remote-tracking branch 'upstream/develop' into develop; - changing solidboundary setting to be heatflux OR euler etc instead of AND, also working on doxygen documentation; - Dynamic allocation for some marker-related arrays.; - visualize part taken out to match upstream/dev; - Collection of improvements; - Release 3.2.7; - Fixing LOW_MEMORY_OUTPUT; - Updated LOW_MEMORY_OUTPUT option; - Updated configure.ac; - After autoconf; - Updated MPI; - Updated BC_Engine_Exhaust and BC_Engine_Bleed; - Small change; - Fixing subsonic engine intake option; - Small output change; - Added output_su2.cpp; - Updated Engine BC; - Working on Engine BCs; - Added Supersonic Outlet BC; - Minor change; - Merge remote-tracking branch 'upstream/develop' into develop; - adjoints, solid boundary, doxygen in config; - continued fixing; - re-added adjoint bc mods; - re-adding avg outlet pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:3391,config,config,3391,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['config'],['config']
Modifiability,pes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6173,config,config,6173,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"pi/../../../generated/medi/ampiFunctions.hpp: In function ‘int medi::AMPI_T_pvar_write(MPI_T_pvar_session, MPI_T_pvar_handle, const void*)’:; ../../../externals/medi/include/medi/ampi/../../../generated/medi/ampiFunctions.hpp:9732:49: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]; return MPI_T_pvar_write(session, handle, buf);; ^; In file included from ../../../Common/lib/../src/../include/./mpi_structure.hpp:42:0,; from ../../../Common/lib/../src/../include/config_structure.hpp:41,; from ../../../Common/lib/../src/config_structure.cpp:38:; /usr/include/mpich-x86_64/mpi.h:1460:5: error: initializing argument 3 of ‘int MPI_T_pvar_write(MPI_T_pvar_session, MPI_T_pvar_handle, void*)’ [-fpermissive]; int MPI_T_pvar_write(MPI_T_pvar_session session, MPI_T_pvar_handle handle, void *buf);; ^; make[2]: *** [../src/libSU2_AD_a-config_structure.o] Error 1; make[2]: Leaving directory `/home/bu/SU2/SU2_AD/Common/lib'; make[1]: *** [all-recursive] Error 1; make[1]: Leaving directory `/home/bu/SU2/SU2_AD'; make: *** [SU2_AD] Error 2; ```; Following is the config log:; ```; checking build system type... x86_64-unknown-linux-gnu; checking host system type... x86_64-unknown-linux-gnu; checking target system type... x86_64-unknown-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /usr/bin/mkdir -p; checking for gawk... gawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency st",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:2740,config,config,2740,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTool,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:19197,plugin,plugins,19197,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:19349,plugin,plugins,19349,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,proj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15153,plugin,plugins,15153,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"proj_j;; limiter(jPoint,iVar) = min(limiter(jPoint,iVar), lim_j);; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; for(size_t iVar=0; iVar<nVar; ++iVar); {; double lim = limiter(iPoint,iVar);; limiter(iPoint,iVar) = lim*(lim+2)/(lim*lim+lim+2);; }; }; }; ```; Something in the code above is a bit different from the implementation in SU2, namely:; ```C++; double lim_i = phiMax(iPoint,iVar);; if(proj_i <= 0.0) {; lim_i = phiMin(iPoint,iVar);; proj_i = min(proj_i, -eps);; }; ```; This is the bit of code that selects the right delta based on the sign of the projection and avoids division by zero, this less readable version does the same with one branch instead of three, simplifying ""if"" statements is essential for vectorization, so to make the comparison fair I used the same strategy in the scalar code. To make this post shorter I will show the SIMD and parallel version of the code right away. Trying to process multiple edges instead of multiple variables has all the problems I mentioned for the gradients, so again we use the trick of templating on the number of variables.; ```C++; template<size_t nVar>; void computeLimiters_impl(size_t nPoint,; size_t nDim,; const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; Matrix& phiMax,; Matrix& phiMin,; Matrix& limiter); {; // initialize; #pragma omp parallel for schedule(dynamic,TARGET_CHUNK_SIZE); for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; phiMax(iPoint,iVar) = phi(iPoint,iVar);; phiMin(iPoint,iVar) = phi(iPoint,iVar);; limiter(iPoint,iVar) = 2.0;; }; }. // find min and max neighbor; for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; #if SORT_BY_COLOR==1; size_t iEdge = k;; #else; size_t iEdge = ed",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:3389,variab,variables,3389,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,4,['variab'],['variables']
Modifiability,"ps://turbmodels.larc.nasa.gov/langtrymenter_4eqn.html) and to SA turbulence model (https://turbmodels.larc.nasa.gov/sa_gamma_retheta_3eqn.html). It also includes the transition induced by crossflow effects through the LM2015 implementation (https://turbmodels.larc.nasa.gov/langtrymenter_4eqn.html). The config options added are:. 1. KIND_TRANS_MODEL. Values are LM for LM2009 implementation and LM2015 for the respective model. The default is NONE.; 2. KIND_TRANS_CORRELATION. It allows the selection among correlation models found in the literature for F_length and ReTheta_c variables. Values are MALAN, SULUKSNA, KRAUSE, MEDIDA_BAEDER, MEDIDA, MENTER_LANGTRY. It defaults to the MENTER_LANGTRY If the underlying turbulence model is SST or to MALAN in case of SA.; 3. CONVERTSA2SST. If the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. I have never really used this feature, it is there just because it is another way of coupling the LM model with SA.; 4. HROUGHNESS. RMS value of roughness for LM2015 transition model. It defaults to 1e-6m. Output fields added:. 1. The values of intermittency and Retheta_tilde have been added to the SOLUTION field. Also, their respective residuals and linear solver residuals/iterations have been added.; 2. I have added the possibility of printing some variables related to transition. These are useful in the case of investigation of the transition phenomenon. The field associated is TRANS_VARS. I do not know if I can leave it as it is or if you want just the essential variables to be printed in the output. The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:1144,coupling,coupling,1144,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['coupling'],['coupling']
Modifiability,pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpVersions.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin_Instructions.txt (0) ; - I QuickStart/inv_NACA0012.cfg (0) ; - I README (0) ; - I SU2_CFD/include/SU2_CFD.hpp (0) ; - I SU2_CFD/include/definition_structure.hpp (0) ; - I SU2_CFD/include/fluid_model.hpp (0) ; - I SU2_CFD/include/fluid_model.inl (0) ; - I SU2_CFD/include/integration_structure.hpp (0) ; - I SU2_CFD/include/integration_structure.inl (0) ; - I SU2_CFD/include/iteration_structure.hpp (0) ; - I SU2_CFD/include/numerics_machine_learning.hpp (0) ; - I SU2_CFD/include/numerics_machine_learning.inl (0) ; - I SU2_CFD/include/numerics_machine_learning_turbulent.hpp (0) ; - I SU2_CFD/include/numerics_structure.hpp (0) ; - I SU2_CFD/include/numerics_structure.inl (0) ; - I SU2_CFD/in,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:20296,plugin,plugins,20296,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"py"", line 69, in main; options.step ); File ""../SU2_PY/shape_optimization.py"", line 107, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 102, in scipy_slsqp; epsilon = 1.0e-06 ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 236, in fmin_slsqp; mieq = len(f_ieqcons(x)); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of '",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:1478,config,config,1478,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['config'],['config']
Modifiability,"python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2956,Config,Configuration,2956,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['Config'],['Configuration']
Modifiability,"r -p; configure:2911: result: /bin/mkdir -p; configure:2918: checking for gawk; configure:2934: found /bin/gawk; configure:2945: result: gawk; configure:2956: checking whether make sets $(MAKE); configure:2978: result: yes; configure:3075: checking whether make supports nested variables; configure:3092: result: yes; configure:3117: checking for style of include used by make; configure:3145: result: GNU; configure:3196: result: >>> MPI support disabled by default <<<; configure:3269: checking for g++; configure:3285: found /usr/bin/g++; configure:3296: result: g++; configure:3323: checking for C++ compiler version; configure:3332: g++ --version >&5; g++ (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3343: $? = 0; configure:3332: g++ -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3343: $? = 0; configure:3332: g++ -V >&5; g++: '-V' option must have argument; configure:3343: $? = 1; configure:3332: g++ -qversion >&5; g++: unrecognized option '-qversion'; g++: no input files; configure:3343",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:3116,Config,Configured,3116,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,1,['Config'],['Configured']
Modifiability,"r integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:1202,variab,variables,1202,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['variab'],['variables']
Modifiability,"r""'; am__untar='$${TAR-tar} xf -'; bindir='${exec_prefix}/bin'; build='x86_64-unknown-linux-gnu'; build_alias=''; build_cpu='x86_64'; build_os='linux-gnu'; build_vendor='unknown'; datadir='${datarootdir}'; datarootdir='${prefix}/share'; docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'; dvidir='${docdir}'; exec_prefix='${prefix}'; host='x86_64-unknown-linux-gnu'; host_alias=''; host_cpu='x86_64'; host_os='linux-gnu'; host_vendor='unknown'; htmldir='${docdir}'; includedir='${prefix}/include'; infodir='${datarootdir}/info'; install_sh='${SHELL} /home/antodech/SU2-4.1.0/install-sh'; libdir='${exec_prefix}/lib'; libexecdir='${exec_prefix}/libexec'; localedir='${datarootdir}/locale'; localstatedir='${prefix}/var'; mandir='${datarootdir}/man'; mkdir_p='$(MKDIR_P)'; oldincludedir='/usr/include'; pdfdir='${docdir}'; prefix='/gshare/work/hpascalj/CodeSU2-master'; program_transform_name='s,x,x,'; psdir='${docdir}'; sbindir='${exec_prefix}/sbin'; sharedstatedir='${prefix}/com'; su2_externals_INCLUDES=''; su2_externals_LIBS=''; sysconfdir='${prefix}/etc'; target='x86_64-unknown-linux-gnu'; target_alias=''; target_cpu='x86_64'; target_os='linux-gnu'; target_vendor='unknown'. ## ----------- ##; ## confdefs.h. ##; ## ----------- ##. /* confdefs.h */; #define PACKAGE_NAME ""SU2""; #define PACKAGE_TARNAME ""SU2""; #define PACKAGE_VERSION ""4.1.0""; #define PACKAGE_STRING ""SU2 4.1.0""; #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; #define PACKAGE_URL ""https://github.com/su2code""; #define PACKAGE ""SU2""; #define VERSION ""4.1.0""; #define STDC_HEADERS 1; #define HAVE_SYS_TYPES_H 1; #define HAVE_SYS_STAT_H 1; #define HAVE_STDLIB_H 1; #define HAVE_STRING_H 1; #define HAVE_MEMORY_H 1; #define HAVE_STRINGS_H 1; #define HAVE_INTTYPES_H 1; #define HAVE_STDINT_H 1; #define HAVE_UNISTD_H 1; #define SIZEOF_SHORT_INT 2; #define SIZEOF_INT 4; #define SIZEOF_UNSIGNED_INT 4; #define SIZEOF_LONG_INT 8; #define SIZEOF_FLOAT 4; #define SIZEOF_DOUBLE 8; #define SIZEOF_VOID_P 8. configure: exit 0; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:27135,config,configure,27135,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability,rc/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D Mes,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:19273,plugin,plugins,19273,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"re:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4619: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4644: result: gcc -E; configure:4664: gcc -E conftest.c; configure:4664: $? = 0; configure:4678: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4678: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: res",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:8782,config,configure,8782,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,re:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10452,config,configure,10452,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,6,['config'],['configure']
Modifiability,"recently pushed to develop branch with doxygen group created and a few comments updated to be put into the group. This will add a link on the modules page. Since there are so many config options, everyone please feel free to update other variables in a similar way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/122#issuecomment-59972462:180,config,config,180,https://su2code.github.io,https://github.com/su2code/SU2/issues/122#issuecomment-59972462,2,"['config', 'variab']","['config', 'variables']"
Modifiability,"reported by @jtlau . > I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":; > ; > Configuring H5pubconf.h using configuration; > ; > externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; > ; > I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; > LMK if you need the full configure error",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1507:111,Config,Configuring,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/1507,3,"['Config', 'config']","['Configuring', 'configuration', 'configure']"
Modifiability,resence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic Un,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6538,config,config,6538,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"rmetis \; --enable-metis \; --enable-cgns \; --prefix=$HOME/share/SU2/6.1.0-AD \. # ...; **Running configure in folder SU2_BASE; =====================================================================; Command: ../configure --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include --enable-tecio=--enable-parmetis --enable-metis=--enable-cgns --prefix=/home/dic17007/share/SU2/6.1.0-AD --enable-mpi --enable-PY_WRAPPER. There was an error while running command '../configure --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include --enable-tecio=--enable-parmetis --enable-metis=--enable-cgns --prefix=/home/dic17007/share/SU2/6.1.0-AD --enable-mpi --enable-PY_WRAPPER '.; === Error Log ===; configure: error: bad value --enable-parmetis for --enable-tecio; **; ```. a work-around: add `=yes` at certain `enable-xxx` options.; ```; CPPFLAGS=""-qopenmp -O3"" \; LDFLAGS=""-parallel"" \; PYTHON_CONFIG=`which python3-config` \; CC=`which mpiicc` \; CXX=`which mpiicpc` \; ./preconfigure.py --enable-autodiff \; --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib \; --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include \; --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib \; --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include \; --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib \; --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include \; --enable-tecio=yes \; --enable-parmetis=yes \; --enable-metis=yes \; --enable-cgns=yes \; --enable-PY_WRAPPER \; --enable-mpi \; --prefix=$HOME/share/SU2/6.1.0-AD ; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/567:1819,config,configure,1819,https://su2code.github.io,https://github.com/su2code/SU2/issues/567,2,['config'],"['config', 'configure']"
Modifiability,"rn> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:6692,config,config,6692,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,"rom /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf5ee590 in hmca_coll_ml_allgather (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf32f7e0 in mca_coll_hcoll_allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:2499,config,config,2499,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,"rom CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files with new LoadRestart_Binary() routines for loading.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/374:1779,config,config,1779,https://su2code.github.io,https://github.com/su2code/SU2/pull/374,1,['config'],['config']
Modifiability,"rrent nomenclature, i.e., SA will refer to the SA-noft2 variant. #### Spalart-Allmaras negative; The model is the same as the ""baseline"" version when the turbulence variable $\tilde \nu$ is greater than or equal to zero. The modified vorticity is modified to prevent it from acquiring negative values. When $\tilde \nu$ is negative a slightly different integral equation is solved. The viscous fluxes are redefined as well. The boundary conditions are the same as for the standard S-A. #### Spalart-Allmaras nonzero ft2 term; This is the approach corresponds to the faithful baseline. The equations are the same as for the ""baseline"" version (SA), except we take the term $f_{t2}$ into account. #### Spalart-Allmaras mixing layer compressibility correction; This version is the same as for the ""baseline"" version except that an additional term is included on the right hand side of the equation. #### Spalart-Allmaras Edwards modification; This version is the same as for the ""baseline"" version, except that $f_{t2}$ is ignored, and two variables are redefined: the modified vorticity $\tilde{S}$ and $r$. Note that this correction is not compatible with the negative SA model. Since there is no literature on how to handle both corrections simultaneously, the community decision was to prompt an error when trying to use them. #### Spalart-Allmaras QCR-2000; The QCR correction modifies the turbulent stresses definition. ### Code structure; The approach that I decided to follow is:; The baseline/standalone SA class will have several templates parameters. Each of them will correspond to one of those variables that are subject to change in a SA correction/variation. Then, when creating the SA turbulence model, one just needs to replace each of these templates by the appropriate class. For those corrections/variations that just introduce an additional source term, I think it is better to implement them using decorators. Hence multiple corrections/variations introducing source terms can be s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1411:3615,variab,variables,3615,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411,2,['variab'],['variables']
Modifiability,"rror: ac_nonexistent.h: No such file or directory; configure:4678: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; c",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:9713,config,configure,9713,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability,"rs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link current files; ; config_cfd = copy.deepcopy(config); for opt in adap_options:; config_cfd.pop(opt, None); config_cfd.LOW_MEMORY_OUTPUT = ""NO""; ; config_cfd.WRT_BINARY_RESTART = ""NO""; #config_cfd.READ_BINARY_RESTART = ""NO""; ; current_mesh = ""Initial_mesh""; current_solution = ""Initial_solution""; ; if config['RESTART_SOL'] == 'NO':; ; stdout_hdl = open('ini.stdout','w') # new targets; stderr_hdl = open('ini.stderr','w'); ; success = False; val_out = [False]; ; sys.stdout.write('Running initial CFD solution.\n'); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_mesh = config['MESH_FILENAME']; current_solution = ""ini_restart_flow.dat""; ; config_cfd.CONV_FILENAME = ""ini_history""; config_cfd.RESTART_FLOW_FILENAME = current_solution; ; SU2_CFD(config_cfd); ; except:; sys.stdout = sav_stdout; sys.stderr = sav_stderr; raise; ; sys.stdout = sav_stdout; sys.stderr = sav_stderr; ; else:; required_options=['SOLUTION_FLOW_FILENAME']; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : RESTART_SOL is set to YES, but the solution is missing:\n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; current_mesh = config['MESH_FILENAME']; current_solution = config['SOLUTION_FLOW_FILENAME']; ; sys.stdout.write('Initial CFD solution is provided.\n'); ; #--- Check existence of initial mesh, solution; ; required_files = [current_mesh,current_solution]; ; if not all (os.path.exists(fil) for fil in required_files):; err = '\n\n## ERROR : Can\'t find:\n'; for fil in required_files:; if not os.path.exists(fil):;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:5328,config,config,5328,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"s and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link current files; ; config_cfd = copy.deepcopy(config); for opt in adap_options:; config_cfd.pop(opt, None); config_cfd.LOW_MEMORY_OUTPUT = ""NO""; ; config_cfd.WRT_BINARY_RESTART = ""NO""; #config_cfd.READ_BINARY_RESTART = ""NO""; ; current_mesh = ""Initial_mesh""; current_solution = ""Initial_solution""; ; if config['RESTART_SOL'] == 'NO':; ; stdout_hdl = open('ini.stdout','w') # new targets; stderr_hdl = open('ini.stderr','w'); ; success = False; val_out = [False]; ; sys.stdout.write('Running initial CFD solution.\n'); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_mesh = config['MESH_FILENAME']; current_solution = ""ini_restart_flow.dat""; ; config_cfd.CONV_FILENAME = ""ini_history""; config_cfd.RESTART_FLOW_FILENAME = current_solution; ; SU2_CFD(config_cfd); ; except:; sys.stdout = sav_stdout; sys.stderr = sav_stderr; raise; ; sys.stdout = sav_stdout; sys.stderr = sav_stderr; ; else:; required_options=['SOLUTION_FLOW_FILENAME']; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : RESTART_SOL is set to YES, but the solution is missing:\n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; curr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:4957,config,config,4957,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"s convergence; CONV_CAUCHY_EPS= 1E-8; %; % ------------------------- INPUT/OUTPUT INFORMATION --------------------------%; %; % Mesh input file; MESH_FILENAME= SnC_medium.su2; %; % Mesh input file format (SU2, CGNS); MESH_FORMAT= SU2; %; % Mesh output file; MESH_OUT_FILENAME= mesh_out.su2; %; % Restart flow input file; SOLUTION_FILENAME= solution_flow.dat; %; % Restart adjoint input file; SOLUTION_ADJ_FILENAME= solution_adj.dat; %; % Output file format (TECPLOT, TECPLOT_BINARY, PARAVIEW,; % FIELDVIEW, FIELDVIEW_BINARY); OUTPUT_FILES= RESTART, PARAVIEW_ASCII, SURFACE_PARAVIEW_ASCII; %; % Output file convergence history (w/o extension) ; CONV_FILENAME= history; %; % Output file with the forces breakdown; BREAKDOWN_FILENAME= forces_breakdown.dat; %; % Output file restart flow; RESTART_FILENAME= restart_flow.dat; %; % Output file restart adjoint; RESTART_ADJ_FILENAME= restart_adj.dat; %; % Output file flow (w/o extension) variables; VOLUME_FILENAME= flow; %; % Output file adjoint (w/o extension) variables; VOLUME_ADJ_FILENAME= adjoint; %; % Output Objective function; VALUE_OBJFUNC_FILENAME= of_eval.dat; %; % Output objective function gradient (using continuous adjoint); GRAD_OBJFUNC_FILENAME= of_grad.dat; %; % Output file surface flow coefficient (w/o extension); SURFACE_FILENAME= surface_flow; %; % Output file surface adjoint coefficient (w/o extension); SURFACE_ADJ_FILENAME= surface_adjoint; %; % Writing frequency for volume/surface output; OUTPUT_WRT_FREQ= 5000; % Writing frequency for history output; HISTORY_WRT_FREQ_INNER= 1; % Writing convergence history frequency; SCREEN_WRT_FREQ_INNER= 1; % Screen output fields. SCREEN_OUTPUT = (INNER_ITER, RMS_DENSITY, RMS_TKE, RMS_DISSIPATION, LIFT, DRAG, MOMENT_Y); % History output groups (use 'SU2_CFD -d <config_file>' to view list of available fields); HISTORY_OUTPUT= (ITER, RMS_RES, AERO_COEFF, WALL_TIME); %; % Volume output fields/groups (use 'SU2_CFD -d <config_file>' to view list of available fields); VOLUME_OUTPUT= (COO",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:9646,variab,variables,9646,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,2,['variab'],['variables']
Modifiability,"s correct, SU2 just want to use an updated version of the limiter for the turbulence variables. ` if (config->GetSpatialOrder() == SECOND_ORDER_LIMITER) SetSolution_Limiter(geometry, config);; `; and for the flow variables. ` if (limiter_flow) solver_container[FLOW_SOL]->SetPrimitive_Limiter(geometry, config);; `. Another story is if that is really worth it and we should use the values from the previous iteration. Remember that we compute the turbulence variables after updating the flow variables... so... from the theoretical point of view it makes sense to have an updated value for the limiter. However this is not 100% accurate because we are using old gradients to compute the new limiter. Anyway, the spirit is to have a limiter computed using the latest flow variables value and we should probably check that the gradients have been also updated before computing limiters again for the turbulence equation. What I don't really like is Upwind_Residual. ` bool limiter = (config->GetSpatialOrder() == SECOND_ORDER_LIMITER);; `. in this case we are using only the info about limiters or not in the turbulence model... so if, for example, we are using JST for the mean flow equations then the limiter for the flow equations have never been computed and. ```; if (limiter) {; FlowPrimVar_i[iVar] = V_i[iVar] + Limiter_i[iVar]*Project_Grad_i;; FlowPrimVar_j[iVar] = V_j[iVar] + Limiter_j[iVar]*Project_Grad_j;; }. ``` . Is incorrect because Limiter_i has never been computed (if we are lucky maybe we are using a zero value by default... but we need to check). In other words, I think this require a deeper look. @jschuele, could you please think on this and submit a new pull request (I'll close this one). If you don't have time, please let me know and we really appreciate if you could add this situation as an Issue. We'll try to fix this problem as soon as possible. By the way the initial confusion was that the SpatialOrder in . ` config->GetSpatialOrder(); `; is updated in ; ```; void ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/403#issuecomment-320490588:1063,config,config,1063,https://su2code.github.io,https://github.com/su2code/SU2/pull/403#issuecomment-320490588,1,['config'],['config']
Modifiability,"s nowadays, so we should always be improving the class design accordingly. I suppose this will just get more important with adding more physics, zones, and more complex time integration schemes. I would like to highlight that when the code was first released, we did not have ""zones"" at all (not until some early sliding mesh work after a couple of versions), and the CDriver and CIteration classes didn't even exist until we dreamed them up a couple of years ago. My point is that, with some proper planning, we have the creativity and the right team to develop the solution we need, and we shouldn't be afraid to make big changes when necessary. Moving quickly while leveraging the team's broad skillset is one of our biggest advantages in this project. As you all know, over the years, we continue to move toward a *_structure.cpp and *_physics.cpp mindset for how we do our abstractions/data encapsulations, with ""structure"" components reused and ""physics"" components being specialized to a certain set of governing equations. This has happened in many places, including recently with the CTransfer class, for instance, and it is likely to happen with the COutput class(es) before long. However, one area where there hasn't been much evolution is within the CIntegration classes. Apart from a couple of additions for structural problems and now the DG integration, it is largely the same as it was in the first release. Perhaps this is our opportunity to rethink and update these classes for future expansion, just as we've done for others over the years. We could rework them, move them up or down in the hierarchy, change where they're instantiated, change the inheritance, and so on. Even if they get a little more complicated (like usual), as long as they're properly abstracted, it isn't likely to bother the developers working in other areas of the code too much. In short, I think some effort spent on the CIntegration classes could help here, and they are due for some updates anyway. Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329078585:1749,inherit,inheritance,1749,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329078585,1,['inherit'],['inheritance']
Modifiability,"s show that 2 processes are waiting at:; <details>; <summary>this place</summary>. ```; #0 0x00002aaac3d5ec40 in hmca_bcol_basesmuma_bcast_k_nomial_knownroot_progress; () from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf5ee590 in hmca_coll_ml_allgather (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf32f7e0 in mca_coll_hcoll_allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:2305,config,config,2305,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,s.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugin,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18892,plugin,plugins,18892,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,s/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templat,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:19407,plugin,plugins,19407,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,s/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpVersions.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin_Instructions.txt (0) ; - I QuickStart/inv_NACA0012.cfg (0) ; - I README (0) ; - I SU2_CFD/include/SU2_CFD.hpp (0) ; - I SU2_CFD/include/definition_structure.hpp (0) ; - I SU2_CFD/include/fluid_model.hpp (0) ; - I SU2_CFD/include/fluid_model.inl (0) ; - I SU2_CFD/include/integration_structure.hpp (0) ; - I SU2_CFD/include/integration_structure.inl (0) ; - I SU2_CFD/include/iteration_structure.hpp (0) ; - I SU2_CFD/include/numerics_machine_learning.hpp (0) ; - I SU2_CFD/include/numerics_machine_learning.inl (0) ; - I SU2_CFD/in,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:20133,plugin,plugins,20133,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,s/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; conf,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10684,config,configure,10684,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability,"se ValueError(""Objective function must return a scalar""); ValueError: Objective function must return a scalar; ```. when using python3:. ```; Traceback (most recent call last):; File ""/usr/lib/python3.6/shutil.py"", line 544, in move; os.rename(src, real_dst); FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Airfoil_Design_NACA0012_AOA/DESIGNS/DSN_006/DIRECT/solution_flow.dat' -> '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/DESIGNS/DSN_006/solution_flow.dat'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 146, in _eval; vals = eval_func(*inputs); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 243, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/functions.py"", line 98, in function; aerodynamics( config, state ); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/functions.py"", line 273, in aerodynamics; push.append(info.FILES['TARGET_HEATFLUX']); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/io/redirect.py"", line 250, in __exit__; shutil.move(old_name,new_name); File ""/usr/lib/python3.6/shutil.py"", line 558, in move; copy_function(src, real_dst); File ""/usr/lib/python3.6/shutil.py"", line 257, in copy2; copyfile(src, dst, follow_symlinks=follow_symlinks); File ""/usr/lib/python3.6/shutil.py"", line 121, in copyfile; with open(dst, 'wb') as fdst:; FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/DESIGNS/DSN_006/solution_flow.dat'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/scipy/optimize/slsqp.py"", line 368, in _minimize_slsqp; fx = float(np.asarray(func(x))); File ""/usr/lib/python3/dist-packages/sci",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559:2169,config,config,2169,https://su2code.github.io,https://github.com/su2code/SU2/issues/559,1,['config'],['config']
Modifiability,seSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D M,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:14924,plugin,plugins,14924,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,seSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/api,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:17526,plugin,plugins,17526,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,seSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (7,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:17929,plugin,plugins,17929,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"sensor.solb'; config_amg['itp_sol_in'] = 'current.solb'; config_amg['adap_source'] = ''; ; if 'ADAP_BACK' in config:; config_amg['adap_back'] = os.path.join(cwd,config['ADAP_BACK']); #os.symlink(os.path.join(cwd, config.ADAP_BACK), config.ADAP_BACK); else:; config_amg['adap_back'] = config['MESH_FILENAME']; ; print ""config_amg : "" + config_amg['adap_back']; back_name, back_extension = os.path.splitext(config_amg['adap_back']); ; if not os.path.exists(config_amg['adap_back']):; raise RuntimeError , ""\n\n##ERROR : Can't find back mesh: %s.\n\n"" % config_amg['adap_back']; ; if back_extension == "".su2"":; ; #pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); print ""skipping back mesh ...""; #import _amgio as amgio; #amgio.py_ConvertSU2toInria(config_amg['adap_back'], """", ""amg_back""); #config_amg['adap_back'] = ""amg_back.meshb""; ; if 'ADAP_SOURCE' in config:; config_amg['adap_source'] = os.path.join(cwd,config['ADAP_SOURCE']); ; global_iter = 0; ; sys.stdout.write(""\nStarting mesh adaptation process.\n""); ; for iSiz in range(len(mesh_sizes)):; ; mesh_size = int(mesh_sizes[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d - Mesh size coefficient %.1lf\n"" % (iSiz+1, len(mesh_sizes), mesh_size)); ; for iSub in range(nSub):; ; config_amg['size'] = mesh_size; config_amg['amg_log'] = 'ite%d.amg.stdout' % (global_iter); ; # Prints; pad_cpt = (""(%d/%d)"" % (iSub+1, nSub)).ljust(9); pad_nul = """".ljust(9); ; if not amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : Can't find mesh.\n""; ; #--- Get sensor; ; sensor = su2amg.create_sensor(mesh, adap_sensor); su2amg.write_solution(""current_sen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:7901,adapt,adaptation,7901,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['adapt'],['adaptation']
Modifiability,"setZero();. for(size_t iEdge=0; iEdge<nEdge; ++iEdge); {; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. for(size_t iVar=0; iVar<nVar; ++iVar); {; double phi_ave = 0.5*(phi(iPoint,iVar)+phi(jPoint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); {; double flux = phi_ave*area(iEdge,iDim);. grad(iPoint,iVar,iDim) += flux;; grad(jPoint,iVar,iDim) -= flux;; }; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) /= volume[iPoint];; }; ```; This is more or less what SU2 does with minor differences on how the edges (`connectivity`) and area are stored, there is no vectorization nor easy way to make the loop parallel, this will be the reference for execution times. Suppose now that due to a perfect storm the number of variables is 4, here is how with a few pragmas we get gcc to vectorize:; ```C++; template<size_t nVar>; void computeGradients_impl(size_t nEdge,; size_t nPoint,; size_t nDim,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& area,; const vector<double>& volume,; const Matrix& phi,; VectorOfMatrix& grad); {; grad.setZero();. for(size_t iEdge=0; iEdge<nEdge; ++iEdge); {; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. double phi_ave[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); phi_ave[iVar] = 0.5*(phi(iPoint,iVar)+phi(jPoint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; double flux = phi_ave[iVar]*area(iEdge,iDim);. grad(iPoint,iVar,iDim) += flux;; grad(jPoint,iVar,iDim) -= flux;; }; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); for(size_t iDim=0; iDim<nDim; ++iDim); #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); grad(iPoint,iVar,iDim) /= volume[iPoint];; }; ```; Well it is not just a few pragmas, we need to make the number of variables known at compile time (via a t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:1719,variab,variables,1719,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['variab'],['variables']
Modifiability,"set_ffd_design_var.py script should output ALL FFD variables by default, rather than assume that some are fixed",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/117:51,variab,variables,51,https://su2code.github.io,https://github.com/su2code/SU2/issues/117,1,['variab'],['variables']
Modifiability,shape_optimization.py produced Keyerror: 'Config parameter not found: OPT_OBJECTIVE',MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1714:42,Config,Config,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/1714,1,['Config'],['Config']
Modifiability,"sign shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:1037,refactor,refactoring,1037,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['refactor'],['refactoring']
Modifiability,"sity/pressure/temperature at the nodes and also during 2nd-order reconstruction at cell faces.; - CV face states for 2nd-order MUSCL are now optionally reconstructed with a separate gradient method (unweighted least squares recommended), which is very important for robustness. Gradients for viscous terms and sources are still computed via GG or WLS for accuracy reasons.; - SA model was being clipped unnecessarily. This clipping has been removed. Here is my recommendation on how to run all of your 2nd-order cases going forward:. ### Euler / Laminar N-S; Turn off the limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:1969,adapt,adaptive,1969,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['adapt'],['adaptive']
Modifiability,size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the curren,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6262,config,config,6262,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"slower than in direct mode.; To address this issue I want to template the required classes such that we have the option (but not be obligated) to have CSysMatrices of passivedoubles in the discrete adjoint.; Moreover, I want to do some refactoring to make CSysSolve a proper class instead of an aggregate of functions. Currently we instantiate a CSysSolve whenever we need to solve a system, I think it would be beneficial to keep CSysSolve as a member of the classes that use it, so that for example, working memory used by Krylov methods is allocated only once. Note: I am aware that @talbring started some work on this (and more) in the *feature_template_linear_solver* branch, I tried to pick up were Tim left of but it was too much (a lot changes in one year). I really like the refactoring he was doing and will try to bring as much as possible into this, but I need to do it in smaller steps. Now this PR deals with some of the aforementioned refactoring, namely:; - CG, BCGSTAB, and GMRES have their working vectors and matrices as members of CSysSolve and allocate them only on the first call.; - CSysSolve is now a member of CSolver and CVolumetricMovement.; - BCGSTAB uses two fewer vectors than before and the ""p"" and ""v"" vectors are initialized to 0 instead of ""b"" (I think this was a small bug?).; - CSysSolve takes a ""mesh deformation"" flag at construction so that Solve can be called by CSolver and by CElasticityMovement, before the latter decided what Krylov method to call in place, kind of duplicating what is done by Solve. I did not do the same for CVolumetricMovement because there the differentiation is handled differently. This also allowed SetExternalSolve_Mesh to be merged with SetExternalSolve.; - Now when CSysSolve sets the external solve it passes itself (*this*) so that CSysSolve_b re-uses it in the reverse path instead of instantiating a CSysSolve every time.; - Part of CSysSolve_b::Solve_b was moved to CSysSolve::Solve_b to allow CSysSolve_b::Solve_g to be drop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650:1511,refactor,refactoring,1511,https://su2code.github.io,https://github.com/su2code/SU2/pull/650,1,['refactor'],['refactoring']
Modifiability,"some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859E-11; Optimization terminated successfully. (Exit mode 0); Current function value: 1.07807522; Iterations: 1; Function evaluations: 1; Gradient evalua",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:1212,config,config,1212,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,1,['config'],['config']
Modifiability,"specially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request nee",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:1981,extend,extends,1981,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['extend'],['extends']
Modifiability,"st machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2433,Config,Configuration,2433,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['Config'],['Configuration']
Modifiability,"still under testing, so I can't guarantee the result if the numerical scheme or the other options are changed. Which configuration file would you want?; > > By any chance, are you implementing or developing a transition model? Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer.; > ; > If you could send me the config files for the T3A, T3A- and NLF test cases it would be awesome!; > ; > I have implemented the same model as yours, the LM model, in parallel to you 'cause I needed it for some simulations. I also tried implementing the same version but related to the SA turbulence model, however it still is bothering me that I cannot seem to get good results on it.; > ; > If you want, I also tried the prolate spheroid test-case with good results. If you need I can give the configs and the meshes. The only thing about this test-case is that it is more related to the cross-flow transition, thus it needs to be implemented, which I think I'll do in these days.; > ; > I think that the k-w-gamma model is the way to go right after the implementation of the LM model since it has lots of equations in common. Do you think that you need another class for it or you will write on the same classes that you have already built (like the CTransLMSolver)?. The test case(T3A, T3A-, and NLF-0416) configuration files were uploaded to my git repository. Here is the [link](https://github.com/sun5k/SU2/tree/develop/TestCases/transition ). Suggestions for the prolate spheroid test-case is appreciated. However, my transition model is the LM-2009, and I have no plans for the 2015-LM model. Therefore, the cross-flow transition is left for future developers. I think the CTransGammaSolver, CTransGSolver, or the other name of classes will be added for the k-w-gamma transition model.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830:1270,config,configs,1270,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830,1,['config'],['configs']
Modifiability,su2code/SU2/pull/814/files#diff-2> (143); * A SU2_DEF/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-3> (13); * A SU2_DOT/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-4> (25); * A SU2_GEO/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-5> (9); * A SU2_MSH/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-6> (8); * A SU2_PY/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-8> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:5514,Config,ConfigureCodi,5514,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['Config'],['ConfigureCodi']
Modifiability,"sult: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.D.Palacios@boeing.com|; | Dr. Thomas D. Economon, economon@stanford.edu |; -------------------------------------------------------------------------; | SU2 Developers: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial College London. |; -------------------------------------------------------------------------; | Copyr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16627,config,config,16627,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,"sure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The Pressure-drop gradient is O(1e-5) where the others are O(1 - 1e4) so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massf",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:1427,variab,variables,1427,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['variab'],['variables']
Modifiability,"system: RHEL 6.8; intel 2017 compiler system suite. ```; $ CPPFLAGS=""-qopenmp -O3"" \; LDFLAGS=""-parallel"" \; PYTHON_CONFIG=`which python3-config` \; CC=`which mpiicc` \; CXX=`which mpiicpc` \; ./preconfigure.py --enable-autodiff \; --enable-mpi \; --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib \; --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include \; --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib \; --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include \; --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib \; --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include \; --enable-PY_WRAPPER \; --enable-tecio \; --enable-parmetis \; --enable-metis \; --enable-cgns \; --prefix=$HOME/share/SU2/6.1.0-AD \. # ...; **Running configure in folder SU2_BASE; =====================================================================; Command: ../configure --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include --enable-tecio=--enable-parmetis --enable-metis=--enable-cgns --prefix=/home/dic17007/share/SU2/6.1.0-AD --enable-mpi --enable-PY_WRAPPER. There was an error while running command '../configure --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include --enable-tecio=--enable-parmetis --enable-metis=--enable-cgns --prefix=/home/dic17007/share/SU2/6.1.0-AD --enable-mpi --enable-PY_WRAPPER '.; === Error Log ===; configure: error: bad value --enable-parmetis for --enable-tecio; **; ```. a work-around: add `=yes` at certain `enable-xxx` options.; ```; CPPFLAGS=""-qopenmp -O3"" \; LDFLAGS=""-paral",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/567:138,config,config,138,https://su2code.github.io,https://github.com/su2code/SU2/issues/567,3,['config'],"['config', 'configure']"
Modifiability,"t --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unrecognized option '-qversion'; gcc: no input files; configure:3999: $? = 1; configure:4003: checking whether we are using the GNU C compiler; configure:4022: gcc -c conftest.c >&5; configure:4022: $? = 0; configure:4031: result: yes; configure:4040: checking whether gcc accepts -g; configure:4060: gcc -c -g conftest.c >&5; configure:4060: $? = 0; configure:4101: result: yes; configure:4118: checking for gcc option to accept ISO C89; configure:4181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conftest.c -o conftest2.o >&5; configure:4380: $? = 0; configure:4386: gcc -c conftest.c -o conftest2.o >&5; configure:4390: $? = 0; configure:4401: cc -c conftest.c >&5; configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:7049,config,configure,7049,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,8,['config'],['configure']
Modifiability,"t changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5454,config,config,5454,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config']
Modifiability,"t coefficient with respect to the closure coefficients of the SA turbulence model. I've created new variable names in the CConfig class for the SA closure coefficients and have modified the code so that it reads the values for the coefficients from the config file, instead of the given hard coded values. (I would need to change the values later on). Now I'm trying to get the sensitivity of my objective function (in this case Cl as specified in the config file) with respect to these closure coefficients. . I've modified the CDiscAdjSolver class in solver_structure.hpp and solver_structure.inl by adding new variables for the sensitivities I want to calculate, defining inline Get functions which return the sensitivity values, and defining virtual functions onto the CSolver class. I've modified solver_adjoint_discrete.cpp by adding new variables which read in the values of the closure coefficients from the config class and passing these variables onto AD::RegisterInput() _(these are done in the RegisterVariables routine)_, and then passing them onto SU2_TYPE::GetDerivative() to calculate the derivatives _(this is done in the ExtractAdjoint_Variables routine)_. I store the derivative values as new variables called Total_Sens_SA, similar to what's already done for Total_Sens_AoA, for example. The problem I have is that when I pass the variables onto SU2_TYPE::GetDerivative(), the output is returned as 0. As far as I see, I've followed the same steps that are done to get the other sensitivity values such as Total_Sens_AoA or Total_Sens_Mach, but I don't understand why the derivative is being returned as 0. Is there something I'm missing here? I assumed as long as I register the variables whose derivatives I want onto AD::RegisterInput() the rest should be taken care of inside the AD and codi modules and the derivatives should be calculated correctly?. Curiously, in output_structure.cpp where values such as Total_Sens_AoA are called again to be printed to screen, these valu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679:956,variab,variables,956,https://su2code.github.io,https://github.com/su2code/SU2/issues/679,3,"['config', 'variab']","['config', 'variables']"
Modifiability,"t convergence criteria at iteration number; CONV_STARTITER= 10; %; % Number of elements to apply the criteria; CONV_CAUCHY_ELEMS= 100; %; % Epsilon to control the series convergence; CONV_CAUCHY_EPS= 1E-10; %. % ------------------------- INPUT/OUTPUT INFORMATION --------------------------%; %; % Mesh input file; MESH_FILENAME= NLU_Baseline.su2; %; % Mesh input file format (CGNS, NETCDF_ASCII); MESH_FORMAT= SU2; %; % Mesh output file; MESH_OUT_FILENAME= mesh_caradonna_tung_periodic.su2; %; % Restart flow input file; SOLUTION_FILENAME= solution_flow.dat; %; % Restart adjoint input file; SOLUTION_ADJ_FILENAME= solution_adj.dat; %; TABULAR_FORMAT= CSV; %; % Output file convergence history (w/o extension) ; CONV_FILENAME= history; %; % Output file restart flow; RESTART_FILENAME= restart_flow.dat; %; % Output file restart adjoint; RESTART_ADJ_FILENAME= restart_adj.dat; %; % Output file flow (w/o extension) variables; VOLUME_FILENAME= flow; %; % Output file adjoint (w/o extension) variables; VOLUME_ADJ_FILENAME= adjoint; %; % Output Objective function gradient (using continuous adjoint); GRAD_OBJFUNC_FILENAME= of_grad.dat; %; % Output file surface flow coefficient (w/o extension); SURFACE_FILENAME= surface_flow; %; % Output file surface adjoint coefficient (w/o extension); SURFACE_ADJ_FILENAME= surface_adjoint; %; % Writing solution file frequency; OUTPUT_WRT_FREQ= 10; %. SCREEN_OUTPUT= (INNER_ITER, WALL_TIME, RMS_RES, FORCE_X, MOMENT_X); HISTORY_OUTPUT=(INNER_ITER, WALL_TIME, RMS_RES, AERO_COEFF)`. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]; 3 OS were used:; Ubuntu 22.04 on AWS; WSL with ubuntu 20.04 LST; Windows. Latest MPICH package was used on the ubuntu versions; (basically the one that come with a 'sudo apt-get install mpich'); Latest mpiexec version is used on windows. The code wa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:9290,variab,variables,9290,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,2,['variab'],['variables']
Modifiability,"t entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version: GCC 8.22; - MPI implementation and version: Intel (Open MPI) 3.0.0; - SU2 Version: v7.0.8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143:1758,adapt,adaptation,1758,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143,1,['adapt'],['adaptation']
Modifiability,"t have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unrecognized option '-qversion'; gcc: no input files; configure:3999: $? = 1; configure:4003: checking whether we are using the GNU C compiler; configure:4022: gcc -c conftest.c >&5; configure:4022: $? = 0; configure:4031: result: yes; configure:4040: checking whether gcc accepts -g; configure:4060: gcc -c -g conftest.c >&5; configure:4060: $? = 0; configure:4101: result: yes; configure:4118: checking for gcc option to accept ISO C89; configure:4181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conftest.c -o conftest2.o >&5; configure:4380: $? = 0; configure:4386: gcc -c conftest.c -o conftest2.o >&5; configure:4390: $? = 0; configure:4401: cc -c conftest.c >&5; configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4619: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4644: result: gcc -E; configure:4664: gcc -E ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:7617,config,configure,7617,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"t means pyamg was not correctly installed; otherwise it is in fact installed. In the latter case, you can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1258,variab,variables,1258,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['variab'],['variables']
Modifiability,"t you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:1626,config,configuring-code-scanning,1626,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['config'],['configuring-code-scanning']
Modifiability,"t(1). def amg ( config , kind='' ):; ; sys.stdout.write(""SU2-AMG Anisotropic Mesh Adaptation\n""); ; #--- TODO: Check pyamg version compatibility; ; #--- Check config options related to mesh adaptation; ; adap_options = ['ADAP_SIZES', 'ADAP_SUBITE', 'ADAP_SENSOR', \; 'ADAP_BACK', 'ADAP_HMAX', 'ADAP_HMIN', 'ADAP_HGRAD', 'ADAP_RESIDUAL_REDUCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:3474,config,config,3474,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"tain grid levels have a ratio below 2.5 hence are removed. This does not happen when running in serial.; In CMultiGridIntegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongate",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362:1926,config,config,1926,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362,1,['config'],['config']
Modifiability,te.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/s,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18965,plugin,plugins,18965,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"terms of abstraction, particularly regarding the input/output. At this time, I have removed some inconsistencies in the definition of the Zone structure, by incorporating the concept of “Instances” to the code. Until now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wal",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528:1137,config,config,1137,https://su2code.github.io,https://github.com/su2code/SU2/pull/528,1,['config'],['config']
Modifiability,"testcase suite. > * Should this just run ""out of the box"" with a working installation of OpenMP in any machine, or is there anything else _fancy_ needed?. I would leave it to the community to decide what the defaults should be, probably for a lot of new users that don't run on clusters just calling SU2_CFD and not having to worry about mpi would be nice (a lot of the issues on CFD online are mpi related). > * Is the previous behaviour exactly kept, or are there any modifications in the basic, non OpenMP version of code? (Not that I mind, just curious). Other than the algorithmic changes (but mathematically equivalent) introduced to limiters and gradients in #834, yes. > What's the advantage of having one numerics term per thread?. It is a requirement, we need to write data into numerics before using them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could revisit the ownership relations of the numerics classes, i.e. allocate them as members of their respective solvers, which if we do, we can think of having a purpose built container that automates the per-thread creation and access. > Why are they redefined each time inside the loop?; > Is this for efficiency reasons?. Referring to variables being declared inside loops. One stylist reason is that declaring everything at the top of a function is the C way of doing things, the C++ people whose books/blogs I've read and talks I've watche",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:1558,extend,extended,1558,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,2,['extend'],['extended']
Modifiability,"the AD build fails with OpenMPI 4.0.0. I don't really know where the source of error is, but I suspect it's with CGNS and how it's handled by OpenMPI?. The error is as follows:. In file included from ../../../Common/lib/../src/../include/./mpi_structure.hpp:42:0,; from ../../../Common/lib/../src/../include/geometry_structure.hpp:41,; from ../../../Common/lib/../src/fem_cgns_elements.cpp:34:; /usr/local/include/mpi.h:2633:20: note: declared here; OMPI_DECLSPEC int MPI_Keyval_free(int *keyval); ^~~~~~~~~~~~~~~; Makefile:1504: recipe for target '../src/libSU2_AD_a-fem_cgns_elements.o' failed; make[2]: *** [../src/libSU2_AD_a-fem_cgns_elements.o] Error 1; make[2]: Leaving directory '/home/akb1r19/CFD_Solvers/SU2/SU2-6.2.0/SU2_AD/Common/lib'; Makefile:441: recipe for target 'install-recursive' failed; make[1]: *** [install-recursive] Error 1; make[1]: Leaving directory '/home/akb1r19/CFD_Solvers/SU2/SU2-6.2.0/SU2_AD'; Makefile:13: recipe for target 'install-SU2_AD' failed; make: *** [install-SU2_AD] Error 2. My pregonfigure command is:. `export CXXFLAGS=""-O3"" && sudo ./preconfigure.py --enable-autodiff --prefix=/home/akb1r19/CFD_Solvers/SU2/Instldir --enable-mpi --with-cc=/usr/local/bin/mpicc --with-cxx=/usr/local/bin/mpicxx &>preconfig.out`. Attaching the whole make output, and the preconfigure log files here too.; I have successfully been able to compile with AD on a cluster with Intel MPI (2017.4.239). I run the exact same commands and it compiles without issue. I haven't tried mpich yet to see if the error persists. Any thoughts?. Thanks,; Amir. [config.log.ad.txt](https://github.com/su2code/SU2/files/2926538/config.log.ad.txt); [config.log.base.txt](https://github.com/su2code/SU2/files/2926539/config.log.base.txt); [conf_SU2_AD.log.txt](https://github.com/su2code/SU2/files/2926540/conf_SU2_AD.log.txt); [conf_SU2_BASE.log.txt](https://github.com/su2code/SU2/files/2926541/conf_SU2_BASE.log.txt); [make.out.txt](https://github.com/su2code/SU2/files/2926542/make.out.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/659:1595,config,config,1595,https://su2code.github.io,https://github.com/su2code/SU2/issues/659,4,['config'],['config']
Modifiability,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2156,adapt,adaptation,2156,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['adapt'],['adaptation']
Modifiability,"the primitive-container-indexing that took place in #1392 because when I revert to commit fe6ba90aab388ed6d9ff77fa3cb03434fe86654c right before that merge took place everything works fine. Maybe I also did a mistake when porting the CSpeciesSolver to that new structure. I am trying to do a verification of the inlet files by using the written example_inlet_file as input which should result in the very same history as the non-inlet version. I see a difference in Residuals which is sometimes not consistent (I had cases where I cycled through 3 different outcomes for the inlet version in a random order...wtf). It has nothing to do with the wrong values being read in and made available to the Solver, they are perfect. I now did 2 full-time days of debugging and I a don't get it. I have traced the problem down quite a bit and know which code lines I have to comment to make the problem go away ... but it doesnt make sense: I am not allowed (I can, but then I have non-equal diffs) to write anything (but zero!) in certain blocks of the local variable `profileData` in `CMarkerProfileReader`. That is only the case for more than 1 species equation! I also overwrote the `Inlet_Species_Var` using the `SetUnformInlet` which just takes the cfg-Marker values. . It seems to be some memory-problem and valgrind trys to speak to me but can only point me to the constructor of the Avg_GradSpecies for the volume in CDriver and tells me about a `Conditional jump or move depends on uninitialised value(s)` in `CSysSolve.cpp:131`; ```c++; if ((nrm <= 0.0) || (nrm != nrm)) {; ```; and is supposed to originate from `CDriver.cpp:1366` via a `Uninitialised value was created by a heap allocation`; ```c++; numerics[iMGlevel][SPECIES_SOL][visc_term] = new CAvgGrad_Species<Indices>(nDim, nVar_Species, true, config);; ```; ```c++; 338 --139924-- REDIR: 0x53dc330 (libstdc++.so.6:operator new[](unsigned long)) redirected to 0x4c2a801 (operator new[](unsigned long)); 339 --139924-- REDIR: 0x53da3e0 (libstd",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:1159,variab,variable,1159,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603,1,['variab'],['variable']
Modifiability,"ther |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. ------------------------ Physical Case Definition -----------------------; Input mesh file name: mesh_NACA0012_inv.su2. -------------------------- Output Information ---------------------------; The output file format is Tecplot ASCII (.dat).; Flow variables file name: flow. ------------------- Config File Boundary Information --------------------; +-----------------------------------------+; | Marker Type| Marker Name|; +-----------------------------------------+; | Euler wall| airfoil|; +-----------------------------------------+; | Far-field| farfield|; +-----------------------------------------+. ---------------------- Read Grid File Information -----------------------; Two dimensional problem.; 5233 points before parallel partitioning.; Performing linear partitioning of the grid nodes.; 10216 interior elements before parallel partitioning.; Executing the partitioning functions.; Building the graph adjacency structure.; Distributing elements across all ranks.; 2 surface markers.; +------------------------------------+; | Index| Marker| Elements|; +------------------------------------+; | 0| airfoil| 200|; | 1| farfield| 50|; +------------------------------------+; Calling ParMETIS... graph partitioning complete (1114 edge cuts).; Distributing ParMETIS coloring.; Rebalancing vertices.; Rebalancing volume element connectivity.; Rebalancing markers and surface elements.; 6403 vertices including ghost points. ; 11338 ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-514630913:2743,Config,Config,2743,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-514630913,1,['Config'],['Config']
Modifiability,"ther |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. ------------------------ Physical Case Definition -----------------------; Input mesh file name: mesh_NACA0012_inv.su2. -------------------------- Output Information ---------------------------; The output file format is Tecplot ASCII (.dat).; Flow variables file name: flow. ------------------- Config File Boundary Information --------------------; +-----------------------------------------+; | Marker Type| Marker Name|; +-----------------------------------------+; | Euler wall| airfoil|; +-----------------------------------------+; | Far-field| farfield|; +-----------------------------------------+. ---------------------- Read Grid File Information -----------------------; Two dimensional problem.; 5233 points.; 2 surface markers.; +------------------------------------+; | Index| Marker| Elements|; +------------------------------------+; | 0| airfoil| 200|; | 1| farfield| 50|; +------------------------------------+; 10216 triangles.; Identify vertices.; Storing a mapping from global to local point index. ------------------------- Solution Postprocessing -----------------------. Error in ""void CBaselineSolver::SetOutputVariables(CGeometry*, CConfig*)"": ; -------------------------------------------------------------------------; Unable to open SU2 restart file solution_flow.dat; ------------------------------ Error Exit -------------------------------. -------------------------------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-514653545:2740,Config,Config,2740,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-514653545,1,['Config'],['Config']
Modifiability,"thing to do. So let’s indeed do something like what Tom suggests (in the spirit of MARKER_MONITORING) so that one can control which markers get wall functions applied. If a list of markers is not specified in the config file, the default behavior should be that all no-slip walls get wall function BCs. If a list of markers is specified, then those and only those markers listed get wall function Bfs (with the others getting integration to the wall treatment). Now, what you point out in the second half of your message is the ultimate in flexibility: not only specifying wall functions in a subset of the no-slip wall markers, but also allowing for different kinds of wall functions to be used in those markers. I imagine that this would be a seldom used capability…but someone out there might have the need. I guess it does not seem to me that the coding of the most flexible logic is that much more complicated, so we may as well do that. If you guys think it is too complicated, the advertised options in the config file can allow some simpler behavior. My two cents,. Juan. On Sep 5, 2017, at 9:58 PM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Juan,. I think that having the flexibility to apply wall functions on only a subset of the viscous wall boundaries would be useful. E.g., if you are interested in a wing, you can apply integration to the wall there, but apply wall functions on the fuselage. My preference would be to have a dedicated BC type for that, i.e. Tom's second suggestion. Apart from this, we can have the different wall model types as a single input parameter, i.e. you apply the same wall model type for all viscous boundaries. Or would you like to have the flexibility to specify this as well per individual marker?. Edwin. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/399#issuecomment-327374728>, or mute the thread<https://github.co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327377108:1344,config,config,1344,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327377108,2,['config'],['config']
Modifiability,"this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the program (compare 1st number 6 and 2nd number number 10).; The first waits at an `Allgather` and the 2nd at an `Allreduce`. . I am somewhat certain that the problem is this code bit which the second (the furhter back) backtrace points to. CSysVector.hpp -> `ScalarType dot` function l. 317; ```c++; /*--- Update shared variable with ""our"" partial sum. ---*/; atomicAdd",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:7653,config,config,7653,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,"thout low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping factor for the residual restriction: 0.75.; Damping factor for the correction prolongation: 0.75.; No CFL adaptation.; +-------------------------------------------+; | MG Level| Presmooth|PostSmooth|CorrectSmo|; +-------------------------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; Courant-Friedrichs-Lewy number: 10; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 99999.; Reduce the density residual 10 orders of magnitude.; The minimum bound for the density residual is 10^(-12).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 10000 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot ASCII (.dat).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow varia",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:3362,adapt,adaptation,3362,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['adapt'],['adaptation']
Modifiability,"tial mesh, solution; ; required_files = [current_mesh,current_solution]; ; if not all (os.path.exists(fil) for fil in required_files):; err = '\n\n## ERROR : Can\'t find:\n'; for fil in required_files:; if not os.path.exists(fil):; err += fil + '\n'; raise RuntimeError , err; ; #--- Start looping; ; # Get mesh dimension; dim = su2amg.get_su2_dim(current_mesh); if ( dim != 2 and dim != 3 ):; raise RuntimeError , ""Wrong dimension number\n""; ; #--- AMG parameters; ; config_amg = dict(); ; config_amg['hgrad'] = float(config['ADAP_HGRAD']); config_amg['hmax'] = float(config['ADAP_HMAX']); config_amg['hmin'] = float(config['ADAP_HMIN']); config_amg['mesh_in'] = 'current.meshb'; config_amg['mesh_out'] = 'current.new.meshb'; config_amg['metric_in'] = ''; config_amg['sol_in'] = 'current_sensor.solb'; config_amg['itp_sol_in'] = 'current.solb'; config_amg['adap_source'] = ''; ; if 'ADAP_BACK' in config:; config_amg['adap_back'] = os.path.join(cwd,config['ADAP_BACK']); #os.symlink(os.path.join(cwd, config.ADAP_BACK), config.ADAP_BACK); else:; config_amg['adap_back'] = config['MESH_FILENAME']; ; print ""config_amg : "" + config_amg['adap_back']; back_name, back_extension = os.path.splitext(config_amg['adap_back']); ; if not os.path.exists(config_amg['adap_back']):; raise RuntimeError , ""\n\n##ERROR : Can't find back mesh: %s.\n\n"" % config_amg['adap_back']; ; if back_extension == "".su2"":; ; #pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); print ""skipping back mesh ...""; #import _amgio as amgio; #amgio.py_ConvertSU2toInria(config_amg['adap_back'], """", ""amg_back""); #config_amg['adap_back'] = ""amg_back.meshb""; ; if 'ADAP_SOURCE' in config:; config_amg['adap_source'] = os.path.join(cwd,config['ADAP_SOURCE']); ; global_iter = 0; ; sys.stdout.write(""\nStarting mesh adaptation process.\n""); ; for iSiz in range(len(mesh_sizes)):; ; mesh_size = int(mesh_sizes[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d - Mesh size coefficient %.1lf\n"" % (iSiz+1,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:7112,config,config,7112,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"tion related to the new fsi interface in python, namely:; * A different treatment for imposed motions. This is actually a first step towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my cont",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148:1109,coupling,coupling,1109,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148,1,['coupling'],['coupling']
Modifiability,"tion=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the program (compare 1st number 6 and 2nd number number 10).; The first waits at an `Allgather` and the 2nd at an `Allreduce`. . I am somewhat certain that the problem is this code bit which the second (the furhter back) backtrace points to. CSysVector.hpp -> `ScalarType dot` function l. 317; ```c++; /*--- Update shared variable with ""our"" partial sum. ---*/; atomicAdd(sum, dotRes);; SU2_MPI::Barrier(SU2_MPI::GetComm()); //added by tobi; #ifdef HAVE_MPI; /*--- Reduce across all mpi ranks, only master thread communicates.; * The nElm condition is to allow vectors to also be used locally. ---*/; std::cout << ""Rank: "" << SU2_MPI::GetRank() << "", nElm != nElmDomain="" << (nElm != nElmDomain) << std::endl; //added by tobi; if (nElm != nElmDomain) {; SU2_OMP_BARRIER; SU2_OMP_MASTER {; sum = dotRes;; const auto mpi_type = (sizeof(ScalarType) < sizeof(double)) ? MPI_FLOAT : MPI_DOUBLE;; SelectMPIWrapper<ScalarType>::W::Allreduce(&sum, &dotRes, 1, mpi_type, MPI_SUM, SU2_MPI::GetComm());; }; }; #endif; /*--- Make view of result consistent across threads. ---*/; SU2_OMP_BARRIER. return dotRes;; }; ```; The Problem is the `Allreduce` in the `if (nElm != nElmDomain) {` which leads to a freeze if not all ranks get the same result for that boolean.; The eagle eye prob already spotted the cout-Debugging in there. I a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:8578,variab,variable,8578,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['variab'],['variable']
Modifiability,"tps://github.com/su2code/SU2/files/4793965/case728.txt). I am running a shape optimization of a single blade row stator with an FFD box of degree (5 , 11, 2). The max deformation is of the order 1E-5. The change in mesh visually is very minimal but after SU2 deforms the mesh it generates negative volumes and a negative Jacobian. It is also happening if I use only one DV in the optimization. As a result my DSN_002 DIRECT results are all diverging. In the image, the red box is the deformed box and the green one is the undeformed box. You can also see the blade. The number of nodes are just shy of 1 million in the whole volume mesh. ![untitled](https://user-images.githubusercontent.com/46273732/84716054-2747b500-af40-11ea-9877-3f229a8957ce.png). SU2 mesh stats for DSN001:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 52.4241| 89.9962|; | CV Face Area Aspect Ratio| 1.02662| 2123.48|; | CV Sub-Volume Ratio| 1.00007| 3.63253|; +--------------------------------------------------------------+. SU2_mesh stats for DSN002:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| -42.6863| 89.9963|; | CV Face Area Aspect Ratio| 1.02903| 31868.8|; | CV Sub-Volume Ratio| 1.00034| 40627.1|; +--------------------------------------------------------------+. From Tecplot I can calculate that the cell volumes and the Jacobian is also negative for DSN002 for some cells. I believe if I reduce my OPT_RELAX_FACTOR I can have deformations of the O(-6) but isn't this already too small. Are there any parameters I can change in the config file to avoid this issue?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1026:1984,config,config,1984,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026,1,['config'],['config']
Modifiability,trXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plug,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15308,plugin,plugins,15308,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"tructions. . From another thread, it was suggested to go into SU2\externals\AMGIO\su2io and try to manually build the _amgio; When I run the command 'python setup.py build_ext -c mingw32' I get the following output. . `running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; C:\Softwares\swigwin-4.0.2\swig.exe -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; creating build; creating build\temp.win-amd64-3.8; creating build\temp.win-amd64-3.8\Release; creating build\temp.win-amd64-3.8\Release\sources; creating build\temp.win-amd64-3.8\Release\sources\python3.7; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c: In function 'py_WriteMeshAndSol':; ./sources/Python3.7/amgio_py.c:628:28: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:628:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:624:28: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:624:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:614:26: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-ove",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:1083,variab,variable,1083,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['variab'],['variable']
Modifiability,"try****, CConfig**, unsigned long, unsigned short) (output_structure.cpp:12608); ==29692== by 0x905C0C: CMultizoneDriver::Output(unsigned long) (driver_direct_multizone.cpp:595); ==29692== by 0x905E23: CMultizoneDriver::StartSolver() (driver_direct_multizone.cpp:188); ==29692== by 0x364A19: main (SU2_CFD.cpp:174); ==29692== Block was alloc'd at; ==29692== at 0x483850F: operator new[](unsigned long) (vg_replace_malloc.c:423); ==29692== by 0x99F3EA: COutput::SortVolumetricConnectivity(CConfig*, CGeometry*, unsigned short, bool) (output_structure.cpp:15318); ==29692== by 0x9A14EC: COutput::SortConnectivity(CConfig*, CGeometry*, unsigned short, bool) (output_structure.cpp:14736); ==29692== by 0x9CCD39: COutput::SetResult_Files_Parallel(CSolver*****, CGeometry****, CConfig**, unsigned long, unsigned short) (output_structure.cpp:12485); ==29692== by 0x905C0C: CMultizoneDriver::Output(unsigned long) (driver_direct_multizone.cpp:595); ==29692== by 0x905E23: CMultizoneDriver::StartSolver() (driver_direct_multizone.cpp:188); ==29692== by 0x364A19: main (SU2_CFD.cpp:174); ```. If I run it in parallel and request output from PARAVIEW (so volume files are not written out) the error disappears, but it happens again when PARAVIEW_BINARY output is requested, so it's definitely on the volume writing structure. . There have been some changes to output_structure.cpp since the last released version 6.2.0, I wonder if those are the reason. When running it with the released version the seg fault is not there. I haven't tried yet with the new output currently being finalized by @talbring. . **To Reproduce**; To reproduce, run the case below using ```SU2_CFD config.cfg```; [square_beam.zip](https://github.com/su2code/SU2/files/3289851/square_beam.zip). **Desktop (please complete the following information):**; - OS: Antergos Linux x86-64 kernel 5.0.5-arch1-1-ARCH; - C++ compiler and version: GCC 8.2.1; - MPI implementation and version: OpenMPI 4.0.1; - SU2 Version: current develop vs v6.2.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/713:3169,config,config,3169,https://su2code.github.io,https://github.com/su2code/SU2/issues/713,1,['config'],['config']
Modifiability,"ts in config_structure to make doxygen pretty; - Bug fixing; - Merge branch 'develop'; - EA in ft^2; - further update to config; - Merge remote-tracking branch 'upstream/develop' into upstream_dev; - Minor changes; - Updated NF BC; - More adjustments; - Small update; - Final update Nearfield BC; - added massflowrate as option for cauchy criteria, more config file comments; - Merge remote-tracking branch 'upstream/develop' into upstream_dev; - paraview output modified/added back in for current version for SU2_DEF; - Merge branch 'develop' into feature_dualoutput; - Removed deprecated options from quicstart config.; - Working version of the compressible actuator disk; - Updated fixed CL mode.; - Very minor change; - Merge branch 'develop' into feature_dualoutput; - Final push to 3.2.9; - Merge branch 'develop'; - Minor change; - Minor change; - Small change; - Minor change; - Bug fixing: unsigned short val_vertex --> unsigned long val_vertex; - CFL adapt now works for adjoint problems; - Merge branch 'develop' into feature_dualoutput; - Fixing a typo; - Fix in the Euler BC for grid movement cases; - merging and fixing conflicts bwtn feature_dealloc and develop; - dealloc; - Time spectral fix.; - Merging some recent bug fixes from master into the develop branch to keep nsync.; - Merge branch 'feature_gridvel_fix' into develop; - Merge remote-tracking branch 'upstream/develop' into feature_Deallocation; - correcting issues, adding more deallocation; - fixed uninitialized pointers in CConfig; - further deallocation; - some corrections needed to pass reg tests; - fixed some dealloc issues that caused errors in euler adj; - modifications needed to (mostly) pass reg tests; all run w/o segfault. File Changes; - D Articles/AIAA_2013-0287.pdf (0) ; - D Articles/AIAA_2014-0243.pdf (0) ; - M Common/doc/docmain.hpp (46) ; - M Common/include/config_structure.hpp (1038) ; - M Common/include/config_structure.inl (191) ; - M Common/include/dual_grid_structure.hpp (43) ; - M Common/inc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:9856,adapt,adapt,9856,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['adapt'],['adapt']
Modifiability,twiseSU2plugin/mkplugin.bat (82) ; - D MeshTools/PointwiseSU2plugin/mkplugin.tcl (422) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (7,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:14441,plugin,plugins,14441,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,twiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/C,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:16376,plugin,plugins,16376,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,twiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/a,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:17446,plugin,plugins,17446,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"ty check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or nativ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5732,config,config,5732,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config']
Modifiability,"ty; ; #--- Check config options related to mesh adaptation; ; adap_options = ['ADAP_SIZES', 'ADAP_SUBITE', 'ADAP_SENSOR', \; 'ADAP_BACK', 'ADAP_HMAX', 'ADAP_HMIN', 'ADAP_HGRAD', 'ADAP_RESIDUAL_REDUCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:3661,config,config,3661,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"ualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhead); {; primary = new double [nVar+overhead];; for(int i=0; i<nVar; ++i) primary[i] = 1.0;; }; ```; All this does is give access to some primary variables held by the base class and allow derived classes to store their own secondary variables, e.g.:; ```; class VariableDerived : public VariableBase; {; private:; double* secondary;; public:; VariableDerived(int nVar, int overhead);; ~VariableDerived();; inline double* GetSecondary() {return secondary;}; };; ```; Then lets say we have dummy numerics classes.; ```; class NumericsBase; {; public:; virtual ~NumericsBase();; inline virtual double ComputeResidual(const double* a, const double* b) {return 0.0;}; };. class NumericsDerived : public NumericsBase; {; private:; int n;; public:; NumericsDerived(int nVar);; double ComputeResidual(const double* a, const double* b);; };; ```; `NumericsDerived` simply computes the dot product of `a` and `b`.; The use case is to loop over edges that connect nodes `a` and `b` passing the data of those nodes to `ComputeResidual` and using the result to update an array.; ```; VariableBase** node = new VariableBase* [nNode];; for(int i=0; i<nNode; ++i); node[i] = new VariableDerived(nVar,overhead);; ...; for(int i=0; i<nEdge; ++i); {; int p0 = connectivity[i].first;; int p1 = connectivity[i].second;. double r = numerics->ComputeResidual(node[p0]->GetPrimary(), node[p1]->GetPrimary",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:2263,Variab,VariableDerived,2263,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,4,['Variab'],"['VariableBase', 'VariableDerived']"
Modifiability,ub.com/su2code/SU2/pull/814/files#diff-0> (147); * A Common/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-1> (149); * A SU2_CFD/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-2> (143); * A SU2_DEF/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-3> (13); * A SU2_DOT/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-4> (25); * A SU2_GEO/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-5> (9); * A SU2_MSH/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-6> (8); * A SU2_PY/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-8> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:5332,Config,ConfigureCGNS,5332,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['Config'],['ConfigureCGNS']
Modifiability,"ubmit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + Will lack some of the more advances features of mature unit-testing frameworks. #### Boost Test. + Can be header only, statically linked, or dynamically linked; + If statically or dynamically linked, then Boost is not very lightweight; + Easy to add if you're already using Boost. #### Google Test. + Most common unit-testing framework; + Can be easily combined with Google's powerful GMock mocking library; + Compiling and linking can be somewhat painful. #### Catch2. + Used by FEniCS; + Makes unit tests easily readable with lots of syntactic sugar.; + Has a very simple syntax; + Is header-only; + ~~Requires C++11 compilation~~ Requires C++11 for full feature set, but offers a C++03 branch; + Not as feature rich as Google Test or Boost Test. ## Questions. + How do developers feel about adding unit tests to SU2?; + If a unit-testing framework were added to SU2, would you actually use it?; + Do developers have a preference (or experience with) any of the unit testing frameworks?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:3628,flexible,flexible,3628,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['flexible'],['flexible']
Modifiability,"ucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:1573,variab,variables,1573,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['variab'],['variables']
Modifiability,"uction and performance.; b. I think it is important to start the validation project, create a link; from the main SU2 web page to it, and than let it grow with the existing; mechanism of community contributions with approvals. Your list is very fine; for beginning. However I think we should strive to enrich it with 3D and; time dependent cases. I hope to be able to be in the loop and contribute to this important venue; Best; Eran; On Wed, Sep 19, 2018 at 8:26 PM Jayant Mukhopadhaya <; notifications@github.com> wrote:. > Hey everyone,; >; > Following the discussions at the SU2 Developers meeting this week, I; > wanted to start a conversation about compiling a comprehensive set of V&V; > cases for SU2 that can showcase it's performance in comparison to other; > solvers.; >; > I think the the NASA TMR website; > <https://turbmodels.larc.nasa.gov/index.html> is a good model to base it; > on. The idea would be to present the V&V case, provide working; > configuration and mesh files, and provide results comparing performance to; > other solvers and to higher fidelity data (when available). This allows; > people to see the performance of SU2 and replicate it, if need be.; >; > The first step would be compiling a list of cases that should be covered.; > The SU2 2014 SciTech paper; > <https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf> would be a; > good starting point as it already had a couple of validation cases. This; > list can be bolstered with some of the NASA TMR cases, and with grid; > convergence studies. I would like to propose an initial list that the; > community can talk through and make changes as we see fit. I am mostly only; > familiar with canonical CFD flows that are used in these cases. But it; > would be great to have other cases, such as Turbo-machinary or FSI cases,; > that show the full breadth of SU2's abilities. This is by no means an; > exhaustive list:; >; > 1. Zero Gradient Flat Plate; > 2. 2D and 3D Bump in Channel; > 3. Asymmetric Dif",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423070900:1284,config,configuration,1284,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423070900,1,['config'],['configuration']
Modifiability,"ude'; C compiler for the host machine: /home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-gcc (gcc 7.3.0 ""x86_64-conda_cos6-linux-gnu-gcc (crosstool-NG 1.23.0.449-a04d0) 7.3.0""); C linker for the host machine: /home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-gcc ld.bfd 2.33.1; Using 'AR' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-ar'; Using 'LDFLAGS' from environment with value: '-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,/home/user/anaconda3/lib -Wl,-rpath-link,/home/user/anaconda3/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; --------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:3909,config,config,3909,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311,2,['config'],['config']
Modifiability,"uded but aren't on the `LD_LIBRARY_PATH` by default, so one has to export first. (I'm not sure if this is really a great workaround since the whole Python environment lib directory is now in the path, but it seems to work for now.). I'm getting an issue now where the script seems to crash while `Running initial CFD solution`:. ```; (test_env) tim@super:/work/projects/mesh_adapt_testing/A000i_adap/2_cfd$ LD_LIBRARY_PATH=$CONDA_PREFIX/lib:$LD_LIBRARY_PATH SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -n %i %s"" python /opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py -f inv_test.cfg -n 40 > mesh_adapt.out; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Traceback (most recent call last):; File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 112, in <module>; main(); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 73, in main; options.save_all ); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 102, in mesh_adaptation_amg; SU2.run.amg(config); File ""/opt/su2/SU2v7_adap/bin/SU2/run/amg.py"", line 220, in amg; SU2_CFD(config_cfd); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /work/projects/mesh_adapt_testing/A000i_adap/2_cfd/adap/ini/,; Command = mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754504570:1139,config,config,1139,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570,1,['config'],['config']
Modifiability,ugin/Makefile (304) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.sln (64) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.suo (0) ; - D MeshTools/PointwiseSU2plugin/depend.sh (28) ; - D MeshTools/PointwiseSU2plugin/mkplugin (10) ; - D MeshTools/PointwiseSU2plugin/mkplugin.bat (82) ; - D MeshTools/PointwiseSU2plugin/mkplugin.tcl (422) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:14200,plugin,plugins,14200,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,ugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpVersions.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin_Instructions.txt (0) ; - I QuickStart/inv_NACA0012.cfg (0) ; - I README (0) ; - I SU2_CFD/include/SU2_CFD.hpp (0) ; - I SU2_CFD/include/definition_structure.hpp (0) ; - I SU2_CFD/include/fluid_model.hpp (0) ; - I SU2_CFD/include/fluid_model.inl (0) ; - I SU2_CFD/include/integration_structure.hpp (0) ; - I SU2_CFD/include/integration_structure.inl (0) ; - I SU2_CFD/include/iteration_structure.hpp (0) ; - I SU2_CFD/include/numerics_machine_learn,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:20047,plugin,plugins,20047,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"ult: o; configure:3597: checking whether we are using the GNU C++ compiler; configure:3616: g++ -c conftest.cpp >&5; configure:3616: $? = 0; configure:3625: result: yes; configure:3634: checking whether g++ accepts -g; configure:3654: g++ -c -g conftest.cpp >&5; configure:3654: $? = 0; configure:3695: result: yes; configure:3720: checking dependency style of g++; configure:3831: result: gcc3; configure:3921: checking for gcc; configure:3937: found /usr/bin/gcc; configure:3948: result: gcc; configure:3979: checking for C compiler version; configure:3988: gcc --version >&5; gcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3999: $? = 0; configure:3988: gcc -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unrecognized option '-qversion'; gcc: no input files; configure:3999: $? = 1; configure:4003: checking whether we are using the GNU C compiler; co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:5816,config,configure,5816,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability,"un-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7892,config,config,7892,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,2,['config'],"['config', 'config-lite-']"
Modifiability,"update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:2212,config,config,2212,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['config'],['config']
Modifiability,updating settings in the _basic config file to match the _adv settings in the oneram6 constrained optimization tutorial folder,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/362:32,config,config,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/362,1,['config'],['config']
Modifiability,upport >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial College London. |; | ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6626,config,config,6626,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"upstream region of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubusercontent.com/72806890/111278050-68890480-8639-11eb-9065-adac2e8cba15.png). The SA model does not suffer from a decaying turbulence variable, but the proposed changes are also functional there. [1] Philippe R. Spalart and Christopher L. Rumsey, Effective Inflow Conditions for Turbulence Models in Aerodynamic Calculations, https://arc.aiaa.org/doi/pdf/10.2514/1.29373. ## Related Work; ?. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236:2129,variab,variable,2129,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236,1,['variab'],['variable']
Modifiability,"ure:3343: $? = 0; configure:3332: g++ -V >&5; g++: '-V' option must have argument; configure:3343: $? = 1; configure:3332: g++ -qversion >&5; g++: unrecognized option '-qversion'; g++: no input files; configure:3343: $? = 1; configure:3363: checking whether the C++ compiler works; configure:3385: g++ conftest.cpp >&5; configure:3389: $? = 0; configure:3437: result: yes; configure:3440: checking for C++ compiler default output file name; configure:3442: result: a.out; configure:3448: checking for suffix of executables; configure:3455: g++ -o conftest conftest.cpp >&5; configure:3459: $? = 0; configure:3481: result: ; configure:3503: checking whether we are cross compiling; configure:3511: g++ -o conftest conftest.cpp >&5; configure:3515: $? = 0; configure:3522: ./conftest; configure:3526: $? = 0; configure:3541: result: no; configure:3546: checking for suffix of object files; configure:3568: g++ -c conftest.cpp >&5; configure:3572: $? = 0; configure:3593: result: o; configure:3597: checking whether we are using the GNU C++ compiler; configure:3616: g++ -c conftest.cpp >&5; configure:3616: $? = 0; configure:3625: result: yes; configure:3634: checking whether g++ accepts -g; configure:3654: g++ -c -g conftest.cpp >&5; configure:3654: $? = 0; configure:3695: result: yes; configure:3720: checking dependency style of g++; configure:3831: result: gcc3; configure:3921: checking for gcc; configure:3937: found /usr/bin/gcc; configure:3948: result: gcc; configure:3979: checking for C compiler version; configure:3988: gcc --version >&5; gcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3999: $? = 0; configure:3988: gcc -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --wit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:4824,config,configure,4824,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,8,['config'],['configure']
Modifiability,"ure:3568: g++ -c conftest.cpp >&5; configure:3572: $? = 0; configure:3593: result: o; configure:3597: checking whether we are using the GNU C++ compiler; configure:3616: g++ -c conftest.cpp >&5; configure:3616: $? = 0; configure:3625: result: yes; configure:3634: checking whether g++ accepts -g; configure:3654: g++ -c -g conftest.cpp >&5; configure:3654: $? = 0; configure:3695: result: yes; configure:3720: checking dependency style of g++; configure:3831: result: gcc3; configure:3921: checking for gcc; configure:3937: found /usr/bin/gcc; configure:3948: result: gcc; configure:3979: checking for C compiler version; configure:3988: gcc --version >&5; gcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3999: $? = 0; configure:3988: gcc -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unrecognized option '-qversion'; gcc: no input files; configure:3999",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:5796,Config,Configured,5796,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,1,['Config'],['Configured']
Modifiability,ure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:516,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:11072,config,configure,11072,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,8,['config'],['configure']
Modifiability,"ure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.D.Palacios@boeing.com|; | Dr. Thomas D. Economon, economon@stanford.edu |; -------------------------------------------------------------------------; | SU2 D",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16185,config,config,16185,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,"urm config and SU2 config. The mesh file size is 31801880 bytes. If those are ok to you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin/python; Python 3.9.1. *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:1566,Config,Configured,1566,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['Config'],['Configured']
Modifiability,"using SoA in the gradient and limiters routines let me tell you there is a way to have the best of both worlds, enter the *_array of structures of arrays_* or as I like to call it zig zag storage, aka a right mess.; Imagine an AoS of short arrays of SIMD length, e.g. `{ {u0 u1 u2 u3} {v0 ... v3} {w0 ... w3} {u4 u5 u6 u7} ... }` with that it is possible to fully vectorize point loops as the first index (iPoint) is contiguous in groups of SIMD length and when looping along variables and dimensions in edge loops the stride is small enough (equal to SIMD length) to trigger hardware prefetching.; The catch is that we need even more integer arithmetic and so we really need iterators to amortise that cost, there is also the drawback that scalar usage of such a container would be terrible. **For these reasons I think we should sacrifice ultimate performance and keep node data in AoS storage.**. The major impact on gradients and limiters is the way the code is written, to vectorize the computation we need to compute the gradient into a local variable and then ""transpose"" it when storing it, i.e.; ```c++; FltVec phiI[MAXNVAR], gradI[MAXNVAR][MAXNDIM];; ...; for(size_t iVar=0; iVar<nVar; ++iVar); {; auto flux = weight*(phiI[iVar]+phi.getVec(jPoint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); gradI[iVar][iDim] += a_ij[iDim]*flux;; }; }. for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); for(size_t k=0; k<SIMDLEN; ++k); grad(iPoint+k,iVar,iDim) = gradI[iVar][iDim][k];; ...; ```; Similarly when computing the gradient we need to first fetch/transpose it to be able to vectorize subsequent computations; ```c++; FltVec gradI[MAXNVAR][MAXNDIM];. for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); for(size_t k=0; k<SIMDLEN; ++k); gradI[iVar][iDim][k] = grad(iPoint+k,iVar,iDim);; ...; ```; Performance wise this is actually better than the SoA version (4% on gradients, 35% on limiters) as it also benefits from better locality, and i",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:13804,variab,variable,13804,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['variab'],['variable']
Modifiability,"usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 158, in __init__; self._update_fun(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 251, in _update_fun; self._update_fun_impl(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 155, in update_fun; self.f = fun_wrapped(self.x); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 137, in fun_wrapped; fx = fun(np.copy(x), *args); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""/home/star/su2/bin/SU2/opt/project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""/home/star/su2/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/home/star/su2/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/home/star/su2/bin/SU2/eval/design.py"", line 244, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""/home/star/su2/bin/SU2/eval/functions.py"", line 100, in function; multipoint( config, state ); File ""/home/star/su2/bin/SU2/eval/functions.py"", line 675, in multipoint; func[i+1] = aerodynamics(konfig,ztate); File ""/home/star/su2/bin/SU2/eval/functions.py"", line 313, in aerodynamics; funcs[key] = state['FUNCTIONS'][key]; KeyError: 'AIRFOIL_AREA'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1808:2338,config,config,2338,https://su2code.github.io,https://github.com/su2code/SU2/issues/1808,2,['config'],['config']
Modifiability,variable properties (transport and thermodynamic) for compressible flows with any eos,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/794:0,variab,variable,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/794,1,['variab'],['variable']
Modifiability,"vbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x00000",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:3018,config,config,3018,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,"veloper meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multiz",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:4390,variab,variables,4390,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['variab'],['variables']
Modifiability,"verflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -1;; ^~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFtoSU2Sol':; ./sources/Python3.7/convert.c:32:26: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:32:7: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:6045,variab,variable,6045,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['variab'],['variable']
Modifiability,"we could maybe also use multizone, and allow a zone to be selected for volume averaging and integrated variables.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1894#issuecomment-1396603114:103,variab,variables,103,https://su2code.github.io,https://github.com/su2code/SU2/issues/1894#issuecomment-1396603114,1,['variab'],['variables']
Modifiability,"when I use **CST parameters** to deform mesh,; My airfoil mesh has two boundaries (far: farfield, air: airfoil),; and I use the below naca0012.cfg:; ```; ...; DV_KIND= CST; DV_MARKER= ( air ); DV_PARAM= (0, 5, 7); DV_VALUE= 0.6; ...; ```; when I use ```SU2_DEF naca0012.cfg```; the output mesh is same as **original grid**, and the output message is :; ```; ...; --------------------- Surface grid deformation (ZONE 0) -----------------; Performing the deformation of the surface grid.; Design Variable not implemented yet. ------------------- Volumetric grid deformation (ZONE 0) ----------------; Performing the deformation of the volumetric grid.; CSysSolve::FGMRES(): system solved by initial guess. ----------------------- Write deformed grid files -----------------------; |SU2 mesh |naca0012.su2 |; |Paraview Multiblock |naca0012.vtm |; Adding any FFD information to the SU2 file. ------------------------- Solver Postprocessing -------------------------; Deleted CGeometry container.; Deleted CSurfaceMovement class.; Deleted CVolumetricMovement class.; Deleted CConfig container.; Deleted COutput class. Completed in 0.335274 seconds on 1 core. ------------------------- Exit Success (SU2_DEF) ------------------------; ```. it seems that my cst method didn't work.; How can I use CST method?; Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2123:494,Variab,Variable,494,https://su2code.github.io,https://github.com/su2code/SU2/issues/2123,1,['Variab'],['Variable']
Modifiability,"when running an optimisation process, when the solution files are arranged in the /DESIGNS/DSN_001/DIRECT/ directory tree, if the option RESTART_SOLUTION is set to YES in the cfg file, the solution does not restart from a previous restart file! instead it simply deletes all old designs and runs the process from scratch again. ; for example: if i want to run the first N design iterations, then stop the process on the Nth iteration and change something in the config file -e.g. cfl num- (including setting the restart option to YES), upon resubmitting the job all N design iterations are lost and the process starts again from DSN_001. this has proven to be quite an expensive problem for large 3D optimisations, and i am not sure wether this is a bug or something which has been hardcoded for a reason? ; it could be quite useful to have an option of where to restart the solution from? (e.g. restart from DSN_00X); Cheers, T.P.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/290:462,config,config,462,https://su2code.github.io,https://github.com/su2code/SU2/issues/290,1,['config'],['config']
Modifiability,"while you might be envisioning a more clever approach, the python wrapper has some tools to help with this too. SU2.io.tools.restart2solution(config,state=None); """""" moves restart file to solution file, ; optionally updates state; direct or adjoint is read from config; adjoint objective is read from config; """""". should be called right after a call to SU2_CFD (ie with SU2.run.direct()",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/17#issuecomment-29596087:142,config,config,142,https://su2code.github.io,https://github.com/su2code/SU2/issues/17#issuecomment-29596087,3,['config'],['config']
Modifiability,"will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; # Lesser General Public License for more details.; #; # You should have received a copy of the GNU Lesser General Public; # License along with SU2. If not, see <http://www.gnu.org/licenses/>. import os, sys, shutil, copy, time; import numpy as np. from .. import io as su2io; from .. import amginria as su2amg; from interface import CFD as SU2_CFD. try :; import pyamg ; except:; sys.stderr.write(""## ERROR : Unable to import pyamg module.\n""); sys.exit(1). def amg ( config , kind='' ):; ; sys.stdout.write(""SU2-AMG Anisotropic Mesh Adaptation\n""); ; #--- TODO: Check pyamg version compatibility; ; #--- Check config options related to mesh adaptation; ; adap_options = ['ADAP_SIZES', 'ADAP_SUBITE', 'ADAP_SENSOR', \; 'ADAP_BACK', 'ADAP_HMAX', 'ADAP_HMIN', 'ADAP_HGRAD', 'ADAP_RESIDUAL_REDUCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsisten",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:2597,Adapt,Adaptation,2597,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,5,"['Adapt', 'adapt', 'config']","['Adaptation', 'adaptation', 'config']"
Modifiability,wiseSU2plugin/src/Pointwise/Win64Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_U,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:14766,plugin,plugins,14766,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,wiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plug,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:17205,plugin,plugins,17205,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,xcbkptlist (0) ; - I SU2_IDE/Xcode/SU2_CFD.xcodeproj/xcuserdata/fpalacios.xcuserdatad/xcschemes/SU2_CFD.xcscheme (0) ; - I SU2_IDE/Xcode/SU2_DEF.xcodeproj/project.pbxproj (0) ; - I SU2_IDE/Xcode/SU2_DOT.xcodeproj/project.xcworkspace/xcshareddata/SU2_DOT.xccheckout (0) ; - I SU2_IDE/Xcode/SU2_GEO.xcodeproj/project.xcworkspace/xcshareddata/SU2_GEO.xccheckout (0) ; - I SU2_IDE/Xcode/SU2_MSH.xcodeproj/project.pbxproj (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/fpalacios.mode1v3 (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/fpalacios.pbxuser (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/project.pbxproj (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/project.xcworkspace/contents.xcworkspacedata (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/project.xcworkspace/xcshareddata/SU2_DDC.xccheckout (0) ; - I SU2_IDE/Xcode/SU2_SOL.xcodeproj/project.pbxproj (0) ; - I SU2_IDE/Xcode/SU2_SOL.xcodeproj/xcuserdata/fpalacios.xcuserdatad/xcschemes/SU2_SOL.xcscheme (0) ; - I SU2_MSH/include/SU2_MSH.hpp (0) ; - I SU2_MSH/obj/Makefile.am (0) ; - I SU2_MSH/obj/Makefile.in (0) ; - I SU2_MSH/src/SU2_MSH.cpp (0) ; - D SU2_PRT/bin/.gitignore (0) ; - D SU2_PRT/include/SU2_PRT.hpp (0) ; - D SU2_PRT/obj/Makefile.am (0) ; - I SU2_PRT/obj/Makefile.in (0) ; - D SU2_PRT/src/SU2_PRT.cpp (0) ; - D SU2_PY/2DChannel.py (0) ; - D SU2_PY/3DChannel.py (0) ; - I SU2_PY/Makefile.am (0) ; - I SU2_PY/Makefile.in (0) ; - I SU2_PY/SU2/**init**.py (0) ; - I SU2_PY/SU2/eval/design.py (0) ; - I SU2_PY/SU2/eval/functions.py (0) ; - I SU2_PY/SU2/eval/gradients.py (0) ; - I SU2_PY/SU2/io/config.py (0) ; - I SU2_PY/SU2/io/config_options.py (0) ; - I SU2_PY/SU2/io/data.py (0) ; - I SU2_PY/SU2/io/filelock.py (0) ; - I SU2_PY/SU2/io/redirect.py (0) ; - I SU2_PY/SU2/io/state.py (0) ; - I SU2_PY/SU2/io/tools.py (0) ; - I SU2_PY/SU2/mesh/adapt.py (0) ; - I SU2_PY/SU2/mesh/tools.py (0) . Patch Links:; - https://github.com/su2code/SU2/pull/174.patch; - https://github.com/su2code/SU2/pull/174.diff; —; Reply to this email directly or view it on GitHub.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:27379,config,config,27379,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,4,"['adapt', 'config']","['adapt', 'config']"
Modifiability,"y is static polymorphism.; For example in the non vectorized numerics we have a family of Roe schemes since a lot of code is shared, and the only difference is how the dissipation terms are computed. There this is done with virtual functions, here we want none of that.; Virtual functions allow a parent class to dynamically call methods of its children, we want to do this statically and so we need to let the parent class know who is deriving from it.; ```c++; template<class Derived>; class Parent {; public:; void parentMethod() {; // ""I know I am also a Derived and so I can cast myself.""; auto derived = static_cast<Derived*>(this);; // ""now I can use a method of derived""; derived->childMethod();; }; };. // A derived class needs to inform the parent about itself; class Child : public Parent<Child> {; public:; void childMethod() {...}; };; ```. Why is this better? Note that 2 of these derived classes don't actually have the same parent, i.e. one inherits from `Parent<ChildA>` the other from `Parent<ChildB>` this means that 2 versions of Parent were instantiated specifically for each derived class, this allows code to be inlined and optimized for each, an ability lost with virtual functions. ### Putting it all together; For vectorized central schemes we have something like:; ```c++; // Intermediate class for centered schemes, note the 2 template parameters; template<class Derived, class Base>; class CCenteredBase : public Base {; public:; // Main public method implemented here making use of ""Derived"" and ""Base"".; void ComputeFlux(...) const final {; ... // gather data, do some computation; derived->DissipationTerms(...); // static polymorphism; Base::ViscousTerms(...); // static decorator; ... // update linear system; }; }. // A final centered scheme, which is what we instantiate, with some viscous decorator.; template<class Decorator>; class CJSTScheme : public CCenteredBase<CJSTScheme<Decorator>, Decorator> {; protected:; void DissipationTerms(...) const {...}; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:3236,inherit,inherits,3236,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721,2,"['inherit', 'polymorphi']","['inherits', 'polymorphism']"
Modifiability,"y name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:2261,variab,variables,2261,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['variab'],['variables']
Modifiability,"y"", line 177, in __init__; self._update_grad(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 256, in _update_grad; self._update_grad_impl(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 167, in update_grad; self.g = grad_wrapped(self.x); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 380, in obj_df; grad = su2grad(this_obj,grad_method,config,state); File ""/usr/local/bin/SU2/eval/gradients.py"", line 96, in gradient; grads = adjoint( func_name, config, state ); File ""/usr/local/bin/SU2/eval/gradients.py"", line 294, in adjoint; info = su2run.adjoint(konfig); File ""/usr/local/bin/SU2/run/adjoint.py"", line 79, in adjoint; SU2_CFD(konfig); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2/SU2-7.0.4/test1/DESIGNS/DSN_001/ADJOINT_DRAG/,; Command = /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD config_CFD_AD.cfg; SU2 process returned error '127'; /bin/sh: 1: /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD: not found; ```; So I tried to build AD under the instruction. I copied the exact same thing and pasted to the command. The error is:. ```; Checking the status of submodules; =====================================================================; Found an",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:2225,config,config,2225,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['config'],['config']
Modifiability,"y, the dynamic mesh module allows either a translation or a rotation. The parameters involved are:; GRID_MOVEMENT= ROTATING_FRAME or TRANSLATION_RATE; MOTION_ORIGIN= x y z; ROTATION_RATE= p q r; TRANSLATION_RATE= u v w; The farfield MACH number is set to zero and MACH_MOTION is used instead. For example, a pull-up maneuver of an aircraft could be calculated as a steady CFD simulation and by looping around a MOTION_ORIGIN far away from the aircraft as discussed here: https://www.cfd-online.com/Forums/su2/241889-rotating_frame-grid-velocity-correct-flow-physics-wrong.html. However, a combination of pull-up and roll or yaw is not possible because the roll/yaw would require a different MOTION_ORIGIN that the pull-up. To simulate a free-flying aircraft (in a flight mechanical sense) which moves and rotates in all six degrees of freedom about the center of gravity, a combination of both translation and rotation is beneficial. In the proposed change, the ROTATING_FRAME now considers both parameters ROTATION_RATE and TRANSLATION_RATE given in the config file. Because the default translation rates are zero, there should be no effect for users who want pure rotation. The option STEADY_TRANSLATION now appears obsolete to me because the functionality is included in the ROTATING_FRAME, but I didn't want to remove the code because someone else might use that parameter? . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. This is a follow-up of a discussion here: https://www.cfd-online.com/Forums/su2/241889-rotating_frame-grid-velocity-correct-flow-physics-wrong.html. Fix #1595 (https://github.com/su2code/SU2/issues/1588)](https://github.com/su2code/SU2/pull/1595/commits/c2018c836791944383c13d32dcfec903d5657072) is required to get proper nodal forces and has already been merged into the develop branch, thank you Pedro :). ## PR Checklist; *Put an X by all that apply. You can fill this ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1621:1155,config,config,1155,https://su2code.github.io,https://github.com/su2code/SU2/pull/1621,1,['config'],['config']
Modifiability,y/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6422,adapt,adaptation,6422,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['adapt'],['adaptation']
Modifiability,yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6037,config,config,6037,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The m,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6217,config,config,6217,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,ypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program w,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:11473,config,configure,11473,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,8,['config'],['configure']
Modifiability,"ysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Computing grid velocities by finite differencing.; ```. The value of `Pitching frequency` is totally wrong. So I do some debugging, found that there is **no initialization of Omega_Ref in slover_direct_mean.cpp for incompressible flow**. . ``` C++; /*--- Incompressible non dimensionalization ---*/. else {. /*--- Reference length = 1 (by default); Reference density = liquid density or freestream; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/193:3709,config,config,3709,https://su2code.github.io,https://github.com/su2code/SU2/issues/193,2,['config'],['config']
Modifiability,"ython functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checkli",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2646,variab,variable,2646,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['variab'],['variable']
Modifiability,"ython3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified bound 33 equals destination size [-Wstringop-truncation]; strncpy(str_buf, SolTag[i], CGNS_STRING_SIZE);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:3509,variab,variable,3509,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,2,['variab'],['variable']
Modifiability,"|; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. ------------------------ Physical Case Definition -----------------------; Input mesh file name: mesh_NACA0012_inv.su2. -------------------------- Output Information ---------------------------; The output file format is Tecplot ASCII (.dat).; Flow variables file name: flow. ------------------- Config File Boundary Information --------------------; +-----------------------------------------+; | Marker Type| Marker Name|; +-----------------------------------------+; | Euler wall| airfoil|; +-----------------------------------------+; | Far-field| farfield|; +-----------------------------------------+. ---------------------- Read Grid File Information -----------------------; Two dimensional problem.; 5233 points before parallel partitioning.; Performing linear partitioning of the grid nodes.; 10216 interior elements before parallel partitioning.; Executing the partitioning functions.; Building the graph adjacency structure.; Distributing elements across all ranks.; 2 surface markers.; +------------------------------------+; | Index| Marker| Elements|; +------------------------------------+; | 0| airfoil| 200|; | 1| farfield| 50|; +------------------------------------+; Calling ParMETIS... graph partitioning complete (1114 edge cuts).; Distr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-514630913:2696,variab,variables,2696,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-514630913,1,['variab'],['variables']
Modifiability,"|; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. ------------------------ Physical Case Definition -----------------------; Input mesh file name: mesh_NACA0012_inv.su2. -------------------------- Output Information ---------------------------; The output file format is Tecplot ASCII (.dat).; Flow variables file name: flow. ------------------- Config File Boundary Information --------------------; +-----------------------------------------+; | Marker Type| Marker Name|; +-----------------------------------------+; | Euler wall| airfoil|; +-----------------------------------------+; | Far-field| farfield|; +-----------------------------------------+. ---------------------- Read Grid File Information -----------------------; Two dimensional problem.; 5233 points.; 2 surface markers.; +------------------------------------+; | Index| Marker| Elements|; +------------------------------------+; | 0| airfoil| 200|; | 1| farfield| 50|; +------------------------------------+; 10216 triangles.; Identify vertices.; Storing a mapping from global to local point index. ------------------------- Solution Postprocessing -----------------------. Error in ""void CBaselineSolver::SetOutputVariables(CGeometry*, CConfig*)"": ; -------------------------------------------------------------------------; Unable to o",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-514653545:2693,variab,variables,2693,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-514653545,1,['variab'],['variables']
Modifiability,"~~Convergence history is non deterministic when running the RANS solver with SA model using OMP-only parallelism. When fixing the min RMS residual, the computation stops at a different iteration each time I run the solver.~~. ~~That does not happen with the EULER or NAVIER_STOKES solvers.~~. Convergence history is non deterministic when using the NEWTON_KRYLOV solver using OMP-only parallelism. When fixing the min RMS residual, the computation stops at a different iteration each time I run the solver.; That happens with the EULER or NAVIER_STOKES and RANS solvers. I am using a common setup for each case i.e. ROE+MUSCL convective fluxes, WLSQ for viscous gradients, LSQ for MUSCL gradients. Tried also switching ON and OFF the CFL adaptation and limiters, different linear solvers, and precision (single/double) of the linear solver but that doesn't change the outcome of the test (RANS conv history remains non deterministic while EULER and NS have always the same convergence history). I compiled in release (-O3), with OMP support and exported the mtune/march variables to enable SIMD types. ~~I'll be looking in the SA/Scalar solver for some uninitialized vars. Any other idea?~~. I'll be looking in the CNewtonIntegration files for some uninitialized vars/thread safety issue. Any other idea? . **Bug report checklist**; - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.4 LTS); - C++ compiler and version: g++ (GCC) 7.5.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 8.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2259:738,adapt,adaptation,738,https://su2code.github.io,https://github.com/su2code/SU2/issues/2259,2,"['adapt', 'variab']","['adaptation', 'variables']"
Modifiability,"~~I have noticed that some recent PR introduced in the develop the old config options for the time spectral implementation instead of the new harmonic balance implementation, introduced with PR #311.~~ The develop is fine, I close this issue.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/363:71,config,config,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/363,1,['config'],['config']
Performance," (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05)]. Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/usr/local/bin/shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in _minimize_slsqp; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in <listcomp>; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", li",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:3741,optimiz,optimize,3741,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['optimiz'],['optimize']
Performance," 0. ---. | ___ _ _ ___ |; | / **| | | |_ ) Release 3.2.8 ""eagle"" |; | \** \ |_| |/ / |; | |___/_**//_**| Aerodynamic Shape Optimization Script |; ## | |. NIT FC OBJFUN GNORM; 1 1 2.134595E-05 1.958771E-02; 2 6 2.134988E-05 1.958696E-02; 3 13 2.134986E-05 1.958707E-02; 4 24 2.134983E-05 1.958709E-02; 5 35 2.134980E-05 1.958711E-02; 6 46 2.134976E-05 1.958720E-02; 7 54 2.134978E-05 1.958710E-02; 8 65 2.134975E-05 1.958720E-02; 9 76 2.134973E-05 1.958720E-02; 10 87 2.134973E-05 1.958720E-02; 11 98 2.134970E-05 1.958720E-02; 12 104 2.134968E-05 1.958720E-02; 13 115 2.134967E-05 1.958720E-02; Traceback (most recent call last):; File ""shape_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/170:1462,optimiz,optimize,1462,https://su2code.github.io,https://github.com/su2code/SU2/issues/170,1,['optimiz'],['optimize']
Performance," 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update exa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:7968,cache,cache,7968,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance," <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handl",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4694,cache,cache,4694,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance," <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5542,cache,cache,5542,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance," Events: (none); Request: REQUEST_INFORMATION; ALGORITHM_AFTER_FORWARD: 1; FORWARD_DIRECTION: 0. ---------------------------------------------------------------------------; FileNotFoundError Traceback (most recent call last); Cell In[9], line 5; 2 from paraflow.simulation.su2 import Su2SimulationConfig ; 4 flasher = get_flasher(""air"", ""gas""); ----> 5 sim_results = run_simulation(; 6 axial_turbo_passage,; 7 params=SimulationParams(; 8 inlet_total_state=flasher.flash(P=87909, T=276, mach_number=0.4098), ; 9 target_outlet_static_state=flasher.flash(P=108932, T=296),; 10 translation=[; 11 np.array([0.0, 266, 0.0]),; 12 None; 13 ]; 14 ),; 15 working_directory=""./simulation_out"", ; 16 id=""1"",; 17 auto_delete=True,; 18 verbose=True,; 19 # num_procs=9,; 20 cfg=Su2SimulationConfig(; 21 custom_repo_url= ""https://github.com/su2code/SU2/tree/master"",; 22 version= ""8.0.0""; 23 ); 24 ); 25 sim_results.to_file(""./simulation_out/cached.pkl""); 27 # sim_results = SimulationResult.from_file(""./simulation_out/cached.pkl""). File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/paraflow/simulation/simulation.py:21, in run_simulation(passage, params, working_directory, id, auto_delete, verbose, num_procs, cfg); 19 if isinstance(cfg, Su2SimulationConfig):; 20 from paraflow.simulation.su2 import run_su2_simulation; ---> 21 sim_results = run_su2_simulation(passage, params, working_directory, id, auto_delete, verbose, num_procs, cfg); 23 return sim_results. File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/paraflow/simulation/su2.py:161, in run_su2_simulation(passage, params, working_directory, id, auto_delete, verbose, num_procs, cfg); 158 vtu_filename = vtu_filename.replace(""."", f""_{i}.""); 160 grids += [read_vtu_data(vtu_filename)]; --> 161 eval_values = pd.read_csv(config[""CONV_FILENAME""]); 164 if auto_delete:; 165 delete_output_files(config, config_path, num_zones). File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/pandas/io/parsers/readers.py:1024, in read_csv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2204:2903,cache,cached,2903,https://su2code.github.io,https://github.com/su2code/SU2/issues/2204,1,['cache'],['cached']
Performance," I cannot find any solution elsewhere. I am attempting an **Adjoint Optimization problem** with viscous solver (**RANS/NAVIER_STOKES**) using the **shape_optimization.py** script but I can't complete it because I receive the following message:. `Error in ""void CSolver::Read_SU2_Restart_Binary(CGeometry*, const CConfig*, std::__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. Have I missed something written in other tutorials?. Thank you very much for all of the support.</div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1458:1539,perform,performed,1539,https://su2code.github.io,https://github.com/su2code/SU2/issues/1458,1,['perform'],['performed']
Performance," PR. And… do not worry too much (or at all)... we are doing this for free and for fun! As you know, after a major release we always find this kind of small bugs. The big picture is that thanks to you we all enjoy an awesome multipoint optimization capability! Thanks!. Best,; Francisco. > On Mar 25, 2018, at 6:04 PM, Heather Kline <notifications@github.com> wrote:; > ; > @hlkline commented on this pull request.; > ; > In SU2_PY/SU2/eval/design.py <https://github.com/su2code/SU2/pull/519#discussion_r176962282>:; > ; > > @@ -364,7 +364,7 @@ def obj_df(dvs,config,state=None):; > # For multiple objectives are evaluated one-by-one rather than combined; > # MARKER_MONITORING should be updated to only include the marker for i_obj; > # For single objectives, multiple markers can be used ; > - config['MARKER_MONITORING'] = marker_monitored[i_obj]; > + if (n_obj>1): config['MARKER_MONITORING'] = marker_monitored[i_obj]; > @fpalacios <https://github.com/fpalacios> yes, I commented a bit too quickly; I do see the behavior that you mention. I think the line previously mentioned helps with getting the value of the objective but not the gradient.; > While I was testing this on my end I also noticed that there is an issue if you list the same objective multiple times (for example, if you wanted to weight the drag contribution from one surface more than another), where since it has the same key the previous dict entry is overwritten. Do you mind if I add an error catching that to your PR?; > ; > I am taking a look back through it but so far I think your solution will be good - and better to fix the performance in master now and worry about elegant improvements in the develop branch.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/519#discussion_r176962282>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AccuRlzQ3wEuDogzT35DALgoNbrSv32Xks5tiD64gaJpZM4S4O1W>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-376023020:1667,perform,performance,1667,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-376023020,1,['perform'],['performance']
Performance," be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2384,perform,performed,2384,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['perform'],['performed']
Performance," be transformed into a short array of matrices, the result of that is code like the above that explicitly manipulates the lanes of our SIMD type, such code can be completely hidden inside CSysMatrix which is good because a 4x4 vectorized transpose and matrix update looks like this; ```c++; // block j, subs from jj and goes to ij; T0 = blk_j[ k ].unpackLo(blk_j[k+1]); T1 = blk_j[ k ].unpackHi(blk_j[k+1]);; T2 = blk_j[k+2].unpackLo(blk_j[k+3]); T3 = blk_j[k+2].unpackHi(blk_j[k+3]);. C0 = T0.widePermuteLo(T2); C1 = T1.widePermuteLo(T3);; C2 = T0.widePermuteHi(T2); C3 = T1.widePermuteHi(T3);. (Array4d(&bjj[0][k])-C0).store(&bjj[0][k]);; (Array4d(&bjj[1][k])-C1).store(&bjj[1][k]);; (Array4d(&bjj[2][k])-C2).store(&bjj[2][k]);; (Array4d(&bjj[3][k])-C3).store(&bjj[3][k]);. C0.store(&bij[0][k]); C1.store(&bij[1][k]);; C2.store(&bij[2][k]); C3.store(&bij[3][k]);; ```; I am showing this because it represents a readability worst case in terms of manipulating SIMD types, we might end up with one or two of these to get the best performance possible but they will always be encapsulated and deep in kernel-type areas of SU2 that are almost never touched. ## Conclusions; - Over 45% faster CSysMatrix updates by mapping off-diagonal blocks to edges and diagonal blocks to points.; - Colouring is the best strategy for hybrid parallelism of compute-heavy edge loops and matrix updates as it interleaves compute and memory operations.; - AoS storage should be kept to avoid significant loss of performance in compute-light edge loops due to poor locality of SoA storage.; - Major implication of AoS is on point loops where some data needs to be fetched (transposed) into local variables for effective vectorization.; - An intermediate storage scheme, AoSoA, can provide both good locality and vectorization of point loops, however it requires that data be accessed via special iterators and scalar code based on it would have poor performance. Next I will try to estimate how much we can gain for a ""rea",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:16548,perform,performance,16548,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['perform'],['performance']
Performance," case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need to run the cases themselves. . I also wanted to broach the topic of convergence here. Would it be a good idea to standardize the termination criteria wherever possible? For example, in the NACA0012 case we can ensure that residuals are reduced by 8 orders of magnitude for all meshes. Or for the ONERAM6, we use Cauchy convergence and make sure the C_L is converged to 6 orders of magnitude. This would have to be flexible since the same level of convergence might not apply to all the cases in the repository. But for within a test case, I think it would be good to use the same convergence criteria for a family of meshes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:1925,perform,performance,1925,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,2,['perform'],['performance']
Performance," computed incorrectly in some cases. . During the investigation, I computed the drag force in Paraview based on the SU2 flow result and compared it to the drag force computed by SU2 both for the initial and the final optimization geometry. The results did not match, which is not what I would have expected. . In SU2, I compute the drag force by multiplying CD with the non-dimensional factor written to the forces_breakdown file. For Paraview, I wrote a script which does the following to compute the drag force:; - Load surface flow solution for the wing surface; - Compute surface normals; - Compute Drag = -Pressure*(Normals_X * cos(AoA/180 * 3.1415) + Normals_Z * sin(AoA/180 * 3.1415)); - Integrate this over the whole wing surface to get the total drag force. You can also find this Paraview script attached.; I validated the Paraview script for multiple simple testcases, for which SU2 and Paraview gave me exactly the same drag force. When I applied it to the initial optimization geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific criteria a geometry must fulfill in order that the drag is computed correctly?. **To Reproduce**; To reproduce the drag force calculation for either the initial or the final result:; - Open ""Drag Force computation.pvsm"" in Paraview with load stat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:1222,optimiz,optimization,1222,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['optimiz'],['optimization']
Performance," computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific criteria a geometry must fulfill in order that the drag is computed correctly?. **To Reproduce**; To reproduce the drag force calculation for either the initial or the final result:; - Open ""Drag Force computation.pvsm"" in Paraview with load state. Open it with the .vtu file you want to analzye; - Read the correct AoA in the forces_breakout.dat file. Then go to ""Calculator1"" in the Paraview script and insert the correct AoA into the formula.; - Read the Paraview Drag result. The script assumes surface normal vectors pointing outwards. If you see in Paraview that they are pointing inwards, the sign of the drag result must be swapped; - Compute the SU2 drag result by multiplying CD and the non-dimensional factor that can be found in the forces_breakdown.dat file; - You should get the forces that I mentioned in the text above. To reproduce the optimization itself, use the .cfg and the mesh file attached. Furthermore, the .geo file was used to create the mesh file with gmsh. You can find the files here:; [issue.zip](https://github.com/su2code/SU2/files/9138486/issue.zip). **Desktop (please complete the following information):**; - OS: Linux; - C++ compiler and version: g++ (GCC) 8.2.0; - MPI implementation and version: intel 2019.6.166; - SU2 Version: v7.3.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:2852,optimiz,optimization,2852,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['optimiz'],['optimization']
Performance," errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3134,cache,cache,3134,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,3,['cache'],"['cache', 'caches']"
Performance," in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/REL",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:5037,cache,cache,5037,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance," in main; shape_optimization( options.filename ,; File ""/usr/local/bin/shape_optimization.py"", line 142, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 177, in __init__; self._update_grad(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 256, in _update_grad; self._update_grad_impl(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 167, in update_grad; self.g = grad_wrapped(self.x); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 380, in obj_df; grad = su2grad(this_obj,grad_method,config,state); File ""/usr/local/bin/SU2/eval/gradients.py"", line 96, in gradient; grads = adjoint( func_name",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:1326,optimiz,optimize,1326,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['optimiz'],['optimize']
Performance," interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2815,optimiz,optimization,2815,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['optimiz'],['optimization']
Performance," machine cluster (16 cores each) to run CFD problems on. The cluster is connected together with 1G ethernet. On SU2 v6.2 and earlier, when I ran a problem on multiple machines the time per iteration would improve up until i hit a limit where presumably network overhead exceeded the benefit of adding another machine (The limit for my set up was something like 0.5 s/iteration. . I just tried SU2 v7 on this same cluster and consistently the time per iteration gets worse when I add a second machine and double the process count. I've tried this on smaller problems (~1Mill cells) but I've also tried it on larger ones (~27Million cells). On the larger problem, one machine with 16 processes ran at 34s/iteration and 2 machines with 32 processes also ran at 34s/iteration. For that problem size, I would expect a near 2x improvement in iteration time when doubling processes. Other than this, the apples to apples comparison between SU2 v6 and v7 is otherwise very impressive where iteration times have come down even for higher CFL's. I did compile SU2 from source. I tried to compile it the same way for both v6.2 and v7 though with the different build system its a little bit harder to be certain that its all exactly the same. Given that v7 performs fine going up to 16 processes on one machine, I don't think that its a compilation issue, but admittedly I don't know all the intricacies of mpi. . Since its just multi machine that's an issue, I wonder if there's something about v7 that make it more bandwidth/latency dependent that would go away with a faster network. Or is this just a regression do to (compiler version, mpi version, a network misconfiguration...)?. Anyway I know this a bit rambling, but any help would be appreciated. I'm happy to test anything on my setup this if anyone has any ideas. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 7.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894:1500,perform,performs,1500,https://su2code.github.io,https://github.com/su2code/SU2/issues/894,2,"['latency', 'perform']","['latency', 'performs']"
Performance," optimization using a FFD and the optimizer spits out a suggested DV_VALUE of 0.001, the mesh deformation routine will move the FFD control point by 1 (according to the scaling given above). 5. OPT_LINE_SEARCH_BOUND: This is an interesting one and the one I am least sure off. This option limits the maximum final movement of the FFD control points in the cartesian coordinate system. So, DV_VALUE * OPT_RELAX_FACTOR results in a movement of the FFD_CONTROL_POINT. If the the maximum movement of any of the control points is greater than OPT_LINE_SEARCH_BOUND, then all the control point movements are scaled such that the maximum movement = OPT_LINE_SEARCH_BOUND. . 6. OPT_UPPER/LOWER_BOUND: This value is divided by the OPT_RELAX_FACTOR to give the optimizer the maximum/minimum values for the design variables. . 7. DEFINITION_DV Scaling: This one I am really confused about. The only place that I can find this being used, is to scale the gradient of the objectives/constraints. It doesn't seem to actually scale the DVs anywhere in the python code, except for in the initialization, where the DVs are zeroed out anyway. Am I missing something here? Is it correct to think that scaling the gradients is one way to ensure that the DVs that the optimizer outputs scaled DVs?. In general, I think it'd be useful to have more information in the config template so that the scalings don't seem to be a dark art. The template does have some suggestions, like the gradient norm should order 10^-6. I have found this suggestion to be super useful, and it does work well. But I am not sure why the gradients need to be so small for the optimizer to work well. Any insight into this value?. In the end I am hoping to de-mystify some of the scalings, and how best to go about them. Ideally at the end of this discussion I can document some best practices (at least for the case of 3D shape optimization with FFD_CONTROL_POINTS). Any comments, suggestions, corrections, and/or insight would be super helpful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:4720,optimiz,optimizer,4720,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,3,['optimiz'],"['optimization', 'optimizer']"
Performance," per rank participates in the message passing, I have no experience here though so this might be a bad strategy, idk. **Back to business:**; I went silent for a bit because in prototyping a typical residual computation and matrix update loop I made some realisations that made me go back to the drawing board regarding data structures, and eventually back to square 0. . ## Parallel strategy for flux computation; Because significant computation is required to obtain each edge's flux, it does not make sense to attempt a ""point-loop"" strategy (which would double the effort).; However, one can either use colouring to avoid the race conditions that would result from updating the residual of cells i and j, or store the edge fluxes and then, on a second point-loop perform the summation of fluxes for each cell, with the direction being accounted by the same adjacency information used in the point-loop GG gradient computation.; If we consider only the update of residuals the two strategies are fairly equivalent performance wise, the tie breaker is the matrix updates. ## Matrix Updates; By this I mean the `addBlock`, `subBlock` we do (two times each) to update diagonal and off-diagonal blocks for each edge.; Here is a dummy numerics loop that does nothing else but setting blocks in the matrix (with colouring).; ```c++; void testLoop1(const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; double** blk_i, double** blk_j,; SparseMatrix& matrix); {; matrix.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. matrix.addBlock(iPoint, iPoint, blk_i);; matrix.addBlock(iPoint, jPoint, blk_j);. matrix.subBlock(jPoint, jPoint, blk_j);; matrix.subBlock(jPoint, iPoint, blk_i);; }; }",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:1221,perform,performance,1221,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['perform'],['performance']
Performance," prefer to use either (a) an open source library that is actively maintained, or (b) our own tree-based search. I do think that this is important for the various reasons that have been outlined/discussed already. The method Harichand describes is pretty much what we did in the ASC program. Edwin can provide more details (and we had an AIAA paper around 2005 on this topic). My suggestion: if Edwin has a tree search in C++ already and someone is willing to spend the time to integrated it, that would be the best option. We get the performance that is needed with a lightweight tree search, without external dependencies (to libraries that may provide a lot of other functionality we do not need), and we can expand to parallel trees as needed. If there is no code already available, then PCL seems like a good alternative (since it seems one can compile only portions of the library). Any takers?. Cheers,. Juan. On Jun 8, 2016, at 4:35 AM, Harichand M V <notifications@github.com<mailto:notifications@github.com>> wrote:. All,. Thanks for your comments. I think ANNlibrary is no longer maintained. It would be better if we can use a well maintained library in-order to prevent issues in future. Additionally ANNlibrary does not support distributed trees. As far as I know, pointcloud library also does not support distributed trees. I guess we will have to write a wrapper routine using MPI. This will create a local tree for its own portion of the surface mesh. Now distance computation can be done by querying all the trees and using the minimum. One catch here is that we will have to compute distance queries in a group in order to prevent the communication latency eating up the advantage. Waiting for comments. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHubhttps://github.com/su2code/SU2/issues/282#issuecomment-224563432, or mute the threadhttps://github.com/notifications/unsubscribe/ADpSxBy8kuwFTxIZIeCNXcpo7NhErZYeks5qJqjqgaJpZM4ItVbi.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-224806527:1720,latency,latency,1720,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-224806527,1,['latency'],['latency']
Performance," runners do not support node16 actions and they can use actions from github.com via <a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@acti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1457,cache,caches,1457,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['caches']
Performance," scale, rotate, and translate options over into the SU2_MSH executable, which might be a more logical home for it. However, this would require adding an extra set of config options for reading in a scale/rotate/translate options for SU2_MSH. The nice thing here is that we keep the intent separate, i.e., only design variables are listed with the other design variables while the mesh transformations are elsewhere. A different, possibly simpler way would be to just create separate names for these two types in the list of available options so that there is no ambiguity. Any thoughts?. On Aug 16, 2015, at 9:21 AM, Heather Kline <notifications@github.com<mailto:notifications@github.com>> wrote:. Some illustrative images/output in case my description was hard to understand:; [image]https://cloud.githubusercontent.com/assets/5167760/9294050/52a764b2-440f-11e5-8681-b68318da0ce7.png. SU2_DEF output when only ""airfoil"" marker included:. ------------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid. ----------------------- Volumetric grid deformation ---------------------; Performing the deformation of the volumetric grid. # FGMRES residual history. # Residual tolerance target = 4.14044e-11. # Initial residual norm = 15.8102. ```; 0 1; 50 2.17385e-06; 100 1.08998e-10; ```. # FGMRES final (true) residual:. # Iteration = 105: |res|/|res0| = 3.50764e-11. Non-linear iter.: 1/1. Linear iter.: 105. Min. area: 4.1019e-08. Error: 5.54565e-10. ----------------------- Write deformed grid files -----------------------; Merging grid connectivity.; Merging grid coordinates.; Writing volume mesh file.; Writing surface mesh file.; Writing .su2 file.; Adding any FFD information to the SU2 file. Completed in 1.039217 seconds on 1 core. ------------------------- Exit Success (SU2_DEF) ------------------------. [image]https://cloud.githubusercontent.com/assets/5167760/9294056/7be9439a-440f-11e5-862f-742246ef1565.png; SU2_DEF: output when ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-132065067:1574,Perform,Performing,1574,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-132065067,1,['Perform'],['Performing']
Performance," shape elements used for mesh deformation had some issues, namely:; - The Prism (6 nodes) element had incorrect integration points, and perhaps due to some inconsistency between the ordering of the nodes and the shape function it had ""negative"" stiffness (deform opposite to force). The latter issue was remedied by using negative weights... I tried permuting the integration points but that did not help.; - The Pyramid (5 nodes) had inconsistent integration points and shape functions, it was using pyramid points but degenerate hex functions, this made the element some 20 times more flexible than it should be, pyramid shape functions are used now. My main reason to look into this was to support all element types in the structural solver both for linear and nonlinear analysis, in principle that should be working now, but I still have tests to run. I took the opportunity to refactor the CElement family of classes, now the derived classes only deal with the shape specifics:; - Integration/extrapolation points, shape function and derivatives, are computed and stored at construction.; - Area/Volume computation in undeformed (reference) or deformed (current) coordinates. Generic actions like allocating data and computing gradients are done by the base class. For the latter I included one method for 2D and another for 3D, they only differ in the inversion of the Jacobian but being specialized nDim can be ""hardcoded"" which should allow for more compile time optimization. I expect some regressions to fail, and I will still run more tests to verify the revised elements. I will post those results and add a regression. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681:1571,optimiz,optimization,1571,https://su2code.github.io,https://github.com/su2code/SU2/pull/681,1,['optimiz'],['optimization']
Performance," simd-loops in sight, in good C++ fashion that trickery has been encapsulated in a ""simd-friendly"" class.; Such a class can look something like this:; ```C++; template<class T, size_t N>; class Array; {; #define FOREACH for(size_t k=0; k<N; ++k); public:; enum : size_t {Size = N};; enum : size_t {Align = N*sizeof(T)};; private:; // fixed size and aligned array of internal data, naturally maps to a SIMD register; alignas(Align) T vals_[N];; /*; * Some helper methods go here; */; public:; // **** CONSTRUCTORS **** //; // We want to be able to construct this type from single scalars,; // a memory location from which we LOAD data,; // or a memory location and some offsets from which we GATHER data.; // In addition to the ""normal"" constructors. // scalar broadcasting ctor; STRONGINLINE Array(T x) {bcast(x);}. // loading ctor; STRONGINLINE Array(const T* ptr); {; #pragma omp simd aligned(ptr:Align); FOREACH vals_[k] = ptr[k];; }; // gathering ctor; template<class U>; STRONGINLINE Array(const T* base_ptr, const U& offsets); {; #pragma omp simd; FOREACH vals_[k] = base_ptr[offsets[k]];; }; /*; * Other traditional constructors (default, copy-ctor, move-ctor, etc) go here; */. // **** ACCESSORS **** //; STRONGINLINE T& operator[] (size_t k) {return vals_[k];}; STRONGINLINE T operator[] (size_t k) const {return vals_[k];}. // **** MATH OPERATORS **** //; STRONGINLINE Array& operator= (const Array& rhs); {; #pragma omp simd; FOREACH vals_[k] = rhs.vals_[k];; return *this;; }. STRONGINLINE Array& operator+= (const Array& rhs); {; #pragma omp simd; FOREACH vals_[k] += rhs.vals_[k];; return *this;; }; STRONGINLINE Array operator+ (const Array& rhs) const { return Array(*this)+=rhs; }; ; /*; * Many other operators go here.; */; };. // Common math function overloads; template<class T>; STRONGINLINE T vmax(const T& a, const T& b); {; T res;; #pragma omp simd; for(size_t k=0; k<T::Size; ++k); res[k] = (a[k]>b[k])? a[k] : b[k];; return res;; }. #undef FOREACH; ```; There are other (bet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:7464,load,loading,7464,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['load'],['loading']
Performance," the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://gith",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:8415,cache,cache,8415,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance," the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:1584,optimiz,optimization,1584,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['optimiz'],['optimization']
Performance," the instructions) processing multiple edges at the same time can therefore result in race conditions where multiple threads try to update the data of the same point.; There are 3 ways to address this:; - **Coloring**: Edges are colored (grouped) such that edges of the same color have no risk of race conditions, i.e. each endpoint is referenced only once per color (this definition gives you the basis of a greedy algorithm to color edges).; - **Scatter to gather transformations**: Edge quantities (e.g. fluxes) are computed and stored on one pass (i.e. we read from 2 locations and write to 1), on a second pass, over points, we reduce (e.g. sum) the edge quantities for each point, again a gather access pattern. It may also be possible to convert the entire algorithm to a loop over points instead of edges.; - **Atomic operations or locks**: Here when a thread wants to write to a memory location it either needs to do so atomically (this is essentially an operations that always goes through main memory and forces cache coherency) or it needs to acquire a *lock* for the point it is writing to, if it fails to acquire the *lock* (because another thread has it) it needs to wait. None of these is without drawbacks.; - **Coloring** reduces temporal locality, edges are sorted in increasing order of the point indices to reduce cache misses, this means small groups of contiguous edges will share the same ""iPoint"", coloring single edges destroys this. Furthermore coloring either requires edges to be re-sorted by color, or if the edge indices of each color are instead kept in arrays, performance will suffer due to increased indirection which confounds the hardware pre-fetcher.; This can be mitigated to some extent by coloring groups of edges, groups of edges of the same color can be processed simultaneously, but within each group edges need to be processed serially. However grouping will reduce how much parallelism can be exploited within each color.; - **Gather to scatter** will in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:4852,cache,cache,4852,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['cache'],['cache']
Performance," the marker, i.e. the list of neighbor vertices for each vertex. In the previous version of the code, two vertices were considered ""neighbors"" if they were connected through an edge of a volume element (""volume neighbors""). We propose to consider vertices as ""neighbors"" only if they are connected through an edge of a surface element (""surface neighbors""). These two notions are equivalent for smooth surfaces and clearly surface neighbors are always volume neighbors as well. However, at surfaces with sharp edges, two vertices can be volume neighbors without being surface neighbors. This happens when the edge of the volume element connecting the vertices lies inside the domain. `CInterpolator::ReconstructBoundary` is called from `CSlidingMesh::SetTransferCoeff`, which then hands the connectivity structure to `CSlidingMesh::Build_3D_surface_element`. The latter function forms a circular ordering of the neighbors of each vertex s: e.g. if there are four neighbors a,b,c,d of s with connectivity a-b,c-d,b-c,a-d then it performs an iteration over e.g. a-b-c-d. If we understand ""neighbors"" as ""surface neighbors"", the neighbors of any vertex s can be brought into a ""closed circle"" or ""open chain"" ordering where each of them is neighbor only to its direct predecessor and successor. This is not true for the volume neighbor relation however, and in this case the iteration might enter an infinite loop e-a-b-c-d-a-b-... (until the access to `element[ iElementNode ]` segfaults). That's approximately how we (@maxaehle,@mcmorelli,@BeckettZhou,@EduardoMolina) noticed the bug.; ; ## Related Work; #1344 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346:1184,perform,performs,1184,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346,1,['perform'],['performs']
Performance," then combined in a final `min(2, max/max, min/min)` to which the limiter function is applied (this would also be applicable to Venkatakrishnan-[Wang] limiters).; This is equivalent to the edge-loop, if statements are not required as due to cells being closed, if the positive projection is not zero, the negative one will also not be zero, therefore it is correct to always evaluate both ratios.; This algorithm only needs min and max neighbors as small local variables instead of large global ones due to the way those values are determined. This is where the memory from the extra adjacency information is recovered. Like @economon said, fusing the gradient kernel with the limiter kernel is trivial with these point loops, and I do not think it affects readability much since one can clearly tell ""what is what"" (I will not put it here but it really is a matter of copy paste), including the boundaries could be a bit more challenging, but I will give performance number nevertheless. **Performance summary**. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed 1 core** | 1.0 | 1.75 | 1.25 | 2.0 |; | **Speed 4 cores** | 2.45 | 2.7 | 4.5 | 7.0 |. The basic point version does not lose to edge based because, contrary to gradients, it does not require duplication of computations while benefiting from sequential access to gradients.; Again the point-based implementation does really well in parallel, limiters are more compute intensive and so the scaling is almost perfect.; For reference, limiters are 1.9 times more expensive to compute than gradients with the reference edge version. With point loops, SIMD, and in parallel, gradients and limiters cost the same. If we consider the combined cost of gradients and limiters, and compare the scalar ""edge+edge"" with the SIMD ""point+point"" and ""fused point"" we get:. | G+L Approach | Edge+Edge | Point+Point | Fused Point |; | ---- | ---- | ---- | ---- |; | **Speed 1 core** | 1.0",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:10217,Perform,Performance,10217,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,1,['Perform'],['Performance']
Performance," to SU2 in one of our branches. >@pcarruscag; >(...) being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD. (...). >@EduardoMolina; >(...) When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2.; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. (...). >@pcarruscag ; >(...) That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. (...). >@economon ; >I would add one practical comment for consideration: it is worth checking whether the main restriction we have is related to approximations in the Jacobian that limit the effective CFL we can use or whether the convergence of the linear solver itself is a problem (speed or complete lack of convergence). A quick test without resorting to another library is to increase the fill-in for ILU-preconditioned GMRES, which is very expensive/slow but should converge difficult problems, and to check how high we can take the CFL when allowing each nonlinear iteration to converge to a tight tolerance in the linear solver, say 1e-14 (you can output the linear solver residuals to verify convergence). If we can take the CFL higher with a more performant linear solver, then it could be worth the effort to try other options.; >If the CFL must remain low for stability, then perhaps we should look at the quality of the Jacobians we construct to see if we can improve, or even try exact Jacobians with AD if we can afford it. A more advanced CFL ramping strategy could also be helpful here to get us closer to a solution before trying to aggressively converge. I think that is everyone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460853218:3877,perform,performant,3877,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460853218,2,['perform'],['performant']
Performance," to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @talbring ; - I already started adding the mesh solver, numerics and transfer functions in separate files as discussed in #583 and already started in #725. For clarity and ease of merging, only new classes are split so far, but I will probably start splitting other structures soon in PRs to come. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:1779,optimiz,optimization,1779,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['optimiz'],['optimization']
Performance," using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via <a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with sl",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1335,cache,cache,1335,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance," way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2670,Perform,Perform,2670,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,4,"['Perform', 'optimiz']","['Perform', 'optimization']"
Performance, whether make supports nested variables... yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes; checking for ranlib... ranlib; checking whether we are using the GNU C++ compiler... (cached) yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... (cached) yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... (cached) gcc3; checking for python... /usr/bin/python; checking for python version... 2.7; checking for python platform... linux2; checking for python script directory... ${prefix}/lib/python2.7/site-packages; checking for python extension module directory... ${exec_prefix}/lib64/python2.7/site-packages; checking for python2.7-config... /usr/bin/python2.7-config; checking python include flags... -I/usr/include/python2.7 -I/usr/include/python2.7; checking how to run the C preprocessor... /usr/lib64/mpich/bin/mpicc -E; checking for grep that handles long lines and -e... /usr/bin/grep; checking for egrep... /usr/bin/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes;,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:4142,cache,cached,4142,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['cache'],['cached']
Performance,"# Describe the bug. **Issue**; The memory usage of SU2_CFD continuously grows over time and is most noticeable when writing out files at high frequency. This caught my attention when cluster jobs with higher output frequency were consistently exceeding memory limits after a certain amount of time, leading to the job being killed. The same configuration with a lower output frequency can run significantly more iterations without exceeding limits. I may be missing something, but it seems like there is a potential memory leak dependent on the output frequency, which I've documented in this report. **Expected**; Memory usage remains steady over time and does not significantly change with output frequency. **Local tests**; I was able to reproduce the issue locally on a workstation using the [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012), whereby all 2200 time iterations are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:954,perform,performed,954,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['perform'],['performed']
Performance,"# Import issues. In Python 3, relative import behaviour changes.; In Python 2, ""import module"" loads first local module, then system module. In Python 3, it is the opposite. ## Import patterns in SU2 code. If we consider, to simplify, these generic packages:; `package1/p1m1.py`; `package1/p1m2.py`; `package1/__init__.py`. `package2/p2m1.py`; `package2/__init__.py`. In SU2 code we find these patterns:. **Pattern 1**; `package1/__init__.py`; contains. ``` python; import p1m1; import p1m2; ```. These instructions are useless as it is the common behaviour of package.; If a `__init__.py` is defined, I can do from package1 import p1m1 or import package1.p1m1. Do you know why this happens ? Is there an historical reason or other ?; For example, in [`SU2_PY/SU2/__init__.py`](https://github.com/su2code/SU2/blob/master/SU2_PY/SU2/__init__.py) or [`SU2_PY/SU2/mesh/__init__.py`](https://github.com/su2code/SU2/blob/master/SU2_PY/SU2/mesh/__init__.py). **Pattern 2**; `package1/__init__.py`; contains. ``` python; from p1m1 import f; ```. **Pattern 3**; `package1/p1m1.py`; contains. ``` python; from ..p1m2 import f; ```. **Pattern 4**. ``` python; import cPickle as pickle; ```. ## Solution. I suggest these solutions:. **Pattern 1**; delete imports. **Pattern 2**; replace `from p1m1 import f` with `from .p1m1 import f` . See also next solution. **Pattern 3**. This is OK. Another approach is to always use absolute imports, for example. ``` python; from ..p1m2 import f; ```. becomes. ``` python; from package1.p1m2 import f; ```. Result is the same except that it is recommended in [PEP8](https://www.python.org/dev/peps/pep-0008/#id20) but first approach is ok too.; I can do it if you want. **Pattern 4**; Py3 pickle now manage both accelerated cPickle and pure python pickle; See https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.; So replace it with. ``` python; if sys.version_info.major > 2:; # Py3 pickle now manage both accelerated cPickle and pure python pickle; # S",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-197397273:95,load,loads,95,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-197397273,2,['load'],['loads']
Performance,"# Patching CVE-2007-4559. Hi, we are security researchers from the Advanced Research Center at [Trellix](https://www.trellix.com). We have began a campaign to patch a widespread bug named CVE-2007-4559. CVE-2007-4559 is a 15 year old bug in the Python tarfile package. By using extract() or extractall() on a tarfile object without sanitizing input, a maliciously crafted .tar file could perform a directory path traversal attack. We found at least one unsantized extractall() in your codebase and are providing a patch for you via pull request. The patch essentially checks to see if all tarfile members will be extracted safely and throws an exception otherwise. We encourage you to use this patch or your own solution to secure against CVE-2007-4559. Further technical information about the vulnerability can be found in this [blog](https://www.trellix.com/en-us/about/newsroom/stories/research/tarfile-exploiting-the-world.html). If you have further questions you may contact us through this projects lead researcher [Kasimir Schulz](mailto:kasimir.schulz@trellix.com).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1847:388,perform,perform,388,https://su2code.github.io,https://github.com/su2code/SU2/pull/1847,1,['perform'],['perform']
Performance,"## **BUG DESCRIPTION**. ## **Flow scenario**; The following 3D-centrifugal impeller was designed and the flow field simulated. The aim was to optimize the blade leading edge with respect to outlet static pressure (_please note that the mesh is rotating_):. ![Screenshot (157)](https://user-images.githubusercontent.com/96534491/236707270-c9de2899-1a72-4876-975c-eabaec826c4f.png). The mesh is deliberately coarse being the intention to firstly perform the simulation utilizing Euler's convective scheme. ; Subsequently, the flow field is computed correctly and the solution is converged. The solution was obtained setting up the turbomachinery simulation options available in SU2. After this initial procedure the FFD Box was successfully generated ( FFD_DEGREE = 2,2,2 ) and attached to the domain as explained in the tutorials ( *using SU2_DEF* ). The FFD box appears as follows:. *FFD box edges: green ; FFD box control point: yellow; There is no intersection between FFD edges and periodic boundaries*. ![Screenshot (158)](https://user-images.githubusercontent.com/96534491/236707553-92fb9e5a-3808-4ea0-a02e-43b574de44c0.png). It was intended to operate each SU2 module manually: . 1. **SU2_DEF** -> FFD box generation; 2. **SU2_CFD** -> flow field computation; 3. **SU2_CFD_AD** -> adjoint solution; 4. **SU2_DOT_AD** -> gradient calculation; 5. **SU2_DEF** -> shape deformation. ## **Shape deformation test**; Before the actual gradients computation it was preferred to perform a deformation test with the presented settings: . % ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%. DV_KIND= FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT; %; % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= ( BLADE1 ); %; % Parameters of the shape deformation ; % 	- FFD_CONTROL_POINT ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp ); %; DV_PARAM= ( BLADE_BOX, 0, 0, 0, 1.0, 0.0, 0.0 ); ( BLADE_BOX, 0, 1, 0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025:142,optimiz,optimize,142,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025,2,"['optimiz', 'perform']","['optimize', 'perform']"
Performance,"## Motivation; Fundamental bottlenecks exist for industrial adoption of high-fidelity physics codes with fully coupled discrete adjoint sensitivity analysis. These bottlenecks include a lack of flexibility, modularity, and robustness of the computational tools, as well as the potential startup development costs needed to implement and verify the MDAO features. The purpose of this work is to facilitate the coupling of SU2 with external structural codes (e.g. NASTRAN, TACS, Airbus structural suite Lagrange) for gradient-based aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the deve",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:27,bottleneck,bottlenecks,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,3,"['bottleneck', 'optimiz']","['bottlenecks', 'optimization']"
Performance,"## Proposed Changes. Changes the loading of zlib and szip libraries from static (.a) to dynamic (.so).; Suggested by @aa-g at https://github.com/su2code/SU2/issues/1568#issuecomment-1083104460. ## Related Work. None. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1632:33,load,loading,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1632,1,['load'],['loading']
Performance,"## Proposed Changes. I have refactored some of the viscous residual calculation. This should not change any of the underlying numerics. + The stress tensor due to molecular viscosity and turbulence is now separated out from the residual calculation. This removes the implicit assumption that eddy-viscosity models are used. Now other models, such as explicit algebraic stress models, can be added.; + The ""heat flux vector"" was also separated out from the residual calculation.; + The Jacobian calculation for `CAvgGrad_Flow` has been rewritten so as to be more readable.; + The three main viscous numerics classes (`CAvgGrad_Flow`, `CGeneralAvgGrad_Flow`, and `CAvgGradInc_Flow`) are now all children of a base class, `CAvgGrad_Base`.; + Instead of two sets of classes for the viscous residual, normal and ""corrected"", I made a boolean switch in the constructor. This eliminates the duplication between normal and ""corrected"" viscous numerics. There's definitely some more work that could be done to generalize the base class and optimize the speed, but I'm content with the code for now. ## Related Work. This piggybacks off of PR #612, though the two PRs are separate and distinct. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626:1031,optimiz,optimize,1031,https://su2code.github.io,https://github.com/su2code/SU2/pull/626,1,['optimiz'],['optimize']
Performance,"## Proposed Changes. Optimize the SU2-NEMO solver initialization time . ## Related Work; None that I remember. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Overview. I have optimized the initialization time of SU2-NEMO. You can check the time comparison between the old and new version at the table below. ![image](https://user-images.githubusercontent.com/29612207/127698090-e4924a77-a5f0-40fc-90eb-ce218c413aaf.png). Some steps that I have done:; ### CNEMOEulerVariable.cpp ; * Removed constant calculations inside a for loop; * Passed the Solution_Old = Solution to outside the loop. ### CNEMOEulerSolver.cpp; * Removed the ""for"" loop that fills the Nodes Primitive Fields (already done in the Preprocessing phase); * Removed the error counter (already done in the Preprocessing phase). ### CSolverFactory.cpp; * Removed the Preprocessing step after the CNEMOEulerSolver instantiation (**This is done before the start of the iterative process, regardless. Additionally, the Navier-Stokes do not have any preprocess phase after the instantiation, why is that ?** ). The residuals may slightly different, because of the removal of the for loop inside CNEMOEulerSolver.cpp. Notice that inside that for loop, the soundspeed is obtained using the function FluidModel->GetS",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1340:21,Optimiz,Optimize,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340,2,"['Optimiz', 'optimiz']","['Optimize', 'optimized']"
Performance,"## Proposed Changes. The goal of this PR is to establish AD support for the OpenMP features of SU2. AD support in SU2 is provided by [CoDiPack](https://www.scicomp.uni-kl.de/software/codi), which is coupled with [MeDiPack](https://www.scicomp.uni-kl.de/software/medi) for the differentiation of MPI. OpenMP support is added by coupling it in addition with [OpDiLib](https://www.scicomp.uni-kl.de/software/opdi) so that all in all, hybrid parallel AD is achieved. This involves at least the following steps.; 1. Incorporate OpDiLib into the AD workflow.; 2. Establish thread-safety and parallelization of the discrete adjoint code.; 3. Testing of hybrid parallel adjoints.; 4. Performance optimizations. ## Related Work. OpenMP features introduced in #789, #824, #830, #834, #843, #861, #895, #975, #1178, possibly others. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1214:676,Perform,Performance,676,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214,2,"['Perform', 'optimiz']","['Performance', 'optimizations']"
Performance,"## Proposed Changes. This PR adds the following features:; - New pressure inlet BC (specify total pressure) for the incompressible solver; - New mass flow outlet BC (specify target mass flow) for the incompressible solver; - Added outlet BC values to multipoint optimization options in python. It is now required to specify the type for each inlet and outlet BC in the incompressible solver. A descriptive error is thrown if this is not the case. For two inlet and outlets with different types, you would specify it as:. INC_INLET_TYPE= PRESSURE_INLET VELOCITY_INLET; INC_OUTLET_TYPE= MASS_FLOW_OUTLET PRESSURE_OUTLET. and the type order corresponds to the order of the markers given in MARKER_INLET and MARKER_OUTLET, respectively. An inviscid nozzle test case has been added to demonstrate the new features. Will update residuals in regressions once reported. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/621:262,optimiz,optimization,262,https://su2code.github.io,https://github.com/su2code/SU2/pull/621,1,['optimiz'],['optimization']
Performance,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:100,optimiz,optimization,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,8,['optimiz'],"['optimization', 'optimize']"
Performance,"## Proposed Changes. This is a quick draft for a module framework. Note that this is a draft and this is just to get some ideas and comments whether something like that would be useful. ### Motivation. Right now we have a lot of routines scattered throughout the code that essentially functionally belong together as they perform the same overall task. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/982:322,perform,perform,322,https://su2code.github.io,https://github.com/su2code/SU2/pull/982,1,['perform'],['perform']
Performance,"## Proposed Changes. This is the modified version of SU2 code that supports CUDA usage for the FGMRES solver and the use of NVBLAS. The main focus is the offloading of the Matrix Vector Product in the FGMRES solver to the GPU using CUDA Kernels. This implementation shows promise with marginally better run times (all benchmarks were carried out with the GPU Error Checking switched off and in debug mode to check if the correct functions were being called). The use of NVBLAS is secondary and while functionality has been added to make it usable, it is not activated as it doesn't cause an appreciative increase in performance. ## Compilation and Usage. Compile using the following MESON Flag; ```; -Denable-cuda=true; ```; And activate the functions using the following Config File Option; ```; ENABLE_CUDA=YES; ```. ## NOTE ON IMPLEMENTATION. I've decided to go with a single version of the code where the CPU and GPU implementations co-exist in the same linear solver and can be disabled or switched using a combination of Meson and Config File options. This is why I have defined three classes - one over-arching class that is named CExecutionPath that has two child classes - CCpuExecution and CGpuExecution. These child classes contain the correct member function for each path - CPU or GPU functioning. . All of this could also be easily achieved with an if statement that switches between the two - but that particular implementation will access and run the statement for each call. In our case once a Matrix Vector Product object is created, it will immediately know whether to use CPU or GPU mode of execution. . Recommendations are most welcome to improve or make this implementation better. ## PR Checklist. Warning Levels do come (only at level 3) but they are all of the following type. ```; style of line directive is a GCC extension; ```. The documentation for compiling with CUDA needs to be added by forking the SU2 site repo and adding the relevant changes to it? Or do I need to c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346:616,perform,performance,616,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346,1,['perform'],['performance']
Performance,"## Proposed Changes; * Allows direct flow computations in shape_optimization.py to run from given restart solution for unsteady optimization. ; All you have to do is to copy your restart files e.g. `restart_flow_00008.dat` and `restart_flow_00009.dat` in the directory of your `.cfg` and `.su2` (mesh) file and set the corresponding options:; `RESTART_SOL=YES`; `RESTART_ITER=10` (in this example). ; The `shape_optimization.py` script will use this direct restart file for each design. This means, the direct computation will be started from iteration 10 and will run up to the final iteration. The adjoint will run from the final iteration, but stop at the iteration of the restart file. * `direct_differentiation.py` now also accepts restart files in the same manner. * `SENSITIVITY` is now a default field in `VOLUME_OUTPUT`, if the computation mode is `DISCRETE_ADJOINT`. ## Related Work; Issue #909. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/964:128,optimiz,optimization,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/964,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; - During time-averaging, the weighted sum over previous timesteps is re-used to quickly update the time-average during inner iterations.; - Square-windowing now does not save the entire sample history, which should eliminate performance degradation when time-averaging is performed over many timesteps. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1545 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. (UnitTest); - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1548:317,perform,performance,317,https://su2code.github.io,https://github.com/su2code/SU2/pull/1548,2,['perform'],"['performance', 'performed']"
Performance,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes a bug that I introduced in #598. When the energy eqn. is not active, the temperature is not written to the restart file, but this was not taken into account for the restart loader. This corrects the restart loader to read the correct number of variables when energy is inactive. I have also taken the opportunity to improve the regression cases for the incompressible solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Thanks to @TobiKattmann and @talbring for finding this so quickly!. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/601:273,load,loader,273,https://su2code.github.io,https://github.com/su2code/SU2/pull/601,2,['load'],['loader']
Performance,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR changes the convergence criteria for mesh deformation with SU2_DEF. The existing tolerance is related to the smallest cell in the grid, but this results in a criteria that depends on the grid scale and can be hard to tune. Instead, we switch to a standard relative residual reduction criteria for the linear solver during deformation, which brings it in line with other solvers. The change will break existing config files with 'DEFORM_TOL_FACTOR', so a clear error message has been added informing users of the change. Changes to the su2code.github.io repo for the tutorial configs need to be merged simultaneously. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/623:319,tune,tune,319,https://su2code.github.io,https://github.com/su2code/SU2/pull/623,1,['tune'],['tune']
Performance,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains a new routine to compute 3 mesh quality metrics (similar to what you may find in commercial codes): orthogonality angle, cell aspect ratio, and cell volume ratio. It replaces an old routine that was not being used. Note that this is for the **dual control volumes of the finite volume solver** (not the primal elements), so the values are vertex-based. The min & max of the 3 metrics are reported to the console during preprocessing, and if you would like the fields to be written to the viz. files, you can use . ```; WRT_MESH_QUALITY= YES; ```. For now, it is just for sanity checks. In the future, we can use this as an optimization objective/constraint, for automatically improving grids (r-adaptation), or as part of advanced limiters/numerical methods. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778:734,optimiz,optimization,734,https://su2code.github.io,https://github.com/su2code/SU2/pull/778,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is joint work with @MicK7. The CGNS mesh reader (ADF format, serial) has been rewritten to improve performance, and the underlying CGNS library has been updated to v3.4.0, along with some other modifications for mixed element grids. This new version is capable of running meshes > 100 million cells. I was able to run an X-Fine mesh for the high-lift CRM, which contains 210 million grid nodes and 400 million cells. . If folks have resources to try, please use the attached config file and meshes here: . https://hiliftpw-ftp.larc.nasa.gov/HiLiftPW3/HL-CRM_Grids/Committee_Grids/B3-HLCRM_UnstrHexPrismPyrTet_PW/FullGap/. [turb_hl_crm.txt](https://github.com/su2code/SU2/files/3388290/turb_hl_crm.txt). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #727 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728:198,perform,performance,198,https://su2code.github.io,https://github.com/su2code/SU2/pull/728,1,['perform'],['performance']
Performance,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is one for v7 and needs some testing. This PR contains a complete refactoring of the point-to-point MPI infrastructure and an entirely new implementation of the periodic BC for the FV solvers. For the MPI refactoring:; - All calls are abstracted to parent classes (geometry, solver, matrix), meaning we will remove all Set_MPI_* routines.; - Point-to-point comms are all non-blocking calls that have been separated into InitiateComms() & CompleteComms(), so that, in theory, they can be overlapped with computation where possible. It would also be possible now to group the comms into larger messages easily. These optimizations are a next step (not for this PR).; - Persistent communication schedules and memory are used throughout the calculation.; - Results are the same, this is just a refactoring to improve performance, scalability, etc. while making the code much simpler and separating the periodic part. For the periodic BC:; - No longer need a preprocessing with SU2_MSH - use the original grid and just call SU2_CFD.; - Adjacent periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than P",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:714,optimiz,optimizations,714,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,3,"['optimiz', 'perform', 'scalab']","['optimizations', 'performance', 'scalability']"
Performance,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This PR introduces a tabulated chemistry approach. The focus for this PR is on laminar and premixed flames in the incompressible framework, but it is generalizable to non-premixed and partially premixed flames, turbulent flames and compressible flames. ; In this approach, 2 transport equations are solved for progress variable and total enthalpy. The lookup table retrieves quantities (temperature, density, viscosity, diffusivity, source terms, etc) as a function of these independent control variables. 2 additional independent transport equations are solved for the species NO and CO. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## Nijso Checklist; - [ ] Replace bloated initialization (burnt and unburnt region) with python wrapper; - [ ] Check Conjugate Heat Transfer; - [ ] Check adjoint optimization workflow; - [x] Check axisymmetric setup; - [x] Check diffusivity; - [x] Check primal restart; - [x] Check adjoint restart; - [x] Adjoint comparison with FD. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826:991,optimiz,optimization,991,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; *This branch includes steady state turbomachinery features like multi-zone mixing plane, pressure ramps and rotations ramps essential for convergence. In additions, multi-zone performance computations with screen output is also implemented here.*; . ## Related Work; * The code now follows the same path as that of fluid driver, CTurbomachineryDriver will be removed after verification. There is some implementation of boost currently, it will be re-coded soon.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. *Please note, this is a draft pull request. I wish to get more comments on the section of code which are working like, mixing plane and performance computations. Config, tutorial and comments will be updated follow soon after.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1316:197,perform,performance,197,https://su2code.github.io,https://github.com/su2code/SU2/pull/1316,2,['perform'],['performance']
Performance,"## Proposed Changes; 1. Fix preaccumulation issues with `RealReverseIndex`.; 2. ~~Fix~~ Identify issues regarding index reuse and partial tape evaluations.; 3. Add regression tests for hybrid parallel AD (subset of parallel_regression_AD).; 4. Re-enable parallel preaccumulation.; 5. Shared reading optimizations. ## Related Work; continues #1284. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294:299,optimiz,optimizations,299,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294,1,['optimiz'],['optimizations']
Performance,"## Proposed Changes; @maxaehle and I analyzed SU2 with `gcc` with the thread sanitizer enabled and fixed various race conditions both in hybrid parallel and hybrid parallel AD code. The thread sanitizer records of the hybrid regression tests and hybrid regression AD tests are clean now. ## Related Work; #1384, this PR works towards fixing it. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1679:113,race condition,race conditions,113,https://su2code.github.io,https://github.com/su2code/SU2/pull/1679,1,['race condition'],['race conditions']
Performance,"## Proposed Changes; A differentiable maximum VM stress function for optimization.; Simplifies the ""DoubleArray"" option to avoid one array of default values and another of actual values. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1176:69,optimiz,optimization,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; Addition and cleanup of isothermal catalytic wall boundary, integration with rest of code. Code optimization of catalytic wall routines, removal of array allocations. Submitting this draft PR primarily to get comments on approach, style, not looking to PR into develop quite yet. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1417:117,optimiz,optimization,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/1417,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; Introduction of new options in the config. file.; Introduction of an additional input file that contains the propeller data.; Introduction of additional c++ functions.; Addition of code lines to existing functions preserving the original actuator disk model. ## PR Checklist; - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027:75,load,load,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027,1,['load'],['load']
Performance,"## Proposed Changes; Adds epistemic uncertainty quantification capabilities for the SST turbulence model. Details on methodology, implementation, and performance on test cases, are available here: https://arxiv.org/abs/1803.00725; . ## Related Work; NA. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570:150,perform,performance,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/570,1,['perform'],['performance']
Performance,"## Proposed Changes; Changed the wall distance calculation to calculate the distance to the nearest element rather than calculating the distance to the nearest node. This significantly improves the performance of turbulence models for meshes where the mesh doesn't grow perpendicular to the wall. This pull request also contains a simple improvement to the AD recording in CADTElemClass::DetermineNearestElement that significantly reduces memory usage when running the Discrete Adjoint. . This will likely break any regression test that requires a wall distance calculation, i.e. any test that has a turbulence model. Is there a easy way of changing the regression test values that doesn't require manual changing of the values? . ## Related Work; NA. ## PR Checklist. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/604:198,perform,performance,198,https://su2code.github.io,https://github.com/su2code/SU2/pull/604,1,['perform'],['performance']
Performance,"## Proposed Changes; Changed the wall distance calculation to calculate the distance to the nearest element rather than calculating the distance to the nearest node. This significantly improves the performance of turbulence models for meshes where the mesh doesn't grow perpendicular to the wall. This pull request also contains a simple improvement to the AD recording in CADTElemClass::DetermineNearestElement that significantly reduces memory usage when running the Discrete Adjoint. This will likely break any regression test that requires a wall distance calculation, i.e. any test that has a turbulence model. Is there a easy way of changing the regression test values that doesn't require manual changing of the values?. (I mistakenly submitted the previous PR to merge with master) . ## Related Work; NA. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605:198,perform,performance,198,https://su2code.github.io,https://github.com/su2code/SU2/pull/605,1,['perform'],['performance']
Performance,"## Proposed Changes; Couple efficiency/functionality improvements to the topology optimization implementation as detailed in TestCases/fea_topology/config.cfg. Edit: This requires c++11 so it will have to go after the PR that enables it. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/752:82,optimiz,optimization,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/752,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; Edge coloring tends to perform better than reductions for the hybrid parallel discrete adjoint because it uses less memory and enables the shared reading optimization. This PR puts two additional strategies in place for the discrete adjoint that help with obtaining a coloring before resorting to reductions, making successful coloring more likely. 1. If the requested edge color group size does not produce an efficient coloring, the maximum edge color group size that still produces an efficient coloring is chosen instead. This decision is made per rank.; 2. The discrete adjoint is allowed to use more colors. ## Related Work; work on hybrid parallel AD, like #2039. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2167:44,perform,perform,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/2167,2,"['optimiz', 'perform']","['optimization', 'perform']"
Performance,"## Proposed Changes; Enhanced the script discrete_adjoint.py such that in unsteady simulations; - one can execute an ""only adjoint"" run. This requires the solution files of a direct run (option -a True, default is -a False).; - it supports restart solutions. Configure the restart iteration in the config-file as one would in a restartet direct simulation. The script then runs the direct iteration until final time has been reached. Then the adjoint run is performed from final time up to the restart iteration. ; . ## Related Work; None. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/900:458,perform,performed,458,https://su2code.github.io,https://github.com/su2code/SU2/pull/900,1,['perform'],['performed']
Performance,"## Proposed Changes; Extend the MPI+Threads framework to CEulerSolver, CNSSolver and the CTurb***Solver(s).; I can finally start showing what this effort is about in pictures, this is how the relatively small benchmark case from #716 scales on Imperial's cluster:; ![image](https://user-images.githubusercontent.com/38071223/73931463-410d2780-48d0-11ea-855e-8dc87be153f1.png); **C** is for cores, **R** for MPI ranks, and **T** for OpenMP threads per rank. It may not look like much close to the ideal scaling but on 192 cores there are only 2.7k cells per core, and at different level of ""hybridisation"" this is what you get:; ![image](https://user-images.githubusercontent.com/38071223/73931985-3bfca800-48d1-11ea-8676-acef927a1ab5.png). As mentioned in #789 this behaviour is due to the worse quality / quantity of coarse grids that can be generated as the domain is decomposed further and further. **EDIT**; This is **finished for now**, apart from the odd routine that I will document below (and all the boundary conditions) every method called in `SingleGrid_Iteration` and `MultiGrid_Iteration` (including prolongations, smoothings and whatnot) is hybrid parallel.; Threads are started in those functions which means that for a RANS case we enter parallel regions only twice per iteration, this should give minimal overhead, I will update the scalability results once they converge (statistically :) ). I will document the changes by ""themes"" below. ## Related Work; Another snapshot of #824. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/861:1350,scalab,scalability,1350,https://su2code.github.io,https://github.com/su2code/SU2/pull/861,1,['scalab'],['scalability']
Performance,"## Proposed Changes; General cleanup / optimization of the orientation checks.; Plus I tried to detect distorted, rather than flipped, elements separately as the node swaps done in `CPrimalGrid::Change_Orientation` can only fix flipped elements, if they are ""twisted"" changing the orientation does not fix the element, e.g. vtk_pixel vs vtk_quad. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1030:39,optimiz,optimization,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/1030,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; Hello to everyone,; I added a tutorial for the actuator disk with variable load in the Tutorials repository.; Because of this I changed the regression tests moving from parallel_regression.py to tutorials.py.; Hope this could be useful. ## Related Work; PR from SU2 repository: #1027; PR from su2code.github.io repository: #44; PR from Tutorials repository: #4. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1128:96,load,load,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/1128,1,['load'],['load']
Performance,"## Proposed Changes; Hello to everyone,; I would like to propose a slight change in the Actuator Disk with Variable Load function. The change consists in re-writing the computation of the axial, radial and tangential force coefficients by developing the advance ratio term. In this way it is possible to eliminate the explicit dependence with the free-stream velocity.; Thanks to this change, it is possible to simulate the hover condition (free-stream velocity equal to zero) since we eliminated the free-stream velocity from the denominator.; ; In addition, we do not need the input of the advance ratio J, but the RPM of the propeller. This is a draft PR since a validation is needed and will be provided soon. Regards,; Ettore.; TAARG, University of Naples Federico II. ## Related Work; #1027 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1648:116,Load,Load,116,https://su2code.github.io,https://github.com/su2code/SU2/pull/1648,1,['Load'],['Load']
Performance,"## Proposed Changes; Hi Folks,; I would like your views on something. Many of the convective schemes we have are small variations of each other, and so I was thinking we can maybe have some intermediate numerics classes to make things a bit easier to maintain, quicker to compile etc.; So far I experimented with having a base class for central schemes, the ComputeResidual method is moved to this class and the children classes (Lax, JST, and JST_KE) only implement the artificial dissipation part specific to them.; Similarly AUSM+up(1/2) and SLAU(1/2) only differ in how the mass and pressure fluxes are computed so again a common base for these 4 could be devised. Isolating the computation of mass and pressure fluxes could be an interesting way to compute the Jacobians of these schemes in a hybrid way (currently the Roe Jacobian is used).; There is a very small performance penalty (maybe 1-2% for explicit solution methods) but my reason to be looking at the numerics in the first place is that with some small tweaks to the Jacobians we can probably run most schemes at higher CFL (namely increase the dissipative part of the Jacobian to make the system matrix more diagonal dominant) so for implicit solution methods there would be a speedup.; So, what do you think?; Cheers,; Pedro. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691:870,perform,performance,870,https://su2code.github.io,https://github.com/su2code/SU2/pull/691,1,['perform'],['performance']
Performance,"## Proposed Changes; Hi all,; ; a wrong index (iZone vs iInst) caused the SU2_SOL module to segfault if nZone > nInst. The geometry container is called with the wrong index in the `CBaseLineSolver::LoadRestart` routine. In SU2_SOL.cpp `&geometry_container[iZone][INST_0]` to `geometry_container[iZone]` are interchangeable, I just thought the 2nd formulation is used more often throughout the code. I cannot guarante though that it now runs for multiple instances, but as far as I know there is no such testcase. Testcase: The PR does not come with a Testcase which would catch the error in the future. In testcases started with parallel_computation.py the SU2_SOL module is called and fails for multizone cases (e.g. Jones_rst.cfg which I tested on) but if the residuals fit the case passes. That circumstance is not tackled in this PR but I heard that this is a know issue. I briefly chatted with @rsanfer about that and I offer my help if this is approached. . Additionally I fixed an error message to contain the correct config-option and added a --disable-tecio option to the preconfigure.py script as it is convenient for me as I build on compute nodes which cannot access the necessary X11 libraries and I couldn't get it to work with tecio enabled :( . If there are comments or requests for changing s.th. let me know. . Best Regards, Tobi. ## Related Work; Please see issue https://github.com/su2code/SU2/issues/568 for more information. There the error is described more detailed there. ## PR Checklist. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/572:198,Load,LoadRestart,198,https://su2code.github.io,https://github.com/su2code/SU2/pull/572,1,['Load'],['LoadRestart']
Performance,"## Proposed Changes; Hi all,; there is a little bug in the loading of the primal solution for the DiscAdjFluid Iteration for DualTimeStepping 1st order. ; 1. The solution for timestep n-1 should be loaded instead of n-2 -> I added an if statement there.; 2. solution_old is used as a temporary container for the freshly loaded solution. Then the solution which is currently at solution_time_n is pushed to be the ""main"" solution n+1. Afterwards the solution_old is put in the solution_time_n container -> That last step was wrong such that the loaded solution never gets involved. I used the regression test in disc_adj_rans/cylinder which covers DualTimeStepping 2nd order and reused it for a new Testcase which covers 1st order. ; For now, the .travis.yml has a different su2code/Testcases branch in it such that other are not hindered by this PR when running travis. If this PR is merged with the new Testcase, the TestCases repo has to be updated and the .travis.yml needs to be reverted. ; Let me know if adding a new TestCase is OK. I am aware that not every detail can get its own regression test. . I checked my changes against finite differences for that Testcase. I'll post the result below. Additionally I suppressed the output of .csv files in driver_structure.cpp for unsteady simulations if `WRT_CSV_SOL= NO` is set. . Regards, Tobi. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Nothing I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/554:59,load,loading,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/554,4,['load'],"['loaded', 'loading']"
Performance,"## Proposed Changes; I found two bugs that lead to crashes when trying to restart a shape optimization problem:. 1. The python code still uses the deprecated `has_key` function for dicts.; 2. If the default config file is used in the python scripts, then the aerodynamic coefficients aren't saved anywhere even if `aerodynamics` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/921:90,optimiz,optimization,90,https://su2code.github.io,https://github.com/su2code/SU2/pull/921,3,['optimiz'],['optimization']
Performance,"## Proposed Changes; I have been implementing for SU2 the radial basis function mesh deformation method with the selection of the control points using a greedy algorithm and a volume reduction technique to reduce the computational cost. The method can be used inside the shape optimization framework when calling SU2_DEF, keeping the standard ELA differentiated by codipack for the mesh sensitivity. ; References:; Abergo, Luca, Myles Morelli, and Alberto Guardone. ""Aerodynamic Shape Optimization Based on Discrete Adjoint and RBF."" Journal of Computational Physics (2023): 111951. M. Morelli, T. Bellosta, A. Guardone, Efficient radial basis function mesh deformation methods for aircraft icing, J. Comput. Appl. Math. (2021) 113492,. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1959:277,optimiz,optimization,277,https://su2code.github.io,https://github.com/su2code/SU2/pull/1959,2,"['Optimiz', 'optimiz']","['Optimization', 'optimization']"
Performance,"## Proposed Changes; I made this in micro steps and the commit messages are fairly detailed, so here I will give only the highlights. Every change is mathematically equivalent.; I claim performance improvements based on the type of cases I run (steady RANS implicit, elasticity), results may vary, so please give this a try. **Cleanup**; - Iterative smoothers (Jacobi, ILU, etc.) are now implemented in CSysSolve as one generic method with the same interface as the Krylov solvers.; - Dead code was removed from CSysMatrix (as requested in #653).; - Duplicated code, mostly dealing with block-block/vector multiplication, was merged.; - Row/column elimination tasks implemented in CSysMatrix (as requested in #658).; - Linelet uses fewer working variables.; - Make a lot of methods private (the diff of matrix_structure.hpp is not going to be pretty...). **Performance**; - Inlined small methods.; - No calls to ""Get/SetBlock"" when the block location is already known (helps ILU and LU_SGS).; - Block inversion done in one go instead of multiple Gaussian eliminations (which used to require repeated upper matrix transformations) (helps Jacobi, Linelet, and ILU).; - Inverted ILU diagonal blocks are stored during ""build"" for use in ""compute"". **Bugs**; - Linelet preconditioner was not working for multiple wall markers. **ToDo**; - I will try to make the MKL optimizations work for the discrete adjoint (I say try because it may require too much creativity with the templates...).; - Get some benchmarks (I don't want you to just take my word for it). ## Related Work; #650, #653, #658. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700:186,perform,performance,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/700,3,"['Perform', 'optimiz', 'perform']","['Performance', 'optimizations', 'performance']"
Performance,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/933:674,load,load,674,https://su2code.github.io,https://github.com/su2code/SU2/pull/933,1,['load'],['load']
Performance,"## Proposed Changes; Improvements and general cleanup / restructuring of CInterpolator and co. consisting of:; #### New features:; - Control of the RBF interpolation matrix sparsity via option `RADIAL_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:485,optimiz,optimized,485,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,3,['optimiz'],['optimized']
Performance,"## Proposed Changes; In some cases we use relative frame for rotor zone to perform URANS, e.g., in aeroelasticity analysis, we want the grid movement comes only from blade deformation. The problem is that the sliding plane in SU2 works only for absolute frame. In relative frame, the grid is not rotating, so the interpolation at sliding interface is not changed as time step is marching. The proposed changes rotate the sliding interface in accordance with physical time steps to perform interpolation. This function is activated only for relative frame. The grid itself is not rotating.; Currently, this is only implemented in CNearestneighbor class, other interpolation method should be changed as well in the near future. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2311:75,perform,perform,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/2311,2,['perform'],['perform']
Performance,"## Proposed Changes; Initialize the omp_partitions vector with the number of points, skip the for loop if the last partition has been calculated. A light-weight checker is added also to verify the partition vector, promote a warning or error message if necessary.; . ## Related Work; Fix #1667 Potential crash for the OpenMP multi-thread running. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1678:325,multi-thread,multi-thread,325,https://su2code.github.io,https://github.com/su2code/SU2/pull/1678,1,['multi-thread'],['multi-thread']
Performance,"## Proposed Changes; Let NdFlattener use a wrapped [MPI_Allgatherv](https://www.mpich.org/static/docs/v3.2/www3/MPI_Allgatherv.html) function which checks the number of participating MPI ranks. If there is only one, perform a simple copy operation instead. I hope that this fixes #1893, which I believe to be the result of a bug in MPICH. In my Ubuntu MPICH container, the `[NdFlattener]` test succeeds with these changes. . ## Related Work; #1893 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1897:216,perform,perform,216,https://su2code.github.io,https://github.com/su2code/SU2/pull/1897,1,['perform'],['perform']
Performance,"## Proposed Changes; Move more routines to the FVM flow solver base class.; At the risk of sounding like a broken record, one function means:; One test, one optimization, one debug, one fix.; Implementing new features by copy-paste-modify is like eating your legs to get to the end of a marathon, it ain't gonna work in the long run xD; Cut, Paste, Abstract, Survive. ## Related Work; #1044. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1177:157,optimiz,optimization,157,https://su2code.github.io,https://github.com/su2code/SU2/pull/1177,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; Optimization of the Preprocessing phase;; Inclusion of the Chapmann-Enskog option for Mutation++. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Performed. I have reduced almost by half the time of the preprocessing phase, leading to a ~10% less time per iteration. This was done by:; * Calculate dPdU, dTdU, dTvedU only for the implicit case; * Avoid the calculation of eve_min and eve_max using Mutation++. Instead, return nonphysical if the vibrational temperatures reach the specified minimum and maximum value. Additionally, I have included the option of using Chapmann-Enskog for the calculation of transport equations and thermal conductivity using Mutation++",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1343:21,Optimiz,Optimization,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343,2,"['Optimiz', 'Perform']","['Optimization', 'Performed']"
Performance,"## Proposed Changes; Plain vanilla approach to topology optimization, element-wise constant density parameterization and SIMP interpolation scheme. It is working nicely for 2D cases of moderate size (10 to 100k elements), over that the linear solvers will struggle.; Practical issues with the feature:; - Requires ad-hoc scripting to use with an optimizer, so far the L-BFGS-B from Scipy together with a penalty formulation has served me well. Technical issues with the implementation:; - Scalability. A filter is applied to the densities to avoid numerical issues such as hinges, and checkerboards, and to ensure minimum feature size and mesh independence. My implementation, although parallel, requires all ranks to get a copy of global information, namely the connectivity and the element centroid coordinates. The ranks get this in compact format, so it is not super expensive (100MB per rank per million hexahedrons) and definitely not an issue for the problem size the linear solvers and preconditioners can currently handle.; - Output. Currently this is done at every iteration of the adjoint solver into a file (only the master rank writes the file) mainly because I did not see an easy way to output element values using the output class, everything else is computed at the nodes. So not perfect but a nice feature to have (I think). Feedback is welcome on any of these issues (or others you see!). If all goes well (with my PhD) I will address these issues as I plan to use this for large-ish problems. I added an example case to explain the new options, the large files will be in the Testcases repo. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/595:56,optimiz,optimization,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/595,3,"['Scalab', 'optimiz']","['Scalability', 'optimization', 'optimizer']"
Performance,"## Proposed Changes; Problem: If a given displacement boundary was cut during partitioning the solver would give wrong results.; Reason: When ""de-singularizing"" the stiffness matrix the column was only being deleted by the rank that owned the corresponding node.; Fix: All ranks delete the column (and update the load vector). Before:; ![image](https://user-images.githubusercontent.com/38071223/53267067-619d9b00-36da-11e9-8feb-5e77d5c7f3ef.png). After:; ![image](https://user-images.githubusercontent.com/38071223/53267075-695d3f80-36da-11e9-93bf-2e18e2e649dc.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/658:313,load,load,313,https://su2code.github.io,https://github.com/su2code/SU2/pull/658,1,['load'],['load']
Performance,"## Proposed Changes; Recompute rho and h instead of reconstructing (for performance). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2356:72,perform,performance,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/2356,1,['perform'],['performance']
Performance,"## Proposed Changes; Similar to the quasi-Newton acceleration provided by `CQuasiNewtonInvLeastSquares`, the proposed toolbox class `CNewtonUpdateOnSubspace` performs a correction on adjoint solution updates by keeping track of past iterates. Here, they are used to identify eigenvectors with large eigenvalues which slow down the overall convergence and to form a (small) subspace basis from them. Each fixed-point solution update is then [projected onto that subspace and the projected part will be additionally corrected via a ""real"" Newton step (a.k.a. ""RPM"")](https://doi.org/10.1137/0730057) using the computational graph for precise derivative information. This preliminary result with one basis vector indicates that the procedure can be effective at very low additional cost (for n basis vectors, it mainly reduces to n scalar products of the current fixed-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics pro",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1217:158,perform,performs,158,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217,1,['perform'],['performs']
Performance,"## Proposed Changes; So I took a common method that folks use to converge multi physics problems expressed as fixed point iterations (the IQN-ILS) and applied it to the inner iterations of the discrete adjoint drivers (single and multizone), it seems to work well... I was having some issues when the primal solver does not converge so well for optimization edge cases, and this keeps the adjoint from diverging.; I'll post some results at some point. Other than storing a number of solution snapshots (20 seems like a good number) the overhead is minimal (and also provided you have Lapack/MKL, compile for OpenMP, with fast-math, and AVX support). ## Related Work; Already has #1015; Resolves #1021 ; Resolves #1025; Resolves #1029. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1020:345,optimiz,optimization,345,https://su2code.github.io,https://github.com/su2code/SU2/pull/1020,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; So far BC's were done by a single thread, this PR addresses that which required making all that code thread-safe. There is also some duplication-avoiding cleanup.; A batch of regression tests for hybrid parallel (compilation + execution) was added. Boundary conditions are perhaps the easiest places to introduce non-thread-safe code, due to the common pattern of writing into temporary arrays of CSolver (e.g. Solution_i), thus it becomes important to have some tests in place. ## Related Work; Continuation of #789, so far as compressible flow goes we now have ""full coverage"", the only major areas left out (that matter to scalability) are MPI and parts of the initial preprocessing. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/975:647,scalab,scalability,647,https://su2code.github.io,https://github.com/su2code/SU2/pull/975,1,['scalab'],['scalability']
Performance,"## Proposed Changes; The OptimalPropeller script provides the optimal load distribution along the propeller radius using only global parameters based on the inviscid theory of optimal propeller developed by Glauert. It also provides the actuator disk data file needed in input for the ""ACTDISK_TYPE = VARIABLE_LOAD"".; This script is useful in case the user would like to use this actuator disk model, but the propeller details are not available.; In this case, using global parameters (thrust coefficient, radius, hub radius, advance ratio, free-stream velocity and blades number), it allows the use of the model.; Input: interactive.; Output: ActuatorDisk.cfg, containing part of the SU2 .cfg file; ActuatorDisk.dat, containing the propeller load distribution to be read by SU2_CFD. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; #1027 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1070:70,load,load,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/1070,2,['load'],['load']
Performance,"## Proposed Changes; The flags 'WRT_VOLUME_OVERWRITE', 'WRT_SURFACE_OVERWRITE', and 'WRT_RESTART_OVERWRITE' are not working correctly. This commit fixes this.; ; The expected behavior is this:; The user specifies what kind of output files should be written using the OUTPUT_FILES flag. These output files can be volume or surface files for visualization like Tecplot or Paraview files, volumetric restart files to be used as initial conditions for another SU2 run, or mesh format files like CGNS or STL files.; Furthermore, the user can choose to not overwrite these files, but rather add the current iteration number to the file name and keep dumping such files during the calculation. This is done using the three WRT_*_OVERWRITE flags mentioned above. However, the current implementation in develop only works correctly for PARAVIEW_MULTIBLOCK and for RESTART type output files. This is because in the case of PARAVIEW_MULTIBLOCK, the additional file output using the iteration number in the filename, is performed in the switch case block directly. . For all other output files, the switch case block only generates the correct filename with the iteration number appended. After the switch block, it is (wrongly) checked if (and only if) the WRT_RESTART_OVERWRITE flag is set to NO. If so, the additional file is written. Therefore, this logic only works correctly for RESTART files (and PARAVIEW_MULTIBLOCK files, because for that format, the file dump is independent of the file dump after the switch block. . The proposed fix here introduces a local boolean (doWriteIterFile) that acts as a switch for the additional file dump. It is set in the switch case block and afterwards it is checked if this variable is true or false. Based on this value, the file dump is executed or not. Furthermore, the fix introduces and corrects some comments to make the function easier to understand. ## Related Work; The flags are already available in the develop branch as config options but they don't work a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2036:1008,perform,performed,1008,https://su2code.github.io,https://github.com/su2code/SU2/pull/2036,1,['perform'],['performed']
Performance,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/908:103,race condition,race conditions,103,https://su2code.github.io,https://github.com/su2code/SU2/pull/908,2,"['perform', 'race condition']","['performance', 'race conditions']"
Performance,"## Proposed Changes; The objective is to provide a natural (i.e. readable) way to write code that extracts all the performance modern CPU have to offer. As described in the last update of #789 this will require completely different numerics classes, also to address other inefficiencies they have. For now all centered schemes and plain Roe have been ""ported"" (this also adds JST with matrix dissipation).; Most of the auxiliary CNumerics functions were also ported as consequence (inviscid fluxes, Jacobians, and so on) and so implementing new schemes only gets easier. If you want to test this, the new numerics are called for Roe on ideal gas without low Mach corrections (enabled by option USE_VECTORIZATION=YES) and also for centered schemes.; To get good performance on gcc you need the following optimization flags:; `-O2 -funroll-loops -ffast-math -march=?? -mtune=??` Where ?? should be something with AVX (e.g. `haswell`, `skylake`).; There are AVX and AVX512 specific optimizations.; Also the OpenMP simd directive is used, at least on gcc this makes a difference (because it is stubborn at vectorizing) so -Dwith-omp=true when calling meson.py.; You can expect around 30% speedup +- 10% on problems that do not need a lot of linear solver iterations, or more on machines with AVX512. ## Related Work; #789. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1022:115,perform,performance,115,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022,4,"['optimiz', 'perform']","['optimization', 'optimizations', 'performance']"
Performance,"## Proposed Changes; There has been talk about using external solvers in SU2. I am especially interested in this as due to the ill-conditioned matrices I get in structural topology optimization a direct sparse solver will probably be required.; One tricky issue with using external solvers is their compatibility with the discrete adjoint. Luckily in the reverse mode we do not differentiate the solver, only the operation A^-1 * b. Nevertheless currently all CSysVectors and CSysMatrices use su2double which makes them incompatible with external libraries and slower than in direct mode.; To address this issue I want to template the required classes such that we have the option (but not be obligated) to have CSysMatrices of passivedoubles in the discrete adjoint.; Moreover, I want to do some refactoring to make CSysSolve a proper class instead of an aggregate of functions. Currently we instantiate a CSysSolve whenever we need to solve a system, I think it would be beneficial to keep CSysSolve as a member of the classes that use it, so that for example, working memory used by Krylov methods is allocated only once. Note: I am aware that @talbring started some work on this (and more) in the *feature_template_linear_solver* branch, I tried to pick up were Tim left of but it was too much (a lot changes in one year). I really like the refactoring he was doing and will try to bring as much as possible into this, but I need to do it in smaller steps. Now this PR deals with some of the aforementioned refactoring, namely:; - CG, BCGSTAB, and GMRES have their working vectors and matrices as members of CSysSolve and allocate them only on the first call.; - CSysSolve is now a member of CSolver and CVolumetricMovement.; - BCGSTAB uses two fewer vectors than before and the ""p"" and ""v"" vectors are initialized to 0 instead of ""b"" (I think this was a small bug?).; - CSysSolve takes a ""mesh deformation"" flag at construction so that Solve can be called by CSolver and by CElasticityMovement, b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650:181,optimiz,optimization,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/650,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; There was a bug in the CTurbSolver::ComputeUnderRelaxation() that would return a negative UR if the change in solution was too negative (less than the allowable decrease), which could cause the solution to head in the wrong direction. I'm not really sure why the turbulent solver version of this function was written differently than the flow solver (maybe the intention was to have a different allowable increase and decrease but they ended up being the same in the end?), but I changed it to make it consistent with the flow solver version. Also, as I mentioned in #1036, the UR parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. While on the topic of UR, I was wondering what the community's thoughts are on changing the SST models to use UR instead of solution clipping. The limits seem somewhat arbitrary to me (is there a ref?), and the tests I've done on my mesh adaptation cases have performed well where I've replaced clipping with UR. I realize this is a very limited dataset so if anyone has any strong opinions of why we should be clipping, let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1057:1010,perform,performed,1010,https://su2code.github.io,https://github.com/su2code/SU2/pull/1057,1,['perform'],['performed']
Performance,"## Proposed Changes; There were some merge issues in the previous pull request that were causing lots of issues in #2209. Hopefully this is resolved here. . Update to the interface initialisation to enable both mixing plane and sliding interfaces within the same turbomachinery simulation. Addition of mass flow outlet to Giles BC. ## Related Work. This issue solves a problem reported by a number of users, when simulating radial turbomachinery cases a second-order accurate solution cannot be achieved in some cases when using mixing plane interfaces. This is due to circumfrential averaging in regions where the flow exhibits large circumfrential nonuniformity and/or interspace gaps between adjacent blade-rows/zones small. This issue has been reported by @LorenzoFabris, in a presentation at the SU2 Conference 2022 ""Performance Analysis and Shape Optimization of a Radial Compressor with the Open-Source Software SU2"" and by myself. Mass flow outlet included in the PR as requested by users. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2349:822,Perform,Performance,822,https://su2code.github.io,https://github.com/su2code/SU2/pull/2349,2,"['Optimiz', 'Perform']","['Optimization', 'Performance']"
Performance,"## Proposed Changes; These changes integrate MKL into SU2 linear algebra operations. The changes are guarded by a HAVE_MKL preprocessor flag, and require MKL 2019 Beta or newer, as they use the most recent features designed to optimize small matrix operations. Observe 18% performance improvement on Broadwell systems and 24% performance improvement on Skylake systems. Additionally, change adds call to memcpy in Gauss Elimination since overlapping source/dest would break functionality at a higher level, and memcpy improves performance. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary. -- Not necessary, existing tests cover functionality when HAVE_MKL flag is in place.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/542:227,optimiz,optimize,227,https://su2code.github.io,https://github.com/su2code/SU2/pull/542,4,"['optimiz', 'perform']","['optimize', 'performance']"
Performance,"## Proposed Changes; This PR adds the capability to simulate the AIR-7 gas model using SU2TCLib for viscous problems. Specific contributions include:; - Fix Gupta-Yos transport models for all flows (including ionized); - inclusion of Coulomb interaction cross sections for ion-ion collisions. Following the implementation detailed in Scalabrin's thesis. ## Related Work; PRs #1497 #1555 . Update to NEMO documentation includes description of GY model, see: https://github.com/su2code/su2code.github.io/pull/116. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887:334,Scalab,Scalabrin,334,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887,1,['Scalab'],['Scalabrin']
Performance,"## Proposed Changes; This PR updates some of the NEMO viscous routines to be more inline with the overall SU2 structure. Hopefully paving the way for an easier merge with turbulence solvers in the future. ## Related Work; This is coming with an effort to update and optimize NEMO, like in #1343. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1347:266,optimiz,optimize,266,https://su2code.github.io,https://github.com/su2code/SU2/pull/1347,1,['optimiz'],['optimize']
Performance,## Proposed Changes; This PR will add heat flux to the values that are checked in the regression testing. This should help capture more of the code performance. . ## Related Work; @jtneedels noticed a possible issue of changes made in #1417. This will help avoid any potential unwanted changes.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1698:148,perform,performance,148,https://su2code.github.io,https://github.com/su2code/SU2/pull/1698,1,['perform'],['performance']
Performance,"## Proposed Changes; This a initial merge to begin incorporating some modification to the sliding mesh interface which we are planning to improve in the next future. ## Related Work; Mostly performance improvements in the creation of the super mesh for the Weighted Average sliding mesh approach.; ADT is now used to initialize the supermesh construction. Some portions of the code were re-implemented using a smarter algorithm which reduces the code length. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2334:190,perform,performance,190,https://su2code.github.io,https://github.com/su2code/SU2/pull/2334,1,['perform'],['performance']
Performance,"## Proposed Changes; This a initial merge to begin incorporating some modification to the sliding mesh interface which we are planning to improve in the next future. . ## Related Work; Mostly performance improvements in the creation of the super mesh for the Weighted Average sliding mesh approach.; ADT is now used to initialize the supermesh construction. Some portions of the code were re-implemented using a smarter algorithm which reduces the code length. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2332:192,perform,performance,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/2332,1,['perform'],['performance']
Performance,"## Proposed Changes; This feature allows of employing cubic equation of state based on the **CoolProp** library's Peng-Robinson backend [1,2]. The present Peng-Robinson fluid model implementation (CPenRobinson.cpp file) requires '_Specific heat ratio_' (_gamma_) as an input which is not always possible to know in advance, especially for organic fluids (refrigerants).; The fluid model (titled as **PR_COOLPROP_GAS** in config file) in the proposed branch is completely free of any '_gamma_' in particular functions and allows of utilizing the spatially variable of isobaric and isochoric specific heats. The full set of available fluids is presented in the **config_template.cfg** file. One must be aware that the reviewed fluid model assumes imposing pure substance in gas phase (no mixtures or multiphase flows). The implemented fluid model improves the thermodynamic consistency however there is performance penalty related to algorithmic overhead. . 1. http://coolprop.org/; 2. https://github.com/CoolProp/CoolProp. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [+ ] I am submitting my contribution to the develop branch.; - [+ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ +] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ +] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1402:901,perform,performance,901,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402,1,['perform'],['performance']
Performance,"## Proposed Changes; This is a ""don't pay for what you don't use"" optimization.; I've disabled implicit time integration during the computation of the MG forcing term. I've also refactored CMultiGridQueue, it had a bad scaling problem because to remove a point from the queue we were doing a linear search followed by vector::erase, both being O(N) operations.; I've put together a queue-type class that allows fast (amortized O(1)) ""seek-and-destroy"" of arbitrary items. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/963:66,optimiz,optimization,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/963,3,"['optimiz', 'queue']","['optimization', 'queue', 'queue-type']"
Performance,"## Proposed Changes; This is a little improvement to the multipoint optimization setup. Currently if you want to run multipoint optimization with restarts, the python scripts only keep track of one restart file (the first of the multipoint conditions). This is acceptable when the multipoint conditions are similar, but does not work when the conditions are very different. For example, if one point is supersonic and the other is subsonic, and the subsonic case is restarted from the supersonic solution, it immediately diverges. . This PR allows the python scripts to keep track of restarts for each point in the multipoint set up. It is robust in the sense that you can start with 0 restart files or some subset of restart files. For example, if you are running a 3 point optimization but only have the restart for one of the points, this will handle that case by starting the other two points from scratch, but keeping track of the restart files after the first design iteration. There is a naming convention that is presumed. The restarts get 'point#' added to its base name. So for example, if the SOLUTION_FILENAME= solution_flow.dat then it will look for files named solution_flow_point0.dat, solution_flow_point1.dat and so on. For adjoints this is solution_adj_point0_cd.dat etc. This naming convention can be tweaked according to comments. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781:68,optimiz,optimization,68,https://su2code.github.io,https://github.com/su2code/SU2/pull/781,3,['optimiz'],['optimization']
Performance,"## Proposed Changes; This is a simple re-shuffling to have matrix-vector products (and therefore linear systems) that are aware of periodic connections.; It uses something like:; - A ""`PERIODIC_RESIDUAL`"" communication (sum contributions) applied to the result of matrix-vector products.; - A ""`PERIODIC_IMPLICIT`"" communication (enforce periodicity) applied to the result of preconditioners. It seems to avoid the performance degradation that @TobiKattmann saw when implementing periodicity for heat transfer, and also the issues in issue #1467. However, making the matrix-vector product ""periodicity-aware"" through comms, without modifying the matrix, means that any preconditioner derived from the matrix is not consistent with the product, thus it is a worse preconditioner and more linear iterations are needed for the same reduction in residuals. ## Related Work; Should help #1467; Should avoid #763. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585:415,perform,performance,415,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585,1,['perform'],['performance']
Performance,"## Proposed Changes; This is a solver I have been working on for some time.; The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2.; Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One Shot optimization context.; The new solver constructs the necessary operator and solves it using the finite elements features in SU2. It also includes the possibility to take the mesh parameterization into account and smooth the sensitivities w.r.t. the design parameters. I will update this draft and the comments, but I wanted to share this first version. I would be happy if anyone wants to comment on it. The draft needs some steps to be done, including:; - clean up the comments and make them consistent with SU2 style; - remove the dependency on Eigen. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1439:489,optimiz,optimization,489,https://su2code.github.io,https://github.com/su2code/SU2/pull/1439,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; This pull request is the first of a series of improvements I plan to do in the code, which aim to improve the code readibility and remove some bottlenecks in terms of abstraction, particularly regarding the input/output. At this time, I have removed some inconsistencies in the definition of the Zone structure, by incorporating the concept of “Instances” to the code. Until now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers wil",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528:164,bottleneck,bottlenecks,164,https://su2code.github.io,https://github.com/su2code/SU2/pull/528,1,['bottleneck'],['bottlenecks']
Performance,"## Proposed Changes; Update to the interface initialisation to enable both mixing plane and sliding interfaces within the same turbomachinery simulation. Addition of mass flow outlet to Giles BC. ## Related Work; This issue solves a problem reported by a number of users, when simulating radial turbomachinery cases a second-order accurate solution cannot be achieved in some cases when using mixing plane interfaces. This is due to circumfrential averaging in regions where the flow exhibits large circumfrential nonuniformity and/or interspace gaps between adjacent blade-rows/zones small. This issue has been reported by @LorenzoFabris, in a presentation at the SU2 Conference 2022 ""Performance Analysis and Shape Optimization of a Radial Compressor with the Open-Source Software SU2"" and by myself. Mass flow outlet included in the PR as requested by users. TBC:; -Update APU Turbocharger test case and regression test to include this feature, add diffuser and converge 2nd order. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2209:686,Perform,Performance,686,https://su2code.github.io,https://github.com/su2code/SU2/pull/2209,2,"['Optimiz', 'Perform']","['Optimization', 'Performance']"
Performance,"## Proposed Changes; When accessing the adjoints, bounds checking acquires an internal lock in CoDiPack. This turned out to be a bottleneck in `InitializeAdjoint` and `IterateDiscreteAdjoint`. Therefore, we ensure sufficient size up front and skip the bounds checking. ## Related Work; Previous work on hybrid parallel AD, like #1214, #1284, #1294. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2039:129,bottleneck,bottleneck,129,https://su2code.github.io,https://github.com/su2code/SU2/pull/2039,1,['bottleneck'],['bottleneck']
Performance,"## Proposed Changes; `JacobianIndex`, one of the `codi-tape` build options, was prone to misunderstandings since it was not clear whether or not the underlying type supports copy optimizations. There are two options now, `JacobianReuse`, which does not support copy optimizations and is similar to the hybrid AD type in that regard, and `JacobianMultiUse`, which does support copy optimizations and is similar to the default type with linear management in that regard.; ; I took the opportunity to also add options for primal value tapes in a consistent manner, they were there previously but less detailed and commented out. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2107:179,optimiz,optimizations,179,https://su2code.github.io,https://github.com/su2code/SU2/pull/2107,3,['optimiz'],['optimizations']
Performance,"## Scope; Elasticity problems can be quite demanding linear solver wise as your typical case will have very few Dirichlet boundaries.; Common iterative methods can only go so far, and pseudo time strategies to improve conditioning do not work as well as for fluid problems due to the elliptic nature of the equations.; Scalability is also an issue since most preconditioners get weaker as the problem gets partitioned.; Direct sparse solvers handle these problems just fine, so life is good again, until you run out of RAM that is (which only ever happens in 3D). Time complexity is about O(N^2) and storage O(N^1.5). ## Proposed Changes; Wrapper class for Inria's direct sparse solver [PaStiX](http://pastix.gforge.inria.fr/files/README-txt.html).; Why this solver? Because it is open source, has active development in advanced features like GPU support and compression techniques to reduce memory footprint, and from my experience it is really robust. ## Implementation; As this feature benefits mostly the FSI people (@rsanfer, @cvencro, and me) I tried to keep it as standalone as possible.; The core implementation is in separate files and nothing needs to change in CSysMatrix for this to work. ## Usage; Available factorizations:; - LDLT; - LU; - ILU(k). The ILU is different from the one we have in that it is computed for the entire matrix and not just for the local matrices (i.e. it considers halos), it is not very fast though.; The three factorizations can be used as preconditioners via options PASTIX_ILU, PASTIX_LU, and PASTIX_LDLT. And the first two as solvers via options PASTIX_LU and PASTIX_LDLT (in which case you should use a preconditioner type that does not cause CSysMatrix to allocate extra memory (LU_SGS).; The reason LDLT and LU can also be used as preconditioners is that it is possible to set a factorization frequency (via PASTIX_FACTORIZATION_FREQUENCY) so that the factorizations are only computed every N iterations or only on the first call (frequency set to 0), th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771:319,Scalab,Scalability,319,https://su2code.github.io,https://github.com/su2code/SU2/pull/771,1,['Scalab'],['Scalability']
Performance,"### Discussed in https://github.com/su2code/SU2/discussions/1456. <div type='discussions-op-text'>. <sup>Originally posted by **CipollinoDuck** November 30, 2021</sup>; Hello everyone,. I ask here because I cannot find any solution elsewhere. I am attempting an **Adjoint Optimization problem** with viscous solver (**RANS/NAVIER_STOKES**) using the **shape_optimization.py** script but I can't complete it because I receive the following message:. `Error in ""void CSolver::Read_SU2_Restart_Binary(CGeometry*, const CConfig*, std::__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver doe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1458:272,Optimiz,Optimization,272,https://su2code.github.io,https://github.com/su2code/SU2/issues/1458,2,['Optimiz'],['Optimization']
Performance,"### Discussed in https://github.com/su2code/SU2/discussions/1715. <div type='discussions-op-text'>. <sup>Originally posted by **AbhijithMoni** July 18, 2022</sup>; Hi,. I'm running the inverse design case available in _`TestCases/optimization_euler/steady_inverse_design`_. While executing `python C:\SU2\bin\shape_optimization.py -f .\inv_NACA0012.cfg`. The following error appears:. ```; Traceback (most recent call last):; File ""C:\SU2\bin\shape_optimization.py"", line 183, in <module>; main(); File ""C:\SU2\bin\shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""C:\SU2\bin\shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 207, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 375, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\optimize.py"", line 261, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 140, in __init__; self._update_fun(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 233, in _update_fun; self._update_fun_impl(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 137, in update_fun; self.f = fun_wrapped(self.x); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 134, in fun_wrapped; return fun(np.copy(x), *args); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1725:866,optimiz,optimize,866,https://su2code.github.io,https://github.com/su2code/SU2/issues/1725,2,['optimiz'],['optimize']
Performance,"### Intro to SIMD; The ALU of modern CPU are capable of processing multiple elements of built-in types simultaneously by applying one instruction (e.g. add) to a register of those elements. Registers are at the very top of the memory hierarchy, for any computation to be performed data needs to be in registers.; An AVX register is 256 bits wide, that means 4 lanes of doubles or 8 of floats, AVX-512 (available in Xeon-Phi and SkylakeX processors) doubles the size. By GPU standards these are rookie numbers. **Why should we care about SIMD?**; Because it is the only way to use the whole silicon, by and large vector instructions have the same latency and throughput of their scalar versions, therefore speedups proportional to the number of SIMD lanes are possible in compute-bound code.; As we saw in #716 there is some of that in the numerics, do not expect 4x speed-ups though, low order unstructured FVM is known to be bandwidth-bound, vectorization helps a bit there too (instructions are also data that needs to travel to the CPU) (maybe for explicit schemes and 8 SIMD lanes, maybe). **Relation with data structures**; There is only one efficient way to move data between memory and registers, via `load` and `store` instructions (they do come in multiple flavors). That is, pointing to a memory location and reading or writing N elements of contiguous data.; It is not the only way, it is also possible to `gather` and `scatter` data. That is populating the register from non-contiguous locations and vice versa. This is about one order of magnitude slower, to the point where if the computations are very simple it may not pay-off to vectorize. **Relation with algorithms**; Some form of `gather` and `scatter` is required in unstructured CFD, which means SIMD has a price of admission. Some thought needs to go into designing algorithms that amortize that cost by maximizing the so called FLOP/Byte ratio, and mask the latency of those operations by being able to start computing as soon ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:271,perform,performed,271,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,6,"['latency', 'perform', 'throughput']","['latency', 'performed', 'throughput']"
Performance,"### Preamble. I am moving the discussion about SIMD that started in #716 here and adding hybrid parallelization.; The two topics go hand in hand since both (SPMD and SIMD) consist of processing multiple data (MD) elements simultaneous, either by a single program (SP) that is run by multiple threads (generally with shared view of memory), or by a single instruction (SI) run by a single core.; The reason SIMD came up in #716 is that, as I will demonstrate, vectorization needs to be supported by data structures. On the other hand SPMD needs to be supported by algorithms designed to avoid race conditions, two or more threads modifying the same memory location. Instead of continuing #716 I think it is better to let that become documentation for #753.; I did not add **without loss of readability** to the title because it is long as is, that requirement is present nonetheless.; I open these issues in the hope that people participate (I am not a fast writer so this is actually a lot of work) and so far great comments and insights have come from those with experience in these topics (kudos to @economon and @vdweide). But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...). My (ambitious) goal with this work is to lay down an architecture for performance, i.e. not just to improve the performance of a few key numerical schemes but to create mechanisms applicable to all existing and future ones. Moreover I want that to be possible with minimal changes to the way those bits of code are currently written.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789:592,race condition,race conditions,592,https://su2code.github.io,https://github.com/su2code/SU2/issues/789,3,"['perform', 'race condition']","['performance', 'race conditions']"
Performance,"(GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3343: $? = 0; configure:3332: g++ -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3343: $? = 0; configure:3332: g++ -V >&5; g++: '-V' option must have argument; configure:3343: $? = 1; configure:3332: g++ -qversion >&5; g++: unrecognized option '-qversion'; g++: no input files; configure:3343: $? = 1; configure:3363: checking whether the C++ compiler works; configure:3385: g++ conftest.cpp >&5; configure:3389: $? = 0; configure:3437: result: yes; configure:3440: checking for C++ compiler default output file name; configure:3442: result: a.out; configure:3448: checking for suffix of executables; configure:3455: g++ -o conftest conftest.cpp >&5; configure:3459: $? = 0; configure:3481: result: ; configure:3503: checking whether we are cross compiling; configure:3511: g++ -o conftest conftest.cpp >&5; configure:3515: $? = 0; configure:3522: ./conftest; configure:3526: $? = 0; configure:3541: result: no; configure:3546: checking for suffix of ob",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:3753,tune,tune,3753,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['tune'],['tune']
Performance,"(GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3999: $? = 0; configure:3988: gcc -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unrecognized option '-qversion'; gcc: no input files; configure:3999: $? = 1; configure:4003: checking whether we are using the GNU C compiler; configure:4022: gcc -c conftest.c >&5; configure:4022: $? = 0; configure:4031: result: yes; configure:4040: checking whether gcc accepts -g; configure:4060: gcc -c -g conftest.c >&5; configure:4060: $? = 0; configure:4101: result: yes; configure:4118: checking for gcc option to accept ISO C89; configure:4181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conft",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:6433,tune,tune,6433,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['tune'],['tune']
Performance,"(Krylov solvers, sparse approximate factorizations, etc.) is relatively independent from what I have in mind.; Nevertheless being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD.; What I would like is to have a ""CMatrixDense"" class, to give concrete examples:; - For RBF interpolation the guy who worked on it before me implemented his own Cholesky and LU factorizations, matrix-matrix, matrix-vector routines, etc.; - @jayantmukho recently needed some eigenvector decomposition's for the uncertainty quantification feature.; - I imagine in some other places of the code similar routines were needed, for example small matrix inversion when computing gradients by weighted least squares (indeed what I need now is a QR decomposition). And, as an added bonus, I think some other areas of the code could be simplified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:1157,optimiz,optimized,1157,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,2,['optimiz'],['optimized']
Performance,"*(Note: I am prototyping a new format for a PR template with this submission. We can set a default template in the repo to help guide new contributors and to make future code reviews easier. Please also comment on this general format/idea or share any suggestions to improve.)*. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR is a joint effort with @clarkpede for specifying inlet profiles from a file within the C++ code. For now, it is nearest neighbor, but interpolation can be added in the future. If no file is present, a template file will be generated for your modification (ASCII file, one row per DOF on each inlet marker). It works in parallel and for any number of inlet markers. It operates similarly to restarts: there is a single file reader in CSolver, a single file writer in COutput, and solver-specific load functions in the child solver classes. Therefore, this structure can be expanded in the future for data on any marker type in any solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #467 ; Interacts with work by @tobadavid @oleburghardt . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/516:876,load,load,876,https://su2code.github.io,https://github.com/su2code/SU2/pull/516,1,['load'],['load']
Performance,"**Context**; I am working in a parallel MDO framework where one or several instances of SU2 (corresponding to different operating cases) can coupled with other solvers and tools, to perform coupled aero-structural shape optimisation. . The framework initialises MPI and assigns processors to the different solvers and tools as required. The SU2 instances are initialised and controlled through Python, and given a communicator for the relevant subset of the MPI processes. . **Issue**; Shape optimisation with SU2 (using discrete adjoints) require four operations at each major optimisation iteration:. 1. `SU2_DEF`: Deform the mesh according to the new design variables (or _design deformations_, in contrast to e.g. the _structural deformations_ in an aeroelastic analysis), and output the deformed mesh to file,; 2. `SU2_CFD`: Update the primal solution, which may include a mesh deformation due to structural deformations in an aeroelastic analysis, and output the converged state to file,; 3. `SU2_CFD_AD`: Update the discrete adjoint solution corresponding to the converged primal solution, once for each objective function of interest, and output the converged adjoints to file,; 4. `SU2_DOT_AD`: Calculate the surface sensititivities from the discrete adjoint solution (from what I can gather, this step is required in the discrete-adjoint sensitivity analysis to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:182,perform,perform,182,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['perform'],['perform']
Performance,"**Describe the bug**. I am unable to complete the compilation of SU2 v7.3.0 on Fedora 35 using the GCC compiler.; There is a problem when trying to link with the system's libz library. ```; /usr/bin/ld: /usr/lib64/libz.a(deflate.o): warning: relocation against `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib64/libz.a(zutil.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status. ```; **To Reproduce**. I configured the source code with the commands:. ```; module load mkl/latest; module load mpi/openmpi-x86_64. CFLAGS=""-mtune=native -march=native -fPIC"" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Bu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:632,load,load,632,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,3,"['load', 'optimiz']","['load', 'optimization']"
Performance,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. As I used SU2 develop version for shape optimization, it gave a keyerror in TestCase ; disc_adj_rans/naca0012, ; shape_optimization.py -f turb_NACA0012_sa.cfg; and disc_adj_rans/cylinder,; shape_optimization.py -f cylinder_Windowing.cfg. I have compiled SU2 with AD enabled. ; Also try disc_adj_turbomachinery/transonic_stator_2d, gave the same error.; I would like to know if I make some mistakes to run the testcases. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Found: mesh_cylinder.su2; New Project: ./; Traceback (most recent call last):; File ""/home/wkholy/su2/bin/SU2/io/config.py"", line 164, in __getitem__; return super(Config,self).__getitem__(k); KeyError: 'OPT_OBJECTIVE'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/home/wkholy/su2/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/home/wkholy/su2/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/home/wkholy/su2/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/home/wkholy/su2/bin/SU2/opt/project.py"", line 114, in __init__; def_objs = config['OPT_OBJECTIVE']; File ""/home/wkholy/su2/bin/SU2/io/config.py"", line 166, in __getitem__; raise KeyError('Config parameter not found: %s' % k); KeyError: 'Config parameter not found: OPT_OBJECTIVE'. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]. Ubuntu 20.04; C++ gcc version 9.4.0; SU2 version 7.3.1 develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1714:225,optimiz,optimization,225,https://su2code.github.io,https://github.com/su2code/SU2/issues/1714,1,['optimiz'],['optimization']
Performance,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi,. I am currently using SU2 to do some test cases for AIAA 1st Stability and Control Workshop. These cases need to run with a fixed-Cl as the DPW6 cases did. When I tried to use the knobs “FIXED_CL_MODE= YES” and “TARGET_CL= 0.50” in the .cfg input file to run these cases, the Cl change always got some odd significant jumps even though the AoA change was quite small and then the computations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:680,optimiz,optimization,680,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['optimiz'],['optimization']
Performance,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; For axisymmetric flows where the outflow is aligned with the symmetry axis (horizontal axisymmetry, vertical outlet), the computed outlet area of the circular outlet can be off by 10%.; This is due (I think) to the fact that the node normals are used for the computation of the edge size and integrated area and mass flux. This computation is performed e.g. in CIncEulerSolver::GetOutlet_Properties. An approach where the marker edges are used instead to compute the edge sizes leads to the correct area and mass flux computations. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - SU2 Version: current develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1710:528,perform,performed,528,https://su2code.github.io,https://github.com/su2code/SU2/issues/1710,1,['perform'],['performed']
Performance,"**Describe the bug**; After defining the FFD box correctly, using SU2_DEF, the *shape_optimization.py* script was launched to perform adjoint optimization of an internal flow over airfoil. The following error is printed out by SU2:; [SU2_error.txt](https://github.com/su2code/SU2/files/10999828/SU2_error.txt). The .cfg file attached below is largely inspired by the Onera test case already published in the tutorial collection. ; However, I checked the code looking for some issues that my configuration might have caused and I couldn't find any (to my knowledge). It seems the solver has issues converting to float-type variable my text indications for DV_PARAM option. Moreover, I tried to ""play"" with the values related to DV_PARAM and no difference was noted. The same issue was experienced both in version 7.5.0 and 7.5.1 regardless of running a pre-compiled version (Microsoft) or the built-from-source version (Ubuntu). **To reproduce**. [airfoil.txt](https://github.com/su2code/SU2/files/10999881/airfoil.txt); *Mesh file extension is not supported for upload*. **Bug report checklist**. - [ ✓] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [ ✓] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ ✓] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Ubuntu 20.04.0 & Microsoft; - C++ compiler and version: g++ 9.4.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: v7.5.1 & v7.5.0. *Thank you in advance for your help.*",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1970:126,perform,perform,126,https://su2code.github.io,https://github.com/su2code/SU2/issues/1970,2,"['optimiz', 'perform']","['optimization', 'perform']"
Performance,"**Describe the bug**; Building SU2 with building options -Denable-pywrapper and -Dwith-mpi, The meson error occured.; Please let me know if anyone knows what to do. The part of meson-log.txt is below:. > Message: Boost sources found.; Program swig found: YES (/usr/bin/swig); Running command: /---/---/---/work/SU2/venv/bin/python3 -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include. > --- stderr ---. > Message: Using mpi4py from /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include; Pkg-config binary for 1 is cached.; Determining dependency 'python-3.7m' with pkg-config executable '/usr/bin/pkg-config'; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --modversion python-3.7m` -> 0; 3.7; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --cflags python-3.7m` -> 0; -I/data/home/yamazaki/soft/Python-3.7.9/build/include/python3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; WARNING: extract_all_objects called without setting recursive; keyword argument. Meson currently defaults to; non-recursive to maintain backward compatibility but; the def",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1672:611,cache,cached,611,https://su2code.github.io,https://github.com/su2code/SU2/issues/1672,1,['cache'],['cached']
Performance,"**Describe the bug**; I am trying to compile SU2 on a Linux cluster. I have an mpi module loaded and I run the command ./mseon.py build and that works. Then I run ./ninja -C build install. It will try to compile SU2 but while compiling it asks for root access. ; This is the output I get:; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; ==== AUTHENTICATING FOR org.freedesktop.policykit.exec ===; Authentication is needed to run `/usr/bin/python3' as the super user; Authenticating as: root. Is there a way to compile SU2 without root access?. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.7.1908 (Core) ; - C++ compiler and version: gcc.x86_64 4.8.5-39.el7 ; - MPI implementation and version: openmpi-3.1.5-gcc-9.2.0-r3pnpzw; - SU2 Version: ver. 7.0.3 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/936:90,load,loaded,90,https://su2code.github.io,https://github.com/su2code/SU2/issues/936,1,['load'],['loaded']
Performance,"**Describe the bug**; I'd like to use the FFD shape optimization feature of SU2. From a geometrical point of view the domain is very similar to the ""2 way mixing channel optimization"" tutorial example. I've therefore followed the steps of this tutorial and tested the mesh deformation with some dummy values. The result of the deformation can be seen here:; ![grafik](https://user-images.githubusercontent.com/42602495/211366671-1344820b-87f6-429f-b1d4-c396a6467440.png). The lower halve of the picture shows the original, undeformed mesh. The upper halve contains in green the original FFD box (ffd_box_0.vtk), in white the deformed FFD box and the deformed mesh (volume_deformed_0000.vtu) in blue/white. From the definition of the deformation I'd expect that the cells outside the FFD box to remain largely unchanged. Instead, here the largest deformations occur. Following the mixer-example the FFD information was added to the mesh by running SU2_DEF with a config file containing this information:; ```; %%%%%%%%%%%%%%% FFD definition %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; FFD_DEFINITION = (BOX, \; 0.012, 0.0005, 0.0,\; 0.080, 0.0005, 0.0,\; 0.080, 0.0035, 0.0,\; 0.012, 0.0035, 0.0 ); FFD_DEGREE= (4, 1, 0); FFD_CONTROL_POINT; DV_KIND = FFD_SETTING; DV_MARKER = (NS_Resonator_Wall, NS_ResonatorTip_Wall); DV_PARAM = (1.0); ```. This added the following info to the mesh:; ```; FFD_NBOX= 1; FFD_NLEVEL= 1; FFD_TAG= BOX; FFD_LEVEL= 0; FFD_DEGREE_I= 4; FFD_DEGREE_J= 1; FFD_BLENDING= BEZIER; FFD_PARENTS= 0; FFD_CHILDREN= 0; FFD_CORNER_POINTS= 4; 0.012 0.0005; 0.08 0.0005; 0.08 0.0035; 0.012 0.0035; FFD_CONTROL_POINTS= 20; 0 0 0 0.012 0.0005 -0.5; 0 0 1 0.012 0.0005 0.5; 0 1 0 0.012 0.0035 -0.5; 0 1 1 0.012 0.0035 0.5; 1 0 0 0.029 0.0005 -0.5; 1 0 1 0.029 0.0005 0.5; 1 1 0 0.029 0.0035 -0.5; 1 1 1 0.029 0.0035 0.5; 2 0 0 0.046 0.0006 -0.5; 2 0 1 0.046 0.0005 0.5; 2 1 0 0.046 0.0036 -0.5; 2 1 1 0.046 0.0035 0.5; 3 0 0 0.063 0.0007 -0.5; 3 0 1 0.063 0.0005 0.5; 3 1 0 0.063 0.0037 -0.5; 3 1 1 0.06",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1879:52,optimiz,optimization,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/1879,2,['optimiz'],['optimization']
Performance,"**Describe the bug**; I'm reading the python codes of SU2-7.3.1 to figure out the whole framework of shape optimization. Here, I find a small irrational point in the definition of evalution of constraint gradients. (in SU2_PY/SU2/eval/design.py). For example, we may add a weight coefficient to each equality/inequality constraint in the .cfg file. So in the python framework, the weight will be stored in <config['OPT_CONSTRAINT']['EQUALITY']['SCALE']>, right? When we compute the constraint as well as its gradients using SU2_CFD solver, the python code will get the constraint and gradients from the history files, and then multiple them with the weight (or SCALE), and then return the results to scipy_tools.py for optimization. Look at line 429 in the function ""con_ceq"" in file ""design.py"", the resulted constraint is scaled by the SCALE parameter, which is no problem. Then look at line 477 in the gradient function ""con_dceq"", the resulted gradients are not scaled by the SCALE parameter, that I think it is irrational. The same problem also happens in the function ""con_dcieq"", the gradients of inequality constraints. I think that the two gradients function for constraints should be scaled with the SCALE parameter, because at line 386 in the objective gradient function ""obj_df"", the computed objective gradients are indeed scaled. **Desktop (please complete the following information):**; - SU2 Version: [v7.3.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1653:107,optimiz,optimization,107,https://su2code.github.io,https://github.com/su2code/SU2/issues/1653,2,['optimiz'],['optimization']
Performance,"**Describe the bug**; Symmetry boundary condition does not work properly. In particular, the values on the symmetry plane are wrong with respect to a computation performed on the complete mesh. In the images you can see the pressure coefficient and the skin friction coefficient magnitude for both the simulations. For each image, the upper half is the solution on the complete mesh whereas the lower portion is the solution on the halved mesh with the symmetry plane. I am performing an incompressible RANS simulation with SST turbulence model. I am attaching the files needed to perform both the simulations. The branch I used is the develop one. I also tried with the main branch but the error persists. ![PressureCoefficient](https://user-images.githubusercontent.com/43813346/180821411-9978c962-b3c0-42d0-b631-35a5b0c71b29.png); ![SFC_Error](https://user-images.githubusercontent.com/43813346/180821429-f476bb80-1ac1-4fad-b55b-f5ea05f3a604.png). **To Reproduce**; Please find the config and mesh file at the following link. https://we.tl/t-nmjBv7HJv0. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.6.1810 (Core); - C++ compiler and version: gcc 11.2.0; - MPI implementation and version: OpenMPI 4.0.1; - SU2 Version: v7.3.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1723:162,perform,performed,162,https://su2code.github.io,https://github.com/su2code/SU2/issues/1723,3,['perform'],"['perform', 'performed', 'performing']"
Performance,"**Describe the bug**; When loading grid points for the ith zone, it seems that grid points for all zones after the ith zone will be loaded as well.; This grid point loading is implemented in the function of void CSU2ASCIIMeshReaderFVM::ReadPointCoordinates() . The code snippet below is doing the function. I think there should be a break for the while loop once the grid points for the required zone are loaded. /*--- Open the mesh file and jump to our zone. ---*/. mesh_file.open(meshFilename, ios::in);; FastForwardToMyZone();. /*--- Read the point coordinates into our data structure. ---*/. string text_line;; string::size_type position;; while (getline (mesh_file, text_line)) {. position = text_line.find (""NPOIN="",0);; if (position != string::npos) {. - SU2 Version:7.1.1. It should be noted that this bug is not expected to cause wrong solutions, but lead to unnecessary extra time cost and memory consumption probably.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1345:27,load,loading,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/1345,4,['load'],"['loaded', 'loading']"
Performance,"**Describe the bug**; While doing shape optimization for drag minimization with the Euler solver, I received a negative drag for the optimized geometry. This seemed strange to me, so I investigated it and realized, that the CD in SU2 seems to be computed incorrectly in some cases. . During the investigation, I computed the drag force in Paraview based on the SU2 flow result and compared it to the drag force computed by SU2 both for the initial and the final optimization geometry. The results did not match, which is not what I would have expected. . In SU2, I compute the drag force by multiplying CD with the non-dimensional factor written to the forces_breakdown file. For Paraview, I wrote a script which does the following to compute the drag force:; - Load surface flow solution for the wing surface; - Compute surface normals; - Compute Drag = -Pressure*(Normals_X * cos(AoA/180 * 3.1415) + Normals_Z * sin(AoA/180 * 3.1415)); - Integrate this over the whole wing surface to get the total drag force. You can also find this Paraview script attached.; I validated the Paraview script for multiple simple testcases, for which SU2 and Paraview gave me exactly the same drag force. When I applied it to the initial optimization geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific cr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:40,optimiz,optimization,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,4,"['Load', 'optimiz']","['Load', 'optimization', 'optimized']"
Performance,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1229:51,optimiz,optimization,51,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229,6,['optimiz'],"['optimization', 'optimized']"
Performance,**Desktop (please complete the following information):**; - OS: WSL (Ubuntu22.04); - C++ compiler and version: g++ 11.3.0; - MPI implementation and version: 4.0; - SU2 Version: v7.5.1. Hello：; My computer have 2 epyc cpus，when I run QuickyStart ，; it warns：SU2 was not compiled for an AVX-capable architecture. Performance could be better。; My compile configuration：; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true . How can I solve it？; Thanks！,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1939:311,Perform,Performance,311,https://su2code.github.io,https://github.com/su2code/SU2/issues/1939,1,['Perform'],['Performance']
Performance,"**Disclaimer**; The performance numbers that follow are based on simple implementations of the methods, I do not claim any of my implementations or choice of methods to be optimal. If you know better speak up.; The data is from the case used to benchmark #753 (see #716), it is by no means an extensive collection of different grid types. I will share code and data with anyone who wants to repeat the tests on the condition they post detailed results. With that out of the way :) ... ### Green-Gauss Gradients. This is the plain edge-loop version of the code with boundary contributions omitted for simplicity:; ```C++; void computeGradients(size_t nEdge,; size_t nPoint,; size_t nVar,; size_t nDim,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& area,; const vector<double>& volume,; const Matrix& phi,; VectorOfMatrix& grad); {; grad.setZero();. for(size_t iEdge=0; iEdge<nEdge; ++iEdge); {; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. for(size_t iVar=0; iVar<nVar; ++iVar); {; double phi_ave = 0.5*(phi(iPoint,iVar)+phi(jPoint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); {; double flux = phi_ave*area(iEdge,iDim);. grad(iPoint,iVar,iDim) += flux;; grad(jPoint,iVar,iDim) -= flux;; }; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) /= volume[iPoint];; }; ```; This is more or less what SU2 does with minor differences on how the edges (`connectivity`) and area are stored, there is no vectorization nor easy way to make the loop parallel, this will be the reference for execution times. Suppose now that due to a perfect storm the number of variables is 4, here is how with a few pragmas we get gcc to vectorize:; ```C++; template<size_t nVar>; void computeGradients_impl(size_t nEdge,; size_t nPoint,; size_t nDim,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& area,; const vector<double>& volume,; con",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:20,perform,performance,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['perform'],['performance']
Performance,"**Is your feature request related to a problem? Please describe.**. The currently implemented wall model for SA is not working robustly, and needs be modified for incompressible flows. The model has not been implemented for SST but can easily be implemented from the SA wall model. The SA wall model implementation in @EduardoMolina 'feature_WallModelLES' works well with almost no modifications and the implementation can be based on this version. . **Describe the solution you'd like**; Current implementation of wall model extended to incompressible flows for SA and SST.; Also needed is proper computation of y+ and wall shear stress in output files.; Validation test case replicating literature performance. Currently available to me: Buice & Eaton Diffuser. **Describe alternatives you've considered**; -. **Additional context**; I performed a preliminary implementation and validation for isothermal walls (Buice & Eaton diffuser).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1155:700,perform,performance,700,https://su2code.github.io,https://github.com/su2code/SU2/issues/1155,2,['perform'],"['performance', 'performed']"
Performance,"**Is your feature request related to a problem? Please describe.**; ""The knowledge of a steady base-flow solution of the governing Navier-Stokes equations is fundamental to instability studies and flow control. "" [1]. I work in stability analysis of super- and hypersonic flows. To perform such analysis, I need to firstly obtain a steady-state solution of the Navier-Stokes equations. This is not a problem when a physical steady-state exists but becomes cumbersome otherwise. In the latter case, I need to drive the flow to a steady-state numerically such that the flow becomes steady and linear stability analysis can be performed. Presently, there is no compressible open-source CFD code capable of supersonic simulations, as far as I know, able to obtain ''unstable'' steady-states. The solutions outlined below not only would give the users capabilities needed to perform stability analysis of globally unstable flows with help of SU2 code but would also provide means of accelerating convergence of any unsteady solution. **Describe the solution you'd like**; Implementation of selective frequency damping (SFD) for unsteady simulation as introduced in [1] and boostconv algorithm as proposed by [2]. _SFD_: A method, enabling the computation of steady solutions of the Navier-Stokes equations in globally unstable configurations. Steady-state is achieved by damping the unstable temporal frequencies with addition of a dissipative relaxation term proportional to the high-frequency content of the velocity fluctuations. [1]. _boostconv_: An iterative algorithm, inspired by Krylov-subspace methods, which is able to compute unstable steady states and/or accelerate the convergence to stable configurations. This algorithm is based on the minimization of the residual norm at each iteration step with a projection basis updated at each iteration rather than at periodic restarts like in the classical GMRES method. The algorithm is able to stabilize any dynamical system without increasing the ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022:282,perform,perform,282,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022,3,['perform'],"['perform', 'performed']"
Performance,"**Is your feature request related to a problem? Please describe.**; *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*. I would like to know if SU2 can run the discrete adjoint case for multizone problem of turbomachinery. I found; "" if (nZone != 1); SU2_MPI::Error(""The required solver doesn't support multizone simulations"", CURRENT_FUNCTION);"" in the code. I am currently working on the optimization of axial turbine stage. I have revised the code for ENTROPY_GENERATION and Total toal efficiency output in the history output file and run the tutorial case ""transonic_stator_2D"" using ""shape_optimization.py"" successfully. But I failed to run ""discrete_adjoint.py -f xxx.cfg"" for turbiens stage optimization, whist the flow simulation using ""SU2_CFD xxx.cfg"" runs successfully. Seem the currect develop version is not applicable to the problem. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. May I ask for the implementation of multizone discrete adjoint solve for turbomachinery? Or if there is any solution for it.; I found the work from Vitale's paper in 2020 includes such capability in SU2 at https://github.com/su2code/SU2/tree/ feature_turbomachinery, yet I fail to run the multizone case. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*. I would like to try FADO for alternatives and may concern about the solver of the discrete adjoint for multizone problems in turbomachinery will still be needed. . **Additional context**; *Add any other context or screenshots about the feature request here.*. Here is the function I have added for turbo coeffcient output in CFlowOutput.cpp:. void CFlowOutput::AddTurbomachineryCoefficients(const CConfig* config) {; ; if (!config->GetBoolTurbomachinery()) return;; /// BEGIN_GROUP: AERO_COEFF, DESCRIPTION: Sum of the aerodynamic coefficients and forces on all s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1720:434,optimiz,optimization,434,https://su2code.github.io,https://github.com/su2code/SU2/issues/1720,2,['optimiz'],['optimization']
Performance,"**Is your feature request related to a problem? Please describe.**; I want to use SU2 in my project. My project is implemented by Visual Studio.; After successfully build su2, I can not find lib/dll. And I can not load su2 in my vs project. **Describe the solution you'd like**; Is it possible to provide a cmake file so that I can find the su2 package by find_package?. **Describe alternatives you've considered**; Or is it possible to provide a demo for how to use it in a vs project?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1572:214,load,load,214,https://su2code.github.io,https://github.com/su2code/SU2/issues/1572,1,['load'],['load']
Performance,"**Is your feature request related to a problem? Please describe.**; I'm going to build SU2 with PaStiX, which requires BLAS built in serial mode (not parallel). So, I must build OpenBLAS as sequential for PaStiX. However, SU2 also makes use of BLAS... but... what kind of build for OpenBLAS, sequential or parallel?. It's not a subtle thing, because things can go wrong (or lose a lot of performance) if it's built in a way different to what SU2 expects. **Describe the solution you'd like**; Just mention it in the build instructions where you mention that OpenBLAS can be used by SU2.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/869:388,perform,performance,388,https://su2code.github.io,https://github.com/su2code/SU2/issues/869,1,['perform'],['performance']
Performance,"**Is your feature request related to a problem? Please describe.**; In my transient cases I would like to average the flow-field over many time-iterations, in order to filter out highly dynamic effects. For me the volumentric time-averages and rms values have significant value. However, I have observed, that once averaging is enabled, the solver performance gradually decreases up to a point, where time-iterations are orders of magnitudes slower than without averaging. This does not seem to be a bug but rather inherent to the way averaging is implemented. I suspect, that the averaging occurs over all timesteps and thus a complete history of all the values is required. This may gradually increase memory consumption and effort for calculating averages. I suspect this to happen around here, but I may be wrong. https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/tools/CWindowingTools.cpp#L69-L76. I assume, that this may be a necessity for the higher-order windows, but seems to be overkill for a rectangular window, where the new time-average can be computed from the previous time-average, the number of iterations and the new values. Nevertheless, also the rectangular window seems to save the full value history:. https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/tools/CWindowingTools.cpp#L94-L100. **Describe the solution you'd like**; Being able to calculate (at least) non-windowed time-averages without a gradual drop in performance would be a real asset for me. This may be possible by choosing a different averaging method. If this cannot be done due to the data structure used, a dry-run message warning the user about this may be helpful. . **Describe alternatives you've considered**; The same effect can be achieved by running simulations without time-averaging but with regular volumetric outputs and calculating time-averages as a post-processing step. However, the associated data over",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545:348,perform,performance,348,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545,1,['perform'],['performance']
Performance,"**Is your feature request related to a problem? Please describe.**; Under high aerothermal loads heat fluxes over walls are an important design aspect of many components. In my specific case a wall temperature distribution is known from experiments. I would like to apply this spacial temperature distribution as boundary condition to one or more isothermal walls. In my case the heat flux is then used for validation purposes. **Describe the solution you'd like**; I would like to specify the temperature of an isothermal wall with respect to the x/y/z coordinate. I believe something similar is already possible with the structural load boundaries:; `MARKER_DISPLACEMENT = (surface, multiplier, magnitude [m], x component, y component, z component)`. For temperature this could possibly look like this:; `MARKER_ISOTHERMAL_PROFILE = (surface, temperature[0...N], x[0...N], y[0...N],z[0...N])`. In order to keep the config file cleaner a better solution may be to specify an external file, from which the locations and temperatures are read. This seems to be already possible for inlet boundaries:; https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/config_template.cfg#L812-L816; However, I could not find any example actually using this functionality. If this is implemented, extending the functionality to also work with isothermal walls is probably the least intrusive modification. **Describe alternatives you've considered**; A possible, but cumbersome solution could be to split the respective walls into many markers and specify piecewise-constant wall temperatures for each marker.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553:91,load,loads,91,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553,2,['load'],"['load', 'loads']"
Performance,"**Is your feature request related to a problem? Please describe.**; When installing software on a high performance computing cluster, we typically want to reuse existing dependencies. SU2 seems to download a *lot* of things which we already have: autotools, catch2, cgns, metis, ninja, parmetis, ... . It will very likely *not* compile those correctly for our system. . **Describe the solution you'd like**; Give a flag to disable all download and fail when dependencies are not found. Give corresponding flags to point to the dependencies' folders, and use those. . **Describe alternatives you've considered**; Reverse engineering SU2's meson/ninja build to patch it to use existing dependencies.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086:103,perform,performance,103,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086,1,['perform'],['performance']
Performance,"**Issue description**. Hi all, I am trying to run a rather large mesh computation with SU2. The mesh counts 170M cells. I managed to run it with the native SU2 mesh format with 480 cores but the preprocessing step took 90 minutes with a huge load on the file system impacting all the other users of the cluster. To reduce the load, I was thinking about using the CGNS mesh file format. However the preprocessing step fills all the RAM memory available and the job fails. All the setup being identical. . By reducing the number of cells, I am able to run with the CGNS file format. Is it a common behavior with the CGNS file format?. **Hardware and software :**; - OS: Linux Red Hat ELS 6.5; - Nodes: Intel Xeon Ivy bridge; - C++ compiler and version: intel/2018.0.1; - MPI implementation and version: intelmpi/2018.0.1; - SU2 Version: v7.2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1378:242,load,load,242,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378,2,['load'],['load']
Performance,"**SOLVED** see edit. Hello! I seem to remember that it used to be possible to get angle of attack in the history file? Is this still possible? I would like to be able to just pull the angle of attack out of the history file, along with the aero coeffs.; Context:; I have looked through the custom output document and the reference config file, and (perhaps I am secretly blind), but there does not seem to be a simple output group for it.; Reason I need it: performing analysis for fixed Cl, so angle of attack is useful information. At the moment I am getting probed data:; ```; CUSTOM_OUTPUTS='m_vel_x : Macro{VELOCITY_X};\; m_vel_y : Macro{VELOCITY_Y};\; vel_x1: Probe{$m_vel_x}[-15, -15];\; vel_y1: Probe{$m_vel_y}[-15, -15]'; ```; And just getting the tan(y/x) of the probed values for angle. This works well enough.; The other option I have is stripping the angle of attack out of the forced breakdown file, would prefer to not do, but can. EDIT:. **It can be pulled out of line 2 of flow.meta**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2138#issuecomment-1780159397:458,perform,performing,458,https://su2code.github.io,https://github.com/su2code/SU2/issues/2138#issuecomment-1780159397,2,['perform'],['performing']
Performance,", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 207, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 375, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\optimize.py"", line 261, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 140, in __init__; self._update_fun(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 233, in _update_fun; self._update_fun_impl(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 137, in update_fun; self.f = fun_wrapped(self.x); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 134, in fun_wrapped; return fun(np.copy(x), *args); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""C:\SU2\bin\SU2\opt\project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""C:\SU2\bin\SU2\opt\project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""C:\SU2\bin\SU2\eval\design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""C:\SU2\bin\SU2\eval\design.py"", line 244, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""C:\SU2\bin\SU2\eval\functions.py"", line 118, in function; func_out = state['FUNCTIONS'][func_name]; KeyError: 'INVERSE_DESIGN_PRESSURE' ; ```. SU2 version - 7.2.0 ; OS - Windows-11. I have also tried the latest version 7.3.1 on a Linux machine, I get the same error. Please help me understand this error and fix it. Thanks in advance. ; </div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1725:1812,optimiz,optimize,1812,https://su2code.github.io,https://github.com/su2code/SU2/issues/1725,1,['optimiz'],['optimize']
Performance,", please ?. Best. Here is my definition file.; ```; Bootstrap: docker; From: ubuntu:18.04; ; %post; apt-get -y update; apt-get -y upgrade; apt-get -y install python3 python3-pip git build-essential autoconf openmpi-bin openmpi-common libopenmpi-dev m4 gfortran swig vim; pip3 install mpi4py numpy scipy matplotlib; git clone --depth=1 https://github.com/su2code/SU2; cd SU2; mkdir SU2_Install; autoreconf -i; ./bootstrap; export CXXFLAGS=""-O3 -Wall""; python3 preconfigure.py --enable-autodiff --enable-mpi --enable-PY_WRAPPER --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx --prefix=$PWD/SU2_Install; make -j 4 install; make clean; cd ..; pip3 install tensorforce[tf]; git clone https://github.com/tensorforce/tensorforce.git; cd tensorforce/; git checkout major-revision-final; pip3 install -e .; ; %runscript; exec /SU2/bin/$1 $2 ; ```; The error is:; ```; make[3]: Entering directory '/SU2/SU2_BASE/SU2_PY/pySU2'; /bin/bash: python: command not found; swig -DHAVE_MPI -Wall -I/usr/include/python3.6m -I/usr/include/python3.6m -I/root/.local/lib/python2.7/site-packages/mpi4py/include -I/mpi4py/include -I/Library/Python/2.7/site-packages/mpi4py/include -outdir ./ -o SU2_APIPYTHON_wrap.cxx -c++ -python /SU2/SU2_BASE/../SU2_PY/pySU2/pySU2.i ; /SU2/SU2_BASE/../SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; Makefile:532: recipe for target 'SU2_APIPYTHON_wrap.cxx' failed; make[3]: *** [SU2_APIPYTHON_wrap.cxx] Error 1; make[3]: Leaving directory '/SU2/SU2_BASE/SU2_PY/pySU2'; Makefile:525: recipe for target 'all' failed; make[2]: *** [all] Error 2; make[2]: Leaving directory '/SU2/SU2_BASE/SU2_PY/pySU2'; Makefile:441: recipe for target 'install-recursive' failed; make[1]: *** [install-recursive] Error 1; make[1]: Leaving directory '/SU2/SU2_BASE'; Makefile:13: recipe for target 'install-SU2_BASE' failed; make: *** [install-SU2_BASE] Error 2; FATAL: failed to execute %post proc: exit status 2; FATAL: While performing build: while running engine: exit status 255; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-515298427:2199,perform,performing,2199,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-515298427,1,['perform'],['performing']
Performance,"---------- Performance Summary --------------------------; Simulation totals:; Cores: 8 | DOFs/point: 6 ; Points/core: 10428.1 | Ghost points/core: 2045.25 ; Wall-clock time (hrs): 0.153299 | Core-hrs: 1.22639 . Preprocessing phase:; Preproc. Time (s): 2.69291 | Preproc. Time (%): 0.487956 . Compute phase:; Compute Time (s): 385.71 | Compute Time (%): 69.8909 ; Iteration count: 560 | Avg. s/iter: 0.688769 ; Core-s/iter/Mpoints: 55.2191 | Mpoints/s: 0.144877 . Output phase:; Output Time (s): 163.472 | Output Time (%): 29.6211 ; Output count: 112 | Avg. s/output: 1.45957 ; -------------------------------------------------------------------------; ```; Note that the iteration count is the total number of all inner iterations. 30% of the time is spend in the output routine. That may sound like a lot, but lets take a look at the second case, where I still call the output routines, but disabled the writing of any files. ```; -------------------------- Performance Summary --------------------------; Simulation totals:; Cores: 8 | DOFs/point: 6; Points/core: 10428.1 | Ghost points/core: 2045.25; Wall-clock time (hrs): 0.112822 | Core-hrs: 0.902578. Preprocessing phase:; Preproc. Time (s): 3.84826 | Preproc. Time (%): 0.947474. Compute phase:; Compute Time (s): 399.446 | Compute Time (%): 98.347; Iteration count: 560 | Avg. s/iter: 0.713297; Core-s/iter/Mpoints: 57.1855 | Mpoints/s: 0.139896. Output phase:; Output Time (s): 2.86557 | Output Time (%): 0.705527; Output count: 112 | Avg. s/output: 0.0255854; Restart Aggr. BW (MB/s): 0 | MB/s/core: 0; -------------------------------------------------------------------------; ``` ; You can see that now the time spend in the output routines (including gathering all data, partitioning and sorting) just takes 0.7% of the overall time. Its not nothing, but roughly one order of magnitude smaller than one iteration of the solver. . I also compared it to the current develop using callgrind on a similar case and for both versions the num",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-535018704:1246,Perform,Performance,1246,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-535018704,1,['Perform'],['Performance']
Performance,"-------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid. ----------------------- Volumetric grid deformation ---------------------; Performing the deformation of the volumetric grid. # FGMRES residual history. # Residual tolerance target = 4.14044e-11. # Initial residual norm = 15.8102. ```; 0 1; 50 2.17385e-06; 100 1.08998e-10; ```. # FGMRES final (true) residual:. # Iteration = 105: |res|/|res0| = 3.50764e-11. Non-linear iter.: 1/1. Linear iter.: 105. Min. area: 4.1019e-08. Error: 5.54565e-10. ----------------------- Write deformed grid files -----------------------; Merging grid connectivity.; Merging grid coordinates.; Writing volume mesh file.; Writing surface mesh file.; Writing .su2 file.; Adding any FFD information to the SU2 file. Completed in 1.039217 seconds on 1 core. ------------------------- Exit Success (SU2_DEF) ------------------------. [image]https://cloud.githubusercontent.com/assets/5167760/9294056/7be9439a-440f-11e5-862f-742246ef1565.png; SU2_DEF: output when deforming with all markers included:. ------------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid.; No surface deformation (scaling, rotation, or translation). ----------------------- Volumetric grid deformation ---------------------; Performing a translation of the volumetric grid.; Translational displacement: (1, 0, 0). ----------------------- Write deformed grid files -----------------------; Merging grid connectivity.; Merging grid coordinates.; Writing volume mesh file.; Writing surface mesh file.; Writing .su2 file.; Adding any FFD information to the SU2 file. Completed in 0.716938 seconds on 1 core. as far as I can tell the regression test failure is the same as for the current develop branch; I'll update this pull request whenever that is resolved. —; Reply to this email directly or view it on GitHubhttps://github.com/su2code/SU2/pull/187#issuecomment-131578218.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-132065067:2673,Perform,Performing,2673,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-132065067,2,['Perform'],['Performing']
Performance,"-02; 3 13 2.134986E-05 1.958707E-02; 4 24 2.134983E-05 1.958709E-02; 5 35 2.134980E-05 1.958711E-02; 6 46 2.134976E-05 1.958720E-02; 7 54 2.134978E-05 1.958710E-02; 8 65 2.134975E-05 1.958720E-02; 9 76 2.134973E-05 1.958720E-02; 10 87 2.134973E-05 1.958720E-02; 11 98 2.134970E-05 1.958720E-02; 12 104 2.134968E-05 1.958720E-02; 13 115 2.134967E-05 1.958720E-02; Traceback (most recent call last):; File ""shape_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line 79, in direct; SU2_CFD(konfig); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 88, in CFD; run_comma",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/170:1692,optimiz,optimize,1692,https://su2code.github.io,https://github.com/su2code/SU2/issues/170,2,['optimiz'],['optimize']
Performance,"-images.githubusercontent.com/21182966/28308831-b937bf76-6ba7-11e7-9108-e8a2ab959b74.png). Then I noticed a difference in SENS_GEO (which is the second term of the upper equation, right?) between compressible and incompressible. . ![image](https://user-images.githubusercontent.com/21182966/28310143-bb28c42a-6bab-11e7-8c14-8409b6b12027.png). So if the scale is adjusting current step size the step of dC and SENS_GEO represents the second term, then the SENS_GEO would change when the scale is changed. But this is not the case for incompressible and compressible. . In short, the only noticeable change, due to scaling, occurs in deformation folder of DSN_002. But this is after the optimization step, which is really confusing. Scaling adjusts the current step size and because it can not find a sufficient decrease it is halving the dv_value. But then one should expect different values in the adjoint folder for different scale factors, right?. I hope you can use this information and can tell me whether it is a correct behavior of the optimizer. I should also note that I did not make use of constraints, just as in the test case. I read that the optimizer will switch from optimization procedure. I think this should not matter because of the test case. . I attached also the configure files (compressible (working, scale= 0.01) and incompressible (not working, scale =0.01)) and the mesh file, which is in both cases the same file. [compressible_cfg.txt](https://github.com/su2code/SU2/files/1155421/compressible_cfg.txt); [incompressible_cfg.txt](https://github.com/su2code/SU2/files/1155427/incompressible_cfg.txt); [mesh_300_su2.txt](https://github.com/su2code/SU2/files/1155430/mesh_300_su2.txt). I hope I provide enough information so that one can clarify the behavior of the optimizer. I also appreciate if one can tell me which variables have to be kept in mind. I really want to learn from this and if more information is needed, I really do not mind to provide it. Many thanks in adv",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-316018103:3553,optimiz,optimizer,3553,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-316018103,2,['optimiz'],['optimizer']
Performance,". Note: if you make any changes to this PR yourself, they will take precedence over the rebase. ---. [//]: # (dependabot-end). Bumps [actions/cache](https://github.com/actions/cache) from 3 to 4.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update action to node20 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li>feat: save-always flag by <a href=""https://github.com/to-s""><code>@​to-s</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:1117,cache,cache,1117,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,".0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment var",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5787,cache,cache,5787,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,".05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05)]. Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/usr/local/bin/shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in _minimize_slsqp; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in <listcomp>; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in functio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:3400,optimiz,optimize,3400,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['optimiz'],['optimize']
Performance,".3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:4912,cache,cache,4912,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,".5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5912,cache,cache,5912,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,".dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e94",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6765,cache,cache,6765,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"//github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5293,cache,cache,5293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"//github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-auto",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8521,cache,cache,8521,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"/21182966/28308831-b937bf76-6ba7-11e7-9108-e8a2ab959b74.png). Then I noticed a difference in SENS_GEO (which is the second term of the upper equation, right?) between compressible and incompressible. . ![image](https://user-images.githubusercontent.com/21182966/28310143-bb28c42a-6bab-11e7-8c14-8409b6b12027.png). So if the scale is adjusting current step size the step of dC and SENS_GEO represents the second term, then the SENS_GEO would change when the scale is changed. But this is not the case for incompressible and compressible. . In short, the only noticeable change, due to scaling, occurs in deformation folder of DSN_002. But this is after the optimization step, which is really confusing. Scaling adjusts the current step size and because it can not find a sufficient decrease it is halving the dv_value. But then one should expect different values in the adjoint folder for different scale factors, right?. I hope you can use this information and can tell me whether it is a correct behavior of the optimizer. I should also note that I did not make use of constraints, just as in the test case. I read that the optimizer will switch from optimization procedure. I think this should not matter because of the test case. . I attached also the configure files (compressible (working, scale= 0.01) and incompressible (not working, scale =0.01)) and the mesh file, which is in both cases the same file. [compressible_cfg.txt](https://github.com/su2code/SU2/files/1155421/compressible_cfg.txt); [incompressible_cfg.txt](https://github.com/su2code/SU2/files/1155427/incompressible_cfg.txt); [mesh_300_su2.txt](https://github.com/su2code/SU2/files/1155430/mesh_300_su2.txt). I hope I provide enough information so that one can clarify the behavior of the optimizer. I also appreciate if one can tell me which variables have to be kept in mind. I really want to learn from this and if more information is needed, I really do not mind to provide it. Many thanks in advance!. Floris van der Schuur",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-316018103:3665,optimiz,optimizer,3665,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-316018103,6,['optimiz'],"['optimization', 'optimizer']"
Performance,"/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dep",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9622,cache,cache,9622,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:2781,perform,performance,2781,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['perform'],['performance']
Performance,"/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redire",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4478,cache,cache,4478,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"/h2>; <ul>; <li>Update action to node20 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li>feat: save-always flag by <a href=""https://github.com/to-s""><code>@​to-s</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:1569,Cache,Cache,1569,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Cache'],['Cache']
Performance,"/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <bl",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:5091,cache,cache,5091,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"/summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.de",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5654,cache,cache,5654,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a hr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4731,cache,cache,4731,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"0.27 and the Cd is negative. Here follows a summary of what I have done. I have used several (multiblock structured) meshes:; - Gmsh (1M cells), SU2 and CGNS format; - ICEM (10M cells), CGNS format. At the preprocessing stage when computing the projection area of the EBW in the z-plane, I noticed that the meshes generated by Gmsh gave a wrong projection (~30 m2 instead of ~40 m2!).; I increased the height of the first cell in the boundary layer (which was set to match y+ ~ 1) and the problem disappeared when y+ got close to 30. Of course, this mesh is not usable without wall functions...; However, it does not seem to be the only problem since:; - the ICEM mesh does not converge to the expected value of Cl; - a colleague ran both (Gmsh and ICEM) meshes with identical settings on the commercial solver CFD++ and got the expected results (Cl = [0.4;0.5]). I also tried to tune these different numerical parameters, without success:; - ROE (2nd order with Vankatakrishnan/Vankatakrishnan-Wang limiter) and JST numerical schemes; - Green-Gauss or Weighted Least Square for gradients; - LU_SGS and ILU linear solver preconditionners. To make sure that SU2 was correctly compiled, I also:; - ran those simulations on SU2 v6.0.0 and v4.3.0, both compiled on Linux. I got the same results in both cases; - ran the Onera M6 test case provided with SU2; - created the same mesh that I used for the EBW with my Gmsh script but around the Onera M6 (I just changed the height of the first cell which is smaller for the M6 than for my wing). I recovered the expected results. Finally, I also ran the case with the Euler equations, on the EBW meshed with Gmsh, and recovered the expected results. In summary, I have tried several meshes from different software, with different numerical parameters on different SU2 versions, but always got bad results when solving RANS equations.; Particularly, the Gmsh mesh preprocessing on SU2 gave a bad z-projection of the EBW.; However, the same meshes gave converge",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533:1276,tune,tune,1276,https://su2code.github.io,https://github.com/su2code/SU2/issues/533,1,['tune'],['tune']
Performance,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:3218,Optimiz,Optimization,3218,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,2,"['Optimiz', 'optimiz']","['Optimization', 'optimization']"
Performance,"05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05)]. Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/usr/local/bin/shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in _minimize_slsqp; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in <listcomp>; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:3572,optimiz,optimize,3572,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['optimiz'],['optimize']
Performance,"1. & 2. I believe I have addressed these comments in my subsequent commits. ; 3. I will need some time to look into this, but it would be orthogonal to what was done in this work.; 4. This is a trivial change, and I'll be happy to make it when single precision support is added. The JIT features support both single and double precision.; 5. Could you suggest a RANS case for me to run to check performance?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/543#issuecomment-413024928:395,perform,performance,395,https://su2code.github.io,https://github.com/su2code/SU2/pull/543#issuecomment-413024928,1,['perform'],['performance']
Performance,"1e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:8937,cache,cache,8937,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"2-440f-11e5-8681-b68318da0ce7.png). SU2_DEF output when only ""airfoil"" marker included:. ``` c++; ------------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid. ----------------------- Volumetric grid deformation ---------------------; Performing the deformation of the volumetric grid. # FGMRES residual history; # Residual tolerance target = 4.14044e-11; # Initial residual norm = 15.8102; 0 1; 50 2.17385e-06; 100 1.08998e-10; # FGMRES final (true) residual:; # Iteration = 105: |res|/|res0| = 3.50764e-11. Non-linear iter.: 1/1. Linear iter.: 105. Min. area: 4.1019e-08. Error: 5.54565e-10. ----------------------- Write deformed grid files -----------------------; Merging grid connectivity.; Merging grid coordinates.; Writing volume mesh file.; Writing surface mesh file.; Writing .su2 file.; Adding any FFD information to the SU2 file. Completed in 1.039217 seconds on 1 core. ------------------------- Exit Success (SU2_DEF) ------------------------; ```. ![image](https://cloud.githubusercontent.com/assets/5167760/9294056/7be9439a-440f-11e5-862f-742246ef1565.png); SU2_DEF: output when deforming with all markers included:. ``` c++; ------------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid.; No surface deformation (scaling, rotation, or translation). ----------------------- Volumetric grid deformation ---------------------; Performing a translation of the volumetric grid.; Translational displacement: (1, 0, 0). ----------------------- Write deformed grid files -----------------------; Merging grid connectivity.; Merging grid coordinates.; Writing volume mesh file.; Writing surface mesh file.; Writing .su2 file.; Adding any FFD information to the SU2 file. Completed in 0.716938 seconds on 1 core.; ```. as far as I can tell the regression test failure is the same as for the current develop branch; I'll update this pull request whenever that is resolved.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-131578218:1434,Perform,Performing,1434,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-131578218,2,['Perform'],['Performing']
Performance,"2d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9942,cache,cache,9942,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"3-450:590584] [ 0] /usr/lib/libc.so.6(+0x3bd70)[0x7f6d73811d70]; [arch-linux-hp-probook-g3-450:590584] [ 1] /usr/lib/openmpi/libmpi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/home/slimshady/UserPackages/MPICH_HOME/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. ```. The build runs on an ubuntu machine with the following details:; - OS: Ubuntu 18.04.4 LTS x86_64; - C++ compiler and version: g++, gcc 7.5.0; - MPI implementation and version: MPICH 3.3.1; - SU2 Version: v7.0.4; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000:1781,cache,cache-file,1781,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000,1,['cache'],['cache-file']
Performance,"7fffcbebfb60); Debug: Off; Modified Time: 1456; Reference Count: 1; Registered Events: (none); Request: REQUEST_INFORMATION; ALGORITHM_AFTER_FORWARD: 1; FORWARD_DIRECTION: 0. ---------------------------------------------------------------------------; FileNotFoundError Traceback (most recent call last); Cell In[9], line 5; 2 from paraflow.simulation.su2 import Su2SimulationConfig ; 4 flasher = get_flasher(""air"", ""gas""); ----> 5 sim_results = run_simulation(; 6 axial_turbo_passage,; 7 params=SimulationParams(; 8 inlet_total_state=flasher.flash(P=87909, T=276, mach_number=0.4098), ; 9 target_outlet_static_state=flasher.flash(P=108932, T=296),; 10 translation=[; 11 np.array([0.0, 266, 0.0]),; 12 None; 13 ]; 14 ),; 15 working_directory=""./simulation_out"", ; 16 id=""1"",; 17 auto_delete=True,; 18 verbose=True,; 19 # num_procs=9,; 20 cfg=Su2SimulationConfig(; 21 custom_repo_url= ""https://github.com/su2code/SU2/tree/master"",; 22 version= ""8.0.0""; 23 ); 24 ); 25 sim_results.to_file(""./simulation_out/cached.pkl""); 27 # sim_results = SimulationResult.from_file(""./simulation_out/cached.pkl""). File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/paraflow/simulation/simulation.py:21, in run_simulation(passage, params, working_directory, id, auto_delete, verbose, num_procs, cfg); 19 if isinstance(cfg, Su2SimulationConfig):; 20 from paraflow.simulation.su2 import run_su2_simulation; ---> 21 sim_results = run_su2_simulation(passage, params, working_directory, id, auto_delete, verbose, num_procs, cfg); 23 return sim_results. File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/paraflow/simulation/su2.py:161, in run_su2_simulation(passage, params, working_directory, id, auto_delete, verbose, num_procs, cfg); 158 vtu_filename = vtu_filename.replace(""."", f""_{i}.""); 160 grids += [read_vtu_data(vtu_filename)]; --> 161 eval_values = pd.read_csv(config[""CONV_FILENAME""]); 164 if auto_delete:; 165 delete_output_files(config, config_path, num_zones). File ~/miniforge3/envs/cadque",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2204:2825,cache,cached,2825,https://su2code.github.io,https://github.com/su2code/SU2/issues/2204,1,['cache'],['cached']
Performance,"9d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9743,cache,cache,9743,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8049,cache,cache,8049,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8366,cache,cache,8366,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"; 		aux = (struct.unpack('33s',data[20+(i)*33:20+(i+1)*33])[0]); 		for j in range(len(aux)):; 			if aux[j] == ""\x00"":; 				break; 		variables_names.append(aux[:j]). 	# Read data in one shoot; 	start = 20 + nvar*33; 	end = start+nvar*ndof*8; 	array = np.asfarray(struct.unpack('%dd'%(nvar*ndof),data[start:end])); 	array = array.reshape(ndof,nvar). 	# The last two values are for metadata: one int for ExtIter and 8 su2doubles.; 	# Metadata: 1 int for ExtIter and 8 doubles; 	#ncount = len(data) - nvar*ndof*8 - 4 - 64; 	ExtIter = struct.unpack('i',data[end:end+4])[0]; 	metadata = struct.unpack('8d',data[end+4:end+4+8*8]). 	# Create dictionary; 	data_file = {'names':variables_names,'data':array, 'ExtIter':ExtIter, 'MetaData':metadata}; 	return data_file. def read_restart_ascii(filename):; 	""""""; 	; 	""""""; 	infile = open(filename, 'r'); 	header = infile.readline(); 	variables_names = header.replace(""\"""","" "").replace(""\t"", "" "").strip().split()[1:]; 	infile.close(); 	; 	array = np.loadtxt(filename, skiprows = 1). 	array = array[:,1:]; 	; 	# Create dictionary; 	data_file = {'names':variables_names,'data':array, 'ExtIter':0, 'MetaData':[]}	; 	return data_file. def write_restart_binary(data_file,filename=""solution_flow_bin.dat""):; 	"""""". 	""""""; 	fout = open(filename,'wb'). 	# The first is a magic number that we can use to check for binary files (it is the hex; 	# representation for ""SU2"").; 	fout.write(struct.pack('i', 535532)). 	# The second two values are number of variables and number of points (DoFs).; 	nvar = data_file['data'].shape[1]; 	ndof = data_file['data'].shape[0]; 	fout.write(struct.pack('i', nvar)); 	fout.write(struct.pack('i', ndof)); 	fout.write(struct.pack('i', 1)); 	fout.write(struct.pack('i', 8)). 	# Write the variable names of the file. Note that we are adopting a; # fixed length of 33 for the string length to match with CGNS.; 	for variable_name in data_file['names']:; 		fout.write(struct.pack('33s', variable_name)); 	; 	# Write the entire data in one shoot; 	fo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528461173:2203,load,loadtxt,2203,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528461173,1,['load'],['loadtxt']
Performance,"; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:7229,cache,cache,7229,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"; File ""C:\SU2\bin\shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""C:\SU2\bin\shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 207, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 375, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\optimize.py"", line 261, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 140, in __init__; self._update_fun(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 233, in _update_fun; self._update_fun_impl(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 137, in update_fun; self.f = fun_wrapped(self.x); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 134, in fun_wrapped; return fun(np.copy(x), *args); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""C:\SU2\bin\SU2\opt\project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""C:\SU2\bin\SU2\opt\project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""C:\SU2\bin\SU2\eval\design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""C:\SU2\bin\SU2\eval\design.py"", line 244, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""C:\SU2\bin\SU2\eval\functions.py"", line 118, in function; func_out = state['FUNCTIONS'][fu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1725:1514,optimiz,optimize,1514,https://su2code.github.io,https://github.com/su2code/SU2/issues/1725,1,['optimiz'],['optimize']
Performance,"; phiR = phi.getVec(jPoint,iVar) + limiter.getVec(jPoint,iVar)*phiR;. FltVec flux = (phiL+phiR)*0.5;. for(size_t k=0; k<SIMDLEN; ++k) {; residual(iPoint[k],iVar) += flux[k];; residual(jPoint[k],iVar) -= flux[k];; }; }; ```; Note that at the end of the loop we need to de-swizzle the flux to update the multiple indexes references by iPoint and jPoint, which are now short arrays of integers (this operation can be moved to the container, akin to `getVec` but I show it here for clarity). **With SoA (aka column major storage) this code is 1.5 times slower than the scalar version.**. The reason for that is poor locality (of the spacial variety), as we loop through the number of variables and dimensions we are accessing the data in strides of nPoint, as the contiguous index is the first one so that we can perform vector read/writes when computing gradients and limiters.; With the scalar version the data for each point is contiguous which means on the first access we get whatever extra data is on the same cache line for free and subsequent accesses will be hardware prefetched since the stride is small (1 in this case). We lose all this with SoA storage. If we go back to arrays of structures (AoS, aka row major storage, basically what we have in #753) performance is only 9% worse (the code is identical). Those 9% are mostly due to increased integer arithmetic in the accesses to the data, on each call to `getVec` we resolve 4/8 row/column pairs into 1D indexes, while this calculation is vectorized, it seems to be less optimizable by compilers, for example this; ```c++; for(size_t iDim=0; iDim<nDim; ++iDim); phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; ```; gets compiled into this monstrosity; ```asm; .L13:; vpmuludq ymm0, ymm4, ymm1; vmovq xmm15, rax; vmovapd ymm6, ymm11; mov rdx, rax; vpbroadcastq ymm15, xmm15; sal rdx, 5; add rax, 1; vpaddq ymm0, ymm0, ymm2; vpsllq ymm0, ymm0, 32; vpaddq ymm0, ymm5, ymm0; vmovdqa YMMWORD PTR [rbp-240], ymm0; vpaddq ymm0, ymm3, ymm0; vmo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:8727,cache,cache,8727,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['cache'],['cache']
Performance,"; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. ------------------------ Physical Case Definition -----------------------; Input mesh file name: mesh_NACA0012_inv.su2. -------------------------- Output Information ---------------------------; The output file format is Tecplot ASCII (.dat).; Flow variables file name: flow. ------------------- Config File Boundary Information --------------------; +-----------------------------------------+; | Marker Type| Marker Name|; +-----------------------------------------+; | Euler wall| airfoil|; +-----------------------------------------+; | Far-field| farfield|; +-----------------------------------------+. ---------------------- Read Grid File Information -----------------------; Two dimensional problem.; 5233 points before parallel partitioning.; Performing linear partitioning of the grid nodes.; 10216 interior elements before parallel partitioning.; Executing the partitioning functions.; Building the graph adjacency structure.; Distributing elements across all ranks.; 2 surface markers.; +------------------------------------+; | Index| Marker| Elements|; +------------------------------------+; | 0| airfoil| 200|; | 1| farfield| 50|; +------------------------------------+; Calling ParMETIS... graph partitioning complete (1114 edge cuts).; Distributing ParMETIS coloring.; Rebalancing vertices.; Rebalancing volume element connectivity.; Rebalancing markers and surface elements.; 6403 vertices including ghost points. ; 11338 interior elements including halo cells. ; 11338 triangles.; Establishing MPI communication patterns.; Identify vertices.; Storing a mapping from global to local point index. ------------------------- Solution Postprocessing -----------------------. Error in ""void CBaselineSolver::SetOutputVariables(CGeometry*, CConfig*)"": ; ---------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-514630913:3199,Perform,Performing,3199,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-514630913,1,['Perform'],['Performing']
Performance,";. #pragma omp simd; for(size_t k=0; k<blkSz; ++k); {; coeffs[bii+k] += blk_i[k]; coeffs[bij+k] = +blk_j[k];; coeffs[bji+k] = -blk_i[k]; coeffs[bjj+k] -= blk_j[k];; }; }; ```; This is **47% faster**, which for a memory bound task is massive!; Yes, this does increase the memory footprint a bit (makes CSysMatrix 4% larger for a 3D problem) but I can get that back by sharing sparsity patterns and maps across turbulence and bulk flow (I think @talbring was already working on this in the template linear solver branch he had started). We could also parallelize the matrix updates without colouring by setting only the off-diagonal coefficients and then setting the diagonal entries to the column sum.; It turns out that this is worse (by about 10%), maybe if the matrix were symmetric (row sum) but a column sum accesses blocks very far apart. Also we want to interleave compute and load/stores as much as possible to allow the CPU pipelining magic to mask the latency of the latter (even if it looks like you can only write the block after it is computed, CPU's have all kinds of buffers that allow the next loop iteration to begin while data is in flight). **Therefore colouring is the way to go.**. _Note: With vectorized numerics we insert blocks for 4 or 8 edges into the matrix at a time, the data for those inserts will be in a slightly weird format, which will make `SparseMatrix::updateBlocks` a bit harder on the eye, more on that later._. ## MUSCL Reconstruction; The MUSCL reconstruction, characteristic of upwind schemes, is the simplest building block to show the (negative) implications of storing the data as structures of arrays (SoA) on the performance of some operations.; Here is the most basic numerics you can think of, reconstruct and average (the dummy matrix loop was to benchmark the writes this is to benchmark the reads); ```c++; void computeResidual(size_t nVar,; size_t nDim,; const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,si",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:5021,load,load,5021,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,4,"['latency', 'load']","['latency', 'load']"
Performance,"<a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:4522,cache,cache,4522,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"<nVar; ++iVar); {; FltVec phiL = 0.0;; FltVec phiR = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); {; phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; phiR -= grad.getVec(jPoint,iVar,iDim)*d_ij[iDim];; }. phiL = phi.getVec(iPoint,iVar) + limiter.getVec(iPoint,iVar)*phiL;; phiR = phi.getVec(jPoint,iVar) + limiter.getVec(jPoint,iVar)*phiR;. FltVec flux = (phiL+phiR)*0.5;. for(size_t k=0; k<SIMDLEN; ++k) {; residual(iPoint[k],iVar) += flux[k];; residual(jPoint[k],iVar) -= flux[k];; }; }; ```; Note that at the end of the loop we need to de-swizzle the flux to update the multiple indexes references by iPoint and jPoint, which are now short arrays of integers (this operation can be moved to the container, akin to `getVec` but I show it here for clarity). **With SoA (aka column major storage) this code is 1.5 times slower than the scalar version.**. The reason for that is poor locality (of the spacial variety), as we loop through the number of variables and dimensions we are accessing the data in strides of nPoint, as the contiguous index is the first one so that we can perform vector read/writes when computing gradients and limiters.; With the scalar version the data for each point is contiguous which means on the first access we get whatever extra data is on the same cache line for free and subsequent accesses will be hardware prefetched since the stride is small (1 in this case). We lose all this with SoA storage. If we go back to arrays of structures (AoS, aka row major storage, basically what we have in #753) performance is only 9% worse (the code is identical). Those 9% are mostly due to increased integer arithmetic in the accesses to the data, on each call to `getVec` we resolve 4/8 row/column pairs into 1D indexes, while this calculation is vectorized, it seems to be less optimizable by compilers, for example this; ```c++; for(size_t iDim=0; iDim<nDim; ++iDim); phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; ```; gets compiled into this monstrosity; ```asm; .L13",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:8524,perform,perform,8524,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['perform'],['perform']
Performance,"=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:3671,cache,cache,3671,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"> * Not mission critical but in the raw logs each line has some lengthy timestamp. Is it possible to get rid of that?; > ; > `2019-10-29T14:12:02.9434263Z sim_vals (computed): -1.293870, 4.141024, -0.002288, 0.008868`. I don't think so. Maybe they'll add that in the future. > * Can you say a few words about resources we get from github? #parallelcores/processes, time-per-month. 20 concurrent jobs. There is no limitation in the time-per-month for public repositories. Every job has 2 cores, 7GB of memory and 14GB of disk space. Source:; https://help.github.com/en/github/automating-your-workflow-with-github-actions/about-github-actions#usage-limits; https://help.github.com/en/github/automating-your-workflow-with-github-actions/virtual-environments-for-github-actions#supported-virtual-environments-and-hardware-resources",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806#issuecomment-547509688:384,concurren,concurrent,384,https://su2code.github.io,https://github.com/su2code/SU2/pull/806#issuecomment-547509688,1,['concurren'],['concurrent']
Performance,"> 1.How does this relate to my new PR #921? Should I close that one, since the shape optimization is going to be overhauled anyways?. @clarkpede this is going to take a while to implement (on the order of months). In the mean time, it would still be good to fix the issue you bring up in #921, if it is an easy fix. If you think the fix is going to be on the same order of time, then might not be worth investing the effort if it is going to get overhauled anyway. . As for the post-processed objective functions, I am planning on fully incorporating #913 into this work so that any variables that can be defined using the expression language, can be used as an objective function. According to that PR, the post-processing has been auto-differentiated as well, so getting gradients should be automatic as well. . @talbring I agree with all of your points. I especially want to extract the FFD functionality and expose CGeometry and CConfig functions to python. I haven't used swig before so I need to do some homework. And yes, this PR is called Shape Optimization overhaul but I am hoping the changes made here are general enough that they can be used in a plethora of other situations. If I end up being myopic in any of the refactoring, please point it out :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/923#issuecomment-607953901:85,optimiz,optimization,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607953901,2,"['Optimiz', 'optimiz']","['Optimization', 'optimization']"
Performance,"> 2, g. I follow your instruction and try to rebuil it. The size of SU2_CFD.exe reduces to 596MB. Maybe I need more optimization options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/754#issuecomment-519749680:116,optimiz,optimization,116,https://su2code.github.io,https://github.com/su2code/SU2/issues/754#issuecomment-519749680,1,['optimiz'],['optimization']
Performance,"> > Hi @rois1995 any progress? Would be very interesting to add this to develop, looking forward to using it actually.; > ; > Hi @bigfooted, unfortunately I do not have enough time/computational power to perform a proper validation. I only tried something with a NACA0021 at 17 deg and 60 deg and they were promising, at least for the DDES implementation. The SAS ones are not that good. I'll upload some post-processing as soon as I have the time to do so. Hi @rois1995, I believe there is an error or a typo in the Babu's paper in the Q_SAS source term and in turn in your implementation, which may be the reason for the poor performance in SAS results. . ![image](https://github.com/user-attachments/assets/5791d344-967a-4cc5-b512-457b7fe61435). This term changes units depending on the output of the max function, which doesn't make any sense. I believe the terms in the max function should be divided by omega^2 and k^2 instead of omega and k, respectively. Which is exactly how it is done in [https://resolver.tudelft.nl/uuid:5d23e2a6-5675-450d-bf3d-1dd40d736cae](url). I will try some of the benchmark cases in these papers when I have the time. Let me know what you think.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2447067474:204,perform,perform,204,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2447067474,2,['perform'],"['perform', 'performance']"
Performance,"> > I have a question: for each point in the mesh I am trying to compute the dot product between the velocity vector and the normal to the wall of the nearest point on the wall. How do I access such information? I've found that in the CPoint class I have the ClosestWall_Elem variable which stores the index of the closest element on a wall. However, when I try to assess the information with a number of cores greater than 2, it crashes. Moreover, to recover the normal of the element I perform a mean of the normals on the nodes of that element. Is there a structure that has the normals saved for each element of the primal grid? The part that I am referring to is from line 208 in CTransLMSolver.cpp .; > ; > There is the geometry toolbox for dot product and normal: https://github.com/su2code/SU2/blob/master/Common/include/toolboxes/geometry_toolbox.hpp just look in the code for examples, in vscode you can search for GeometryToolbox::DotProduct or GeometryToolbox::Norm. The problem is more related to the finding of the wall-normal for a point within the volume mesh, not to the computations that it will be involved in.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1429614350:488,perform,perform,488,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1429614350,1,['perform'],['perform']
Performance,> @EvertBunschoten even if the performance isn't great this is a pretty small change so I think we can merge it. Do you have time to wrap it up and add a simple regression test?. I just added a test case and tutorial under the TestCases and Tutorials repo under the same branch name. I'm also writing a short tutorial on the SU2 website repo.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-2271237145:31,perform,performance,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-2271237145,2,['perform'],['performance']
Performance,"> @bigfooted out of curiosity, how does a non-planar FFD box affect the deformation/optimization process?. When deforming a mesh, there can be mesh nodes close to the edge (planar sides) of the box that are either inside or outside of the box, depending on how you the nonplanar face ABCD is interpreted. This ambiguity can be resolved by either splitting the face into 2 triangles over a dividing line AC or BD, or by defining an average middle point and dividing the plane into 4 triangles.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1742#issuecomment-1225218421:84,optimiz,optimization,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/1742#issuecomment-1225218421,1,['optimiz'],['optimization']
Performance,"> @kursatyurt Hello, thank you so much for the lead.; > ; > Our initial scope mostly involved writing our own kernels and I did explore some libraries at the start - I was planning on using CUSP as well but my main concern was its lack of being updated to the newly compatible versions of the toolkit. cuSolver and cuBLAS do exist, but I chose to go ahead with a ""simple"" kernel implementation to have more control. I also felt that if I could keep the block size of the grid in optimal territory then they could be just as fast as those options (please do correct me if my reading of the literature or the situation was incorrect). To learn the basics, it's a good idea, but for large-scale projects, I prefer using existing libraries if possible.; Those libraries generally exploit state-of-the-art solution like mixed-precision computing. A gaming GPU is not way faster than a good CPU in double precision, but way faster in single precision, most of them have 64:1 ratio, however server class GPU have 2:1 ratio. Also when available they use vendor libraries like cuBLAS or hipBLAS. It is always nice to have you only care about connection and somebody else handle the solver as performant as possible. In future probably they will provide more and more solvers and it will be automagically works. It is kind of light-weight too, not a huge dependency like Trilinos or PETSc. ; > ; > I was not aware of Ginkgo and I will surely give it a go and try to produce some comparative results. I am currently super busy for this month and will get to working on the code with some delay.; > ; > Again, thank you for the lead!. I can test on various GPUs (P100/V100/A100 and 4070Mobile) on single node multi-gpu etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346#issuecomment-2397803409:1183,perform,performant,1183,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346#issuecomment-2397803409,2,['perform'],['performant']
Performance,"> Are you talking about shape optimization with re-meshing?; > If yes, people are already working on restart with interpolation (@jayantmukho @bmunguia ); > Otherwise, SU2 already restarts when doing shape optimization. Is restart with interpolation already in the latest repo? It would be very useful for running remeshed but roughly similar cases! Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/852#issuecomment-586816457:30,optimiz,optimization,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/852#issuecomment-586816457,2,['optimiz'],['optimization']
Performance,"> Are you talking about shape optimization with re-meshing?; > If yes, people are already working on restart with interpolation (jayantmukho bmunguia ); > Otherwise, SU2 already restarts when doing shape optimization. Yes, but also for other cases where some small modification on the geometry were made, it wouldn't be necessary to simulate from scratch, since the flow should have almost the same behavior. I modificated the @EduardoMolina's script in order to add interpolation and some other modifications. It resulted in a much faster convergence in a simulation of a 2D nozzle, with a reduction of about 1000 iterations. However, the script wrote in Python is very slow, probably rewriting it on c/c++ would give a much better performance. Pastebin of the script: [https://pastebin.com/LyWSp85U](https://pastebin.com/LyWSp85U); [SU2_initial_guess.zip](https://github.com/su2code/SU2/files/4113038/SU2_initial_guess.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/852#issuecomment-578454512:30,optimiz,optimization,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/852#issuecomment-578454512,3,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,"> Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; > ; > * I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:380,load,load,380,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665,1,['load'],['load']
Performance,"> Do I understand correctly that two gradients are always computed per iteration?; > Is there any downside to using the unweighted LS for viscous flux correction? Is the statement that this type of gradient is better for reconstruction based on your observations or is it one of those well known things?. Yes - the gradient for now is computed twice and stored separately for viscous flows with 2nd-order upwind. Could be combined into one loop eventually. It is known that weighted LSQ / GG is more accurate (see Mavriplis, ""Revisiting the Least-Squares Procedure for Gradient Reconstruction on Unstructured Meshes"" for instance). However, unweighted LSQ is known to be more robust.. so a good compromise is to use it only for the reconstruction step (which is more susceptible to robustness issues than the viscous term) and then use WLSQ or GG for all other gradients in the viscous flux/sources for accuracy. > Sometimes high CFL leads to limit-cycle oscillations of the residuals and the solution is to reduce it, is this something this controller can pick up?; > High CFL also makes the linear systems harder to solve and as Edwin pointed out _somewhere_ there is not much point going above reasonable values with weakly coupled turbulence. Do you think it would be reasonable to build in some feedback from the linear solver (e.g. it is taking too much time or did not converge -> drop the CFL)?. Yes, I would also like to couple it to the linear solver so that we can remove the need to tune that as well. Ideally the user will not need to adjust parameters. There are some things I am going to try for that..",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-531890295:1495,tune,tune,1495,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-531890295,2,['tune'],['tune']
Performance,"> Ettore, Thanks for submitting this. I thought you gave an excellent presentation at the SU2 Conference and the much better actuator disk model you and your colleagues have put together will surely be useful to many people. Thanks for participating and being a member of the SU2 Community. Please stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed….maybe next year?). Best wishes, Juan; > […](#); > On Jun 18, 2020, at 1:27 AM, SaettaE ***@***.***> wrote: Proposed Changes Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors: Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II. EttoreSaetta, lorenzorusso07, rtogna. Related Work Introduction of new options in the config. file. Introduction of an additional input file that contains the propeller data. Introduction of additional c++ functions. Addition of code lines to existing functions preserving the original actuator disk model. PR Checklist [X ] I am submitting my contribution to the develop branch. My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). [ X] My contribution is commented and consistent with SU2 style. I have added a test case that demonstrates my contribution, if necessary. I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. You can view, comment on, or merge this pull request online at: #1027 <#1027> Commit Summary Update config_template.cfg File Changes M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5) Patch Links: https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch> https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff> — You are receiving this because you are subscribed to this t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027#issuecomment-646601487:577,load,load,577,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646601487,1,['load'],['load']
Performance,"> Great! I did not run flamelet + CHT in a full optimization loop, yet. My next step is to validate gradients and add a regression test for the adjoint of flamelet + CHT.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1447237033:48,optimiz,optimization,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1447237033,1,['optimiz'],['optimization']
Performance,"> Hi @rois1995 any progress? Would be very interesting to add this to develop, looking forward to using it actually. Hi @bigfooted, unfortunately I do not have enough time/computational power to perform a proper validation. I only tried something with a NACA0021 at 17 deg and 60 deg and they were promising, at least for the DDES implementation. The SAS ones are not that good. I'll upload some post-processing as soon as I have the time to do so.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-1983515044:195,perform,perform,195,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-1983515044,1,['perform'],['perform']
Performance,"> I do not have a good grasp on the performance of each scheme. I fear that may be a much time-intensive task, particularly since these all are implicit at the moment. I'm thinking just run this test case out to convergence for each scheme then comparing convergence histories. That way if any don't converge, we know we're not grandfathering in broken cases/schemes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1885#issuecomment-1381005993:36,perform,performance,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/1885#issuecomment-1381005993,1,['perform'],['performance']
Performance,"> I don't understand the question very well. The order of the points needs to be according to the VTK hexahedron http://www.princeton.edu/~efeibush/viscourse/vtk.pdf I can't visualize where you are getting that deformation, but when using an FFD box that does not include the entire design surface you need to be careful with the continuity of the deformation to prevent creating discontinuous steps. Mmmh I see. It looks like the blade elements are extending beyond the blade surface itself and, therefore, are cut by the FFD box even if the whole geometry appears to be included withing the FFD box domain. I solved the issue by defining an user-defined fixing plane (very cool option, btw). I experienced a similar situation with an internal flow over cylinder, too.; My question was whether this behavior was mesh-dependent or FFD box-dependent. I guess it is reasonable to say that mesh elements extension beyond the body which we're optimizing is causing this, however FFD continuity allows to keep this dummy shape deformation from happening. . Secondly, I had MAX DIFF = 0 because I couldn't understand your correction properly. I had to consider the righ-hand rule third component (_thumb_) pointing inside the FFD box for each of the surfaces we establish when attaching the FFD box (_each of those defined by the points listed in FFD_DEFINITION_). Then it worked perfectly.; Still, I don't understand why for some geometries we apply what discussed in the [tutorial](https://su2code.github.io/tutorials/Species_Transport/) and here it is the opposite. At least I know what to expect and how to fix it. If you could add an alert message in the next SU2 version, that would be much appreciated. > Well, it's the F-FFD week it seems :) https://www.cfd-online.com/Forums/su2/249879-when-use-su2_def-generate-ffd-box-i-can-not-get-ffd_surface_points.html. It's sunday: is the week ending or starting? ahah I guess we both stopped counting ;); As always, thank you very much for the time you're s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025#issuecomment-1546805169:939,optimiz,optimizing,939,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025#issuecomment-1546805169,1,['optimiz'],['optimizing']
Performance,"> I have a question: for each point in the mesh I am trying to compute the dot product between the velocity vector and the normal to the wall of the nearest point on the wall. How do I access such information? I've found that in the CPoint class I have the ClosestWall_Elem variable which stores the index of the closest element on a wall. However, when I try to assess the information with a number of cores greater than 2, it crashes. Moreover, to recover the normal of the element I perform a mean of the normals on the nodes of that element. Is there a structure that has the normals saved for each element of the primal grid? The part that I am referring to is from line 208 in CTransLMSolver.cpp . There is the geometry toolbox for dot product and normal:; https://github.com/su2code/SU2/blob/master/Common/include/toolboxes/geometry_toolbox.hpp; just look in the code for examples, in vscode you can search for GeometryToolbox::DotProduct or GeometryToolbox::Norm",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1426019269:486,perform,perform,486,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1426019269,1,['perform'],['perform']
Performance,"> I think the issue is looping jSpan between 0 and nSpanDonor-1, I think it should be looped between 1 and nSpanDonor-2 (as is done in the higher level of the for loop) as the hub and shroud are handled seperately and there is no interpolation performed here. Admittedly, this is probably the area of the turbomachinery code I am most unfamiliar with. Thanks @joshkellyjak! I'll try this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2034531618:244,perform,performed,244,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2034531618,1,['perform'],['performed']
Performance,"> In principle sounds good, it will probably break lots of cases, optimization scripts and what not. We'll see, we are not leaving this inconsistent though, all or nothing. I agree.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2079#issuecomment-1631908837:66,optimiz,optimization,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/2079#issuecomment-1631908837,1,['optimiz'],['optimization']
Performance,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:483,bottleneck,bottleneck,483,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301,2,"['bottleneck', 'optimiz']","['bottleneck', 'optimization']"
Performance,"> In the early days, we thought completely removing CVariable and CNumerics would be very intrusive to change and would hurt flexibility... Over the years, I don't think that folks have really modified the CNumerics classes all that often (once you have implemented the Roe method, it is more or less done). As someone who has worked with the CNumerics classes a lot, I can say that we really don't gain much by keeping them as separate classes. On the surface, it seems like a good use of the [strategy pattern](https://sourcemaking.com/design_patterns/strategy). But from a pragmatic approach, it's not as flexible as OO purists would like you to believe. First off, if you need a new variable in the CNumerics class, you need to change both the solver class and the numerics class, since the solver class calls Setters to set the numerics variables. If you don't call the right Setters, you get a silent failure (unless you're using valgrind). The passing of variables between solver and numerics also leads to a lot of code duplication. And for many solvers (e.g. the viscous NS numerics or the source terms in the SST model) you only end up with one numerics class anyways. I also imagine there's a strong performance hit from all the Setters and copying of variables. But I haven't taken the time to check for myself. In my opinion, you could keep 80% of the current flexibility by using different functions instead of different classes. But I also think we would have to work carefully, or else we'll make the code harder to maintain.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-514020687:1211,perform,performance,1211,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-514020687,1,['perform'],['performance']
Performance,"> Just put the default definition of the function in a dynamically linked library and when you want to use a different definition of this function, just point your library path to your custom library in e.g. your testcases directory. Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; - I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; - BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; - Now, switching between my custom BC types and the standard ones only requires to edit the config file. As I understand,; - Dynamically loading a library specified in the config file at runtime is easy. ""dlopen"" is there, and possibly more sophisticated libraries?; - The issue is that there is no way to ""select"" the new BC because it was not known at compile-time.; - Most of the code is built around the assumption of ""knowing things"" at compile time. So a series of if statements checking the setting in the config file was the way to go. If the setting in the config says EULER; The Euler BC gets picked up. But what if it says Custom_EULER?. I got distracted by some other stuff. But here is the thing:; - All BCs should inherit from a Base Class (Assuming BCs are classes to begin with); - The selection mechanism will rely on the custom BC class registering itself to a Factory automatically.; - Through the magic of templates and macro expansion, it's possible to easily add the custom BC to the map of known BCs (Yet to be implemented). If this interests you and if you think there is a decent chance of incorporating this design into the code, please let me know. I will give this a higher priority :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421:600,load,load,600,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421,2,['load'],"['load', 'loading']"
Performance,"> Method described below.; > No config options needed.; > Takes about a minute to interpolate an 8M node mesh to a 70M mesh on 1000 cores.; > May or may not add OpenMP to this which would improve scalability.; > Restarts are read twice for RANS problems, which is not great for this type of feature... This is a great addition, I am now doing this outside of SU2 with some python code, but having this native in SU2 is really great! I haven't looked at the details yet, but I guess the assumption is that the geometry stay the same, we only have a finer mesh? Also, the 'restarts are read twice for RANS' is that a general issue when having additional solvers (like heat, scalar, nemo)?; Last thing (for now): Does it work when using an inlet.dat boundary file?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1277#issuecomment-830808518:196,scalab,scalability,196,https://su2code.github.io,https://github.com/su2code/SU2/pull/1277#issuecomment-830808518,1,['scalab'],['scalability']
Performance,"> So modifying the gradient + residual is an improvement and it's just the normals that cause issues? Or the change to the residual is also problematic?. The modification of the Green-Gauss gradients only is working correctly. If I take the normal velocity on the symmetry plane as a performance indicator, then I observe that there is a mean (or maximum) discrepancy $\Delta V$ for develop, which reduces to less than $0.5 \Delta V$ for the new GG.; [edit: additionally, the convergence behavior does not deteriorate for the GG modification]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194#issuecomment-1888699276:284,perform,performance,284,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194#issuecomment-1888699276,1,['perform'],['performance']
Performance,"> Thanks for pointing that out. I dont think it is intentional. Maybe we can use this PR also to fix this ?. That depends on how atomic we want these PRs to be. This PR is largely a refactoring PR, and shouldn't change any underlying performance. But adding extra calculations on source terms and wall conditions might change the performance of the code. The two changes are completely compatible, so combining them wouldn't be hard. Nevertheless, I propose we keep these changes separate, so that the purpose of each PR is clear and easy to see. In my mind, two small PRs are easier to check and review than one large PR. @talbring @economon What do you think? One big PR or two small PRs?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626#issuecomment-458177675:234,perform,performance,234,https://su2code.github.io,https://github.com/su2code/SU2/pull/626#issuecomment-458177675,4,['perform'],['performance']
Performance,"> Thanks for the PR! I just have a single question: Why Set_MPI_MaxLength needed to be called 2 times for periodic boundaries?; > ; > LGTM! If Travis pass, we are ready to merge.; > Eduardo. To be honest, I don't know. I just know that that:. + Without calling it twice, the max length is not initialized on some of the periodic halo nodes.; + When you do call it twice, the max length is initialized on all periodic halo nodes. Something similar happens when loading a solution from a restart file, where the solver needs to do something like this:. solver[MESH_0][FLOW_SOL]->Set_MPI_Solution(geometry[MESH_0], config);; solver[MESH_0][FLOW_SOL]->Set_MPI_Solution(geometry[MESH_0], config);. @economon Do you know why the MPI calls need to be made twice?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-463668790:460,load,loading,460,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-463668790,1,['load'],['loading']
Performance,"> The FFD is defined in a way that makes all points fail the ""point inside box"" check, we need to improve the user-friendliness of this check, try using this order of the points for ffd setting. Applying the right-hand rule to the first 4 points must point into the center of the FFD 0.0134584, 0.0087787, -0.035265, 0.0108551, 0.00980938, -0.041096, 0.00734385, 0.013199, -0.0388281, 0.0114466, 0.0124845, -0.0326164, 0.0276521, 0.0238333, -0.0393685, 0.0240801, 0.0278683, -0.0456933, 0.0203954, 0.0303584, -0.0422846, 0.0246565, 0.0271419, -0.035573). I checked but it works only for this specific mesh. When I apply the same FFD box generation for the diffuser (following the righy-hand rule), I still obtaind MAX DIFF = 0. . In [this tutorial](https://su2code.github.io/tutorials/Species_Transport/), the FFD box points ordering is counterclockwise and I always performed my optimization with this kind of FFD box. I cannot understand if this behavior is mesh dependent or it just me not understanding the way you ordered your points therefore my impossibility to replicate your FFD attachment is the correct way. Also, could this issue be the origin of this weird shape deformation? . ![image](https://github.com/su2code/SU2/assets/96534491/c2ff9f0b-26db-426e-96c9-6157e2a20891)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025#issuecomment-1546644391:867,perform,performed,867,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025#issuecomment-1546644391,2,"['optimiz', 'perform']","['optimization', 'performed']"
Performance,"> The fixed-Cl mode is not active during adjoints, the AOA is just taken from the metadata. I.e. you would propose to try to disable the delta-pressure udpdate during the adjoint for prescribed massflow? In my understanding that would result in an inconsistent gradient -> which might work good enough for optimizations but in a gradient validation I would expect significant deviations. > If something is determined iteratively, then I think it is a solution variable, [...]. So it is settled then -> I will try to give pressure-drop the same treatment as regular solution variables as mentioned in point 2. of the PR description.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1030096530:306,optimiz,optimizations,306,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030096530,1,['optimiz'],['optimizations']
Performance,"> The solution I suggested didn’t work?. I still have to check if the implementation is correct but with more than two cores the code breaks. However, I found out that the wall-normal of a volume point can be computed as the normalized gradient of the wall-distance. Does this sound correct to you? . However, there is a problem: I am using the aux variables to compute these gradients, but to compute dot(n, U) I first need n, thus I cannot compute them simultaneously. Since these computations are performed in the Preprocessing of the solvers, I was thinking to compute the normal within the FLOW_SOL preprocessing and the dot(n, U) in the TRANS_SOL preprocessing since the flow solver comes before the trans solver. Is this right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1429962062:500,perform,performed,500,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1429962062,1,['perform'],['performed']
Performance,"> There are a couple of small tweaks that need to be made to the python scripts to make sure the changes I pushed for multipoint optimizations work with this new output structure. There are also a few changes that need to be made to make sure that at the end of the fixed CL mode, the code outputs the flow state before the finite-differencing takes place.; > ; > It might be easiest if I make those changes and push them. Would that be a hassle? Should I just comment on the code and let you make the changes?. Seems like you merged this one already in #780, then modify it there I would say.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-536924652:129,optimiz,optimizations,129,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-536924652,1,['optimiz'],['optimizations']
Performance,"> There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; > I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each oper",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:54,optimiz,optimization,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696,2,['optimiz'],['optimization']
Performance,"> This looks pretty good! I think you should add a regression.; Thanks! Yeah good point, I'll work on making one. > Should an incompressible version be added as well?; Mmmm, that's a good question. I think physically for aerodynamic heating loads to be sufficiently high, you'd need to have a high enough Ma to ned the compressible solver. But maybe there are cases in the incompressible solver where you're dealing with high temperature flows and want to model the wall radiation out? Maybe this is already implemented in a more complex way?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1703#issuecomment-1179527393:241,load,loads,241,https://su2code.github.io,https://github.com/su2code/SU2/pull/1703#issuecomment-1179527393,1,['load'],['loads']
Performance,"> What if you start with the ""perturbed value"" of AoA and then set it to the correct value for the FD step?. Mhmm, I am just thinking this through. At the end of the fixed_cl part, the flow is converged to the `TARGET_CL` and is at some angle of attack `alpha`. If I wanted to start from the perturbed value and set it to the final value of `alpha`, I would have to first, converge it to the perturbed value (`alpha + 0.001`), and then perform the finite difference step back to `alpha`. This would take approximately twice the number of `ITER_DCL_DALPHA` to perform. Which isn't the end of the world, but I would like to avoid if possible. Is there a cleverer way of doing this that I am not thinking off? The problem is that we don't know the final `alpha` until the fixed_cl simulation converges.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-539575775:436,perform,perform,436,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-539575775,2,['perform'],['perform']
Performance,"> You may want to remove the string based interface since it's known to be inneficient. When replacing the string-based with index-based look-up methods, the performance improves substantially. The figure below shows the average measured evaluation time (measured with chrono library) vs the number of output variables. It's clear that using index-based look-up methods results in reduced query time, as well as improved scaling. ![scaling_nVars](https://github.com/su2code/SU2/assets/38651601/31252439-ac6e-4f1b-82d4-e13a55d54c98)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214#issuecomment-1952521226:158,perform,performance,158,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214#issuecomment-1952521226,2,['perform'],['performance']
Performance,"> `DEFINITION_DV= ( 11, 1.0 | blade | FFD_BOX, 0, 0, 0, 1.0, 1.0, 1.0 )`. This constrains the control point to move in a direction such that `dx = dy = dz` since the `DV_VALUE` would be applied to all directions equally. It will also project the adjoint gradients along that direction. . If you specify it as 3 different DVs, they will have three different `DV_VALUE`s, one for each direction. The gradients would be projected in each direction individually, giving the optimizer more freedom to move the point.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/977#issuecomment-628737617:470,optimiz,optimizer,470,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-628737617,1,['optimiz'],['optimizer']
Performance,> miliar with cygwin but maybe you compiling with debug options (-g) ? What optimization level are you using?. I don't use any build optimizations particularly at all. I'll check it and try to add some optimizations as your instruction. Thank you.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/754#issuecomment-519737534:76,optimiz,optimization,76,https://su2code.github.io,https://github.com/su2code/SU2/issues/754#issuecomment-519737534,3,['optimiz'],"['optimization', 'optimizations']"
Performance,">3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6561,cache,cache,6561,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,">3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:8109,cache,cache,8109,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,">; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update action to node20 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li>feat: save-always flag by <a href=""https://github.com/to-s""><code>@​to-s</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:1303,cache,cache,1303,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"></p>; <blockquote>; <h2>v3.0.0</h2>; <ul>; <li>; <p>This change adds a minimum runner version(node12 -&gt; node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via <a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and h",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1233,cache,cache,1233,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,">@bmunguia ; > @EduardoMolina and I have discussed this over the past few weeks and are also in favor of using an external library. I don't have a strong opinion on the library we choose, but he seems to be in favor of [PETSc](https://www.mcs.anl.gov/petsc/) from ANL, which has a 2-clause BSD license and is used by ADflow (formerly SUmb), among other solvers. Eduardo could probably provide more details.; > ; > Another one that's come up in our discussions is [HYPRE](https://computation.llnl.gov/projects/hypre-scalable-linear-solvers-multigrid-methods) from LLNL which has a GNU LGPL. >@juanjosealonso ; >(...) While PETSc is a wonderful library (and parallel), I would hesitate to use it as the solution for the problem that we are trying to solve: it is not the easiest thing to compile and it is most definitely not lightweight. If one also wanted to replace Krylov-space solvers and preconditioners in SU2 the PETSc might make more sense….but it still forces the developer to conform to their view of the world (including matrix setup and decomposition). (...). >@erangit; >I also support external libraries usage (no need to repeat the many advantages as it is well described above) but I think we should be very wary of portability issues. For instance in SUMB, PETSc was used for the Krylov solvers and more. While indeed it worked well and in parallel mode, each new implementation was a nightmare. LAPACK/BLAS package, on the other hand, provides a much easier implementation experience. Certainly, this is not the only consideration but it should be taken into account. Currently, resulting from the significant contributions of the members of this developers group, SU2 implementation works like a charm. I think we should strive to conserve this feature, especially if we aim at attracting more users and developers into the community. (...). >@vdweide; >(...) @bmunguia and @EduardoMolina, what type of application did you have in mind for PETSc? The only thing I can think of is a f",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460853218:515,scalab,scalable-linear-solvers-multigrid-methods,515,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460853218,2,['scalab'],['scalable-linear-solvers-multigrid-methods']
Performance,">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6058,cache,cache,6058,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"@BBArrosDias : thanks for the question. At the moment, there are no plans for Cmake. If this is a major pain point for the community (or if someone in the community has already added it and would like to contribute it), we are happy to consider it. Overall, folks seem fairly pleased with how autotools is performing on many different platforms.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/646#issuecomment-459997523:306,perform,performing,306,https://su2code.github.io,https://github.com/su2code/SU2/issues/646#issuecomment-459997523,1,['perform'],['performing']
Performance,"@Cristopher-Morales any things left for this PR? If PASSIVE_SCALAR is changed to SPECIES_TRANSPORT, and if you have confirmed that the nondimensionalization works correctly, then from my side it will be good to go. You can put a tutorial and regression test for the adjoint optimization in the next PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1762#issuecomment-1264289112:274,optimiz,optimization,274,https://su2code.github.io,https://github.com/su2code/SU2/pull/1762#issuecomment-1264289112,1,['optimiz'],['optimization']
Performance,"@EduardoMolina and I have discussed this over the past few weeks and are also in favor of using an external library. I don't have a strong opinion on the library we choose, but he seems to be in favor of [PETSc](https://www.mcs.anl.gov/petsc/) from ANL, which has a 2-clause BSD license and is used by ADflow (formerly SUmb), among other solvers. Eduardo could probably provide more details. Another one that's come up in our discussions is [HYPRE](https://computation.llnl.gov/projects/hypre-scalable-linear-solvers-multigrid-methods) from LLNL which has a GNU LGPL.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459562945:493,scalab,scalable-linear-solvers-multigrid-methods,493,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459562945,1,['scalab'],['scalable-linear-solvers-multigrid-methods']
Performance,@EvertBunschoten even if the performance isn't great this is a pretty small change so I think we can merge it.; Do you have time to wrap it up and add a simple regression test?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-2269672071:29,perform,performance,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-2269672071,2,['perform'],['performance']
Performance,"@Mick7: yep, I’ll look at that next. You may have noticed that the other routines for Loading and preparing adjacency are now general for any mesh reader, so all we need is to move the reader for the ASCII format into its own class. . @pcarruscag: there is at least one simple stretching function I have in some old code I can put in. Other elements would also be nice. It’s easy to cut the quads into tris (I have the same implementation for this in a python script) and hexas into tets. Might wait for a compelling need to add these features though, but I have no doubt we’ll add them",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-524179517:86,Load,Loading,86,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-524179517,1,['Load'],['Loading']
Performance,"@TobiKattmann ; I have added `README.md` to the testcase folder. Let me know what you think. I'm not exactly sure what I should write as expected outcome for discrete adjoint solver. Ultimately, it is used for shape optimization, so getting a better objective function is what I need to confirm but I cannot run a complete shape optimization in the test case with only a few iterations. What do you usually look for to confirm adjoint calculation is working as expected?. > I would highly appreciate if you add a little `README.md` to your testcase folder and explain a bit what that testcase is meant to showcase and what one is meant to see/look out for/expected outcome and just a hint how to use it (if that is explained in the cfg then just mention that). This will help down the road for anyone that wonders or has to fix a failing reg test and wonders what this is all about. You might also mention the PR number 1329 in there. Doesn't need to be a long text.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-894628152:216,optimiz,optimization,216,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894628152,2,['optimiz'],['optimization']
Performance,@aeroamit I think the code should be performing. I think running your tests on the axisymmetric branch would helpful to get the effort pushed in :),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1063#issuecomment-736696152:37,perform,performing,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-736696152,1,['perform'],['performing']
Performance,"@bigfooted @economon and @pcarruscag . I created separate repo to demonstrate what I'm after in the simplest way possible: [FoamScience/AutoRegistering-Cpp-Classes](https://github.com/FoamScience/AutoRegistering-Cpp-Classes/commits/master). > If you're going to check the code, check CSolver first, then CEulerSolver ... - Commit FoamScience/AutoRegistering-Cpp-Classes@20ca601 implements the concept for a single Factory.; - (Make-believe) Standard solver classes are compiled to a library; - A (Make-beleive) Custom solver class is compiled to its own shared library; - By default, the make program knows only about CEulerSolver (from standard solvers lib); - But if you pass in a library name (eg. libCCustomSolvers.so), it gets loaded, symbols pulled and the registration map for CSolver gets updated with the new Solver automatically. - But it would bloat the code if things went this way, so commit FoamScience/AutoRegistering-Cpp-Classes@380c052 isolates self-registration code into 3 macros to:; - Declare the registration map and associated members; - Define and initialize registration-related members on the base class; - Register a class. If you only care about the interface and not how the thing is implemented, commit 380c052 is your target.; I took care to document the important parts of the code, so, please, dig in and let me know what you think. At this point, integrating this with SU2 (and at what parts, and when) is your call but If you decide to do so, l will help.; > And yes, I wrote my own build script so I can have direct control over the compiler and the linker. **One last note: I used ""dlopen"", so you will have to compile the code on Linux I suppose.**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680962672:732,load,loaded,732,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680962672,2,['load'],['loaded']
Performance,"@bigfooted out of curiosity, how does a non-planar FFD box affect the deformation/optimization process?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1742#issuecomment-1224998077:82,optimiz,optimization,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/1742#issuecomment-1224998077,1,['optimiz'],['optimization']
Performance,"@economon I was envisioning something similar to the TestCases folder. With v&v cases grouped according to what they are testing. Something along the lines of: . 1) Inviscid Simulations: ; a) 2D Inviscid bump; b) 2D oblique shocks interaction; c) ...; 2) RANS simulations: ; a) Flatplate; b) NACA0012; c) ...; 3) Unsteady simulations:; a) Square Cylinder; b) ...; 4) Turbomachinary: ; a) ... And so on. Each of the directories would have sub-directories for different mesh sizes, with configuration files for each mesh level that have optimized parameters for best results. So for example if we are talking about the NACA0012 case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:535,optimiz,optimized,535,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,2,['optimiz'],['optimized']
Performance,"@economon Thanks for your answer. I have a couple more queries if you won't mind. When you say that the objective functions are not defined for the problem do you mean that I cannot solve the adjoint equations with that objective or just not yet use it with the shape optimization script as that data is not in the history output?. Secondly, how would I see how an objective function is defined? I have tried to see definitions for ENTROPY_GENERATION, TOTAL_PRESSURE_LOSS, KINETIC_ENERGY_LOSS, etc but couldn't find through a keyword search. Although it is solving the adjoint equations with these objectives, I don't know what they really mean. Third, I see there is an obj function: CUSTOM_OBJFUNC. How do I define a custom objective function in SU2?. Thanks,; Aman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889#issuecomment-606328715:268,optimiz,optimization,268,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-606328715,1,['optimiz'],['optimization']
Performance,"@economon if I am not wrong, you used FFD with periodic boundary conditions for the adjoint optimization of the unducted fan. It might be that with the subsequent developments on that part of the code some generality has been lost there. Any comment on that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/210#issuecomment-153518310:92,optimiz,optimization,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/210#issuecomment-153518310,1,['optimiz'],['optimization']
Performance,"@erangit I got the multipoint optimization to work with multiple mesh files. For a well posed optimization, the surfaces that can be deformed (for example the wing) should be same, and the FFD boxes have to be identical. Since the meshes are likely unstructured, you might not get the exact same discretization on the surface, which is fine. As long as the FFD box definition is the same, identical movements in the FFD control points should result in similar surface deformations. Just the marker definitions need to be consistent.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-532003485:30,optimiz,optimization,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-532003485,2,['optimiz'],['optimization']
Performance,"@fpalacios, @economon - There's a comment in the config files that says that 'OBJECTIVE_FUNCTION' sets the objective function for the optimizer - however it seems that this option is only used with controlling the adjoint solver and output, and whatever the user specifies there will be overwritten by the optimizer. I put an alternative comment in the config_templates here; I can either revert that back or change the comment in all the config files (I have a script).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-296410309:134,optimiz,optimizer,134,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-296410309,2,['optimiz'],['optimizer']
Performance,"@hlkline That's a good point about the regression tests ensuring that the v&v results will be unlikely to change. If we have the same residuals for all the test cases, it isn't a stretch to say that the final results of the v&v cases will stay the same. But sometimes the test values for the regression tests are changed during development and then we lose the guarantee. . From the viewpoint of being rigorous, I agree with the suggestion to run the v&v cases before a major release like 7.0 and also with @erangit on keeping track of the last version that they were run for. I am unsure about holding the people who add the test cases responsible for re-running them. Circumstances change, and access to resources change. That may make it hard for people to run the v&v cases. . I also think it is a good idea to have the effort be collaborative so people can add cases. My concern is about size limits that github has on repositories. Some of the mesh files are going to be massive, especially given that we want to perform grid convergence studies. We will soon be over the size limit. I am not sure about how to get around that. Suggestions would be great!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423291806:1019,perform,perform,1019,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423291806,1,['perform'],['perform']
Performance,"@jayantmukho :; I think this is a very important addition. A typical optimization case (at least in the industry) deals with very different setups (say aircraft at cruise, take-off, and landing: different flight regimes and different configurations). That way it makes sense to allow also for different mesh files, each for every point.; Nimrod Cohen who works with me has been working on that line. I don't know how far he has gone.; I shall have him posted to this PR, he might be able to contribute.; Best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-525685943:69,optimiz,optimization,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-525685943,1,['optimiz'],['optimization']
Performance,"@jayantmukho Thanks for taking the lead on that. This is long overdue ... I already talked to some people about that and the conclusion was often that we should get rid of the current python framework and rely solely on the in-memory python wrapper functionalities. From what I can tell this is also what you would suggest. I have some additional things to add here:. - We should keep in mind other things than ""just"" shape optimization problems.; - The surface parameterization should be more or less independent of all the other things, so that we can easily integrate other tools/methods. In a first step it might be a good idea to just put all the FFD stuff into a separate (c++) library with a python interface.; - As you already mentioned, I am currently working on a more general way of defining output fields and in particular also objective functions in #913. I will add more information to this PR soon. The new python implementation should, in theory, not need to know about the specific objective function, but rather just asks for the value and the (surface) gradient. ; - We have to expose more c++ classes/functions to python. Especially the config and the geometry. . Maybe I will add more stuff/ideas, but thats it for now. @clarkpede : We will probably keep most of the postprocessing stuff in c++, so don't worry about that at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/923#issuecomment-607708376:424,optimiz,optimization,424,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607708376,1,['optimiz'],['optimization']
Performance,"@jayantmukho The fix in PR in #921 is done. Whereas the shape optimization restart did not work before, it does work now, at least on the two test cases I checked. The only thing missing is a regression test, to make sure bugs like that don't happen again. So I agree that it should be merged soon while the long-term refactoring occurs. As for post-processing, the objective function calculation can be quite complex in the use-cases Beckett and I have encountered. That's why it's run as a post-processing step, rather than updated continuously during runtime. But I agree that those types of changes can be limited to the C++ side of the code, with minimal changes to the python wrappers. So it may not be relevant to the current refactoring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/923#issuecomment-607975492:62,optimiz,optimization,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607975492,1,['optimiz'],['optimization']
Performance,"@pcarruscag . a) I have done that. I get the same error.; b) Linux is the OS; c) The output of mpirun --version is; HYDRA build details:; Version: 3.2.1; Release Date: Fri Nov 10 20:21:01 CST 2017; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=/app/mpich-3.2.1' '--cache-file=/dev/null' '--srcdir=.' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=-lpthread ' 'CPPFLAGS= -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/openpa/src -I/app/setups/mpich-3.2.1/src/openpa/src -D_REENTRANT -I/app/setups/mpich-3.2.1/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. The output of mpicxx --version is. g++ (GCC) 5.5.0; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. d) The configuration of meson:. ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-tecio=false -Dwith-mpi=disabled -Denable-cgns=false --prefix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C+",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620552610:329,cache,cache-file,329,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610,1,['cache'],['cache-file']
Performance,"@pcarruscag Hi Pedro, just still want to make sure one thing, does the function the function 'LoadInletProfile' in CSolver.cpp needed to be changed? Since you didn't commit it. From the Valgrind output, a segment error occurred while reading the inletUNI.dat file. This is usually because the memory address attempted to be accessed is 0x0, which means there is a null pointer reference. The segment error occurs in the CConfig::GetInlet_Ptotal function and is due to accessing a null pointer. Maybe you can give me some suggestions and there's no need to change the version at this moment. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327#issuecomment-2241393846:94,Load,LoadInletProfile,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327#issuecomment-2241393846,1,['Load'],['LoadInletProfile']
